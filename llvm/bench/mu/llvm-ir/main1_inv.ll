; ModuleID = 'mu/llvm-ir/main1.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"%d\09%d\09%d\0A\00", align 1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main() #0 {
  %1 = alloca [3 x i32], align 4
  %2 = bitcast [3 x i32]* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false)
  %3 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 0
  %4 = sext i32 3 to i64
  call void @mu(i32* %3, i64 %4)
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 2
  %10 = load i32, i32* %9, align 4
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 %6, i32 %8, i32 %10)
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @printf(i8*, ...) #2

define void @mu(i32* %0, i64 %len.) {
  %2 = alloca [3 x i32], align 4
  %3 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %7 = load i32, i32* %6, align 4
  %shadow = alloca i64
  %out. = alloca i1
  %out.1 = alloca i1
  %out.2 = alloca i1
  %out.3 = alloca i1
  %out.4 = alloca i1
  %out.5 = alloca i1
  %out.6 = alloca i1
  %out.7 = alloca i1
  %out.8 = alloca i1
  %out.9 = alloca i1
  %out.10 = alloca i1
  %out.11 = alloca i1
  %out.12 = alloca i1
  %out.13 = alloca i1
  %out.14 = alloca i1
  %out.15 = alloca i1
  %out.16 = alloca i1
  %out.17 = alloca i1
  %out.18 = alloca i1
  %out.19 = alloca i1
  %out.20 = alloca i1
  %out.21 = alloca i1
  %out.22 = alloca i1
  %out.23 = alloca i1
  %out.24 = alloca i1
  %out.25 = alloca i1
  %out.26 = alloca i1
  %out.27 = alloca i1
  %out.28 = alloca i1
  %out.29 = alloca i1
  %out.30 = alloca i1
  %out.31 = alloca i1
  %out.32 = alloca i1
  %out.33 = alloca i1
  %out.34 = alloca i1
  %out.35 = alloca i1
  %out.36 = alloca i1
  %out.37 = alloca i1
  %out.38 = alloca i1
  %out.39 = alloca i1
  %out.40 = alloca i1
  %out.41 = alloca i1
  %out.42 = alloca i1
  %out.43 = alloca i1
  %out.44 = alloca i1
  %out.45 = alloca i1
  %out.46 = alloca i1
  %out.47 = alloca i1
  %out.48 = alloca i1
  %out.49 = alloca i1
  %out.50 = alloca i1
  %out.51 = alloca i1
  %out.52 = alloca i1
  %out.53 = alloca i1
  %out.54 = alloca i1
  %out.55 = alloca i1
  %out.56 = alloca i1
  %out.57 = alloca i1
  %out.58 = alloca i1
  %out.59 = alloca i1
  %out.60 = alloca i1
  %out.61 = alloca i1
  %out.62 = alloca i1
  %out.63 = alloca i1
  %out.64 = alloca i1
  %out.65 = alloca i1
  %out.66 = alloca i1
  %out.67 = alloca i1
  %out.68 = alloca i1
  %out.69 = alloca i1
  %out.70 = alloca i1
  %out.71 = alloca i1
  %out.72 = alloca i1
  %out.73 = alloca i1
  %out.74 = alloca i1
  %out.75 = alloca i1
  %out.76 = alloca i1
  %out.77 = alloca i1
  %out.78 = alloca i1
  %out.79 = alloca i1
  %out.80 = alloca i1
  %out.81 = alloca i1
  %out.82 = alloca i1
  %out.83 = alloca i1
  %out.84 = alloca i1
  %out.85 = alloca i1
  %out.86 = alloca i1
  %out.87 = alloca i1
  %out.88 = alloca i1
  %out.89 = alloca i1
  %out.90 = alloca i1
  %out.91 = alloca i1
  %out.92 = alloca i1
  %out.93 = alloca i1
  %out.94 = alloca i1
  %out.95 = alloca i1
  %out.96 = alloca i1
  %out.97 = alloca i1
  %out.98 = alloca i1
  %out.99 = alloca i1
  %out.100 = alloca i1
  %out.101 = alloca i1
  %out.102 = alloca i1
  %out.103 = alloca i1
  %out.104 = alloca i1
  %out.105 = alloca i1
  %out.106 = alloca i1
  %out.107 = alloca i1
  %out.108 = alloca i1
  %out.109 = alloca i1
  %out.110 = alloca i1
  %out.111 = alloca i1
  %out.112 = alloca i1
  %out.113 = alloca i1
  %out.114 = alloca i1
  %out.115 = alloca i1
  %out.116 = alloca i1
  %out.117 = alloca i1
  %out.118 = alloca i1
  %out.119 = alloca i1
  %out.120 = alloca i1
  %out.121 = alloca i1
  %out.122 = alloca i1
  %out.123 = alloca i1
  %out.124 = alloca i1
  %out.125 = alloca i1
  %out.126 = alloca i1
  %out.127 = alloca i1
  %out.128 = alloca i1
  %out.129 = alloca i1
  %out.130 = alloca i1
  %out.131 = alloca i1
  %out.132 = alloca i1
  %out.133 = alloca i1
  %out.134 = alloca i1
  %out.135 = alloca i1
  %out.136 = alloca i1
  %out.137 = alloca i1
  %out.138 = alloca i1
  %out.139 = alloca i1
  %out.140 = alloca i1
  %out.141 = alloca i1
  %out.142 = alloca i1
  %out.143 = alloca i1
  %out.144 = alloca i1
  %out.145 = alloca i1
  %out.146 = alloca i1
  %out.147 = alloca i1
  %out.148 = alloca i1
  %out.149 = alloca i1
  %out.150 = alloca i1
  %out.151 = alloca i1
  %out.152 = alloca i1
  %out.153 = alloca i1
  %out.154 = alloca i1
  %out.155 = alloca i1
  %out.156 = alloca i1
  %out.157 = alloca i1
  %out.158 = alloca i1
  %out.159 = alloca i1
  %out.160 = alloca i1
  %out.161 = alloca i1
  %out.162 = alloca i1
  %out.163 = alloca i1
  %out.164 = alloca i1
  %out.165 = alloca i1
  %out.166 = alloca i1
  %out.167 = alloca i1
  %out.168 = alloca i1
  %out.169 = alloca i1
  %out.170 = alloca i1
  %out.171 = alloca i1
  %out.172 = alloca i1
  %out.173 = alloca i1
  %out.174 = alloca i1
  %out.175 = alloca i1
  %out.176 = alloca i1
  %out.177 = alloca i1
  %out.178 = alloca i1
  %out.179 = alloca i1
  %out.180 = alloca i1
  %out.181 = alloca i1
  %out.182 = alloca i1
  %out.183 = alloca i1
  %out.184 = alloca i1
  %out.185 = alloca i1
  %out.186 = alloca i1
  %out.187 = alloca i1
  %out.188 = alloca i1
  %out.189 = alloca i1
  %out.190 = alloca i1
  %out.191 = alloca i1
  %out.192 = alloca i1
  %out.193 = alloca i1
  store i1 true, i1* %out.
  %8 = load i1, i1* %out.
  %9 = shl i32 %7, 1
  %10 = sext i32 3 to i64
  %11 = icmp slt i64 0, %10
  %12 = bitcast i64* %shadow to i32*
  %safe. = or i1 %8, %11
  %select.ptr. = select i1 %safe., i32* %6, i32* %12
  %13 = load i32, i32* %6
  %14 = sub i1 %8, true
  %15 = xor i1 %14, true
  %16 = sext i1 %14 to i32
  %17 = and i32 %16, %13
  %18 = sext i1 %15 to i32
  %19 = and i32 %18, %9
  %select.val. = or i32 %19, %17
  store i32 %select.val., i32* %select.ptr., align 4
  %20 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %21 = sext i32 3 to i64
  %22 = icmp slt i64 1, %21
  %23 = bitcast i64* %shadow to i32*
  %safe.385 = or i1 %8, %22
  %select.ptr.386 = select i1 %safe.385, i32* %20, i32* %23
  %24 = load i32, i32* %select.ptr.386, align 4
  %25 = shl i32 %24, 1
  %26 = sext i32 3 to i64
  %27 = icmp slt i64 1, %26
  %28 = bitcast i64* %shadow to i32*
  %safe.387 = or i1 %8, %27
  %select.ptr.388 = select i1 %safe.387, i32* %20, i32* %28
  %29 = load i32, i32* %20
  %30 = sub i1 %8, true
  %31 = xor i1 %30, true
  %32 = sext i1 %30 to i32
  %33 = and i32 %32, %29
  %34 = sext i1 %31 to i32
  %35 = and i32 %34, %25
  %select.val.389 = or i32 %35, %33
  store i32 %select.val.389, i32* %select.ptr.388, align 4
  %36 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %37 = sext i32 3 to i64
  %38 = icmp slt i64 2, %37
  %39 = bitcast i64* %shadow to i32*
  %safe.390 = or i1 %8, %38
  %select.ptr.391 = select i1 %safe.390, i32* %36, i32* %39
  %40 = load i32, i32* %select.ptr.391, align 4
  %41 = shl i32 %40, 1
  %42 = sext i32 3 to i64
  %43 = icmp slt i64 2, %42
  %44 = bitcast i64* %shadow to i32*
  %safe.392 = or i1 %8, %43
  %select.ptr.393 = select i1 %safe.392, i32* %36, i32* %44
  %45 = load i32, i32* %36
  %46 = sub i1 %8, true
  %47 = xor i1 %46, true
  %48 = sext i1 %46 to i32
  %49 = and i32 %48, %45
  %50 = sext i1 %47 to i32
  %51 = and i32 %50, %41
  %select.val.394 = or i32 %51, %49
  store i32 %select.val.394, i32* %select.ptr.393, align 4
  %52 = load i32, i32* %0, align 4
  %53 = and i32 %52, 1
  %54 = icmp ne i32 %53, 0
  store i1 %8, i1* %out.1
  %55 = load i1, i1* %out.1
  %in. = and i1 %55, %54
  %56 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %57 = sext i32 3 to i64
  %58 = icmp slt i64 2, %57
  %59 = bitcast i64* %shadow to i32*
  %safe.395 = or i1 %in., %58
  %select.ptr.396 = select i1 %safe.395, i32* %56, i32* %59
  %60 = load i32, i32* %select.ptr.396, align 4
  %61 = or i32 %60, 1
  %62 = sext i32 3 to i64
  %63 = icmp slt i64 2, %62
  %64 = bitcast i64* %shadow to i32*
  %safe.397 = or i1 %in., %63
  %select.ptr.398 = select i1 %safe.397, i32* %56, i32* %64
  %65 = load i32, i32* %56
  %66 = sub i1 %in., true
  %67 = xor i1 %66, true
  %68 = sext i1 %66 to i32
  %69 = and i32 %68, %65
  %70 = sext i1 %67 to i32
  %71 = and i32 %70, %61
  %select.val.399 = or i32 %71, %69
  store i32 %select.val.399, i32* %select.ptr.398, align 4
  store i1 %in., i1* %out.2
  %72 = load i1, i1* %out.1
  %73 = xor i1 %54, true
  %in.194 = and i1 %72, %73
  %74 = load i1, i1* %out.2
  %75 = or i1 %in.194, %74
  %76 = getelementptr inbounds i32, i32* %0, i64 1
  %77 = icmp slt i64 1, %len.
  %78 = bitcast i64* %shadow to i32*
  %safe.400 = or i1 %75, %77
  %select.ptr.401 = select i1 %safe.400, i32* %76, i32* %78
  %79 = load i32, i32* %select.ptr.401, align 4
  %80 = and i32 %79, 1
  %81 = icmp ne i32 %80, 0
  %82 = or i1 %in.194, %74
  store i1 %82, i1* %out.3
  %83 = load i1, i1* %out.3
  %in.195 = and i1 %83, %81
  %84 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %85 = sext i32 3 to i64
  %86 = icmp slt i64 1, %85
  %87 = bitcast i64* %shadow to i32*
  %safe.402 = or i1 %in.195, %86
  %select.ptr.403 = select i1 %safe.402, i32* %84, i32* %87
  %88 = load i32, i32* %select.ptr.403, align 4
  %89 = or i32 %88, 1
  %90 = sext i32 3 to i64
  %91 = icmp slt i64 1, %90
  %92 = bitcast i64* %shadow to i32*
  %safe.404 = or i1 %in.195, %91
  %select.ptr.405 = select i1 %safe.404, i32* %84, i32* %92
  %93 = load i32, i32* %84
  %94 = sub i1 %in.195, true
  %95 = xor i1 %94, true
  %96 = sext i1 %94 to i32
  %97 = and i32 %96, %93
  %98 = sext i1 %95 to i32
  %99 = and i32 %98, %89
  %select.val.406 = or i32 %99, %97
  store i32 %select.val.406, i32* %select.ptr.405, align 4
  store i1 %in.195, i1* %out.4
  %100 = load i1, i1* %out.3
  %101 = xor i1 %81, true
  %in.196 = and i1 %100, %101
  %102 = load i1, i1* %out.4
  %103 = or i1 %in.196, %102
  %104 = getelementptr inbounds i32, i32* %0, i64 2
  %105 = icmp slt i64 2, %len.
  %106 = bitcast i64* %shadow to i32*
  %safe.407 = or i1 %103, %105
  %select.ptr.408 = select i1 %safe.407, i32* %104, i32* %106
  %107 = load i32, i32* %select.ptr.408, align 4
  %108 = and i32 %107, 1
  %109 = icmp ne i32 %108, 0
  %110 = or i1 %in.196, %102
  store i1 %110, i1* %out.5
  %111 = load i1, i1* %out.5
  %in.197 = and i1 %111, %109
  %112 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %113 = sext i32 3 to i64
  %114 = icmp slt i64 0, %113
  %115 = bitcast i64* %shadow to i32*
  %safe.409 = or i1 %in.197, %114
  %select.ptr.410 = select i1 %safe.409, i32* %112, i32* %115
  %116 = load i32, i32* %select.ptr.410, align 4
  %117 = or i32 %116, 1
  %118 = sext i32 3 to i64
  %119 = icmp slt i64 0, %118
  %120 = bitcast i64* %shadow to i32*
  %safe.411 = or i1 %in.197, %119
  %select.ptr.412 = select i1 %safe.411, i32* %112, i32* %120
  %121 = load i32, i32* %112
  %122 = sub i1 %in.197, true
  %123 = xor i1 %122, true
  %124 = sext i1 %122 to i32
  %125 = and i32 %124, %121
  %126 = sext i1 %123 to i32
  %127 = and i32 %126, %117
  %select.val.413 = or i32 %127, %125
  store i32 %select.val.413, i32* %select.ptr.412, align 4
  store i1 %in.197, i1* %out.6
  %128 = load i1, i1* %out.5
  %129 = xor i1 %109, true
  %in.198 = and i1 %128, %129
  %130 = load i1, i1* %out.6
  %131 = or i1 %in.198, %130
  %132 = or i1 %in.198, %130
  %133 = or i1 %in.198, %130
  %134 = or i1 %in.198, %130
  %135 = or i1 %in.198, %130
  %136 = or i1 %in.198, %130
  %137 = or i1 %in.198, %130
  %138 = or i1 %in.198, %130
  %139 = or i1 %in.198, %130
  %140 = or i1 %in.198, %130
  %141 = or i1 %in.198, %130
  %142 = load i32, i32* %0, align 4
  %143 = ashr i32 %142, 1
  %144 = load i32, i32* %0
  %145 = sub i1 %141, true
  %146 = xor i1 %145, true
  %147 = sext i1 %145 to i32
  %148 = and i32 %147, %144
  %149 = sext i1 %146 to i32
  %150 = and i32 %149, %143
  %select.val.414 = or i32 %150, %148
  store i32 %select.val.414, i32* %0, align 4
  %151 = getelementptr inbounds i32, i32* %0, i64 1
  %152 = icmp slt i64 1, %len.
  %153 = bitcast i64* %shadow to i32*
  %safe.415 = or i1 %140, %152
  %select.ptr.416 = select i1 %safe.415, i32* %151, i32* %153
  %154 = load i32, i32* %select.ptr.416, align 4
  %155 = ashr i32 %154, 1
  %156 = icmp slt i64 1, %len.
  %157 = bitcast i64* %shadow to i32*
  %safe.417 = or i1 %139, %156
  %select.ptr.418 = select i1 %safe.417, i32* %151, i32* %157
  %158 = load i32, i32* %151
  %159 = sub i1 %139, true
  %160 = xor i1 %159, true
  %161 = sext i1 %159 to i32
  %162 = and i32 %161, %158
  %163 = sext i1 %160 to i32
  %164 = and i32 %163, %155
  %select.val.419 = or i32 %164, %162
  store i32 %select.val.419, i32* %select.ptr.418, align 4
  %165 = getelementptr inbounds i32, i32* %0, i64 2
  %166 = icmp slt i64 2, %len.
  %167 = bitcast i64* %shadow to i32*
  %safe.420 = or i1 %138, %166
  %select.ptr.421 = select i1 %safe.420, i32* %165, i32* %167
  %168 = load i32, i32* %select.ptr.421, align 4
  %169 = ashr i32 %168, 1
  %170 = icmp slt i64 2, %len.
  %171 = bitcast i64* %shadow to i32*
  %safe.422 = or i1 %137, %170
  %select.ptr.423 = select i1 %safe.422, i32* %165, i32* %171
  %172 = load i32, i32* %165
  %173 = sub i1 %137, true
  %174 = xor i1 %173, true
  %175 = sext i1 %173 to i32
  %176 = and i32 %175, %172
  %177 = sext i1 %174 to i32
  %178 = and i32 %177, %169
  %select.val.424 = or i32 %178, %176
  store i32 %select.val.424, i32* %select.ptr.423, align 4
  %179 = sext i32 3 to i64
  %180 = icmp slt i64 0, %179
  %181 = bitcast i64* %shadow to i32*
  %safe.425 = or i1 %136, %180
  %select.ptr.426 = select i1 %safe.425, i32* %6, i32* %181
  %182 = load i32, i32* %select.ptr.426, align 4
  %183 = shl i32 %182, 1
  %184 = sext i32 3 to i64
  %185 = icmp slt i64 0, %184
  %186 = bitcast i64* %shadow to i32*
  %safe.427 = or i1 %135, %185
  %select.ptr.428 = select i1 %safe.427, i32* %6, i32* %186
  %187 = load i32, i32* %6
  %188 = sub i1 %135, true
  %189 = xor i1 %188, true
  %190 = sext i1 %188 to i32
  %191 = and i32 %190, %187
  %192 = sext i1 %189 to i32
  %193 = and i32 %192, %183
  %select.val.429 = or i32 %193, %191
  store i32 %select.val.429, i32* %select.ptr.428, align 4
  %194 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %195 = sext i32 3 to i64
  %196 = icmp slt i64 1, %195
  %197 = bitcast i64* %shadow to i32*
  %safe.430 = or i1 %134, %196
  %select.ptr.431 = select i1 %safe.430, i32* %194, i32* %197
  %198 = load i32, i32* %select.ptr.431, align 4
  %199 = shl i32 %198, 1
  %200 = sext i32 3 to i64
  %201 = icmp slt i64 1, %200
  %202 = bitcast i64* %shadow to i32*
  %safe.432 = or i1 %133, %201
  %select.ptr.433 = select i1 %safe.432, i32* %194, i32* %202
  %203 = load i32, i32* %194
  %204 = sub i1 %133, true
  %205 = xor i1 %204, true
  %206 = sext i1 %204 to i32
  %207 = and i32 %206, %203
  %208 = sext i1 %205 to i32
  %209 = and i32 %208, %199
  %select.val.434 = or i32 %209, %207
  store i32 %select.val.434, i32* %select.ptr.433, align 4
  %210 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %211 = sext i32 3 to i64
  %212 = icmp slt i64 2, %211
  %213 = bitcast i64* %shadow to i32*
  %safe.435 = or i1 %132, %212
  %select.ptr.436 = select i1 %safe.435, i32* %210, i32* %213
  %214 = load i32, i32* %select.ptr.436, align 4
  %215 = shl i32 %214, 1
  %216 = sext i32 3 to i64
  %217 = icmp slt i64 2, %216
  %218 = bitcast i64* %shadow to i32*
  %safe.437 = or i1 %131, %217
  %select.ptr.438 = select i1 %safe.437, i32* %210, i32* %218
  %219 = load i32, i32* %210
  %220 = sub i1 %131, true
  %221 = xor i1 %220, true
  %222 = sext i1 %220 to i32
  %223 = and i32 %222, %219
  %224 = sext i1 %221 to i32
  %225 = and i32 %224, %215
  %select.val.439 = or i32 %225, %223
  store i32 %select.val.439, i32* %select.ptr.438, align 4
  %226 = load i32, i32* %0, align 4
  %227 = and i32 %226, 1
  %228 = icmp ne i32 %227, 0
  %229 = or i1 %in.198, %130
  store i1 %229, i1* %out.7
  %230 = load i1, i1* %out.7
  %in.199 = and i1 %230, %228
  %231 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %232 = sext i32 3 to i64
  %233 = icmp slt i64 2, %232
  %234 = bitcast i64* %shadow to i32*
  %safe.440 = or i1 %in.199, %233
  %select.ptr.441 = select i1 %safe.440, i32* %231, i32* %234
  %235 = load i32, i32* %select.ptr.441, align 4
  %236 = or i32 %235, 1
  %237 = sext i32 3 to i64
  %238 = icmp slt i64 2, %237
  %239 = bitcast i64* %shadow to i32*
  %safe.442 = or i1 %in.199, %238
  %select.ptr.443 = select i1 %safe.442, i32* %231, i32* %239
  %240 = load i32, i32* %231
  %241 = sub i1 %in.199, true
  %242 = xor i1 %241, true
  %243 = sext i1 %241 to i32
  %244 = and i32 %243, %240
  %245 = sext i1 %242 to i32
  %246 = and i32 %245, %236
  %select.val.444 = or i32 %246, %244
  store i32 %select.val.444, i32* %select.ptr.443, align 4
  store i1 %in.199, i1* %out.8
  %247 = load i1, i1* %out.7
  %248 = xor i1 %228, true
  %in.200 = and i1 %247, %248
  %249 = load i1, i1* %out.8
  %250 = or i1 %in.200, %249
  %251 = getelementptr inbounds i32, i32* %0, i64 1
  %252 = icmp slt i64 1, %len.
  %253 = bitcast i64* %shadow to i32*
  %safe.445 = or i1 %250, %252
  %select.ptr.446 = select i1 %safe.445, i32* %251, i32* %253
  %254 = load i32, i32* %select.ptr.446, align 4
  %255 = and i32 %254, 1
  %256 = icmp ne i32 %255, 0
  %257 = or i1 %in.200, %249
  store i1 %257, i1* %out.9
  %258 = load i1, i1* %out.9
  %in.201 = and i1 %258, %256
  %259 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %260 = sext i32 3 to i64
  %261 = icmp slt i64 1, %260
  %262 = bitcast i64* %shadow to i32*
  %safe.447 = or i1 %in.201, %261
  %select.ptr.448 = select i1 %safe.447, i32* %259, i32* %262
  %263 = load i32, i32* %select.ptr.448, align 4
  %264 = or i32 %263, 1
  %265 = sext i32 3 to i64
  %266 = icmp slt i64 1, %265
  %267 = bitcast i64* %shadow to i32*
  %safe.449 = or i1 %in.201, %266
  %select.ptr.450 = select i1 %safe.449, i32* %259, i32* %267
  %268 = load i32, i32* %259
  %269 = sub i1 %in.201, true
  %270 = xor i1 %269, true
  %271 = sext i1 %269 to i32
  %272 = and i32 %271, %268
  %273 = sext i1 %270 to i32
  %274 = and i32 %273, %264
  %select.val.451 = or i32 %274, %272
  store i32 %select.val.451, i32* %select.ptr.450, align 4
  store i1 %in.201, i1* %out.10
  %275 = load i1, i1* %out.9
  %276 = xor i1 %256, true
  %in.202 = and i1 %275, %276
  %277 = load i1, i1* %out.10
  %278 = or i1 %in.202, %277
  %279 = getelementptr inbounds i32, i32* %0, i64 2
  %280 = icmp slt i64 2, %len.
  %281 = bitcast i64* %shadow to i32*
  %safe.452 = or i1 %278, %280
  %select.ptr.453 = select i1 %safe.452, i32* %279, i32* %281
  %282 = load i32, i32* %select.ptr.453, align 4
  %283 = and i32 %282, 1
  %284 = icmp ne i32 %283, 0
  %285 = or i1 %in.202, %277
  store i1 %285, i1* %out.11
  %286 = load i1, i1* %out.11
  %in.203 = and i1 %286, %284
  %287 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %288 = sext i32 3 to i64
  %289 = icmp slt i64 0, %288
  %290 = bitcast i64* %shadow to i32*
  %safe.454 = or i1 %in.203, %289
  %select.ptr.455 = select i1 %safe.454, i32* %287, i32* %290
  %291 = load i32, i32* %select.ptr.455, align 4
  %292 = or i32 %291, 1
  %293 = sext i32 3 to i64
  %294 = icmp slt i64 0, %293
  %295 = bitcast i64* %shadow to i32*
  %safe.456 = or i1 %in.203, %294
  %select.ptr.457 = select i1 %safe.456, i32* %287, i32* %295
  %296 = load i32, i32* %287
  %297 = sub i1 %in.203, true
  %298 = xor i1 %297, true
  %299 = sext i1 %297 to i32
  %300 = and i32 %299, %296
  %301 = sext i1 %298 to i32
  %302 = and i32 %301, %292
  %select.val.458 = or i32 %302, %300
  store i32 %select.val.458, i32* %select.ptr.457, align 4
  store i1 %in.203, i1* %out.12
  %303 = load i1, i1* %out.11
  %304 = xor i1 %284, true
  %in.204 = and i1 %303, %304
  %305 = load i1, i1* %out.12
  %306 = or i1 %in.204, %305
  %307 = or i1 %in.204, %305
  %308 = or i1 %in.204, %305
  %309 = or i1 %in.204, %305
  %310 = or i1 %in.204, %305
  %311 = or i1 %in.204, %305
  %312 = or i1 %in.204, %305
  %313 = or i1 %in.204, %305
  %314 = or i1 %in.204, %305
  %315 = or i1 %in.204, %305
  %316 = or i1 %in.204, %305
  %317 = load i32, i32* %0, align 4
  %318 = ashr i32 %317, 1
  %319 = load i32, i32* %0
  %320 = sub i1 %316, true
  %321 = xor i1 %320, true
  %322 = sext i1 %320 to i32
  %323 = and i32 %322, %319
  %324 = sext i1 %321 to i32
  %325 = and i32 %324, %318
  %select.val.459 = or i32 %325, %323
  store i32 %select.val.459, i32* %0, align 4
  %326 = getelementptr inbounds i32, i32* %0, i64 1
  %327 = icmp slt i64 1, %len.
  %328 = bitcast i64* %shadow to i32*
  %safe.460 = or i1 %315, %327
  %select.ptr.461 = select i1 %safe.460, i32* %326, i32* %328
  %329 = load i32, i32* %select.ptr.461, align 4
  %330 = ashr i32 %329, 1
  %331 = icmp slt i64 1, %len.
  %332 = bitcast i64* %shadow to i32*
  %safe.462 = or i1 %314, %331
  %select.ptr.463 = select i1 %safe.462, i32* %326, i32* %332
  %333 = load i32, i32* %326
  %334 = sub i1 %314, true
  %335 = xor i1 %334, true
  %336 = sext i1 %334 to i32
  %337 = and i32 %336, %333
  %338 = sext i1 %335 to i32
  %339 = and i32 %338, %330
  %select.val.464 = or i32 %339, %337
  store i32 %select.val.464, i32* %select.ptr.463, align 4
  %340 = getelementptr inbounds i32, i32* %0, i64 2
  %341 = icmp slt i64 2, %len.
  %342 = bitcast i64* %shadow to i32*
  %safe.465 = or i1 %313, %341
  %select.ptr.466 = select i1 %safe.465, i32* %340, i32* %342
  %343 = load i32, i32* %select.ptr.466, align 4
  %344 = ashr i32 %343, 1
  %345 = icmp slt i64 2, %len.
  %346 = bitcast i64* %shadow to i32*
  %safe.467 = or i1 %312, %345
  %select.ptr.468 = select i1 %safe.467, i32* %340, i32* %346
  %347 = load i32, i32* %340
  %348 = sub i1 %312, true
  %349 = xor i1 %348, true
  %350 = sext i1 %348 to i32
  %351 = and i32 %350, %347
  %352 = sext i1 %349 to i32
  %353 = and i32 %352, %344
  %select.val.469 = or i32 %353, %351
  store i32 %select.val.469, i32* %select.ptr.468, align 4
  %354 = sext i32 3 to i64
  %355 = icmp slt i64 0, %354
  %356 = bitcast i64* %shadow to i32*
  %safe.470 = or i1 %311, %355
  %select.ptr.471 = select i1 %safe.470, i32* %6, i32* %356
  %357 = load i32, i32* %select.ptr.471, align 4
  %358 = shl i32 %357, 1
  %359 = sext i32 3 to i64
  %360 = icmp slt i64 0, %359
  %361 = bitcast i64* %shadow to i32*
  %safe.472 = or i1 %310, %360
  %select.ptr.473 = select i1 %safe.472, i32* %6, i32* %361
  %362 = load i32, i32* %6
  %363 = sub i1 %310, true
  %364 = xor i1 %363, true
  %365 = sext i1 %363 to i32
  %366 = and i32 %365, %362
  %367 = sext i1 %364 to i32
  %368 = and i32 %367, %358
  %select.val.474 = or i32 %368, %366
  store i32 %select.val.474, i32* %select.ptr.473, align 4
  %369 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %370 = sext i32 3 to i64
  %371 = icmp slt i64 1, %370
  %372 = bitcast i64* %shadow to i32*
  %safe.475 = or i1 %309, %371
  %select.ptr.476 = select i1 %safe.475, i32* %369, i32* %372
  %373 = load i32, i32* %select.ptr.476, align 4
  %374 = shl i32 %373, 1
  %375 = sext i32 3 to i64
  %376 = icmp slt i64 1, %375
  %377 = bitcast i64* %shadow to i32*
  %safe.477 = or i1 %308, %376
  %select.ptr.478 = select i1 %safe.477, i32* %369, i32* %377
  %378 = load i32, i32* %369
  %379 = sub i1 %308, true
  %380 = xor i1 %379, true
  %381 = sext i1 %379 to i32
  %382 = and i32 %381, %378
  %383 = sext i1 %380 to i32
  %384 = and i32 %383, %374
  %select.val.479 = or i32 %384, %382
  store i32 %select.val.479, i32* %select.ptr.478, align 4
  %385 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %386 = sext i32 3 to i64
  %387 = icmp slt i64 2, %386
  %388 = bitcast i64* %shadow to i32*
  %safe.480 = or i1 %307, %387
  %select.ptr.481 = select i1 %safe.480, i32* %385, i32* %388
  %389 = load i32, i32* %select.ptr.481, align 4
  %390 = shl i32 %389, 1
  %391 = sext i32 3 to i64
  %392 = icmp slt i64 2, %391
  %393 = bitcast i64* %shadow to i32*
  %safe.482 = or i1 %306, %392
  %select.ptr.483 = select i1 %safe.482, i32* %385, i32* %393
  %394 = load i32, i32* %385
  %395 = sub i1 %306, true
  %396 = xor i1 %395, true
  %397 = sext i1 %395 to i32
  %398 = and i32 %397, %394
  %399 = sext i1 %396 to i32
  %400 = and i32 %399, %390
  %select.val.484 = or i32 %400, %398
  store i32 %select.val.484, i32* %select.ptr.483, align 4
  %401 = load i32, i32* %0, align 4
  %402 = and i32 %401, 1
  %403 = icmp ne i32 %402, 0
  %404 = or i1 %in.204, %305
  store i1 %404, i1* %out.13
  %405 = load i1, i1* %out.13
  %in.205 = and i1 %405, %403
  %406 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %407 = sext i32 3 to i64
  %408 = icmp slt i64 2, %407
  %409 = bitcast i64* %shadow to i32*
  %safe.485 = or i1 %in.205, %408
  %select.ptr.486 = select i1 %safe.485, i32* %406, i32* %409
  %410 = load i32, i32* %select.ptr.486, align 4
  %411 = or i32 %410, 1
  %412 = sext i32 3 to i64
  %413 = icmp slt i64 2, %412
  %414 = bitcast i64* %shadow to i32*
  %safe.487 = or i1 %in.205, %413
  %select.ptr.488 = select i1 %safe.487, i32* %406, i32* %414
  %415 = load i32, i32* %406
  %416 = sub i1 %in.205, true
  %417 = xor i1 %416, true
  %418 = sext i1 %416 to i32
  %419 = and i32 %418, %415
  %420 = sext i1 %417 to i32
  %421 = and i32 %420, %411
  %select.val.489 = or i32 %421, %419
  store i32 %select.val.489, i32* %select.ptr.488, align 4
  store i1 %in.205, i1* %out.14
  %422 = load i1, i1* %out.13
  %423 = xor i1 %403, true
  %in.206 = and i1 %422, %423
  %424 = load i1, i1* %out.14
  %425 = or i1 %in.206, %424
  %426 = getelementptr inbounds i32, i32* %0, i64 1
  %427 = icmp slt i64 1, %len.
  %428 = bitcast i64* %shadow to i32*
  %safe.490 = or i1 %425, %427
  %select.ptr.491 = select i1 %safe.490, i32* %426, i32* %428
  %429 = load i32, i32* %select.ptr.491, align 4
  %430 = and i32 %429, 1
  %431 = icmp ne i32 %430, 0
  %432 = or i1 %in.206, %424
  store i1 %432, i1* %out.15
  %433 = load i1, i1* %out.15
  %in.207 = and i1 %433, %431
  %434 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %435 = sext i32 3 to i64
  %436 = icmp slt i64 1, %435
  %437 = bitcast i64* %shadow to i32*
  %safe.492 = or i1 %in.207, %436
  %select.ptr.493 = select i1 %safe.492, i32* %434, i32* %437
  %438 = load i32, i32* %select.ptr.493, align 4
  %439 = or i32 %438, 1
  %440 = sext i32 3 to i64
  %441 = icmp slt i64 1, %440
  %442 = bitcast i64* %shadow to i32*
  %safe.494 = or i1 %in.207, %441
  %select.ptr.495 = select i1 %safe.494, i32* %434, i32* %442
  %443 = load i32, i32* %434
  %444 = sub i1 %in.207, true
  %445 = xor i1 %444, true
  %446 = sext i1 %444 to i32
  %447 = and i32 %446, %443
  %448 = sext i1 %445 to i32
  %449 = and i32 %448, %439
  %select.val.496 = or i32 %449, %447
  store i32 %select.val.496, i32* %select.ptr.495, align 4
  store i1 %in.207, i1* %out.16
  %450 = load i1, i1* %out.15
  %451 = xor i1 %431, true
  %in.208 = and i1 %450, %451
  %452 = load i1, i1* %out.16
  %453 = or i1 %in.208, %452
  %454 = getelementptr inbounds i32, i32* %0, i64 2
  %455 = icmp slt i64 2, %len.
  %456 = bitcast i64* %shadow to i32*
  %safe.497 = or i1 %453, %455
  %select.ptr.498 = select i1 %safe.497, i32* %454, i32* %456
  %457 = load i32, i32* %select.ptr.498, align 4
  %458 = and i32 %457, 1
  %459 = icmp ne i32 %458, 0
  %460 = or i1 %in.208, %452
  store i1 %460, i1* %out.17
  %461 = load i1, i1* %out.17
  %in.209 = and i1 %461, %459
  %462 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %463 = sext i32 3 to i64
  %464 = icmp slt i64 0, %463
  %465 = bitcast i64* %shadow to i32*
  %safe.499 = or i1 %in.209, %464
  %select.ptr.500 = select i1 %safe.499, i32* %462, i32* %465
  %466 = load i32, i32* %select.ptr.500, align 4
  %467 = or i32 %466, 1
  %468 = sext i32 3 to i64
  %469 = icmp slt i64 0, %468
  %470 = bitcast i64* %shadow to i32*
  %safe.501 = or i1 %in.209, %469
  %select.ptr.502 = select i1 %safe.501, i32* %462, i32* %470
  %471 = load i32, i32* %462
  %472 = sub i1 %in.209, true
  %473 = xor i1 %472, true
  %474 = sext i1 %472 to i32
  %475 = and i32 %474, %471
  %476 = sext i1 %473 to i32
  %477 = and i32 %476, %467
  %select.val.503 = or i32 %477, %475
  store i32 %select.val.503, i32* %select.ptr.502, align 4
  store i1 %in.209, i1* %out.18
  %478 = load i1, i1* %out.17
  %479 = xor i1 %459, true
  %in.210 = and i1 %478, %479
  %480 = load i1, i1* %out.18
  %481 = or i1 %in.210, %480
  %482 = or i1 %in.210, %480
  %483 = or i1 %in.210, %480
  %484 = or i1 %in.210, %480
  %485 = or i1 %in.210, %480
  %486 = or i1 %in.210, %480
  %487 = or i1 %in.210, %480
  %488 = or i1 %in.210, %480
  %489 = or i1 %in.210, %480
  %490 = or i1 %in.210, %480
  %491 = or i1 %in.210, %480
  %492 = load i32, i32* %0, align 4
  %493 = ashr i32 %492, 1
  %494 = load i32, i32* %0
  %495 = sub i1 %491, true
  %496 = xor i1 %495, true
  %497 = sext i1 %495 to i32
  %498 = and i32 %497, %494
  %499 = sext i1 %496 to i32
  %500 = and i32 %499, %493
  %select.val.504 = or i32 %500, %498
  store i32 %select.val.504, i32* %0, align 4
  %501 = getelementptr inbounds i32, i32* %0, i64 1
  %502 = icmp slt i64 1, %len.
  %503 = bitcast i64* %shadow to i32*
  %safe.505 = or i1 %490, %502
  %select.ptr.506 = select i1 %safe.505, i32* %501, i32* %503
  %504 = load i32, i32* %select.ptr.506, align 4
  %505 = ashr i32 %504, 1
  %506 = icmp slt i64 1, %len.
  %507 = bitcast i64* %shadow to i32*
  %safe.507 = or i1 %489, %506
  %select.ptr.508 = select i1 %safe.507, i32* %501, i32* %507
  %508 = load i32, i32* %501
  %509 = sub i1 %489, true
  %510 = xor i1 %509, true
  %511 = sext i1 %509 to i32
  %512 = and i32 %511, %508
  %513 = sext i1 %510 to i32
  %514 = and i32 %513, %505
  %select.val.509 = or i32 %514, %512
  store i32 %select.val.509, i32* %select.ptr.508, align 4
  %515 = getelementptr inbounds i32, i32* %0, i64 2
  %516 = icmp slt i64 2, %len.
  %517 = bitcast i64* %shadow to i32*
  %safe.510 = or i1 %488, %516
  %select.ptr.511 = select i1 %safe.510, i32* %515, i32* %517
  %518 = load i32, i32* %select.ptr.511, align 4
  %519 = ashr i32 %518, 1
  %520 = icmp slt i64 2, %len.
  %521 = bitcast i64* %shadow to i32*
  %safe.512 = or i1 %487, %520
  %select.ptr.513 = select i1 %safe.512, i32* %515, i32* %521
  %522 = load i32, i32* %515
  %523 = sub i1 %487, true
  %524 = xor i1 %523, true
  %525 = sext i1 %523 to i32
  %526 = and i32 %525, %522
  %527 = sext i1 %524 to i32
  %528 = and i32 %527, %519
  %select.val.514 = or i32 %528, %526
  store i32 %select.val.514, i32* %select.ptr.513, align 4
  %529 = sext i32 3 to i64
  %530 = icmp slt i64 0, %529
  %531 = bitcast i64* %shadow to i32*
  %safe.515 = or i1 %486, %530
  %select.ptr.516 = select i1 %safe.515, i32* %6, i32* %531
  %532 = load i32, i32* %select.ptr.516, align 4
  %533 = shl i32 %532, 1
  %534 = sext i32 3 to i64
  %535 = icmp slt i64 0, %534
  %536 = bitcast i64* %shadow to i32*
  %safe.517 = or i1 %485, %535
  %select.ptr.518 = select i1 %safe.517, i32* %6, i32* %536
  %537 = load i32, i32* %6
  %538 = sub i1 %485, true
  %539 = xor i1 %538, true
  %540 = sext i1 %538 to i32
  %541 = and i32 %540, %537
  %542 = sext i1 %539 to i32
  %543 = and i32 %542, %533
  %select.val.519 = or i32 %543, %541
  store i32 %select.val.519, i32* %select.ptr.518, align 4
  %544 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %545 = sext i32 3 to i64
  %546 = icmp slt i64 1, %545
  %547 = bitcast i64* %shadow to i32*
  %safe.520 = or i1 %484, %546
  %select.ptr.521 = select i1 %safe.520, i32* %544, i32* %547
  %548 = load i32, i32* %select.ptr.521, align 4
  %549 = shl i32 %548, 1
  %550 = sext i32 3 to i64
  %551 = icmp slt i64 1, %550
  %552 = bitcast i64* %shadow to i32*
  %safe.522 = or i1 %483, %551
  %select.ptr.523 = select i1 %safe.522, i32* %544, i32* %552
  %553 = load i32, i32* %544
  %554 = sub i1 %483, true
  %555 = xor i1 %554, true
  %556 = sext i1 %554 to i32
  %557 = and i32 %556, %553
  %558 = sext i1 %555 to i32
  %559 = and i32 %558, %549
  %select.val.524 = or i32 %559, %557
  store i32 %select.val.524, i32* %select.ptr.523, align 4
  %560 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %561 = sext i32 3 to i64
  %562 = icmp slt i64 2, %561
  %563 = bitcast i64* %shadow to i32*
  %safe.525 = or i1 %482, %562
  %select.ptr.526 = select i1 %safe.525, i32* %560, i32* %563
  %564 = load i32, i32* %select.ptr.526, align 4
  %565 = shl i32 %564, 1
  %566 = sext i32 3 to i64
  %567 = icmp slt i64 2, %566
  %568 = bitcast i64* %shadow to i32*
  %safe.527 = or i1 %481, %567
  %select.ptr.528 = select i1 %safe.527, i32* %560, i32* %568
  %569 = load i32, i32* %560
  %570 = sub i1 %481, true
  %571 = xor i1 %570, true
  %572 = sext i1 %570 to i32
  %573 = and i32 %572, %569
  %574 = sext i1 %571 to i32
  %575 = and i32 %574, %565
  %select.val.529 = or i32 %575, %573
  store i32 %select.val.529, i32* %select.ptr.528, align 4
  %576 = load i32, i32* %0, align 4
  %577 = and i32 %576, 1
  %578 = icmp ne i32 %577, 0
  %579 = or i1 %in.210, %480
  store i1 %579, i1* %out.19
  %580 = load i1, i1* %out.19
  %in.211 = and i1 %580, %578
  %581 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %582 = sext i32 3 to i64
  %583 = icmp slt i64 2, %582
  %584 = bitcast i64* %shadow to i32*
  %safe.530 = or i1 %in.211, %583
  %select.ptr.531 = select i1 %safe.530, i32* %581, i32* %584
  %585 = load i32, i32* %select.ptr.531, align 4
  %586 = or i32 %585, 1
  %587 = sext i32 3 to i64
  %588 = icmp slt i64 2, %587
  %589 = bitcast i64* %shadow to i32*
  %safe.532 = or i1 %in.211, %588
  %select.ptr.533 = select i1 %safe.532, i32* %581, i32* %589
  %590 = load i32, i32* %581
  %591 = sub i1 %in.211, true
  %592 = xor i1 %591, true
  %593 = sext i1 %591 to i32
  %594 = and i32 %593, %590
  %595 = sext i1 %592 to i32
  %596 = and i32 %595, %586
  %select.val.534 = or i32 %596, %594
  store i32 %select.val.534, i32* %select.ptr.533, align 4
  store i1 %in.211, i1* %out.20
  %597 = load i1, i1* %out.19
  %598 = xor i1 %578, true
  %in.212 = and i1 %597, %598
  %599 = load i1, i1* %out.20
  %600 = or i1 %in.212, %599
  %601 = getelementptr inbounds i32, i32* %0, i64 1
  %602 = icmp slt i64 1, %len.
  %603 = bitcast i64* %shadow to i32*
  %safe.535 = or i1 %600, %602
  %select.ptr.536 = select i1 %safe.535, i32* %601, i32* %603
  %604 = load i32, i32* %select.ptr.536, align 4
  %605 = and i32 %604, 1
  %606 = icmp ne i32 %605, 0
  %607 = or i1 %in.212, %599
  store i1 %607, i1* %out.21
  %608 = load i1, i1* %out.21
  %in.213 = and i1 %608, %606
  %609 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %610 = sext i32 3 to i64
  %611 = icmp slt i64 1, %610
  %612 = bitcast i64* %shadow to i32*
  %safe.537 = or i1 %in.213, %611
  %select.ptr.538 = select i1 %safe.537, i32* %609, i32* %612
  %613 = load i32, i32* %select.ptr.538, align 4
  %614 = or i32 %613, 1
  %615 = sext i32 3 to i64
  %616 = icmp slt i64 1, %615
  %617 = bitcast i64* %shadow to i32*
  %safe.539 = or i1 %in.213, %616
  %select.ptr.540 = select i1 %safe.539, i32* %609, i32* %617
  %618 = load i32, i32* %609
  %619 = sub i1 %in.213, true
  %620 = xor i1 %619, true
  %621 = sext i1 %619 to i32
  %622 = and i32 %621, %618
  %623 = sext i1 %620 to i32
  %624 = and i32 %623, %614
  %select.val.541 = or i32 %624, %622
  store i32 %select.val.541, i32* %select.ptr.540, align 4
  store i1 %in.213, i1* %out.22
  %625 = load i1, i1* %out.21
  %626 = xor i1 %606, true
  %in.214 = and i1 %625, %626
  %627 = load i1, i1* %out.22
  %628 = or i1 %in.214, %627
  %629 = getelementptr inbounds i32, i32* %0, i64 2
  %630 = icmp slt i64 2, %len.
  %631 = bitcast i64* %shadow to i32*
  %safe.542 = or i1 %628, %630
  %select.ptr.543 = select i1 %safe.542, i32* %629, i32* %631
  %632 = load i32, i32* %select.ptr.543, align 4
  %633 = and i32 %632, 1
  %634 = icmp ne i32 %633, 0
  %635 = or i1 %in.214, %627
  store i1 %635, i1* %out.23
  %636 = load i1, i1* %out.23
  %in.215 = and i1 %636, %634
  %637 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %638 = sext i32 3 to i64
  %639 = icmp slt i64 0, %638
  %640 = bitcast i64* %shadow to i32*
  %safe.544 = or i1 %in.215, %639
  %select.ptr.545 = select i1 %safe.544, i32* %637, i32* %640
  %641 = load i32, i32* %select.ptr.545, align 4
  %642 = or i32 %641, 1
  %643 = sext i32 3 to i64
  %644 = icmp slt i64 0, %643
  %645 = bitcast i64* %shadow to i32*
  %safe.546 = or i1 %in.215, %644
  %select.ptr.547 = select i1 %safe.546, i32* %637, i32* %645
  %646 = load i32, i32* %637
  %647 = sub i1 %in.215, true
  %648 = xor i1 %647, true
  %649 = sext i1 %647 to i32
  %650 = and i32 %649, %646
  %651 = sext i1 %648 to i32
  %652 = and i32 %651, %642
  %select.val.548 = or i32 %652, %650
  store i32 %select.val.548, i32* %select.ptr.547, align 4
  store i1 %in.215, i1* %out.24
  %653 = load i1, i1* %out.23
  %654 = xor i1 %634, true
  %in.216 = and i1 %653, %654
  %655 = load i1, i1* %out.24
  %656 = or i1 %in.216, %655
  %657 = or i1 %in.216, %655
  %658 = or i1 %in.216, %655
  %659 = or i1 %in.216, %655
  %660 = or i1 %in.216, %655
  %661 = or i1 %in.216, %655
  %662 = or i1 %in.216, %655
  %663 = or i1 %in.216, %655
  %664 = or i1 %in.216, %655
  %665 = or i1 %in.216, %655
  %666 = or i1 %in.216, %655
  %667 = load i32, i32* %0, align 4
  %668 = ashr i32 %667, 1
  %669 = load i32, i32* %0
  %670 = sub i1 %666, true
  %671 = xor i1 %670, true
  %672 = sext i1 %670 to i32
  %673 = and i32 %672, %669
  %674 = sext i1 %671 to i32
  %675 = and i32 %674, %668
  %select.val.549 = or i32 %675, %673
  store i32 %select.val.549, i32* %0, align 4
  %676 = getelementptr inbounds i32, i32* %0, i64 1
  %677 = icmp slt i64 1, %len.
  %678 = bitcast i64* %shadow to i32*
  %safe.550 = or i1 %665, %677
  %select.ptr.551 = select i1 %safe.550, i32* %676, i32* %678
  %679 = load i32, i32* %select.ptr.551, align 4
  %680 = ashr i32 %679, 1
  %681 = icmp slt i64 1, %len.
  %682 = bitcast i64* %shadow to i32*
  %safe.552 = or i1 %664, %681
  %select.ptr.553 = select i1 %safe.552, i32* %676, i32* %682
  %683 = load i32, i32* %676
  %684 = sub i1 %664, true
  %685 = xor i1 %684, true
  %686 = sext i1 %684 to i32
  %687 = and i32 %686, %683
  %688 = sext i1 %685 to i32
  %689 = and i32 %688, %680
  %select.val.554 = or i32 %689, %687
  store i32 %select.val.554, i32* %select.ptr.553, align 4
  %690 = getelementptr inbounds i32, i32* %0, i64 2
  %691 = icmp slt i64 2, %len.
  %692 = bitcast i64* %shadow to i32*
  %safe.555 = or i1 %663, %691
  %select.ptr.556 = select i1 %safe.555, i32* %690, i32* %692
  %693 = load i32, i32* %select.ptr.556, align 4
  %694 = ashr i32 %693, 1
  %695 = icmp slt i64 2, %len.
  %696 = bitcast i64* %shadow to i32*
  %safe.557 = or i1 %662, %695
  %select.ptr.558 = select i1 %safe.557, i32* %690, i32* %696
  %697 = load i32, i32* %690
  %698 = sub i1 %662, true
  %699 = xor i1 %698, true
  %700 = sext i1 %698 to i32
  %701 = and i32 %700, %697
  %702 = sext i1 %699 to i32
  %703 = and i32 %702, %694
  %select.val.559 = or i32 %703, %701
  store i32 %select.val.559, i32* %select.ptr.558, align 4
  %704 = sext i32 3 to i64
  %705 = icmp slt i64 0, %704
  %706 = bitcast i64* %shadow to i32*
  %safe.560 = or i1 %661, %705
  %select.ptr.561 = select i1 %safe.560, i32* %6, i32* %706
  %707 = load i32, i32* %select.ptr.561, align 4
  %708 = shl i32 %707, 1
  %709 = sext i32 3 to i64
  %710 = icmp slt i64 0, %709
  %711 = bitcast i64* %shadow to i32*
  %safe.562 = or i1 %660, %710
  %select.ptr.563 = select i1 %safe.562, i32* %6, i32* %711
  %712 = load i32, i32* %6
  %713 = sub i1 %660, true
  %714 = xor i1 %713, true
  %715 = sext i1 %713 to i32
  %716 = and i32 %715, %712
  %717 = sext i1 %714 to i32
  %718 = and i32 %717, %708
  %select.val.564 = or i32 %718, %716
  store i32 %select.val.564, i32* %select.ptr.563, align 4
  %719 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %720 = sext i32 3 to i64
  %721 = icmp slt i64 1, %720
  %722 = bitcast i64* %shadow to i32*
  %safe.565 = or i1 %659, %721
  %select.ptr.566 = select i1 %safe.565, i32* %719, i32* %722
  %723 = load i32, i32* %select.ptr.566, align 4
  %724 = shl i32 %723, 1
  %725 = sext i32 3 to i64
  %726 = icmp slt i64 1, %725
  %727 = bitcast i64* %shadow to i32*
  %safe.567 = or i1 %658, %726
  %select.ptr.568 = select i1 %safe.567, i32* %719, i32* %727
  %728 = load i32, i32* %719
  %729 = sub i1 %658, true
  %730 = xor i1 %729, true
  %731 = sext i1 %729 to i32
  %732 = and i32 %731, %728
  %733 = sext i1 %730 to i32
  %734 = and i32 %733, %724
  %select.val.569 = or i32 %734, %732
  store i32 %select.val.569, i32* %select.ptr.568, align 4
  %735 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %736 = sext i32 3 to i64
  %737 = icmp slt i64 2, %736
  %738 = bitcast i64* %shadow to i32*
  %safe.570 = or i1 %657, %737
  %select.ptr.571 = select i1 %safe.570, i32* %735, i32* %738
  %739 = load i32, i32* %select.ptr.571, align 4
  %740 = shl i32 %739, 1
  %741 = sext i32 3 to i64
  %742 = icmp slt i64 2, %741
  %743 = bitcast i64* %shadow to i32*
  %safe.572 = or i1 %656, %742
  %select.ptr.573 = select i1 %safe.572, i32* %735, i32* %743
  %744 = load i32, i32* %735
  %745 = sub i1 %656, true
  %746 = xor i1 %745, true
  %747 = sext i1 %745 to i32
  %748 = and i32 %747, %744
  %749 = sext i1 %746 to i32
  %750 = and i32 %749, %740
  %select.val.574 = or i32 %750, %748
  store i32 %select.val.574, i32* %select.ptr.573, align 4
  %751 = load i32, i32* %0, align 4
  %752 = and i32 %751, 1
  %753 = icmp ne i32 %752, 0
  %754 = or i1 %in.216, %655
  store i1 %754, i1* %out.25
  %755 = load i1, i1* %out.25
  %in.217 = and i1 %755, %753
  %756 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %757 = sext i32 3 to i64
  %758 = icmp slt i64 2, %757
  %759 = bitcast i64* %shadow to i32*
  %safe.575 = or i1 %in.217, %758
  %select.ptr.576 = select i1 %safe.575, i32* %756, i32* %759
  %760 = load i32, i32* %select.ptr.576, align 4
  %761 = or i32 %760, 1
  %762 = sext i32 3 to i64
  %763 = icmp slt i64 2, %762
  %764 = bitcast i64* %shadow to i32*
  %safe.577 = or i1 %in.217, %763
  %select.ptr.578 = select i1 %safe.577, i32* %756, i32* %764
  %765 = load i32, i32* %756
  %766 = sub i1 %in.217, true
  %767 = xor i1 %766, true
  %768 = sext i1 %766 to i32
  %769 = and i32 %768, %765
  %770 = sext i1 %767 to i32
  %771 = and i32 %770, %761
  %select.val.579 = or i32 %771, %769
  store i32 %select.val.579, i32* %select.ptr.578, align 4
  store i1 %in.217, i1* %out.26
  %772 = load i1, i1* %out.25
  %773 = xor i1 %753, true
  %in.218 = and i1 %772, %773
  %774 = load i1, i1* %out.26
  %775 = or i1 %in.218, %774
  %776 = getelementptr inbounds i32, i32* %0, i64 1
  %777 = icmp slt i64 1, %len.
  %778 = bitcast i64* %shadow to i32*
  %safe.580 = or i1 %775, %777
  %select.ptr.581 = select i1 %safe.580, i32* %776, i32* %778
  %779 = load i32, i32* %select.ptr.581, align 4
  %780 = and i32 %779, 1
  %781 = icmp ne i32 %780, 0
  %782 = or i1 %in.218, %774
  store i1 %782, i1* %out.27
  %783 = load i1, i1* %out.27
  %in.219 = and i1 %783, %781
  %784 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %785 = sext i32 3 to i64
  %786 = icmp slt i64 1, %785
  %787 = bitcast i64* %shadow to i32*
  %safe.582 = or i1 %in.219, %786
  %select.ptr.583 = select i1 %safe.582, i32* %784, i32* %787
  %788 = load i32, i32* %select.ptr.583, align 4
  %789 = or i32 %788, 1
  %790 = sext i32 3 to i64
  %791 = icmp slt i64 1, %790
  %792 = bitcast i64* %shadow to i32*
  %safe.584 = or i1 %in.219, %791
  %select.ptr.585 = select i1 %safe.584, i32* %784, i32* %792
  %793 = load i32, i32* %784
  %794 = sub i1 %in.219, true
  %795 = xor i1 %794, true
  %796 = sext i1 %794 to i32
  %797 = and i32 %796, %793
  %798 = sext i1 %795 to i32
  %799 = and i32 %798, %789
  %select.val.586 = or i32 %799, %797
  store i32 %select.val.586, i32* %select.ptr.585, align 4
  store i1 %in.219, i1* %out.28
  %800 = load i1, i1* %out.27
  %801 = xor i1 %781, true
  %in.220 = and i1 %800, %801
  %802 = load i1, i1* %out.28
  %803 = or i1 %in.220, %802
  %804 = getelementptr inbounds i32, i32* %0, i64 2
  %805 = icmp slt i64 2, %len.
  %806 = bitcast i64* %shadow to i32*
  %safe.587 = or i1 %803, %805
  %select.ptr.588 = select i1 %safe.587, i32* %804, i32* %806
  %807 = load i32, i32* %select.ptr.588, align 4
  %808 = and i32 %807, 1
  %809 = icmp ne i32 %808, 0
  %810 = or i1 %in.220, %802
  store i1 %810, i1* %out.29
  %811 = load i1, i1* %out.29
  %in.221 = and i1 %811, %809
  %812 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %813 = sext i32 3 to i64
  %814 = icmp slt i64 0, %813
  %815 = bitcast i64* %shadow to i32*
  %safe.589 = or i1 %in.221, %814
  %select.ptr.590 = select i1 %safe.589, i32* %812, i32* %815
  %816 = load i32, i32* %select.ptr.590, align 4
  %817 = or i32 %816, 1
  %818 = sext i32 3 to i64
  %819 = icmp slt i64 0, %818
  %820 = bitcast i64* %shadow to i32*
  %safe.591 = or i1 %in.221, %819
  %select.ptr.592 = select i1 %safe.591, i32* %812, i32* %820
  %821 = load i32, i32* %812
  %822 = sub i1 %in.221, true
  %823 = xor i1 %822, true
  %824 = sext i1 %822 to i32
  %825 = and i32 %824, %821
  %826 = sext i1 %823 to i32
  %827 = and i32 %826, %817
  %select.val.593 = or i32 %827, %825
  store i32 %select.val.593, i32* %select.ptr.592, align 4
  store i1 %in.221, i1* %out.30
  %828 = load i1, i1* %out.29
  %829 = xor i1 %809, true
  %in.222 = and i1 %828, %829
  %830 = load i1, i1* %out.30
  %831 = or i1 %in.222, %830
  %832 = or i1 %in.222, %830
  %833 = or i1 %in.222, %830
  %834 = or i1 %in.222, %830
  %835 = or i1 %in.222, %830
  %836 = or i1 %in.222, %830
  %837 = or i1 %in.222, %830
  %838 = or i1 %in.222, %830
  %839 = or i1 %in.222, %830
  %840 = or i1 %in.222, %830
  %841 = or i1 %in.222, %830
  %842 = load i32, i32* %0, align 4
  %843 = ashr i32 %842, 1
  %844 = load i32, i32* %0
  %845 = sub i1 %841, true
  %846 = xor i1 %845, true
  %847 = sext i1 %845 to i32
  %848 = and i32 %847, %844
  %849 = sext i1 %846 to i32
  %850 = and i32 %849, %843
  %select.val.594 = or i32 %850, %848
  store i32 %select.val.594, i32* %0, align 4
  %851 = getelementptr inbounds i32, i32* %0, i64 1
  %852 = icmp slt i64 1, %len.
  %853 = bitcast i64* %shadow to i32*
  %safe.595 = or i1 %840, %852
  %select.ptr.596 = select i1 %safe.595, i32* %851, i32* %853
  %854 = load i32, i32* %select.ptr.596, align 4
  %855 = ashr i32 %854, 1
  %856 = icmp slt i64 1, %len.
  %857 = bitcast i64* %shadow to i32*
  %safe.597 = or i1 %839, %856
  %select.ptr.598 = select i1 %safe.597, i32* %851, i32* %857
  %858 = load i32, i32* %851
  %859 = sub i1 %839, true
  %860 = xor i1 %859, true
  %861 = sext i1 %859 to i32
  %862 = and i32 %861, %858
  %863 = sext i1 %860 to i32
  %864 = and i32 %863, %855
  %select.val.599 = or i32 %864, %862
  store i32 %select.val.599, i32* %select.ptr.598, align 4
  %865 = getelementptr inbounds i32, i32* %0, i64 2
  %866 = icmp slt i64 2, %len.
  %867 = bitcast i64* %shadow to i32*
  %safe.600 = or i1 %838, %866
  %select.ptr.601 = select i1 %safe.600, i32* %865, i32* %867
  %868 = load i32, i32* %select.ptr.601, align 4
  %869 = ashr i32 %868, 1
  %870 = icmp slt i64 2, %len.
  %871 = bitcast i64* %shadow to i32*
  %safe.602 = or i1 %837, %870
  %select.ptr.603 = select i1 %safe.602, i32* %865, i32* %871
  %872 = load i32, i32* %865
  %873 = sub i1 %837, true
  %874 = xor i1 %873, true
  %875 = sext i1 %873 to i32
  %876 = and i32 %875, %872
  %877 = sext i1 %874 to i32
  %878 = and i32 %877, %869
  %select.val.604 = or i32 %878, %876
  store i32 %select.val.604, i32* %select.ptr.603, align 4
  %879 = sext i32 3 to i64
  %880 = icmp slt i64 0, %879
  %881 = bitcast i64* %shadow to i32*
  %safe.605 = or i1 %836, %880
  %select.ptr.606 = select i1 %safe.605, i32* %6, i32* %881
  %882 = load i32, i32* %select.ptr.606, align 4
  %883 = shl i32 %882, 1
  %884 = sext i32 3 to i64
  %885 = icmp slt i64 0, %884
  %886 = bitcast i64* %shadow to i32*
  %safe.607 = or i1 %835, %885
  %select.ptr.608 = select i1 %safe.607, i32* %6, i32* %886
  %887 = load i32, i32* %6
  %888 = sub i1 %835, true
  %889 = xor i1 %888, true
  %890 = sext i1 %888 to i32
  %891 = and i32 %890, %887
  %892 = sext i1 %889 to i32
  %893 = and i32 %892, %883
  %select.val.609 = or i32 %893, %891
  store i32 %select.val.609, i32* %select.ptr.608, align 4
  %894 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %895 = sext i32 3 to i64
  %896 = icmp slt i64 1, %895
  %897 = bitcast i64* %shadow to i32*
  %safe.610 = or i1 %834, %896
  %select.ptr.611 = select i1 %safe.610, i32* %894, i32* %897
  %898 = load i32, i32* %select.ptr.611, align 4
  %899 = shl i32 %898, 1
  %900 = sext i32 3 to i64
  %901 = icmp slt i64 1, %900
  %902 = bitcast i64* %shadow to i32*
  %safe.612 = or i1 %833, %901
  %select.ptr.613 = select i1 %safe.612, i32* %894, i32* %902
  %903 = load i32, i32* %894
  %904 = sub i1 %833, true
  %905 = xor i1 %904, true
  %906 = sext i1 %904 to i32
  %907 = and i32 %906, %903
  %908 = sext i1 %905 to i32
  %909 = and i32 %908, %899
  %select.val.614 = or i32 %909, %907
  store i32 %select.val.614, i32* %select.ptr.613, align 4
  %910 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %911 = sext i32 3 to i64
  %912 = icmp slt i64 2, %911
  %913 = bitcast i64* %shadow to i32*
  %safe.615 = or i1 %832, %912
  %select.ptr.616 = select i1 %safe.615, i32* %910, i32* %913
  %914 = load i32, i32* %select.ptr.616, align 4
  %915 = shl i32 %914, 1
  %916 = sext i32 3 to i64
  %917 = icmp slt i64 2, %916
  %918 = bitcast i64* %shadow to i32*
  %safe.617 = or i1 %831, %917
  %select.ptr.618 = select i1 %safe.617, i32* %910, i32* %918
  %919 = load i32, i32* %910
  %920 = sub i1 %831, true
  %921 = xor i1 %920, true
  %922 = sext i1 %920 to i32
  %923 = and i32 %922, %919
  %924 = sext i1 %921 to i32
  %925 = and i32 %924, %915
  %select.val.619 = or i32 %925, %923
  store i32 %select.val.619, i32* %select.ptr.618, align 4
  %926 = load i32, i32* %0, align 4
  %927 = and i32 %926, 1
  %928 = icmp ne i32 %927, 0
  %929 = or i1 %in.222, %830
  store i1 %929, i1* %out.31
  %930 = load i1, i1* %out.31
  %in.223 = and i1 %930, %928
  %931 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %932 = sext i32 3 to i64
  %933 = icmp slt i64 2, %932
  %934 = bitcast i64* %shadow to i32*
  %safe.620 = or i1 %in.223, %933
  %select.ptr.621 = select i1 %safe.620, i32* %931, i32* %934
  %935 = load i32, i32* %select.ptr.621, align 4
  %936 = or i32 %935, 1
  %937 = sext i32 3 to i64
  %938 = icmp slt i64 2, %937
  %939 = bitcast i64* %shadow to i32*
  %safe.622 = or i1 %in.223, %938
  %select.ptr.623 = select i1 %safe.622, i32* %931, i32* %939
  %940 = load i32, i32* %931
  %941 = sub i1 %in.223, true
  %942 = xor i1 %941, true
  %943 = sext i1 %941 to i32
  %944 = and i32 %943, %940
  %945 = sext i1 %942 to i32
  %946 = and i32 %945, %936
  %select.val.624 = or i32 %946, %944
  store i32 %select.val.624, i32* %select.ptr.623, align 4
  store i1 %in.223, i1* %out.32
  %947 = load i1, i1* %out.31
  %948 = xor i1 %928, true
  %in.224 = and i1 %947, %948
  %949 = load i1, i1* %out.32
  %950 = or i1 %in.224, %949
  %951 = getelementptr inbounds i32, i32* %0, i64 1
  %952 = icmp slt i64 1, %len.
  %953 = bitcast i64* %shadow to i32*
  %safe.625 = or i1 %950, %952
  %select.ptr.626 = select i1 %safe.625, i32* %951, i32* %953
  %954 = load i32, i32* %select.ptr.626, align 4
  %955 = and i32 %954, 1
  %956 = icmp ne i32 %955, 0
  %957 = or i1 %in.224, %949
  store i1 %957, i1* %out.33
  %958 = load i1, i1* %out.33
  %in.225 = and i1 %958, %956
  %959 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %960 = sext i32 3 to i64
  %961 = icmp slt i64 1, %960
  %962 = bitcast i64* %shadow to i32*
  %safe.627 = or i1 %in.225, %961
  %select.ptr.628 = select i1 %safe.627, i32* %959, i32* %962
  %963 = load i32, i32* %select.ptr.628, align 4
  %964 = or i32 %963, 1
  %965 = sext i32 3 to i64
  %966 = icmp slt i64 1, %965
  %967 = bitcast i64* %shadow to i32*
  %safe.629 = or i1 %in.225, %966
  %select.ptr.630 = select i1 %safe.629, i32* %959, i32* %967
  %968 = load i32, i32* %959
  %969 = sub i1 %in.225, true
  %970 = xor i1 %969, true
  %971 = sext i1 %969 to i32
  %972 = and i32 %971, %968
  %973 = sext i1 %970 to i32
  %974 = and i32 %973, %964
  %select.val.631 = or i32 %974, %972
  store i32 %select.val.631, i32* %select.ptr.630, align 4
  store i1 %in.225, i1* %out.34
  %975 = load i1, i1* %out.33
  %976 = xor i1 %956, true
  %in.226 = and i1 %975, %976
  %977 = load i1, i1* %out.34
  %978 = or i1 %in.226, %977
  %979 = getelementptr inbounds i32, i32* %0, i64 2
  %980 = icmp slt i64 2, %len.
  %981 = bitcast i64* %shadow to i32*
  %safe.632 = or i1 %978, %980
  %select.ptr.633 = select i1 %safe.632, i32* %979, i32* %981
  %982 = load i32, i32* %select.ptr.633, align 4
  %983 = and i32 %982, 1
  %984 = icmp ne i32 %983, 0
  %985 = or i1 %in.226, %977
  store i1 %985, i1* %out.35
  %986 = load i1, i1* %out.35
  %in.227 = and i1 %986, %984
  %987 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %988 = sext i32 3 to i64
  %989 = icmp slt i64 0, %988
  %990 = bitcast i64* %shadow to i32*
  %safe.634 = or i1 %in.227, %989
  %select.ptr.635 = select i1 %safe.634, i32* %987, i32* %990
  %991 = load i32, i32* %select.ptr.635, align 4
  %992 = or i32 %991, 1
  %993 = sext i32 3 to i64
  %994 = icmp slt i64 0, %993
  %995 = bitcast i64* %shadow to i32*
  %safe.636 = or i1 %in.227, %994
  %select.ptr.637 = select i1 %safe.636, i32* %987, i32* %995
  %996 = load i32, i32* %987
  %997 = sub i1 %in.227, true
  %998 = xor i1 %997, true
  %999 = sext i1 %997 to i32
  %1000 = and i32 %999, %996
  %1001 = sext i1 %998 to i32
  %1002 = and i32 %1001, %992
  %select.val.638 = or i32 %1002, %1000
  store i32 %select.val.638, i32* %select.ptr.637, align 4
  store i1 %in.227, i1* %out.36
  %1003 = load i1, i1* %out.35
  %1004 = xor i1 %984, true
  %in.228 = and i1 %1003, %1004
  %1005 = load i1, i1* %out.36
  %1006 = or i1 %in.228, %1005
  %1007 = or i1 %in.228, %1005
  %1008 = or i1 %in.228, %1005
  %1009 = or i1 %in.228, %1005
  %1010 = or i1 %in.228, %1005
  %1011 = or i1 %in.228, %1005
  %1012 = or i1 %in.228, %1005
  %1013 = or i1 %in.228, %1005
  %1014 = or i1 %in.228, %1005
  %1015 = or i1 %in.228, %1005
  %1016 = or i1 %in.228, %1005
  %1017 = load i32, i32* %0, align 4
  %1018 = ashr i32 %1017, 1
  %1019 = load i32, i32* %0
  %1020 = sub i1 %1016, true
  %1021 = xor i1 %1020, true
  %1022 = sext i1 %1020 to i32
  %1023 = and i32 %1022, %1019
  %1024 = sext i1 %1021 to i32
  %1025 = and i32 %1024, %1018
  %select.val.639 = or i32 %1025, %1023
  store i32 %select.val.639, i32* %0, align 4
  %1026 = getelementptr inbounds i32, i32* %0, i64 1
  %1027 = icmp slt i64 1, %len.
  %1028 = bitcast i64* %shadow to i32*
  %safe.640 = or i1 %1015, %1027
  %select.ptr.641 = select i1 %safe.640, i32* %1026, i32* %1028
  %1029 = load i32, i32* %select.ptr.641, align 4
  %1030 = ashr i32 %1029, 1
  %1031 = icmp slt i64 1, %len.
  %1032 = bitcast i64* %shadow to i32*
  %safe.642 = or i1 %1014, %1031
  %select.ptr.643 = select i1 %safe.642, i32* %1026, i32* %1032
  %1033 = load i32, i32* %1026
  %1034 = sub i1 %1014, true
  %1035 = xor i1 %1034, true
  %1036 = sext i1 %1034 to i32
  %1037 = and i32 %1036, %1033
  %1038 = sext i1 %1035 to i32
  %1039 = and i32 %1038, %1030
  %select.val.644 = or i32 %1039, %1037
  store i32 %select.val.644, i32* %select.ptr.643, align 4
  %1040 = getelementptr inbounds i32, i32* %0, i64 2
  %1041 = icmp slt i64 2, %len.
  %1042 = bitcast i64* %shadow to i32*
  %safe.645 = or i1 %1013, %1041
  %select.ptr.646 = select i1 %safe.645, i32* %1040, i32* %1042
  %1043 = load i32, i32* %select.ptr.646, align 4
  %1044 = ashr i32 %1043, 1
  %1045 = icmp slt i64 2, %len.
  %1046 = bitcast i64* %shadow to i32*
  %safe.647 = or i1 %1012, %1045
  %select.ptr.648 = select i1 %safe.647, i32* %1040, i32* %1046
  %1047 = load i32, i32* %1040
  %1048 = sub i1 %1012, true
  %1049 = xor i1 %1048, true
  %1050 = sext i1 %1048 to i32
  %1051 = and i32 %1050, %1047
  %1052 = sext i1 %1049 to i32
  %1053 = and i32 %1052, %1044
  %select.val.649 = or i32 %1053, %1051
  store i32 %select.val.649, i32* %select.ptr.648, align 4
  %1054 = sext i32 3 to i64
  %1055 = icmp slt i64 0, %1054
  %1056 = bitcast i64* %shadow to i32*
  %safe.650 = or i1 %1011, %1055
  %select.ptr.651 = select i1 %safe.650, i32* %6, i32* %1056
  %1057 = load i32, i32* %select.ptr.651, align 4
  %1058 = shl i32 %1057, 1
  %1059 = sext i32 3 to i64
  %1060 = icmp slt i64 0, %1059
  %1061 = bitcast i64* %shadow to i32*
  %safe.652 = or i1 %1010, %1060
  %select.ptr.653 = select i1 %safe.652, i32* %6, i32* %1061
  %1062 = load i32, i32* %6
  %1063 = sub i1 %1010, true
  %1064 = xor i1 %1063, true
  %1065 = sext i1 %1063 to i32
  %1066 = and i32 %1065, %1062
  %1067 = sext i1 %1064 to i32
  %1068 = and i32 %1067, %1058
  %select.val.654 = or i32 %1068, %1066
  store i32 %select.val.654, i32* %select.ptr.653, align 4
  %1069 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1070 = sext i32 3 to i64
  %1071 = icmp slt i64 1, %1070
  %1072 = bitcast i64* %shadow to i32*
  %safe.655 = or i1 %1009, %1071
  %select.ptr.656 = select i1 %safe.655, i32* %1069, i32* %1072
  %1073 = load i32, i32* %select.ptr.656, align 4
  %1074 = shl i32 %1073, 1
  %1075 = sext i32 3 to i64
  %1076 = icmp slt i64 1, %1075
  %1077 = bitcast i64* %shadow to i32*
  %safe.657 = or i1 %1008, %1076
  %select.ptr.658 = select i1 %safe.657, i32* %1069, i32* %1077
  %1078 = load i32, i32* %1069
  %1079 = sub i1 %1008, true
  %1080 = xor i1 %1079, true
  %1081 = sext i1 %1079 to i32
  %1082 = and i32 %1081, %1078
  %1083 = sext i1 %1080 to i32
  %1084 = and i32 %1083, %1074
  %select.val.659 = or i32 %1084, %1082
  store i32 %select.val.659, i32* %select.ptr.658, align 4
  %1085 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1086 = sext i32 3 to i64
  %1087 = icmp slt i64 2, %1086
  %1088 = bitcast i64* %shadow to i32*
  %safe.660 = or i1 %1007, %1087
  %select.ptr.661 = select i1 %safe.660, i32* %1085, i32* %1088
  %1089 = load i32, i32* %select.ptr.661, align 4
  %1090 = shl i32 %1089, 1
  %1091 = sext i32 3 to i64
  %1092 = icmp slt i64 2, %1091
  %1093 = bitcast i64* %shadow to i32*
  %safe.662 = or i1 %1006, %1092
  %select.ptr.663 = select i1 %safe.662, i32* %1085, i32* %1093
  %1094 = load i32, i32* %1085
  %1095 = sub i1 %1006, true
  %1096 = xor i1 %1095, true
  %1097 = sext i1 %1095 to i32
  %1098 = and i32 %1097, %1094
  %1099 = sext i1 %1096 to i32
  %1100 = and i32 %1099, %1090
  %select.val.664 = or i32 %1100, %1098
  store i32 %select.val.664, i32* %select.ptr.663, align 4
  %1101 = load i32, i32* %0, align 4
  %1102 = and i32 %1101, 1
  %1103 = icmp ne i32 %1102, 0
  %1104 = or i1 %in.228, %1005
  store i1 %1104, i1* %out.37
  %1105 = load i1, i1* %out.37
  %in.229 = and i1 %1105, %1103
  %1106 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1107 = sext i32 3 to i64
  %1108 = icmp slt i64 2, %1107
  %1109 = bitcast i64* %shadow to i32*
  %safe.665 = or i1 %in.229, %1108
  %select.ptr.666 = select i1 %safe.665, i32* %1106, i32* %1109
  %1110 = load i32, i32* %select.ptr.666, align 4
  %1111 = or i32 %1110, 1
  %1112 = sext i32 3 to i64
  %1113 = icmp slt i64 2, %1112
  %1114 = bitcast i64* %shadow to i32*
  %safe.667 = or i1 %in.229, %1113
  %select.ptr.668 = select i1 %safe.667, i32* %1106, i32* %1114
  %1115 = load i32, i32* %1106
  %1116 = sub i1 %in.229, true
  %1117 = xor i1 %1116, true
  %1118 = sext i1 %1116 to i32
  %1119 = and i32 %1118, %1115
  %1120 = sext i1 %1117 to i32
  %1121 = and i32 %1120, %1111
  %select.val.669 = or i32 %1121, %1119
  store i32 %select.val.669, i32* %select.ptr.668, align 4
  store i1 %in.229, i1* %out.38
  %1122 = load i1, i1* %out.37
  %1123 = xor i1 %1103, true
  %in.230 = and i1 %1122, %1123
  %1124 = load i1, i1* %out.38
  %1125 = or i1 %in.230, %1124
  %1126 = getelementptr inbounds i32, i32* %0, i64 1
  %1127 = icmp slt i64 1, %len.
  %1128 = bitcast i64* %shadow to i32*
  %safe.670 = or i1 %1125, %1127
  %select.ptr.671 = select i1 %safe.670, i32* %1126, i32* %1128
  %1129 = load i32, i32* %select.ptr.671, align 4
  %1130 = and i32 %1129, 1
  %1131 = icmp ne i32 %1130, 0
  %1132 = or i1 %in.230, %1124
  store i1 %1132, i1* %out.39
  %1133 = load i1, i1* %out.39
  %in.231 = and i1 %1133, %1131
  %1134 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1135 = sext i32 3 to i64
  %1136 = icmp slt i64 1, %1135
  %1137 = bitcast i64* %shadow to i32*
  %safe.672 = or i1 %in.231, %1136
  %select.ptr.673 = select i1 %safe.672, i32* %1134, i32* %1137
  %1138 = load i32, i32* %select.ptr.673, align 4
  %1139 = or i32 %1138, 1
  %1140 = sext i32 3 to i64
  %1141 = icmp slt i64 1, %1140
  %1142 = bitcast i64* %shadow to i32*
  %safe.674 = or i1 %in.231, %1141
  %select.ptr.675 = select i1 %safe.674, i32* %1134, i32* %1142
  %1143 = load i32, i32* %1134
  %1144 = sub i1 %in.231, true
  %1145 = xor i1 %1144, true
  %1146 = sext i1 %1144 to i32
  %1147 = and i32 %1146, %1143
  %1148 = sext i1 %1145 to i32
  %1149 = and i32 %1148, %1139
  %select.val.676 = or i32 %1149, %1147
  store i32 %select.val.676, i32* %select.ptr.675, align 4
  store i1 %in.231, i1* %out.40
  %1150 = load i1, i1* %out.39
  %1151 = xor i1 %1131, true
  %in.232 = and i1 %1150, %1151
  %1152 = load i1, i1* %out.40
  %1153 = or i1 %in.232, %1152
  %1154 = getelementptr inbounds i32, i32* %0, i64 2
  %1155 = icmp slt i64 2, %len.
  %1156 = bitcast i64* %shadow to i32*
  %safe.677 = or i1 %1153, %1155
  %select.ptr.678 = select i1 %safe.677, i32* %1154, i32* %1156
  %1157 = load i32, i32* %select.ptr.678, align 4
  %1158 = and i32 %1157, 1
  %1159 = icmp ne i32 %1158, 0
  %1160 = or i1 %in.232, %1152
  store i1 %1160, i1* %out.41
  %1161 = load i1, i1* %out.41
  %in.233 = and i1 %1161, %1159
  %1162 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %1163 = sext i32 3 to i64
  %1164 = icmp slt i64 0, %1163
  %1165 = bitcast i64* %shadow to i32*
  %safe.679 = or i1 %in.233, %1164
  %select.ptr.680 = select i1 %safe.679, i32* %1162, i32* %1165
  %1166 = load i32, i32* %select.ptr.680, align 4
  %1167 = or i32 %1166, 1
  %1168 = sext i32 3 to i64
  %1169 = icmp slt i64 0, %1168
  %1170 = bitcast i64* %shadow to i32*
  %safe.681 = or i1 %in.233, %1169
  %select.ptr.682 = select i1 %safe.681, i32* %1162, i32* %1170
  %1171 = load i32, i32* %1162
  %1172 = sub i1 %in.233, true
  %1173 = xor i1 %1172, true
  %1174 = sext i1 %1172 to i32
  %1175 = and i32 %1174, %1171
  %1176 = sext i1 %1173 to i32
  %1177 = and i32 %1176, %1167
  %select.val.683 = or i32 %1177, %1175
  store i32 %select.val.683, i32* %select.ptr.682, align 4
  store i1 %in.233, i1* %out.42
  %1178 = load i1, i1* %out.41
  %1179 = xor i1 %1159, true
  %in.234 = and i1 %1178, %1179
  %1180 = load i1, i1* %out.42
  %1181 = or i1 %in.234, %1180
  %1182 = or i1 %in.234, %1180
  %1183 = or i1 %in.234, %1180
  %1184 = or i1 %in.234, %1180
  %1185 = or i1 %in.234, %1180
  %1186 = or i1 %in.234, %1180
  %1187 = or i1 %in.234, %1180
  %1188 = or i1 %in.234, %1180
  %1189 = or i1 %in.234, %1180
  %1190 = or i1 %in.234, %1180
  %1191 = or i1 %in.234, %1180
  %1192 = load i32, i32* %0, align 4
  %1193 = ashr i32 %1192, 1
  %1194 = load i32, i32* %0
  %1195 = sub i1 %1191, true
  %1196 = xor i1 %1195, true
  %1197 = sext i1 %1195 to i32
  %1198 = and i32 %1197, %1194
  %1199 = sext i1 %1196 to i32
  %1200 = and i32 %1199, %1193
  %select.val.684 = or i32 %1200, %1198
  store i32 %select.val.684, i32* %0, align 4
  %1201 = getelementptr inbounds i32, i32* %0, i64 1
  %1202 = icmp slt i64 1, %len.
  %1203 = bitcast i64* %shadow to i32*
  %safe.685 = or i1 %1190, %1202
  %select.ptr.686 = select i1 %safe.685, i32* %1201, i32* %1203
  %1204 = load i32, i32* %select.ptr.686, align 4
  %1205 = ashr i32 %1204, 1
  %1206 = icmp slt i64 1, %len.
  %1207 = bitcast i64* %shadow to i32*
  %safe.687 = or i1 %1189, %1206
  %select.ptr.688 = select i1 %safe.687, i32* %1201, i32* %1207
  %1208 = load i32, i32* %1201
  %1209 = sub i1 %1189, true
  %1210 = xor i1 %1209, true
  %1211 = sext i1 %1209 to i32
  %1212 = and i32 %1211, %1208
  %1213 = sext i1 %1210 to i32
  %1214 = and i32 %1213, %1205
  %select.val.689 = or i32 %1214, %1212
  store i32 %select.val.689, i32* %select.ptr.688, align 4
  %1215 = getelementptr inbounds i32, i32* %0, i64 2
  %1216 = icmp slt i64 2, %len.
  %1217 = bitcast i64* %shadow to i32*
  %safe.690 = or i1 %1188, %1216
  %select.ptr.691 = select i1 %safe.690, i32* %1215, i32* %1217
  %1218 = load i32, i32* %select.ptr.691, align 4
  %1219 = ashr i32 %1218, 1
  %1220 = icmp slt i64 2, %len.
  %1221 = bitcast i64* %shadow to i32*
  %safe.692 = or i1 %1187, %1220
  %select.ptr.693 = select i1 %safe.692, i32* %1215, i32* %1221
  %1222 = load i32, i32* %1215
  %1223 = sub i1 %1187, true
  %1224 = xor i1 %1223, true
  %1225 = sext i1 %1223 to i32
  %1226 = and i32 %1225, %1222
  %1227 = sext i1 %1224 to i32
  %1228 = and i32 %1227, %1219
  %select.val.694 = or i32 %1228, %1226
  store i32 %select.val.694, i32* %select.ptr.693, align 4
  %1229 = sext i32 3 to i64
  %1230 = icmp slt i64 0, %1229
  %1231 = bitcast i64* %shadow to i32*
  %safe.695 = or i1 %1186, %1230
  %select.ptr.696 = select i1 %safe.695, i32* %6, i32* %1231
  %1232 = load i32, i32* %select.ptr.696, align 4
  %1233 = shl i32 %1232, 1
  %1234 = sext i32 3 to i64
  %1235 = icmp slt i64 0, %1234
  %1236 = bitcast i64* %shadow to i32*
  %safe.697 = or i1 %1185, %1235
  %select.ptr.698 = select i1 %safe.697, i32* %6, i32* %1236
  %1237 = load i32, i32* %6
  %1238 = sub i1 %1185, true
  %1239 = xor i1 %1238, true
  %1240 = sext i1 %1238 to i32
  %1241 = and i32 %1240, %1237
  %1242 = sext i1 %1239 to i32
  %1243 = and i32 %1242, %1233
  %select.val.699 = or i32 %1243, %1241
  store i32 %select.val.699, i32* %select.ptr.698, align 4
  %1244 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1245 = sext i32 3 to i64
  %1246 = icmp slt i64 1, %1245
  %1247 = bitcast i64* %shadow to i32*
  %safe.700 = or i1 %1184, %1246
  %select.ptr.701 = select i1 %safe.700, i32* %1244, i32* %1247
  %1248 = load i32, i32* %select.ptr.701, align 4
  %1249 = shl i32 %1248, 1
  %1250 = sext i32 3 to i64
  %1251 = icmp slt i64 1, %1250
  %1252 = bitcast i64* %shadow to i32*
  %safe.702 = or i1 %1183, %1251
  %select.ptr.703 = select i1 %safe.702, i32* %1244, i32* %1252
  %1253 = load i32, i32* %1244
  %1254 = sub i1 %1183, true
  %1255 = xor i1 %1254, true
  %1256 = sext i1 %1254 to i32
  %1257 = and i32 %1256, %1253
  %1258 = sext i1 %1255 to i32
  %1259 = and i32 %1258, %1249
  %select.val.704 = or i32 %1259, %1257
  store i32 %select.val.704, i32* %select.ptr.703, align 4
  %1260 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1261 = sext i32 3 to i64
  %1262 = icmp slt i64 2, %1261
  %1263 = bitcast i64* %shadow to i32*
  %safe.705 = or i1 %1182, %1262
  %select.ptr.706 = select i1 %safe.705, i32* %1260, i32* %1263
  %1264 = load i32, i32* %select.ptr.706, align 4
  %1265 = shl i32 %1264, 1
  %1266 = sext i32 3 to i64
  %1267 = icmp slt i64 2, %1266
  %1268 = bitcast i64* %shadow to i32*
  %safe.707 = or i1 %1181, %1267
  %select.ptr.708 = select i1 %safe.707, i32* %1260, i32* %1268
  %1269 = load i32, i32* %1260
  %1270 = sub i1 %1181, true
  %1271 = xor i1 %1270, true
  %1272 = sext i1 %1270 to i32
  %1273 = and i32 %1272, %1269
  %1274 = sext i1 %1271 to i32
  %1275 = and i32 %1274, %1265
  %select.val.709 = or i32 %1275, %1273
  store i32 %select.val.709, i32* %select.ptr.708, align 4
  %1276 = load i32, i32* %0, align 4
  %1277 = and i32 %1276, 1
  %1278 = icmp ne i32 %1277, 0
  %1279 = or i1 %in.234, %1180
  store i1 %1279, i1* %out.43
  %1280 = load i1, i1* %out.43
  %in.235 = and i1 %1280, %1278
  %1281 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1282 = sext i32 3 to i64
  %1283 = icmp slt i64 2, %1282
  %1284 = bitcast i64* %shadow to i32*
  %safe.710 = or i1 %in.235, %1283
  %select.ptr.711 = select i1 %safe.710, i32* %1281, i32* %1284
  %1285 = load i32, i32* %select.ptr.711, align 4
  %1286 = or i32 %1285, 1
  %1287 = sext i32 3 to i64
  %1288 = icmp slt i64 2, %1287
  %1289 = bitcast i64* %shadow to i32*
  %safe.712 = or i1 %in.235, %1288
  %select.ptr.713 = select i1 %safe.712, i32* %1281, i32* %1289
  %1290 = load i32, i32* %1281
  %1291 = sub i1 %in.235, true
  %1292 = xor i1 %1291, true
  %1293 = sext i1 %1291 to i32
  %1294 = and i32 %1293, %1290
  %1295 = sext i1 %1292 to i32
  %1296 = and i32 %1295, %1286
  %select.val.714 = or i32 %1296, %1294
  store i32 %select.val.714, i32* %select.ptr.713, align 4
  store i1 %in.235, i1* %out.44
  %1297 = load i1, i1* %out.43
  %1298 = xor i1 %1278, true
  %in.236 = and i1 %1297, %1298
  %1299 = load i1, i1* %out.44
  %1300 = or i1 %in.236, %1299
  %1301 = getelementptr inbounds i32, i32* %0, i64 1
  %1302 = icmp slt i64 1, %len.
  %1303 = bitcast i64* %shadow to i32*
  %safe.715 = or i1 %1300, %1302
  %select.ptr.716 = select i1 %safe.715, i32* %1301, i32* %1303
  %1304 = load i32, i32* %select.ptr.716, align 4
  %1305 = and i32 %1304, 1
  %1306 = icmp ne i32 %1305, 0
  %1307 = or i1 %in.236, %1299
  store i1 %1307, i1* %out.45
  %1308 = load i1, i1* %out.45
  %in.237 = and i1 %1308, %1306
  %1309 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1310 = sext i32 3 to i64
  %1311 = icmp slt i64 1, %1310
  %1312 = bitcast i64* %shadow to i32*
  %safe.717 = or i1 %in.237, %1311
  %select.ptr.718 = select i1 %safe.717, i32* %1309, i32* %1312
  %1313 = load i32, i32* %select.ptr.718, align 4
  %1314 = or i32 %1313, 1
  %1315 = sext i32 3 to i64
  %1316 = icmp slt i64 1, %1315
  %1317 = bitcast i64* %shadow to i32*
  %safe.719 = or i1 %in.237, %1316
  %select.ptr.720 = select i1 %safe.719, i32* %1309, i32* %1317
  %1318 = load i32, i32* %1309
  %1319 = sub i1 %in.237, true
  %1320 = xor i1 %1319, true
  %1321 = sext i1 %1319 to i32
  %1322 = and i32 %1321, %1318
  %1323 = sext i1 %1320 to i32
  %1324 = and i32 %1323, %1314
  %select.val.721 = or i32 %1324, %1322
  store i32 %select.val.721, i32* %select.ptr.720, align 4
  store i1 %in.237, i1* %out.46
  %1325 = load i1, i1* %out.45
  %1326 = xor i1 %1306, true
  %in.238 = and i1 %1325, %1326
  %1327 = load i1, i1* %out.46
  %1328 = or i1 %in.238, %1327
  %1329 = getelementptr inbounds i32, i32* %0, i64 2
  %1330 = icmp slt i64 2, %len.
  %1331 = bitcast i64* %shadow to i32*
  %safe.722 = or i1 %1328, %1330
  %select.ptr.723 = select i1 %safe.722, i32* %1329, i32* %1331
  %1332 = load i32, i32* %select.ptr.723, align 4
  %1333 = and i32 %1332, 1
  %1334 = icmp ne i32 %1333, 0
  %1335 = or i1 %in.238, %1327
  store i1 %1335, i1* %out.47
  %1336 = load i1, i1* %out.47
  %in.239 = and i1 %1336, %1334
  %1337 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %1338 = sext i32 3 to i64
  %1339 = icmp slt i64 0, %1338
  %1340 = bitcast i64* %shadow to i32*
  %safe.724 = or i1 %in.239, %1339
  %select.ptr.725 = select i1 %safe.724, i32* %1337, i32* %1340
  %1341 = load i32, i32* %select.ptr.725, align 4
  %1342 = or i32 %1341, 1
  %1343 = sext i32 3 to i64
  %1344 = icmp slt i64 0, %1343
  %1345 = bitcast i64* %shadow to i32*
  %safe.726 = or i1 %in.239, %1344
  %select.ptr.727 = select i1 %safe.726, i32* %1337, i32* %1345
  %1346 = load i32, i32* %1337
  %1347 = sub i1 %in.239, true
  %1348 = xor i1 %1347, true
  %1349 = sext i1 %1347 to i32
  %1350 = and i32 %1349, %1346
  %1351 = sext i1 %1348 to i32
  %1352 = and i32 %1351, %1342
  %select.val.728 = or i32 %1352, %1350
  store i32 %select.val.728, i32* %select.ptr.727, align 4
  store i1 %in.239, i1* %out.48
  %1353 = load i1, i1* %out.47
  %1354 = xor i1 %1334, true
  %in.240 = and i1 %1353, %1354
  %1355 = load i1, i1* %out.48
  %1356 = or i1 %in.240, %1355
  %1357 = or i1 %in.240, %1355
  %1358 = or i1 %in.240, %1355
  %1359 = or i1 %in.240, %1355
  %1360 = or i1 %in.240, %1355
  %1361 = or i1 %in.240, %1355
  %1362 = or i1 %in.240, %1355
  %1363 = or i1 %in.240, %1355
  %1364 = or i1 %in.240, %1355
  %1365 = or i1 %in.240, %1355
  %1366 = or i1 %in.240, %1355
  %1367 = load i32, i32* %0, align 4
  %1368 = ashr i32 %1367, 1
  %1369 = load i32, i32* %0
  %1370 = sub i1 %1366, true
  %1371 = xor i1 %1370, true
  %1372 = sext i1 %1370 to i32
  %1373 = and i32 %1372, %1369
  %1374 = sext i1 %1371 to i32
  %1375 = and i32 %1374, %1368
  %select.val.729 = or i32 %1375, %1373
  store i32 %select.val.729, i32* %0, align 4
  %1376 = getelementptr inbounds i32, i32* %0, i64 1
  %1377 = icmp slt i64 1, %len.
  %1378 = bitcast i64* %shadow to i32*
  %safe.730 = or i1 %1365, %1377
  %select.ptr.731 = select i1 %safe.730, i32* %1376, i32* %1378
  %1379 = load i32, i32* %select.ptr.731, align 4
  %1380 = ashr i32 %1379, 1
  %1381 = icmp slt i64 1, %len.
  %1382 = bitcast i64* %shadow to i32*
  %safe.732 = or i1 %1364, %1381
  %select.ptr.733 = select i1 %safe.732, i32* %1376, i32* %1382
  %1383 = load i32, i32* %1376
  %1384 = sub i1 %1364, true
  %1385 = xor i1 %1384, true
  %1386 = sext i1 %1384 to i32
  %1387 = and i32 %1386, %1383
  %1388 = sext i1 %1385 to i32
  %1389 = and i32 %1388, %1380
  %select.val.734 = or i32 %1389, %1387
  store i32 %select.val.734, i32* %select.ptr.733, align 4
  %1390 = getelementptr inbounds i32, i32* %0, i64 2
  %1391 = icmp slt i64 2, %len.
  %1392 = bitcast i64* %shadow to i32*
  %safe.735 = or i1 %1363, %1391
  %select.ptr.736 = select i1 %safe.735, i32* %1390, i32* %1392
  %1393 = load i32, i32* %select.ptr.736, align 4
  %1394 = ashr i32 %1393, 1
  %1395 = icmp slt i64 2, %len.
  %1396 = bitcast i64* %shadow to i32*
  %safe.737 = or i1 %1362, %1395
  %select.ptr.738 = select i1 %safe.737, i32* %1390, i32* %1396
  %1397 = load i32, i32* %1390
  %1398 = sub i1 %1362, true
  %1399 = xor i1 %1398, true
  %1400 = sext i1 %1398 to i32
  %1401 = and i32 %1400, %1397
  %1402 = sext i1 %1399 to i32
  %1403 = and i32 %1402, %1394
  %select.val.739 = or i32 %1403, %1401
  store i32 %select.val.739, i32* %select.ptr.738, align 4
  %1404 = sext i32 3 to i64
  %1405 = icmp slt i64 0, %1404
  %1406 = bitcast i64* %shadow to i32*
  %safe.740 = or i1 %1361, %1405
  %select.ptr.741 = select i1 %safe.740, i32* %6, i32* %1406
  %1407 = load i32, i32* %select.ptr.741, align 4
  %1408 = shl i32 %1407, 1
  %1409 = sext i32 3 to i64
  %1410 = icmp slt i64 0, %1409
  %1411 = bitcast i64* %shadow to i32*
  %safe.742 = or i1 %1360, %1410
  %select.ptr.743 = select i1 %safe.742, i32* %6, i32* %1411
  %1412 = load i32, i32* %6
  %1413 = sub i1 %1360, true
  %1414 = xor i1 %1413, true
  %1415 = sext i1 %1413 to i32
  %1416 = and i32 %1415, %1412
  %1417 = sext i1 %1414 to i32
  %1418 = and i32 %1417, %1408
  %select.val.744 = or i32 %1418, %1416
  store i32 %select.val.744, i32* %select.ptr.743, align 4
  %1419 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1420 = sext i32 3 to i64
  %1421 = icmp slt i64 1, %1420
  %1422 = bitcast i64* %shadow to i32*
  %safe.745 = or i1 %1359, %1421
  %select.ptr.746 = select i1 %safe.745, i32* %1419, i32* %1422
  %1423 = load i32, i32* %select.ptr.746, align 4
  %1424 = shl i32 %1423, 1
  %1425 = sext i32 3 to i64
  %1426 = icmp slt i64 1, %1425
  %1427 = bitcast i64* %shadow to i32*
  %safe.747 = or i1 %1358, %1426
  %select.ptr.748 = select i1 %safe.747, i32* %1419, i32* %1427
  %1428 = load i32, i32* %1419
  %1429 = sub i1 %1358, true
  %1430 = xor i1 %1429, true
  %1431 = sext i1 %1429 to i32
  %1432 = and i32 %1431, %1428
  %1433 = sext i1 %1430 to i32
  %1434 = and i32 %1433, %1424
  %select.val.749 = or i32 %1434, %1432
  store i32 %select.val.749, i32* %select.ptr.748, align 4
  %1435 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1436 = sext i32 3 to i64
  %1437 = icmp slt i64 2, %1436
  %1438 = bitcast i64* %shadow to i32*
  %safe.750 = or i1 %1357, %1437
  %select.ptr.751 = select i1 %safe.750, i32* %1435, i32* %1438
  %1439 = load i32, i32* %select.ptr.751, align 4
  %1440 = shl i32 %1439, 1
  %1441 = sext i32 3 to i64
  %1442 = icmp slt i64 2, %1441
  %1443 = bitcast i64* %shadow to i32*
  %safe.752 = or i1 %1356, %1442
  %select.ptr.753 = select i1 %safe.752, i32* %1435, i32* %1443
  %1444 = load i32, i32* %1435
  %1445 = sub i1 %1356, true
  %1446 = xor i1 %1445, true
  %1447 = sext i1 %1445 to i32
  %1448 = and i32 %1447, %1444
  %1449 = sext i1 %1446 to i32
  %1450 = and i32 %1449, %1440
  %select.val.754 = or i32 %1450, %1448
  store i32 %select.val.754, i32* %select.ptr.753, align 4
  %1451 = load i32, i32* %0, align 4
  %1452 = and i32 %1451, 1
  %1453 = icmp ne i32 %1452, 0
  %1454 = or i1 %in.240, %1355
  store i1 %1454, i1* %out.49
  %1455 = load i1, i1* %out.49
  %in.241 = and i1 %1455, %1453
  %1456 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1457 = sext i32 3 to i64
  %1458 = icmp slt i64 2, %1457
  %1459 = bitcast i64* %shadow to i32*
  %safe.755 = or i1 %in.241, %1458
  %select.ptr.756 = select i1 %safe.755, i32* %1456, i32* %1459
  %1460 = load i32, i32* %select.ptr.756, align 4
  %1461 = or i32 %1460, 1
  %1462 = sext i32 3 to i64
  %1463 = icmp slt i64 2, %1462
  %1464 = bitcast i64* %shadow to i32*
  %safe.757 = or i1 %in.241, %1463
  %select.ptr.758 = select i1 %safe.757, i32* %1456, i32* %1464
  %1465 = load i32, i32* %1456
  %1466 = sub i1 %in.241, true
  %1467 = xor i1 %1466, true
  %1468 = sext i1 %1466 to i32
  %1469 = and i32 %1468, %1465
  %1470 = sext i1 %1467 to i32
  %1471 = and i32 %1470, %1461
  %select.val.759 = or i32 %1471, %1469
  store i32 %select.val.759, i32* %select.ptr.758, align 4
  store i1 %in.241, i1* %out.50
  %1472 = load i1, i1* %out.49
  %1473 = xor i1 %1453, true
  %in.242 = and i1 %1472, %1473
  %1474 = load i1, i1* %out.50
  %1475 = or i1 %in.242, %1474
  %1476 = getelementptr inbounds i32, i32* %0, i64 1
  %1477 = icmp slt i64 1, %len.
  %1478 = bitcast i64* %shadow to i32*
  %safe.760 = or i1 %1475, %1477
  %select.ptr.761 = select i1 %safe.760, i32* %1476, i32* %1478
  %1479 = load i32, i32* %select.ptr.761, align 4
  %1480 = and i32 %1479, 1
  %1481 = icmp ne i32 %1480, 0
  %1482 = or i1 %in.242, %1474
  store i1 %1482, i1* %out.51
  %1483 = load i1, i1* %out.51
  %in.243 = and i1 %1483, %1481
  %1484 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1485 = sext i32 3 to i64
  %1486 = icmp slt i64 1, %1485
  %1487 = bitcast i64* %shadow to i32*
  %safe.762 = or i1 %in.243, %1486
  %select.ptr.763 = select i1 %safe.762, i32* %1484, i32* %1487
  %1488 = load i32, i32* %select.ptr.763, align 4
  %1489 = or i32 %1488, 1
  %1490 = sext i32 3 to i64
  %1491 = icmp slt i64 1, %1490
  %1492 = bitcast i64* %shadow to i32*
  %safe.764 = or i1 %in.243, %1491
  %select.ptr.765 = select i1 %safe.764, i32* %1484, i32* %1492
  %1493 = load i32, i32* %1484
  %1494 = sub i1 %in.243, true
  %1495 = xor i1 %1494, true
  %1496 = sext i1 %1494 to i32
  %1497 = and i32 %1496, %1493
  %1498 = sext i1 %1495 to i32
  %1499 = and i32 %1498, %1489
  %select.val.766 = or i32 %1499, %1497
  store i32 %select.val.766, i32* %select.ptr.765, align 4
  store i1 %in.243, i1* %out.52
  %1500 = load i1, i1* %out.51
  %1501 = xor i1 %1481, true
  %in.244 = and i1 %1500, %1501
  %1502 = load i1, i1* %out.52
  %1503 = or i1 %in.244, %1502
  %1504 = getelementptr inbounds i32, i32* %0, i64 2
  %1505 = icmp slt i64 2, %len.
  %1506 = bitcast i64* %shadow to i32*
  %safe.767 = or i1 %1503, %1505
  %select.ptr.768 = select i1 %safe.767, i32* %1504, i32* %1506
  %1507 = load i32, i32* %select.ptr.768, align 4
  %1508 = and i32 %1507, 1
  %1509 = icmp ne i32 %1508, 0
  %1510 = or i1 %in.244, %1502
  store i1 %1510, i1* %out.53
  %1511 = load i1, i1* %out.53
  %in.245 = and i1 %1511, %1509
  %1512 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %1513 = sext i32 3 to i64
  %1514 = icmp slt i64 0, %1513
  %1515 = bitcast i64* %shadow to i32*
  %safe.769 = or i1 %in.245, %1514
  %select.ptr.770 = select i1 %safe.769, i32* %1512, i32* %1515
  %1516 = load i32, i32* %select.ptr.770, align 4
  %1517 = or i32 %1516, 1
  %1518 = sext i32 3 to i64
  %1519 = icmp slt i64 0, %1518
  %1520 = bitcast i64* %shadow to i32*
  %safe.771 = or i1 %in.245, %1519
  %select.ptr.772 = select i1 %safe.771, i32* %1512, i32* %1520
  %1521 = load i32, i32* %1512
  %1522 = sub i1 %in.245, true
  %1523 = xor i1 %1522, true
  %1524 = sext i1 %1522 to i32
  %1525 = and i32 %1524, %1521
  %1526 = sext i1 %1523 to i32
  %1527 = and i32 %1526, %1517
  %select.val.773 = or i32 %1527, %1525
  store i32 %select.val.773, i32* %select.ptr.772, align 4
  store i1 %in.245, i1* %out.54
  %1528 = load i1, i1* %out.53
  %1529 = xor i1 %1509, true
  %in.246 = and i1 %1528, %1529
  %1530 = load i1, i1* %out.54
  %1531 = or i1 %in.246, %1530
  %1532 = or i1 %in.246, %1530
  %1533 = or i1 %in.246, %1530
  %1534 = or i1 %in.246, %1530
  %1535 = or i1 %in.246, %1530
  %1536 = or i1 %in.246, %1530
  %1537 = or i1 %in.246, %1530
  %1538 = or i1 %in.246, %1530
  %1539 = or i1 %in.246, %1530
  %1540 = or i1 %in.246, %1530
  %1541 = or i1 %in.246, %1530
  %1542 = load i32, i32* %0, align 4
  %1543 = ashr i32 %1542, 1
  %1544 = load i32, i32* %0
  %1545 = sub i1 %1541, true
  %1546 = xor i1 %1545, true
  %1547 = sext i1 %1545 to i32
  %1548 = and i32 %1547, %1544
  %1549 = sext i1 %1546 to i32
  %1550 = and i32 %1549, %1543
  %select.val.774 = or i32 %1550, %1548
  store i32 %select.val.774, i32* %0, align 4
  %1551 = getelementptr inbounds i32, i32* %0, i64 1
  %1552 = icmp slt i64 1, %len.
  %1553 = bitcast i64* %shadow to i32*
  %safe.775 = or i1 %1540, %1552
  %select.ptr.776 = select i1 %safe.775, i32* %1551, i32* %1553
  %1554 = load i32, i32* %select.ptr.776, align 4
  %1555 = ashr i32 %1554, 1
  %1556 = icmp slt i64 1, %len.
  %1557 = bitcast i64* %shadow to i32*
  %safe.777 = or i1 %1539, %1556
  %select.ptr.778 = select i1 %safe.777, i32* %1551, i32* %1557
  %1558 = load i32, i32* %1551
  %1559 = sub i1 %1539, true
  %1560 = xor i1 %1559, true
  %1561 = sext i1 %1559 to i32
  %1562 = and i32 %1561, %1558
  %1563 = sext i1 %1560 to i32
  %1564 = and i32 %1563, %1555
  %select.val.779 = or i32 %1564, %1562
  store i32 %select.val.779, i32* %select.ptr.778, align 4
  %1565 = getelementptr inbounds i32, i32* %0, i64 2
  %1566 = icmp slt i64 2, %len.
  %1567 = bitcast i64* %shadow to i32*
  %safe.780 = or i1 %1538, %1566
  %select.ptr.781 = select i1 %safe.780, i32* %1565, i32* %1567
  %1568 = load i32, i32* %select.ptr.781, align 4
  %1569 = ashr i32 %1568, 1
  %1570 = icmp slt i64 2, %len.
  %1571 = bitcast i64* %shadow to i32*
  %safe.782 = or i1 %1537, %1570
  %select.ptr.783 = select i1 %safe.782, i32* %1565, i32* %1571
  %1572 = load i32, i32* %1565
  %1573 = sub i1 %1537, true
  %1574 = xor i1 %1573, true
  %1575 = sext i1 %1573 to i32
  %1576 = and i32 %1575, %1572
  %1577 = sext i1 %1574 to i32
  %1578 = and i32 %1577, %1569
  %select.val.784 = or i32 %1578, %1576
  store i32 %select.val.784, i32* %select.ptr.783, align 4
  %1579 = sext i32 3 to i64
  %1580 = icmp slt i64 0, %1579
  %1581 = bitcast i64* %shadow to i32*
  %safe.785 = or i1 %1536, %1580
  %select.ptr.786 = select i1 %safe.785, i32* %6, i32* %1581
  %1582 = load i32, i32* %select.ptr.786, align 4
  %1583 = shl i32 %1582, 1
  %1584 = sext i32 3 to i64
  %1585 = icmp slt i64 0, %1584
  %1586 = bitcast i64* %shadow to i32*
  %safe.787 = or i1 %1535, %1585
  %select.ptr.788 = select i1 %safe.787, i32* %6, i32* %1586
  %1587 = load i32, i32* %6
  %1588 = sub i1 %1535, true
  %1589 = xor i1 %1588, true
  %1590 = sext i1 %1588 to i32
  %1591 = and i32 %1590, %1587
  %1592 = sext i1 %1589 to i32
  %1593 = and i32 %1592, %1583
  %select.val.789 = or i32 %1593, %1591
  store i32 %select.val.789, i32* %select.ptr.788, align 4
  %1594 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1595 = sext i32 3 to i64
  %1596 = icmp slt i64 1, %1595
  %1597 = bitcast i64* %shadow to i32*
  %safe.790 = or i1 %1534, %1596
  %select.ptr.791 = select i1 %safe.790, i32* %1594, i32* %1597
  %1598 = load i32, i32* %select.ptr.791, align 4
  %1599 = shl i32 %1598, 1
  %1600 = sext i32 3 to i64
  %1601 = icmp slt i64 1, %1600
  %1602 = bitcast i64* %shadow to i32*
  %safe.792 = or i1 %1533, %1601
  %select.ptr.793 = select i1 %safe.792, i32* %1594, i32* %1602
  %1603 = load i32, i32* %1594
  %1604 = sub i1 %1533, true
  %1605 = xor i1 %1604, true
  %1606 = sext i1 %1604 to i32
  %1607 = and i32 %1606, %1603
  %1608 = sext i1 %1605 to i32
  %1609 = and i32 %1608, %1599
  %select.val.794 = or i32 %1609, %1607
  store i32 %select.val.794, i32* %select.ptr.793, align 4
  %1610 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1611 = sext i32 3 to i64
  %1612 = icmp slt i64 2, %1611
  %1613 = bitcast i64* %shadow to i32*
  %safe.795 = or i1 %1532, %1612
  %select.ptr.796 = select i1 %safe.795, i32* %1610, i32* %1613
  %1614 = load i32, i32* %select.ptr.796, align 4
  %1615 = shl i32 %1614, 1
  %1616 = sext i32 3 to i64
  %1617 = icmp slt i64 2, %1616
  %1618 = bitcast i64* %shadow to i32*
  %safe.797 = or i1 %1531, %1617
  %select.ptr.798 = select i1 %safe.797, i32* %1610, i32* %1618
  %1619 = load i32, i32* %1610
  %1620 = sub i1 %1531, true
  %1621 = xor i1 %1620, true
  %1622 = sext i1 %1620 to i32
  %1623 = and i32 %1622, %1619
  %1624 = sext i1 %1621 to i32
  %1625 = and i32 %1624, %1615
  %select.val.799 = or i32 %1625, %1623
  store i32 %select.val.799, i32* %select.ptr.798, align 4
  %1626 = load i32, i32* %0, align 4
  %1627 = and i32 %1626, 1
  %1628 = icmp ne i32 %1627, 0
  %1629 = or i1 %in.246, %1530
  store i1 %1629, i1* %out.55
  %1630 = load i1, i1* %out.55
  %in.247 = and i1 %1630, %1628
  %1631 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1632 = sext i32 3 to i64
  %1633 = icmp slt i64 2, %1632
  %1634 = bitcast i64* %shadow to i32*
  %safe.800 = or i1 %in.247, %1633
  %select.ptr.801 = select i1 %safe.800, i32* %1631, i32* %1634
  %1635 = load i32, i32* %select.ptr.801, align 4
  %1636 = or i32 %1635, 1
  %1637 = sext i32 3 to i64
  %1638 = icmp slt i64 2, %1637
  %1639 = bitcast i64* %shadow to i32*
  %safe.802 = or i1 %in.247, %1638
  %select.ptr.803 = select i1 %safe.802, i32* %1631, i32* %1639
  %1640 = load i32, i32* %1631
  %1641 = sub i1 %in.247, true
  %1642 = xor i1 %1641, true
  %1643 = sext i1 %1641 to i32
  %1644 = and i32 %1643, %1640
  %1645 = sext i1 %1642 to i32
  %1646 = and i32 %1645, %1636
  %select.val.804 = or i32 %1646, %1644
  store i32 %select.val.804, i32* %select.ptr.803, align 4
  store i1 %in.247, i1* %out.56
  %1647 = load i1, i1* %out.55
  %1648 = xor i1 %1628, true
  %in.248 = and i1 %1647, %1648
  %1649 = load i1, i1* %out.56
  %1650 = or i1 %in.248, %1649
  %1651 = getelementptr inbounds i32, i32* %0, i64 1
  %1652 = icmp slt i64 1, %len.
  %1653 = bitcast i64* %shadow to i32*
  %safe.805 = or i1 %1650, %1652
  %select.ptr.806 = select i1 %safe.805, i32* %1651, i32* %1653
  %1654 = load i32, i32* %select.ptr.806, align 4
  %1655 = and i32 %1654, 1
  %1656 = icmp ne i32 %1655, 0
  %1657 = or i1 %in.248, %1649
  store i1 %1657, i1* %out.57
  %1658 = load i1, i1* %out.57
  %in.249 = and i1 %1658, %1656
  %1659 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1660 = sext i32 3 to i64
  %1661 = icmp slt i64 1, %1660
  %1662 = bitcast i64* %shadow to i32*
  %safe.807 = or i1 %in.249, %1661
  %select.ptr.808 = select i1 %safe.807, i32* %1659, i32* %1662
  %1663 = load i32, i32* %select.ptr.808, align 4
  %1664 = or i32 %1663, 1
  %1665 = sext i32 3 to i64
  %1666 = icmp slt i64 1, %1665
  %1667 = bitcast i64* %shadow to i32*
  %safe.809 = or i1 %in.249, %1666
  %select.ptr.810 = select i1 %safe.809, i32* %1659, i32* %1667
  %1668 = load i32, i32* %1659
  %1669 = sub i1 %in.249, true
  %1670 = xor i1 %1669, true
  %1671 = sext i1 %1669 to i32
  %1672 = and i32 %1671, %1668
  %1673 = sext i1 %1670 to i32
  %1674 = and i32 %1673, %1664
  %select.val.811 = or i32 %1674, %1672
  store i32 %select.val.811, i32* %select.ptr.810, align 4
  store i1 %in.249, i1* %out.58
  %1675 = load i1, i1* %out.57
  %1676 = xor i1 %1656, true
  %in.250 = and i1 %1675, %1676
  %1677 = load i1, i1* %out.58
  %1678 = or i1 %in.250, %1677
  %1679 = getelementptr inbounds i32, i32* %0, i64 2
  %1680 = icmp slt i64 2, %len.
  %1681 = bitcast i64* %shadow to i32*
  %safe.812 = or i1 %1678, %1680
  %select.ptr.813 = select i1 %safe.812, i32* %1679, i32* %1681
  %1682 = load i32, i32* %select.ptr.813, align 4
  %1683 = and i32 %1682, 1
  %1684 = icmp ne i32 %1683, 0
  %1685 = or i1 %in.250, %1677
  store i1 %1685, i1* %out.59
  %1686 = load i1, i1* %out.59
  %in.251 = and i1 %1686, %1684
  %1687 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %1688 = sext i32 3 to i64
  %1689 = icmp slt i64 0, %1688
  %1690 = bitcast i64* %shadow to i32*
  %safe.814 = or i1 %in.251, %1689
  %select.ptr.815 = select i1 %safe.814, i32* %1687, i32* %1690
  %1691 = load i32, i32* %select.ptr.815, align 4
  %1692 = or i32 %1691, 1
  %1693 = sext i32 3 to i64
  %1694 = icmp slt i64 0, %1693
  %1695 = bitcast i64* %shadow to i32*
  %safe.816 = or i1 %in.251, %1694
  %select.ptr.817 = select i1 %safe.816, i32* %1687, i32* %1695
  %1696 = load i32, i32* %1687
  %1697 = sub i1 %in.251, true
  %1698 = xor i1 %1697, true
  %1699 = sext i1 %1697 to i32
  %1700 = and i32 %1699, %1696
  %1701 = sext i1 %1698 to i32
  %1702 = and i32 %1701, %1692
  %select.val.818 = or i32 %1702, %1700
  store i32 %select.val.818, i32* %select.ptr.817, align 4
  store i1 %in.251, i1* %out.60
  %1703 = load i1, i1* %out.59
  %1704 = xor i1 %1684, true
  %in.252 = and i1 %1703, %1704
  %1705 = load i1, i1* %out.60
  %1706 = or i1 %in.252, %1705
  %1707 = or i1 %in.252, %1705
  %1708 = or i1 %in.252, %1705
  %1709 = or i1 %in.252, %1705
  %1710 = or i1 %in.252, %1705
  %1711 = or i1 %in.252, %1705
  %1712 = or i1 %in.252, %1705
  %1713 = or i1 %in.252, %1705
  %1714 = or i1 %in.252, %1705
  %1715 = or i1 %in.252, %1705
  %1716 = or i1 %in.252, %1705
  %1717 = load i32, i32* %0, align 4
  %1718 = ashr i32 %1717, 1
  %1719 = load i32, i32* %0
  %1720 = sub i1 %1716, true
  %1721 = xor i1 %1720, true
  %1722 = sext i1 %1720 to i32
  %1723 = and i32 %1722, %1719
  %1724 = sext i1 %1721 to i32
  %1725 = and i32 %1724, %1718
  %select.val.819 = or i32 %1725, %1723
  store i32 %select.val.819, i32* %0, align 4
  %1726 = getelementptr inbounds i32, i32* %0, i64 1
  %1727 = icmp slt i64 1, %len.
  %1728 = bitcast i64* %shadow to i32*
  %safe.820 = or i1 %1715, %1727
  %select.ptr.821 = select i1 %safe.820, i32* %1726, i32* %1728
  %1729 = load i32, i32* %select.ptr.821, align 4
  %1730 = ashr i32 %1729, 1
  %1731 = icmp slt i64 1, %len.
  %1732 = bitcast i64* %shadow to i32*
  %safe.822 = or i1 %1714, %1731
  %select.ptr.823 = select i1 %safe.822, i32* %1726, i32* %1732
  %1733 = load i32, i32* %1726
  %1734 = sub i1 %1714, true
  %1735 = xor i1 %1734, true
  %1736 = sext i1 %1734 to i32
  %1737 = and i32 %1736, %1733
  %1738 = sext i1 %1735 to i32
  %1739 = and i32 %1738, %1730
  %select.val.824 = or i32 %1739, %1737
  store i32 %select.val.824, i32* %select.ptr.823, align 4
  %1740 = getelementptr inbounds i32, i32* %0, i64 2
  %1741 = icmp slt i64 2, %len.
  %1742 = bitcast i64* %shadow to i32*
  %safe.825 = or i1 %1713, %1741
  %select.ptr.826 = select i1 %safe.825, i32* %1740, i32* %1742
  %1743 = load i32, i32* %select.ptr.826, align 4
  %1744 = ashr i32 %1743, 1
  %1745 = icmp slt i64 2, %len.
  %1746 = bitcast i64* %shadow to i32*
  %safe.827 = or i1 %1712, %1745
  %select.ptr.828 = select i1 %safe.827, i32* %1740, i32* %1746
  %1747 = load i32, i32* %1740
  %1748 = sub i1 %1712, true
  %1749 = xor i1 %1748, true
  %1750 = sext i1 %1748 to i32
  %1751 = and i32 %1750, %1747
  %1752 = sext i1 %1749 to i32
  %1753 = and i32 %1752, %1744
  %select.val.829 = or i32 %1753, %1751
  store i32 %select.val.829, i32* %select.ptr.828, align 4
  %1754 = sext i32 3 to i64
  %1755 = icmp slt i64 0, %1754
  %1756 = bitcast i64* %shadow to i32*
  %safe.830 = or i1 %1711, %1755
  %select.ptr.831 = select i1 %safe.830, i32* %6, i32* %1756
  %1757 = load i32, i32* %select.ptr.831, align 4
  %1758 = shl i32 %1757, 1
  %1759 = sext i32 3 to i64
  %1760 = icmp slt i64 0, %1759
  %1761 = bitcast i64* %shadow to i32*
  %safe.832 = or i1 %1710, %1760
  %select.ptr.833 = select i1 %safe.832, i32* %6, i32* %1761
  %1762 = load i32, i32* %6
  %1763 = sub i1 %1710, true
  %1764 = xor i1 %1763, true
  %1765 = sext i1 %1763 to i32
  %1766 = and i32 %1765, %1762
  %1767 = sext i1 %1764 to i32
  %1768 = and i32 %1767, %1758
  %select.val.834 = or i32 %1768, %1766
  store i32 %select.val.834, i32* %select.ptr.833, align 4
  %1769 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1770 = sext i32 3 to i64
  %1771 = icmp slt i64 1, %1770
  %1772 = bitcast i64* %shadow to i32*
  %safe.835 = or i1 %1709, %1771
  %select.ptr.836 = select i1 %safe.835, i32* %1769, i32* %1772
  %1773 = load i32, i32* %select.ptr.836, align 4
  %1774 = shl i32 %1773, 1
  %1775 = sext i32 3 to i64
  %1776 = icmp slt i64 1, %1775
  %1777 = bitcast i64* %shadow to i32*
  %safe.837 = or i1 %1708, %1776
  %select.ptr.838 = select i1 %safe.837, i32* %1769, i32* %1777
  %1778 = load i32, i32* %1769
  %1779 = sub i1 %1708, true
  %1780 = xor i1 %1779, true
  %1781 = sext i1 %1779 to i32
  %1782 = and i32 %1781, %1778
  %1783 = sext i1 %1780 to i32
  %1784 = and i32 %1783, %1774
  %select.val.839 = or i32 %1784, %1782
  store i32 %select.val.839, i32* %select.ptr.838, align 4
  %1785 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1786 = sext i32 3 to i64
  %1787 = icmp slt i64 2, %1786
  %1788 = bitcast i64* %shadow to i32*
  %safe.840 = or i1 %1707, %1787
  %select.ptr.841 = select i1 %safe.840, i32* %1785, i32* %1788
  %1789 = load i32, i32* %select.ptr.841, align 4
  %1790 = shl i32 %1789, 1
  %1791 = sext i32 3 to i64
  %1792 = icmp slt i64 2, %1791
  %1793 = bitcast i64* %shadow to i32*
  %safe.842 = or i1 %1706, %1792
  %select.ptr.843 = select i1 %safe.842, i32* %1785, i32* %1793
  %1794 = load i32, i32* %1785
  %1795 = sub i1 %1706, true
  %1796 = xor i1 %1795, true
  %1797 = sext i1 %1795 to i32
  %1798 = and i32 %1797, %1794
  %1799 = sext i1 %1796 to i32
  %1800 = and i32 %1799, %1790
  %select.val.844 = or i32 %1800, %1798
  store i32 %select.val.844, i32* %select.ptr.843, align 4
  %1801 = load i32, i32* %0, align 4
  %1802 = and i32 %1801, 1
  %1803 = icmp ne i32 %1802, 0
  %1804 = or i1 %in.252, %1705
  store i1 %1804, i1* %out.61
  %1805 = load i1, i1* %out.61
  %in.253 = and i1 %1805, %1803
  %1806 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1807 = sext i32 3 to i64
  %1808 = icmp slt i64 2, %1807
  %1809 = bitcast i64* %shadow to i32*
  %safe.845 = or i1 %in.253, %1808
  %select.ptr.846 = select i1 %safe.845, i32* %1806, i32* %1809
  %1810 = load i32, i32* %select.ptr.846, align 4
  %1811 = or i32 %1810, 1
  %1812 = sext i32 3 to i64
  %1813 = icmp slt i64 2, %1812
  %1814 = bitcast i64* %shadow to i32*
  %safe.847 = or i1 %in.253, %1813
  %select.ptr.848 = select i1 %safe.847, i32* %1806, i32* %1814
  %1815 = load i32, i32* %1806
  %1816 = sub i1 %in.253, true
  %1817 = xor i1 %1816, true
  %1818 = sext i1 %1816 to i32
  %1819 = and i32 %1818, %1815
  %1820 = sext i1 %1817 to i32
  %1821 = and i32 %1820, %1811
  %select.val.849 = or i32 %1821, %1819
  store i32 %select.val.849, i32* %select.ptr.848, align 4
  store i1 %in.253, i1* %out.62
  %1822 = load i1, i1* %out.61
  %1823 = xor i1 %1803, true
  %in.254 = and i1 %1822, %1823
  %1824 = load i1, i1* %out.62
  %1825 = or i1 %in.254, %1824
  %1826 = getelementptr inbounds i32, i32* %0, i64 1
  %1827 = icmp slt i64 1, %len.
  %1828 = bitcast i64* %shadow to i32*
  %safe.850 = or i1 %1825, %1827
  %select.ptr.851 = select i1 %safe.850, i32* %1826, i32* %1828
  %1829 = load i32, i32* %select.ptr.851, align 4
  %1830 = and i32 %1829, 1
  %1831 = icmp ne i32 %1830, 0
  %1832 = or i1 %in.254, %1824
  store i1 %1832, i1* %out.63
  %1833 = load i1, i1* %out.63
  %in.255 = and i1 %1833, %1831
  %1834 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1835 = sext i32 3 to i64
  %1836 = icmp slt i64 1, %1835
  %1837 = bitcast i64* %shadow to i32*
  %safe.852 = or i1 %in.255, %1836
  %select.ptr.853 = select i1 %safe.852, i32* %1834, i32* %1837
  %1838 = load i32, i32* %select.ptr.853, align 4
  %1839 = or i32 %1838, 1
  %1840 = sext i32 3 to i64
  %1841 = icmp slt i64 1, %1840
  %1842 = bitcast i64* %shadow to i32*
  %safe.854 = or i1 %in.255, %1841
  %select.ptr.855 = select i1 %safe.854, i32* %1834, i32* %1842
  %1843 = load i32, i32* %1834
  %1844 = sub i1 %in.255, true
  %1845 = xor i1 %1844, true
  %1846 = sext i1 %1844 to i32
  %1847 = and i32 %1846, %1843
  %1848 = sext i1 %1845 to i32
  %1849 = and i32 %1848, %1839
  %select.val.856 = or i32 %1849, %1847
  store i32 %select.val.856, i32* %select.ptr.855, align 4
  store i1 %in.255, i1* %out.64
  %1850 = load i1, i1* %out.63
  %1851 = xor i1 %1831, true
  %in.256 = and i1 %1850, %1851
  %1852 = load i1, i1* %out.64
  %1853 = or i1 %in.256, %1852
  %1854 = getelementptr inbounds i32, i32* %0, i64 2
  %1855 = icmp slt i64 2, %len.
  %1856 = bitcast i64* %shadow to i32*
  %safe.857 = or i1 %1853, %1855
  %select.ptr.858 = select i1 %safe.857, i32* %1854, i32* %1856
  %1857 = load i32, i32* %select.ptr.858, align 4
  %1858 = and i32 %1857, 1
  %1859 = icmp ne i32 %1858, 0
  %1860 = or i1 %in.256, %1852
  store i1 %1860, i1* %out.65
  %1861 = load i1, i1* %out.65
  %in.257 = and i1 %1861, %1859
  %1862 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %1863 = sext i32 3 to i64
  %1864 = icmp slt i64 0, %1863
  %1865 = bitcast i64* %shadow to i32*
  %safe.859 = or i1 %in.257, %1864
  %select.ptr.860 = select i1 %safe.859, i32* %1862, i32* %1865
  %1866 = load i32, i32* %select.ptr.860, align 4
  %1867 = or i32 %1866, 1
  %1868 = sext i32 3 to i64
  %1869 = icmp slt i64 0, %1868
  %1870 = bitcast i64* %shadow to i32*
  %safe.861 = or i1 %in.257, %1869
  %select.ptr.862 = select i1 %safe.861, i32* %1862, i32* %1870
  %1871 = load i32, i32* %1862
  %1872 = sub i1 %in.257, true
  %1873 = xor i1 %1872, true
  %1874 = sext i1 %1872 to i32
  %1875 = and i32 %1874, %1871
  %1876 = sext i1 %1873 to i32
  %1877 = and i32 %1876, %1867
  %select.val.863 = or i32 %1877, %1875
  store i32 %select.val.863, i32* %select.ptr.862, align 4
  store i1 %in.257, i1* %out.66
  %1878 = load i1, i1* %out.65
  %1879 = xor i1 %1859, true
  %in.258 = and i1 %1878, %1879
  %1880 = load i1, i1* %out.66
  %1881 = or i1 %in.258, %1880
  %1882 = or i1 %in.258, %1880
  %1883 = or i1 %in.258, %1880
  %1884 = or i1 %in.258, %1880
  %1885 = or i1 %in.258, %1880
  %1886 = or i1 %in.258, %1880
  %1887 = or i1 %in.258, %1880
  %1888 = or i1 %in.258, %1880
  %1889 = or i1 %in.258, %1880
  %1890 = or i1 %in.258, %1880
  %1891 = or i1 %in.258, %1880
  %1892 = load i32, i32* %0, align 4
  %1893 = ashr i32 %1892, 1
  %1894 = load i32, i32* %0
  %1895 = sub i1 %1891, true
  %1896 = xor i1 %1895, true
  %1897 = sext i1 %1895 to i32
  %1898 = and i32 %1897, %1894
  %1899 = sext i1 %1896 to i32
  %1900 = and i32 %1899, %1893
  %select.val.864 = or i32 %1900, %1898
  store i32 %select.val.864, i32* %0, align 4
  %1901 = getelementptr inbounds i32, i32* %0, i64 1
  %1902 = icmp slt i64 1, %len.
  %1903 = bitcast i64* %shadow to i32*
  %safe.865 = or i1 %1890, %1902
  %select.ptr.866 = select i1 %safe.865, i32* %1901, i32* %1903
  %1904 = load i32, i32* %select.ptr.866, align 4
  %1905 = ashr i32 %1904, 1
  %1906 = icmp slt i64 1, %len.
  %1907 = bitcast i64* %shadow to i32*
  %safe.867 = or i1 %1889, %1906
  %select.ptr.868 = select i1 %safe.867, i32* %1901, i32* %1907
  %1908 = load i32, i32* %1901
  %1909 = sub i1 %1889, true
  %1910 = xor i1 %1909, true
  %1911 = sext i1 %1909 to i32
  %1912 = and i32 %1911, %1908
  %1913 = sext i1 %1910 to i32
  %1914 = and i32 %1913, %1905
  %select.val.869 = or i32 %1914, %1912
  store i32 %select.val.869, i32* %select.ptr.868, align 4
  %1915 = getelementptr inbounds i32, i32* %0, i64 2
  %1916 = icmp slt i64 2, %len.
  %1917 = bitcast i64* %shadow to i32*
  %safe.870 = or i1 %1888, %1916
  %select.ptr.871 = select i1 %safe.870, i32* %1915, i32* %1917
  %1918 = load i32, i32* %select.ptr.871, align 4
  %1919 = ashr i32 %1918, 1
  %1920 = icmp slt i64 2, %len.
  %1921 = bitcast i64* %shadow to i32*
  %safe.872 = or i1 %1887, %1920
  %select.ptr.873 = select i1 %safe.872, i32* %1915, i32* %1921
  %1922 = load i32, i32* %1915
  %1923 = sub i1 %1887, true
  %1924 = xor i1 %1923, true
  %1925 = sext i1 %1923 to i32
  %1926 = and i32 %1925, %1922
  %1927 = sext i1 %1924 to i32
  %1928 = and i32 %1927, %1919
  %select.val.874 = or i32 %1928, %1926
  store i32 %select.val.874, i32* %select.ptr.873, align 4
  %1929 = sext i32 3 to i64
  %1930 = icmp slt i64 0, %1929
  %1931 = bitcast i64* %shadow to i32*
  %safe.875 = or i1 %1886, %1930
  %select.ptr.876 = select i1 %safe.875, i32* %6, i32* %1931
  %1932 = load i32, i32* %select.ptr.876, align 4
  %1933 = shl i32 %1932, 1
  %1934 = sext i32 3 to i64
  %1935 = icmp slt i64 0, %1934
  %1936 = bitcast i64* %shadow to i32*
  %safe.877 = or i1 %1885, %1935
  %select.ptr.878 = select i1 %safe.877, i32* %6, i32* %1936
  %1937 = load i32, i32* %6
  %1938 = sub i1 %1885, true
  %1939 = xor i1 %1938, true
  %1940 = sext i1 %1938 to i32
  %1941 = and i32 %1940, %1937
  %1942 = sext i1 %1939 to i32
  %1943 = and i32 %1942, %1933
  %select.val.879 = or i32 %1943, %1941
  store i32 %select.val.879, i32* %select.ptr.878, align 4
  %1944 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %1945 = sext i32 3 to i64
  %1946 = icmp slt i64 1, %1945
  %1947 = bitcast i64* %shadow to i32*
  %safe.880 = or i1 %1884, %1946
  %select.ptr.881 = select i1 %safe.880, i32* %1944, i32* %1947
  %1948 = load i32, i32* %select.ptr.881, align 4
  %1949 = shl i32 %1948, 1
  %1950 = sext i32 3 to i64
  %1951 = icmp slt i64 1, %1950
  %1952 = bitcast i64* %shadow to i32*
  %safe.882 = or i1 %1883, %1951
  %select.ptr.883 = select i1 %safe.882, i32* %1944, i32* %1952
  %1953 = load i32, i32* %1944
  %1954 = sub i1 %1883, true
  %1955 = xor i1 %1954, true
  %1956 = sext i1 %1954 to i32
  %1957 = and i32 %1956, %1953
  %1958 = sext i1 %1955 to i32
  %1959 = and i32 %1958, %1949
  %select.val.884 = or i32 %1959, %1957
  store i32 %select.val.884, i32* %select.ptr.883, align 4
  %1960 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1961 = sext i32 3 to i64
  %1962 = icmp slt i64 2, %1961
  %1963 = bitcast i64* %shadow to i32*
  %safe.885 = or i1 %1882, %1962
  %select.ptr.886 = select i1 %safe.885, i32* %1960, i32* %1963
  %1964 = load i32, i32* %select.ptr.886, align 4
  %1965 = shl i32 %1964, 1
  %1966 = sext i32 3 to i64
  %1967 = icmp slt i64 2, %1966
  %1968 = bitcast i64* %shadow to i32*
  %safe.887 = or i1 %1881, %1967
  %select.ptr.888 = select i1 %safe.887, i32* %1960, i32* %1968
  %1969 = load i32, i32* %1960
  %1970 = sub i1 %1881, true
  %1971 = xor i1 %1970, true
  %1972 = sext i1 %1970 to i32
  %1973 = and i32 %1972, %1969
  %1974 = sext i1 %1971 to i32
  %1975 = and i32 %1974, %1965
  %select.val.889 = or i32 %1975, %1973
  store i32 %select.val.889, i32* %select.ptr.888, align 4
  %1976 = load i32, i32* %0, align 4
  %1977 = and i32 %1976, 1
  %1978 = icmp ne i32 %1977, 0
  %1979 = or i1 %in.258, %1880
  store i1 %1979, i1* %out.67
  %1980 = load i1, i1* %out.67
  %in.259 = and i1 %1980, %1978
  %1981 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %1982 = sext i32 3 to i64
  %1983 = icmp slt i64 2, %1982
  %1984 = bitcast i64* %shadow to i32*
  %safe.890 = or i1 %in.259, %1983
  %select.ptr.891 = select i1 %safe.890, i32* %1981, i32* %1984
  %1985 = load i32, i32* %select.ptr.891, align 4
  %1986 = or i32 %1985, 1
  %1987 = sext i32 3 to i64
  %1988 = icmp slt i64 2, %1987
  %1989 = bitcast i64* %shadow to i32*
  %safe.892 = or i1 %in.259, %1988
  %select.ptr.893 = select i1 %safe.892, i32* %1981, i32* %1989
  %1990 = load i32, i32* %1981
  %1991 = sub i1 %in.259, true
  %1992 = xor i1 %1991, true
  %1993 = sext i1 %1991 to i32
  %1994 = and i32 %1993, %1990
  %1995 = sext i1 %1992 to i32
  %1996 = and i32 %1995, %1986
  %select.val.894 = or i32 %1996, %1994
  store i32 %select.val.894, i32* %select.ptr.893, align 4
  store i1 %in.259, i1* %out.68
  %1997 = load i1, i1* %out.67
  %1998 = xor i1 %1978, true
  %in.260 = and i1 %1997, %1998
  %1999 = load i1, i1* %out.68
  %2000 = or i1 %in.260, %1999
  %2001 = getelementptr inbounds i32, i32* %0, i64 1
  %2002 = icmp slt i64 1, %len.
  %2003 = bitcast i64* %shadow to i32*
  %safe.895 = or i1 %2000, %2002
  %select.ptr.896 = select i1 %safe.895, i32* %2001, i32* %2003
  %2004 = load i32, i32* %select.ptr.896, align 4
  %2005 = and i32 %2004, 1
  %2006 = icmp ne i32 %2005, 0
  %2007 = or i1 %in.260, %1999
  store i1 %2007, i1* %out.69
  %2008 = load i1, i1* %out.69
  %in.261 = and i1 %2008, %2006
  %2009 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2010 = sext i32 3 to i64
  %2011 = icmp slt i64 1, %2010
  %2012 = bitcast i64* %shadow to i32*
  %safe.897 = or i1 %in.261, %2011
  %select.ptr.898 = select i1 %safe.897, i32* %2009, i32* %2012
  %2013 = load i32, i32* %select.ptr.898, align 4
  %2014 = or i32 %2013, 1
  %2015 = sext i32 3 to i64
  %2016 = icmp slt i64 1, %2015
  %2017 = bitcast i64* %shadow to i32*
  %safe.899 = or i1 %in.261, %2016
  %select.ptr.900 = select i1 %safe.899, i32* %2009, i32* %2017
  %2018 = load i32, i32* %2009
  %2019 = sub i1 %in.261, true
  %2020 = xor i1 %2019, true
  %2021 = sext i1 %2019 to i32
  %2022 = and i32 %2021, %2018
  %2023 = sext i1 %2020 to i32
  %2024 = and i32 %2023, %2014
  %select.val.901 = or i32 %2024, %2022
  store i32 %select.val.901, i32* %select.ptr.900, align 4
  store i1 %in.261, i1* %out.70
  %2025 = load i1, i1* %out.69
  %2026 = xor i1 %2006, true
  %in.262 = and i1 %2025, %2026
  %2027 = load i1, i1* %out.70
  %2028 = or i1 %in.262, %2027
  %2029 = getelementptr inbounds i32, i32* %0, i64 2
  %2030 = icmp slt i64 2, %len.
  %2031 = bitcast i64* %shadow to i32*
  %safe.902 = or i1 %2028, %2030
  %select.ptr.903 = select i1 %safe.902, i32* %2029, i32* %2031
  %2032 = load i32, i32* %select.ptr.903, align 4
  %2033 = and i32 %2032, 1
  %2034 = icmp ne i32 %2033, 0
  %2035 = or i1 %in.262, %2027
  store i1 %2035, i1* %out.71
  %2036 = load i1, i1* %out.71
  %in.263 = and i1 %2036, %2034
  %2037 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %2038 = sext i32 3 to i64
  %2039 = icmp slt i64 0, %2038
  %2040 = bitcast i64* %shadow to i32*
  %safe.904 = or i1 %in.263, %2039
  %select.ptr.905 = select i1 %safe.904, i32* %2037, i32* %2040
  %2041 = load i32, i32* %select.ptr.905, align 4
  %2042 = or i32 %2041, 1
  %2043 = sext i32 3 to i64
  %2044 = icmp slt i64 0, %2043
  %2045 = bitcast i64* %shadow to i32*
  %safe.906 = or i1 %in.263, %2044
  %select.ptr.907 = select i1 %safe.906, i32* %2037, i32* %2045
  %2046 = load i32, i32* %2037
  %2047 = sub i1 %in.263, true
  %2048 = xor i1 %2047, true
  %2049 = sext i1 %2047 to i32
  %2050 = and i32 %2049, %2046
  %2051 = sext i1 %2048 to i32
  %2052 = and i32 %2051, %2042
  %select.val.908 = or i32 %2052, %2050
  store i32 %select.val.908, i32* %select.ptr.907, align 4
  store i1 %in.263, i1* %out.72
  %2053 = load i1, i1* %out.71
  %2054 = xor i1 %2034, true
  %in.264 = and i1 %2053, %2054
  %2055 = load i1, i1* %out.72
  %2056 = or i1 %in.264, %2055
  %2057 = or i1 %in.264, %2055
  %2058 = or i1 %in.264, %2055
  %2059 = or i1 %in.264, %2055
  %2060 = or i1 %in.264, %2055
  %2061 = or i1 %in.264, %2055
  %2062 = or i1 %in.264, %2055
  %2063 = or i1 %in.264, %2055
  %2064 = or i1 %in.264, %2055
  %2065 = or i1 %in.264, %2055
  %2066 = or i1 %in.264, %2055
  %2067 = load i32, i32* %0, align 4
  %2068 = ashr i32 %2067, 1
  %2069 = load i32, i32* %0
  %2070 = sub i1 %2066, true
  %2071 = xor i1 %2070, true
  %2072 = sext i1 %2070 to i32
  %2073 = and i32 %2072, %2069
  %2074 = sext i1 %2071 to i32
  %2075 = and i32 %2074, %2068
  %select.val.909 = or i32 %2075, %2073
  store i32 %select.val.909, i32* %0, align 4
  %2076 = getelementptr inbounds i32, i32* %0, i64 1
  %2077 = icmp slt i64 1, %len.
  %2078 = bitcast i64* %shadow to i32*
  %safe.910 = or i1 %2065, %2077
  %select.ptr.911 = select i1 %safe.910, i32* %2076, i32* %2078
  %2079 = load i32, i32* %select.ptr.911, align 4
  %2080 = ashr i32 %2079, 1
  %2081 = icmp slt i64 1, %len.
  %2082 = bitcast i64* %shadow to i32*
  %safe.912 = or i1 %2064, %2081
  %select.ptr.913 = select i1 %safe.912, i32* %2076, i32* %2082
  %2083 = load i32, i32* %2076
  %2084 = sub i1 %2064, true
  %2085 = xor i1 %2084, true
  %2086 = sext i1 %2084 to i32
  %2087 = and i32 %2086, %2083
  %2088 = sext i1 %2085 to i32
  %2089 = and i32 %2088, %2080
  %select.val.914 = or i32 %2089, %2087
  store i32 %select.val.914, i32* %select.ptr.913, align 4
  %2090 = getelementptr inbounds i32, i32* %0, i64 2
  %2091 = icmp slt i64 2, %len.
  %2092 = bitcast i64* %shadow to i32*
  %safe.915 = or i1 %2063, %2091
  %select.ptr.916 = select i1 %safe.915, i32* %2090, i32* %2092
  %2093 = load i32, i32* %select.ptr.916, align 4
  %2094 = ashr i32 %2093, 1
  %2095 = icmp slt i64 2, %len.
  %2096 = bitcast i64* %shadow to i32*
  %safe.917 = or i1 %2062, %2095
  %select.ptr.918 = select i1 %safe.917, i32* %2090, i32* %2096
  %2097 = load i32, i32* %2090
  %2098 = sub i1 %2062, true
  %2099 = xor i1 %2098, true
  %2100 = sext i1 %2098 to i32
  %2101 = and i32 %2100, %2097
  %2102 = sext i1 %2099 to i32
  %2103 = and i32 %2102, %2094
  %select.val.919 = or i32 %2103, %2101
  store i32 %select.val.919, i32* %select.ptr.918, align 4
  %2104 = sext i32 3 to i64
  %2105 = icmp slt i64 0, %2104
  %2106 = bitcast i64* %shadow to i32*
  %safe.920 = or i1 %2061, %2105
  %select.ptr.921 = select i1 %safe.920, i32* %6, i32* %2106
  %2107 = load i32, i32* %select.ptr.921, align 4
  %2108 = shl i32 %2107, 1
  %2109 = sext i32 3 to i64
  %2110 = icmp slt i64 0, %2109
  %2111 = bitcast i64* %shadow to i32*
  %safe.922 = or i1 %2060, %2110
  %select.ptr.923 = select i1 %safe.922, i32* %6, i32* %2111
  %2112 = load i32, i32* %6
  %2113 = sub i1 %2060, true
  %2114 = xor i1 %2113, true
  %2115 = sext i1 %2113 to i32
  %2116 = and i32 %2115, %2112
  %2117 = sext i1 %2114 to i32
  %2118 = and i32 %2117, %2108
  %select.val.924 = or i32 %2118, %2116
  store i32 %select.val.924, i32* %select.ptr.923, align 4
  %2119 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2120 = sext i32 3 to i64
  %2121 = icmp slt i64 1, %2120
  %2122 = bitcast i64* %shadow to i32*
  %safe.925 = or i1 %2059, %2121
  %select.ptr.926 = select i1 %safe.925, i32* %2119, i32* %2122
  %2123 = load i32, i32* %select.ptr.926, align 4
  %2124 = shl i32 %2123, 1
  %2125 = sext i32 3 to i64
  %2126 = icmp slt i64 1, %2125
  %2127 = bitcast i64* %shadow to i32*
  %safe.927 = or i1 %2058, %2126
  %select.ptr.928 = select i1 %safe.927, i32* %2119, i32* %2127
  %2128 = load i32, i32* %2119
  %2129 = sub i1 %2058, true
  %2130 = xor i1 %2129, true
  %2131 = sext i1 %2129 to i32
  %2132 = and i32 %2131, %2128
  %2133 = sext i1 %2130 to i32
  %2134 = and i32 %2133, %2124
  %select.val.929 = or i32 %2134, %2132
  store i32 %select.val.929, i32* %select.ptr.928, align 4
  %2135 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2136 = sext i32 3 to i64
  %2137 = icmp slt i64 2, %2136
  %2138 = bitcast i64* %shadow to i32*
  %safe.930 = or i1 %2057, %2137
  %select.ptr.931 = select i1 %safe.930, i32* %2135, i32* %2138
  %2139 = load i32, i32* %select.ptr.931, align 4
  %2140 = shl i32 %2139, 1
  %2141 = sext i32 3 to i64
  %2142 = icmp slt i64 2, %2141
  %2143 = bitcast i64* %shadow to i32*
  %safe.932 = or i1 %2056, %2142
  %select.ptr.933 = select i1 %safe.932, i32* %2135, i32* %2143
  %2144 = load i32, i32* %2135
  %2145 = sub i1 %2056, true
  %2146 = xor i1 %2145, true
  %2147 = sext i1 %2145 to i32
  %2148 = and i32 %2147, %2144
  %2149 = sext i1 %2146 to i32
  %2150 = and i32 %2149, %2140
  %select.val.934 = or i32 %2150, %2148
  store i32 %select.val.934, i32* %select.ptr.933, align 4
  %2151 = load i32, i32* %0, align 4
  %2152 = and i32 %2151, 1
  %2153 = icmp ne i32 %2152, 0
  %2154 = or i1 %in.264, %2055
  store i1 %2154, i1* %out.73
  %2155 = load i1, i1* %out.73
  %in.265 = and i1 %2155, %2153
  %2156 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2157 = sext i32 3 to i64
  %2158 = icmp slt i64 2, %2157
  %2159 = bitcast i64* %shadow to i32*
  %safe.935 = or i1 %in.265, %2158
  %select.ptr.936 = select i1 %safe.935, i32* %2156, i32* %2159
  %2160 = load i32, i32* %select.ptr.936, align 4
  %2161 = or i32 %2160, 1
  %2162 = sext i32 3 to i64
  %2163 = icmp slt i64 2, %2162
  %2164 = bitcast i64* %shadow to i32*
  %safe.937 = or i1 %in.265, %2163
  %select.ptr.938 = select i1 %safe.937, i32* %2156, i32* %2164
  %2165 = load i32, i32* %2156
  %2166 = sub i1 %in.265, true
  %2167 = xor i1 %2166, true
  %2168 = sext i1 %2166 to i32
  %2169 = and i32 %2168, %2165
  %2170 = sext i1 %2167 to i32
  %2171 = and i32 %2170, %2161
  %select.val.939 = or i32 %2171, %2169
  store i32 %select.val.939, i32* %select.ptr.938, align 4
  store i1 %in.265, i1* %out.74
  %2172 = load i1, i1* %out.73
  %2173 = xor i1 %2153, true
  %in.266 = and i1 %2172, %2173
  %2174 = load i1, i1* %out.74
  %2175 = or i1 %in.266, %2174
  %2176 = getelementptr inbounds i32, i32* %0, i64 1
  %2177 = icmp slt i64 1, %len.
  %2178 = bitcast i64* %shadow to i32*
  %safe.940 = or i1 %2175, %2177
  %select.ptr.941 = select i1 %safe.940, i32* %2176, i32* %2178
  %2179 = load i32, i32* %select.ptr.941, align 4
  %2180 = and i32 %2179, 1
  %2181 = icmp ne i32 %2180, 0
  %2182 = or i1 %in.266, %2174
  store i1 %2182, i1* %out.75
  %2183 = load i1, i1* %out.75
  %in.267 = and i1 %2183, %2181
  %2184 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2185 = sext i32 3 to i64
  %2186 = icmp slt i64 1, %2185
  %2187 = bitcast i64* %shadow to i32*
  %safe.942 = or i1 %in.267, %2186
  %select.ptr.943 = select i1 %safe.942, i32* %2184, i32* %2187
  %2188 = load i32, i32* %select.ptr.943, align 4
  %2189 = or i32 %2188, 1
  %2190 = sext i32 3 to i64
  %2191 = icmp slt i64 1, %2190
  %2192 = bitcast i64* %shadow to i32*
  %safe.944 = or i1 %in.267, %2191
  %select.ptr.945 = select i1 %safe.944, i32* %2184, i32* %2192
  %2193 = load i32, i32* %2184
  %2194 = sub i1 %in.267, true
  %2195 = xor i1 %2194, true
  %2196 = sext i1 %2194 to i32
  %2197 = and i32 %2196, %2193
  %2198 = sext i1 %2195 to i32
  %2199 = and i32 %2198, %2189
  %select.val.946 = or i32 %2199, %2197
  store i32 %select.val.946, i32* %select.ptr.945, align 4
  store i1 %in.267, i1* %out.76
  %2200 = load i1, i1* %out.75
  %2201 = xor i1 %2181, true
  %in.268 = and i1 %2200, %2201
  %2202 = load i1, i1* %out.76
  %2203 = or i1 %in.268, %2202
  %2204 = getelementptr inbounds i32, i32* %0, i64 2
  %2205 = icmp slt i64 2, %len.
  %2206 = bitcast i64* %shadow to i32*
  %safe.947 = or i1 %2203, %2205
  %select.ptr.948 = select i1 %safe.947, i32* %2204, i32* %2206
  %2207 = load i32, i32* %select.ptr.948, align 4
  %2208 = and i32 %2207, 1
  %2209 = icmp ne i32 %2208, 0
  %2210 = or i1 %in.268, %2202
  store i1 %2210, i1* %out.77
  %2211 = load i1, i1* %out.77
  %in.269 = and i1 %2211, %2209
  %2212 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %2213 = sext i32 3 to i64
  %2214 = icmp slt i64 0, %2213
  %2215 = bitcast i64* %shadow to i32*
  %safe.949 = or i1 %in.269, %2214
  %select.ptr.950 = select i1 %safe.949, i32* %2212, i32* %2215
  %2216 = load i32, i32* %select.ptr.950, align 4
  %2217 = or i32 %2216, 1
  %2218 = sext i32 3 to i64
  %2219 = icmp slt i64 0, %2218
  %2220 = bitcast i64* %shadow to i32*
  %safe.951 = or i1 %in.269, %2219
  %select.ptr.952 = select i1 %safe.951, i32* %2212, i32* %2220
  %2221 = load i32, i32* %2212
  %2222 = sub i1 %in.269, true
  %2223 = xor i1 %2222, true
  %2224 = sext i1 %2222 to i32
  %2225 = and i32 %2224, %2221
  %2226 = sext i1 %2223 to i32
  %2227 = and i32 %2226, %2217
  %select.val.953 = or i32 %2227, %2225
  store i32 %select.val.953, i32* %select.ptr.952, align 4
  store i1 %in.269, i1* %out.78
  %2228 = load i1, i1* %out.77
  %2229 = xor i1 %2209, true
  %in.270 = and i1 %2228, %2229
  %2230 = load i1, i1* %out.78
  %2231 = or i1 %in.270, %2230
  %2232 = or i1 %in.270, %2230
  %2233 = or i1 %in.270, %2230
  %2234 = or i1 %in.270, %2230
  %2235 = or i1 %in.270, %2230
  %2236 = or i1 %in.270, %2230
  %2237 = or i1 %in.270, %2230
  %2238 = or i1 %in.270, %2230
  %2239 = or i1 %in.270, %2230
  %2240 = or i1 %in.270, %2230
  %2241 = or i1 %in.270, %2230
  %2242 = load i32, i32* %0, align 4
  %2243 = ashr i32 %2242, 1
  %2244 = load i32, i32* %0
  %2245 = sub i1 %2241, true
  %2246 = xor i1 %2245, true
  %2247 = sext i1 %2245 to i32
  %2248 = and i32 %2247, %2244
  %2249 = sext i1 %2246 to i32
  %2250 = and i32 %2249, %2243
  %select.val.954 = or i32 %2250, %2248
  store i32 %select.val.954, i32* %0, align 4
  %2251 = getelementptr inbounds i32, i32* %0, i64 1
  %2252 = icmp slt i64 1, %len.
  %2253 = bitcast i64* %shadow to i32*
  %safe.955 = or i1 %2240, %2252
  %select.ptr.956 = select i1 %safe.955, i32* %2251, i32* %2253
  %2254 = load i32, i32* %select.ptr.956, align 4
  %2255 = ashr i32 %2254, 1
  %2256 = icmp slt i64 1, %len.
  %2257 = bitcast i64* %shadow to i32*
  %safe.957 = or i1 %2239, %2256
  %select.ptr.958 = select i1 %safe.957, i32* %2251, i32* %2257
  %2258 = load i32, i32* %2251
  %2259 = sub i1 %2239, true
  %2260 = xor i1 %2259, true
  %2261 = sext i1 %2259 to i32
  %2262 = and i32 %2261, %2258
  %2263 = sext i1 %2260 to i32
  %2264 = and i32 %2263, %2255
  %select.val.959 = or i32 %2264, %2262
  store i32 %select.val.959, i32* %select.ptr.958, align 4
  %2265 = getelementptr inbounds i32, i32* %0, i64 2
  %2266 = icmp slt i64 2, %len.
  %2267 = bitcast i64* %shadow to i32*
  %safe.960 = or i1 %2238, %2266
  %select.ptr.961 = select i1 %safe.960, i32* %2265, i32* %2267
  %2268 = load i32, i32* %select.ptr.961, align 4
  %2269 = ashr i32 %2268, 1
  %2270 = icmp slt i64 2, %len.
  %2271 = bitcast i64* %shadow to i32*
  %safe.962 = or i1 %2237, %2270
  %select.ptr.963 = select i1 %safe.962, i32* %2265, i32* %2271
  %2272 = load i32, i32* %2265
  %2273 = sub i1 %2237, true
  %2274 = xor i1 %2273, true
  %2275 = sext i1 %2273 to i32
  %2276 = and i32 %2275, %2272
  %2277 = sext i1 %2274 to i32
  %2278 = and i32 %2277, %2269
  %select.val.964 = or i32 %2278, %2276
  store i32 %select.val.964, i32* %select.ptr.963, align 4
  %2279 = sext i32 3 to i64
  %2280 = icmp slt i64 0, %2279
  %2281 = bitcast i64* %shadow to i32*
  %safe.965 = or i1 %2236, %2280
  %select.ptr.966 = select i1 %safe.965, i32* %6, i32* %2281
  %2282 = load i32, i32* %select.ptr.966, align 4
  %2283 = shl i32 %2282, 1
  %2284 = sext i32 3 to i64
  %2285 = icmp slt i64 0, %2284
  %2286 = bitcast i64* %shadow to i32*
  %safe.967 = or i1 %2235, %2285
  %select.ptr.968 = select i1 %safe.967, i32* %6, i32* %2286
  %2287 = load i32, i32* %6
  %2288 = sub i1 %2235, true
  %2289 = xor i1 %2288, true
  %2290 = sext i1 %2288 to i32
  %2291 = and i32 %2290, %2287
  %2292 = sext i1 %2289 to i32
  %2293 = and i32 %2292, %2283
  %select.val.969 = or i32 %2293, %2291
  store i32 %select.val.969, i32* %select.ptr.968, align 4
  %2294 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2295 = sext i32 3 to i64
  %2296 = icmp slt i64 1, %2295
  %2297 = bitcast i64* %shadow to i32*
  %safe.970 = or i1 %2234, %2296
  %select.ptr.971 = select i1 %safe.970, i32* %2294, i32* %2297
  %2298 = load i32, i32* %select.ptr.971, align 4
  %2299 = shl i32 %2298, 1
  %2300 = sext i32 3 to i64
  %2301 = icmp slt i64 1, %2300
  %2302 = bitcast i64* %shadow to i32*
  %safe.972 = or i1 %2233, %2301
  %select.ptr.973 = select i1 %safe.972, i32* %2294, i32* %2302
  %2303 = load i32, i32* %2294
  %2304 = sub i1 %2233, true
  %2305 = xor i1 %2304, true
  %2306 = sext i1 %2304 to i32
  %2307 = and i32 %2306, %2303
  %2308 = sext i1 %2305 to i32
  %2309 = and i32 %2308, %2299
  %select.val.974 = or i32 %2309, %2307
  store i32 %select.val.974, i32* %select.ptr.973, align 4
  %2310 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2311 = sext i32 3 to i64
  %2312 = icmp slt i64 2, %2311
  %2313 = bitcast i64* %shadow to i32*
  %safe.975 = or i1 %2232, %2312
  %select.ptr.976 = select i1 %safe.975, i32* %2310, i32* %2313
  %2314 = load i32, i32* %select.ptr.976, align 4
  %2315 = shl i32 %2314, 1
  %2316 = sext i32 3 to i64
  %2317 = icmp slt i64 2, %2316
  %2318 = bitcast i64* %shadow to i32*
  %safe.977 = or i1 %2231, %2317
  %select.ptr.978 = select i1 %safe.977, i32* %2310, i32* %2318
  %2319 = load i32, i32* %2310
  %2320 = sub i1 %2231, true
  %2321 = xor i1 %2320, true
  %2322 = sext i1 %2320 to i32
  %2323 = and i32 %2322, %2319
  %2324 = sext i1 %2321 to i32
  %2325 = and i32 %2324, %2315
  %select.val.979 = or i32 %2325, %2323
  store i32 %select.val.979, i32* %select.ptr.978, align 4
  %2326 = load i32, i32* %0, align 4
  %2327 = and i32 %2326, 1
  %2328 = icmp ne i32 %2327, 0
  %2329 = or i1 %in.270, %2230
  store i1 %2329, i1* %out.79
  %2330 = load i1, i1* %out.79
  %in.271 = and i1 %2330, %2328
  %2331 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2332 = sext i32 3 to i64
  %2333 = icmp slt i64 2, %2332
  %2334 = bitcast i64* %shadow to i32*
  %safe.980 = or i1 %in.271, %2333
  %select.ptr.981 = select i1 %safe.980, i32* %2331, i32* %2334
  %2335 = load i32, i32* %select.ptr.981, align 4
  %2336 = or i32 %2335, 1
  %2337 = sext i32 3 to i64
  %2338 = icmp slt i64 2, %2337
  %2339 = bitcast i64* %shadow to i32*
  %safe.982 = or i1 %in.271, %2338
  %select.ptr.983 = select i1 %safe.982, i32* %2331, i32* %2339
  %2340 = load i32, i32* %2331
  %2341 = sub i1 %in.271, true
  %2342 = xor i1 %2341, true
  %2343 = sext i1 %2341 to i32
  %2344 = and i32 %2343, %2340
  %2345 = sext i1 %2342 to i32
  %2346 = and i32 %2345, %2336
  %select.val.984 = or i32 %2346, %2344
  store i32 %select.val.984, i32* %select.ptr.983, align 4
  store i1 %in.271, i1* %out.80
  %2347 = load i1, i1* %out.79
  %2348 = xor i1 %2328, true
  %in.272 = and i1 %2347, %2348
  %2349 = load i1, i1* %out.80
  %2350 = or i1 %in.272, %2349
  %2351 = getelementptr inbounds i32, i32* %0, i64 1
  %2352 = icmp slt i64 1, %len.
  %2353 = bitcast i64* %shadow to i32*
  %safe.985 = or i1 %2350, %2352
  %select.ptr.986 = select i1 %safe.985, i32* %2351, i32* %2353
  %2354 = load i32, i32* %select.ptr.986, align 4
  %2355 = and i32 %2354, 1
  %2356 = icmp ne i32 %2355, 0
  %2357 = or i1 %in.272, %2349
  store i1 %2357, i1* %out.81
  %2358 = load i1, i1* %out.81
  %in.273 = and i1 %2358, %2356
  %2359 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2360 = sext i32 3 to i64
  %2361 = icmp slt i64 1, %2360
  %2362 = bitcast i64* %shadow to i32*
  %safe.987 = or i1 %in.273, %2361
  %select.ptr.988 = select i1 %safe.987, i32* %2359, i32* %2362
  %2363 = load i32, i32* %select.ptr.988, align 4
  %2364 = or i32 %2363, 1
  %2365 = sext i32 3 to i64
  %2366 = icmp slt i64 1, %2365
  %2367 = bitcast i64* %shadow to i32*
  %safe.989 = or i1 %in.273, %2366
  %select.ptr.990 = select i1 %safe.989, i32* %2359, i32* %2367
  %2368 = load i32, i32* %2359
  %2369 = sub i1 %in.273, true
  %2370 = xor i1 %2369, true
  %2371 = sext i1 %2369 to i32
  %2372 = and i32 %2371, %2368
  %2373 = sext i1 %2370 to i32
  %2374 = and i32 %2373, %2364
  %select.val.991 = or i32 %2374, %2372
  store i32 %select.val.991, i32* %select.ptr.990, align 4
  store i1 %in.273, i1* %out.82
  %2375 = load i1, i1* %out.81
  %2376 = xor i1 %2356, true
  %in.274 = and i1 %2375, %2376
  %2377 = load i1, i1* %out.82
  %2378 = or i1 %in.274, %2377
  %2379 = getelementptr inbounds i32, i32* %0, i64 2
  %2380 = icmp slt i64 2, %len.
  %2381 = bitcast i64* %shadow to i32*
  %safe.992 = or i1 %2378, %2380
  %select.ptr.993 = select i1 %safe.992, i32* %2379, i32* %2381
  %2382 = load i32, i32* %select.ptr.993, align 4
  %2383 = and i32 %2382, 1
  %2384 = icmp ne i32 %2383, 0
  %2385 = or i1 %in.274, %2377
  store i1 %2385, i1* %out.83
  %2386 = load i1, i1* %out.83
  %in.275 = and i1 %2386, %2384
  %2387 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %2388 = sext i32 3 to i64
  %2389 = icmp slt i64 0, %2388
  %2390 = bitcast i64* %shadow to i32*
  %safe.994 = or i1 %in.275, %2389
  %select.ptr.995 = select i1 %safe.994, i32* %2387, i32* %2390
  %2391 = load i32, i32* %select.ptr.995, align 4
  %2392 = or i32 %2391, 1
  %2393 = sext i32 3 to i64
  %2394 = icmp slt i64 0, %2393
  %2395 = bitcast i64* %shadow to i32*
  %safe.996 = or i1 %in.275, %2394
  %select.ptr.997 = select i1 %safe.996, i32* %2387, i32* %2395
  %2396 = load i32, i32* %2387
  %2397 = sub i1 %in.275, true
  %2398 = xor i1 %2397, true
  %2399 = sext i1 %2397 to i32
  %2400 = and i32 %2399, %2396
  %2401 = sext i1 %2398 to i32
  %2402 = and i32 %2401, %2392
  %select.val.998 = or i32 %2402, %2400
  store i32 %select.val.998, i32* %select.ptr.997, align 4
  store i1 %in.275, i1* %out.84
  %2403 = load i1, i1* %out.83
  %2404 = xor i1 %2384, true
  %in.276 = and i1 %2403, %2404
  %2405 = load i1, i1* %out.84
  %2406 = or i1 %in.276, %2405
  %2407 = or i1 %in.276, %2405
  %2408 = or i1 %in.276, %2405
  %2409 = or i1 %in.276, %2405
  %2410 = or i1 %in.276, %2405
  %2411 = or i1 %in.276, %2405
  %2412 = or i1 %in.276, %2405
  %2413 = or i1 %in.276, %2405
  %2414 = or i1 %in.276, %2405
  %2415 = or i1 %in.276, %2405
  %2416 = or i1 %in.276, %2405
  %2417 = load i32, i32* %0, align 4
  %2418 = ashr i32 %2417, 1
  %2419 = load i32, i32* %0
  %2420 = sub i1 %2416, true
  %2421 = xor i1 %2420, true
  %2422 = sext i1 %2420 to i32
  %2423 = and i32 %2422, %2419
  %2424 = sext i1 %2421 to i32
  %2425 = and i32 %2424, %2418
  %select.val.999 = or i32 %2425, %2423
  store i32 %select.val.999, i32* %0, align 4
  %2426 = getelementptr inbounds i32, i32* %0, i64 1
  %2427 = icmp slt i64 1, %len.
  %2428 = bitcast i64* %shadow to i32*
  %safe.1000 = or i1 %2415, %2427
  %select.ptr.1001 = select i1 %safe.1000, i32* %2426, i32* %2428
  %2429 = load i32, i32* %select.ptr.1001, align 4
  %2430 = ashr i32 %2429, 1
  %2431 = icmp slt i64 1, %len.
  %2432 = bitcast i64* %shadow to i32*
  %safe.1002 = or i1 %2414, %2431
  %select.ptr.1003 = select i1 %safe.1002, i32* %2426, i32* %2432
  %2433 = load i32, i32* %2426
  %2434 = sub i1 %2414, true
  %2435 = xor i1 %2434, true
  %2436 = sext i1 %2434 to i32
  %2437 = and i32 %2436, %2433
  %2438 = sext i1 %2435 to i32
  %2439 = and i32 %2438, %2430
  %select.val.1004 = or i32 %2439, %2437
  store i32 %select.val.1004, i32* %select.ptr.1003, align 4
  %2440 = getelementptr inbounds i32, i32* %0, i64 2
  %2441 = icmp slt i64 2, %len.
  %2442 = bitcast i64* %shadow to i32*
  %safe.1005 = or i1 %2413, %2441
  %select.ptr.1006 = select i1 %safe.1005, i32* %2440, i32* %2442
  %2443 = load i32, i32* %select.ptr.1006, align 4
  %2444 = ashr i32 %2443, 1
  %2445 = icmp slt i64 2, %len.
  %2446 = bitcast i64* %shadow to i32*
  %safe.1007 = or i1 %2412, %2445
  %select.ptr.1008 = select i1 %safe.1007, i32* %2440, i32* %2446
  %2447 = load i32, i32* %2440
  %2448 = sub i1 %2412, true
  %2449 = xor i1 %2448, true
  %2450 = sext i1 %2448 to i32
  %2451 = and i32 %2450, %2447
  %2452 = sext i1 %2449 to i32
  %2453 = and i32 %2452, %2444
  %select.val.1009 = or i32 %2453, %2451
  store i32 %select.val.1009, i32* %select.ptr.1008, align 4
  %2454 = sext i32 3 to i64
  %2455 = icmp slt i64 0, %2454
  %2456 = bitcast i64* %shadow to i32*
  %safe.1010 = or i1 %2411, %2455
  %select.ptr.1011 = select i1 %safe.1010, i32* %6, i32* %2456
  %2457 = load i32, i32* %select.ptr.1011, align 4
  %2458 = shl i32 %2457, 1
  %2459 = sext i32 3 to i64
  %2460 = icmp slt i64 0, %2459
  %2461 = bitcast i64* %shadow to i32*
  %safe.1012 = or i1 %2410, %2460
  %select.ptr.1013 = select i1 %safe.1012, i32* %6, i32* %2461
  %2462 = load i32, i32* %6
  %2463 = sub i1 %2410, true
  %2464 = xor i1 %2463, true
  %2465 = sext i1 %2463 to i32
  %2466 = and i32 %2465, %2462
  %2467 = sext i1 %2464 to i32
  %2468 = and i32 %2467, %2458
  %select.val.1014 = or i32 %2468, %2466
  store i32 %select.val.1014, i32* %select.ptr.1013, align 4
  %2469 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2470 = sext i32 3 to i64
  %2471 = icmp slt i64 1, %2470
  %2472 = bitcast i64* %shadow to i32*
  %safe.1015 = or i1 %2409, %2471
  %select.ptr.1016 = select i1 %safe.1015, i32* %2469, i32* %2472
  %2473 = load i32, i32* %select.ptr.1016, align 4
  %2474 = shl i32 %2473, 1
  %2475 = sext i32 3 to i64
  %2476 = icmp slt i64 1, %2475
  %2477 = bitcast i64* %shadow to i32*
  %safe.1017 = or i1 %2408, %2476
  %select.ptr.1018 = select i1 %safe.1017, i32* %2469, i32* %2477
  %2478 = load i32, i32* %2469
  %2479 = sub i1 %2408, true
  %2480 = xor i1 %2479, true
  %2481 = sext i1 %2479 to i32
  %2482 = and i32 %2481, %2478
  %2483 = sext i1 %2480 to i32
  %2484 = and i32 %2483, %2474
  %select.val.1019 = or i32 %2484, %2482
  store i32 %select.val.1019, i32* %select.ptr.1018, align 4
  %2485 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2486 = sext i32 3 to i64
  %2487 = icmp slt i64 2, %2486
  %2488 = bitcast i64* %shadow to i32*
  %safe.1020 = or i1 %2407, %2487
  %select.ptr.1021 = select i1 %safe.1020, i32* %2485, i32* %2488
  %2489 = load i32, i32* %select.ptr.1021, align 4
  %2490 = shl i32 %2489, 1
  %2491 = sext i32 3 to i64
  %2492 = icmp slt i64 2, %2491
  %2493 = bitcast i64* %shadow to i32*
  %safe.1022 = or i1 %2406, %2492
  %select.ptr.1023 = select i1 %safe.1022, i32* %2485, i32* %2493
  %2494 = load i32, i32* %2485
  %2495 = sub i1 %2406, true
  %2496 = xor i1 %2495, true
  %2497 = sext i1 %2495 to i32
  %2498 = and i32 %2497, %2494
  %2499 = sext i1 %2496 to i32
  %2500 = and i32 %2499, %2490
  %select.val.1024 = or i32 %2500, %2498
  store i32 %select.val.1024, i32* %select.ptr.1023, align 4
  %2501 = load i32, i32* %0, align 4
  %2502 = and i32 %2501, 1
  %2503 = icmp ne i32 %2502, 0
  %2504 = or i1 %in.276, %2405
  store i1 %2504, i1* %out.85
  %2505 = load i1, i1* %out.85
  %in.277 = and i1 %2505, %2503
  %2506 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2507 = sext i32 3 to i64
  %2508 = icmp slt i64 2, %2507
  %2509 = bitcast i64* %shadow to i32*
  %safe.1025 = or i1 %in.277, %2508
  %select.ptr.1026 = select i1 %safe.1025, i32* %2506, i32* %2509
  %2510 = load i32, i32* %select.ptr.1026, align 4
  %2511 = or i32 %2510, 1
  %2512 = sext i32 3 to i64
  %2513 = icmp slt i64 2, %2512
  %2514 = bitcast i64* %shadow to i32*
  %safe.1027 = or i1 %in.277, %2513
  %select.ptr.1028 = select i1 %safe.1027, i32* %2506, i32* %2514
  %2515 = load i32, i32* %2506
  %2516 = sub i1 %in.277, true
  %2517 = xor i1 %2516, true
  %2518 = sext i1 %2516 to i32
  %2519 = and i32 %2518, %2515
  %2520 = sext i1 %2517 to i32
  %2521 = and i32 %2520, %2511
  %select.val.1029 = or i32 %2521, %2519
  store i32 %select.val.1029, i32* %select.ptr.1028, align 4
  store i1 %in.277, i1* %out.86
  %2522 = load i1, i1* %out.85
  %2523 = xor i1 %2503, true
  %in.278 = and i1 %2522, %2523
  %2524 = load i1, i1* %out.86
  %2525 = or i1 %in.278, %2524
  %2526 = getelementptr inbounds i32, i32* %0, i64 1
  %2527 = icmp slt i64 1, %len.
  %2528 = bitcast i64* %shadow to i32*
  %safe.1030 = or i1 %2525, %2527
  %select.ptr.1031 = select i1 %safe.1030, i32* %2526, i32* %2528
  %2529 = load i32, i32* %select.ptr.1031, align 4
  %2530 = and i32 %2529, 1
  %2531 = icmp ne i32 %2530, 0
  %2532 = or i1 %in.278, %2524
  store i1 %2532, i1* %out.87
  %2533 = load i1, i1* %out.87
  %in.279 = and i1 %2533, %2531
  %2534 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2535 = sext i32 3 to i64
  %2536 = icmp slt i64 1, %2535
  %2537 = bitcast i64* %shadow to i32*
  %safe.1032 = or i1 %in.279, %2536
  %select.ptr.1033 = select i1 %safe.1032, i32* %2534, i32* %2537
  %2538 = load i32, i32* %select.ptr.1033, align 4
  %2539 = or i32 %2538, 1
  %2540 = sext i32 3 to i64
  %2541 = icmp slt i64 1, %2540
  %2542 = bitcast i64* %shadow to i32*
  %safe.1034 = or i1 %in.279, %2541
  %select.ptr.1035 = select i1 %safe.1034, i32* %2534, i32* %2542
  %2543 = load i32, i32* %2534
  %2544 = sub i1 %in.279, true
  %2545 = xor i1 %2544, true
  %2546 = sext i1 %2544 to i32
  %2547 = and i32 %2546, %2543
  %2548 = sext i1 %2545 to i32
  %2549 = and i32 %2548, %2539
  %select.val.1036 = or i32 %2549, %2547
  store i32 %select.val.1036, i32* %select.ptr.1035, align 4
  store i1 %in.279, i1* %out.88
  %2550 = load i1, i1* %out.87
  %2551 = xor i1 %2531, true
  %in.280 = and i1 %2550, %2551
  %2552 = load i1, i1* %out.88
  %2553 = or i1 %in.280, %2552
  %2554 = getelementptr inbounds i32, i32* %0, i64 2
  %2555 = icmp slt i64 2, %len.
  %2556 = bitcast i64* %shadow to i32*
  %safe.1037 = or i1 %2553, %2555
  %select.ptr.1038 = select i1 %safe.1037, i32* %2554, i32* %2556
  %2557 = load i32, i32* %select.ptr.1038, align 4
  %2558 = and i32 %2557, 1
  %2559 = icmp ne i32 %2558, 0
  %2560 = or i1 %in.280, %2552
  store i1 %2560, i1* %out.89
  %2561 = load i1, i1* %out.89
  %in.281 = and i1 %2561, %2559
  %2562 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %2563 = sext i32 3 to i64
  %2564 = icmp slt i64 0, %2563
  %2565 = bitcast i64* %shadow to i32*
  %safe.1039 = or i1 %in.281, %2564
  %select.ptr.1040 = select i1 %safe.1039, i32* %2562, i32* %2565
  %2566 = load i32, i32* %select.ptr.1040, align 4
  %2567 = or i32 %2566, 1
  %2568 = sext i32 3 to i64
  %2569 = icmp slt i64 0, %2568
  %2570 = bitcast i64* %shadow to i32*
  %safe.1041 = or i1 %in.281, %2569
  %select.ptr.1042 = select i1 %safe.1041, i32* %2562, i32* %2570
  %2571 = load i32, i32* %2562
  %2572 = sub i1 %in.281, true
  %2573 = xor i1 %2572, true
  %2574 = sext i1 %2572 to i32
  %2575 = and i32 %2574, %2571
  %2576 = sext i1 %2573 to i32
  %2577 = and i32 %2576, %2567
  %select.val.1043 = or i32 %2577, %2575
  store i32 %select.val.1043, i32* %select.ptr.1042, align 4
  store i1 %in.281, i1* %out.90
  %2578 = load i1, i1* %out.89
  %2579 = xor i1 %2559, true
  %in.282 = and i1 %2578, %2579
  %2580 = load i1, i1* %out.90
  %2581 = or i1 %in.282, %2580
  %2582 = or i1 %in.282, %2580
  %2583 = or i1 %in.282, %2580
  %2584 = or i1 %in.282, %2580
  %2585 = or i1 %in.282, %2580
  %2586 = or i1 %in.282, %2580
  %2587 = or i1 %in.282, %2580
  %2588 = or i1 %in.282, %2580
  %2589 = or i1 %in.282, %2580
  %2590 = or i1 %in.282, %2580
  %2591 = or i1 %in.282, %2580
  %2592 = load i32, i32* %0, align 4
  %2593 = ashr i32 %2592, 1
  %2594 = load i32, i32* %0
  %2595 = sub i1 %2591, true
  %2596 = xor i1 %2595, true
  %2597 = sext i1 %2595 to i32
  %2598 = and i32 %2597, %2594
  %2599 = sext i1 %2596 to i32
  %2600 = and i32 %2599, %2593
  %select.val.1044 = or i32 %2600, %2598
  store i32 %select.val.1044, i32* %0, align 4
  %2601 = getelementptr inbounds i32, i32* %0, i64 1
  %2602 = icmp slt i64 1, %len.
  %2603 = bitcast i64* %shadow to i32*
  %safe.1045 = or i1 %2590, %2602
  %select.ptr.1046 = select i1 %safe.1045, i32* %2601, i32* %2603
  %2604 = load i32, i32* %select.ptr.1046, align 4
  %2605 = ashr i32 %2604, 1
  %2606 = icmp slt i64 1, %len.
  %2607 = bitcast i64* %shadow to i32*
  %safe.1047 = or i1 %2589, %2606
  %select.ptr.1048 = select i1 %safe.1047, i32* %2601, i32* %2607
  %2608 = load i32, i32* %2601
  %2609 = sub i1 %2589, true
  %2610 = xor i1 %2609, true
  %2611 = sext i1 %2609 to i32
  %2612 = and i32 %2611, %2608
  %2613 = sext i1 %2610 to i32
  %2614 = and i32 %2613, %2605
  %select.val.1049 = or i32 %2614, %2612
  store i32 %select.val.1049, i32* %select.ptr.1048, align 4
  %2615 = getelementptr inbounds i32, i32* %0, i64 2
  %2616 = icmp slt i64 2, %len.
  %2617 = bitcast i64* %shadow to i32*
  %safe.1050 = or i1 %2588, %2616
  %select.ptr.1051 = select i1 %safe.1050, i32* %2615, i32* %2617
  %2618 = load i32, i32* %select.ptr.1051, align 4
  %2619 = ashr i32 %2618, 1
  %2620 = icmp slt i64 2, %len.
  %2621 = bitcast i64* %shadow to i32*
  %safe.1052 = or i1 %2587, %2620
  %select.ptr.1053 = select i1 %safe.1052, i32* %2615, i32* %2621
  %2622 = load i32, i32* %2615
  %2623 = sub i1 %2587, true
  %2624 = xor i1 %2623, true
  %2625 = sext i1 %2623 to i32
  %2626 = and i32 %2625, %2622
  %2627 = sext i1 %2624 to i32
  %2628 = and i32 %2627, %2619
  %select.val.1054 = or i32 %2628, %2626
  store i32 %select.val.1054, i32* %select.ptr.1053, align 4
  %2629 = sext i32 3 to i64
  %2630 = icmp slt i64 0, %2629
  %2631 = bitcast i64* %shadow to i32*
  %safe.1055 = or i1 %2586, %2630
  %select.ptr.1056 = select i1 %safe.1055, i32* %6, i32* %2631
  %2632 = load i32, i32* %select.ptr.1056, align 4
  %2633 = shl i32 %2632, 1
  %2634 = sext i32 3 to i64
  %2635 = icmp slt i64 0, %2634
  %2636 = bitcast i64* %shadow to i32*
  %safe.1057 = or i1 %2585, %2635
  %select.ptr.1058 = select i1 %safe.1057, i32* %6, i32* %2636
  %2637 = load i32, i32* %6
  %2638 = sub i1 %2585, true
  %2639 = xor i1 %2638, true
  %2640 = sext i1 %2638 to i32
  %2641 = and i32 %2640, %2637
  %2642 = sext i1 %2639 to i32
  %2643 = and i32 %2642, %2633
  %select.val.1059 = or i32 %2643, %2641
  store i32 %select.val.1059, i32* %select.ptr.1058, align 4
  %2644 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2645 = sext i32 3 to i64
  %2646 = icmp slt i64 1, %2645
  %2647 = bitcast i64* %shadow to i32*
  %safe.1060 = or i1 %2584, %2646
  %select.ptr.1061 = select i1 %safe.1060, i32* %2644, i32* %2647
  %2648 = load i32, i32* %select.ptr.1061, align 4
  %2649 = shl i32 %2648, 1
  %2650 = sext i32 3 to i64
  %2651 = icmp slt i64 1, %2650
  %2652 = bitcast i64* %shadow to i32*
  %safe.1062 = or i1 %2583, %2651
  %select.ptr.1063 = select i1 %safe.1062, i32* %2644, i32* %2652
  %2653 = load i32, i32* %2644
  %2654 = sub i1 %2583, true
  %2655 = xor i1 %2654, true
  %2656 = sext i1 %2654 to i32
  %2657 = and i32 %2656, %2653
  %2658 = sext i1 %2655 to i32
  %2659 = and i32 %2658, %2649
  %select.val.1064 = or i32 %2659, %2657
  store i32 %select.val.1064, i32* %select.ptr.1063, align 4
  %2660 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2661 = sext i32 3 to i64
  %2662 = icmp slt i64 2, %2661
  %2663 = bitcast i64* %shadow to i32*
  %safe.1065 = or i1 %2582, %2662
  %select.ptr.1066 = select i1 %safe.1065, i32* %2660, i32* %2663
  %2664 = load i32, i32* %select.ptr.1066, align 4
  %2665 = shl i32 %2664, 1
  %2666 = sext i32 3 to i64
  %2667 = icmp slt i64 2, %2666
  %2668 = bitcast i64* %shadow to i32*
  %safe.1067 = or i1 %2581, %2667
  %select.ptr.1068 = select i1 %safe.1067, i32* %2660, i32* %2668
  %2669 = load i32, i32* %2660
  %2670 = sub i1 %2581, true
  %2671 = xor i1 %2670, true
  %2672 = sext i1 %2670 to i32
  %2673 = and i32 %2672, %2669
  %2674 = sext i1 %2671 to i32
  %2675 = and i32 %2674, %2665
  %select.val.1069 = or i32 %2675, %2673
  store i32 %select.val.1069, i32* %select.ptr.1068, align 4
  %2676 = load i32, i32* %0, align 4
  %2677 = and i32 %2676, 1
  %2678 = icmp ne i32 %2677, 0
  %2679 = or i1 %in.282, %2580
  store i1 %2679, i1* %out.91
  %2680 = load i1, i1* %out.91
  %in.283 = and i1 %2680, %2678
  %2681 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2682 = sext i32 3 to i64
  %2683 = icmp slt i64 2, %2682
  %2684 = bitcast i64* %shadow to i32*
  %safe.1070 = or i1 %in.283, %2683
  %select.ptr.1071 = select i1 %safe.1070, i32* %2681, i32* %2684
  %2685 = load i32, i32* %select.ptr.1071, align 4
  %2686 = or i32 %2685, 1
  %2687 = sext i32 3 to i64
  %2688 = icmp slt i64 2, %2687
  %2689 = bitcast i64* %shadow to i32*
  %safe.1072 = or i1 %in.283, %2688
  %select.ptr.1073 = select i1 %safe.1072, i32* %2681, i32* %2689
  %2690 = load i32, i32* %2681
  %2691 = sub i1 %in.283, true
  %2692 = xor i1 %2691, true
  %2693 = sext i1 %2691 to i32
  %2694 = and i32 %2693, %2690
  %2695 = sext i1 %2692 to i32
  %2696 = and i32 %2695, %2686
  %select.val.1074 = or i32 %2696, %2694
  store i32 %select.val.1074, i32* %select.ptr.1073, align 4
  store i1 %in.283, i1* %out.92
  %2697 = load i1, i1* %out.91
  %2698 = xor i1 %2678, true
  %in.284 = and i1 %2697, %2698
  %2699 = load i1, i1* %out.92
  %2700 = or i1 %in.284, %2699
  %2701 = getelementptr inbounds i32, i32* %0, i64 1
  %2702 = icmp slt i64 1, %len.
  %2703 = bitcast i64* %shadow to i32*
  %safe.1075 = or i1 %2700, %2702
  %select.ptr.1076 = select i1 %safe.1075, i32* %2701, i32* %2703
  %2704 = load i32, i32* %select.ptr.1076, align 4
  %2705 = and i32 %2704, 1
  %2706 = icmp ne i32 %2705, 0
  %2707 = or i1 %in.284, %2699
  store i1 %2707, i1* %out.93
  %2708 = load i1, i1* %out.93
  %in.285 = and i1 %2708, %2706
  %2709 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2710 = sext i32 3 to i64
  %2711 = icmp slt i64 1, %2710
  %2712 = bitcast i64* %shadow to i32*
  %safe.1077 = or i1 %in.285, %2711
  %select.ptr.1078 = select i1 %safe.1077, i32* %2709, i32* %2712
  %2713 = load i32, i32* %select.ptr.1078, align 4
  %2714 = or i32 %2713, 1
  %2715 = sext i32 3 to i64
  %2716 = icmp slt i64 1, %2715
  %2717 = bitcast i64* %shadow to i32*
  %safe.1079 = or i1 %in.285, %2716
  %select.ptr.1080 = select i1 %safe.1079, i32* %2709, i32* %2717
  %2718 = load i32, i32* %2709
  %2719 = sub i1 %in.285, true
  %2720 = xor i1 %2719, true
  %2721 = sext i1 %2719 to i32
  %2722 = and i32 %2721, %2718
  %2723 = sext i1 %2720 to i32
  %2724 = and i32 %2723, %2714
  %select.val.1081 = or i32 %2724, %2722
  store i32 %select.val.1081, i32* %select.ptr.1080, align 4
  store i1 %in.285, i1* %out.94
  %2725 = load i1, i1* %out.93
  %2726 = xor i1 %2706, true
  %in.286 = and i1 %2725, %2726
  %2727 = load i1, i1* %out.94
  %2728 = or i1 %in.286, %2727
  %2729 = getelementptr inbounds i32, i32* %0, i64 2
  %2730 = icmp slt i64 2, %len.
  %2731 = bitcast i64* %shadow to i32*
  %safe.1082 = or i1 %2728, %2730
  %select.ptr.1083 = select i1 %safe.1082, i32* %2729, i32* %2731
  %2732 = load i32, i32* %select.ptr.1083, align 4
  %2733 = and i32 %2732, 1
  %2734 = icmp ne i32 %2733, 0
  %2735 = or i1 %in.286, %2727
  store i1 %2735, i1* %out.95
  %2736 = load i1, i1* %out.95
  %in.287 = and i1 %2736, %2734
  %2737 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %2738 = sext i32 3 to i64
  %2739 = icmp slt i64 0, %2738
  %2740 = bitcast i64* %shadow to i32*
  %safe.1084 = or i1 %in.287, %2739
  %select.ptr.1085 = select i1 %safe.1084, i32* %2737, i32* %2740
  %2741 = load i32, i32* %select.ptr.1085, align 4
  %2742 = or i32 %2741, 1
  %2743 = sext i32 3 to i64
  %2744 = icmp slt i64 0, %2743
  %2745 = bitcast i64* %shadow to i32*
  %safe.1086 = or i1 %in.287, %2744
  %select.ptr.1087 = select i1 %safe.1086, i32* %2737, i32* %2745
  %2746 = load i32, i32* %2737
  %2747 = sub i1 %in.287, true
  %2748 = xor i1 %2747, true
  %2749 = sext i1 %2747 to i32
  %2750 = and i32 %2749, %2746
  %2751 = sext i1 %2748 to i32
  %2752 = and i32 %2751, %2742
  %select.val.1088 = or i32 %2752, %2750
  store i32 %select.val.1088, i32* %select.ptr.1087, align 4
  store i1 %in.287, i1* %out.96
  %2753 = load i1, i1* %out.95
  %2754 = xor i1 %2734, true
  %in.288 = and i1 %2753, %2754
  %2755 = load i1, i1* %out.96
  %2756 = or i1 %in.288, %2755
  %2757 = or i1 %in.288, %2755
  %2758 = or i1 %in.288, %2755
  %2759 = or i1 %in.288, %2755
  %2760 = or i1 %in.288, %2755
  %2761 = or i1 %in.288, %2755
  %2762 = or i1 %in.288, %2755
  %2763 = or i1 %in.288, %2755
  %2764 = or i1 %in.288, %2755
  %2765 = or i1 %in.288, %2755
  %2766 = or i1 %in.288, %2755
  %2767 = load i32, i32* %0, align 4
  %2768 = ashr i32 %2767, 1
  %2769 = load i32, i32* %0
  %2770 = sub i1 %2766, true
  %2771 = xor i1 %2770, true
  %2772 = sext i1 %2770 to i32
  %2773 = and i32 %2772, %2769
  %2774 = sext i1 %2771 to i32
  %2775 = and i32 %2774, %2768
  %select.val.1089 = or i32 %2775, %2773
  store i32 %select.val.1089, i32* %0, align 4
  %2776 = getelementptr inbounds i32, i32* %0, i64 1
  %2777 = icmp slt i64 1, %len.
  %2778 = bitcast i64* %shadow to i32*
  %safe.1090 = or i1 %2765, %2777
  %select.ptr.1091 = select i1 %safe.1090, i32* %2776, i32* %2778
  %2779 = load i32, i32* %select.ptr.1091, align 4
  %2780 = ashr i32 %2779, 1
  %2781 = icmp slt i64 1, %len.
  %2782 = bitcast i64* %shadow to i32*
  %safe.1092 = or i1 %2764, %2781
  %select.ptr.1093 = select i1 %safe.1092, i32* %2776, i32* %2782
  %2783 = load i32, i32* %2776
  %2784 = sub i1 %2764, true
  %2785 = xor i1 %2784, true
  %2786 = sext i1 %2784 to i32
  %2787 = and i32 %2786, %2783
  %2788 = sext i1 %2785 to i32
  %2789 = and i32 %2788, %2780
  %select.val.1094 = or i32 %2789, %2787
  store i32 %select.val.1094, i32* %select.ptr.1093, align 4
  %2790 = getelementptr inbounds i32, i32* %0, i64 2
  %2791 = icmp slt i64 2, %len.
  %2792 = bitcast i64* %shadow to i32*
  %safe.1095 = or i1 %2763, %2791
  %select.ptr.1096 = select i1 %safe.1095, i32* %2790, i32* %2792
  %2793 = load i32, i32* %select.ptr.1096, align 4
  %2794 = ashr i32 %2793, 1
  %2795 = icmp slt i64 2, %len.
  %2796 = bitcast i64* %shadow to i32*
  %safe.1097 = or i1 %2762, %2795
  %select.ptr.1098 = select i1 %safe.1097, i32* %2790, i32* %2796
  %2797 = load i32, i32* %2790
  %2798 = sub i1 %2762, true
  %2799 = xor i1 %2798, true
  %2800 = sext i1 %2798 to i32
  %2801 = and i32 %2800, %2797
  %2802 = sext i1 %2799 to i32
  %2803 = and i32 %2802, %2794
  %select.val.1099 = or i32 %2803, %2801
  store i32 %select.val.1099, i32* %select.ptr.1098, align 4
  %2804 = sext i32 3 to i64
  %2805 = icmp slt i64 0, %2804
  %2806 = bitcast i64* %shadow to i32*
  %safe.1100 = or i1 %2761, %2805
  %select.ptr.1101 = select i1 %safe.1100, i32* %6, i32* %2806
  %2807 = load i32, i32* %select.ptr.1101, align 4
  %2808 = shl i32 %2807, 1
  %2809 = sext i32 3 to i64
  %2810 = icmp slt i64 0, %2809
  %2811 = bitcast i64* %shadow to i32*
  %safe.1102 = or i1 %2760, %2810
  %select.ptr.1103 = select i1 %safe.1102, i32* %6, i32* %2811
  %2812 = load i32, i32* %6
  %2813 = sub i1 %2760, true
  %2814 = xor i1 %2813, true
  %2815 = sext i1 %2813 to i32
  %2816 = and i32 %2815, %2812
  %2817 = sext i1 %2814 to i32
  %2818 = and i32 %2817, %2808
  %select.val.1104 = or i32 %2818, %2816
  store i32 %select.val.1104, i32* %select.ptr.1103, align 4
  %2819 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2820 = sext i32 3 to i64
  %2821 = icmp slt i64 1, %2820
  %2822 = bitcast i64* %shadow to i32*
  %safe.1105 = or i1 %2759, %2821
  %select.ptr.1106 = select i1 %safe.1105, i32* %2819, i32* %2822
  %2823 = load i32, i32* %select.ptr.1106, align 4
  %2824 = shl i32 %2823, 1
  %2825 = sext i32 3 to i64
  %2826 = icmp slt i64 1, %2825
  %2827 = bitcast i64* %shadow to i32*
  %safe.1107 = or i1 %2758, %2826
  %select.ptr.1108 = select i1 %safe.1107, i32* %2819, i32* %2827
  %2828 = load i32, i32* %2819
  %2829 = sub i1 %2758, true
  %2830 = xor i1 %2829, true
  %2831 = sext i1 %2829 to i32
  %2832 = and i32 %2831, %2828
  %2833 = sext i1 %2830 to i32
  %2834 = and i32 %2833, %2824
  %select.val.1109 = or i32 %2834, %2832
  store i32 %select.val.1109, i32* %select.ptr.1108, align 4
  %2835 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2836 = sext i32 3 to i64
  %2837 = icmp slt i64 2, %2836
  %2838 = bitcast i64* %shadow to i32*
  %safe.1110 = or i1 %2757, %2837
  %select.ptr.1111 = select i1 %safe.1110, i32* %2835, i32* %2838
  %2839 = load i32, i32* %select.ptr.1111, align 4
  %2840 = shl i32 %2839, 1
  %2841 = sext i32 3 to i64
  %2842 = icmp slt i64 2, %2841
  %2843 = bitcast i64* %shadow to i32*
  %safe.1112 = or i1 %2756, %2842
  %select.ptr.1113 = select i1 %safe.1112, i32* %2835, i32* %2843
  %2844 = load i32, i32* %2835
  %2845 = sub i1 %2756, true
  %2846 = xor i1 %2845, true
  %2847 = sext i1 %2845 to i32
  %2848 = and i32 %2847, %2844
  %2849 = sext i1 %2846 to i32
  %2850 = and i32 %2849, %2840
  %select.val.1114 = or i32 %2850, %2848
  store i32 %select.val.1114, i32* %select.ptr.1113, align 4
  %2851 = load i32, i32* %0, align 4
  %2852 = and i32 %2851, 1
  %2853 = icmp ne i32 %2852, 0
  %2854 = or i1 %in.288, %2755
  store i1 %2854, i1* %out.97
  %2855 = load i1, i1* %out.97
  %in.289 = and i1 %2855, %2853
  %2856 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %2857 = sext i32 3 to i64
  %2858 = icmp slt i64 2, %2857
  %2859 = bitcast i64* %shadow to i32*
  %safe.1115 = or i1 %in.289, %2858
  %select.ptr.1116 = select i1 %safe.1115, i32* %2856, i32* %2859
  %2860 = load i32, i32* %select.ptr.1116, align 4
  %2861 = or i32 %2860, 1
  %2862 = sext i32 3 to i64
  %2863 = icmp slt i64 2, %2862
  %2864 = bitcast i64* %shadow to i32*
  %safe.1117 = or i1 %in.289, %2863
  %select.ptr.1118 = select i1 %safe.1117, i32* %2856, i32* %2864
  %2865 = load i32, i32* %2856
  %2866 = sub i1 %in.289, true
  %2867 = xor i1 %2866, true
  %2868 = sext i1 %2866 to i32
  %2869 = and i32 %2868, %2865
  %2870 = sext i1 %2867 to i32
  %2871 = and i32 %2870, %2861
  %select.val.1119 = or i32 %2871, %2869
  store i32 %select.val.1119, i32* %select.ptr.1118, align 4
  store i1 %in.289, i1* %out.98
  %2872 = load i1, i1* %out.97
  %2873 = xor i1 %2853, true
  %in.290 = and i1 %2872, %2873
  %2874 = load i1, i1* %out.98
  %2875 = or i1 %in.290, %2874
  %2876 = getelementptr inbounds i32, i32* %0, i64 1
  %2877 = icmp slt i64 1, %len.
  %2878 = bitcast i64* %shadow to i32*
  %safe.1120 = or i1 %2875, %2877
  %select.ptr.1121 = select i1 %safe.1120, i32* %2876, i32* %2878
  %2879 = load i32, i32* %select.ptr.1121, align 4
  %2880 = and i32 %2879, 1
  %2881 = icmp ne i32 %2880, 0
  %2882 = or i1 %in.290, %2874
  store i1 %2882, i1* %out.99
  %2883 = load i1, i1* %out.99
  %in.291 = and i1 %2883, %2881
  %2884 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2885 = sext i32 3 to i64
  %2886 = icmp slt i64 1, %2885
  %2887 = bitcast i64* %shadow to i32*
  %safe.1122 = or i1 %in.291, %2886
  %select.ptr.1123 = select i1 %safe.1122, i32* %2884, i32* %2887
  %2888 = load i32, i32* %select.ptr.1123, align 4
  %2889 = or i32 %2888, 1
  %2890 = sext i32 3 to i64
  %2891 = icmp slt i64 1, %2890
  %2892 = bitcast i64* %shadow to i32*
  %safe.1124 = or i1 %in.291, %2891
  %select.ptr.1125 = select i1 %safe.1124, i32* %2884, i32* %2892
  %2893 = load i32, i32* %2884
  %2894 = sub i1 %in.291, true
  %2895 = xor i1 %2894, true
  %2896 = sext i1 %2894 to i32
  %2897 = and i32 %2896, %2893
  %2898 = sext i1 %2895 to i32
  %2899 = and i32 %2898, %2889
  %select.val.1126 = or i32 %2899, %2897
  store i32 %select.val.1126, i32* %select.ptr.1125, align 4
  store i1 %in.291, i1* %out.100
  %2900 = load i1, i1* %out.99
  %2901 = xor i1 %2881, true
  %in.292 = and i1 %2900, %2901
  %2902 = load i1, i1* %out.100
  %2903 = or i1 %in.292, %2902
  %2904 = getelementptr inbounds i32, i32* %0, i64 2
  %2905 = icmp slt i64 2, %len.
  %2906 = bitcast i64* %shadow to i32*
  %safe.1127 = or i1 %2903, %2905
  %select.ptr.1128 = select i1 %safe.1127, i32* %2904, i32* %2906
  %2907 = load i32, i32* %select.ptr.1128, align 4
  %2908 = and i32 %2907, 1
  %2909 = icmp ne i32 %2908, 0
  %2910 = or i1 %in.292, %2902
  store i1 %2910, i1* %out.101
  %2911 = load i1, i1* %out.101
  %in.293 = and i1 %2911, %2909
  %2912 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %2913 = sext i32 3 to i64
  %2914 = icmp slt i64 0, %2913
  %2915 = bitcast i64* %shadow to i32*
  %safe.1129 = or i1 %in.293, %2914
  %select.ptr.1130 = select i1 %safe.1129, i32* %2912, i32* %2915
  %2916 = load i32, i32* %select.ptr.1130, align 4
  %2917 = or i32 %2916, 1
  %2918 = sext i32 3 to i64
  %2919 = icmp slt i64 0, %2918
  %2920 = bitcast i64* %shadow to i32*
  %safe.1131 = or i1 %in.293, %2919
  %select.ptr.1132 = select i1 %safe.1131, i32* %2912, i32* %2920
  %2921 = load i32, i32* %2912
  %2922 = sub i1 %in.293, true
  %2923 = xor i1 %2922, true
  %2924 = sext i1 %2922 to i32
  %2925 = and i32 %2924, %2921
  %2926 = sext i1 %2923 to i32
  %2927 = and i32 %2926, %2917
  %select.val.1133 = or i32 %2927, %2925
  store i32 %select.val.1133, i32* %select.ptr.1132, align 4
  store i1 %in.293, i1* %out.102
  %2928 = load i1, i1* %out.101
  %2929 = xor i1 %2909, true
  %in.294 = and i1 %2928, %2929
  %2930 = load i1, i1* %out.102
  %2931 = or i1 %in.294, %2930
  %2932 = or i1 %in.294, %2930
  %2933 = or i1 %in.294, %2930
  %2934 = or i1 %in.294, %2930
  %2935 = or i1 %in.294, %2930
  %2936 = or i1 %in.294, %2930
  %2937 = or i1 %in.294, %2930
  %2938 = or i1 %in.294, %2930
  %2939 = or i1 %in.294, %2930
  %2940 = or i1 %in.294, %2930
  %2941 = or i1 %in.294, %2930
  %2942 = load i32, i32* %0, align 4
  %2943 = ashr i32 %2942, 1
  %2944 = load i32, i32* %0
  %2945 = sub i1 %2941, true
  %2946 = xor i1 %2945, true
  %2947 = sext i1 %2945 to i32
  %2948 = and i32 %2947, %2944
  %2949 = sext i1 %2946 to i32
  %2950 = and i32 %2949, %2943
  %select.val.1134 = or i32 %2950, %2948
  store i32 %select.val.1134, i32* %0, align 4
  %2951 = getelementptr inbounds i32, i32* %0, i64 1
  %2952 = icmp slt i64 1, %len.
  %2953 = bitcast i64* %shadow to i32*
  %safe.1135 = or i1 %2940, %2952
  %select.ptr.1136 = select i1 %safe.1135, i32* %2951, i32* %2953
  %2954 = load i32, i32* %select.ptr.1136, align 4
  %2955 = ashr i32 %2954, 1
  %2956 = icmp slt i64 1, %len.
  %2957 = bitcast i64* %shadow to i32*
  %safe.1137 = or i1 %2939, %2956
  %select.ptr.1138 = select i1 %safe.1137, i32* %2951, i32* %2957
  %2958 = load i32, i32* %2951
  %2959 = sub i1 %2939, true
  %2960 = xor i1 %2959, true
  %2961 = sext i1 %2959 to i32
  %2962 = and i32 %2961, %2958
  %2963 = sext i1 %2960 to i32
  %2964 = and i32 %2963, %2955
  %select.val.1139 = or i32 %2964, %2962
  store i32 %select.val.1139, i32* %select.ptr.1138, align 4
  %2965 = getelementptr inbounds i32, i32* %0, i64 2
  %2966 = icmp slt i64 2, %len.
  %2967 = bitcast i64* %shadow to i32*
  %safe.1140 = or i1 %2938, %2966
  %select.ptr.1141 = select i1 %safe.1140, i32* %2965, i32* %2967
  %2968 = load i32, i32* %select.ptr.1141, align 4
  %2969 = ashr i32 %2968, 1
  %2970 = icmp slt i64 2, %len.
  %2971 = bitcast i64* %shadow to i32*
  %safe.1142 = or i1 %2937, %2970
  %select.ptr.1143 = select i1 %safe.1142, i32* %2965, i32* %2971
  %2972 = load i32, i32* %2965
  %2973 = sub i1 %2937, true
  %2974 = xor i1 %2973, true
  %2975 = sext i1 %2973 to i32
  %2976 = and i32 %2975, %2972
  %2977 = sext i1 %2974 to i32
  %2978 = and i32 %2977, %2969
  %select.val.1144 = or i32 %2978, %2976
  store i32 %select.val.1144, i32* %select.ptr.1143, align 4
  %2979 = sext i32 3 to i64
  %2980 = icmp slt i64 0, %2979
  %2981 = bitcast i64* %shadow to i32*
  %safe.1145 = or i1 %2936, %2980
  %select.ptr.1146 = select i1 %safe.1145, i32* %6, i32* %2981
  %2982 = load i32, i32* %select.ptr.1146, align 4
  %2983 = shl i32 %2982, 1
  %2984 = sext i32 3 to i64
  %2985 = icmp slt i64 0, %2984
  %2986 = bitcast i64* %shadow to i32*
  %safe.1147 = or i1 %2935, %2985
  %select.ptr.1148 = select i1 %safe.1147, i32* %6, i32* %2986
  %2987 = load i32, i32* %6
  %2988 = sub i1 %2935, true
  %2989 = xor i1 %2988, true
  %2990 = sext i1 %2988 to i32
  %2991 = and i32 %2990, %2987
  %2992 = sext i1 %2989 to i32
  %2993 = and i32 %2992, %2983
  %select.val.1149 = or i32 %2993, %2991
  store i32 %select.val.1149, i32* %select.ptr.1148, align 4
  %2994 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %2995 = sext i32 3 to i64
  %2996 = icmp slt i64 1, %2995
  %2997 = bitcast i64* %shadow to i32*
  %safe.1150 = or i1 %2934, %2996
  %select.ptr.1151 = select i1 %safe.1150, i32* %2994, i32* %2997
  %2998 = load i32, i32* %select.ptr.1151, align 4
  %2999 = shl i32 %2998, 1
  %3000 = sext i32 3 to i64
  %3001 = icmp slt i64 1, %3000
  %3002 = bitcast i64* %shadow to i32*
  %safe.1152 = or i1 %2933, %3001
  %select.ptr.1153 = select i1 %safe.1152, i32* %2994, i32* %3002
  %3003 = load i32, i32* %2994
  %3004 = sub i1 %2933, true
  %3005 = xor i1 %3004, true
  %3006 = sext i1 %3004 to i32
  %3007 = and i32 %3006, %3003
  %3008 = sext i1 %3005 to i32
  %3009 = and i32 %3008, %2999
  %select.val.1154 = or i32 %3009, %3007
  store i32 %select.val.1154, i32* %select.ptr.1153, align 4
  %3010 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3011 = sext i32 3 to i64
  %3012 = icmp slt i64 2, %3011
  %3013 = bitcast i64* %shadow to i32*
  %safe.1155 = or i1 %2932, %3012
  %select.ptr.1156 = select i1 %safe.1155, i32* %3010, i32* %3013
  %3014 = load i32, i32* %select.ptr.1156, align 4
  %3015 = shl i32 %3014, 1
  %3016 = sext i32 3 to i64
  %3017 = icmp slt i64 2, %3016
  %3018 = bitcast i64* %shadow to i32*
  %safe.1157 = or i1 %2931, %3017
  %select.ptr.1158 = select i1 %safe.1157, i32* %3010, i32* %3018
  %3019 = load i32, i32* %3010
  %3020 = sub i1 %2931, true
  %3021 = xor i1 %3020, true
  %3022 = sext i1 %3020 to i32
  %3023 = and i32 %3022, %3019
  %3024 = sext i1 %3021 to i32
  %3025 = and i32 %3024, %3015
  %select.val.1159 = or i32 %3025, %3023
  store i32 %select.val.1159, i32* %select.ptr.1158, align 4
  %3026 = load i32, i32* %0, align 4
  %3027 = and i32 %3026, 1
  %3028 = icmp ne i32 %3027, 0
  %3029 = or i1 %in.294, %2930
  store i1 %3029, i1* %out.103
  %3030 = load i1, i1* %out.103
  %in.295 = and i1 %3030, %3028
  %3031 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3032 = sext i32 3 to i64
  %3033 = icmp slt i64 2, %3032
  %3034 = bitcast i64* %shadow to i32*
  %safe.1160 = or i1 %in.295, %3033
  %select.ptr.1161 = select i1 %safe.1160, i32* %3031, i32* %3034
  %3035 = load i32, i32* %select.ptr.1161, align 4
  %3036 = or i32 %3035, 1
  %3037 = sext i32 3 to i64
  %3038 = icmp slt i64 2, %3037
  %3039 = bitcast i64* %shadow to i32*
  %safe.1162 = or i1 %in.295, %3038
  %select.ptr.1163 = select i1 %safe.1162, i32* %3031, i32* %3039
  %3040 = load i32, i32* %3031
  %3041 = sub i1 %in.295, true
  %3042 = xor i1 %3041, true
  %3043 = sext i1 %3041 to i32
  %3044 = and i32 %3043, %3040
  %3045 = sext i1 %3042 to i32
  %3046 = and i32 %3045, %3036
  %select.val.1164 = or i32 %3046, %3044
  store i32 %select.val.1164, i32* %select.ptr.1163, align 4
  store i1 %in.295, i1* %out.104
  %3047 = load i1, i1* %out.103
  %3048 = xor i1 %3028, true
  %in.296 = and i1 %3047, %3048
  %3049 = load i1, i1* %out.104
  %3050 = or i1 %in.296, %3049
  %3051 = getelementptr inbounds i32, i32* %0, i64 1
  %3052 = icmp slt i64 1, %len.
  %3053 = bitcast i64* %shadow to i32*
  %safe.1165 = or i1 %3050, %3052
  %select.ptr.1166 = select i1 %safe.1165, i32* %3051, i32* %3053
  %3054 = load i32, i32* %select.ptr.1166, align 4
  %3055 = and i32 %3054, 1
  %3056 = icmp ne i32 %3055, 0
  %3057 = or i1 %in.296, %3049
  store i1 %3057, i1* %out.105
  %3058 = load i1, i1* %out.105
  %in.297 = and i1 %3058, %3056
  %3059 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3060 = sext i32 3 to i64
  %3061 = icmp slt i64 1, %3060
  %3062 = bitcast i64* %shadow to i32*
  %safe.1167 = or i1 %in.297, %3061
  %select.ptr.1168 = select i1 %safe.1167, i32* %3059, i32* %3062
  %3063 = load i32, i32* %select.ptr.1168, align 4
  %3064 = or i32 %3063, 1
  %3065 = sext i32 3 to i64
  %3066 = icmp slt i64 1, %3065
  %3067 = bitcast i64* %shadow to i32*
  %safe.1169 = or i1 %in.297, %3066
  %select.ptr.1170 = select i1 %safe.1169, i32* %3059, i32* %3067
  %3068 = load i32, i32* %3059
  %3069 = sub i1 %in.297, true
  %3070 = xor i1 %3069, true
  %3071 = sext i1 %3069 to i32
  %3072 = and i32 %3071, %3068
  %3073 = sext i1 %3070 to i32
  %3074 = and i32 %3073, %3064
  %select.val.1171 = or i32 %3074, %3072
  store i32 %select.val.1171, i32* %select.ptr.1170, align 4
  store i1 %in.297, i1* %out.106
  %3075 = load i1, i1* %out.105
  %3076 = xor i1 %3056, true
  %in.298 = and i1 %3075, %3076
  %3077 = load i1, i1* %out.106
  %3078 = or i1 %in.298, %3077
  %3079 = getelementptr inbounds i32, i32* %0, i64 2
  %3080 = icmp slt i64 2, %len.
  %3081 = bitcast i64* %shadow to i32*
  %safe.1172 = or i1 %3078, %3080
  %select.ptr.1173 = select i1 %safe.1172, i32* %3079, i32* %3081
  %3082 = load i32, i32* %select.ptr.1173, align 4
  %3083 = and i32 %3082, 1
  %3084 = icmp ne i32 %3083, 0
  %3085 = or i1 %in.298, %3077
  store i1 %3085, i1* %out.107
  %3086 = load i1, i1* %out.107
  %in.299 = and i1 %3086, %3084
  %3087 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %3088 = sext i32 3 to i64
  %3089 = icmp slt i64 0, %3088
  %3090 = bitcast i64* %shadow to i32*
  %safe.1174 = or i1 %in.299, %3089
  %select.ptr.1175 = select i1 %safe.1174, i32* %3087, i32* %3090
  %3091 = load i32, i32* %select.ptr.1175, align 4
  %3092 = or i32 %3091, 1
  %3093 = sext i32 3 to i64
  %3094 = icmp slt i64 0, %3093
  %3095 = bitcast i64* %shadow to i32*
  %safe.1176 = or i1 %in.299, %3094
  %select.ptr.1177 = select i1 %safe.1176, i32* %3087, i32* %3095
  %3096 = load i32, i32* %3087
  %3097 = sub i1 %in.299, true
  %3098 = xor i1 %3097, true
  %3099 = sext i1 %3097 to i32
  %3100 = and i32 %3099, %3096
  %3101 = sext i1 %3098 to i32
  %3102 = and i32 %3101, %3092
  %select.val.1178 = or i32 %3102, %3100
  store i32 %select.val.1178, i32* %select.ptr.1177, align 4
  store i1 %in.299, i1* %out.108
  %3103 = load i1, i1* %out.107
  %3104 = xor i1 %3084, true
  %in.300 = and i1 %3103, %3104
  %3105 = load i1, i1* %out.108
  %3106 = or i1 %in.300, %3105
  %3107 = or i1 %in.300, %3105
  %3108 = or i1 %in.300, %3105
  %3109 = or i1 %in.300, %3105
  %3110 = or i1 %in.300, %3105
  %3111 = or i1 %in.300, %3105
  %3112 = or i1 %in.300, %3105
  %3113 = or i1 %in.300, %3105
  %3114 = or i1 %in.300, %3105
  %3115 = or i1 %in.300, %3105
  %3116 = or i1 %in.300, %3105
  %3117 = load i32, i32* %0, align 4
  %3118 = ashr i32 %3117, 1
  %3119 = load i32, i32* %0
  %3120 = sub i1 %3116, true
  %3121 = xor i1 %3120, true
  %3122 = sext i1 %3120 to i32
  %3123 = and i32 %3122, %3119
  %3124 = sext i1 %3121 to i32
  %3125 = and i32 %3124, %3118
  %select.val.1179 = or i32 %3125, %3123
  store i32 %select.val.1179, i32* %0, align 4
  %3126 = getelementptr inbounds i32, i32* %0, i64 1
  %3127 = icmp slt i64 1, %len.
  %3128 = bitcast i64* %shadow to i32*
  %safe.1180 = or i1 %3115, %3127
  %select.ptr.1181 = select i1 %safe.1180, i32* %3126, i32* %3128
  %3129 = load i32, i32* %select.ptr.1181, align 4
  %3130 = ashr i32 %3129, 1
  %3131 = icmp slt i64 1, %len.
  %3132 = bitcast i64* %shadow to i32*
  %safe.1182 = or i1 %3114, %3131
  %select.ptr.1183 = select i1 %safe.1182, i32* %3126, i32* %3132
  %3133 = load i32, i32* %3126
  %3134 = sub i1 %3114, true
  %3135 = xor i1 %3134, true
  %3136 = sext i1 %3134 to i32
  %3137 = and i32 %3136, %3133
  %3138 = sext i1 %3135 to i32
  %3139 = and i32 %3138, %3130
  %select.val.1184 = or i32 %3139, %3137
  store i32 %select.val.1184, i32* %select.ptr.1183, align 4
  %3140 = getelementptr inbounds i32, i32* %0, i64 2
  %3141 = icmp slt i64 2, %len.
  %3142 = bitcast i64* %shadow to i32*
  %safe.1185 = or i1 %3113, %3141
  %select.ptr.1186 = select i1 %safe.1185, i32* %3140, i32* %3142
  %3143 = load i32, i32* %select.ptr.1186, align 4
  %3144 = ashr i32 %3143, 1
  %3145 = icmp slt i64 2, %len.
  %3146 = bitcast i64* %shadow to i32*
  %safe.1187 = or i1 %3112, %3145
  %select.ptr.1188 = select i1 %safe.1187, i32* %3140, i32* %3146
  %3147 = load i32, i32* %3140
  %3148 = sub i1 %3112, true
  %3149 = xor i1 %3148, true
  %3150 = sext i1 %3148 to i32
  %3151 = and i32 %3150, %3147
  %3152 = sext i1 %3149 to i32
  %3153 = and i32 %3152, %3144
  %select.val.1189 = or i32 %3153, %3151
  store i32 %select.val.1189, i32* %select.ptr.1188, align 4
  %3154 = sext i32 3 to i64
  %3155 = icmp slt i64 0, %3154
  %3156 = bitcast i64* %shadow to i32*
  %safe.1190 = or i1 %3111, %3155
  %select.ptr.1191 = select i1 %safe.1190, i32* %6, i32* %3156
  %3157 = load i32, i32* %select.ptr.1191, align 4
  %3158 = shl i32 %3157, 1
  %3159 = sext i32 3 to i64
  %3160 = icmp slt i64 0, %3159
  %3161 = bitcast i64* %shadow to i32*
  %safe.1192 = or i1 %3110, %3160
  %select.ptr.1193 = select i1 %safe.1192, i32* %6, i32* %3161
  %3162 = load i32, i32* %6
  %3163 = sub i1 %3110, true
  %3164 = xor i1 %3163, true
  %3165 = sext i1 %3163 to i32
  %3166 = and i32 %3165, %3162
  %3167 = sext i1 %3164 to i32
  %3168 = and i32 %3167, %3158
  %select.val.1194 = or i32 %3168, %3166
  store i32 %select.val.1194, i32* %select.ptr.1193, align 4
  %3169 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3170 = sext i32 3 to i64
  %3171 = icmp slt i64 1, %3170
  %3172 = bitcast i64* %shadow to i32*
  %safe.1195 = or i1 %3109, %3171
  %select.ptr.1196 = select i1 %safe.1195, i32* %3169, i32* %3172
  %3173 = load i32, i32* %select.ptr.1196, align 4
  %3174 = shl i32 %3173, 1
  %3175 = sext i32 3 to i64
  %3176 = icmp slt i64 1, %3175
  %3177 = bitcast i64* %shadow to i32*
  %safe.1197 = or i1 %3108, %3176
  %select.ptr.1198 = select i1 %safe.1197, i32* %3169, i32* %3177
  %3178 = load i32, i32* %3169
  %3179 = sub i1 %3108, true
  %3180 = xor i1 %3179, true
  %3181 = sext i1 %3179 to i32
  %3182 = and i32 %3181, %3178
  %3183 = sext i1 %3180 to i32
  %3184 = and i32 %3183, %3174
  %select.val.1199 = or i32 %3184, %3182
  store i32 %select.val.1199, i32* %select.ptr.1198, align 4
  %3185 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3186 = sext i32 3 to i64
  %3187 = icmp slt i64 2, %3186
  %3188 = bitcast i64* %shadow to i32*
  %safe.1200 = or i1 %3107, %3187
  %select.ptr.1201 = select i1 %safe.1200, i32* %3185, i32* %3188
  %3189 = load i32, i32* %select.ptr.1201, align 4
  %3190 = shl i32 %3189, 1
  %3191 = sext i32 3 to i64
  %3192 = icmp slt i64 2, %3191
  %3193 = bitcast i64* %shadow to i32*
  %safe.1202 = or i1 %3106, %3192
  %select.ptr.1203 = select i1 %safe.1202, i32* %3185, i32* %3193
  %3194 = load i32, i32* %3185
  %3195 = sub i1 %3106, true
  %3196 = xor i1 %3195, true
  %3197 = sext i1 %3195 to i32
  %3198 = and i32 %3197, %3194
  %3199 = sext i1 %3196 to i32
  %3200 = and i32 %3199, %3190
  %select.val.1204 = or i32 %3200, %3198
  store i32 %select.val.1204, i32* %select.ptr.1203, align 4
  %3201 = load i32, i32* %0, align 4
  %3202 = and i32 %3201, 1
  %3203 = icmp ne i32 %3202, 0
  %3204 = or i1 %in.300, %3105
  store i1 %3204, i1* %out.109
  %3205 = load i1, i1* %out.109
  %in.301 = and i1 %3205, %3203
  %3206 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3207 = sext i32 3 to i64
  %3208 = icmp slt i64 2, %3207
  %3209 = bitcast i64* %shadow to i32*
  %safe.1205 = or i1 %in.301, %3208
  %select.ptr.1206 = select i1 %safe.1205, i32* %3206, i32* %3209
  %3210 = load i32, i32* %select.ptr.1206, align 4
  %3211 = or i32 %3210, 1
  %3212 = sext i32 3 to i64
  %3213 = icmp slt i64 2, %3212
  %3214 = bitcast i64* %shadow to i32*
  %safe.1207 = or i1 %in.301, %3213
  %select.ptr.1208 = select i1 %safe.1207, i32* %3206, i32* %3214
  %3215 = load i32, i32* %3206
  %3216 = sub i1 %in.301, true
  %3217 = xor i1 %3216, true
  %3218 = sext i1 %3216 to i32
  %3219 = and i32 %3218, %3215
  %3220 = sext i1 %3217 to i32
  %3221 = and i32 %3220, %3211
  %select.val.1209 = or i32 %3221, %3219
  store i32 %select.val.1209, i32* %select.ptr.1208, align 4
  store i1 %in.301, i1* %out.110
  %3222 = load i1, i1* %out.109
  %3223 = xor i1 %3203, true
  %in.302 = and i1 %3222, %3223
  %3224 = load i1, i1* %out.110
  %3225 = or i1 %in.302, %3224
  %3226 = getelementptr inbounds i32, i32* %0, i64 1
  %3227 = icmp slt i64 1, %len.
  %3228 = bitcast i64* %shadow to i32*
  %safe.1210 = or i1 %3225, %3227
  %select.ptr.1211 = select i1 %safe.1210, i32* %3226, i32* %3228
  %3229 = load i32, i32* %select.ptr.1211, align 4
  %3230 = and i32 %3229, 1
  %3231 = icmp ne i32 %3230, 0
  %3232 = or i1 %in.302, %3224
  store i1 %3232, i1* %out.111
  %3233 = load i1, i1* %out.111
  %in.303 = and i1 %3233, %3231
  %3234 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3235 = sext i32 3 to i64
  %3236 = icmp slt i64 1, %3235
  %3237 = bitcast i64* %shadow to i32*
  %safe.1212 = or i1 %in.303, %3236
  %select.ptr.1213 = select i1 %safe.1212, i32* %3234, i32* %3237
  %3238 = load i32, i32* %select.ptr.1213, align 4
  %3239 = or i32 %3238, 1
  %3240 = sext i32 3 to i64
  %3241 = icmp slt i64 1, %3240
  %3242 = bitcast i64* %shadow to i32*
  %safe.1214 = or i1 %in.303, %3241
  %select.ptr.1215 = select i1 %safe.1214, i32* %3234, i32* %3242
  %3243 = load i32, i32* %3234
  %3244 = sub i1 %in.303, true
  %3245 = xor i1 %3244, true
  %3246 = sext i1 %3244 to i32
  %3247 = and i32 %3246, %3243
  %3248 = sext i1 %3245 to i32
  %3249 = and i32 %3248, %3239
  %select.val.1216 = or i32 %3249, %3247
  store i32 %select.val.1216, i32* %select.ptr.1215, align 4
  store i1 %in.303, i1* %out.112
  %3250 = load i1, i1* %out.111
  %3251 = xor i1 %3231, true
  %in.304 = and i1 %3250, %3251
  %3252 = load i1, i1* %out.112
  %3253 = or i1 %in.304, %3252
  %3254 = getelementptr inbounds i32, i32* %0, i64 2
  %3255 = icmp slt i64 2, %len.
  %3256 = bitcast i64* %shadow to i32*
  %safe.1217 = or i1 %3253, %3255
  %select.ptr.1218 = select i1 %safe.1217, i32* %3254, i32* %3256
  %3257 = load i32, i32* %select.ptr.1218, align 4
  %3258 = and i32 %3257, 1
  %3259 = icmp ne i32 %3258, 0
  %3260 = or i1 %in.304, %3252
  store i1 %3260, i1* %out.113
  %3261 = load i1, i1* %out.113
  %in.305 = and i1 %3261, %3259
  %3262 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %3263 = sext i32 3 to i64
  %3264 = icmp slt i64 0, %3263
  %3265 = bitcast i64* %shadow to i32*
  %safe.1219 = or i1 %in.305, %3264
  %select.ptr.1220 = select i1 %safe.1219, i32* %3262, i32* %3265
  %3266 = load i32, i32* %select.ptr.1220, align 4
  %3267 = or i32 %3266, 1
  %3268 = sext i32 3 to i64
  %3269 = icmp slt i64 0, %3268
  %3270 = bitcast i64* %shadow to i32*
  %safe.1221 = or i1 %in.305, %3269
  %select.ptr.1222 = select i1 %safe.1221, i32* %3262, i32* %3270
  %3271 = load i32, i32* %3262
  %3272 = sub i1 %in.305, true
  %3273 = xor i1 %3272, true
  %3274 = sext i1 %3272 to i32
  %3275 = and i32 %3274, %3271
  %3276 = sext i1 %3273 to i32
  %3277 = and i32 %3276, %3267
  %select.val.1223 = or i32 %3277, %3275
  store i32 %select.val.1223, i32* %select.ptr.1222, align 4
  store i1 %in.305, i1* %out.114
  %3278 = load i1, i1* %out.113
  %3279 = xor i1 %3259, true
  %in.306 = and i1 %3278, %3279
  %3280 = load i1, i1* %out.114
  %3281 = or i1 %in.306, %3280
  %3282 = or i1 %in.306, %3280
  %3283 = or i1 %in.306, %3280
  %3284 = or i1 %in.306, %3280
  %3285 = or i1 %in.306, %3280
  %3286 = or i1 %in.306, %3280
  %3287 = or i1 %in.306, %3280
  %3288 = or i1 %in.306, %3280
  %3289 = or i1 %in.306, %3280
  %3290 = or i1 %in.306, %3280
  %3291 = or i1 %in.306, %3280
  %3292 = load i32, i32* %0, align 4
  %3293 = ashr i32 %3292, 1
  %3294 = load i32, i32* %0
  %3295 = sub i1 %3291, true
  %3296 = xor i1 %3295, true
  %3297 = sext i1 %3295 to i32
  %3298 = and i32 %3297, %3294
  %3299 = sext i1 %3296 to i32
  %3300 = and i32 %3299, %3293
  %select.val.1224 = or i32 %3300, %3298
  store i32 %select.val.1224, i32* %0, align 4
  %3301 = getelementptr inbounds i32, i32* %0, i64 1
  %3302 = icmp slt i64 1, %len.
  %3303 = bitcast i64* %shadow to i32*
  %safe.1225 = or i1 %3290, %3302
  %select.ptr.1226 = select i1 %safe.1225, i32* %3301, i32* %3303
  %3304 = load i32, i32* %select.ptr.1226, align 4
  %3305 = ashr i32 %3304, 1
  %3306 = icmp slt i64 1, %len.
  %3307 = bitcast i64* %shadow to i32*
  %safe.1227 = or i1 %3289, %3306
  %select.ptr.1228 = select i1 %safe.1227, i32* %3301, i32* %3307
  %3308 = load i32, i32* %3301
  %3309 = sub i1 %3289, true
  %3310 = xor i1 %3309, true
  %3311 = sext i1 %3309 to i32
  %3312 = and i32 %3311, %3308
  %3313 = sext i1 %3310 to i32
  %3314 = and i32 %3313, %3305
  %select.val.1229 = or i32 %3314, %3312
  store i32 %select.val.1229, i32* %select.ptr.1228, align 4
  %3315 = getelementptr inbounds i32, i32* %0, i64 2
  %3316 = icmp slt i64 2, %len.
  %3317 = bitcast i64* %shadow to i32*
  %safe.1230 = or i1 %3288, %3316
  %select.ptr.1231 = select i1 %safe.1230, i32* %3315, i32* %3317
  %3318 = load i32, i32* %select.ptr.1231, align 4
  %3319 = ashr i32 %3318, 1
  %3320 = icmp slt i64 2, %len.
  %3321 = bitcast i64* %shadow to i32*
  %safe.1232 = or i1 %3287, %3320
  %select.ptr.1233 = select i1 %safe.1232, i32* %3315, i32* %3321
  %3322 = load i32, i32* %3315
  %3323 = sub i1 %3287, true
  %3324 = xor i1 %3323, true
  %3325 = sext i1 %3323 to i32
  %3326 = and i32 %3325, %3322
  %3327 = sext i1 %3324 to i32
  %3328 = and i32 %3327, %3319
  %select.val.1234 = or i32 %3328, %3326
  store i32 %select.val.1234, i32* %select.ptr.1233, align 4
  %3329 = sext i32 3 to i64
  %3330 = icmp slt i64 0, %3329
  %3331 = bitcast i64* %shadow to i32*
  %safe.1235 = or i1 %3286, %3330
  %select.ptr.1236 = select i1 %safe.1235, i32* %6, i32* %3331
  %3332 = load i32, i32* %select.ptr.1236, align 4
  %3333 = shl i32 %3332, 1
  %3334 = sext i32 3 to i64
  %3335 = icmp slt i64 0, %3334
  %3336 = bitcast i64* %shadow to i32*
  %safe.1237 = or i1 %3285, %3335
  %select.ptr.1238 = select i1 %safe.1237, i32* %6, i32* %3336
  %3337 = load i32, i32* %6
  %3338 = sub i1 %3285, true
  %3339 = xor i1 %3338, true
  %3340 = sext i1 %3338 to i32
  %3341 = and i32 %3340, %3337
  %3342 = sext i1 %3339 to i32
  %3343 = and i32 %3342, %3333
  %select.val.1239 = or i32 %3343, %3341
  store i32 %select.val.1239, i32* %select.ptr.1238, align 4
  %3344 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3345 = sext i32 3 to i64
  %3346 = icmp slt i64 1, %3345
  %3347 = bitcast i64* %shadow to i32*
  %safe.1240 = or i1 %3284, %3346
  %select.ptr.1241 = select i1 %safe.1240, i32* %3344, i32* %3347
  %3348 = load i32, i32* %select.ptr.1241, align 4
  %3349 = shl i32 %3348, 1
  %3350 = sext i32 3 to i64
  %3351 = icmp slt i64 1, %3350
  %3352 = bitcast i64* %shadow to i32*
  %safe.1242 = or i1 %3283, %3351
  %select.ptr.1243 = select i1 %safe.1242, i32* %3344, i32* %3352
  %3353 = load i32, i32* %3344
  %3354 = sub i1 %3283, true
  %3355 = xor i1 %3354, true
  %3356 = sext i1 %3354 to i32
  %3357 = and i32 %3356, %3353
  %3358 = sext i1 %3355 to i32
  %3359 = and i32 %3358, %3349
  %select.val.1244 = or i32 %3359, %3357
  store i32 %select.val.1244, i32* %select.ptr.1243, align 4
  %3360 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3361 = sext i32 3 to i64
  %3362 = icmp slt i64 2, %3361
  %3363 = bitcast i64* %shadow to i32*
  %safe.1245 = or i1 %3282, %3362
  %select.ptr.1246 = select i1 %safe.1245, i32* %3360, i32* %3363
  %3364 = load i32, i32* %select.ptr.1246, align 4
  %3365 = shl i32 %3364, 1
  %3366 = sext i32 3 to i64
  %3367 = icmp slt i64 2, %3366
  %3368 = bitcast i64* %shadow to i32*
  %safe.1247 = or i1 %3281, %3367
  %select.ptr.1248 = select i1 %safe.1247, i32* %3360, i32* %3368
  %3369 = load i32, i32* %3360
  %3370 = sub i1 %3281, true
  %3371 = xor i1 %3370, true
  %3372 = sext i1 %3370 to i32
  %3373 = and i32 %3372, %3369
  %3374 = sext i1 %3371 to i32
  %3375 = and i32 %3374, %3365
  %select.val.1249 = or i32 %3375, %3373
  store i32 %select.val.1249, i32* %select.ptr.1248, align 4
  %3376 = load i32, i32* %0, align 4
  %3377 = and i32 %3376, 1
  %3378 = icmp ne i32 %3377, 0
  %3379 = or i1 %in.306, %3280
  store i1 %3379, i1* %out.115
  %3380 = load i1, i1* %out.115
  %in.307 = and i1 %3380, %3378
  %3381 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3382 = sext i32 3 to i64
  %3383 = icmp slt i64 2, %3382
  %3384 = bitcast i64* %shadow to i32*
  %safe.1250 = or i1 %in.307, %3383
  %select.ptr.1251 = select i1 %safe.1250, i32* %3381, i32* %3384
  %3385 = load i32, i32* %select.ptr.1251, align 4
  %3386 = or i32 %3385, 1
  %3387 = sext i32 3 to i64
  %3388 = icmp slt i64 2, %3387
  %3389 = bitcast i64* %shadow to i32*
  %safe.1252 = or i1 %in.307, %3388
  %select.ptr.1253 = select i1 %safe.1252, i32* %3381, i32* %3389
  %3390 = load i32, i32* %3381
  %3391 = sub i1 %in.307, true
  %3392 = xor i1 %3391, true
  %3393 = sext i1 %3391 to i32
  %3394 = and i32 %3393, %3390
  %3395 = sext i1 %3392 to i32
  %3396 = and i32 %3395, %3386
  %select.val.1254 = or i32 %3396, %3394
  store i32 %select.val.1254, i32* %select.ptr.1253, align 4
  store i1 %in.307, i1* %out.116
  %3397 = load i1, i1* %out.115
  %3398 = xor i1 %3378, true
  %in.308 = and i1 %3397, %3398
  %3399 = load i1, i1* %out.116
  %3400 = or i1 %in.308, %3399
  %3401 = getelementptr inbounds i32, i32* %0, i64 1
  %3402 = icmp slt i64 1, %len.
  %3403 = bitcast i64* %shadow to i32*
  %safe.1255 = or i1 %3400, %3402
  %select.ptr.1256 = select i1 %safe.1255, i32* %3401, i32* %3403
  %3404 = load i32, i32* %select.ptr.1256, align 4
  %3405 = and i32 %3404, 1
  %3406 = icmp ne i32 %3405, 0
  %3407 = or i1 %in.308, %3399
  store i1 %3407, i1* %out.117
  %3408 = load i1, i1* %out.117
  %in.309 = and i1 %3408, %3406
  %3409 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3410 = sext i32 3 to i64
  %3411 = icmp slt i64 1, %3410
  %3412 = bitcast i64* %shadow to i32*
  %safe.1257 = or i1 %in.309, %3411
  %select.ptr.1258 = select i1 %safe.1257, i32* %3409, i32* %3412
  %3413 = load i32, i32* %select.ptr.1258, align 4
  %3414 = or i32 %3413, 1
  %3415 = sext i32 3 to i64
  %3416 = icmp slt i64 1, %3415
  %3417 = bitcast i64* %shadow to i32*
  %safe.1259 = or i1 %in.309, %3416
  %select.ptr.1260 = select i1 %safe.1259, i32* %3409, i32* %3417
  %3418 = load i32, i32* %3409
  %3419 = sub i1 %in.309, true
  %3420 = xor i1 %3419, true
  %3421 = sext i1 %3419 to i32
  %3422 = and i32 %3421, %3418
  %3423 = sext i1 %3420 to i32
  %3424 = and i32 %3423, %3414
  %select.val.1261 = or i32 %3424, %3422
  store i32 %select.val.1261, i32* %select.ptr.1260, align 4
  store i1 %in.309, i1* %out.118
  %3425 = load i1, i1* %out.117
  %3426 = xor i1 %3406, true
  %in.310 = and i1 %3425, %3426
  %3427 = load i1, i1* %out.118
  %3428 = or i1 %in.310, %3427
  %3429 = getelementptr inbounds i32, i32* %0, i64 2
  %3430 = icmp slt i64 2, %len.
  %3431 = bitcast i64* %shadow to i32*
  %safe.1262 = or i1 %3428, %3430
  %select.ptr.1263 = select i1 %safe.1262, i32* %3429, i32* %3431
  %3432 = load i32, i32* %select.ptr.1263, align 4
  %3433 = and i32 %3432, 1
  %3434 = icmp ne i32 %3433, 0
  %3435 = or i1 %in.310, %3427
  store i1 %3435, i1* %out.119
  %3436 = load i1, i1* %out.119
  %in.311 = and i1 %3436, %3434
  %3437 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %3438 = sext i32 3 to i64
  %3439 = icmp slt i64 0, %3438
  %3440 = bitcast i64* %shadow to i32*
  %safe.1264 = or i1 %in.311, %3439
  %select.ptr.1265 = select i1 %safe.1264, i32* %3437, i32* %3440
  %3441 = load i32, i32* %select.ptr.1265, align 4
  %3442 = or i32 %3441, 1
  %3443 = sext i32 3 to i64
  %3444 = icmp slt i64 0, %3443
  %3445 = bitcast i64* %shadow to i32*
  %safe.1266 = or i1 %in.311, %3444
  %select.ptr.1267 = select i1 %safe.1266, i32* %3437, i32* %3445
  %3446 = load i32, i32* %3437
  %3447 = sub i1 %in.311, true
  %3448 = xor i1 %3447, true
  %3449 = sext i1 %3447 to i32
  %3450 = and i32 %3449, %3446
  %3451 = sext i1 %3448 to i32
  %3452 = and i32 %3451, %3442
  %select.val.1268 = or i32 %3452, %3450
  store i32 %select.val.1268, i32* %select.ptr.1267, align 4
  store i1 %in.311, i1* %out.120
  %3453 = load i1, i1* %out.119
  %3454 = xor i1 %3434, true
  %in.312 = and i1 %3453, %3454
  %3455 = load i1, i1* %out.120
  %3456 = or i1 %in.312, %3455
  %3457 = or i1 %in.312, %3455
  %3458 = or i1 %in.312, %3455
  %3459 = or i1 %in.312, %3455
  %3460 = or i1 %in.312, %3455
  %3461 = or i1 %in.312, %3455
  %3462 = or i1 %in.312, %3455
  %3463 = or i1 %in.312, %3455
  %3464 = or i1 %in.312, %3455
  %3465 = or i1 %in.312, %3455
  %3466 = or i1 %in.312, %3455
  %3467 = load i32, i32* %0, align 4
  %3468 = ashr i32 %3467, 1
  %3469 = load i32, i32* %0
  %3470 = sub i1 %3466, true
  %3471 = xor i1 %3470, true
  %3472 = sext i1 %3470 to i32
  %3473 = and i32 %3472, %3469
  %3474 = sext i1 %3471 to i32
  %3475 = and i32 %3474, %3468
  %select.val.1269 = or i32 %3475, %3473
  store i32 %select.val.1269, i32* %0, align 4
  %3476 = getelementptr inbounds i32, i32* %0, i64 1
  %3477 = icmp slt i64 1, %len.
  %3478 = bitcast i64* %shadow to i32*
  %safe.1270 = or i1 %3465, %3477
  %select.ptr.1271 = select i1 %safe.1270, i32* %3476, i32* %3478
  %3479 = load i32, i32* %select.ptr.1271, align 4
  %3480 = ashr i32 %3479, 1
  %3481 = icmp slt i64 1, %len.
  %3482 = bitcast i64* %shadow to i32*
  %safe.1272 = or i1 %3464, %3481
  %select.ptr.1273 = select i1 %safe.1272, i32* %3476, i32* %3482
  %3483 = load i32, i32* %3476
  %3484 = sub i1 %3464, true
  %3485 = xor i1 %3484, true
  %3486 = sext i1 %3484 to i32
  %3487 = and i32 %3486, %3483
  %3488 = sext i1 %3485 to i32
  %3489 = and i32 %3488, %3480
  %select.val.1274 = or i32 %3489, %3487
  store i32 %select.val.1274, i32* %select.ptr.1273, align 4
  %3490 = getelementptr inbounds i32, i32* %0, i64 2
  %3491 = icmp slt i64 2, %len.
  %3492 = bitcast i64* %shadow to i32*
  %safe.1275 = or i1 %3463, %3491
  %select.ptr.1276 = select i1 %safe.1275, i32* %3490, i32* %3492
  %3493 = load i32, i32* %select.ptr.1276, align 4
  %3494 = ashr i32 %3493, 1
  %3495 = icmp slt i64 2, %len.
  %3496 = bitcast i64* %shadow to i32*
  %safe.1277 = or i1 %3462, %3495
  %select.ptr.1278 = select i1 %safe.1277, i32* %3490, i32* %3496
  %3497 = load i32, i32* %3490
  %3498 = sub i1 %3462, true
  %3499 = xor i1 %3498, true
  %3500 = sext i1 %3498 to i32
  %3501 = and i32 %3500, %3497
  %3502 = sext i1 %3499 to i32
  %3503 = and i32 %3502, %3494
  %select.val.1279 = or i32 %3503, %3501
  store i32 %select.val.1279, i32* %select.ptr.1278, align 4
  %3504 = sext i32 3 to i64
  %3505 = icmp slt i64 0, %3504
  %3506 = bitcast i64* %shadow to i32*
  %safe.1280 = or i1 %3461, %3505
  %select.ptr.1281 = select i1 %safe.1280, i32* %6, i32* %3506
  %3507 = load i32, i32* %select.ptr.1281, align 4
  %3508 = shl i32 %3507, 1
  %3509 = sext i32 3 to i64
  %3510 = icmp slt i64 0, %3509
  %3511 = bitcast i64* %shadow to i32*
  %safe.1282 = or i1 %3460, %3510
  %select.ptr.1283 = select i1 %safe.1282, i32* %6, i32* %3511
  %3512 = load i32, i32* %6
  %3513 = sub i1 %3460, true
  %3514 = xor i1 %3513, true
  %3515 = sext i1 %3513 to i32
  %3516 = and i32 %3515, %3512
  %3517 = sext i1 %3514 to i32
  %3518 = and i32 %3517, %3508
  %select.val.1284 = or i32 %3518, %3516
  store i32 %select.val.1284, i32* %select.ptr.1283, align 4
  %3519 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3520 = sext i32 3 to i64
  %3521 = icmp slt i64 1, %3520
  %3522 = bitcast i64* %shadow to i32*
  %safe.1285 = or i1 %3459, %3521
  %select.ptr.1286 = select i1 %safe.1285, i32* %3519, i32* %3522
  %3523 = load i32, i32* %select.ptr.1286, align 4
  %3524 = shl i32 %3523, 1
  %3525 = sext i32 3 to i64
  %3526 = icmp slt i64 1, %3525
  %3527 = bitcast i64* %shadow to i32*
  %safe.1287 = or i1 %3458, %3526
  %select.ptr.1288 = select i1 %safe.1287, i32* %3519, i32* %3527
  %3528 = load i32, i32* %3519
  %3529 = sub i1 %3458, true
  %3530 = xor i1 %3529, true
  %3531 = sext i1 %3529 to i32
  %3532 = and i32 %3531, %3528
  %3533 = sext i1 %3530 to i32
  %3534 = and i32 %3533, %3524
  %select.val.1289 = or i32 %3534, %3532
  store i32 %select.val.1289, i32* %select.ptr.1288, align 4
  %3535 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3536 = sext i32 3 to i64
  %3537 = icmp slt i64 2, %3536
  %3538 = bitcast i64* %shadow to i32*
  %safe.1290 = or i1 %3457, %3537
  %select.ptr.1291 = select i1 %safe.1290, i32* %3535, i32* %3538
  %3539 = load i32, i32* %select.ptr.1291, align 4
  %3540 = shl i32 %3539, 1
  %3541 = sext i32 3 to i64
  %3542 = icmp slt i64 2, %3541
  %3543 = bitcast i64* %shadow to i32*
  %safe.1292 = or i1 %3456, %3542
  %select.ptr.1293 = select i1 %safe.1292, i32* %3535, i32* %3543
  %3544 = load i32, i32* %3535
  %3545 = sub i1 %3456, true
  %3546 = xor i1 %3545, true
  %3547 = sext i1 %3545 to i32
  %3548 = and i32 %3547, %3544
  %3549 = sext i1 %3546 to i32
  %3550 = and i32 %3549, %3540
  %select.val.1294 = or i32 %3550, %3548
  store i32 %select.val.1294, i32* %select.ptr.1293, align 4
  %3551 = load i32, i32* %0, align 4
  %3552 = and i32 %3551, 1
  %3553 = icmp ne i32 %3552, 0
  %3554 = or i1 %in.312, %3455
  store i1 %3554, i1* %out.121
  %3555 = load i1, i1* %out.121
  %in.313 = and i1 %3555, %3553
  %3556 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3557 = sext i32 3 to i64
  %3558 = icmp slt i64 2, %3557
  %3559 = bitcast i64* %shadow to i32*
  %safe.1295 = or i1 %in.313, %3558
  %select.ptr.1296 = select i1 %safe.1295, i32* %3556, i32* %3559
  %3560 = load i32, i32* %select.ptr.1296, align 4
  %3561 = or i32 %3560, 1
  %3562 = sext i32 3 to i64
  %3563 = icmp slt i64 2, %3562
  %3564 = bitcast i64* %shadow to i32*
  %safe.1297 = or i1 %in.313, %3563
  %select.ptr.1298 = select i1 %safe.1297, i32* %3556, i32* %3564
  %3565 = load i32, i32* %3556
  %3566 = sub i1 %in.313, true
  %3567 = xor i1 %3566, true
  %3568 = sext i1 %3566 to i32
  %3569 = and i32 %3568, %3565
  %3570 = sext i1 %3567 to i32
  %3571 = and i32 %3570, %3561
  %select.val.1299 = or i32 %3571, %3569
  store i32 %select.val.1299, i32* %select.ptr.1298, align 4
  store i1 %in.313, i1* %out.122
  %3572 = load i1, i1* %out.121
  %3573 = xor i1 %3553, true
  %in.314 = and i1 %3572, %3573
  %3574 = load i1, i1* %out.122
  %3575 = or i1 %in.314, %3574
  %3576 = getelementptr inbounds i32, i32* %0, i64 1
  %3577 = icmp slt i64 1, %len.
  %3578 = bitcast i64* %shadow to i32*
  %safe.1300 = or i1 %3575, %3577
  %select.ptr.1301 = select i1 %safe.1300, i32* %3576, i32* %3578
  %3579 = load i32, i32* %select.ptr.1301, align 4
  %3580 = and i32 %3579, 1
  %3581 = icmp ne i32 %3580, 0
  %3582 = or i1 %in.314, %3574
  store i1 %3582, i1* %out.123
  %3583 = load i1, i1* %out.123
  %in.315 = and i1 %3583, %3581
  %3584 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3585 = sext i32 3 to i64
  %3586 = icmp slt i64 1, %3585
  %3587 = bitcast i64* %shadow to i32*
  %safe.1302 = or i1 %in.315, %3586
  %select.ptr.1303 = select i1 %safe.1302, i32* %3584, i32* %3587
  %3588 = load i32, i32* %select.ptr.1303, align 4
  %3589 = or i32 %3588, 1
  %3590 = sext i32 3 to i64
  %3591 = icmp slt i64 1, %3590
  %3592 = bitcast i64* %shadow to i32*
  %safe.1304 = or i1 %in.315, %3591
  %select.ptr.1305 = select i1 %safe.1304, i32* %3584, i32* %3592
  %3593 = load i32, i32* %3584
  %3594 = sub i1 %in.315, true
  %3595 = xor i1 %3594, true
  %3596 = sext i1 %3594 to i32
  %3597 = and i32 %3596, %3593
  %3598 = sext i1 %3595 to i32
  %3599 = and i32 %3598, %3589
  %select.val.1306 = or i32 %3599, %3597
  store i32 %select.val.1306, i32* %select.ptr.1305, align 4
  store i1 %in.315, i1* %out.124
  %3600 = load i1, i1* %out.123
  %3601 = xor i1 %3581, true
  %in.316 = and i1 %3600, %3601
  %3602 = load i1, i1* %out.124
  %3603 = or i1 %in.316, %3602
  %3604 = getelementptr inbounds i32, i32* %0, i64 2
  %3605 = icmp slt i64 2, %len.
  %3606 = bitcast i64* %shadow to i32*
  %safe.1307 = or i1 %3603, %3605
  %select.ptr.1308 = select i1 %safe.1307, i32* %3604, i32* %3606
  %3607 = load i32, i32* %select.ptr.1308, align 4
  %3608 = and i32 %3607, 1
  %3609 = icmp ne i32 %3608, 0
  %3610 = or i1 %in.316, %3602
  store i1 %3610, i1* %out.125
  %3611 = load i1, i1* %out.125
  %in.317 = and i1 %3611, %3609
  %3612 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %3613 = sext i32 3 to i64
  %3614 = icmp slt i64 0, %3613
  %3615 = bitcast i64* %shadow to i32*
  %safe.1309 = or i1 %in.317, %3614
  %select.ptr.1310 = select i1 %safe.1309, i32* %3612, i32* %3615
  %3616 = load i32, i32* %select.ptr.1310, align 4
  %3617 = or i32 %3616, 1
  %3618 = sext i32 3 to i64
  %3619 = icmp slt i64 0, %3618
  %3620 = bitcast i64* %shadow to i32*
  %safe.1311 = or i1 %in.317, %3619
  %select.ptr.1312 = select i1 %safe.1311, i32* %3612, i32* %3620
  %3621 = load i32, i32* %3612
  %3622 = sub i1 %in.317, true
  %3623 = xor i1 %3622, true
  %3624 = sext i1 %3622 to i32
  %3625 = and i32 %3624, %3621
  %3626 = sext i1 %3623 to i32
  %3627 = and i32 %3626, %3617
  %select.val.1313 = or i32 %3627, %3625
  store i32 %select.val.1313, i32* %select.ptr.1312, align 4
  store i1 %in.317, i1* %out.126
  %3628 = load i1, i1* %out.125
  %3629 = xor i1 %3609, true
  %in.318 = and i1 %3628, %3629
  %3630 = load i1, i1* %out.126
  %3631 = or i1 %in.318, %3630
  %3632 = or i1 %in.318, %3630
  %3633 = or i1 %in.318, %3630
  %3634 = or i1 %in.318, %3630
  %3635 = or i1 %in.318, %3630
  %3636 = or i1 %in.318, %3630
  %3637 = or i1 %in.318, %3630
  %3638 = or i1 %in.318, %3630
  %3639 = or i1 %in.318, %3630
  %3640 = or i1 %in.318, %3630
  %3641 = or i1 %in.318, %3630
  %3642 = load i32, i32* %0, align 4
  %3643 = ashr i32 %3642, 1
  %3644 = load i32, i32* %0
  %3645 = sub i1 %3641, true
  %3646 = xor i1 %3645, true
  %3647 = sext i1 %3645 to i32
  %3648 = and i32 %3647, %3644
  %3649 = sext i1 %3646 to i32
  %3650 = and i32 %3649, %3643
  %select.val.1314 = or i32 %3650, %3648
  store i32 %select.val.1314, i32* %0, align 4
  %3651 = getelementptr inbounds i32, i32* %0, i64 1
  %3652 = icmp slt i64 1, %len.
  %3653 = bitcast i64* %shadow to i32*
  %safe.1315 = or i1 %3640, %3652
  %select.ptr.1316 = select i1 %safe.1315, i32* %3651, i32* %3653
  %3654 = load i32, i32* %select.ptr.1316, align 4
  %3655 = ashr i32 %3654, 1
  %3656 = icmp slt i64 1, %len.
  %3657 = bitcast i64* %shadow to i32*
  %safe.1317 = or i1 %3639, %3656
  %select.ptr.1318 = select i1 %safe.1317, i32* %3651, i32* %3657
  %3658 = load i32, i32* %3651
  %3659 = sub i1 %3639, true
  %3660 = xor i1 %3659, true
  %3661 = sext i1 %3659 to i32
  %3662 = and i32 %3661, %3658
  %3663 = sext i1 %3660 to i32
  %3664 = and i32 %3663, %3655
  %select.val.1319 = or i32 %3664, %3662
  store i32 %select.val.1319, i32* %select.ptr.1318, align 4
  %3665 = getelementptr inbounds i32, i32* %0, i64 2
  %3666 = icmp slt i64 2, %len.
  %3667 = bitcast i64* %shadow to i32*
  %safe.1320 = or i1 %3638, %3666
  %select.ptr.1321 = select i1 %safe.1320, i32* %3665, i32* %3667
  %3668 = load i32, i32* %select.ptr.1321, align 4
  %3669 = ashr i32 %3668, 1
  %3670 = icmp slt i64 2, %len.
  %3671 = bitcast i64* %shadow to i32*
  %safe.1322 = or i1 %3637, %3670
  %select.ptr.1323 = select i1 %safe.1322, i32* %3665, i32* %3671
  %3672 = load i32, i32* %3665
  %3673 = sub i1 %3637, true
  %3674 = xor i1 %3673, true
  %3675 = sext i1 %3673 to i32
  %3676 = and i32 %3675, %3672
  %3677 = sext i1 %3674 to i32
  %3678 = and i32 %3677, %3669
  %select.val.1324 = or i32 %3678, %3676
  store i32 %select.val.1324, i32* %select.ptr.1323, align 4
  %3679 = sext i32 3 to i64
  %3680 = icmp slt i64 0, %3679
  %3681 = bitcast i64* %shadow to i32*
  %safe.1325 = or i1 %3636, %3680
  %select.ptr.1326 = select i1 %safe.1325, i32* %6, i32* %3681
  %3682 = load i32, i32* %select.ptr.1326, align 4
  %3683 = shl i32 %3682, 1
  %3684 = sext i32 3 to i64
  %3685 = icmp slt i64 0, %3684
  %3686 = bitcast i64* %shadow to i32*
  %safe.1327 = or i1 %3635, %3685
  %select.ptr.1328 = select i1 %safe.1327, i32* %6, i32* %3686
  %3687 = load i32, i32* %6
  %3688 = sub i1 %3635, true
  %3689 = xor i1 %3688, true
  %3690 = sext i1 %3688 to i32
  %3691 = and i32 %3690, %3687
  %3692 = sext i1 %3689 to i32
  %3693 = and i32 %3692, %3683
  %select.val.1329 = or i32 %3693, %3691
  store i32 %select.val.1329, i32* %select.ptr.1328, align 4
  %3694 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3695 = sext i32 3 to i64
  %3696 = icmp slt i64 1, %3695
  %3697 = bitcast i64* %shadow to i32*
  %safe.1330 = or i1 %3634, %3696
  %select.ptr.1331 = select i1 %safe.1330, i32* %3694, i32* %3697
  %3698 = load i32, i32* %select.ptr.1331, align 4
  %3699 = shl i32 %3698, 1
  %3700 = sext i32 3 to i64
  %3701 = icmp slt i64 1, %3700
  %3702 = bitcast i64* %shadow to i32*
  %safe.1332 = or i1 %3633, %3701
  %select.ptr.1333 = select i1 %safe.1332, i32* %3694, i32* %3702
  %3703 = load i32, i32* %3694
  %3704 = sub i1 %3633, true
  %3705 = xor i1 %3704, true
  %3706 = sext i1 %3704 to i32
  %3707 = and i32 %3706, %3703
  %3708 = sext i1 %3705 to i32
  %3709 = and i32 %3708, %3699
  %select.val.1334 = or i32 %3709, %3707
  store i32 %select.val.1334, i32* %select.ptr.1333, align 4
  %3710 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3711 = sext i32 3 to i64
  %3712 = icmp slt i64 2, %3711
  %3713 = bitcast i64* %shadow to i32*
  %safe.1335 = or i1 %3632, %3712
  %select.ptr.1336 = select i1 %safe.1335, i32* %3710, i32* %3713
  %3714 = load i32, i32* %select.ptr.1336, align 4
  %3715 = shl i32 %3714, 1
  %3716 = sext i32 3 to i64
  %3717 = icmp slt i64 2, %3716
  %3718 = bitcast i64* %shadow to i32*
  %safe.1337 = or i1 %3631, %3717
  %select.ptr.1338 = select i1 %safe.1337, i32* %3710, i32* %3718
  %3719 = load i32, i32* %3710
  %3720 = sub i1 %3631, true
  %3721 = xor i1 %3720, true
  %3722 = sext i1 %3720 to i32
  %3723 = and i32 %3722, %3719
  %3724 = sext i1 %3721 to i32
  %3725 = and i32 %3724, %3715
  %select.val.1339 = or i32 %3725, %3723
  store i32 %select.val.1339, i32* %select.ptr.1338, align 4
  %3726 = load i32, i32* %0, align 4
  %3727 = and i32 %3726, 1
  %3728 = icmp ne i32 %3727, 0
  %3729 = or i1 %in.318, %3630
  store i1 %3729, i1* %out.127
  %3730 = load i1, i1* %out.127
  %in.319 = and i1 %3730, %3728
  %3731 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3732 = sext i32 3 to i64
  %3733 = icmp slt i64 2, %3732
  %3734 = bitcast i64* %shadow to i32*
  %safe.1340 = or i1 %in.319, %3733
  %select.ptr.1341 = select i1 %safe.1340, i32* %3731, i32* %3734
  %3735 = load i32, i32* %select.ptr.1341, align 4
  %3736 = or i32 %3735, 1
  %3737 = sext i32 3 to i64
  %3738 = icmp slt i64 2, %3737
  %3739 = bitcast i64* %shadow to i32*
  %safe.1342 = or i1 %in.319, %3738
  %select.ptr.1343 = select i1 %safe.1342, i32* %3731, i32* %3739
  %3740 = load i32, i32* %3731
  %3741 = sub i1 %in.319, true
  %3742 = xor i1 %3741, true
  %3743 = sext i1 %3741 to i32
  %3744 = and i32 %3743, %3740
  %3745 = sext i1 %3742 to i32
  %3746 = and i32 %3745, %3736
  %select.val.1344 = or i32 %3746, %3744
  store i32 %select.val.1344, i32* %select.ptr.1343, align 4
  store i1 %in.319, i1* %out.128
  %3747 = load i1, i1* %out.127
  %3748 = xor i1 %3728, true
  %in.320 = and i1 %3747, %3748
  %3749 = load i1, i1* %out.128
  %3750 = or i1 %in.320, %3749
  %3751 = getelementptr inbounds i32, i32* %0, i64 1
  %3752 = icmp slt i64 1, %len.
  %3753 = bitcast i64* %shadow to i32*
  %safe.1345 = or i1 %3750, %3752
  %select.ptr.1346 = select i1 %safe.1345, i32* %3751, i32* %3753
  %3754 = load i32, i32* %select.ptr.1346, align 4
  %3755 = and i32 %3754, 1
  %3756 = icmp ne i32 %3755, 0
  %3757 = or i1 %in.320, %3749
  store i1 %3757, i1* %out.129
  %3758 = load i1, i1* %out.129
  %in.321 = and i1 %3758, %3756
  %3759 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3760 = sext i32 3 to i64
  %3761 = icmp slt i64 1, %3760
  %3762 = bitcast i64* %shadow to i32*
  %safe.1347 = or i1 %in.321, %3761
  %select.ptr.1348 = select i1 %safe.1347, i32* %3759, i32* %3762
  %3763 = load i32, i32* %select.ptr.1348, align 4
  %3764 = or i32 %3763, 1
  %3765 = sext i32 3 to i64
  %3766 = icmp slt i64 1, %3765
  %3767 = bitcast i64* %shadow to i32*
  %safe.1349 = or i1 %in.321, %3766
  %select.ptr.1350 = select i1 %safe.1349, i32* %3759, i32* %3767
  %3768 = load i32, i32* %3759
  %3769 = sub i1 %in.321, true
  %3770 = xor i1 %3769, true
  %3771 = sext i1 %3769 to i32
  %3772 = and i32 %3771, %3768
  %3773 = sext i1 %3770 to i32
  %3774 = and i32 %3773, %3764
  %select.val.1351 = or i32 %3774, %3772
  store i32 %select.val.1351, i32* %select.ptr.1350, align 4
  store i1 %in.321, i1* %out.130
  %3775 = load i1, i1* %out.129
  %3776 = xor i1 %3756, true
  %in.322 = and i1 %3775, %3776
  %3777 = load i1, i1* %out.130
  %3778 = or i1 %in.322, %3777
  %3779 = getelementptr inbounds i32, i32* %0, i64 2
  %3780 = icmp slt i64 2, %len.
  %3781 = bitcast i64* %shadow to i32*
  %safe.1352 = or i1 %3778, %3780
  %select.ptr.1353 = select i1 %safe.1352, i32* %3779, i32* %3781
  %3782 = load i32, i32* %select.ptr.1353, align 4
  %3783 = and i32 %3782, 1
  %3784 = icmp ne i32 %3783, 0
  %3785 = or i1 %in.322, %3777
  store i1 %3785, i1* %out.131
  %3786 = load i1, i1* %out.131
  %in.323 = and i1 %3786, %3784
  %3787 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %3788 = sext i32 3 to i64
  %3789 = icmp slt i64 0, %3788
  %3790 = bitcast i64* %shadow to i32*
  %safe.1354 = or i1 %in.323, %3789
  %select.ptr.1355 = select i1 %safe.1354, i32* %3787, i32* %3790
  %3791 = load i32, i32* %select.ptr.1355, align 4
  %3792 = or i32 %3791, 1
  %3793 = sext i32 3 to i64
  %3794 = icmp slt i64 0, %3793
  %3795 = bitcast i64* %shadow to i32*
  %safe.1356 = or i1 %in.323, %3794
  %select.ptr.1357 = select i1 %safe.1356, i32* %3787, i32* %3795
  %3796 = load i32, i32* %3787
  %3797 = sub i1 %in.323, true
  %3798 = xor i1 %3797, true
  %3799 = sext i1 %3797 to i32
  %3800 = and i32 %3799, %3796
  %3801 = sext i1 %3798 to i32
  %3802 = and i32 %3801, %3792
  %select.val.1358 = or i32 %3802, %3800
  store i32 %select.val.1358, i32* %select.ptr.1357, align 4
  store i1 %in.323, i1* %out.132
  %3803 = load i1, i1* %out.131
  %3804 = xor i1 %3784, true
  %in.324 = and i1 %3803, %3804
  %3805 = load i1, i1* %out.132
  %3806 = or i1 %in.324, %3805
  %3807 = or i1 %in.324, %3805
  %3808 = or i1 %in.324, %3805
  %3809 = or i1 %in.324, %3805
  %3810 = or i1 %in.324, %3805
  %3811 = or i1 %in.324, %3805
  %3812 = or i1 %in.324, %3805
  %3813 = or i1 %in.324, %3805
  %3814 = or i1 %in.324, %3805
  %3815 = or i1 %in.324, %3805
  %3816 = or i1 %in.324, %3805
  %3817 = load i32, i32* %0, align 4
  %3818 = ashr i32 %3817, 1
  %3819 = load i32, i32* %0
  %3820 = sub i1 %3816, true
  %3821 = xor i1 %3820, true
  %3822 = sext i1 %3820 to i32
  %3823 = and i32 %3822, %3819
  %3824 = sext i1 %3821 to i32
  %3825 = and i32 %3824, %3818
  %select.val.1359 = or i32 %3825, %3823
  store i32 %select.val.1359, i32* %0, align 4
  %3826 = getelementptr inbounds i32, i32* %0, i64 1
  %3827 = icmp slt i64 1, %len.
  %3828 = bitcast i64* %shadow to i32*
  %safe.1360 = or i1 %3815, %3827
  %select.ptr.1361 = select i1 %safe.1360, i32* %3826, i32* %3828
  %3829 = load i32, i32* %select.ptr.1361, align 4
  %3830 = ashr i32 %3829, 1
  %3831 = icmp slt i64 1, %len.
  %3832 = bitcast i64* %shadow to i32*
  %safe.1362 = or i1 %3814, %3831
  %select.ptr.1363 = select i1 %safe.1362, i32* %3826, i32* %3832
  %3833 = load i32, i32* %3826
  %3834 = sub i1 %3814, true
  %3835 = xor i1 %3834, true
  %3836 = sext i1 %3834 to i32
  %3837 = and i32 %3836, %3833
  %3838 = sext i1 %3835 to i32
  %3839 = and i32 %3838, %3830
  %select.val.1364 = or i32 %3839, %3837
  store i32 %select.val.1364, i32* %select.ptr.1363, align 4
  %3840 = getelementptr inbounds i32, i32* %0, i64 2
  %3841 = icmp slt i64 2, %len.
  %3842 = bitcast i64* %shadow to i32*
  %safe.1365 = or i1 %3813, %3841
  %select.ptr.1366 = select i1 %safe.1365, i32* %3840, i32* %3842
  %3843 = load i32, i32* %select.ptr.1366, align 4
  %3844 = ashr i32 %3843, 1
  %3845 = icmp slt i64 2, %len.
  %3846 = bitcast i64* %shadow to i32*
  %safe.1367 = or i1 %3812, %3845
  %select.ptr.1368 = select i1 %safe.1367, i32* %3840, i32* %3846
  %3847 = load i32, i32* %3840
  %3848 = sub i1 %3812, true
  %3849 = xor i1 %3848, true
  %3850 = sext i1 %3848 to i32
  %3851 = and i32 %3850, %3847
  %3852 = sext i1 %3849 to i32
  %3853 = and i32 %3852, %3844
  %select.val.1369 = or i32 %3853, %3851
  store i32 %select.val.1369, i32* %select.ptr.1368, align 4
  %3854 = sext i32 3 to i64
  %3855 = icmp slt i64 0, %3854
  %3856 = bitcast i64* %shadow to i32*
  %safe.1370 = or i1 %3811, %3855
  %select.ptr.1371 = select i1 %safe.1370, i32* %6, i32* %3856
  %3857 = load i32, i32* %select.ptr.1371, align 4
  %3858 = shl i32 %3857, 1
  %3859 = sext i32 3 to i64
  %3860 = icmp slt i64 0, %3859
  %3861 = bitcast i64* %shadow to i32*
  %safe.1372 = or i1 %3810, %3860
  %select.ptr.1373 = select i1 %safe.1372, i32* %6, i32* %3861
  %3862 = load i32, i32* %6
  %3863 = sub i1 %3810, true
  %3864 = xor i1 %3863, true
  %3865 = sext i1 %3863 to i32
  %3866 = and i32 %3865, %3862
  %3867 = sext i1 %3864 to i32
  %3868 = and i32 %3867, %3858
  %select.val.1374 = or i32 %3868, %3866
  store i32 %select.val.1374, i32* %select.ptr.1373, align 4
  %3869 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3870 = sext i32 3 to i64
  %3871 = icmp slt i64 1, %3870
  %3872 = bitcast i64* %shadow to i32*
  %safe.1375 = or i1 %3809, %3871
  %select.ptr.1376 = select i1 %safe.1375, i32* %3869, i32* %3872
  %3873 = load i32, i32* %select.ptr.1376, align 4
  %3874 = shl i32 %3873, 1
  %3875 = sext i32 3 to i64
  %3876 = icmp slt i64 1, %3875
  %3877 = bitcast i64* %shadow to i32*
  %safe.1377 = or i1 %3808, %3876
  %select.ptr.1378 = select i1 %safe.1377, i32* %3869, i32* %3877
  %3878 = load i32, i32* %3869
  %3879 = sub i1 %3808, true
  %3880 = xor i1 %3879, true
  %3881 = sext i1 %3879 to i32
  %3882 = and i32 %3881, %3878
  %3883 = sext i1 %3880 to i32
  %3884 = and i32 %3883, %3874
  %select.val.1379 = or i32 %3884, %3882
  store i32 %select.val.1379, i32* %select.ptr.1378, align 4
  %3885 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3886 = sext i32 3 to i64
  %3887 = icmp slt i64 2, %3886
  %3888 = bitcast i64* %shadow to i32*
  %safe.1380 = or i1 %3807, %3887
  %select.ptr.1381 = select i1 %safe.1380, i32* %3885, i32* %3888
  %3889 = load i32, i32* %select.ptr.1381, align 4
  %3890 = shl i32 %3889, 1
  %3891 = sext i32 3 to i64
  %3892 = icmp slt i64 2, %3891
  %3893 = bitcast i64* %shadow to i32*
  %safe.1382 = or i1 %3806, %3892
  %select.ptr.1383 = select i1 %safe.1382, i32* %3885, i32* %3893
  %3894 = load i32, i32* %3885
  %3895 = sub i1 %3806, true
  %3896 = xor i1 %3895, true
  %3897 = sext i1 %3895 to i32
  %3898 = and i32 %3897, %3894
  %3899 = sext i1 %3896 to i32
  %3900 = and i32 %3899, %3890
  %select.val.1384 = or i32 %3900, %3898
  store i32 %select.val.1384, i32* %select.ptr.1383, align 4
  %3901 = load i32, i32* %0, align 4
  %3902 = and i32 %3901, 1
  %3903 = icmp ne i32 %3902, 0
  %3904 = or i1 %in.324, %3805
  store i1 %3904, i1* %out.133
  %3905 = load i1, i1* %out.133
  %in.325 = and i1 %3905, %3903
  %3906 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %3907 = sext i32 3 to i64
  %3908 = icmp slt i64 2, %3907
  %3909 = bitcast i64* %shadow to i32*
  %safe.1385 = or i1 %in.325, %3908
  %select.ptr.1386 = select i1 %safe.1385, i32* %3906, i32* %3909
  %3910 = load i32, i32* %select.ptr.1386, align 4
  %3911 = or i32 %3910, 1
  %3912 = sext i32 3 to i64
  %3913 = icmp slt i64 2, %3912
  %3914 = bitcast i64* %shadow to i32*
  %safe.1387 = or i1 %in.325, %3913
  %select.ptr.1388 = select i1 %safe.1387, i32* %3906, i32* %3914
  %3915 = load i32, i32* %3906
  %3916 = sub i1 %in.325, true
  %3917 = xor i1 %3916, true
  %3918 = sext i1 %3916 to i32
  %3919 = and i32 %3918, %3915
  %3920 = sext i1 %3917 to i32
  %3921 = and i32 %3920, %3911
  %select.val.1389 = or i32 %3921, %3919
  store i32 %select.val.1389, i32* %select.ptr.1388, align 4
  store i1 %in.325, i1* %out.134
  %3922 = load i1, i1* %out.133
  %3923 = xor i1 %3903, true
  %in.326 = and i1 %3922, %3923
  %3924 = load i1, i1* %out.134
  %3925 = or i1 %in.326, %3924
  %3926 = getelementptr inbounds i32, i32* %0, i64 1
  %3927 = icmp slt i64 1, %len.
  %3928 = bitcast i64* %shadow to i32*
  %safe.1390 = or i1 %3925, %3927
  %select.ptr.1391 = select i1 %safe.1390, i32* %3926, i32* %3928
  %3929 = load i32, i32* %select.ptr.1391, align 4
  %3930 = and i32 %3929, 1
  %3931 = icmp ne i32 %3930, 0
  %3932 = or i1 %in.326, %3924
  store i1 %3932, i1* %out.135
  %3933 = load i1, i1* %out.135
  %in.327 = and i1 %3933, %3931
  %3934 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %3935 = sext i32 3 to i64
  %3936 = icmp slt i64 1, %3935
  %3937 = bitcast i64* %shadow to i32*
  %safe.1392 = or i1 %in.327, %3936
  %select.ptr.1393 = select i1 %safe.1392, i32* %3934, i32* %3937
  %3938 = load i32, i32* %select.ptr.1393, align 4
  %3939 = or i32 %3938, 1
  %3940 = sext i32 3 to i64
  %3941 = icmp slt i64 1, %3940
  %3942 = bitcast i64* %shadow to i32*
  %safe.1394 = or i1 %in.327, %3941
  %select.ptr.1395 = select i1 %safe.1394, i32* %3934, i32* %3942
  %3943 = load i32, i32* %3934
  %3944 = sub i1 %in.327, true
  %3945 = xor i1 %3944, true
  %3946 = sext i1 %3944 to i32
  %3947 = and i32 %3946, %3943
  %3948 = sext i1 %3945 to i32
  %3949 = and i32 %3948, %3939
  %select.val.1396 = or i32 %3949, %3947
  store i32 %select.val.1396, i32* %select.ptr.1395, align 4
  store i1 %in.327, i1* %out.136
  %3950 = load i1, i1* %out.135
  %3951 = xor i1 %3931, true
  %in.328 = and i1 %3950, %3951
  %3952 = load i1, i1* %out.136
  %3953 = or i1 %in.328, %3952
  %3954 = getelementptr inbounds i32, i32* %0, i64 2
  %3955 = icmp slt i64 2, %len.
  %3956 = bitcast i64* %shadow to i32*
  %safe.1397 = or i1 %3953, %3955
  %select.ptr.1398 = select i1 %safe.1397, i32* %3954, i32* %3956
  %3957 = load i32, i32* %select.ptr.1398, align 4
  %3958 = and i32 %3957, 1
  %3959 = icmp ne i32 %3958, 0
  %3960 = or i1 %in.328, %3952
  store i1 %3960, i1* %out.137
  %3961 = load i1, i1* %out.137
  %in.329 = and i1 %3961, %3959
  %3962 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %3963 = sext i32 3 to i64
  %3964 = icmp slt i64 0, %3963
  %3965 = bitcast i64* %shadow to i32*
  %safe.1399 = or i1 %in.329, %3964
  %select.ptr.1400 = select i1 %safe.1399, i32* %3962, i32* %3965
  %3966 = load i32, i32* %select.ptr.1400, align 4
  %3967 = or i32 %3966, 1
  %3968 = sext i32 3 to i64
  %3969 = icmp slt i64 0, %3968
  %3970 = bitcast i64* %shadow to i32*
  %safe.1401 = or i1 %in.329, %3969
  %select.ptr.1402 = select i1 %safe.1401, i32* %3962, i32* %3970
  %3971 = load i32, i32* %3962
  %3972 = sub i1 %in.329, true
  %3973 = xor i1 %3972, true
  %3974 = sext i1 %3972 to i32
  %3975 = and i32 %3974, %3971
  %3976 = sext i1 %3973 to i32
  %3977 = and i32 %3976, %3967
  %select.val.1403 = or i32 %3977, %3975
  store i32 %select.val.1403, i32* %select.ptr.1402, align 4
  store i1 %in.329, i1* %out.138
  %3978 = load i1, i1* %out.137
  %3979 = xor i1 %3959, true
  %in.330 = and i1 %3978, %3979
  %3980 = load i1, i1* %out.138
  %3981 = or i1 %in.330, %3980
  %3982 = or i1 %in.330, %3980
  %3983 = or i1 %in.330, %3980
  %3984 = or i1 %in.330, %3980
  %3985 = or i1 %in.330, %3980
  %3986 = or i1 %in.330, %3980
  %3987 = or i1 %in.330, %3980
  %3988 = or i1 %in.330, %3980
  %3989 = or i1 %in.330, %3980
  %3990 = or i1 %in.330, %3980
  %3991 = or i1 %in.330, %3980
  %3992 = load i32, i32* %0, align 4
  %3993 = ashr i32 %3992, 1
  %3994 = load i32, i32* %0
  %3995 = sub i1 %3991, true
  %3996 = xor i1 %3995, true
  %3997 = sext i1 %3995 to i32
  %3998 = and i32 %3997, %3994
  %3999 = sext i1 %3996 to i32
  %4000 = and i32 %3999, %3993
  %select.val.1404 = or i32 %4000, %3998
  store i32 %select.val.1404, i32* %0, align 4
  %4001 = getelementptr inbounds i32, i32* %0, i64 1
  %4002 = icmp slt i64 1, %len.
  %4003 = bitcast i64* %shadow to i32*
  %safe.1405 = or i1 %3990, %4002
  %select.ptr.1406 = select i1 %safe.1405, i32* %4001, i32* %4003
  %4004 = load i32, i32* %select.ptr.1406, align 4
  %4005 = ashr i32 %4004, 1
  %4006 = icmp slt i64 1, %len.
  %4007 = bitcast i64* %shadow to i32*
  %safe.1407 = or i1 %3989, %4006
  %select.ptr.1408 = select i1 %safe.1407, i32* %4001, i32* %4007
  %4008 = load i32, i32* %4001
  %4009 = sub i1 %3989, true
  %4010 = xor i1 %4009, true
  %4011 = sext i1 %4009 to i32
  %4012 = and i32 %4011, %4008
  %4013 = sext i1 %4010 to i32
  %4014 = and i32 %4013, %4005
  %select.val.1409 = or i32 %4014, %4012
  store i32 %select.val.1409, i32* %select.ptr.1408, align 4
  %4015 = getelementptr inbounds i32, i32* %0, i64 2
  %4016 = icmp slt i64 2, %len.
  %4017 = bitcast i64* %shadow to i32*
  %safe.1410 = or i1 %3988, %4016
  %select.ptr.1411 = select i1 %safe.1410, i32* %4015, i32* %4017
  %4018 = load i32, i32* %select.ptr.1411, align 4
  %4019 = ashr i32 %4018, 1
  %4020 = icmp slt i64 2, %len.
  %4021 = bitcast i64* %shadow to i32*
  %safe.1412 = or i1 %3987, %4020
  %select.ptr.1413 = select i1 %safe.1412, i32* %4015, i32* %4021
  %4022 = load i32, i32* %4015
  %4023 = sub i1 %3987, true
  %4024 = xor i1 %4023, true
  %4025 = sext i1 %4023 to i32
  %4026 = and i32 %4025, %4022
  %4027 = sext i1 %4024 to i32
  %4028 = and i32 %4027, %4019
  %select.val.1414 = or i32 %4028, %4026
  store i32 %select.val.1414, i32* %select.ptr.1413, align 4
  %4029 = sext i32 3 to i64
  %4030 = icmp slt i64 0, %4029
  %4031 = bitcast i64* %shadow to i32*
  %safe.1415 = or i1 %3986, %4030
  %select.ptr.1416 = select i1 %safe.1415, i32* %6, i32* %4031
  %4032 = load i32, i32* %select.ptr.1416, align 4
  %4033 = shl i32 %4032, 1
  %4034 = sext i32 3 to i64
  %4035 = icmp slt i64 0, %4034
  %4036 = bitcast i64* %shadow to i32*
  %safe.1417 = or i1 %3985, %4035
  %select.ptr.1418 = select i1 %safe.1417, i32* %6, i32* %4036
  %4037 = load i32, i32* %6
  %4038 = sub i1 %3985, true
  %4039 = xor i1 %4038, true
  %4040 = sext i1 %4038 to i32
  %4041 = and i32 %4040, %4037
  %4042 = sext i1 %4039 to i32
  %4043 = and i32 %4042, %4033
  %select.val.1419 = or i32 %4043, %4041
  store i32 %select.val.1419, i32* %select.ptr.1418, align 4
  %4044 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4045 = sext i32 3 to i64
  %4046 = icmp slt i64 1, %4045
  %4047 = bitcast i64* %shadow to i32*
  %safe.1420 = or i1 %3984, %4046
  %select.ptr.1421 = select i1 %safe.1420, i32* %4044, i32* %4047
  %4048 = load i32, i32* %select.ptr.1421, align 4
  %4049 = shl i32 %4048, 1
  %4050 = sext i32 3 to i64
  %4051 = icmp slt i64 1, %4050
  %4052 = bitcast i64* %shadow to i32*
  %safe.1422 = or i1 %3983, %4051
  %select.ptr.1423 = select i1 %safe.1422, i32* %4044, i32* %4052
  %4053 = load i32, i32* %4044
  %4054 = sub i1 %3983, true
  %4055 = xor i1 %4054, true
  %4056 = sext i1 %4054 to i32
  %4057 = and i32 %4056, %4053
  %4058 = sext i1 %4055 to i32
  %4059 = and i32 %4058, %4049
  %select.val.1424 = or i32 %4059, %4057
  store i32 %select.val.1424, i32* %select.ptr.1423, align 4
  %4060 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4061 = sext i32 3 to i64
  %4062 = icmp slt i64 2, %4061
  %4063 = bitcast i64* %shadow to i32*
  %safe.1425 = or i1 %3982, %4062
  %select.ptr.1426 = select i1 %safe.1425, i32* %4060, i32* %4063
  %4064 = load i32, i32* %select.ptr.1426, align 4
  %4065 = shl i32 %4064, 1
  %4066 = sext i32 3 to i64
  %4067 = icmp slt i64 2, %4066
  %4068 = bitcast i64* %shadow to i32*
  %safe.1427 = or i1 %3981, %4067
  %select.ptr.1428 = select i1 %safe.1427, i32* %4060, i32* %4068
  %4069 = load i32, i32* %4060
  %4070 = sub i1 %3981, true
  %4071 = xor i1 %4070, true
  %4072 = sext i1 %4070 to i32
  %4073 = and i32 %4072, %4069
  %4074 = sext i1 %4071 to i32
  %4075 = and i32 %4074, %4065
  %select.val.1429 = or i32 %4075, %4073
  store i32 %select.val.1429, i32* %select.ptr.1428, align 4
  %4076 = load i32, i32* %0, align 4
  %4077 = and i32 %4076, 1
  %4078 = icmp ne i32 %4077, 0
  %4079 = or i1 %in.330, %3980
  store i1 %4079, i1* %out.139
  %4080 = load i1, i1* %out.139
  %in.331 = and i1 %4080, %4078
  %4081 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4082 = sext i32 3 to i64
  %4083 = icmp slt i64 2, %4082
  %4084 = bitcast i64* %shadow to i32*
  %safe.1430 = or i1 %in.331, %4083
  %select.ptr.1431 = select i1 %safe.1430, i32* %4081, i32* %4084
  %4085 = load i32, i32* %select.ptr.1431, align 4
  %4086 = or i32 %4085, 1
  %4087 = sext i32 3 to i64
  %4088 = icmp slt i64 2, %4087
  %4089 = bitcast i64* %shadow to i32*
  %safe.1432 = or i1 %in.331, %4088
  %select.ptr.1433 = select i1 %safe.1432, i32* %4081, i32* %4089
  %4090 = load i32, i32* %4081
  %4091 = sub i1 %in.331, true
  %4092 = xor i1 %4091, true
  %4093 = sext i1 %4091 to i32
  %4094 = and i32 %4093, %4090
  %4095 = sext i1 %4092 to i32
  %4096 = and i32 %4095, %4086
  %select.val.1434 = or i32 %4096, %4094
  store i32 %select.val.1434, i32* %select.ptr.1433, align 4
  store i1 %in.331, i1* %out.140
  %4097 = load i1, i1* %out.139
  %4098 = xor i1 %4078, true
  %in.332 = and i1 %4097, %4098
  %4099 = load i1, i1* %out.140
  %4100 = or i1 %in.332, %4099
  %4101 = getelementptr inbounds i32, i32* %0, i64 1
  %4102 = icmp slt i64 1, %len.
  %4103 = bitcast i64* %shadow to i32*
  %safe.1435 = or i1 %4100, %4102
  %select.ptr.1436 = select i1 %safe.1435, i32* %4101, i32* %4103
  %4104 = load i32, i32* %select.ptr.1436, align 4
  %4105 = and i32 %4104, 1
  %4106 = icmp ne i32 %4105, 0
  %4107 = or i1 %in.332, %4099
  store i1 %4107, i1* %out.141
  %4108 = load i1, i1* %out.141
  %in.333 = and i1 %4108, %4106
  %4109 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4110 = sext i32 3 to i64
  %4111 = icmp slt i64 1, %4110
  %4112 = bitcast i64* %shadow to i32*
  %safe.1437 = or i1 %in.333, %4111
  %select.ptr.1438 = select i1 %safe.1437, i32* %4109, i32* %4112
  %4113 = load i32, i32* %select.ptr.1438, align 4
  %4114 = or i32 %4113, 1
  %4115 = sext i32 3 to i64
  %4116 = icmp slt i64 1, %4115
  %4117 = bitcast i64* %shadow to i32*
  %safe.1439 = or i1 %in.333, %4116
  %select.ptr.1440 = select i1 %safe.1439, i32* %4109, i32* %4117
  %4118 = load i32, i32* %4109
  %4119 = sub i1 %in.333, true
  %4120 = xor i1 %4119, true
  %4121 = sext i1 %4119 to i32
  %4122 = and i32 %4121, %4118
  %4123 = sext i1 %4120 to i32
  %4124 = and i32 %4123, %4114
  %select.val.1441 = or i32 %4124, %4122
  store i32 %select.val.1441, i32* %select.ptr.1440, align 4
  store i1 %in.333, i1* %out.142
  %4125 = load i1, i1* %out.141
  %4126 = xor i1 %4106, true
  %in.334 = and i1 %4125, %4126
  %4127 = load i1, i1* %out.142
  %4128 = or i1 %in.334, %4127
  %4129 = getelementptr inbounds i32, i32* %0, i64 2
  %4130 = icmp slt i64 2, %len.
  %4131 = bitcast i64* %shadow to i32*
  %safe.1442 = or i1 %4128, %4130
  %select.ptr.1443 = select i1 %safe.1442, i32* %4129, i32* %4131
  %4132 = load i32, i32* %select.ptr.1443, align 4
  %4133 = and i32 %4132, 1
  %4134 = icmp ne i32 %4133, 0
  %4135 = or i1 %in.334, %4127
  store i1 %4135, i1* %out.143
  %4136 = load i1, i1* %out.143
  %in.335 = and i1 %4136, %4134
  %4137 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %4138 = sext i32 3 to i64
  %4139 = icmp slt i64 0, %4138
  %4140 = bitcast i64* %shadow to i32*
  %safe.1444 = or i1 %in.335, %4139
  %select.ptr.1445 = select i1 %safe.1444, i32* %4137, i32* %4140
  %4141 = load i32, i32* %select.ptr.1445, align 4
  %4142 = or i32 %4141, 1
  %4143 = sext i32 3 to i64
  %4144 = icmp slt i64 0, %4143
  %4145 = bitcast i64* %shadow to i32*
  %safe.1446 = or i1 %in.335, %4144
  %select.ptr.1447 = select i1 %safe.1446, i32* %4137, i32* %4145
  %4146 = load i32, i32* %4137
  %4147 = sub i1 %in.335, true
  %4148 = xor i1 %4147, true
  %4149 = sext i1 %4147 to i32
  %4150 = and i32 %4149, %4146
  %4151 = sext i1 %4148 to i32
  %4152 = and i32 %4151, %4142
  %select.val.1448 = or i32 %4152, %4150
  store i32 %select.val.1448, i32* %select.ptr.1447, align 4
  store i1 %in.335, i1* %out.144
  %4153 = load i1, i1* %out.143
  %4154 = xor i1 %4134, true
  %in.336 = and i1 %4153, %4154
  %4155 = load i1, i1* %out.144
  %4156 = or i1 %in.336, %4155
  %4157 = or i1 %in.336, %4155
  %4158 = or i1 %in.336, %4155
  %4159 = or i1 %in.336, %4155
  %4160 = or i1 %in.336, %4155
  %4161 = or i1 %in.336, %4155
  %4162 = or i1 %in.336, %4155
  %4163 = or i1 %in.336, %4155
  %4164 = or i1 %in.336, %4155
  %4165 = or i1 %in.336, %4155
  %4166 = or i1 %in.336, %4155
  %4167 = load i32, i32* %0, align 4
  %4168 = ashr i32 %4167, 1
  %4169 = load i32, i32* %0
  %4170 = sub i1 %4166, true
  %4171 = xor i1 %4170, true
  %4172 = sext i1 %4170 to i32
  %4173 = and i32 %4172, %4169
  %4174 = sext i1 %4171 to i32
  %4175 = and i32 %4174, %4168
  %select.val.1449 = or i32 %4175, %4173
  store i32 %select.val.1449, i32* %0, align 4
  %4176 = getelementptr inbounds i32, i32* %0, i64 1
  %4177 = icmp slt i64 1, %len.
  %4178 = bitcast i64* %shadow to i32*
  %safe.1450 = or i1 %4165, %4177
  %select.ptr.1451 = select i1 %safe.1450, i32* %4176, i32* %4178
  %4179 = load i32, i32* %select.ptr.1451, align 4
  %4180 = ashr i32 %4179, 1
  %4181 = icmp slt i64 1, %len.
  %4182 = bitcast i64* %shadow to i32*
  %safe.1452 = or i1 %4164, %4181
  %select.ptr.1453 = select i1 %safe.1452, i32* %4176, i32* %4182
  %4183 = load i32, i32* %4176
  %4184 = sub i1 %4164, true
  %4185 = xor i1 %4184, true
  %4186 = sext i1 %4184 to i32
  %4187 = and i32 %4186, %4183
  %4188 = sext i1 %4185 to i32
  %4189 = and i32 %4188, %4180
  %select.val.1454 = or i32 %4189, %4187
  store i32 %select.val.1454, i32* %select.ptr.1453, align 4
  %4190 = getelementptr inbounds i32, i32* %0, i64 2
  %4191 = icmp slt i64 2, %len.
  %4192 = bitcast i64* %shadow to i32*
  %safe.1455 = or i1 %4163, %4191
  %select.ptr.1456 = select i1 %safe.1455, i32* %4190, i32* %4192
  %4193 = load i32, i32* %select.ptr.1456, align 4
  %4194 = ashr i32 %4193, 1
  %4195 = icmp slt i64 2, %len.
  %4196 = bitcast i64* %shadow to i32*
  %safe.1457 = or i1 %4162, %4195
  %select.ptr.1458 = select i1 %safe.1457, i32* %4190, i32* %4196
  %4197 = load i32, i32* %4190
  %4198 = sub i1 %4162, true
  %4199 = xor i1 %4198, true
  %4200 = sext i1 %4198 to i32
  %4201 = and i32 %4200, %4197
  %4202 = sext i1 %4199 to i32
  %4203 = and i32 %4202, %4194
  %select.val.1459 = or i32 %4203, %4201
  store i32 %select.val.1459, i32* %select.ptr.1458, align 4
  %4204 = sext i32 3 to i64
  %4205 = icmp slt i64 0, %4204
  %4206 = bitcast i64* %shadow to i32*
  %safe.1460 = or i1 %4161, %4205
  %select.ptr.1461 = select i1 %safe.1460, i32* %6, i32* %4206
  %4207 = load i32, i32* %select.ptr.1461, align 4
  %4208 = shl i32 %4207, 1
  %4209 = sext i32 3 to i64
  %4210 = icmp slt i64 0, %4209
  %4211 = bitcast i64* %shadow to i32*
  %safe.1462 = or i1 %4160, %4210
  %select.ptr.1463 = select i1 %safe.1462, i32* %6, i32* %4211
  %4212 = load i32, i32* %6
  %4213 = sub i1 %4160, true
  %4214 = xor i1 %4213, true
  %4215 = sext i1 %4213 to i32
  %4216 = and i32 %4215, %4212
  %4217 = sext i1 %4214 to i32
  %4218 = and i32 %4217, %4208
  %select.val.1464 = or i32 %4218, %4216
  store i32 %select.val.1464, i32* %select.ptr.1463, align 4
  %4219 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4220 = sext i32 3 to i64
  %4221 = icmp slt i64 1, %4220
  %4222 = bitcast i64* %shadow to i32*
  %safe.1465 = or i1 %4159, %4221
  %select.ptr.1466 = select i1 %safe.1465, i32* %4219, i32* %4222
  %4223 = load i32, i32* %select.ptr.1466, align 4
  %4224 = shl i32 %4223, 1
  %4225 = sext i32 3 to i64
  %4226 = icmp slt i64 1, %4225
  %4227 = bitcast i64* %shadow to i32*
  %safe.1467 = or i1 %4158, %4226
  %select.ptr.1468 = select i1 %safe.1467, i32* %4219, i32* %4227
  %4228 = load i32, i32* %4219
  %4229 = sub i1 %4158, true
  %4230 = xor i1 %4229, true
  %4231 = sext i1 %4229 to i32
  %4232 = and i32 %4231, %4228
  %4233 = sext i1 %4230 to i32
  %4234 = and i32 %4233, %4224
  %select.val.1469 = or i32 %4234, %4232
  store i32 %select.val.1469, i32* %select.ptr.1468, align 4
  %4235 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4236 = sext i32 3 to i64
  %4237 = icmp slt i64 2, %4236
  %4238 = bitcast i64* %shadow to i32*
  %safe.1470 = or i1 %4157, %4237
  %select.ptr.1471 = select i1 %safe.1470, i32* %4235, i32* %4238
  %4239 = load i32, i32* %select.ptr.1471, align 4
  %4240 = shl i32 %4239, 1
  %4241 = sext i32 3 to i64
  %4242 = icmp slt i64 2, %4241
  %4243 = bitcast i64* %shadow to i32*
  %safe.1472 = or i1 %4156, %4242
  %select.ptr.1473 = select i1 %safe.1472, i32* %4235, i32* %4243
  %4244 = load i32, i32* %4235
  %4245 = sub i1 %4156, true
  %4246 = xor i1 %4245, true
  %4247 = sext i1 %4245 to i32
  %4248 = and i32 %4247, %4244
  %4249 = sext i1 %4246 to i32
  %4250 = and i32 %4249, %4240
  %select.val.1474 = or i32 %4250, %4248
  store i32 %select.val.1474, i32* %select.ptr.1473, align 4
  %4251 = load i32, i32* %0, align 4
  %4252 = and i32 %4251, 1
  %4253 = icmp ne i32 %4252, 0
  %4254 = or i1 %in.336, %4155
  store i1 %4254, i1* %out.145
  %4255 = load i1, i1* %out.145
  %in.337 = and i1 %4255, %4253
  %4256 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4257 = sext i32 3 to i64
  %4258 = icmp slt i64 2, %4257
  %4259 = bitcast i64* %shadow to i32*
  %safe.1475 = or i1 %in.337, %4258
  %select.ptr.1476 = select i1 %safe.1475, i32* %4256, i32* %4259
  %4260 = load i32, i32* %select.ptr.1476, align 4
  %4261 = or i32 %4260, 1
  %4262 = sext i32 3 to i64
  %4263 = icmp slt i64 2, %4262
  %4264 = bitcast i64* %shadow to i32*
  %safe.1477 = or i1 %in.337, %4263
  %select.ptr.1478 = select i1 %safe.1477, i32* %4256, i32* %4264
  %4265 = load i32, i32* %4256
  %4266 = sub i1 %in.337, true
  %4267 = xor i1 %4266, true
  %4268 = sext i1 %4266 to i32
  %4269 = and i32 %4268, %4265
  %4270 = sext i1 %4267 to i32
  %4271 = and i32 %4270, %4261
  %select.val.1479 = or i32 %4271, %4269
  store i32 %select.val.1479, i32* %select.ptr.1478, align 4
  store i1 %in.337, i1* %out.146
  %4272 = load i1, i1* %out.145
  %4273 = xor i1 %4253, true
  %in.338 = and i1 %4272, %4273
  %4274 = load i1, i1* %out.146
  %4275 = or i1 %in.338, %4274
  %4276 = getelementptr inbounds i32, i32* %0, i64 1
  %4277 = icmp slt i64 1, %len.
  %4278 = bitcast i64* %shadow to i32*
  %safe.1480 = or i1 %4275, %4277
  %select.ptr.1481 = select i1 %safe.1480, i32* %4276, i32* %4278
  %4279 = load i32, i32* %select.ptr.1481, align 4
  %4280 = and i32 %4279, 1
  %4281 = icmp ne i32 %4280, 0
  %4282 = or i1 %in.338, %4274
  store i1 %4282, i1* %out.147
  %4283 = load i1, i1* %out.147
  %in.339 = and i1 %4283, %4281
  %4284 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4285 = sext i32 3 to i64
  %4286 = icmp slt i64 1, %4285
  %4287 = bitcast i64* %shadow to i32*
  %safe.1482 = or i1 %in.339, %4286
  %select.ptr.1483 = select i1 %safe.1482, i32* %4284, i32* %4287
  %4288 = load i32, i32* %select.ptr.1483, align 4
  %4289 = or i32 %4288, 1
  %4290 = sext i32 3 to i64
  %4291 = icmp slt i64 1, %4290
  %4292 = bitcast i64* %shadow to i32*
  %safe.1484 = or i1 %in.339, %4291
  %select.ptr.1485 = select i1 %safe.1484, i32* %4284, i32* %4292
  %4293 = load i32, i32* %4284
  %4294 = sub i1 %in.339, true
  %4295 = xor i1 %4294, true
  %4296 = sext i1 %4294 to i32
  %4297 = and i32 %4296, %4293
  %4298 = sext i1 %4295 to i32
  %4299 = and i32 %4298, %4289
  %select.val.1486 = or i32 %4299, %4297
  store i32 %select.val.1486, i32* %select.ptr.1485, align 4
  store i1 %in.339, i1* %out.148
  %4300 = load i1, i1* %out.147
  %4301 = xor i1 %4281, true
  %in.340 = and i1 %4300, %4301
  %4302 = load i1, i1* %out.148
  %4303 = or i1 %in.340, %4302
  %4304 = getelementptr inbounds i32, i32* %0, i64 2
  %4305 = icmp slt i64 2, %len.
  %4306 = bitcast i64* %shadow to i32*
  %safe.1487 = or i1 %4303, %4305
  %select.ptr.1488 = select i1 %safe.1487, i32* %4304, i32* %4306
  %4307 = load i32, i32* %select.ptr.1488, align 4
  %4308 = and i32 %4307, 1
  %4309 = icmp ne i32 %4308, 0
  %4310 = or i1 %in.340, %4302
  store i1 %4310, i1* %out.149
  %4311 = load i1, i1* %out.149
  %in.341 = and i1 %4311, %4309
  %4312 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %4313 = sext i32 3 to i64
  %4314 = icmp slt i64 0, %4313
  %4315 = bitcast i64* %shadow to i32*
  %safe.1489 = or i1 %in.341, %4314
  %select.ptr.1490 = select i1 %safe.1489, i32* %4312, i32* %4315
  %4316 = load i32, i32* %select.ptr.1490, align 4
  %4317 = or i32 %4316, 1
  %4318 = sext i32 3 to i64
  %4319 = icmp slt i64 0, %4318
  %4320 = bitcast i64* %shadow to i32*
  %safe.1491 = or i1 %in.341, %4319
  %select.ptr.1492 = select i1 %safe.1491, i32* %4312, i32* %4320
  %4321 = load i32, i32* %4312
  %4322 = sub i1 %in.341, true
  %4323 = xor i1 %4322, true
  %4324 = sext i1 %4322 to i32
  %4325 = and i32 %4324, %4321
  %4326 = sext i1 %4323 to i32
  %4327 = and i32 %4326, %4317
  %select.val.1493 = or i32 %4327, %4325
  store i32 %select.val.1493, i32* %select.ptr.1492, align 4
  store i1 %in.341, i1* %out.150
  %4328 = load i1, i1* %out.149
  %4329 = xor i1 %4309, true
  %in.342 = and i1 %4328, %4329
  %4330 = load i1, i1* %out.150
  %4331 = or i1 %in.342, %4330
  %4332 = or i1 %in.342, %4330
  %4333 = or i1 %in.342, %4330
  %4334 = or i1 %in.342, %4330
  %4335 = or i1 %in.342, %4330
  %4336 = or i1 %in.342, %4330
  %4337 = or i1 %in.342, %4330
  %4338 = or i1 %in.342, %4330
  %4339 = or i1 %in.342, %4330
  %4340 = or i1 %in.342, %4330
  %4341 = or i1 %in.342, %4330
  %4342 = load i32, i32* %0, align 4
  %4343 = ashr i32 %4342, 1
  %4344 = load i32, i32* %0
  %4345 = sub i1 %4341, true
  %4346 = xor i1 %4345, true
  %4347 = sext i1 %4345 to i32
  %4348 = and i32 %4347, %4344
  %4349 = sext i1 %4346 to i32
  %4350 = and i32 %4349, %4343
  %select.val.1494 = or i32 %4350, %4348
  store i32 %select.val.1494, i32* %0, align 4
  %4351 = getelementptr inbounds i32, i32* %0, i64 1
  %4352 = icmp slt i64 1, %len.
  %4353 = bitcast i64* %shadow to i32*
  %safe.1495 = or i1 %4340, %4352
  %select.ptr.1496 = select i1 %safe.1495, i32* %4351, i32* %4353
  %4354 = load i32, i32* %select.ptr.1496, align 4
  %4355 = ashr i32 %4354, 1
  %4356 = icmp slt i64 1, %len.
  %4357 = bitcast i64* %shadow to i32*
  %safe.1497 = or i1 %4339, %4356
  %select.ptr.1498 = select i1 %safe.1497, i32* %4351, i32* %4357
  %4358 = load i32, i32* %4351
  %4359 = sub i1 %4339, true
  %4360 = xor i1 %4359, true
  %4361 = sext i1 %4359 to i32
  %4362 = and i32 %4361, %4358
  %4363 = sext i1 %4360 to i32
  %4364 = and i32 %4363, %4355
  %select.val.1499 = or i32 %4364, %4362
  store i32 %select.val.1499, i32* %select.ptr.1498, align 4
  %4365 = getelementptr inbounds i32, i32* %0, i64 2
  %4366 = icmp slt i64 2, %len.
  %4367 = bitcast i64* %shadow to i32*
  %safe.1500 = or i1 %4338, %4366
  %select.ptr.1501 = select i1 %safe.1500, i32* %4365, i32* %4367
  %4368 = load i32, i32* %select.ptr.1501, align 4
  %4369 = ashr i32 %4368, 1
  %4370 = icmp slt i64 2, %len.
  %4371 = bitcast i64* %shadow to i32*
  %safe.1502 = or i1 %4337, %4370
  %select.ptr.1503 = select i1 %safe.1502, i32* %4365, i32* %4371
  %4372 = load i32, i32* %4365
  %4373 = sub i1 %4337, true
  %4374 = xor i1 %4373, true
  %4375 = sext i1 %4373 to i32
  %4376 = and i32 %4375, %4372
  %4377 = sext i1 %4374 to i32
  %4378 = and i32 %4377, %4369
  %select.val.1504 = or i32 %4378, %4376
  store i32 %select.val.1504, i32* %select.ptr.1503, align 4
  %4379 = sext i32 3 to i64
  %4380 = icmp slt i64 0, %4379
  %4381 = bitcast i64* %shadow to i32*
  %safe.1505 = or i1 %4336, %4380
  %select.ptr.1506 = select i1 %safe.1505, i32* %6, i32* %4381
  %4382 = load i32, i32* %select.ptr.1506, align 4
  %4383 = shl i32 %4382, 1
  %4384 = sext i32 3 to i64
  %4385 = icmp slt i64 0, %4384
  %4386 = bitcast i64* %shadow to i32*
  %safe.1507 = or i1 %4335, %4385
  %select.ptr.1508 = select i1 %safe.1507, i32* %6, i32* %4386
  %4387 = load i32, i32* %6
  %4388 = sub i1 %4335, true
  %4389 = xor i1 %4388, true
  %4390 = sext i1 %4388 to i32
  %4391 = and i32 %4390, %4387
  %4392 = sext i1 %4389 to i32
  %4393 = and i32 %4392, %4383
  %select.val.1509 = or i32 %4393, %4391
  store i32 %select.val.1509, i32* %select.ptr.1508, align 4
  %4394 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4395 = sext i32 3 to i64
  %4396 = icmp slt i64 1, %4395
  %4397 = bitcast i64* %shadow to i32*
  %safe.1510 = or i1 %4334, %4396
  %select.ptr.1511 = select i1 %safe.1510, i32* %4394, i32* %4397
  %4398 = load i32, i32* %select.ptr.1511, align 4
  %4399 = shl i32 %4398, 1
  %4400 = sext i32 3 to i64
  %4401 = icmp slt i64 1, %4400
  %4402 = bitcast i64* %shadow to i32*
  %safe.1512 = or i1 %4333, %4401
  %select.ptr.1513 = select i1 %safe.1512, i32* %4394, i32* %4402
  %4403 = load i32, i32* %4394
  %4404 = sub i1 %4333, true
  %4405 = xor i1 %4404, true
  %4406 = sext i1 %4404 to i32
  %4407 = and i32 %4406, %4403
  %4408 = sext i1 %4405 to i32
  %4409 = and i32 %4408, %4399
  %select.val.1514 = or i32 %4409, %4407
  store i32 %select.val.1514, i32* %select.ptr.1513, align 4
  %4410 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4411 = sext i32 3 to i64
  %4412 = icmp slt i64 2, %4411
  %4413 = bitcast i64* %shadow to i32*
  %safe.1515 = or i1 %4332, %4412
  %select.ptr.1516 = select i1 %safe.1515, i32* %4410, i32* %4413
  %4414 = load i32, i32* %select.ptr.1516, align 4
  %4415 = shl i32 %4414, 1
  %4416 = sext i32 3 to i64
  %4417 = icmp slt i64 2, %4416
  %4418 = bitcast i64* %shadow to i32*
  %safe.1517 = or i1 %4331, %4417
  %select.ptr.1518 = select i1 %safe.1517, i32* %4410, i32* %4418
  %4419 = load i32, i32* %4410
  %4420 = sub i1 %4331, true
  %4421 = xor i1 %4420, true
  %4422 = sext i1 %4420 to i32
  %4423 = and i32 %4422, %4419
  %4424 = sext i1 %4421 to i32
  %4425 = and i32 %4424, %4415
  %select.val.1519 = or i32 %4425, %4423
  store i32 %select.val.1519, i32* %select.ptr.1518, align 4
  %4426 = load i32, i32* %0, align 4
  %4427 = and i32 %4426, 1
  %4428 = icmp ne i32 %4427, 0
  %4429 = or i1 %in.342, %4330
  store i1 %4429, i1* %out.151
  %4430 = load i1, i1* %out.151
  %in.343 = and i1 %4430, %4428
  %4431 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4432 = sext i32 3 to i64
  %4433 = icmp slt i64 2, %4432
  %4434 = bitcast i64* %shadow to i32*
  %safe.1520 = or i1 %in.343, %4433
  %select.ptr.1521 = select i1 %safe.1520, i32* %4431, i32* %4434
  %4435 = load i32, i32* %select.ptr.1521, align 4
  %4436 = or i32 %4435, 1
  %4437 = sext i32 3 to i64
  %4438 = icmp slt i64 2, %4437
  %4439 = bitcast i64* %shadow to i32*
  %safe.1522 = or i1 %in.343, %4438
  %select.ptr.1523 = select i1 %safe.1522, i32* %4431, i32* %4439
  %4440 = load i32, i32* %4431
  %4441 = sub i1 %in.343, true
  %4442 = xor i1 %4441, true
  %4443 = sext i1 %4441 to i32
  %4444 = and i32 %4443, %4440
  %4445 = sext i1 %4442 to i32
  %4446 = and i32 %4445, %4436
  %select.val.1524 = or i32 %4446, %4444
  store i32 %select.val.1524, i32* %select.ptr.1523, align 4
  store i1 %in.343, i1* %out.152
  %4447 = load i1, i1* %out.151
  %4448 = xor i1 %4428, true
  %in.344 = and i1 %4447, %4448
  %4449 = load i1, i1* %out.152
  %4450 = or i1 %in.344, %4449
  %4451 = getelementptr inbounds i32, i32* %0, i64 1
  %4452 = icmp slt i64 1, %len.
  %4453 = bitcast i64* %shadow to i32*
  %safe.1525 = or i1 %4450, %4452
  %select.ptr.1526 = select i1 %safe.1525, i32* %4451, i32* %4453
  %4454 = load i32, i32* %select.ptr.1526, align 4
  %4455 = and i32 %4454, 1
  %4456 = icmp ne i32 %4455, 0
  %4457 = or i1 %in.344, %4449
  store i1 %4457, i1* %out.153
  %4458 = load i1, i1* %out.153
  %in.345 = and i1 %4458, %4456
  %4459 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4460 = sext i32 3 to i64
  %4461 = icmp slt i64 1, %4460
  %4462 = bitcast i64* %shadow to i32*
  %safe.1527 = or i1 %in.345, %4461
  %select.ptr.1528 = select i1 %safe.1527, i32* %4459, i32* %4462
  %4463 = load i32, i32* %select.ptr.1528, align 4
  %4464 = or i32 %4463, 1
  %4465 = sext i32 3 to i64
  %4466 = icmp slt i64 1, %4465
  %4467 = bitcast i64* %shadow to i32*
  %safe.1529 = or i1 %in.345, %4466
  %select.ptr.1530 = select i1 %safe.1529, i32* %4459, i32* %4467
  %4468 = load i32, i32* %4459
  %4469 = sub i1 %in.345, true
  %4470 = xor i1 %4469, true
  %4471 = sext i1 %4469 to i32
  %4472 = and i32 %4471, %4468
  %4473 = sext i1 %4470 to i32
  %4474 = and i32 %4473, %4464
  %select.val.1531 = or i32 %4474, %4472
  store i32 %select.val.1531, i32* %select.ptr.1530, align 4
  store i1 %in.345, i1* %out.154
  %4475 = load i1, i1* %out.153
  %4476 = xor i1 %4456, true
  %in.346 = and i1 %4475, %4476
  %4477 = load i1, i1* %out.154
  %4478 = or i1 %in.346, %4477
  %4479 = getelementptr inbounds i32, i32* %0, i64 2
  %4480 = icmp slt i64 2, %len.
  %4481 = bitcast i64* %shadow to i32*
  %safe.1532 = or i1 %4478, %4480
  %select.ptr.1533 = select i1 %safe.1532, i32* %4479, i32* %4481
  %4482 = load i32, i32* %select.ptr.1533, align 4
  %4483 = and i32 %4482, 1
  %4484 = icmp ne i32 %4483, 0
  %4485 = or i1 %in.346, %4477
  store i1 %4485, i1* %out.155
  %4486 = load i1, i1* %out.155
  %in.347 = and i1 %4486, %4484
  %4487 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %4488 = sext i32 3 to i64
  %4489 = icmp slt i64 0, %4488
  %4490 = bitcast i64* %shadow to i32*
  %safe.1534 = or i1 %in.347, %4489
  %select.ptr.1535 = select i1 %safe.1534, i32* %4487, i32* %4490
  %4491 = load i32, i32* %select.ptr.1535, align 4
  %4492 = or i32 %4491, 1
  %4493 = sext i32 3 to i64
  %4494 = icmp slt i64 0, %4493
  %4495 = bitcast i64* %shadow to i32*
  %safe.1536 = or i1 %in.347, %4494
  %select.ptr.1537 = select i1 %safe.1536, i32* %4487, i32* %4495
  %4496 = load i32, i32* %4487
  %4497 = sub i1 %in.347, true
  %4498 = xor i1 %4497, true
  %4499 = sext i1 %4497 to i32
  %4500 = and i32 %4499, %4496
  %4501 = sext i1 %4498 to i32
  %4502 = and i32 %4501, %4492
  %select.val.1538 = or i32 %4502, %4500
  store i32 %select.val.1538, i32* %select.ptr.1537, align 4
  store i1 %in.347, i1* %out.156
  %4503 = load i1, i1* %out.155
  %4504 = xor i1 %4484, true
  %in.348 = and i1 %4503, %4504
  %4505 = load i1, i1* %out.156
  %4506 = or i1 %in.348, %4505
  %4507 = or i1 %in.348, %4505
  %4508 = or i1 %in.348, %4505
  %4509 = or i1 %in.348, %4505
  %4510 = or i1 %in.348, %4505
  %4511 = or i1 %in.348, %4505
  %4512 = or i1 %in.348, %4505
  %4513 = or i1 %in.348, %4505
  %4514 = or i1 %in.348, %4505
  %4515 = or i1 %in.348, %4505
  %4516 = or i1 %in.348, %4505
  %4517 = load i32, i32* %0, align 4
  %4518 = ashr i32 %4517, 1
  %4519 = load i32, i32* %0
  %4520 = sub i1 %4516, true
  %4521 = xor i1 %4520, true
  %4522 = sext i1 %4520 to i32
  %4523 = and i32 %4522, %4519
  %4524 = sext i1 %4521 to i32
  %4525 = and i32 %4524, %4518
  %select.val.1539 = or i32 %4525, %4523
  store i32 %select.val.1539, i32* %0, align 4
  %4526 = getelementptr inbounds i32, i32* %0, i64 1
  %4527 = icmp slt i64 1, %len.
  %4528 = bitcast i64* %shadow to i32*
  %safe.1540 = or i1 %4515, %4527
  %select.ptr.1541 = select i1 %safe.1540, i32* %4526, i32* %4528
  %4529 = load i32, i32* %select.ptr.1541, align 4
  %4530 = ashr i32 %4529, 1
  %4531 = icmp slt i64 1, %len.
  %4532 = bitcast i64* %shadow to i32*
  %safe.1542 = or i1 %4514, %4531
  %select.ptr.1543 = select i1 %safe.1542, i32* %4526, i32* %4532
  %4533 = load i32, i32* %4526
  %4534 = sub i1 %4514, true
  %4535 = xor i1 %4534, true
  %4536 = sext i1 %4534 to i32
  %4537 = and i32 %4536, %4533
  %4538 = sext i1 %4535 to i32
  %4539 = and i32 %4538, %4530
  %select.val.1544 = or i32 %4539, %4537
  store i32 %select.val.1544, i32* %select.ptr.1543, align 4
  %4540 = getelementptr inbounds i32, i32* %0, i64 2
  %4541 = icmp slt i64 2, %len.
  %4542 = bitcast i64* %shadow to i32*
  %safe.1545 = or i1 %4513, %4541
  %select.ptr.1546 = select i1 %safe.1545, i32* %4540, i32* %4542
  %4543 = load i32, i32* %select.ptr.1546, align 4
  %4544 = ashr i32 %4543, 1
  %4545 = icmp slt i64 2, %len.
  %4546 = bitcast i64* %shadow to i32*
  %safe.1547 = or i1 %4512, %4545
  %select.ptr.1548 = select i1 %safe.1547, i32* %4540, i32* %4546
  %4547 = load i32, i32* %4540
  %4548 = sub i1 %4512, true
  %4549 = xor i1 %4548, true
  %4550 = sext i1 %4548 to i32
  %4551 = and i32 %4550, %4547
  %4552 = sext i1 %4549 to i32
  %4553 = and i32 %4552, %4544
  %select.val.1549 = or i32 %4553, %4551
  store i32 %select.val.1549, i32* %select.ptr.1548, align 4
  %4554 = sext i32 3 to i64
  %4555 = icmp slt i64 0, %4554
  %4556 = bitcast i64* %shadow to i32*
  %safe.1550 = or i1 %4511, %4555
  %select.ptr.1551 = select i1 %safe.1550, i32* %6, i32* %4556
  %4557 = load i32, i32* %select.ptr.1551, align 4
  %4558 = shl i32 %4557, 1
  %4559 = sext i32 3 to i64
  %4560 = icmp slt i64 0, %4559
  %4561 = bitcast i64* %shadow to i32*
  %safe.1552 = or i1 %4510, %4560
  %select.ptr.1553 = select i1 %safe.1552, i32* %6, i32* %4561
  %4562 = load i32, i32* %6
  %4563 = sub i1 %4510, true
  %4564 = xor i1 %4563, true
  %4565 = sext i1 %4563 to i32
  %4566 = and i32 %4565, %4562
  %4567 = sext i1 %4564 to i32
  %4568 = and i32 %4567, %4558
  %select.val.1554 = or i32 %4568, %4566
  store i32 %select.val.1554, i32* %select.ptr.1553, align 4
  %4569 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4570 = sext i32 3 to i64
  %4571 = icmp slt i64 1, %4570
  %4572 = bitcast i64* %shadow to i32*
  %safe.1555 = or i1 %4509, %4571
  %select.ptr.1556 = select i1 %safe.1555, i32* %4569, i32* %4572
  %4573 = load i32, i32* %select.ptr.1556, align 4
  %4574 = shl i32 %4573, 1
  %4575 = sext i32 3 to i64
  %4576 = icmp slt i64 1, %4575
  %4577 = bitcast i64* %shadow to i32*
  %safe.1557 = or i1 %4508, %4576
  %select.ptr.1558 = select i1 %safe.1557, i32* %4569, i32* %4577
  %4578 = load i32, i32* %4569
  %4579 = sub i1 %4508, true
  %4580 = xor i1 %4579, true
  %4581 = sext i1 %4579 to i32
  %4582 = and i32 %4581, %4578
  %4583 = sext i1 %4580 to i32
  %4584 = and i32 %4583, %4574
  %select.val.1559 = or i32 %4584, %4582
  store i32 %select.val.1559, i32* %select.ptr.1558, align 4
  %4585 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4586 = sext i32 3 to i64
  %4587 = icmp slt i64 2, %4586
  %4588 = bitcast i64* %shadow to i32*
  %safe.1560 = or i1 %4507, %4587
  %select.ptr.1561 = select i1 %safe.1560, i32* %4585, i32* %4588
  %4589 = load i32, i32* %select.ptr.1561, align 4
  %4590 = shl i32 %4589, 1
  %4591 = sext i32 3 to i64
  %4592 = icmp slt i64 2, %4591
  %4593 = bitcast i64* %shadow to i32*
  %safe.1562 = or i1 %4506, %4592
  %select.ptr.1563 = select i1 %safe.1562, i32* %4585, i32* %4593
  %4594 = load i32, i32* %4585
  %4595 = sub i1 %4506, true
  %4596 = xor i1 %4595, true
  %4597 = sext i1 %4595 to i32
  %4598 = and i32 %4597, %4594
  %4599 = sext i1 %4596 to i32
  %4600 = and i32 %4599, %4590
  %select.val.1564 = or i32 %4600, %4598
  store i32 %select.val.1564, i32* %select.ptr.1563, align 4
  %4601 = load i32, i32* %0, align 4
  %4602 = and i32 %4601, 1
  %4603 = icmp ne i32 %4602, 0
  %4604 = or i1 %in.348, %4505
  store i1 %4604, i1* %out.157
  %4605 = load i1, i1* %out.157
  %in.349 = and i1 %4605, %4603
  %4606 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4607 = sext i32 3 to i64
  %4608 = icmp slt i64 2, %4607
  %4609 = bitcast i64* %shadow to i32*
  %safe.1565 = or i1 %in.349, %4608
  %select.ptr.1566 = select i1 %safe.1565, i32* %4606, i32* %4609
  %4610 = load i32, i32* %select.ptr.1566, align 4
  %4611 = or i32 %4610, 1
  %4612 = sext i32 3 to i64
  %4613 = icmp slt i64 2, %4612
  %4614 = bitcast i64* %shadow to i32*
  %safe.1567 = or i1 %in.349, %4613
  %select.ptr.1568 = select i1 %safe.1567, i32* %4606, i32* %4614
  %4615 = load i32, i32* %4606
  %4616 = sub i1 %in.349, true
  %4617 = xor i1 %4616, true
  %4618 = sext i1 %4616 to i32
  %4619 = and i32 %4618, %4615
  %4620 = sext i1 %4617 to i32
  %4621 = and i32 %4620, %4611
  %select.val.1569 = or i32 %4621, %4619
  store i32 %select.val.1569, i32* %select.ptr.1568, align 4
  store i1 %in.349, i1* %out.158
  %4622 = load i1, i1* %out.157
  %4623 = xor i1 %4603, true
  %in.350 = and i1 %4622, %4623
  %4624 = load i1, i1* %out.158
  %4625 = or i1 %in.350, %4624
  %4626 = getelementptr inbounds i32, i32* %0, i64 1
  %4627 = icmp slt i64 1, %len.
  %4628 = bitcast i64* %shadow to i32*
  %safe.1570 = or i1 %4625, %4627
  %select.ptr.1571 = select i1 %safe.1570, i32* %4626, i32* %4628
  %4629 = load i32, i32* %select.ptr.1571, align 4
  %4630 = and i32 %4629, 1
  %4631 = icmp ne i32 %4630, 0
  %4632 = or i1 %in.350, %4624
  store i1 %4632, i1* %out.159
  %4633 = load i1, i1* %out.159
  %in.351 = and i1 %4633, %4631
  %4634 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4635 = sext i32 3 to i64
  %4636 = icmp slt i64 1, %4635
  %4637 = bitcast i64* %shadow to i32*
  %safe.1572 = or i1 %in.351, %4636
  %select.ptr.1573 = select i1 %safe.1572, i32* %4634, i32* %4637
  %4638 = load i32, i32* %select.ptr.1573, align 4
  %4639 = or i32 %4638, 1
  %4640 = sext i32 3 to i64
  %4641 = icmp slt i64 1, %4640
  %4642 = bitcast i64* %shadow to i32*
  %safe.1574 = or i1 %in.351, %4641
  %select.ptr.1575 = select i1 %safe.1574, i32* %4634, i32* %4642
  %4643 = load i32, i32* %4634
  %4644 = sub i1 %in.351, true
  %4645 = xor i1 %4644, true
  %4646 = sext i1 %4644 to i32
  %4647 = and i32 %4646, %4643
  %4648 = sext i1 %4645 to i32
  %4649 = and i32 %4648, %4639
  %select.val.1576 = or i32 %4649, %4647
  store i32 %select.val.1576, i32* %select.ptr.1575, align 4
  store i1 %in.351, i1* %out.160
  %4650 = load i1, i1* %out.159
  %4651 = xor i1 %4631, true
  %in.352 = and i1 %4650, %4651
  %4652 = load i1, i1* %out.160
  %4653 = or i1 %in.352, %4652
  %4654 = getelementptr inbounds i32, i32* %0, i64 2
  %4655 = icmp slt i64 2, %len.
  %4656 = bitcast i64* %shadow to i32*
  %safe.1577 = or i1 %4653, %4655
  %select.ptr.1578 = select i1 %safe.1577, i32* %4654, i32* %4656
  %4657 = load i32, i32* %select.ptr.1578, align 4
  %4658 = and i32 %4657, 1
  %4659 = icmp ne i32 %4658, 0
  %4660 = or i1 %in.352, %4652
  store i1 %4660, i1* %out.161
  %4661 = load i1, i1* %out.161
  %in.353 = and i1 %4661, %4659
  %4662 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %4663 = sext i32 3 to i64
  %4664 = icmp slt i64 0, %4663
  %4665 = bitcast i64* %shadow to i32*
  %safe.1579 = or i1 %in.353, %4664
  %select.ptr.1580 = select i1 %safe.1579, i32* %4662, i32* %4665
  %4666 = load i32, i32* %select.ptr.1580, align 4
  %4667 = or i32 %4666, 1
  %4668 = sext i32 3 to i64
  %4669 = icmp slt i64 0, %4668
  %4670 = bitcast i64* %shadow to i32*
  %safe.1581 = or i1 %in.353, %4669
  %select.ptr.1582 = select i1 %safe.1581, i32* %4662, i32* %4670
  %4671 = load i32, i32* %4662
  %4672 = sub i1 %in.353, true
  %4673 = xor i1 %4672, true
  %4674 = sext i1 %4672 to i32
  %4675 = and i32 %4674, %4671
  %4676 = sext i1 %4673 to i32
  %4677 = and i32 %4676, %4667
  %select.val.1583 = or i32 %4677, %4675
  store i32 %select.val.1583, i32* %select.ptr.1582, align 4
  store i1 %in.353, i1* %out.162
  %4678 = load i1, i1* %out.161
  %4679 = xor i1 %4659, true
  %in.354 = and i1 %4678, %4679
  %4680 = load i1, i1* %out.162
  %4681 = or i1 %in.354, %4680
  %4682 = or i1 %in.354, %4680
  %4683 = or i1 %in.354, %4680
  %4684 = or i1 %in.354, %4680
  %4685 = or i1 %in.354, %4680
  %4686 = or i1 %in.354, %4680
  %4687 = or i1 %in.354, %4680
  %4688 = or i1 %in.354, %4680
  %4689 = or i1 %in.354, %4680
  %4690 = or i1 %in.354, %4680
  %4691 = or i1 %in.354, %4680
  %4692 = load i32, i32* %0, align 4
  %4693 = ashr i32 %4692, 1
  %4694 = load i32, i32* %0
  %4695 = sub i1 %4691, true
  %4696 = xor i1 %4695, true
  %4697 = sext i1 %4695 to i32
  %4698 = and i32 %4697, %4694
  %4699 = sext i1 %4696 to i32
  %4700 = and i32 %4699, %4693
  %select.val.1584 = or i32 %4700, %4698
  store i32 %select.val.1584, i32* %0, align 4
  %4701 = getelementptr inbounds i32, i32* %0, i64 1
  %4702 = icmp slt i64 1, %len.
  %4703 = bitcast i64* %shadow to i32*
  %safe.1585 = or i1 %4690, %4702
  %select.ptr.1586 = select i1 %safe.1585, i32* %4701, i32* %4703
  %4704 = load i32, i32* %select.ptr.1586, align 4
  %4705 = ashr i32 %4704, 1
  %4706 = icmp slt i64 1, %len.
  %4707 = bitcast i64* %shadow to i32*
  %safe.1587 = or i1 %4689, %4706
  %select.ptr.1588 = select i1 %safe.1587, i32* %4701, i32* %4707
  %4708 = load i32, i32* %4701
  %4709 = sub i1 %4689, true
  %4710 = xor i1 %4709, true
  %4711 = sext i1 %4709 to i32
  %4712 = and i32 %4711, %4708
  %4713 = sext i1 %4710 to i32
  %4714 = and i32 %4713, %4705
  %select.val.1589 = or i32 %4714, %4712
  store i32 %select.val.1589, i32* %select.ptr.1588, align 4
  %4715 = getelementptr inbounds i32, i32* %0, i64 2
  %4716 = icmp slt i64 2, %len.
  %4717 = bitcast i64* %shadow to i32*
  %safe.1590 = or i1 %4688, %4716
  %select.ptr.1591 = select i1 %safe.1590, i32* %4715, i32* %4717
  %4718 = load i32, i32* %select.ptr.1591, align 4
  %4719 = ashr i32 %4718, 1
  %4720 = icmp slt i64 2, %len.
  %4721 = bitcast i64* %shadow to i32*
  %safe.1592 = or i1 %4687, %4720
  %select.ptr.1593 = select i1 %safe.1592, i32* %4715, i32* %4721
  %4722 = load i32, i32* %4715
  %4723 = sub i1 %4687, true
  %4724 = xor i1 %4723, true
  %4725 = sext i1 %4723 to i32
  %4726 = and i32 %4725, %4722
  %4727 = sext i1 %4724 to i32
  %4728 = and i32 %4727, %4719
  %select.val.1594 = or i32 %4728, %4726
  store i32 %select.val.1594, i32* %select.ptr.1593, align 4
  %4729 = sext i32 3 to i64
  %4730 = icmp slt i64 0, %4729
  %4731 = bitcast i64* %shadow to i32*
  %safe.1595 = or i1 %4686, %4730
  %select.ptr.1596 = select i1 %safe.1595, i32* %6, i32* %4731
  %4732 = load i32, i32* %select.ptr.1596, align 4
  %4733 = shl i32 %4732, 1
  %4734 = sext i32 3 to i64
  %4735 = icmp slt i64 0, %4734
  %4736 = bitcast i64* %shadow to i32*
  %safe.1597 = or i1 %4685, %4735
  %select.ptr.1598 = select i1 %safe.1597, i32* %6, i32* %4736
  %4737 = load i32, i32* %6
  %4738 = sub i1 %4685, true
  %4739 = xor i1 %4738, true
  %4740 = sext i1 %4738 to i32
  %4741 = and i32 %4740, %4737
  %4742 = sext i1 %4739 to i32
  %4743 = and i32 %4742, %4733
  %select.val.1599 = or i32 %4743, %4741
  store i32 %select.val.1599, i32* %select.ptr.1598, align 4
  %4744 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4745 = sext i32 3 to i64
  %4746 = icmp slt i64 1, %4745
  %4747 = bitcast i64* %shadow to i32*
  %safe.1600 = or i1 %4684, %4746
  %select.ptr.1601 = select i1 %safe.1600, i32* %4744, i32* %4747
  %4748 = load i32, i32* %select.ptr.1601, align 4
  %4749 = shl i32 %4748, 1
  %4750 = sext i32 3 to i64
  %4751 = icmp slt i64 1, %4750
  %4752 = bitcast i64* %shadow to i32*
  %safe.1602 = or i1 %4683, %4751
  %select.ptr.1603 = select i1 %safe.1602, i32* %4744, i32* %4752
  %4753 = load i32, i32* %4744
  %4754 = sub i1 %4683, true
  %4755 = xor i1 %4754, true
  %4756 = sext i1 %4754 to i32
  %4757 = and i32 %4756, %4753
  %4758 = sext i1 %4755 to i32
  %4759 = and i32 %4758, %4749
  %select.val.1604 = or i32 %4759, %4757
  store i32 %select.val.1604, i32* %select.ptr.1603, align 4
  %4760 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4761 = sext i32 3 to i64
  %4762 = icmp slt i64 2, %4761
  %4763 = bitcast i64* %shadow to i32*
  %safe.1605 = or i1 %4682, %4762
  %select.ptr.1606 = select i1 %safe.1605, i32* %4760, i32* %4763
  %4764 = load i32, i32* %select.ptr.1606, align 4
  %4765 = shl i32 %4764, 1
  %4766 = sext i32 3 to i64
  %4767 = icmp slt i64 2, %4766
  %4768 = bitcast i64* %shadow to i32*
  %safe.1607 = or i1 %4681, %4767
  %select.ptr.1608 = select i1 %safe.1607, i32* %4760, i32* %4768
  %4769 = load i32, i32* %4760
  %4770 = sub i1 %4681, true
  %4771 = xor i1 %4770, true
  %4772 = sext i1 %4770 to i32
  %4773 = and i32 %4772, %4769
  %4774 = sext i1 %4771 to i32
  %4775 = and i32 %4774, %4765
  %select.val.1609 = or i32 %4775, %4773
  store i32 %select.val.1609, i32* %select.ptr.1608, align 4
  %4776 = load i32, i32* %0, align 4
  %4777 = and i32 %4776, 1
  %4778 = icmp ne i32 %4777, 0
  %4779 = or i1 %in.354, %4680
  store i1 %4779, i1* %out.163
  %4780 = load i1, i1* %out.163
  %in.355 = and i1 %4780, %4778
  %4781 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4782 = sext i32 3 to i64
  %4783 = icmp slt i64 2, %4782
  %4784 = bitcast i64* %shadow to i32*
  %safe.1610 = or i1 %in.355, %4783
  %select.ptr.1611 = select i1 %safe.1610, i32* %4781, i32* %4784
  %4785 = load i32, i32* %select.ptr.1611, align 4
  %4786 = or i32 %4785, 1
  %4787 = sext i32 3 to i64
  %4788 = icmp slt i64 2, %4787
  %4789 = bitcast i64* %shadow to i32*
  %safe.1612 = or i1 %in.355, %4788
  %select.ptr.1613 = select i1 %safe.1612, i32* %4781, i32* %4789
  %4790 = load i32, i32* %4781
  %4791 = sub i1 %in.355, true
  %4792 = xor i1 %4791, true
  %4793 = sext i1 %4791 to i32
  %4794 = and i32 %4793, %4790
  %4795 = sext i1 %4792 to i32
  %4796 = and i32 %4795, %4786
  %select.val.1614 = or i32 %4796, %4794
  store i32 %select.val.1614, i32* %select.ptr.1613, align 4
  store i1 %in.355, i1* %out.164
  %4797 = load i1, i1* %out.163
  %4798 = xor i1 %4778, true
  %in.356 = and i1 %4797, %4798
  %4799 = load i1, i1* %out.164
  %4800 = or i1 %in.356, %4799
  %4801 = getelementptr inbounds i32, i32* %0, i64 1
  %4802 = icmp slt i64 1, %len.
  %4803 = bitcast i64* %shadow to i32*
  %safe.1615 = or i1 %4800, %4802
  %select.ptr.1616 = select i1 %safe.1615, i32* %4801, i32* %4803
  %4804 = load i32, i32* %select.ptr.1616, align 4
  %4805 = and i32 %4804, 1
  %4806 = icmp ne i32 %4805, 0
  %4807 = or i1 %in.356, %4799
  store i1 %4807, i1* %out.165
  %4808 = load i1, i1* %out.165
  %in.357 = and i1 %4808, %4806
  %4809 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4810 = sext i32 3 to i64
  %4811 = icmp slt i64 1, %4810
  %4812 = bitcast i64* %shadow to i32*
  %safe.1617 = or i1 %in.357, %4811
  %select.ptr.1618 = select i1 %safe.1617, i32* %4809, i32* %4812
  %4813 = load i32, i32* %select.ptr.1618, align 4
  %4814 = or i32 %4813, 1
  %4815 = sext i32 3 to i64
  %4816 = icmp slt i64 1, %4815
  %4817 = bitcast i64* %shadow to i32*
  %safe.1619 = or i1 %in.357, %4816
  %select.ptr.1620 = select i1 %safe.1619, i32* %4809, i32* %4817
  %4818 = load i32, i32* %4809
  %4819 = sub i1 %in.357, true
  %4820 = xor i1 %4819, true
  %4821 = sext i1 %4819 to i32
  %4822 = and i32 %4821, %4818
  %4823 = sext i1 %4820 to i32
  %4824 = and i32 %4823, %4814
  %select.val.1621 = or i32 %4824, %4822
  store i32 %select.val.1621, i32* %select.ptr.1620, align 4
  store i1 %in.357, i1* %out.166
  %4825 = load i1, i1* %out.165
  %4826 = xor i1 %4806, true
  %in.358 = and i1 %4825, %4826
  %4827 = load i1, i1* %out.166
  %4828 = or i1 %in.358, %4827
  %4829 = getelementptr inbounds i32, i32* %0, i64 2
  %4830 = icmp slt i64 2, %len.
  %4831 = bitcast i64* %shadow to i32*
  %safe.1622 = or i1 %4828, %4830
  %select.ptr.1623 = select i1 %safe.1622, i32* %4829, i32* %4831
  %4832 = load i32, i32* %select.ptr.1623, align 4
  %4833 = and i32 %4832, 1
  %4834 = icmp ne i32 %4833, 0
  %4835 = or i1 %in.358, %4827
  store i1 %4835, i1* %out.167
  %4836 = load i1, i1* %out.167
  %in.359 = and i1 %4836, %4834
  %4837 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %4838 = sext i32 3 to i64
  %4839 = icmp slt i64 0, %4838
  %4840 = bitcast i64* %shadow to i32*
  %safe.1624 = or i1 %in.359, %4839
  %select.ptr.1625 = select i1 %safe.1624, i32* %4837, i32* %4840
  %4841 = load i32, i32* %select.ptr.1625, align 4
  %4842 = or i32 %4841, 1
  %4843 = sext i32 3 to i64
  %4844 = icmp slt i64 0, %4843
  %4845 = bitcast i64* %shadow to i32*
  %safe.1626 = or i1 %in.359, %4844
  %select.ptr.1627 = select i1 %safe.1626, i32* %4837, i32* %4845
  %4846 = load i32, i32* %4837
  %4847 = sub i1 %in.359, true
  %4848 = xor i1 %4847, true
  %4849 = sext i1 %4847 to i32
  %4850 = and i32 %4849, %4846
  %4851 = sext i1 %4848 to i32
  %4852 = and i32 %4851, %4842
  %select.val.1628 = or i32 %4852, %4850
  store i32 %select.val.1628, i32* %select.ptr.1627, align 4
  store i1 %in.359, i1* %out.168
  %4853 = load i1, i1* %out.167
  %4854 = xor i1 %4834, true
  %in.360 = and i1 %4853, %4854
  %4855 = load i1, i1* %out.168
  %4856 = or i1 %in.360, %4855
  %4857 = or i1 %in.360, %4855
  %4858 = or i1 %in.360, %4855
  %4859 = or i1 %in.360, %4855
  %4860 = or i1 %in.360, %4855
  %4861 = or i1 %in.360, %4855
  %4862 = or i1 %in.360, %4855
  %4863 = or i1 %in.360, %4855
  %4864 = or i1 %in.360, %4855
  %4865 = or i1 %in.360, %4855
  %4866 = or i1 %in.360, %4855
  %4867 = load i32, i32* %0, align 4
  %4868 = ashr i32 %4867, 1
  %4869 = load i32, i32* %0
  %4870 = sub i1 %4866, true
  %4871 = xor i1 %4870, true
  %4872 = sext i1 %4870 to i32
  %4873 = and i32 %4872, %4869
  %4874 = sext i1 %4871 to i32
  %4875 = and i32 %4874, %4868
  %select.val.1629 = or i32 %4875, %4873
  store i32 %select.val.1629, i32* %0, align 4
  %4876 = getelementptr inbounds i32, i32* %0, i64 1
  %4877 = icmp slt i64 1, %len.
  %4878 = bitcast i64* %shadow to i32*
  %safe.1630 = or i1 %4865, %4877
  %select.ptr.1631 = select i1 %safe.1630, i32* %4876, i32* %4878
  %4879 = load i32, i32* %select.ptr.1631, align 4
  %4880 = ashr i32 %4879, 1
  %4881 = icmp slt i64 1, %len.
  %4882 = bitcast i64* %shadow to i32*
  %safe.1632 = or i1 %4864, %4881
  %select.ptr.1633 = select i1 %safe.1632, i32* %4876, i32* %4882
  %4883 = load i32, i32* %4876
  %4884 = sub i1 %4864, true
  %4885 = xor i1 %4884, true
  %4886 = sext i1 %4884 to i32
  %4887 = and i32 %4886, %4883
  %4888 = sext i1 %4885 to i32
  %4889 = and i32 %4888, %4880
  %select.val.1634 = or i32 %4889, %4887
  store i32 %select.val.1634, i32* %select.ptr.1633, align 4
  %4890 = getelementptr inbounds i32, i32* %0, i64 2
  %4891 = icmp slt i64 2, %len.
  %4892 = bitcast i64* %shadow to i32*
  %safe.1635 = or i1 %4863, %4891
  %select.ptr.1636 = select i1 %safe.1635, i32* %4890, i32* %4892
  %4893 = load i32, i32* %select.ptr.1636, align 4
  %4894 = ashr i32 %4893, 1
  %4895 = icmp slt i64 2, %len.
  %4896 = bitcast i64* %shadow to i32*
  %safe.1637 = or i1 %4862, %4895
  %select.ptr.1638 = select i1 %safe.1637, i32* %4890, i32* %4896
  %4897 = load i32, i32* %4890
  %4898 = sub i1 %4862, true
  %4899 = xor i1 %4898, true
  %4900 = sext i1 %4898 to i32
  %4901 = and i32 %4900, %4897
  %4902 = sext i1 %4899 to i32
  %4903 = and i32 %4902, %4894
  %select.val.1639 = or i32 %4903, %4901
  store i32 %select.val.1639, i32* %select.ptr.1638, align 4
  %4904 = sext i32 3 to i64
  %4905 = icmp slt i64 0, %4904
  %4906 = bitcast i64* %shadow to i32*
  %safe.1640 = or i1 %4861, %4905
  %select.ptr.1641 = select i1 %safe.1640, i32* %6, i32* %4906
  %4907 = load i32, i32* %select.ptr.1641, align 4
  %4908 = shl i32 %4907, 1
  %4909 = sext i32 3 to i64
  %4910 = icmp slt i64 0, %4909
  %4911 = bitcast i64* %shadow to i32*
  %safe.1642 = or i1 %4860, %4910
  %select.ptr.1643 = select i1 %safe.1642, i32* %6, i32* %4911
  %4912 = load i32, i32* %6
  %4913 = sub i1 %4860, true
  %4914 = xor i1 %4913, true
  %4915 = sext i1 %4913 to i32
  %4916 = and i32 %4915, %4912
  %4917 = sext i1 %4914 to i32
  %4918 = and i32 %4917, %4908
  %select.val.1644 = or i32 %4918, %4916
  store i32 %select.val.1644, i32* %select.ptr.1643, align 4
  %4919 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4920 = sext i32 3 to i64
  %4921 = icmp slt i64 1, %4920
  %4922 = bitcast i64* %shadow to i32*
  %safe.1645 = or i1 %4859, %4921
  %select.ptr.1646 = select i1 %safe.1645, i32* %4919, i32* %4922
  %4923 = load i32, i32* %select.ptr.1646, align 4
  %4924 = shl i32 %4923, 1
  %4925 = sext i32 3 to i64
  %4926 = icmp slt i64 1, %4925
  %4927 = bitcast i64* %shadow to i32*
  %safe.1647 = or i1 %4858, %4926
  %select.ptr.1648 = select i1 %safe.1647, i32* %4919, i32* %4927
  %4928 = load i32, i32* %4919
  %4929 = sub i1 %4858, true
  %4930 = xor i1 %4929, true
  %4931 = sext i1 %4929 to i32
  %4932 = and i32 %4931, %4928
  %4933 = sext i1 %4930 to i32
  %4934 = and i32 %4933, %4924
  %select.val.1649 = or i32 %4934, %4932
  store i32 %select.val.1649, i32* %select.ptr.1648, align 4
  %4935 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4936 = sext i32 3 to i64
  %4937 = icmp slt i64 2, %4936
  %4938 = bitcast i64* %shadow to i32*
  %safe.1650 = or i1 %4857, %4937
  %select.ptr.1651 = select i1 %safe.1650, i32* %4935, i32* %4938
  %4939 = load i32, i32* %select.ptr.1651, align 4
  %4940 = shl i32 %4939, 1
  %4941 = sext i32 3 to i64
  %4942 = icmp slt i64 2, %4941
  %4943 = bitcast i64* %shadow to i32*
  %safe.1652 = or i1 %4856, %4942
  %select.ptr.1653 = select i1 %safe.1652, i32* %4935, i32* %4943
  %4944 = load i32, i32* %4935
  %4945 = sub i1 %4856, true
  %4946 = xor i1 %4945, true
  %4947 = sext i1 %4945 to i32
  %4948 = and i32 %4947, %4944
  %4949 = sext i1 %4946 to i32
  %4950 = and i32 %4949, %4940
  %select.val.1654 = or i32 %4950, %4948
  store i32 %select.val.1654, i32* %select.ptr.1653, align 4
  %4951 = load i32, i32* %0, align 4
  %4952 = and i32 %4951, 1
  %4953 = icmp ne i32 %4952, 0
  %4954 = or i1 %in.360, %4855
  store i1 %4954, i1* %out.169
  %4955 = load i1, i1* %out.169
  %in.361 = and i1 %4955, %4953
  %4956 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %4957 = sext i32 3 to i64
  %4958 = icmp slt i64 2, %4957
  %4959 = bitcast i64* %shadow to i32*
  %safe.1655 = or i1 %in.361, %4958
  %select.ptr.1656 = select i1 %safe.1655, i32* %4956, i32* %4959
  %4960 = load i32, i32* %select.ptr.1656, align 4
  %4961 = or i32 %4960, 1
  %4962 = sext i32 3 to i64
  %4963 = icmp slt i64 2, %4962
  %4964 = bitcast i64* %shadow to i32*
  %safe.1657 = or i1 %in.361, %4963
  %select.ptr.1658 = select i1 %safe.1657, i32* %4956, i32* %4964
  %4965 = load i32, i32* %4956
  %4966 = sub i1 %in.361, true
  %4967 = xor i1 %4966, true
  %4968 = sext i1 %4966 to i32
  %4969 = and i32 %4968, %4965
  %4970 = sext i1 %4967 to i32
  %4971 = and i32 %4970, %4961
  %select.val.1659 = or i32 %4971, %4969
  store i32 %select.val.1659, i32* %select.ptr.1658, align 4
  store i1 %in.361, i1* %out.170
  %4972 = load i1, i1* %out.169
  %4973 = xor i1 %4953, true
  %in.362 = and i1 %4972, %4973
  %4974 = load i1, i1* %out.170
  %4975 = or i1 %in.362, %4974
  %4976 = getelementptr inbounds i32, i32* %0, i64 1
  %4977 = icmp slt i64 1, %len.
  %4978 = bitcast i64* %shadow to i32*
  %safe.1660 = or i1 %4975, %4977
  %select.ptr.1661 = select i1 %safe.1660, i32* %4976, i32* %4978
  %4979 = load i32, i32* %select.ptr.1661, align 4
  %4980 = and i32 %4979, 1
  %4981 = icmp ne i32 %4980, 0
  %4982 = or i1 %in.362, %4974
  store i1 %4982, i1* %out.171
  %4983 = load i1, i1* %out.171
  %in.363 = and i1 %4983, %4981
  %4984 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %4985 = sext i32 3 to i64
  %4986 = icmp slt i64 1, %4985
  %4987 = bitcast i64* %shadow to i32*
  %safe.1662 = or i1 %in.363, %4986
  %select.ptr.1663 = select i1 %safe.1662, i32* %4984, i32* %4987
  %4988 = load i32, i32* %select.ptr.1663, align 4
  %4989 = or i32 %4988, 1
  %4990 = sext i32 3 to i64
  %4991 = icmp slt i64 1, %4990
  %4992 = bitcast i64* %shadow to i32*
  %safe.1664 = or i1 %in.363, %4991
  %select.ptr.1665 = select i1 %safe.1664, i32* %4984, i32* %4992
  %4993 = load i32, i32* %4984
  %4994 = sub i1 %in.363, true
  %4995 = xor i1 %4994, true
  %4996 = sext i1 %4994 to i32
  %4997 = and i32 %4996, %4993
  %4998 = sext i1 %4995 to i32
  %4999 = and i32 %4998, %4989
  %select.val.1666 = or i32 %4999, %4997
  store i32 %select.val.1666, i32* %select.ptr.1665, align 4
  store i1 %in.363, i1* %out.172
  %5000 = load i1, i1* %out.171
  %5001 = xor i1 %4981, true
  %in.364 = and i1 %5000, %5001
  %5002 = load i1, i1* %out.172
  %5003 = or i1 %in.364, %5002
  %5004 = getelementptr inbounds i32, i32* %0, i64 2
  %5005 = icmp slt i64 2, %len.
  %5006 = bitcast i64* %shadow to i32*
  %safe.1667 = or i1 %5003, %5005
  %select.ptr.1668 = select i1 %safe.1667, i32* %5004, i32* %5006
  %5007 = load i32, i32* %select.ptr.1668, align 4
  %5008 = and i32 %5007, 1
  %5009 = icmp ne i32 %5008, 0
  %5010 = or i1 %in.364, %5002
  store i1 %5010, i1* %out.173
  %5011 = load i1, i1* %out.173
  %in.365 = and i1 %5011, %5009
  %5012 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %5013 = sext i32 3 to i64
  %5014 = icmp slt i64 0, %5013
  %5015 = bitcast i64* %shadow to i32*
  %safe.1669 = or i1 %in.365, %5014
  %select.ptr.1670 = select i1 %safe.1669, i32* %5012, i32* %5015
  %5016 = load i32, i32* %select.ptr.1670, align 4
  %5017 = or i32 %5016, 1
  %5018 = sext i32 3 to i64
  %5019 = icmp slt i64 0, %5018
  %5020 = bitcast i64* %shadow to i32*
  %safe.1671 = or i1 %in.365, %5019
  %select.ptr.1672 = select i1 %safe.1671, i32* %5012, i32* %5020
  %5021 = load i32, i32* %5012
  %5022 = sub i1 %in.365, true
  %5023 = xor i1 %5022, true
  %5024 = sext i1 %5022 to i32
  %5025 = and i32 %5024, %5021
  %5026 = sext i1 %5023 to i32
  %5027 = and i32 %5026, %5017
  %select.val.1673 = or i32 %5027, %5025
  store i32 %select.val.1673, i32* %select.ptr.1672, align 4
  store i1 %in.365, i1* %out.174
  %5028 = load i1, i1* %out.173
  %5029 = xor i1 %5009, true
  %in.366 = and i1 %5028, %5029
  %5030 = load i1, i1* %out.174
  %5031 = or i1 %in.366, %5030
  %5032 = or i1 %in.366, %5030
  %5033 = or i1 %in.366, %5030
  %5034 = or i1 %in.366, %5030
  %5035 = or i1 %in.366, %5030
  %5036 = or i1 %in.366, %5030
  %5037 = or i1 %in.366, %5030
  %5038 = or i1 %in.366, %5030
  %5039 = or i1 %in.366, %5030
  %5040 = or i1 %in.366, %5030
  %5041 = or i1 %in.366, %5030
  %5042 = load i32, i32* %0, align 4
  %5043 = ashr i32 %5042, 1
  %5044 = load i32, i32* %0
  %5045 = sub i1 %5041, true
  %5046 = xor i1 %5045, true
  %5047 = sext i1 %5045 to i32
  %5048 = and i32 %5047, %5044
  %5049 = sext i1 %5046 to i32
  %5050 = and i32 %5049, %5043
  %select.val.1674 = or i32 %5050, %5048
  store i32 %select.val.1674, i32* %0, align 4
  %5051 = getelementptr inbounds i32, i32* %0, i64 1
  %5052 = icmp slt i64 1, %len.
  %5053 = bitcast i64* %shadow to i32*
  %safe.1675 = or i1 %5040, %5052
  %select.ptr.1676 = select i1 %safe.1675, i32* %5051, i32* %5053
  %5054 = load i32, i32* %select.ptr.1676, align 4
  %5055 = ashr i32 %5054, 1
  %5056 = icmp slt i64 1, %len.
  %5057 = bitcast i64* %shadow to i32*
  %safe.1677 = or i1 %5039, %5056
  %select.ptr.1678 = select i1 %safe.1677, i32* %5051, i32* %5057
  %5058 = load i32, i32* %5051
  %5059 = sub i1 %5039, true
  %5060 = xor i1 %5059, true
  %5061 = sext i1 %5059 to i32
  %5062 = and i32 %5061, %5058
  %5063 = sext i1 %5060 to i32
  %5064 = and i32 %5063, %5055
  %select.val.1679 = or i32 %5064, %5062
  store i32 %select.val.1679, i32* %select.ptr.1678, align 4
  %5065 = getelementptr inbounds i32, i32* %0, i64 2
  %5066 = icmp slt i64 2, %len.
  %5067 = bitcast i64* %shadow to i32*
  %safe.1680 = or i1 %5038, %5066
  %select.ptr.1681 = select i1 %safe.1680, i32* %5065, i32* %5067
  %5068 = load i32, i32* %select.ptr.1681, align 4
  %5069 = ashr i32 %5068, 1
  %5070 = icmp slt i64 2, %len.
  %5071 = bitcast i64* %shadow to i32*
  %safe.1682 = or i1 %5037, %5070
  %select.ptr.1683 = select i1 %safe.1682, i32* %5065, i32* %5071
  %5072 = load i32, i32* %5065
  %5073 = sub i1 %5037, true
  %5074 = xor i1 %5073, true
  %5075 = sext i1 %5073 to i32
  %5076 = and i32 %5075, %5072
  %5077 = sext i1 %5074 to i32
  %5078 = and i32 %5077, %5069
  %select.val.1684 = or i32 %5078, %5076
  store i32 %select.val.1684, i32* %select.ptr.1683, align 4
  %5079 = sext i32 3 to i64
  %5080 = icmp slt i64 0, %5079
  %5081 = bitcast i64* %shadow to i32*
  %safe.1685 = or i1 %5036, %5080
  %select.ptr.1686 = select i1 %safe.1685, i32* %6, i32* %5081
  %5082 = load i32, i32* %select.ptr.1686, align 4
  %5083 = shl i32 %5082, 1
  %5084 = sext i32 3 to i64
  %5085 = icmp slt i64 0, %5084
  %5086 = bitcast i64* %shadow to i32*
  %safe.1687 = or i1 %5035, %5085
  %select.ptr.1688 = select i1 %safe.1687, i32* %6, i32* %5086
  %5087 = load i32, i32* %6
  %5088 = sub i1 %5035, true
  %5089 = xor i1 %5088, true
  %5090 = sext i1 %5088 to i32
  %5091 = and i32 %5090, %5087
  %5092 = sext i1 %5089 to i32
  %5093 = and i32 %5092, %5083
  %select.val.1689 = or i32 %5093, %5091
  store i32 %select.val.1689, i32* %select.ptr.1688, align 4
  %5094 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %5095 = sext i32 3 to i64
  %5096 = icmp slt i64 1, %5095
  %5097 = bitcast i64* %shadow to i32*
  %safe.1690 = or i1 %5034, %5096
  %select.ptr.1691 = select i1 %safe.1690, i32* %5094, i32* %5097
  %5098 = load i32, i32* %select.ptr.1691, align 4
  %5099 = shl i32 %5098, 1
  %5100 = sext i32 3 to i64
  %5101 = icmp slt i64 1, %5100
  %5102 = bitcast i64* %shadow to i32*
  %safe.1692 = or i1 %5033, %5101
  %select.ptr.1693 = select i1 %safe.1692, i32* %5094, i32* %5102
  %5103 = load i32, i32* %5094
  %5104 = sub i1 %5033, true
  %5105 = xor i1 %5104, true
  %5106 = sext i1 %5104 to i32
  %5107 = and i32 %5106, %5103
  %5108 = sext i1 %5105 to i32
  %5109 = and i32 %5108, %5099
  %select.val.1694 = or i32 %5109, %5107
  store i32 %select.val.1694, i32* %select.ptr.1693, align 4
  %5110 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %5111 = sext i32 3 to i64
  %5112 = icmp slt i64 2, %5111
  %5113 = bitcast i64* %shadow to i32*
  %safe.1695 = or i1 %5032, %5112
  %select.ptr.1696 = select i1 %safe.1695, i32* %5110, i32* %5113
  %5114 = load i32, i32* %select.ptr.1696, align 4
  %5115 = shl i32 %5114, 1
  %5116 = sext i32 3 to i64
  %5117 = icmp slt i64 2, %5116
  %5118 = bitcast i64* %shadow to i32*
  %safe.1697 = or i1 %5031, %5117
  %select.ptr.1698 = select i1 %safe.1697, i32* %5110, i32* %5118
  %5119 = load i32, i32* %5110
  %5120 = sub i1 %5031, true
  %5121 = xor i1 %5120, true
  %5122 = sext i1 %5120 to i32
  %5123 = and i32 %5122, %5119
  %5124 = sext i1 %5121 to i32
  %5125 = and i32 %5124, %5115
  %select.val.1699 = or i32 %5125, %5123
  store i32 %select.val.1699, i32* %select.ptr.1698, align 4
  %5126 = load i32, i32* %0, align 4
  %5127 = and i32 %5126, 1
  %5128 = icmp ne i32 %5127, 0
  %5129 = or i1 %in.366, %5030
  store i1 %5129, i1* %out.175
  %5130 = load i1, i1* %out.175
  %in.367 = and i1 %5130, %5128
  %5131 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %5132 = sext i32 3 to i64
  %5133 = icmp slt i64 2, %5132
  %5134 = bitcast i64* %shadow to i32*
  %safe.1700 = or i1 %in.367, %5133
  %select.ptr.1701 = select i1 %safe.1700, i32* %5131, i32* %5134
  %5135 = load i32, i32* %select.ptr.1701, align 4
  %5136 = or i32 %5135, 1
  %5137 = sext i32 3 to i64
  %5138 = icmp slt i64 2, %5137
  %5139 = bitcast i64* %shadow to i32*
  %safe.1702 = or i1 %in.367, %5138
  %select.ptr.1703 = select i1 %safe.1702, i32* %5131, i32* %5139
  %5140 = load i32, i32* %5131
  %5141 = sub i1 %in.367, true
  %5142 = xor i1 %5141, true
  %5143 = sext i1 %5141 to i32
  %5144 = and i32 %5143, %5140
  %5145 = sext i1 %5142 to i32
  %5146 = and i32 %5145, %5136
  %select.val.1704 = or i32 %5146, %5144
  store i32 %select.val.1704, i32* %select.ptr.1703, align 4
  store i1 %in.367, i1* %out.176
  %5147 = load i1, i1* %out.175
  %5148 = xor i1 %5128, true
  %in.368 = and i1 %5147, %5148
  %5149 = load i1, i1* %out.176
  %5150 = or i1 %in.368, %5149
  %5151 = getelementptr inbounds i32, i32* %0, i64 1
  %5152 = icmp slt i64 1, %len.
  %5153 = bitcast i64* %shadow to i32*
  %safe.1705 = or i1 %5150, %5152
  %select.ptr.1706 = select i1 %safe.1705, i32* %5151, i32* %5153
  %5154 = load i32, i32* %select.ptr.1706, align 4
  %5155 = and i32 %5154, 1
  %5156 = icmp ne i32 %5155, 0
  %5157 = or i1 %in.368, %5149
  store i1 %5157, i1* %out.177
  %5158 = load i1, i1* %out.177
  %in.369 = and i1 %5158, %5156
  %5159 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %5160 = sext i32 3 to i64
  %5161 = icmp slt i64 1, %5160
  %5162 = bitcast i64* %shadow to i32*
  %safe.1707 = or i1 %in.369, %5161
  %select.ptr.1708 = select i1 %safe.1707, i32* %5159, i32* %5162
  %5163 = load i32, i32* %select.ptr.1708, align 4
  %5164 = or i32 %5163, 1
  %5165 = sext i32 3 to i64
  %5166 = icmp slt i64 1, %5165
  %5167 = bitcast i64* %shadow to i32*
  %safe.1709 = or i1 %in.369, %5166
  %select.ptr.1710 = select i1 %safe.1709, i32* %5159, i32* %5167
  %5168 = load i32, i32* %5159
  %5169 = sub i1 %in.369, true
  %5170 = xor i1 %5169, true
  %5171 = sext i1 %5169 to i32
  %5172 = and i32 %5171, %5168
  %5173 = sext i1 %5170 to i32
  %5174 = and i32 %5173, %5164
  %select.val.1711 = or i32 %5174, %5172
  store i32 %select.val.1711, i32* %select.ptr.1710, align 4
  store i1 %in.369, i1* %out.178
  %5175 = load i1, i1* %out.177
  %5176 = xor i1 %5156, true
  %in.370 = and i1 %5175, %5176
  %5177 = load i1, i1* %out.178
  %5178 = or i1 %in.370, %5177
  %5179 = getelementptr inbounds i32, i32* %0, i64 2
  %5180 = icmp slt i64 2, %len.
  %5181 = bitcast i64* %shadow to i32*
  %safe.1712 = or i1 %5178, %5180
  %select.ptr.1713 = select i1 %safe.1712, i32* %5179, i32* %5181
  %5182 = load i32, i32* %select.ptr.1713, align 4
  %5183 = and i32 %5182, 1
  %5184 = icmp ne i32 %5183, 0
  %5185 = or i1 %in.370, %5177
  store i1 %5185, i1* %out.179
  %5186 = load i1, i1* %out.179
  %in.371 = and i1 %5186, %5184
  %5187 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %5188 = sext i32 3 to i64
  %5189 = icmp slt i64 0, %5188
  %5190 = bitcast i64* %shadow to i32*
  %safe.1714 = or i1 %in.371, %5189
  %select.ptr.1715 = select i1 %safe.1714, i32* %5187, i32* %5190
  %5191 = load i32, i32* %select.ptr.1715, align 4
  %5192 = or i32 %5191, 1
  %5193 = sext i32 3 to i64
  %5194 = icmp slt i64 0, %5193
  %5195 = bitcast i64* %shadow to i32*
  %safe.1716 = or i1 %in.371, %5194
  %select.ptr.1717 = select i1 %safe.1716, i32* %5187, i32* %5195
  %5196 = load i32, i32* %5187
  %5197 = sub i1 %in.371, true
  %5198 = xor i1 %5197, true
  %5199 = sext i1 %5197 to i32
  %5200 = and i32 %5199, %5196
  %5201 = sext i1 %5198 to i32
  %5202 = and i32 %5201, %5192
  %select.val.1718 = or i32 %5202, %5200
  store i32 %select.val.1718, i32* %select.ptr.1717, align 4
  store i1 %in.371, i1* %out.180
  %5203 = load i1, i1* %out.179
  %5204 = xor i1 %5184, true
  %in.372 = and i1 %5203, %5204
  %5205 = load i1, i1* %out.180
  %5206 = or i1 %in.372, %5205
  %5207 = or i1 %in.372, %5205
  %5208 = or i1 %in.372, %5205
  %5209 = or i1 %in.372, %5205
  %5210 = or i1 %in.372, %5205
  %5211 = or i1 %in.372, %5205
  %5212 = or i1 %in.372, %5205
  %5213 = or i1 %in.372, %5205
  %5214 = or i1 %in.372, %5205
  %5215 = or i1 %in.372, %5205
  %5216 = or i1 %in.372, %5205
  %5217 = load i32, i32* %0, align 4
  %5218 = ashr i32 %5217, 1
  %5219 = load i32, i32* %0
  %5220 = sub i1 %5216, true
  %5221 = xor i1 %5220, true
  %5222 = sext i1 %5220 to i32
  %5223 = and i32 %5222, %5219
  %5224 = sext i1 %5221 to i32
  %5225 = and i32 %5224, %5218
  %select.val.1719 = or i32 %5225, %5223
  store i32 %select.val.1719, i32* %0, align 4
  %5226 = getelementptr inbounds i32, i32* %0, i64 1
  %5227 = icmp slt i64 1, %len.
  %5228 = bitcast i64* %shadow to i32*
  %safe.1720 = or i1 %5215, %5227
  %select.ptr.1721 = select i1 %safe.1720, i32* %5226, i32* %5228
  %5229 = load i32, i32* %select.ptr.1721, align 4
  %5230 = ashr i32 %5229, 1
  %5231 = icmp slt i64 1, %len.
  %5232 = bitcast i64* %shadow to i32*
  %safe.1722 = or i1 %5214, %5231
  %select.ptr.1723 = select i1 %safe.1722, i32* %5226, i32* %5232
  %5233 = load i32, i32* %5226
  %5234 = sub i1 %5214, true
  %5235 = xor i1 %5234, true
  %5236 = sext i1 %5234 to i32
  %5237 = and i32 %5236, %5233
  %5238 = sext i1 %5235 to i32
  %5239 = and i32 %5238, %5230
  %select.val.1724 = or i32 %5239, %5237
  store i32 %select.val.1724, i32* %select.ptr.1723, align 4
  %5240 = getelementptr inbounds i32, i32* %0, i64 2
  %5241 = icmp slt i64 2, %len.
  %5242 = bitcast i64* %shadow to i32*
  %safe.1725 = or i1 %5213, %5241
  %select.ptr.1726 = select i1 %safe.1725, i32* %5240, i32* %5242
  %5243 = load i32, i32* %select.ptr.1726, align 4
  %5244 = ashr i32 %5243, 1
  %5245 = icmp slt i64 2, %len.
  %5246 = bitcast i64* %shadow to i32*
  %safe.1727 = or i1 %5212, %5245
  %select.ptr.1728 = select i1 %safe.1727, i32* %5240, i32* %5246
  %5247 = load i32, i32* %5240
  %5248 = sub i1 %5212, true
  %5249 = xor i1 %5248, true
  %5250 = sext i1 %5248 to i32
  %5251 = and i32 %5250, %5247
  %5252 = sext i1 %5249 to i32
  %5253 = and i32 %5252, %5244
  %select.val.1729 = or i32 %5253, %5251
  store i32 %select.val.1729, i32* %select.ptr.1728, align 4
  %5254 = sext i32 3 to i64
  %5255 = icmp slt i64 0, %5254
  %5256 = bitcast i64* %shadow to i32*
  %safe.1730 = or i1 %5211, %5255
  %select.ptr.1731 = select i1 %safe.1730, i32* %6, i32* %5256
  %5257 = load i32, i32* %select.ptr.1731, align 4
  %5258 = shl i32 %5257, 1
  %5259 = sext i32 3 to i64
  %5260 = icmp slt i64 0, %5259
  %5261 = bitcast i64* %shadow to i32*
  %safe.1732 = or i1 %5210, %5260
  %select.ptr.1733 = select i1 %safe.1732, i32* %6, i32* %5261
  %5262 = load i32, i32* %6
  %5263 = sub i1 %5210, true
  %5264 = xor i1 %5263, true
  %5265 = sext i1 %5263 to i32
  %5266 = and i32 %5265, %5262
  %5267 = sext i1 %5264 to i32
  %5268 = and i32 %5267, %5258
  %select.val.1734 = or i32 %5268, %5266
  store i32 %select.val.1734, i32* %select.ptr.1733, align 4
  %5269 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %5270 = sext i32 3 to i64
  %5271 = icmp slt i64 1, %5270
  %5272 = bitcast i64* %shadow to i32*
  %safe.1735 = or i1 %5209, %5271
  %select.ptr.1736 = select i1 %safe.1735, i32* %5269, i32* %5272
  %5273 = load i32, i32* %select.ptr.1736, align 4
  %5274 = shl i32 %5273, 1
  %5275 = sext i32 3 to i64
  %5276 = icmp slt i64 1, %5275
  %5277 = bitcast i64* %shadow to i32*
  %safe.1737 = or i1 %5208, %5276
  %select.ptr.1738 = select i1 %safe.1737, i32* %5269, i32* %5277
  %5278 = load i32, i32* %5269
  %5279 = sub i1 %5208, true
  %5280 = xor i1 %5279, true
  %5281 = sext i1 %5279 to i32
  %5282 = and i32 %5281, %5278
  %5283 = sext i1 %5280 to i32
  %5284 = and i32 %5283, %5274
  %select.val.1739 = or i32 %5284, %5282
  store i32 %select.val.1739, i32* %select.ptr.1738, align 4
  %5285 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %5286 = sext i32 3 to i64
  %5287 = icmp slt i64 2, %5286
  %5288 = bitcast i64* %shadow to i32*
  %safe.1740 = or i1 %5207, %5287
  %select.ptr.1741 = select i1 %safe.1740, i32* %5285, i32* %5288
  %5289 = load i32, i32* %select.ptr.1741, align 4
  %5290 = shl i32 %5289, 1
  %5291 = sext i32 3 to i64
  %5292 = icmp slt i64 2, %5291
  %5293 = bitcast i64* %shadow to i32*
  %safe.1742 = or i1 %5206, %5292
  %select.ptr.1743 = select i1 %safe.1742, i32* %5285, i32* %5293
  %5294 = load i32, i32* %5285
  %5295 = sub i1 %5206, true
  %5296 = xor i1 %5295, true
  %5297 = sext i1 %5295 to i32
  %5298 = and i32 %5297, %5294
  %5299 = sext i1 %5296 to i32
  %5300 = and i32 %5299, %5290
  %select.val.1744 = or i32 %5300, %5298
  store i32 %select.val.1744, i32* %select.ptr.1743, align 4
  %5301 = load i32, i32* %0, align 4
  %5302 = and i32 %5301, 1
  %5303 = icmp ne i32 %5302, 0
  %5304 = or i1 %in.372, %5205
  store i1 %5304, i1* %out.181
  %5305 = load i1, i1* %out.181
  %in.373 = and i1 %5305, %5303
  %5306 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %5307 = sext i32 3 to i64
  %5308 = icmp slt i64 2, %5307
  %5309 = bitcast i64* %shadow to i32*
  %safe.1745 = or i1 %in.373, %5308
  %select.ptr.1746 = select i1 %safe.1745, i32* %5306, i32* %5309
  %5310 = load i32, i32* %select.ptr.1746, align 4
  %5311 = or i32 %5310, 1
  %5312 = sext i32 3 to i64
  %5313 = icmp slt i64 2, %5312
  %5314 = bitcast i64* %shadow to i32*
  %safe.1747 = or i1 %in.373, %5313
  %select.ptr.1748 = select i1 %safe.1747, i32* %5306, i32* %5314
  %5315 = load i32, i32* %5306
  %5316 = sub i1 %in.373, true
  %5317 = xor i1 %5316, true
  %5318 = sext i1 %5316 to i32
  %5319 = and i32 %5318, %5315
  %5320 = sext i1 %5317 to i32
  %5321 = and i32 %5320, %5311
  %select.val.1749 = or i32 %5321, %5319
  store i32 %select.val.1749, i32* %select.ptr.1748, align 4
  store i1 %in.373, i1* %out.182
  %5322 = load i1, i1* %out.181
  %5323 = xor i1 %5303, true
  %in.374 = and i1 %5322, %5323
  %5324 = load i1, i1* %out.182
  %5325 = or i1 %in.374, %5324
  %5326 = getelementptr inbounds i32, i32* %0, i64 1
  %5327 = icmp slt i64 1, %len.
  %5328 = bitcast i64* %shadow to i32*
  %safe.1750 = or i1 %5325, %5327
  %select.ptr.1751 = select i1 %safe.1750, i32* %5326, i32* %5328
  %5329 = load i32, i32* %select.ptr.1751, align 4
  %5330 = and i32 %5329, 1
  %5331 = icmp ne i32 %5330, 0
  %5332 = or i1 %in.374, %5324
  store i1 %5332, i1* %out.183
  %5333 = load i1, i1* %out.183
  %in.375 = and i1 %5333, %5331
  %5334 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %5335 = sext i32 3 to i64
  %5336 = icmp slt i64 1, %5335
  %5337 = bitcast i64* %shadow to i32*
  %safe.1752 = or i1 %in.375, %5336
  %select.ptr.1753 = select i1 %safe.1752, i32* %5334, i32* %5337
  %5338 = load i32, i32* %select.ptr.1753, align 4
  %5339 = or i32 %5338, 1
  %5340 = sext i32 3 to i64
  %5341 = icmp slt i64 1, %5340
  %5342 = bitcast i64* %shadow to i32*
  %safe.1754 = or i1 %in.375, %5341
  %select.ptr.1755 = select i1 %safe.1754, i32* %5334, i32* %5342
  %5343 = load i32, i32* %5334
  %5344 = sub i1 %in.375, true
  %5345 = xor i1 %5344, true
  %5346 = sext i1 %5344 to i32
  %5347 = and i32 %5346, %5343
  %5348 = sext i1 %5345 to i32
  %5349 = and i32 %5348, %5339
  %select.val.1756 = or i32 %5349, %5347
  store i32 %select.val.1756, i32* %select.ptr.1755, align 4
  store i1 %in.375, i1* %out.184
  %5350 = load i1, i1* %out.183
  %5351 = xor i1 %5331, true
  %in.376 = and i1 %5350, %5351
  %5352 = load i1, i1* %out.184
  %5353 = or i1 %in.376, %5352
  %5354 = getelementptr inbounds i32, i32* %0, i64 2
  %5355 = icmp slt i64 2, %len.
  %5356 = bitcast i64* %shadow to i32*
  %safe.1757 = or i1 %5353, %5355
  %select.ptr.1758 = select i1 %safe.1757, i32* %5354, i32* %5356
  %5357 = load i32, i32* %select.ptr.1758, align 4
  %5358 = and i32 %5357, 1
  %5359 = icmp ne i32 %5358, 0
  %5360 = or i1 %in.376, %5352
  store i1 %5360, i1* %out.185
  %5361 = load i1, i1* %out.185
  %in.377 = and i1 %5361, %5359
  %5362 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %5363 = sext i32 3 to i64
  %5364 = icmp slt i64 0, %5363
  %5365 = bitcast i64* %shadow to i32*
  %safe.1759 = or i1 %in.377, %5364
  %select.ptr.1760 = select i1 %safe.1759, i32* %5362, i32* %5365
  %5366 = load i32, i32* %select.ptr.1760, align 4
  %5367 = or i32 %5366, 1
  %5368 = sext i32 3 to i64
  %5369 = icmp slt i64 0, %5368
  %5370 = bitcast i64* %shadow to i32*
  %safe.1761 = or i1 %in.377, %5369
  %select.ptr.1762 = select i1 %safe.1761, i32* %5362, i32* %5370
  %5371 = load i32, i32* %5362
  %5372 = sub i1 %in.377, true
  %5373 = xor i1 %5372, true
  %5374 = sext i1 %5372 to i32
  %5375 = and i32 %5374, %5371
  %5376 = sext i1 %5373 to i32
  %5377 = and i32 %5376, %5367
  %select.val.1763 = or i32 %5377, %5375
  store i32 %select.val.1763, i32* %select.ptr.1762, align 4
  store i1 %in.377, i1* %out.186
  %5378 = load i1, i1* %out.185
  %5379 = xor i1 %5359, true
  %in.378 = and i1 %5378, %5379
  %5380 = load i1, i1* %out.186
  %5381 = or i1 %in.378, %5380
  %5382 = or i1 %in.378, %5380
  %5383 = or i1 %in.378, %5380
  %5384 = or i1 %in.378, %5380
  %5385 = or i1 %in.378, %5380
  %5386 = or i1 %in.378, %5380
  %5387 = or i1 %in.378, %5380
  %5388 = or i1 %in.378, %5380
  %5389 = or i1 %in.378, %5380
  %5390 = or i1 %in.378, %5380
  %5391 = or i1 %in.378, %5380
  %5392 = load i32, i32* %0, align 4
  %5393 = ashr i32 %5392, 1
  %5394 = load i32, i32* %0
  %5395 = sub i1 %5391, true
  %5396 = xor i1 %5395, true
  %5397 = sext i1 %5395 to i32
  %5398 = and i32 %5397, %5394
  %5399 = sext i1 %5396 to i32
  %5400 = and i32 %5399, %5393
  %select.val.1764 = or i32 %5400, %5398
  store i32 %select.val.1764, i32* %0, align 4
  %5401 = getelementptr inbounds i32, i32* %0, i64 1
  %5402 = icmp slt i64 1, %len.
  %5403 = bitcast i64* %shadow to i32*
  %safe.1765 = or i1 %5390, %5402
  %select.ptr.1766 = select i1 %safe.1765, i32* %5401, i32* %5403
  %5404 = load i32, i32* %select.ptr.1766, align 4
  %5405 = ashr i32 %5404, 1
  %5406 = icmp slt i64 1, %len.
  %5407 = bitcast i64* %shadow to i32*
  %safe.1767 = or i1 %5389, %5406
  %select.ptr.1768 = select i1 %safe.1767, i32* %5401, i32* %5407
  %5408 = load i32, i32* %5401
  %5409 = sub i1 %5389, true
  %5410 = xor i1 %5409, true
  %5411 = sext i1 %5409 to i32
  %5412 = and i32 %5411, %5408
  %5413 = sext i1 %5410 to i32
  %5414 = and i32 %5413, %5405
  %select.val.1769 = or i32 %5414, %5412
  store i32 %select.val.1769, i32* %select.ptr.1768, align 4
  %5415 = getelementptr inbounds i32, i32* %0, i64 2
  %5416 = icmp slt i64 2, %len.
  %5417 = bitcast i64* %shadow to i32*
  %safe.1770 = or i1 %5388, %5416
  %select.ptr.1771 = select i1 %safe.1770, i32* %5415, i32* %5417
  %5418 = load i32, i32* %select.ptr.1771, align 4
  %5419 = ashr i32 %5418, 1
  %5420 = icmp slt i64 2, %len.
  %5421 = bitcast i64* %shadow to i32*
  %safe.1772 = or i1 %5387, %5420
  %select.ptr.1773 = select i1 %safe.1772, i32* %5415, i32* %5421
  %5422 = load i32, i32* %5415
  %5423 = sub i1 %5387, true
  %5424 = xor i1 %5423, true
  %5425 = sext i1 %5423 to i32
  %5426 = and i32 %5425, %5422
  %5427 = sext i1 %5424 to i32
  %5428 = and i32 %5427, %5419
  %select.val.1774 = or i32 %5428, %5426
  store i32 %select.val.1774, i32* %select.ptr.1773, align 4
  %5429 = sext i32 3 to i64
  %5430 = icmp slt i64 0, %5429
  %5431 = bitcast i64* %shadow to i32*
  %safe.1775 = or i1 %5386, %5430
  %select.ptr.1776 = select i1 %safe.1775, i32* %6, i32* %5431
  %5432 = load i32, i32* %select.ptr.1776, align 4
  %5433 = shl i32 %5432, 1
  %5434 = sext i32 3 to i64
  %5435 = icmp slt i64 0, %5434
  %5436 = bitcast i64* %shadow to i32*
  %safe.1777 = or i1 %5385, %5435
  %select.ptr.1778 = select i1 %safe.1777, i32* %6, i32* %5436
  %5437 = load i32, i32* %6
  %5438 = sub i1 %5385, true
  %5439 = xor i1 %5438, true
  %5440 = sext i1 %5438 to i32
  %5441 = and i32 %5440, %5437
  %5442 = sext i1 %5439 to i32
  %5443 = and i32 %5442, %5433
  %select.val.1779 = or i32 %5443, %5441
  store i32 %select.val.1779, i32* %select.ptr.1778, align 4
  %5444 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %5445 = sext i32 3 to i64
  %5446 = icmp slt i64 1, %5445
  %5447 = bitcast i64* %shadow to i32*
  %safe.1780 = or i1 %5384, %5446
  %select.ptr.1781 = select i1 %safe.1780, i32* %5444, i32* %5447
  %5448 = load i32, i32* %select.ptr.1781, align 4
  %5449 = shl i32 %5448, 1
  %5450 = sext i32 3 to i64
  %5451 = icmp slt i64 1, %5450
  %5452 = bitcast i64* %shadow to i32*
  %safe.1782 = or i1 %5383, %5451
  %select.ptr.1783 = select i1 %safe.1782, i32* %5444, i32* %5452
  %5453 = load i32, i32* %5444
  %5454 = sub i1 %5383, true
  %5455 = xor i1 %5454, true
  %5456 = sext i1 %5454 to i32
  %5457 = and i32 %5456, %5453
  %5458 = sext i1 %5455 to i32
  %5459 = and i32 %5458, %5449
  %select.val.1784 = or i32 %5459, %5457
  store i32 %select.val.1784, i32* %select.ptr.1783, align 4
  %5460 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %5461 = sext i32 3 to i64
  %5462 = icmp slt i64 2, %5461
  %5463 = bitcast i64* %shadow to i32*
  %safe.1785 = or i1 %5382, %5462
  %select.ptr.1786 = select i1 %safe.1785, i32* %5460, i32* %5463
  %5464 = load i32, i32* %select.ptr.1786, align 4
  %5465 = shl i32 %5464, 1
  %5466 = sext i32 3 to i64
  %5467 = icmp slt i64 2, %5466
  %5468 = bitcast i64* %shadow to i32*
  %safe.1787 = or i1 %5381, %5467
  %select.ptr.1788 = select i1 %safe.1787, i32* %5460, i32* %5468
  %5469 = load i32, i32* %5460
  %5470 = sub i1 %5381, true
  %5471 = xor i1 %5470, true
  %5472 = sext i1 %5470 to i32
  %5473 = and i32 %5472, %5469
  %5474 = sext i1 %5471 to i32
  %5475 = and i32 %5474, %5465
  %select.val.1789 = or i32 %5475, %5473
  store i32 %select.val.1789, i32* %select.ptr.1788, align 4
  %5476 = load i32, i32* %0, align 4
  %5477 = and i32 %5476, 1
  %5478 = icmp ne i32 %5477, 0
  %5479 = or i1 %in.378, %5380
  store i1 %5479, i1* %out.187
  %5480 = load i1, i1* %out.187
  %in.379 = and i1 %5480, %5478
  %5481 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %5482 = sext i32 3 to i64
  %5483 = icmp slt i64 2, %5482
  %5484 = bitcast i64* %shadow to i32*
  %safe.1790 = or i1 %in.379, %5483
  %select.ptr.1791 = select i1 %safe.1790, i32* %5481, i32* %5484
  %5485 = load i32, i32* %select.ptr.1791, align 4
  %5486 = or i32 %5485, 1
  %5487 = sext i32 3 to i64
  %5488 = icmp slt i64 2, %5487
  %5489 = bitcast i64* %shadow to i32*
  %safe.1792 = or i1 %in.379, %5488
  %select.ptr.1793 = select i1 %safe.1792, i32* %5481, i32* %5489
  %5490 = load i32, i32* %5481
  %5491 = sub i1 %in.379, true
  %5492 = xor i1 %5491, true
  %5493 = sext i1 %5491 to i32
  %5494 = and i32 %5493, %5490
  %5495 = sext i1 %5492 to i32
  %5496 = and i32 %5495, %5486
  %select.val.1794 = or i32 %5496, %5494
  store i32 %select.val.1794, i32* %select.ptr.1793, align 4
  store i1 %in.379, i1* %out.188
  %5497 = load i1, i1* %out.187
  %5498 = xor i1 %5478, true
  %in.380 = and i1 %5497, %5498
  %5499 = load i1, i1* %out.188
  %5500 = or i1 %in.380, %5499
  %5501 = getelementptr inbounds i32, i32* %0, i64 1
  %5502 = icmp slt i64 1, %len.
  %5503 = bitcast i64* %shadow to i32*
  %safe.1795 = or i1 %5500, %5502
  %select.ptr.1796 = select i1 %safe.1795, i32* %5501, i32* %5503
  %5504 = load i32, i32* %select.ptr.1796, align 4
  %5505 = and i32 %5504, 1
  %5506 = icmp ne i32 %5505, 0
  %5507 = or i1 %in.380, %5499
  store i1 %5507, i1* %out.189
  %5508 = load i1, i1* %out.189
  %in.381 = and i1 %5508, %5506
  %5509 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %5510 = sext i32 3 to i64
  %5511 = icmp slt i64 1, %5510
  %5512 = bitcast i64* %shadow to i32*
  %safe.1797 = or i1 %in.381, %5511
  %select.ptr.1798 = select i1 %safe.1797, i32* %5509, i32* %5512
  %5513 = load i32, i32* %select.ptr.1798, align 4
  %5514 = or i32 %5513, 1
  %5515 = sext i32 3 to i64
  %5516 = icmp slt i64 1, %5515
  %5517 = bitcast i64* %shadow to i32*
  %safe.1799 = or i1 %in.381, %5516
  %select.ptr.1800 = select i1 %safe.1799, i32* %5509, i32* %5517
  %5518 = load i32, i32* %5509
  %5519 = sub i1 %in.381, true
  %5520 = xor i1 %5519, true
  %5521 = sext i1 %5519 to i32
  %5522 = and i32 %5521, %5518
  %5523 = sext i1 %5520 to i32
  %5524 = and i32 %5523, %5514
  %select.val.1801 = or i32 %5524, %5522
  store i32 %select.val.1801, i32* %select.ptr.1800, align 4
  store i1 %in.381, i1* %out.190
  %5525 = load i1, i1* %out.189
  %5526 = xor i1 %5506, true
  %in.382 = and i1 %5525, %5526
  %5527 = load i1, i1* %out.190
  %5528 = or i1 %in.382, %5527
  %5529 = getelementptr inbounds i32, i32* %0, i64 2
  %5530 = icmp slt i64 2, %len.
  %5531 = bitcast i64* %shadow to i32*
  %safe.1802 = or i1 %5528, %5530
  %select.ptr.1803 = select i1 %safe.1802, i32* %5529, i32* %5531
  %5532 = load i32, i32* %select.ptr.1803, align 4
  %5533 = and i32 %5532, 1
  %5534 = icmp ne i32 %5533, 0
  %5535 = or i1 %in.382, %5527
  store i1 %5535, i1* %out.191
  %5536 = load i1, i1* %out.191
  %in.383 = and i1 %5536, %5534
  %5537 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %5538 = sext i32 3 to i64
  %5539 = icmp slt i64 0, %5538
  %5540 = bitcast i64* %shadow to i32*
  %safe.1804 = or i1 %in.383, %5539
  %select.ptr.1805 = select i1 %safe.1804, i32* %5537, i32* %5540
  %5541 = load i32, i32* %select.ptr.1805, align 4
  %5542 = or i32 %5541, 1
  %5543 = sext i32 3 to i64
  %5544 = icmp slt i64 0, %5543
  %5545 = bitcast i64* %shadow to i32*
  %safe.1806 = or i1 %in.383, %5544
  %select.ptr.1807 = select i1 %safe.1806, i32* %5537, i32* %5545
  %5546 = load i32, i32* %5537
  %5547 = sub i1 %in.383, true
  %5548 = xor i1 %5547, true
  %5549 = sext i1 %5547 to i32
  %5550 = and i32 %5549, %5546
  %5551 = sext i1 %5548 to i32
  %5552 = and i32 %5551, %5542
  %select.val.1808 = or i32 %5552, %5550
  store i32 %select.val.1808, i32* %select.ptr.1807, align 4
  store i1 %in.383, i1* %out.192
  %5553 = load i1, i1* %out.191
  %5554 = xor i1 %5534, true
  %in.384 = and i1 %5553, %5554
  %5555 = load i1, i1* %out.192
  %5556 = or i1 %in.384, %5555
  %5557 = or i1 %in.384, %5555
  %5558 = or i1 %in.384, %5555
  %5559 = or i1 %in.384, %5555
  %5560 = or i1 %in.384, %5555
  %5561 = or i1 %in.384, %5555
  %5562 = or i1 %in.384, %5555
  %5563 = or i1 %in.384, %5555
  %5564 = or i1 %in.384, %5555
  %5565 = or i1 %in.384, %5555
  %5566 = or i1 %in.384, %5555
  %5567 = load i32, i32* %0, align 4
  %5568 = ashr i32 %5567, 1
  %5569 = load i32, i32* %0
  %5570 = sub i1 %5566, true
  %5571 = xor i1 %5570, true
  %5572 = sext i1 %5570 to i32
  %5573 = and i32 %5572, %5569
  %5574 = sext i1 %5571 to i32
  %5575 = and i32 %5574, %5568
  %select.val.1809 = or i32 %5575, %5573
  store i32 %select.val.1809, i32* %0, align 4
  %5576 = getelementptr inbounds i32, i32* %0, i64 1
  %5577 = icmp slt i64 1, %len.
  %5578 = bitcast i64* %shadow to i32*
  %safe.1810 = or i1 %5565, %5577
  %select.ptr.1811 = select i1 %safe.1810, i32* %5576, i32* %5578
  %5579 = load i32, i32* %select.ptr.1811, align 4
  %5580 = ashr i32 %5579, 1
  %5581 = icmp slt i64 1, %len.
  %5582 = bitcast i64* %shadow to i32*
  %safe.1812 = or i1 %5564, %5581
  %select.ptr.1813 = select i1 %safe.1812, i32* %5576, i32* %5582
  %5583 = load i32, i32* %5576
  %5584 = sub i1 %5564, true
  %5585 = xor i1 %5584, true
  %5586 = sext i1 %5584 to i32
  %5587 = and i32 %5586, %5583
  %5588 = sext i1 %5585 to i32
  %5589 = and i32 %5588, %5580
  %select.val.1814 = or i32 %5589, %5587
  store i32 %select.val.1814, i32* %select.ptr.1813, align 4
  %5590 = getelementptr inbounds i32, i32* %0, i64 2
  %5591 = icmp slt i64 2, %len.
  %5592 = bitcast i64* %shadow to i32*
  %safe.1815 = or i1 %5563, %5591
  %select.ptr.1816 = select i1 %safe.1815, i32* %5590, i32* %5592
  %5593 = load i32, i32* %select.ptr.1816, align 4
  %5594 = ashr i32 %5593, 1
  %5595 = icmp slt i64 2, %len.
  %5596 = bitcast i64* %shadow to i32*
  %safe.1817 = or i1 %5562, %5595
  %select.ptr.1818 = select i1 %safe.1817, i32* %5590, i32* %5596
  %5597 = load i32, i32* %5590
  %5598 = sub i1 %5562, true
  %5599 = xor i1 %5598, true
  %5600 = sext i1 %5598 to i32
  %5601 = and i32 %5600, %5597
  %5602 = sext i1 %5599 to i32
  %5603 = and i32 %5602, %5594
  %select.val.1819 = or i32 %5603, %5601
  store i32 %select.val.1819, i32* %select.ptr.1818, align 4
  %5604 = sext i32 3 to i64
  %5605 = icmp slt i64 0, %5604
  %5606 = bitcast i64* %shadow to i32*
  %safe.1820 = or i1 %5561, %5605
  %select.ptr.1821 = select i1 %safe.1820, i32* %6, i32* %5606
  %5607 = load i32, i32* %select.ptr.1821, align 4
  %5608 = load i32, i32* %0
  %5609 = sub i1 %5560, true
  %5610 = xor i1 %5609, true
  %5611 = sext i1 %5609 to i32
  %5612 = and i32 %5611, %5608
  %5613 = sext i1 %5610 to i32
  %5614 = and i32 %5613, %5607
  %select.val.1822 = or i32 %5614, %5612
  store i32 %select.val.1822, i32* %0, align 4
  %5615 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  %5616 = sext i32 3 to i64
  %5617 = icmp slt i64 1, %5616
  %5618 = bitcast i64* %shadow to i32*
  %safe.1823 = or i1 %5559, %5617
  %select.ptr.1824 = select i1 %safe.1823, i32* %5615, i32* %5618
  %5619 = load i32, i32* %select.ptr.1824, align 4
  %5620 = getelementptr inbounds i32, i32* %0, i64 1
  %5621 = icmp slt i64 1, %len.
  %5622 = bitcast i64* %shadow to i32*
  %safe.1825 = or i1 %5558, %5621
  %select.ptr.1826 = select i1 %safe.1825, i32* %5620, i32* %5622
  %5623 = load i32, i32* %5620
  %5624 = sub i1 %5558, true
  %5625 = xor i1 %5624, true
  %5626 = sext i1 %5624 to i32
  %5627 = and i32 %5626, %5623
  %5628 = sext i1 %5625 to i32
  %5629 = and i32 %5628, %5619
  %select.val.1827 = or i32 %5629, %5627
  store i32 %select.val.1827, i32* %select.ptr.1826, align 4
  %5630 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %5631 = sext i32 3 to i64
  %5632 = icmp slt i64 2, %5631
  %5633 = bitcast i64* %shadow to i32*
  %safe.1828 = or i1 %5557, %5632
  %select.ptr.1829 = select i1 %safe.1828, i32* %5630, i32* %5633
  %5634 = load i32, i32* %select.ptr.1829, align 4
  %5635 = getelementptr inbounds i32, i32* %0, i64 2
  %5636 = icmp slt i64 2, %len.
  %5637 = bitcast i64* %shadow to i32*
  %safe.1830 = or i1 %5556, %5636
  %select.ptr.1831 = select i1 %safe.1830, i32* %5635, i32* %5637
  %5638 = load i32, i32* %5635
  %5639 = sub i1 %5556, true
  %5640 = xor i1 %5639, true
  %5641 = sext i1 %5639 to i32
  %5642 = and i32 %5641, %5638
  %5643 = sext i1 %5640 to i32
  %5644 = and i32 %5643, %5634
  %select.val.1832 = or i32 %5644, %5642
  store i32 %select.val.1832, i32* %select.ptr.1831, align 4
  %5645 = or i1 %in.384, %5555
  store i1 %5645, i1* %out.193
  ret void
}

attributes #0 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
