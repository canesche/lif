; ModuleID = 'comp/llvm-ir/main1.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [32 x i32], align 16
  %3 = alloca [32 x i32], align 16
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i64 0, i64* %4, align 8
  br label %6

6:                                                ; preds = %16, %0
  %7 = load i64, i64* %4, align 8
  %8 = icmp ult i64 %7, 32
  br i1 %8, label %9, label %19

9:                                                ; preds = %6
  %10 = load i64, i64* %4, align 8
  %11 = trunc i64 %10 to i32
  %12 = load i64, i64* %4, align 8
  %13 = getelementptr inbounds [32 x i32], [32 x i32]* %3, i64 0, i64 %12
  store i32 %11, i32* %13, align 4
  %14 = load i64, i64* %4, align 8
  %15 = getelementptr inbounds [32 x i32], [32 x i32]* %2, i64 0, i64 %14
  store i32 %11, i32* %15, align 4
  br label %16

16:                                               ; preds = %9
  %17 = load i64, i64* %4, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %4, align 8
  br label %6

19:                                               ; preds = %6
  %20 = getelementptr inbounds [32 x i32], [32 x i32]* %2, i64 0, i64 0
  %21 = getelementptr inbounds [32 x i32], [32 x i32]* %3, i64 0, i64 0
  %22 = sext i32 32 to i64
  %23 = sext i32 32 to i64
  %24 = call i32 @comp(i32* %20, i64 %22, i32* %21, i64 %23)
  store i32 %24, i32* %5, align 4
  %25 = load i32, i32* %5, align 4
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %25)
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

define i32 @comp(i32* %0, i64 %len., i32* %1, i64 %len.1) {
  %out. = alloca i1
  store i1 true, i1* %out.
  %out.1 = alloca i1
  %out.2 = alloca i1
  %out.3 = alloca i1
  %out.4 = alloca i1
  %out.5 = alloca i1
  %out.6 = alloca i1
  %out.7 = alloca i1
  %out.8 = alloca i1
  %out.9 = alloca i1
  %out.10 = alloca i1
  %out.11 = alloca i1
  %out.12 = alloca i1
  %out.13 = alloca i1
  %out.14 = alloca i1
  %out.15 = alloca i1
  %out.16 = alloca i1
  %out.17 = alloca i1
  %out.18 = alloca i1
  %out.19 = alloca i1
  %out.20 = alloca i1
  %out.21 = alloca i1
  %out.22 = alloca i1
  %out.23 = alloca i1
  %out.24 = alloca i1
  %out.25 = alloca i1
  %out.26 = alloca i1
  %out.27 = alloca i1
  %out.28 = alloca i1
  %out.29 = alloca i1
  %out.30 = alloca i1
  %out.31 = alloca i1
  %out.32 = alloca i1
  %out.33 = alloca i1
  %3 = load i32, i32* %0, align 4
  %4 = load i32, i32* %1, align 4
  %5 = icmp ne i32 %3, %4
  %shadow = alloca i64
  %6 = load i1, i1* %out.
  %7 = xor i1 %5, true
  %in. = and i1 %6, %7
  store i1 %in., i1* %out.1
  %8 = getelementptr inbounds i32, i32* %0, i64 1
  %9 = load i1, i1* %out.1
  %10 = icmp slt i64 1, %len.
  %11 = bitcast i64* %shadow to i32*
  %safe. = or i1 %9, %10
  %select.ptr. = select i1 %safe., i32* %8, i32* %11
  %12 = load i32, i32* %select.ptr., align 4
  %13 = getelementptr inbounds i32, i32* %1, i64 1
  %14 = load i1, i1* %out.1
  %15 = icmp slt i64 1, %len.1
  %16 = bitcast i64* %shadow to i32*
  %safe.2 = or i1 %14, %15
  %select.ptr.3 = select i1 %safe.2, i32* %13, i32* %16
  %17 = load i32, i32* %select.ptr.3, align 4
  %18 = icmp ne i32 %12, %17
  %19 = load i1, i1* %out.1
  %20 = xor i1 %18, true
  %in.65 = and i1 %19, %20
  store i1 %in.65, i1* %out.4
  %21 = getelementptr inbounds i32, i32* %0, i64 2
  %22 = load i1, i1* %out.4
  %23 = icmp slt i64 2, %len.
  %24 = bitcast i64* %shadow to i32*
  %safe.4 = or i1 %22, %23
  %select.ptr.5 = select i1 %safe.4, i32* %21, i32* %24
  %25 = load i32, i32* %select.ptr.5, align 4
  %26 = getelementptr inbounds i32, i32* %1, i64 2
  %27 = load i1, i1* %out.4
  %28 = icmp slt i64 2, %len.1
  %29 = bitcast i64* %shadow to i32*
  %safe.6 = or i1 %27, %28
  %select.ptr.7 = select i1 %safe.6, i32* %26, i32* %29
  %30 = load i32, i32* %select.ptr.7, align 4
  %31 = icmp ne i32 %25, %30
  %32 = load i1, i1* %out.4
  %33 = xor i1 %31, true
  %in.66 = and i1 %32, %33
  store i1 %in.66, i1* %out.5
  %34 = getelementptr inbounds i32, i32* %0, i64 3
  %35 = load i1, i1* %out.5
  %36 = icmp slt i64 3, %len.
  %37 = bitcast i64* %shadow to i32*
  %safe.8 = or i1 %35, %36
  %select.ptr.9 = select i1 %safe.8, i32* %34, i32* %37
  %38 = load i32, i32* %select.ptr.9, align 4
  %39 = getelementptr inbounds i32, i32* %1, i64 3
  %40 = load i1, i1* %out.5
  %41 = icmp slt i64 3, %len.1
  %42 = bitcast i64* %shadow to i32*
  %safe.10 = or i1 %40, %41
  %select.ptr.11 = select i1 %safe.10, i32* %39, i32* %42
  %43 = load i32, i32* %select.ptr.11, align 4
  %44 = icmp ne i32 %38, %43
  %45 = load i1, i1* %out.5
  %46 = xor i1 %44, true
  %in.67 = and i1 %45, %46
  store i1 %in.67, i1* %out.6
  %47 = getelementptr inbounds i32, i32* %0, i64 4
  %48 = load i1, i1* %out.6
  %49 = icmp slt i64 4, %len.
  %50 = bitcast i64* %shadow to i32*
  %safe.12 = or i1 %48, %49
  %select.ptr.13 = select i1 %safe.12, i32* %47, i32* %50
  %51 = load i32, i32* %select.ptr.13, align 4
  %52 = getelementptr inbounds i32, i32* %1, i64 4
  %53 = load i1, i1* %out.6
  %54 = icmp slt i64 4, %len.1
  %55 = bitcast i64* %shadow to i32*
  %safe.14 = or i1 %53, %54
  %select.ptr.15 = select i1 %safe.14, i32* %52, i32* %55
  %56 = load i32, i32* %select.ptr.15, align 4
  %57 = icmp ne i32 %51, %56
  %58 = load i1, i1* %out.6
  %59 = xor i1 %57, true
  %in.68 = and i1 %58, %59
  store i1 %in.68, i1* %out.7
  %60 = getelementptr inbounds i32, i32* %0, i64 5
  %61 = load i1, i1* %out.7
  %62 = icmp slt i64 5, %len.
  %63 = bitcast i64* %shadow to i32*
  %safe.16 = or i1 %61, %62
  %select.ptr.17 = select i1 %safe.16, i32* %60, i32* %63
  %64 = load i32, i32* %select.ptr.17, align 4
  %65 = getelementptr inbounds i32, i32* %1, i64 5
  %66 = load i1, i1* %out.7
  %67 = icmp slt i64 5, %len.1
  %68 = bitcast i64* %shadow to i32*
  %safe.18 = or i1 %66, %67
  %select.ptr.19 = select i1 %safe.18, i32* %65, i32* %68
  %69 = load i32, i32* %select.ptr.19, align 4
  %70 = icmp ne i32 %64, %69
  %71 = load i1, i1* %out.7
  %72 = xor i1 %70, true
  %in.69 = and i1 %71, %72
  store i1 %in.69, i1* %out.8
  %73 = getelementptr inbounds i32, i32* %0, i64 6
  %74 = load i1, i1* %out.8
  %75 = icmp slt i64 6, %len.
  %76 = bitcast i64* %shadow to i32*
  %safe.20 = or i1 %74, %75
  %select.ptr.21 = select i1 %safe.20, i32* %73, i32* %76
  %77 = load i32, i32* %select.ptr.21, align 4
  %78 = getelementptr inbounds i32, i32* %1, i64 6
  %79 = load i1, i1* %out.8
  %80 = icmp slt i64 6, %len.1
  %81 = bitcast i64* %shadow to i32*
  %safe.22 = or i1 %79, %80
  %select.ptr.23 = select i1 %safe.22, i32* %78, i32* %81
  %82 = load i32, i32* %select.ptr.23, align 4
  %83 = icmp ne i32 %77, %82
  %84 = load i1, i1* %out.8
  %85 = xor i1 %83, true
  %in.70 = and i1 %84, %85
  store i1 %in.70, i1* %out.9
  %86 = getelementptr inbounds i32, i32* %0, i64 7
  %87 = load i1, i1* %out.9
  %88 = icmp slt i64 7, %len.
  %89 = bitcast i64* %shadow to i32*
  %safe.24 = or i1 %87, %88
  %select.ptr.25 = select i1 %safe.24, i32* %86, i32* %89
  %90 = load i32, i32* %select.ptr.25, align 4
  %91 = getelementptr inbounds i32, i32* %1, i64 7
  %92 = load i1, i1* %out.9
  %93 = icmp slt i64 7, %len.1
  %94 = bitcast i64* %shadow to i32*
  %safe.26 = or i1 %92, %93
  %select.ptr.27 = select i1 %safe.26, i32* %91, i32* %94
  %95 = load i32, i32* %select.ptr.27, align 4
  %96 = icmp ne i32 %90, %95
  %97 = load i1, i1* %out.9
  %98 = xor i1 %96, true
  %in.71 = and i1 %97, %98
  store i1 %in.71, i1* %out.10
  %99 = getelementptr inbounds i32, i32* %0, i64 8
  %100 = load i1, i1* %out.10
  %101 = icmp slt i64 8, %len.
  %102 = bitcast i64* %shadow to i32*
  %safe.28 = or i1 %100, %101
  %select.ptr.29 = select i1 %safe.28, i32* %99, i32* %102
  %103 = load i32, i32* %select.ptr.29, align 4
  %104 = getelementptr inbounds i32, i32* %1, i64 8
  %105 = load i1, i1* %out.10
  %106 = icmp slt i64 8, %len.1
  %107 = bitcast i64* %shadow to i32*
  %safe.30 = or i1 %105, %106
  %select.ptr.31 = select i1 %safe.30, i32* %104, i32* %107
  %108 = load i32, i32* %select.ptr.31, align 4
  %109 = icmp ne i32 %103, %108
  %110 = load i1, i1* %out.10
  %111 = xor i1 %109, true
  %in.72 = and i1 %110, %111
  store i1 %in.72, i1* %out.11
  %112 = getelementptr inbounds i32, i32* %0, i64 9
  %113 = load i1, i1* %out.11
  %114 = icmp slt i64 9, %len.
  %115 = bitcast i64* %shadow to i32*
  %safe.32 = or i1 %113, %114
  %select.ptr.33 = select i1 %safe.32, i32* %112, i32* %115
  %116 = load i32, i32* %select.ptr.33, align 4
  %117 = getelementptr inbounds i32, i32* %1, i64 9
  %118 = load i1, i1* %out.11
  %119 = icmp slt i64 9, %len.1
  %120 = bitcast i64* %shadow to i32*
  %safe.34 = or i1 %118, %119
  %select.ptr.35 = select i1 %safe.34, i32* %117, i32* %120
  %121 = load i32, i32* %select.ptr.35, align 4
  %122 = icmp ne i32 %116, %121
  %123 = load i1, i1* %out.11
  %124 = xor i1 %122, true
  %in.73 = and i1 %123, %124
  store i1 %in.73, i1* %out.12
  %125 = getelementptr inbounds i32, i32* %0, i64 10
  %126 = load i1, i1* %out.12
  %127 = icmp slt i64 10, %len.
  %128 = bitcast i64* %shadow to i32*
  %safe.36 = or i1 %126, %127
  %select.ptr.37 = select i1 %safe.36, i32* %125, i32* %128
  %129 = load i32, i32* %select.ptr.37, align 4
  %130 = getelementptr inbounds i32, i32* %1, i64 10
  %131 = load i1, i1* %out.12
  %132 = icmp slt i64 10, %len.1
  %133 = bitcast i64* %shadow to i32*
  %safe.38 = or i1 %131, %132
  %select.ptr.39 = select i1 %safe.38, i32* %130, i32* %133
  %134 = load i32, i32* %select.ptr.39, align 4
  %135 = icmp ne i32 %129, %134
  %136 = load i1, i1* %out.12
  %137 = xor i1 %135, true
  %in.74 = and i1 %136, %137
  store i1 %in.74, i1* %out.13
  %138 = getelementptr inbounds i32, i32* %0, i64 11
  %139 = load i1, i1* %out.13
  %140 = icmp slt i64 11, %len.
  %141 = bitcast i64* %shadow to i32*
  %safe.40 = or i1 %139, %140
  %select.ptr.41 = select i1 %safe.40, i32* %138, i32* %141
  %142 = load i32, i32* %select.ptr.41, align 4
  %143 = getelementptr inbounds i32, i32* %1, i64 11
  %144 = load i1, i1* %out.13
  %145 = icmp slt i64 11, %len.1
  %146 = bitcast i64* %shadow to i32*
  %safe.42 = or i1 %144, %145
  %select.ptr.43 = select i1 %safe.42, i32* %143, i32* %146
  %147 = load i32, i32* %select.ptr.43, align 4
  %148 = icmp ne i32 %142, %147
  %149 = load i1, i1* %out.13
  %150 = xor i1 %148, true
  %in.75 = and i1 %149, %150
  store i1 %in.75, i1* %out.14
  %151 = getelementptr inbounds i32, i32* %0, i64 12
  %152 = load i1, i1* %out.14
  %153 = icmp slt i64 12, %len.
  %154 = bitcast i64* %shadow to i32*
  %safe.44 = or i1 %152, %153
  %select.ptr.45 = select i1 %safe.44, i32* %151, i32* %154
  %155 = load i32, i32* %select.ptr.45, align 4
  %156 = getelementptr inbounds i32, i32* %1, i64 12
  %157 = load i1, i1* %out.14
  %158 = icmp slt i64 12, %len.1
  %159 = bitcast i64* %shadow to i32*
  %safe.46 = or i1 %157, %158
  %select.ptr.47 = select i1 %safe.46, i32* %156, i32* %159
  %160 = load i32, i32* %select.ptr.47, align 4
  %161 = icmp ne i32 %155, %160
  %162 = load i1, i1* %out.14
  %163 = xor i1 %161, true
  %in.76 = and i1 %162, %163
  store i1 %in.76, i1* %out.15
  %164 = getelementptr inbounds i32, i32* %0, i64 13
  %165 = load i1, i1* %out.15
  %166 = icmp slt i64 13, %len.
  %167 = bitcast i64* %shadow to i32*
  %safe.48 = or i1 %165, %166
  %select.ptr.49 = select i1 %safe.48, i32* %164, i32* %167
  %168 = load i32, i32* %select.ptr.49, align 4
  %169 = getelementptr inbounds i32, i32* %1, i64 13
  %170 = load i1, i1* %out.15
  %171 = icmp slt i64 13, %len.1
  %172 = bitcast i64* %shadow to i32*
  %safe.50 = or i1 %170, %171
  %select.ptr.51 = select i1 %safe.50, i32* %169, i32* %172
  %173 = load i32, i32* %select.ptr.51, align 4
  %174 = icmp ne i32 %168, %173
  %175 = load i1, i1* %out.15
  %176 = xor i1 %174, true
  %in.77 = and i1 %175, %176
  store i1 %in.77, i1* %out.16
  %177 = getelementptr inbounds i32, i32* %0, i64 14
  %178 = load i1, i1* %out.16
  %179 = icmp slt i64 14, %len.
  %180 = bitcast i64* %shadow to i32*
  %safe.52 = or i1 %178, %179
  %select.ptr.53 = select i1 %safe.52, i32* %177, i32* %180
  %181 = load i32, i32* %select.ptr.53, align 4
  %182 = getelementptr inbounds i32, i32* %1, i64 14
  %183 = load i1, i1* %out.16
  %184 = icmp slt i64 14, %len.1
  %185 = bitcast i64* %shadow to i32*
  %safe.54 = or i1 %183, %184
  %select.ptr.55 = select i1 %safe.54, i32* %182, i32* %185
  %186 = load i32, i32* %select.ptr.55, align 4
  %187 = icmp ne i32 %181, %186
  %188 = load i1, i1* %out.16
  %189 = xor i1 %187, true
  %in.78 = and i1 %188, %189
  store i1 %in.78, i1* %out.17
  %190 = getelementptr inbounds i32, i32* %0, i64 15
  %191 = load i1, i1* %out.17
  %192 = icmp slt i64 15, %len.
  %193 = bitcast i64* %shadow to i32*
  %safe.56 = or i1 %191, %192
  %select.ptr.57 = select i1 %safe.56, i32* %190, i32* %193
  %194 = load i32, i32* %select.ptr.57, align 4
  %195 = getelementptr inbounds i32, i32* %1, i64 15
  %196 = load i1, i1* %out.17
  %197 = icmp slt i64 15, %len.1
  %198 = bitcast i64* %shadow to i32*
  %safe.58 = or i1 %196, %197
  %select.ptr.59 = select i1 %safe.58, i32* %195, i32* %198
  %199 = load i32, i32* %select.ptr.59, align 4
  %200 = icmp ne i32 %194, %199
  %201 = load i1, i1* %out.17
  %202 = xor i1 %200, true
  %in.79 = and i1 %201, %202
  store i1 %in.79, i1* %out.18
  %203 = getelementptr inbounds i32, i32* %0, i64 16
  %204 = load i1, i1* %out.18
  %205 = icmp slt i64 16, %len.
  %206 = bitcast i64* %shadow to i32*
  %safe.60 = or i1 %204, %205
  %select.ptr.61 = select i1 %safe.60, i32* %203, i32* %206
  %207 = load i32, i32* %select.ptr.61, align 4
  %208 = getelementptr inbounds i32, i32* %1, i64 16
  %209 = load i1, i1* %out.18
  %210 = icmp slt i64 16, %len.1
  %211 = bitcast i64* %shadow to i32*
  %safe.62 = or i1 %209, %210
  %select.ptr.63 = select i1 %safe.62, i32* %208, i32* %211
  %212 = load i32, i32* %select.ptr.63, align 4
  %213 = icmp ne i32 %207, %212
  %214 = load i1, i1* %out.18
  %215 = xor i1 %213, true
  %in.80 = and i1 %214, %215
  store i1 %in.80, i1* %out.19
  %216 = getelementptr inbounds i32, i32* %0, i64 17
  %217 = load i1, i1* %out.19
  %218 = icmp slt i64 17, %len.
  %219 = bitcast i64* %shadow to i32*
  %safe.64 = or i1 %217, %218
  %select.ptr.65 = select i1 %safe.64, i32* %216, i32* %219
  %220 = load i32, i32* %select.ptr.65, align 4
  %221 = getelementptr inbounds i32, i32* %1, i64 17
  %222 = load i1, i1* %out.19
  %223 = icmp slt i64 17, %len.1
  %224 = bitcast i64* %shadow to i32*
  %safe.66 = or i1 %222, %223
  %select.ptr.67 = select i1 %safe.66, i32* %221, i32* %224
  %225 = load i32, i32* %select.ptr.67, align 4
  %226 = icmp ne i32 %220, %225
  %227 = load i1, i1* %out.19
  %228 = xor i1 %226, true
  %in.81 = and i1 %227, %228
  store i1 %in.81, i1* %out.20
  %229 = getelementptr inbounds i32, i32* %0, i64 18
  %230 = load i1, i1* %out.20
  %231 = icmp slt i64 18, %len.
  %232 = bitcast i64* %shadow to i32*
  %safe.68 = or i1 %230, %231
  %select.ptr.69 = select i1 %safe.68, i32* %229, i32* %232
  %233 = load i32, i32* %select.ptr.69, align 4
  %234 = getelementptr inbounds i32, i32* %1, i64 18
  %235 = load i1, i1* %out.20
  %236 = icmp slt i64 18, %len.1
  %237 = bitcast i64* %shadow to i32*
  %safe.70 = or i1 %235, %236
  %select.ptr.71 = select i1 %safe.70, i32* %234, i32* %237
  %238 = load i32, i32* %select.ptr.71, align 4
  %239 = icmp ne i32 %233, %238
  %240 = load i1, i1* %out.20
  %241 = xor i1 %239, true
  %in.82 = and i1 %240, %241
  store i1 %in.82, i1* %out.21
  %242 = getelementptr inbounds i32, i32* %0, i64 19
  %243 = load i1, i1* %out.21
  %244 = icmp slt i64 19, %len.
  %245 = bitcast i64* %shadow to i32*
  %safe.72 = or i1 %243, %244
  %select.ptr.73 = select i1 %safe.72, i32* %242, i32* %245
  %246 = load i32, i32* %select.ptr.73, align 4
  %247 = getelementptr inbounds i32, i32* %1, i64 19
  %248 = load i1, i1* %out.21
  %249 = icmp slt i64 19, %len.1
  %250 = bitcast i64* %shadow to i32*
  %safe.74 = or i1 %248, %249
  %select.ptr.75 = select i1 %safe.74, i32* %247, i32* %250
  %251 = load i32, i32* %select.ptr.75, align 4
  %252 = icmp ne i32 %246, %251
  %253 = load i1, i1* %out.21
  %254 = xor i1 %252, true
  %in.83 = and i1 %253, %254
  store i1 %in.83, i1* %out.22
  %255 = getelementptr inbounds i32, i32* %0, i64 20
  %256 = load i1, i1* %out.22
  %257 = icmp slt i64 20, %len.
  %258 = bitcast i64* %shadow to i32*
  %safe.76 = or i1 %256, %257
  %select.ptr.77 = select i1 %safe.76, i32* %255, i32* %258
  %259 = load i32, i32* %select.ptr.77, align 4
  %260 = getelementptr inbounds i32, i32* %1, i64 20
  %261 = load i1, i1* %out.22
  %262 = icmp slt i64 20, %len.1
  %263 = bitcast i64* %shadow to i32*
  %safe.78 = or i1 %261, %262
  %select.ptr.79 = select i1 %safe.78, i32* %260, i32* %263
  %264 = load i32, i32* %select.ptr.79, align 4
  %265 = icmp ne i32 %259, %264
  %266 = load i1, i1* %out.22
  %267 = xor i1 %265, true
  %in.84 = and i1 %266, %267
  store i1 %in.84, i1* %out.23
  %268 = getelementptr inbounds i32, i32* %0, i64 21
  %269 = load i1, i1* %out.23
  %270 = icmp slt i64 21, %len.
  %271 = bitcast i64* %shadow to i32*
  %safe.80 = or i1 %269, %270
  %select.ptr.81 = select i1 %safe.80, i32* %268, i32* %271
  %272 = load i32, i32* %select.ptr.81, align 4
  %273 = getelementptr inbounds i32, i32* %1, i64 21
  %274 = load i1, i1* %out.23
  %275 = icmp slt i64 21, %len.1
  %276 = bitcast i64* %shadow to i32*
  %safe.82 = or i1 %274, %275
  %select.ptr.83 = select i1 %safe.82, i32* %273, i32* %276
  %277 = load i32, i32* %select.ptr.83, align 4
  %278 = icmp ne i32 %272, %277
  %279 = load i1, i1* %out.23
  %280 = xor i1 %278, true
  %in.85 = and i1 %279, %280
  store i1 %in.85, i1* %out.24
  %281 = getelementptr inbounds i32, i32* %0, i64 22
  %282 = load i1, i1* %out.24
  %283 = icmp slt i64 22, %len.
  %284 = bitcast i64* %shadow to i32*
  %safe.84 = or i1 %282, %283
  %select.ptr.85 = select i1 %safe.84, i32* %281, i32* %284
  %285 = load i32, i32* %select.ptr.85, align 4
  %286 = getelementptr inbounds i32, i32* %1, i64 22
  %287 = load i1, i1* %out.24
  %288 = icmp slt i64 22, %len.1
  %289 = bitcast i64* %shadow to i32*
  %safe.86 = or i1 %287, %288
  %select.ptr.87 = select i1 %safe.86, i32* %286, i32* %289
  %290 = load i32, i32* %select.ptr.87, align 4
  %291 = icmp ne i32 %285, %290
  %292 = load i1, i1* %out.24
  %293 = xor i1 %291, true
  %in.86 = and i1 %292, %293
  store i1 %in.86, i1* %out.25
  %294 = getelementptr inbounds i32, i32* %0, i64 23
  %295 = load i1, i1* %out.25
  %296 = icmp slt i64 23, %len.
  %297 = bitcast i64* %shadow to i32*
  %safe.88 = or i1 %295, %296
  %select.ptr.89 = select i1 %safe.88, i32* %294, i32* %297
  %298 = load i32, i32* %select.ptr.89, align 4
  %299 = getelementptr inbounds i32, i32* %1, i64 23
  %300 = load i1, i1* %out.25
  %301 = icmp slt i64 23, %len.1
  %302 = bitcast i64* %shadow to i32*
  %safe.90 = or i1 %300, %301
  %select.ptr.91 = select i1 %safe.90, i32* %299, i32* %302
  %303 = load i32, i32* %select.ptr.91, align 4
  %304 = icmp ne i32 %298, %303
  %305 = load i1, i1* %out.25
  %306 = xor i1 %304, true
  %in.87 = and i1 %305, %306
  store i1 %in.87, i1* %out.26
  %307 = getelementptr inbounds i32, i32* %0, i64 24
  %308 = load i1, i1* %out.26
  %309 = icmp slt i64 24, %len.
  %310 = bitcast i64* %shadow to i32*
  %safe.92 = or i1 %308, %309
  %select.ptr.93 = select i1 %safe.92, i32* %307, i32* %310
  %311 = load i32, i32* %select.ptr.93, align 4
  %312 = getelementptr inbounds i32, i32* %1, i64 24
  %313 = load i1, i1* %out.26
  %314 = icmp slt i64 24, %len.1
  %315 = bitcast i64* %shadow to i32*
  %safe.94 = or i1 %313, %314
  %select.ptr.95 = select i1 %safe.94, i32* %312, i32* %315
  %316 = load i32, i32* %select.ptr.95, align 4
  %317 = icmp ne i32 %311, %316
  %318 = load i1, i1* %out.26
  %319 = xor i1 %317, true
  %in.88 = and i1 %318, %319
  store i1 %in.88, i1* %out.27
  %320 = getelementptr inbounds i32, i32* %0, i64 25
  %321 = load i1, i1* %out.27
  %322 = icmp slt i64 25, %len.
  %323 = bitcast i64* %shadow to i32*
  %safe.96 = or i1 %321, %322
  %select.ptr.97 = select i1 %safe.96, i32* %320, i32* %323
  %324 = load i32, i32* %select.ptr.97, align 4
  %325 = getelementptr inbounds i32, i32* %1, i64 25
  %326 = load i1, i1* %out.27
  %327 = icmp slt i64 25, %len.1
  %328 = bitcast i64* %shadow to i32*
  %safe.98 = or i1 %326, %327
  %select.ptr.99 = select i1 %safe.98, i32* %325, i32* %328
  %329 = load i32, i32* %select.ptr.99, align 4
  %330 = icmp ne i32 %324, %329
  %331 = load i1, i1* %out.27
  %332 = xor i1 %330, true
  %in.89 = and i1 %331, %332
  store i1 %in.89, i1* %out.28
  %333 = getelementptr inbounds i32, i32* %0, i64 26
  %334 = load i1, i1* %out.28
  %335 = icmp slt i64 26, %len.
  %336 = bitcast i64* %shadow to i32*
  %safe.100 = or i1 %334, %335
  %select.ptr.101 = select i1 %safe.100, i32* %333, i32* %336
  %337 = load i32, i32* %select.ptr.101, align 4
  %338 = getelementptr inbounds i32, i32* %1, i64 26
  %339 = load i1, i1* %out.28
  %340 = icmp slt i64 26, %len.1
  %341 = bitcast i64* %shadow to i32*
  %safe.102 = or i1 %339, %340
  %select.ptr.103 = select i1 %safe.102, i32* %338, i32* %341
  %342 = load i32, i32* %select.ptr.103, align 4
  %343 = icmp ne i32 %337, %342
  %344 = load i1, i1* %out.28
  %345 = xor i1 %343, true
  %in.90 = and i1 %344, %345
  store i1 %in.90, i1* %out.29
  %346 = getelementptr inbounds i32, i32* %0, i64 27
  %347 = load i1, i1* %out.29
  %348 = icmp slt i64 27, %len.
  %349 = bitcast i64* %shadow to i32*
  %safe.104 = or i1 %347, %348
  %select.ptr.105 = select i1 %safe.104, i32* %346, i32* %349
  %350 = load i32, i32* %select.ptr.105, align 4
  %351 = getelementptr inbounds i32, i32* %1, i64 27
  %352 = load i1, i1* %out.29
  %353 = icmp slt i64 27, %len.1
  %354 = bitcast i64* %shadow to i32*
  %safe.106 = or i1 %352, %353
  %select.ptr.107 = select i1 %safe.106, i32* %351, i32* %354
  %355 = load i32, i32* %select.ptr.107, align 4
  %356 = icmp ne i32 %350, %355
  %357 = load i1, i1* %out.29
  %358 = xor i1 %356, true
  %in.91 = and i1 %357, %358
  store i1 %in.91, i1* %out.30
  %359 = getelementptr inbounds i32, i32* %0, i64 28
  %360 = load i1, i1* %out.30
  %361 = icmp slt i64 28, %len.
  %362 = bitcast i64* %shadow to i32*
  %safe.108 = or i1 %360, %361
  %select.ptr.109 = select i1 %safe.108, i32* %359, i32* %362
  %363 = load i32, i32* %select.ptr.109, align 4
  %364 = getelementptr inbounds i32, i32* %1, i64 28
  %365 = load i1, i1* %out.30
  %366 = icmp slt i64 28, %len.1
  %367 = bitcast i64* %shadow to i32*
  %safe.110 = or i1 %365, %366
  %select.ptr.111 = select i1 %safe.110, i32* %364, i32* %367
  %368 = load i32, i32* %select.ptr.111, align 4
  %369 = icmp ne i32 %363, %368
  %370 = load i1, i1* %out.30
  %371 = xor i1 %369, true
  %in.92 = and i1 %370, %371
  store i1 %in.92, i1* %out.31
  %372 = getelementptr inbounds i32, i32* %0, i64 29
  %373 = load i1, i1* %out.31
  %374 = icmp slt i64 29, %len.
  %375 = bitcast i64* %shadow to i32*
  %safe.112 = or i1 %373, %374
  %select.ptr.113 = select i1 %safe.112, i32* %372, i32* %375
  %376 = load i32, i32* %select.ptr.113, align 4
  %377 = getelementptr inbounds i32, i32* %1, i64 29
  %378 = load i1, i1* %out.31
  %379 = icmp slt i64 29, %len.1
  %380 = bitcast i64* %shadow to i32*
  %safe.114 = or i1 %378, %379
  %select.ptr.115 = select i1 %safe.114, i32* %377, i32* %380
  %381 = load i32, i32* %select.ptr.115, align 4
  %382 = icmp ne i32 %376, %381
  %383 = load i1, i1* %out.31
  %384 = xor i1 %382, true
  %in.93 = and i1 %383, %384
  store i1 %in.93, i1* %out.32
  %385 = getelementptr inbounds i32, i32* %0, i64 30
  %386 = load i1, i1* %out.32
  %387 = icmp slt i64 30, %len.
  %388 = bitcast i64* %shadow to i32*
  %safe.116 = or i1 %386, %387
  %select.ptr.117 = select i1 %safe.116, i32* %385, i32* %388
  %389 = load i32, i32* %select.ptr.117, align 4
  %390 = getelementptr inbounds i32, i32* %1, i64 30
  %391 = load i1, i1* %out.32
  %392 = icmp slt i64 30, %len.1
  %393 = bitcast i64* %shadow to i32*
  %safe.118 = or i1 %391, %392
  %select.ptr.119 = select i1 %safe.118, i32* %390, i32* %393
  %394 = load i32, i32* %select.ptr.119, align 4
  %395 = icmp ne i32 %389, %394
  %396 = load i1, i1* %out.32
  %397 = xor i1 %395, true
  %in.94 = and i1 %396, %397
  store i1 %in.94, i1* %out.33
  %398 = getelementptr inbounds i32, i32* %0, i64 31
  %399 = load i1, i1* %out.33
  %400 = icmp slt i64 31, %len.
  %401 = bitcast i64* %shadow to i32*
  %safe.120 = or i1 %399, %400
  %select.ptr.121 = select i1 %safe.120, i32* %398, i32* %401
  %402 = load i32, i32* %select.ptr.121, align 4
  %403 = getelementptr inbounds i32, i32* %1, i64 31
  %404 = load i1, i1* %out.33
  %405 = icmp slt i64 31, %len.1
  %406 = bitcast i64* %shadow to i32*
  %safe.122 = or i1 %404, %405
  %select.ptr.123 = select i1 %safe.122, i32* %403, i32* %406
  %407 = load i32, i32* %select.ptr.123, align 4
  %408 = icmp ne i32 %402, %407
  %spec.select = select i1 %408, i32 0, i32 1
  %409 = load i1, i1* %out.
  %in.64 = and i1 %409, %5
  %410 = load i1, i1* %out.1
  %in.63 = and i1 %410, %18
  %411 = load i1, i1* %out.4
  %in.62 = and i1 %411, %31
  %412 = load i1, i1* %out.5
  %in.61 = and i1 %412, %44
  %413 = load i1, i1* %out.6
  %in.60 = and i1 %413, %57
  %414 = load i1, i1* %out.7
  %in.59 = and i1 %414, %70
  %415 = load i1, i1* %out.8
  %in.58 = and i1 %415, %83
  %416 = load i1, i1* %out.9
  %in.57 = and i1 %416, %96
  %417 = load i1, i1* %out.10
  %in.56 = and i1 %417, %109
  %418 = load i1, i1* %out.11
  %in.55 = and i1 %418, %122
  %419 = load i1, i1* %out.12
  %in.54 = and i1 %419, %135
  %420 = load i1, i1* %out.13
  %in.53 = and i1 %420, %148
  %421 = load i1, i1* %out.14
  %in.52 = and i1 %421, %161
  %422 = load i1, i1* %out.15
  %in.51 = and i1 %422, %174
  %423 = load i1, i1* %out.16
  %in.50 = and i1 %423, %187
  %424 = load i1, i1* %out.17
  %in.49 = and i1 %424, %200
  %425 = load i1, i1* %out.18
  %in.48 = and i1 %425, %213
  %426 = load i1, i1* %out.19
  %in.47 = and i1 %426, %226
  %427 = load i1, i1* %out.20
  %in.46 = and i1 %427, %239
  %428 = load i1, i1* %out.21
  %in.45 = and i1 %428, %252
  %429 = load i1, i1* %out.22
  %in.44 = and i1 %429, %265
  %430 = load i1, i1* %out.23
  %in.43 = and i1 %430, %278
  %431 = load i1, i1* %out.24
  %in.42 = and i1 %431, %291
  %432 = load i1, i1* %out.25
  %in.41 = and i1 %432, %304
  %433 = load i1, i1* %out.26
  %in.40 = and i1 %433, %317
  %434 = load i1, i1* %out.27
  %in.39 = and i1 %434, %330
  %435 = load i1, i1* %out.28
  %in.38 = and i1 %435, %343
  %436 = load i1, i1* %out.29
  %in.37 = and i1 %436, %356
  %437 = load i1, i1* %out.30
  %in.36 = and i1 %437, %369
  %438 = load i1, i1* %out.31
  %in.35 = and i1 %438, %382
  %439 = load i1, i1* %out.32
  %in.34 = and i1 %439, %395
  %440 = or i1 %in.64, %in.63
  %441 = or i1 %440, %in.62
  %442 = or i1 %441, %in.61
  %443 = or i1 %442, %in.60
  %444 = or i1 %443, %in.59
  %445 = or i1 %444, %in.58
  %446 = or i1 %445, %in.57
  %447 = or i1 %446, %in.56
  %448 = or i1 %447, %in.55
  %449 = or i1 %448, %in.54
  %450 = or i1 %449, %in.53
  %451 = or i1 %450, %in.52
  %452 = or i1 %451, %in.51
  %453 = or i1 %452, %in.50
  %454 = or i1 %453, %in.49
  %455 = or i1 %454, %in.48
  %456 = or i1 %455, %in.47
  %457 = or i1 %456, %in.46
  %458 = or i1 %457, %in.45
  %459 = or i1 %458, %in.44
  %460 = or i1 %459, %in.43
  %461 = or i1 %460, %in.42
  %462 = or i1 %461, %in.41
  %463 = or i1 %462, %in.40
  %464 = or i1 %463, %in.39
  %465 = or i1 %464, %in.38
  %466 = or i1 %465, %in.37
  %467 = or i1 %466, %in.36
  %468 = or i1 %467, %in.35
  %469 = or i1 %468, %in.34
  store i1 %469, i1* %out.3
  %470 = load i1, i1* %out.3
  %471 = load i1, i1* %out.33
  %select.phi. = select i1 %470, i32 0, i32 %spec.select
  %472 = or i1 %470, %471
  store i1 %472, i1* %out.2
  ret i32 %select.phi.
}

attributes #0 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
