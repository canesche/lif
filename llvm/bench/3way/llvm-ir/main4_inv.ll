; ModuleID = '3way/llvm-ir/main4.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.twy_ctx = type { [3 x i64], [3 x i64], [12 x i64], [12 x i64] }

@.str = private unnamed_addr constant [27 x i8] c"%20s : %08lx %08lx %08lx \0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"**********\0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"KEY = \00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"PLAIN = \00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"CIPHER = \00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Block %01d encrypts to %08lx %08lx %08lx\0A\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"Block %01d decrypts to %08lx %08lx %08lx\0A\00", align 1

define void @printvec(i8* %0, i64 %N, i64* %1, i64 %N1) {
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  store i8* %0, i8** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 2
  %8 = load i64, i64* %7, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %4, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 0
  %14 = load i64, i64* %13, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %5, i64 %8, i64 %11, i64 %14)
  ret void
}

declare i32 @printf(i8*, ...) #0

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main() #1 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.twy_ctx, align 8
  %3 = alloca [9 x i64], align 16
  %4 = alloca [3 x i64], align 16
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %6 = getelementptr inbounds [3 x i64], [3 x i64]* %4, i64 0, i64 2
  store i64 3401130189, i64* %6, align 16
  %7 = getelementptr inbounds [3 x i64], [3 x i64]* %4, i64 0, i64 1
  store i64 3591651640, i64* %7, align 8
  %8 = getelementptr inbounds [3 x i64], [3 x i64]* %4, i64 0, i64 0
  store i64 3538967390, i64* %8, align 16
  %9 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 2
  store i64 2904681719, i64* %9, align 16
  %10 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 1
  store i64 2209258948, i64* %10, align 8
  %11 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 0
  store i64 1079625582, i64* %11, align 16
  %12 = getelementptr inbounds [3 x i64], [3 x i64]* %4, i64 0, i64 0
  %13 = sext i32 1 to i64
  call void @twy_key(%struct.twy_ctx* %2, i64 %13, i64* %12, i64 3)
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %15 = getelementptr inbounds [3 x i64], [3 x i64]* %4, i64 0, i64 0
  %16 = sext i8 7 to i64
  call void @printvec(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 %16, i64* %15, i64 3)
  %17 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 0
  %18 = sext i8 9 to i64
  call void @printvec(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 %18, i64* %17, i64 9)
  %19 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 0
  %20 = sext i32 1 to i64
  call void @encrypt(%struct.twy_ctx* %2, i64 %20, i64* %19, i64 9, i1 true)
  %21 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 0
  %22 = sext i8 10 to i64
  call void @printvec(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 %22, i64* %21, i64 9)
  store i32 0, i32* %5, align 4
  br label %23

23:                                               ; preds = %32, %0
  %24 = load i32, i32* %5, align 4
  %25 = icmp slt i32 %24, 9
  br i1 %25, label %26, label %35

26:                                               ; preds = %23
  %27 = load i32, i32* %5, align 4
  %28 = sext i32 %27 to i64
  %29 = load i32, i32* %5, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 %30
  store i64 %28, i64* %31, align 8
  br label %32

32:                                               ; preds = %26
  %33 = load i32, i32* %5, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %5, align 4
  br label %23

35:                                               ; preds = %23
  %36 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 0
  %37 = sext i32 1 to i64
  call void @twy_enc(%struct.twy_ctx* %2, i64 %37, i64* %36, i64 9, i32 3)
  store i32 0, i32* %5, align 4
  br label %38

38:                                               ; preds = %59, %35
  %39 = load i32, i32* %5, align 4
  %40 = icmp slt i32 %39, 9
  br i1 %40, label %41, label %62

41:                                               ; preds = %38
  %42 = load i32, i32* %5, align 4
  %43 = sdiv i32 %42, 3
  %44 = load i32, i32* %5, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 %45
  %47 = load i64, i64* %46, align 8
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 %50
  %52 = load i64, i64* %51, align 8
  %53 = load i32, i32* %5, align 4
  %54 = add nsw i32 %53, 2
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 %43, i64 %47, i64 %52, i64 %57)
  br label %59

59:                                               ; preds = %41
  %60 = load i32, i32* %5, align 4
  %61 = add nsw i32 %60, 3
  store i32 %61, i32* %5, align 4
  br label %38

62:                                               ; preds = %38
  %63 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 0
  %64 = sext i32 1 to i64
  call void @twy_dec(%struct.twy_ctx* %2, i64 %64, i64* %63, i64 9, i32 2)
  %65 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 0
  %66 = getelementptr inbounds i64, i64* %65, i64 6
  %67 = sext i32 1 to i64
  call void @twy_dec(%struct.twy_ctx* %2, i64 %67, i64* %66, i64 9, i32 1)
  store i32 0, i32* %5, align 4
  br label %68

68:                                               ; preds = %89, %62
  %69 = load i32, i32* %5, align 4
  %70 = icmp slt i32 %69, 9
  br i1 %70, label %71, label %92

71:                                               ; preds = %68
  %72 = load i32, i32* %5, align 4
  %73 = sdiv i32 %72, 3
  %74 = load i32, i32* %5, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 %75
  %77 = load i64, i64* %76, align 8
  %78 = load i32, i32* %5, align 4
  %79 = add nsw i32 %78, 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 %80
  %82 = load i64, i64* %81, align 8
  %83 = load i32, i32* %5, align 4
  %84 = add nsw i32 %83, 2
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [9 x i64], [9 x i64]* %3, i64 0, i64 %85
  %87 = load i64, i64* %86, align 8
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i32 %73, i64 %77, i64 %82, i64 %87)
  br label %89

89:                                               ; preds = %71
  %90 = load i32, i32* %5, align 4
  %91 = add nsw i32 %90, 3
  store i32 %91, i32* %5, align 4
  br label %68

92:                                               ; preds = %68
  ret i32 0
}

define void @mu(i64* %0, i64 %N, i1 %.cond) {
  %shadow = alloca i64
  %out. = alloca i1
  store i1 %.cond, i1* %out.
  %out.1 = alloca i1
  %out.2 = alloca i1
  %out.3 = alloca i1
  %out.4 = alloca i1
  %out.5 = alloca i1
  %out.6 = alloca i1
  %out.7 = alloca i1
  %out.8 = alloca i1
  %out.9 = alloca i1
  %out.10 = alloca i1
  %out.11 = alloca i1
  %out.12 = alloca i1
  %out.13 = alloca i1
  %out.14 = alloca i1
  %out.15 = alloca i1
  %out.16 = alloca i1
  %out.17 = alloca i1
  %out.18 = alloca i1
  %out.19 = alloca i1
  %out.20 = alloca i1
  %out.21 = alloca i1
  %out.22 = alloca i1
  %out.23 = alloca i1
  %out.24 = alloca i1
  %out.25 = alloca i1
  %out.26 = alloca i1
  %out.27 = alloca i1
  %out.28 = alloca i1
  %out.29 = alloca i1
  %out.30 = alloca i1
  %out.31 = alloca i1
  %out.32 = alloca i1
  %out.33 = alloca i1
  %out.34 = alloca i1
  %out.35 = alloca i1
  %out.36 = alloca i1
  %out.37 = alloca i1
  %out.38 = alloca i1
  %out.39 = alloca i1
  %out.40 = alloca i1
  %out.41 = alloca i1
  %out.42 = alloca i1
  %out.43 = alloca i1
  %out.44 = alloca i1
  %out.45 = alloca i1
  %out.46 = alloca i1
  %out.47 = alloca i1
  %out.48 = alloca i1
  %out.49 = alloca i1
  %out.50 = alloca i1
  %out.51 = alloca i1
  %out.52 = alloca i1
  %out.53 = alloca i1
  %out.54 = alloca i1
  %out.55 = alloca i1
  %out.56 = alloca i1
  %out.57 = alloca i1
  %out.58 = alloca i1
  %out.59 = alloca i1
  %out.60 = alloca i1
  %out.61 = alloca i1
  %out.62 = alloca i1
  %out.63 = alloca i1
  %out.64 = alloca i1
  %out.65 = alloca i1
  %out.66 = alloca i1
  %out.67 = alloca i1
  %out.68 = alloca i1
  %out.69 = alloca i1
  %out.70 = alloca i1
  %out.71 = alloca i1
  %out.72 = alloca i1
  %out.73 = alloca i1
  %out.74 = alloca i1
  %out.75 = alloca i1
  %out.76 = alloca i1
  %out.77 = alloca i1
  %out.78 = alloca i1
  %out.79 = alloca i1
  %out.80 = alloca i1
  %out.81 = alloca i1
  %out.82 = alloca i1
  %out.83 = alloca i1
  %out.84 = alloca i1
  %out.85 = alloca i1
  %out.86 = alloca i1
  %out.87 = alloca i1
  %out.88 = alloca i1
  %out.89 = alloca i1
  %out.90 = alloca i1
  %out.91 = alloca i1
  %out.92 = alloca i1
  %out.93 = alloca i1
  %out.94 = alloca i1
  %out.95 = alloca i1
  %out.96 = alloca i1
  %out.97 = alloca i1
  %out.98 = alloca i1
  %out.99 = alloca i1
  %out.100 = alloca i1
  %out.101 = alloca i1
  %out.102 = alloca i1
  %out.103 = alloca i1
  %out.104 = alloca i1
  %out.105 = alloca i1
  %out.106 = alloca i1
  %out.107 = alloca i1
  %out.108 = alloca i1
  %out.109 = alloca i1
  %out.110 = alloca i1
  %out.111 = alloca i1
  %out.112 = alloca i1
  %out.113 = alloca i1
  %out.114 = alloca i1
  %out.115 = alloca i1
  %out.116 = alloca i1
  %out.117 = alloca i1
  %out.118 = alloca i1
  %out.119 = alloca i1
  %out.120 = alloca i1
  %out.121 = alloca i1
  %out.122 = alloca i1
  %out.123 = alloca i1
  %out.124 = alloca i1
  %out.125 = alloca i1
  %out.126 = alloca i1
  %out.127 = alloca i1
  %out.128 = alloca i1
  %out.129 = alloca i1
  %out.130 = alloca i1
  %out.131 = alloca i1
  %out.132 = alloca i1
  %out.133 = alloca i1
  %out.134 = alloca i1
  %out.135 = alloca i1
  %out.136 = alloca i1
  %out.137 = alloca i1
  %out.138 = alloca i1
  %out.139 = alloca i1
  %out.140 = alloca i1
  %out.141 = alloca i1
  %out.142 = alloca i1
  %out.143 = alloca i1
  %out.144 = alloca i1
  %out.145 = alloca i1
  %out.146 = alloca i1
  %out.147 = alloca i1
  %out.148 = alloca i1
  %out.149 = alloca i1
  %out.150 = alloca i1
  %out.151 = alloca i1
  %out.152 = alloca i1
  %out.153 = alloca i1
  %out.154 = alloca i1
  %out.155 = alloca i1
  %out.156 = alloca i1
  %out.157 = alloca i1
  %out.158 = alloca i1
  %out.159 = alloca i1
  %out.160 = alloca i1
  %out.161 = alloca i1
  %out.162 = alloca i1
  %out.163 = alloca i1
  %out.164 = alloca i1
  %out.165 = alloca i1
  %out.166 = alloca i1
  %out.167 = alloca i1
  %out.168 = alloca i1
  %out.169 = alloca i1
  %out.170 = alloca i1
  %out.171 = alloca i1
  %out.172 = alloca i1
  %out.173 = alloca i1
  %out.174 = alloca i1
  %out.175 = alloca i1
  %out.176 = alloca i1
  %out.177 = alloca i1
  %out.178 = alloca i1
  %out.179 = alloca i1
  %out.180 = alloca i1
  %out.181 = alloca i1
  %out.182 = alloca i1
  %out.183 = alloca i1
  %out.184 = alloca i1
  %out.185 = alloca i1
  %out.186 = alloca i1
  %out.187 = alloca i1
  %out.188 = alloca i1
  %out.189 = alloca i1
  %out.190 = alloca i1
  %out.191 = alloca i1
  %out.192 = alloca i1
  %2 = alloca [3 x i64], align 16
  %3 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %4 = load i1, i1* %out.
  %5 = icmp slt i64 2, 3
  %6 = bitcast i64* %shadow to i64*
  %safe. = or i1 %4, %5
  %select.ptr. = select i1 %safe., i64* %3, i64* %6
  %7 = load i64, i64* %3
  %select.val. = select i1 %4, i64 0, i64 %7
  store i64 %select.val., i64* %select.ptr., align 16
  %8 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %9 = load i1, i1* %out.
  %10 = icmp slt i64 1, 3
  %11 = bitcast i64* %shadow to i64*
  %safe.1 = or i1 %9, %10
  %select.ptr.2 = select i1 %safe.1, i64* %8, i64* %11
  %12 = load i64, i64* %8
  %select.val.3 = select i1 %9, i64 0, i64 %12
  store i64 %select.val.3, i64* %select.ptr.2, align 8
  %13 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %14 = load i1, i1* %out.
  %15 = icmp slt i64 0, 3
  %16 = bitcast i64* %shadow to i64*
  %safe.4 = or i1 %14, %15
  %select.ptr.5 = select i1 %safe.4, i64* %13, i64* %16
  %17 = load i64, i64* %13
  %select.val.6 = select i1 %14, i64 0, i64 %17
  store i64 %select.val.6, i64* %select.ptr.5, align 16
  %18 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %19 = load i1, i1* %out.
  %20 = icmp slt i64 0, 3
  %21 = bitcast i64* %shadow to i64*
  %safe.7 = or i1 %19, %20
  %select.ptr.8 = select i1 %safe.7, i64* %18, i64* %21
  %22 = load i64, i64* %select.ptr.8, align 16
  %23 = shl i64 %22, 1
  %24 = load i1, i1* %out.
  %25 = icmp slt i64 0, 3
  %26 = bitcast i64* %shadow to i64*
  %safe.9 = or i1 %24, %25
  %select.ptr.10 = select i1 %safe.9, i64* %18, i64* %26
  %27 = load i64, i64* %18
  %select.val.11 = select i1 %24, i64 %23, i64 %27
  store i64 %select.val.11, i64* %select.ptr.10, align 16
  %28 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %29 = load i1, i1* %out.
  %30 = icmp slt i64 1, 3
  %31 = bitcast i64* %shadow to i64*
  %safe.12 = or i1 %29, %30
  %select.ptr.13 = select i1 %safe.12, i64* %28, i64* %31
  %32 = load i64, i64* %select.ptr.13, align 8
  %33 = shl i64 %32, 1
  %34 = load i1, i1* %out.
  %35 = icmp slt i64 1, 3
  %36 = bitcast i64* %shadow to i64*
  %safe.14 = or i1 %34, %35
  %select.ptr.15 = select i1 %safe.14, i64* %28, i64* %36
  %37 = load i64, i64* %28
  %select.val.16 = select i1 %34, i64 %33, i64 %37
  store i64 %select.val.16, i64* %select.ptr.15, align 8
  %38 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %39 = load i1, i1* %out.
  %40 = icmp slt i64 2, 3
  %41 = bitcast i64* %shadow to i64*
  %safe.17 = or i1 %39, %40
  %select.ptr.18 = select i1 %safe.17, i64* %38, i64* %41
  %42 = load i64, i64* %select.ptr.18, align 16
  %43 = shl i64 %42, 1
  %44 = load i1, i1* %out.
  %45 = icmp slt i64 2, 3
  %46 = bitcast i64* %shadow to i64*
  %safe.19 = or i1 %44, %45
  %select.ptr.20 = select i1 %safe.19, i64* %38, i64* %46
  %47 = load i64, i64* %38
  %select.val.21 = select i1 %44, i64 %43, i64 %47
  store i64 %select.val.21, i64* %select.ptr.20, align 16
  %48 = load i1, i1* %out.
  %49 = load i64, i64* %0, align 8
  %50 = and i64 %49, 1
  %51 = icmp ne i64 %50, 0
  %52 = load i1, i1* %out.
  %in. = and i1 %52, %51
  store i1 %in., i1* %out.1
  %53 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %54 = load i1, i1* %out.1
  %55 = icmp slt i64 2, 3
  %56 = bitcast i64* %shadow to i64*
  %safe.22 = or i1 %54, %55
  %select.ptr.23 = select i1 %safe.22, i64* %53, i64* %56
  %57 = load i64, i64* %select.ptr.23, align 16
  %58 = or i64 %57, 1
  %59 = load i1, i1* %out.1
  %60 = icmp slt i64 2, 3
  %61 = bitcast i64* %shadow to i64*
  %safe.24 = or i1 %59, %60
  %select.ptr.25 = select i1 %safe.24, i64* %53, i64* %61
  %62 = load i64, i64* %53
  %select.val.26 = select i1 %59, i64 %58, i64 %62
  store i64 %select.val.26, i64* %select.ptr.25, align 16
  %63 = load i1, i1* %out.
  %64 = xor i1 %51, true
  %in.193 = and i1 %63, %64
  %65 = load i1, i1* %out.1
  %66 = or i1 %in.193, %65
  store i1 %66, i1* %out.2
  %67 = getelementptr inbounds i64, i64* %0, i64 1
  %68 = load i1, i1* %out.2
  %69 = icmp slt i64 1, %N
  %70 = bitcast i64* %shadow to i64*
  %safe.27 = or i1 %68, %69
  %select.ptr.28 = select i1 %safe.27, i64* %67, i64* %70
  %71 = load i64, i64* %select.ptr.28, align 8
  %72 = and i64 %71, 1
  %73 = icmp ne i64 %72, 0
  %74 = load i1, i1* %out.2
  %in.194 = and i1 %74, %73
  store i1 %in.194, i1* %out.3
  %75 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %76 = load i1, i1* %out.3
  %77 = icmp slt i64 1, 3
  %78 = bitcast i64* %shadow to i64*
  %safe.29 = or i1 %76, %77
  %select.ptr.30 = select i1 %safe.29, i64* %75, i64* %78
  %79 = load i64, i64* %select.ptr.30, align 8
  %80 = or i64 %79, 1
  %81 = load i1, i1* %out.3
  %82 = icmp slt i64 1, 3
  %83 = bitcast i64* %shadow to i64*
  %safe.31 = or i1 %81, %82
  %select.ptr.32 = select i1 %safe.31, i64* %75, i64* %83
  %84 = load i64, i64* %75
  %select.val.33 = select i1 %81, i64 %80, i64 %84
  store i64 %select.val.33, i64* %select.ptr.32, align 8
  %85 = load i1, i1* %out.2
  %86 = xor i1 %73, true
  %in.195 = and i1 %85, %86
  %87 = load i1, i1* %out.3
  %88 = or i1 %in.195, %87
  store i1 %88, i1* %out.4
  %89 = getelementptr inbounds i64, i64* %0, i64 2
  %90 = load i1, i1* %out.4
  %91 = icmp slt i64 2, %N
  %92 = bitcast i64* %shadow to i64*
  %safe.34 = or i1 %90, %91
  %select.ptr.35 = select i1 %safe.34, i64* %89, i64* %92
  %93 = load i64, i64* %select.ptr.35, align 8
  %94 = and i64 %93, 1
  %95 = icmp ne i64 %94, 0
  %96 = load i1, i1* %out.4
  %in.196 = and i1 %96, %95
  store i1 %in.196, i1* %out.5
  %97 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %98 = load i1, i1* %out.5
  %99 = icmp slt i64 0, 3
  %100 = bitcast i64* %shadow to i64*
  %safe.36 = or i1 %98, %99
  %select.ptr.37 = select i1 %safe.36, i64* %97, i64* %100
  %101 = load i64, i64* %select.ptr.37, align 16
  %102 = or i64 %101, 1
  %103 = load i1, i1* %out.5
  %104 = icmp slt i64 0, 3
  %105 = bitcast i64* %shadow to i64*
  %safe.38 = or i1 %103, %104
  %select.ptr.39 = select i1 %safe.38, i64* %97, i64* %105
  %106 = load i64, i64* %97
  %select.val.40 = select i1 %103, i64 %102, i64 %106
  store i64 %select.val.40, i64* %select.ptr.39, align 16
  %107 = load i1, i1* %out.4
  %108 = xor i1 %95, true
  %in.197 = and i1 %107, %108
  %109 = load i1, i1* %out.5
  %110 = or i1 %in.197, %109
  store i1 %110, i1* %out.6
  %111 = load i1, i1* %out.6
  %112 = load i64, i64* %0, align 8
  %113 = lshr i64 %112, 1
  %114 = load i1, i1* %out.6
  %115 = load i64, i64* %0
  %select.val.41 = select i1 %114, i64 %113, i64 %115
  store i64 %select.val.41, i64* %0, align 8
  %116 = getelementptr inbounds i64, i64* %0, i64 1
  %117 = load i1, i1* %out.6
  %118 = icmp slt i64 1, %N
  %119 = bitcast i64* %shadow to i64*
  %safe.42 = or i1 %117, %118
  %select.ptr.43 = select i1 %safe.42, i64* %116, i64* %119
  %120 = load i64, i64* %select.ptr.43, align 8
  %121 = lshr i64 %120, 1
  %122 = load i1, i1* %out.6
  %123 = icmp slt i64 1, %N
  %124 = bitcast i64* %shadow to i64*
  %safe.44 = or i1 %122, %123
  %select.ptr.45 = select i1 %safe.44, i64* %116, i64* %124
  %125 = load i64, i64* %116
  %select.val.46 = select i1 %122, i64 %121, i64 %125
  store i64 %select.val.46, i64* %select.ptr.45, align 8
  %126 = getelementptr inbounds i64, i64* %0, i64 2
  %127 = load i1, i1* %out.6
  %128 = icmp slt i64 2, %N
  %129 = bitcast i64* %shadow to i64*
  %safe.47 = or i1 %127, %128
  %select.ptr.48 = select i1 %safe.47, i64* %126, i64* %129
  %130 = load i64, i64* %select.ptr.48, align 8
  %131 = lshr i64 %130, 1
  %132 = load i1, i1* %out.6
  %133 = icmp slt i64 2, %N
  %134 = bitcast i64* %shadow to i64*
  %safe.49 = or i1 %132, %133
  %select.ptr.50 = select i1 %safe.49, i64* %126, i64* %134
  %135 = load i64, i64* %126
  %select.val.51 = select i1 %132, i64 %131, i64 %135
  store i64 %select.val.51, i64* %select.ptr.50, align 8
  %136 = load i1, i1* %out.6
  %137 = icmp slt i64 0, 3
  %138 = bitcast i64* %shadow to i64*
  %safe.52 = or i1 %136, %137
  %select.ptr.53 = select i1 %safe.52, i64* %18, i64* %138
  %139 = load i64, i64* %select.ptr.53, align 16
  %140 = shl i64 %139, 1
  %141 = load i1, i1* %out.6
  %142 = icmp slt i64 0, 3
  %143 = bitcast i64* %shadow to i64*
  %safe.54 = or i1 %141, %142
  %select.ptr.55 = select i1 %safe.54, i64* %18, i64* %143
  %144 = load i64, i64* %18
  %select.val.56 = select i1 %141, i64 %140, i64 %144
  store i64 %select.val.56, i64* %select.ptr.55, align 16
  %145 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %146 = load i1, i1* %out.6
  %147 = icmp slt i64 1, 3
  %148 = bitcast i64* %shadow to i64*
  %safe.57 = or i1 %146, %147
  %select.ptr.58 = select i1 %safe.57, i64* %145, i64* %148
  %149 = load i64, i64* %select.ptr.58, align 8
  %150 = shl i64 %149, 1
  %151 = load i1, i1* %out.6
  %152 = icmp slt i64 1, 3
  %153 = bitcast i64* %shadow to i64*
  %safe.59 = or i1 %151, %152
  %select.ptr.60 = select i1 %safe.59, i64* %145, i64* %153
  %154 = load i64, i64* %145
  %select.val.61 = select i1 %151, i64 %150, i64 %154
  store i64 %select.val.61, i64* %select.ptr.60, align 8
  %155 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %156 = load i1, i1* %out.6
  %157 = icmp slt i64 2, 3
  %158 = bitcast i64* %shadow to i64*
  %safe.62 = or i1 %156, %157
  %select.ptr.63 = select i1 %safe.62, i64* %155, i64* %158
  %159 = load i64, i64* %select.ptr.63, align 16
  %160 = shl i64 %159, 1
  %161 = load i1, i1* %out.6
  %162 = icmp slt i64 2, 3
  %163 = bitcast i64* %shadow to i64*
  %safe.64 = or i1 %161, %162
  %select.ptr.65 = select i1 %safe.64, i64* %155, i64* %163
  %164 = load i64, i64* %155
  %select.val.66 = select i1 %161, i64 %160, i64 %164
  store i64 %select.val.66, i64* %select.ptr.65, align 16
  %165 = load i1, i1* %out.6
  %166 = load i64, i64* %0, align 8
  %167 = and i64 %166, 1
  %168 = icmp ne i64 %167, 0
  %169 = load i1, i1* %out.6
  %in.198 = and i1 %169, %168
  store i1 %in.198, i1* %out.7
  %170 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %171 = load i1, i1* %out.7
  %172 = icmp slt i64 2, 3
  %173 = bitcast i64* %shadow to i64*
  %safe.67 = or i1 %171, %172
  %select.ptr.68 = select i1 %safe.67, i64* %170, i64* %173
  %174 = load i64, i64* %select.ptr.68, align 16
  %175 = or i64 %174, 1
  %176 = load i1, i1* %out.7
  %177 = icmp slt i64 2, 3
  %178 = bitcast i64* %shadow to i64*
  %safe.69 = or i1 %176, %177
  %select.ptr.70 = select i1 %safe.69, i64* %170, i64* %178
  %179 = load i64, i64* %170
  %select.val.71 = select i1 %176, i64 %175, i64 %179
  store i64 %select.val.71, i64* %select.ptr.70, align 16
  %180 = load i1, i1* %out.6
  %181 = xor i1 %168, true
  %in.199 = and i1 %180, %181
  %182 = load i1, i1* %out.7
  %183 = or i1 %in.199, %182
  store i1 %183, i1* %out.8
  %184 = getelementptr inbounds i64, i64* %0, i64 1
  %185 = load i1, i1* %out.8
  %186 = icmp slt i64 1, %N
  %187 = bitcast i64* %shadow to i64*
  %safe.72 = or i1 %185, %186
  %select.ptr.73 = select i1 %safe.72, i64* %184, i64* %187
  %188 = load i64, i64* %select.ptr.73, align 8
  %189 = and i64 %188, 1
  %190 = icmp ne i64 %189, 0
  %191 = load i1, i1* %out.8
  %in.200 = and i1 %191, %190
  store i1 %in.200, i1* %out.9
  %192 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %193 = load i1, i1* %out.9
  %194 = icmp slt i64 1, 3
  %195 = bitcast i64* %shadow to i64*
  %safe.74 = or i1 %193, %194
  %select.ptr.75 = select i1 %safe.74, i64* %192, i64* %195
  %196 = load i64, i64* %select.ptr.75, align 8
  %197 = or i64 %196, 1
  %198 = load i1, i1* %out.9
  %199 = icmp slt i64 1, 3
  %200 = bitcast i64* %shadow to i64*
  %safe.76 = or i1 %198, %199
  %select.ptr.77 = select i1 %safe.76, i64* %192, i64* %200
  %201 = load i64, i64* %192
  %select.val.78 = select i1 %198, i64 %197, i64 %201
  store i64 %select.val.78, i64* %select.ptr.77, align 8
  %202 = load i1, i1* %out.8
  %203 = xor i1 %190, true
  %in.201 = and i1 %202, %203
  %204 = load i1, i1* %out.9
  %205 = or i1 %in.201, %204
  store i1 %205, i1* %out.10
  %206 = getelementptr inbounds i64, i64* %0, i64 2
  %207 = load i1, i1* %out.10
  %208 = icmp slt i64 2, %N
  %209 = bitcast i64* %shadow to i64*
  %safe.79 = or i1 %207, %208
  %select.ptr.80 = select i1 %safe.79, i64* %206, i64* %209
  %210 = load i64, i64* %select.ptr.80, align 8
  %211 = and i64 %210, 1
  %212 = icmp ne i64 %211, 0
  %213 = load i1, i1* %out.10
  %in.202 = and i1 %213, %212
  store i1 %in.202, i1* %out.11
  %214 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %215 = load i1, i1* %out.11
  %216 = icmp slt i64 0, 3
  %217 = bitcast i64* %shadow to i64*
  %safe.81 = or i1 %215, %216
  %select.ptr.82 = select i1 %safe.81, i64* %214, i64* %217
  %218 = load i64, i64* %select.ptr.82, align 16
  %219 = or i64 %218, 1
  %220 = load i1, i1* %out.11
  %221 = icmp slt i64 0, 3
  %222 = bitcast i64* %shadow to i64*
  %safe.83 = or i1 %220, %221
  %select.ptr.84 = select i1 %safe.83, i64* %214, i64* %222
  %223 = load i64, i64* %214
  %select.val.85 = select i1 %220, i64 %219, i64 %223
  store i64 %select.val.85, i64* %select.ptr.84, align 16
  %224 = load i1, i1* %out.10
  %225 = xor i1 %212, true
  %in.203 = and i1 %224, %225
  %226 = load i1, i1* %out.11
  %227 = or i1 %in.203, %226
  store i1 %227, i1* %out.12
  %228 = load i1, i1* %out.12
  %229 = load i64, i64* %0, align 8
  %230 = lshr i64 %229, 1
  %231 = load i1, i1* %out.12
  %232 = load i64, i64* %0
  %select.val.86 = select i1 %231, i64 %230, i64 %232
  store i64 %select.val.86, i64* %0, align 8
  %233 = getelementptr inbounds i64, i64* %0, i64 1
  %234 = load i1, i1* %out.12
  %235 = icmp slt i64 1, %N
  %236 = bitcast i64* %shadow to i64*
  %safe.87 = or i1 %234, %235
  %select.ptr.88 = select i1 %safe.87, i64* %233, i64* %236
  %237 = load i64, i64* %select.ptr.88, align 8
  %238 = lshr i64 %237, 1
  %239 = load i1, i1* %out.12
  %240 = icmp slt i64 1, %N
  %241 = bitcast i64* %shadow to i64*
  %safe.89 = or i1 %239, %240
  %select.ptr.90 = select i1 %safe.89, i64* %233, i64* %241
  %242 = load i64, i64* %233
  %select.val.91 = select i1 %239, i64 %238, i64 %242
  store i64 %select.val.91, i64* %select.ptr.90, align 8
  %243 = getelementptr inbounds i64, i64* %0, i64 2
  %244 = load i1, i1* %out.12
  %245 = icmp slt i64 2, %N
  %246 = bitcast i64* %shadow to i64*
  %safe.92 = or i1 %244, %245
  %select.ptr.93 = select i1 %safe.92, i64* %243, i64* %246
  %247 = load i64, i64* %select.ptr.93, align 8
  %248 = lshr i64 %247, 1
  %249 = load i1, i1* %out.12
  %250 = icmp slt i64 2, %N
  %251 = bitcast i64* %shadow to i64*
  %safe.94 = or i1 %249, %250
  %select.ptr.95 = select i1 %safe.94, i64* %243, i64* %251
  %252 = load i64, i64* %243
  %select.val.96 = select i1 %249, i64 %248, i64 %252
  store i64 %select.val.96, i64* %select.ptr.95, align 8
  %253 = load i1, i1* %out.12
  %254 = icmp slt i64 0, 3
  %255 = bitcast i64* %shadow to i64*
  %safe.97 = or i1 %253, %254
  %select.ptr.98 = select i1 %safe.97, i64* %18, i64* %255
  %256 = load i64, i64* %select.ptr.98, align 16
  %257 = shl i64 %256, 1
  %258 = load i1, i1* %out.12
  %259 = icmp slt i64 0, 3
  %260 = bitcast i64* %shadow to i64*
  %safe.99 = or i1 %258, %259
  %select.ptr.100 = select i1 %safe.99, i64* %18, i64* %260
  %261 = load i64, i64* %18
  %select.val.101 = select i1 %258, i64 %257, i64 %261
  store i64 %select.val.101, i64* %select.ptr.100, align 16
  %262 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %263 = load i1, i1* %out.12
  %264 = icmp slt i64 1, 3
  %265 = bitcast i64* %shadow to i64*
  %safe.102 = or i1 %263, %264
  %select.ptr.103 = select i1 %safe.102, i64* %262, i64* %265
  %266 = load i64, i64* %select.ptr.103, align 8
  %267 = shl i64 %266, 1
  %268 = load i1, i1* %out.12
  %269 = icmp slt i64 1, 3
  %270 = bitcast i64* %shadow to i64*
  %safe.104 = or i1 %268, %269
  %select.ptr.105 = select i1 %safe.104, i64* %262, i64* %270
  %271 = load i64, i64* %262
  %select.val.106 = select i1 %268, i64 %267, i64 %271
  store i64 %select.val.106, i64* %select.ptr.105, align 8
  %272 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %273 = load i1, i1* %out.12
  %274 = icmp slt i64 2, 3
  %275 = bitcast i64* %shadow to i64*
  %safe.107 = or i1 %273, %274
  %select.ptr.108 = select i1 %safe.107, i64* %272, i64* %275
  %276 = load i64, i64* %select.ptr.108, align 16
  %277 = shl i64 %276, 1
  %278 = load i1, i1* %out.12
  %279 = icmp slt i64 2, 3
  %280 = bitcast i64* %shadow to i64*
  %safe.109 = or i1 %278, %279
  %select.ptr.110 = select i1 %safe.109, i64* %272, i64* %280
  %281 = load i64, i64* %272
  %select.val.111 = select i1 %278, i64 %277, i64 %281
  store i64 %select.val.111, i64* %select.ptr.110, align 16
  %282 = load i1, i1* %out.12
  %283 = load i64, i64* %0, align 8
  %284 = and i64 %283, 1
  %285 = icmp ne i64 %284, 0
  %286 = load i1, i1* %out.12
  %in.204 = and i1 %286, %285
  store i1 %in.204, i1* %out.13
  %287 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %288 = load i1, i1* %out.13
  %289 = icmp slt i64 2, 3
  %290 = bitcast i64* %shadow to i64*
  %safe.112 = or i1 %288, %289
  %select.ptr.113 = select i1 %safe.112, i64* %287, i64* %290
  %291 = load i64, i64* %select.ptr.113, align 16
  %292 = or i64 %291, 1
  %293 = load i1, i1* %out.13
  %294 = icmp slt i64 2, 3
  %295 = bitcast i64* %shadow to i64*
  %safe.114 = or i1 %293, %294
  %select.ptr.115 = select i1 %safe.114, i64* %287, i64* %295
  %296 = load i64, i64* %287
  %select.val.116 = select i1 %293, i64 %292, i64 %296
  store i64 %select.val.116, i64* %select.ptr.115, align 16
  %297 = load i1, i1* %out.12
  %298 = xor i1 %285, true
  %in.205 = and i1 %297, %298
  %299 = load i1, i1* %out.13
  %300 = or i1 %in.205, %299
  store i1 %300, i1* %out.14
  %301 = getelementptr inbounds i64, i64* %0, i64 1
  %302 = load i1, i1* %out.14
  %303 = icmp slt i64 1, %N
  %304 = bitcast i64* %shadow to i64*
  %safe.117 = or i1 %302, %303
  %select.ptr.118 = select i1 %safe.117, i64* %301, i64* %304
  %305 = load i64, i64* %select.ptr.118, align 8
  %306 = and i64 %305, 1
  %307 = icmp ne i64 %306, 0
  %308 = load i1, i1* %out.14
  %in.206 = and i1 %308, %307
  store i1 %in.206, i1* %out.15
  %309 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %310 = load i1, i1* %out.15
  %311 = icmp slt i64 1, 3
  %312 = bitcast i64* %shadow to i64*
  %safe.119 = or i1 %310, %311
  %select.ptr.120 = select i1 %safe.119, i64* %309, i64* %312
  %313 = load i64, i64* %select.ptr.120, align 8
  %314 = or i64 %313, 1
  %315 = load i1, i1* %out.15
  %316 = icmp slt i64 1, 3
  %317 = bitcast i64* %shadow to i64*
  %safe.121 = or i1 %315, %316
  %select.ptr.122 = select i1 %safe.121, i64* %309, i64* %317
  %318 = load i64, i64* %309
  %select.val.123 = select i1 %315, i64 %314, i64 %318
  store i64 %select.val.123, i64* %select.ptr.122, align 8
  %319 = load i1, i1* %out.14
  %320 = xor i1 %307, true
  %in.207 = and i1 %319, %320
  %321 = load i1, i1* %out.15
  %322 = or i1 %in.207, %321
  store i1 %322, i1* %out.16
  %323 = getelementptr inbounds i64, i64* %0, i64 2
  %324 = load i1, i1* %out.16
  %325 = icmp slt i64 2, %N
  %326 = bitcast i64* %shadow to i64*
  %safe.124 = or i1 %324, %325
  %select.ptr.125 = select i1 %safe.124, i64* %323, i64* %326
  %327 = load i64, i64* %select.ptr.125, align 8
  %328 = and i64 %327, 1
  %329 = icmp ne i64 %328, 0
  %330 = load i1, i1* %out.16
  %in.208 = and i1 %330, %329
  store i1 %in.208, i1* %out.17
  %331 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %332 = load i1, i1* %out.17
  %333 = icmp slt i64 0, 3
  %334 = bitcast i64* %shadow to i64*
  %safe.126 = or i1 %332, %333
  %select.ptr.127 = select i1 %safe.126, i64* %331, i64* %334
  %335 = load i64, i64* %select.ptr.127, align 16
  %336 = or i64 %335, 1
  %337 = load i1, i1* %out.17
  %338 = icmp slt i64 0, 3
  %339 = bitcast i64* %shadow to i64*
  %safe.128 = or i1 %337, %338
  %select.ptr.129 = select i1 %safe.128, i64* %331, i64* %339
  %340 = load i64, i64* %331
  %select.val.130 = select i1 %337, i64 %336, i64 %340
  store i64 %select.val.130, i64* %select.ptr.129, align 16
  %341 = load i1, i1* %out.16
  %342 = xor i1 %329, true
  %in.209 = and i1 %341, %342
  %343 = load i1, i1* %out.17
  %344 = or i1 %in.209, %343
  store i1 %344, i1* %out.18
  %345 = load i1, i1* %out.18
  %346 = load i64, i64* %0, align 8
  %347 = lshr i64 %346, 1
  %348 = load i1, i1* %out.18
  %349 = load i64, i64* %0
  %select.val.131 = select i1 %348, i64 %347, i64 %349
  store i64 %select.val.131, i64* %0, align 8
  %350 = getelementptr inbounds i64, i64* %0, i64 1
  %351 = load i1, i1* %out.18
  %352 = icmp slt i64 1, %N
  %353 = bitcast i64* %shadow to i64*
  %safe.132 = or i1 %351, %352
  %select.ptr.133 = select i1 %safe.132, i64* %350, i64* %353
  %354 = load i64, i64* %select.ptr.133, align 8
  %355 = lshr i64 %354, 1
  %356 = load i1, i1* %out.18
  %357 = icmp slt i64 1, %N
  %358 = bitcast i64* %shadow to i64*
  %safe.134 = or i1 %356, %357
  %select.ptr.135 = select i1 %safe.134, i64* %350, i64* %358
  %359 = load i64, i64* %350
  %select.val.136 = select i1 %356, i64 %355, i64 %359
  store i64 %select.val.136, i64* %select.ptr.135, align 8
  %360 = getelementptr inbounds i64, i64* %0, i64 2
  %361 = load i1, i1* %out.18
  %362 = icmp slt i64 2, %N
  %363 = bitcast i64* %shadow to i64*
  %safe.137 = or i1 %361, %362
  %select.ptr.138 = select i1 %safe.137, i64* %360, i64* %363
  %364 = load i64, i64* %select.ptr.138, align 8
  %365 = lshr i64 %364, 1
  %366 = load i1, i1* %out.18
  %367 = icmp slt i64 2, %N
  %368 = bitcast i64* %shadow to i64*
  %safe.139 = or i1 %366, %367
  %select.ptr.140 = select i1 %safe.139, i64* %360, i64* %368
  %369 = load i64, i64* %360
  %select.val.141 = select i1 %366, i64 %365, i64 %369
  store i64 %select.val.141, i64* %select.ptr.140, align 8
  %370 = load i1, i1* %out.18
  %371 = icmp slt i64 0, 3
  %372 = bitcast i64* %shadow to i64*
  %safe.142 = or i1 %370, %371
  %select.ptr.143 = select i1 %safe.142, i64* %18, i64* %372
  %373 = load i64, i64* %select.ptr.143, align 16
  %374 = shl i64 %373, 1
  %375 = load i1, i1* %out.18
  %376 = icmp slt i64 0, 3
  %377 = bitcast i64* %shadow to i64*
  %safe.144 = or i1 %375, %376
  %select.ptr.145 = select i1 %safe.144, i64* %18, i64* %377
  %378 = load i64, i64* %18
  %select.val.146 = select i1 %375, i64 %374, i64 %378
  store i64 %select.val.146, i64* %select.ptr.145, align 16
  %379 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %380 = load i1, i1* %out.18
  %381 = icmp slt i64 1, 3
  %382 = bitcast i64* %shadow to i64*
  %safe.147 = or i1 %380, %381
  %select.ptr.148 = select i1 %safe.147, i64* %379, i64* %382
  %383 = load i64, i64* %select.ptr.148, align 8
  %384 = shl i64 %383, 1
  %385 = load i1, i1* %out.18
  %386 = icmp slt i64 1, 3
  %387 = bitcast i64* %shadow to i64*
  %safe.149 = or i1 %385, %386
  %select.ptr.150 = select i1 %safe.149, i64* %379, i64* %387
  %388 = load i64, i64* %379
  %select.val.151 = select i1 %385, i64 %384, i64 %388
  store i64 %select.val.151, i64* %select.ptr.150, align 8
  %389 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %390 = load i1, i1* %out.18
  %391 = icmp slt i64 2, 3
  %392 = bitcast i64* %shadow to i64*
  %safe.152 = or i1 %390, %391
  %select.ptr.153 = select i1 %safe.152, i64* %389, i64* %392
  %393 = load i64, i64* %select.ptr.153, align 16
  %394 = shl i64 %393, 1
  %395 = load i1, i1* %out.18
  %396 = icmp slt i64 2, 3
  %397 = bitcast i64* %shadow to i64*
  %safe.154 = or i1 %395, %396
  %select.ptr.155 = select i1 %safe.154, i64* %389, i64* %397
  %398 = load i64, i64* %389
  %select.val.156 = select i1 %395, i64 %394, i64 %398
  store i64 %select.val.156, i64* %select.ptr.155, align 16
  %399 = load i1, i1* %out.18
  %400 = load i64, i64* %0, align 8
  %401 = and i64 %400, 1
  %402 = icmp ne i64 %401, 0
  %403 = load i1, i1* %out.18
  %in.210 = and i1 %403, %402
  store i1 %in.210, i1* %out.19
  %404 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %405 = load i1, i1* %out.19
  %406 = icmp slt i64 2, 3
  %407 = bitcast i64* %shadow to i64*
  %safe.157 = or i1 %405, %406
  %select.ptr.158 = select i1 %safe.157, i64* %404, i64* %407
  %408 = load i64, i64* %select.ptr.158, align 16
  %409 = or i64 %408, 1
  %410 = load i1, i1* %out.19
  %411 = icmp slt i64 2, 3
  %412 = bitcast i64* %shadow to i64*
  %safe.159 = or i1 %410, %411
  %select.ptr.160 = select i1 %safe.159, i64* %404, i64* %412
  %413 = load i64, i64* %404
  %select.val.161 = select i1 %410, i64 %409, i64 %413
  store i64 %select.val.161, i64* %select.ptr.160, align 16
  %414 = load i1, i1* %out.18
  %415 = xor i1 %402, true
  %in.211 = and i1 %414, %415
  %416 = load i1, i1* %out.19
  %417 = or i1 %in.211, %416
  store i1 %417, i1* %out.20
  %418 = getelementptr inbounds i64, i64* %0, i64 1
  %419 = load i1, i1* %out.20
  %420 = icmp slt i64 1, %N
  %421 = bitcast i64* %shadow to i64*
  %safe.162 = or i1 %419, %420
  %select.ptr.163 = select i1 %safe.162, i64* %418, i64* %421
  %422 = load i64, i64* %select.ptr.163, align 8
  %423 = and i64 %422, 1
  %424 = icmp ne i64 %423, 0
  %425 = load i1, i1* %out.20
  %in.212 = and i1 %425, %424
  store i1 %in.212, i1* %out.21
  %426 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %427 = load i1, i1* %out.21
  %428 = icmp slt i64 1, 3
  %429 = bitcast i64* %shadow to i64*
  %safe.164 = or i1 %427, %428
  %select.ptr.165 = select i1 %safe.164, i64* %426, i64* %429
  %430 = load i64, i64* %select.ptr.165, align 8
  %431 = or i64 %430, 1
  %432 = load i1, i1* %out.21
  %433 = icmp slt i64 1, 3
  %434 = bitcast i64* %shadow to i64*
  %safe.166 = or i1 %432, %433
  %select.ptr.167 = select i1 %safe.166, i64* %426, i64* %434
  %435 = load i64, i64* %426
  %select.val.168 = select i1 %432, i64 %431, i64 %435
  store i64 %select.val.168, i64* %select.ptr.167, align 8
  %436 = load i1, i1* %out.20
  %437 = xor i1 %424, true
  %in.213 = and i1 %436, %437
  %438 = load i1, i1* %out.21
  %439 = or i1 %in.213, %438
  store i1 %439, i1* %out.22
  %440 = getelementptr inbounds i64, i64* %0, i64 2
  %441 = load i1, i1* %out.22
  %442 = icmp slt i64 2, %N
  %443 = bitcast i64* %shadow to i64*
  %safe.169 = or i1 %441, %442
  %select.ptr.170 = select i1 %safe.169, i64* %440, i64* %443
  %444 = load i64, i64* %select.ptr.170, align 8
  %445 = and i64 %444, 1
  %446 = icmp ne i64 %445, 0
  %447 = load i1, i1* %out.22
  %in.214 = and i1 %447, %446
  store i1 %in.214, i1* %out.23
  %448 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %449 = load i1, i1* %out.23
  %450 = icmp slt i64 0, 3
  %451 = bitcast i64* %shadow to i64*
  %safe.171 = or i1 %449, %450
  %select.ptr.172 = select i1 %safe.171, i64* %448, i64* %451
  %452 = load i64, i64* %select.ptr.172, align 16
  %453 = or i64 %452, 1
  %454 = load i1, i1* %out.23
  %455 = icmp slt i64 0, 3
  %456 = bitcast i64* %shadow to i64*
  %safe.173 = or i1 %454, %455
  %select.ptr.174 = select i1 %safe.173, i64* %448, i64* %456
  %457 = load i64, i64* %448
  %select.val.175 = select i1 %454, i64 %453, i64 %457
  store i64 %select.val.175, i64* %select.ptr.174, align 16
  %458 = load i1, i1* %out.22
  %459 = xor i1 %446, true
  %in.215 = and i1 %458, %459
  %460 = load i1, i1* %out.23
  %461 = or i1 %in.215, %460
  store i1 %461, i1* %out.24
  %462 = load i1, i1* %out.24
  %463 = load i64, i64* %0, align 8
  %464 = lshr i64 %463, 1
  %465 = load i1, i1* %out.24
  %466 = load i64, i64* %0
  %select.val.176 = select i1 %465, i64 %464, i64 %466
  store i64 %select.val.176, i64* %0, align 8
  %467 = getelementptr inbounds i64, i64* %0, i64 1
  %468 = load i1, i1* %out.24
  %469 = icmp slt i64 1, %N
  %470 = bitcast i64* %shadow to i64*
  %safe.177 = or i1 %468, %469
  %select.ptr.178 = select i1 %safe.177, i64* %467, i64* %470
  %471 = load i64, i64* %select.ptr.178, align 8
  %472 = lshr i64 %471, 1
  %473 = load i1, i1* %out.24
  %474 = icmp slt i64 1, %N
  %475 = bitcast i64* %shadow to i64*
  %safe.179 = or i1 %473, %474
  %select.ptr.180 = select i1 %safe.179, i64* %467, i64* %475
  %476 = load i64, i64* %467
  %select.val.181 = select i1 %473, i64 %472, i64 %476
  store i64 %select.val.181, i64* %select.ptr.180, align 8
  %477 = getelementptr inbounds i64, i64* %0, i64 2
  %478 = load i1, i1* %out.24
  %479 = icmp slt i64 2, %N
  %480 = bitcast i64* %shadow to i64*
  %safe.182 = or i1 %478, %479
  %select.ptr.183 = select i1 %safe.182, i64* %477, i64* %480
  %481 = load i64, i64* %select.ptr.183, align 8
  %482 = lshr i64 %481, 1
  %483 = load i1, i1* %out.24
  %484 = icmp slt i64 2, %N
  %485 = bitcast i64* %shadow to i64*
  %safe.184 = or i1 %483, %484
  %select.ptr.185 = select i1 %safe.184, i64* %477, i64* %485
  %486 = load i64, i64* %477
  %select.val.186 = select i1 %483, i64 %482, i64 %486
  store i64 %select.val.186, i64* %select.ptr.185, align 8
  %487 = load i1, i1* %out.24
  %488 = icmp slt i64 0, 3
  %489 = bitcast i64* %shadow to i64*
  %safe.187 = or i1 %487, %488
  %select.ptr.188 = select i1 %safe.187, i64* %18, i64* %489
  %490 = load i64, i64* %select.ptr.188, align 16
  %491 = shl i64 %490, 1
  %492 = load i1, i1* %out.24
  %493 = icmp slt i64 0, 3
  %494 = bitcast i64* %shadow to i64*
  %safe.189 = or i1 %492, %493
  %select.ptr.190 = select i1 %safe.189, i64* %18, i64* %494
  %495 = load i64, i64* %18
  %select.val.191 = select i1 %492, i64 %491, i64 %495
  store i64 %select.val.191, i64* %select.ptr.190, align 16
  %496 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %497 = load i1, i1* %out.24
  %498 = icmp slt i64 1, 3
  %499 = bitcast i64* %shadow to i64*
  %safe.192 = or i1 %497, %498
  %select.ptr.193 = select i1 %safe.192, i64* %496, i64* %499
  %500 = load i64, i64* %select.ptr.193, align 8
  %501 = shl i64 %500, 1
  %502 = load i1, i1* %out.24
  %503 = icmp slt i64 1, 3
  %504 = bitcast i64* %shadow to i64*
  %safe.194 = or i1 %502, %503
  %select.ptr.195 = select i1 %safe.194, i64* %496, i64* %504
  %505 = load i64, i64* %496
  %select.val.196 = select i1 %502, i64 %501, i64 %505
  store i64 %select.val.196, i64* %select.ptr.195, align 8
  %506 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %507 = load i1, i1* %out.24
  %508 = icmp slt i64 2, 3
  %509 = bitcast i64* %shadow to i64*
  %safe.197 = or i1 %507, %508
  %select.ptr.198 = select i1 %safe.197, i64* %506, i64* %509
  %510 = load i64, i64* %select.ptr.198, align 16
  %511 = shl i64 %510, 1
  %512 = load i1, i1* %out.24
  %513 = icmp slt i64 2, 3
  %514 = bitcast i64* %shadow to i64*
  %safe.199 = or i1 %512, %513
  %select.ptr.200 = select i1 %safe.199, i64* %506, i64* %514
  %515 = load i64, i64* %506
  %select.val.201 = select i1 %512, i64 %511, i64 %515
  store i64 %select.val.201, i64* %select.ptr.200, align 16
  %516 = load i1, i1* %out.24
  %517 = load i64, i64* %0, align 8
  %518 = and i64 %517, 1
  %519 = icmp ne i64 %518, 0
  %520 = load i1, i1* %out.24
  %in.216 = and i1 %520, %519
  store i1 %in.216, i1* %out.25
  %521 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %522 = load i1, i1* %out.25
  %523 = icmp slt i64 2, 3
  %524 = bitcast i64* %shadow to i64*
  %safe.202 = or i1 %522, %523
  %select.ptr.203 = select i1 %safe.202, i64* %521, i64* %524
  %525 = load i64, i64* %select.ptr.203, align 16
  %526 = or i64 %525, 1
  %527 = load i1, i1* %out.25
  %528 = icmp slt i64 2, 3
  %529 = bitcast i64* %shadow to i64*
  %safe.204 = or i1 %527, %528
  %select.ptr.205 = select i1 %safe.204, i64* %521, i64* %529
  %530 = load i64, i64* %521
  %select.val.206 = select i1 %527, i64 %526, i64 %530
  store i64 %select.val.206, i64* %select.ptr.205, align 16
  %531 = load i1, i1* %out.24
  %532 = xor i1 %519, true
  %in.217 = and i1 %531, %532
  %533 = load i1, i1* %out.25
  %534 = or i1 %in.217, %533
  store i1 %534, i1* %out.26
  %535 = getelementptr inbounds i64, i64* %0, i64 1
  %536 = load i1, i1* %out.26
  %537 = icmp slt i64 1, %N
  %538 = bitcast i64* %shadow to i64*
  %safe.207 = or i1 %536, %537
  %select.ptr.208 = select i1 %safe.207, i64* %535, i64* %538
  %539 = load i64, i64* %select.ptr.208, align 8
  %540 = and i64 %539, 1
  %541 = icmp ne i64 %540, 0
  %542 = load i1, i1* %out.26
  %in.218 = and i1 %542, %541
  store i1 %in.218, i1* %out.27
  %543 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %544 = load i1, i1* %out.27
  %545 = icmp slt i64 1, 3
  %546 = bitcast i64* %shadow to i64*
  %safe.209 = or i1 %544, %545
  %select.ptr.210 = select i1 %safe.209, i64* %543, i64* %546
  %547 = load i64, i64* %select.ptr.210, align 8
  %548 = or i64 %547, 1
  %549 = load i1, i1* %out.27
  %550 = icmp slt i64 1, 3
  %551 = bitcast i64* %shadow to i64*
  %safe.211 = or i1 %549, %550
  %select.ptr.212 = select i1 %safe.211, i64* %543, i64* %551
  %552 = load i64, i64* %543
  %select.val.213 = select i1 %549, i64 %548, i64 %552
  store i64 %select.val.213, i64* %select.ptr.212, align 8
  %553 = load i1, i1* %out.26
  %554 = xor i1 %541, true
  %in.219 = and i1 %553, %554
  %555 = load i1, i1* %out.27
  %556 = or i1 %in.219, %555
  store i1 %556, i1* %out.28
  %557 = getelementptr inbounds i64, i64* %0, i64 2
  %558 = load i1, i1* %out.28
  %559 = icmp slt i64 2, %N
  %560 = bitcast i64* %shadow to i64*
  %safe.214 = or i1 %558, %559
  %select.ptr.215 = select i1 %safe.214, i64* %557, i64* %560
  %561 = load i64, i64* %select.ptr.215, align 8
  %562 = and i64 %561, 1
  %563 = icmp ne i64 %562, 0
  %564 = load i1, i1* %out.28
  %in.220 = and i1 %564, %563
  store i1 %in.220, i1* %out.29
  %565 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %566 = load i1, i1* %out.29
  %567 = icmp slt i64 0, 3
  %568 = bitcast i64* %shadow to i64*
  %safe.216 = or i1 %566, %567
  %select.ptr.217 = select i1 %safe.216, i64* %565, i64* %568
  %569 = load i64, i64* %select.ptr.217, align 16
  %570 = or i64 %569, 1
  %571 = load i1, i1* %out.29
  %572 = icmp slt i64 0, 3
  %573 = bitcast i64* %shadow to i64*
  %safe.218 = or i1 %571, %572
  %select.ptr.219 = select i1 %safe.218, i64* %565, i64* %573
  %574 = load i64, i64* %565
  %select.val.220 = select i1 %571, i64 %570, i64 %574
  store i64 %select.val.220, i64* %select.ptr.219, align 16
  %575 = load i1, i1* %out.28
  %576 = xor i1 %563, true
  %in.221 = and i1 %575, %576
  %577 = load i1, i1* %out.29
  %578 = or i1 %in.221, %577
  store i1 %578, i1* %out.30
  %579 = load i1, i1* %out.30
  %580 = load i64, i64* %0, align 8
  %581 = lshr i64 %580, 1
  %582 = load i1, i1* %out.30
  %583 = load i64, i64* %0
  %select.val.221 = select i1 %582, i64 %581, i64 %583
  store i64 %select.val.221, i64* %0, align 8
  %584 = getelementptr inbounds i64, i64* %0, i64 1
  %585 = load i1, i1* %out.30
  %586 = icmp slt i64 1, %N
  %587 = bitcast i64* %shadow to i64*
  %safe.222 = or i1 %585, %586
  %select.ptr.223 = select i1 %safe.222, i64* %584, i64* %587
  %588 = load i64, i64* %select.ptr.223, align 8
  %589 = lshr i64 %588, 1
  %590 = load i1, i1* %out.30
  %591 = icmp slt i64 1, %N
  %592 = bitcast i64* %shadow to i64*
  %safe.224 = or i1 %590, %591
  %select.ptr.225 = select i1 %safe.224, i64* %584, i64* %592
  %593 = load i64, i64* %584
  %select.val.226 = select i1 %590, i64 %589, i64 %593
  store i64 %select.val.226, i64* %select.ptr.225, align 8
  %594 = getelementptr inbounds i64, i64* %0, i64 2
  %595 = load i1, i1* %out.30
  %596 = icmp slt i64 2, %N
  %597 = bitcast i64* %shadow to i64*
  %safe.227 = or i1 %595, %596
  %select.ptr.228 = select i1 %safe.227, i64* %594, i64* %597
  %598 = load i64, i64* %select.ptr.228, align 8
  %599 = lshr i64 %598, 1
  %600 = load i1, i1* %out.30
  %601 = icmp slt i64 2, %N
  %602 = bitcast i64* %shadow to i64*
  %safe.229 = or i1 %600, %601
  %select.ptr.230 = select i1 %safe.229, i64* %594, i64* %602
  %603 = load i64, i64* %594
  %select.val.231 = select i1 %600, i64 %599, i64 %603
  store i64 %select.val.231, i64* %select.ptr.230, align 8
  %604 = load i1, i1* %out.30
  %605 = icmp slt i64 0, 3
  %606 = bitcast i64* %shadow to i64*
  %safe.232 = or i1 %604, %605
  %select.ptr.233 = select i1 %safe.232, i64* %18, i64* %606
  %607 = load i64, i64* %select.ptr.233, align 16
  %608 = shl i64 %607, 1
  %609 = load i1, i1* %out.30
  %610 = icmp slt i64 0, 3
  %611 = bitcast i64* %shadow to i64*
  %safe.234 = or i1 %609, %610
  %select.ptr.235 = select i1 %safe.234, i64* %18, i64* %611
  %612 = load i64, i64* %18
  %select.val.236 = select i1 %609, i64 %608, i64 %612
  store i64 %select.val.236, i64* %select.ptr.235, align 16
  %613 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %614 = load i1, i1* %out.30
  %615 = icmp slt i64 1, 3
  %616 = bitcast i64* %shadow to i64*
  %safe.237 = or i1 %614, %615
  %select.ptr.238 = select i1 %safe.237, i64* %613, i64* %616
  %617 = load i64, i64* %select.ptr.238, align 8
  %618 = shl i64 %617, 1
  %619 = load i1, i1* %out.30
  %620 = icmp slt i64 1, 3
  %621 = bitcast i64* %shadow to i64*
  %safe.239 = or i1 %619, %620
  %select.ptr.240 = select i1 %safe.239, i64* %613, i64* %621
  %622 = load i64, i64* %613
  %select.val.241 = select i1 %619, i64 %618, i64 %622
  store i64 %select.val.241, i64* %select.ptr.240, align 8
  %623 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %624 = load i1, i1* %out.30
  %625 = icmp slt i64 2, 3
  %626 = bitcast i64* %shadow to i64*
  %safe.242 = or i1 %624, %625
  %select.ptr.243 = select i1 %safe.242, i64* %623, i64* %626
  %627 = load i64, i64* %select.ptr.243, align 16
  %628 = shl i64 %627, 1
  %629 = load i1, i1* %out.30
  %630 = icmp slt i64 2, 3
  %631 = bitcast i64* %shadow to i64*
  %safe.244 = or i1 %629, %630
  %select.ptr.245 = select i1 %safe.244, i64* %623, i64* %631
  %632 = load i64, i64* %623
  %select.val.246 = select i1 %629, i64 %628, i64 %632
  store i64 %select.val.246, i64* %select.ptr.245, align 16
  %633 = load i1, i1* %out.30
  %634 = load i64, i64* %0, align 8
  %635 = and i64 %634, 1
  %636 = icmp ne i64 %635, 0
  %637 = load i1, i1* %out.30
  %in.222 = and i1 %637, %636
  store i1 %in.222, i1* %out.31
  %638 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %639 = load i1, i1* %out.31
  %640 = icmp slt i64 2, 3
  %641 = bitcast i64* %shadow to i64*
  %safe.247 = or i1 %639, %640
  %select.ptr.248 = select i1 %safe.247, i64* %638, i64* %641
  %642 = load i64, i64* %select.ptr.248, align 16
  %643 = or i64 %642, 1
  %644 = load i1, i1* %out.31
  %645 = icmp slt i64 2, 3
  %646 = bitcast i64* %shadow to i64*
  %safe.249 = or i1 %644, %645
  %select.ptr.250 = select i1 %safe.249, i64* %638, i64* %646
  %647 = load i64, i64* %638
  %select.val.251 = select i1 %644, i64 %643, i64 %647
  store i64 %select.val.251, i64* %select.ptr.250, align 16
  %648 = load i1, i1* %out.30
  %649 = xor i1 %636, true
  %in.223 = and i1 %648, %649
  %650 = load i1, i1* %out.31
  %651 = or i1 %in.223, %650
  store i1 %651, i1* %out.32
  %652 = getelementptr inbounds i64, i64* %0, i64 1
  %653 = load i1, i1* %out.32
  %654 = icmp slt i64 1, %N
  %655 = bitcast i64* %shadow to i64*
  %safe.252 = or i1 %653, %654
  %select.ptr.253 = select i1 %safe.252, i64* %652, i64* %655
  %656 = load i64, i64* %select.ptr.253, align 8
  %657 = and i64 %656, 1
  %658 = icmp ne i64 %657, 0
  %659 = load i1, i1* %out.32
  %in.224 = and i1 %659, %658
  store i1 %in.224, i1* %out.33
  %660 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %661 = load i1, i1* %out.33
  %662 = icmp slt i64 1, 3
  %663 = bitcast i64* %shadow to i64*
  %safe.254 = or i1 %661, %662
  %select.ptr.255 = select i1 %safe.254, i64* %660, i64* %663
  %664 = load i64, i64* %select.ptr.255, align 8
  %665 = or i64 %664, 1
  %666 = load i1, i1* %out.33
  %667 = icmp slt i64 1, 3
  %668 = bitcast i64* %shadow to i64*
  %safe.256 = or i1 %666, %667
  %select.ptr.257 = select i1 %safe.256, i64* %660, i64* %668
  %669 = load i64, i64* %660
  %select.val.258 = select i1 %666, i64 %665, i64 %669
  store i64 %select.val.258, i64* %select.ptr.257, align 8
  %670 = load i1, i1* %out.32
  %671 = xor i1 %658, true
  %in.225 = and i1 %670, %671
  %672 = load i1, i1* %out.33
  %673 = or i1 %in.225, %672
  store i1 %673, i1* %out.34
  %674 = getelementptr inbounds i64, i64* %0, i64 2
  %675 = load i1, i1* %out.34
  %676 = icmp slt i64 2, %N
  %677 = bitcast i64* %shadow to i64*
  %safe.259 = or i1 %675, %676
  %select.ptr.260 = select i1 %safe.259, i64* %674, i64* %677
  %678 = load i64, i64* %select.ptr.260, align 8
  %679 = and i64 %678, 1
  %680 = icmp ne i64 %679, 0
  %681 = load i1, i1* %out.34
  %in.226 = and i1 %681, %680
  store i1 %in.226, i1* %out.35
  %682 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %683 = load i1, i1* %out.35
  %684 = icmp slt i64 0, 3
  %685 = bitcast i64* %shadow to i64*
  %safe.261 = or i1 %683, %684
  %select.ptr.262 = select i1 %safe.261, i64* %682, i64* %685
  %686 = load i64, i64* %select.ptr.262, align 16
  %687 = or i64 %686, 1
  %688 = load i1, i1* %out.35
  %689 = icmp slt i64 0, 3
  %690 = bitcast i64* %shadow to i64*
  %safe.263 = or i1 %688, %689
  %select.ptr.264 = select i1 %safe.263, i64* %682, i64* %690
  %691 = load i64, i64* %682
  %select.val.265 = select i1 %688, i64 %687, i64 %691
  store i64 %select.val.265, i64* %select.ptr.264, align 16
  %692 = load i1, i1* %out.34
  %693 = xor i1 %680, true
  %in.227 = and i1 %692, %693
  %694 = load i1, i1* %out.35
  %695 = or i1 %in.227, %694
  store i1 %695, i1* %out.36
  %696 = load i1, i1* %out.36
  %697 = load i64, i64* %0, align 8
  %698 = lshr i64 %697, 1
  %699 = load i1, i1* %out.36
  %700 = load i64, i64* %0
  %select.val.266 = select i1 %699, i64 %698, i64 %700
  store i64 %select.val.266, i64* %0, align 8
  %701 = getelementptr inbounds i64, i64* %0, i64 1
  %702 = load i1, i1* %out.36
  %703 = icmp slt i64 1, %N
  %704 = bitcast i64* %shadow to i64*
  %safe.267 = or i1 %702, %703
  %select.ptr.268 = select i1 %safe.267, i64* %701, i64* %704
  %705 = load i64, i64* %select.ptr.268, align 8
  %706 = lshr i64 %705, 1
  %707 = load i1, i1* %out.36
  %708 = icmp slt i64 1, %N
  %709 = bitcast i64* %shadow to i64*
  %safe.269 = or i1 %707, %708
  %select.ptr.270 = select i1 %safe.269, i64* %701, i64* %709
  %710 = load i64, i64* %701
  %select.val.271 = select i1 %707, i64 %706, i64 %710
  store i64 %select.val.271, i64* %select.ptr.270, align 8
  %711 = getelementptr inbounds i64, i64* %0, i64 2
  %712 = load i1, i1* %out.36
  %713 = icmp slt i64 2, %N
  %714 = bitcast i64* %shadow to i64*
  %safe.272 = or i1 %712, %713
  %select.ptr.273 = select i1 %safe.272, i64* %711, i64* %714
  %715 = load i64, i64* %select.ptr.273, align 8
  %716 = lshr i64 %715, 1
  %717 = load i1, i1* %out.36
  %718 = icmp slt i64 2, %N
  %719 = bitcast i64* %shadow to i64*
  %safe.274 = or i1 %717, %718
  %select.ptr.275 = select i1 %safe.274, i64* %711, i64* %719
  %720 = load i64, i64* %711
  %select.val.276 = select i1 %717, i64 %716, i64 %720
  store i64 %select.val.276, i64* %select.ptr.275, align 8
  %721 = load i1, i1* %out.36
  %722 = icmp slt i64 0, 3
  %723 = bitcast i64* %shadow to i64*
  %safe.277 = or i1 %721, %722
  %select.ptr.278 = select i1 %safe.277, i64* %18, i64* %723
  %724 = load i64, i64* %select.ptr.278, align 16
  %725 = shl i64 %724, 1
  %726 = load i1, i1* %out.36
  %727 = icmp slt i64 0, 3
  %728 = bitcast i64* %shadow to i64*
  %safe.279 = or i1 %726, %727
  %select.ptr.280 = select i1 %safe.279, i64* %18, i64* %728
  %729 = load i64, i64* %18
  %select.val.281 = select i1 %726, i64 %725, i64 %729
  store i64 %select.val.281, i64* %select.ptr.280, align 16
  %730 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %731 = load i1, i1* %out.36
  %732 = icmp slt i64 1, 3
  %733 = bitcast i64* %shadow to i64*
  %safe.282 = or i1 %731, %732
  %select.ptr.283 = select i1 %safe.282, i64* %730, i64* %733
  %734 = load i64, i64* %select.ptr.283, align 8
  %735 = shl i64 %734, 1
  %736 = load i1, i1* %out.36
  %737 = icmp slt i64 1, 3
  %738 = bitcast i64* %shadow to i64*
  %safe.284 = or i1 %736, %737
  %select.ptr.285 = select i1 %safe.284, i64* %730, i64* %738
  %739 = load i64, i64* %730
  %select.val.286 = select i1 %736, i64 %735, i64 %739
  store i64 %select.val.286, i64* %select.ptr.285, align 8
  %740 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %741 = load i1, i1* %out.36
  %742 = icmp slt i64 2, 3
  %743 = bitcast i64* %shadow to i64*
  %safe.287 = or i1 %741, %742
  %select.ptr.288 = select i1 %safe.287, i64* %740, i64* %743
  %744 = load i64, i64* %select.ptr.288, align 16
  %745 = shl i64 %744, 1
  %746 = load i1, i1* %out.36
  %747 = icmp slt i64 2, 3
  %748 = bitcast i64* %shadow to i64*
  %safe.289 = or i1 %746, %747
  %select.ptr.290 = select i1 %safe.289, i64* %740, i64* %748
  %749 = load i64, i64* %740
  %select.val.291 = select i1 %746, i64 %745, i64 %749
  store i64 %select.val.291, i64* %select.ptr.290, align 16
  %750 = load i1, i1* %out.36
  %751 = load i64, i64* %0, align 8
  %752 = and i64 %751, 1
  %753 = icmp ne i64 %752, 0
  %754 = load i1, i1* %out.36
  %in.228 = and i1 %754, %753
  store i1 %in.228, i1* %out.37
  %755 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %756 = load i1, i1* %out.37
  %757 = icmp slt i64 2, 3
  %758 = bitcast i64* %shadow to i64*
  %safe.292 = or i1 %756, %757
  %select.ptr.293 = select i1 %safe.292, i64* %755, i64* %758
  %759 = load i64, i64* %select.ptr.293, align 16
  %760 = or i64 %759, 1
  %761 = load i1, i1* %out.37
  %762 = icmp slt i64 2, 3
  %763 = bitcast i64* %shadow to i64*
  %safe.294 = or i1 %761, %762
  %select.ptr.295 = select i1 %safe.294, i64* %755, i64* %763
  %764 = load i64, i64* %755
  %select.val.296 = select i1 %761, i64 %760, i64 %764
  store i64 %select.val.296, i64* %select.ptr.295, align 16
  %765 = load i1, i1* %out.36
  %766 = xor i1 %753, true
  %in.229 = and i1 %765, %766
  %767 = load i1, i1* %out.37
  %768 = or i1 %in.229, %767
  store i1 %768, i1* %out.38
  %769 = getelementptr inbounds i64, i64* %0, i64 1
  %770 = load i1, i1* %out.38
  %771 = icmp slt i64 1, %N
  %772 = bitcast i64* %shadow to i64*
  %safe.297 = or i1 %770, %771
  %select.ptr.298 = select i1 %safe.297, i64* %769, i64* %772
  %773 = load i64, i64* %select.ptr.298, align 8
  %774 = and i64 %773, 1
  %775 = icmp ne i64 %774, 0
  %776 = load i1, i1* %out.38
  %in.230 = and i1 %776, %775
  store i1 %in.230, i1* %out.39
  %777 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %778 = load i1, i1* %out.39
  %779 = icmp slt i64 1, 3
  %780 = bitcast i64* %shadow to i64*
  %safe.299 = or i1 %778, %779
  %select.ptr.300 = select i1 %safe.299, i64* %777, i64* %780
  %781 = load i64, i64* %select.ptr.300, align 8
  %782 = or i64 %781, 1
  %783 = load i1, i1* %out.39
  %784 = icmp slt i64 1, 3
  %785 = bitcast i64* %shadow to i64*
  %safe.301 = or i1 %783, %784
  %select.ptr.302 = select i1 %safe.301, i64* %777, i64* %785
  %786 = load i64, i64* %777
  %select.val.303 = select i1 %783, i64 %782, i64 %786
  store i64 %select.val.303, i64* %select.ptr.302, align 8
  %787 = load i1, i1* %out.38
  %788 = xor i1 %775, true
  %in.231 = and i1 %787, %788
  %789 = load i1, i1* %out.39
  %790 = or i1 %in.231, %789
  store i1 %790, i1* %out.40
  %791 = getelementptr inbounds i64, i64* %0, i64 2
  %792 = load i1, i1* %out.40
  %793 = icmp slt i64 2, %N
  %794 = bitcast i64* %shadow to i64*
  %safe.304 = or i1 %792, %793
  %select.ptr.305 = select i1 %safe.304, i64* %791, i64* %794
  %795 = load i64, i64* %select.ptr.305, align 8
  %796 = and i64 %795, 1
  %797 = icmp ne i64 %796, 0
  %798 = load i1, i1* %out.40
  %in.232 = and i1 %798, %797
  store i1 %in.232, i1* %out.41
  %799 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %800 = load i1, i1* %out.41
  %801 = icmp slt i64 0, 3
  %802 = bitcast i64* %shadow to i64*
  %safe.306 = or i1 %800, %801
  %select.ptr.307 = select i1 %safe.306, i64* %799, i64* %802
  %803 = load i64, i64* %select.ptr.307, align 16
  %804 = or i64 %803, 1
  %805 = load i1, i1* %out.41
  %806 = icmp slt i64 0, 3
  %807 = bitcast i64* %shadow to i64*
  %safe.308 = or i1 %805, %806
  %select.ptr.309 = select i1 %safe.308, i64* %799, i64* %807
  %808 = load i64, i64* %799
  %select.val.310 = select i1 %805, i64 %804, i64 %808
  store i64 %select.val.310, i64* %select.ptr.309, align 16
  %809 = load i1, i1* %out.40
  %810 = xor i1 %797, true
  %in.233 = and i1 %809, %810
  %811 = load i1, i1* %out.41
  %812 = or i1 %in.233, %811
  store i1 %812, i1* %out.42
  %813 = load i1, i1* %out.42
  %814 = load i64, i64* %0, align 8
  %815 = lshr i64 %814, 1
  %816 = load i1, i1* %out.42
  %817 = load i64, i64* %0
  %select.val.311 = select i1 %816, i64 %815, i64 %817
  store i64 %select.val.311, i64* %0, align 8
  %818 = getelementptr inbounds i64, i64* %0, i64 1
  %819 = load i1, i1* %out.42
  %820 = icmp slt i64 1, %N
  %821 = bitcast i64* %shadow to i64*
  %safe.312 = or i1 %819, %820
  %select.ptr.313 = select i1 %safe.312, i64* %818, i64* %821
  %822 = load i64, i64* %select.ptr.313, align 8
  %823 = lshr i64 %822, 1
  %824 = load i1, i1* %out.42
  %825 = icmp slt i64 1, %N
  %826 = bitcast i64* %shadow to i64*
  %safe.314 = or i1 %824, %825
  %select.ptr.315 = select i1 %safe.314, i64* %818, i64* %826
  %827 = load i64, i64* %818
  %select.val.316 = select i1 %824, i64 %823, i64 %827
  store i64 %select.val.316, i64* %select.ptr.315, align 8
  %828 = getelementptr inbounds i64, i64* %0, i64 2
  %829 = load i1, i1* %out.42
  %830 = icmp slt i64 2, %N
  %831 = bitcast i64* %shadow to i64*
  %safe.317 = or i1 %829, %830
  %select.ptr.318 = select i1 %safe.317, i64* %828, i64* %831
  %832 = load i64, i64* %select.ptr.318, align 8
  %833 = lshr i64 %832, 1
  %834 = load i1, i1* %out.42
  %835 = icmp slt i64 2, %N
  %836 = bitcast i64* %shadow to i64*
  %safe.319 = or i1 %834, %835
  %select.ptr.320 = select i1 %safe.319, i64* %828, i64* %836
  %837 = load i64, i64* %828
  %select.val.321 = select i1 %834, i64 %833, i64 %837
  store i64 %select.val.321, i64* %select.ptr.320, align 8
  %838 = load i1, i1* %out.42
  %839 = icmp slt i64 0, 3
  %840 = bitcast i64* %shadow to i64*
  %safe.322 = or i1 %838, %839
  %select.ptr.323 = select i1 %safe.322, i64* %18, i64* %840
  %841 = load i64, i64* %select.ptr.323, align 16
  %842 = shl i64 %841, 1
  %843 = load i1, i1* %out.42
  %844 = icmp slt i64 0, 3
  %845 = bitcast i64* %shadow to i64*
  %safe.324 = or i1 %843, %844
  %select.ptr.325 = select i1 %safe.324, i64* %18, i64* %845
  %846 = load i64, i64* %18
  %select.val.326 = select i1 %843, i64 %842, i64 %846
  store i64 %select.val.326, i64* %select.ptr.325, align 16
  %847 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %848 = load i1, i1* %out.42
  %849 = icmp slt i64 1, 3
  %850 = bitcast i64* %shadow to i64*
  %safe.327 = or i1 %848, %849
  %select.ptr.328 = select i1 %safe.327, i64* %847, i64* %850
  %851 = load i64, i64* %select.ptr.328, align 8
  %852 = shl i64 %851, 1
  %853 = load i1, i1* %out.42
  %854 = icmp slt i64 1, 3
  %855 = bitcast i64* %shadow to i64*
  %safe.329 = or i1 %853, %854
  %select.ptr.330 = select i1 %safe.329, i64* %847, i64* %855
  %856 = load i64, i64* %847
  %select.val.331 = select i1 %853, i64 %852, i64 %856
  store i64 %select.val.331, i64* %select.ptr.330, align 8
  %857 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %858 = load i1, i1* %out.42
  %859 = icmp slt i64 2, 3
  %860 = bitcast i64* %shadow to i64*
  %safe.332 = or i1 %858, %859
  %select.ptr.333 = select i1 %safe.332, i64* %857, i64* %860
  %861 = load i64, i64* %select.ptr.333, align 16
  %862 = shl i64 %861, 1
  %863 = load i1, i1* %out.42
  %864 = icmp slt i64 2, 3
  %865 = bitcast i64* %shadow to i64*
  %safe.334 = or i1 %863, %864
  %select.ptr.335 = select i1 %safe.334, i64* %857, i64* %865
  %866 = load i64, i64* %857
  %select.val.336 = select i1 %863, i64 %862, i64 %866
  store i64 %select.val.336, i64* %select.ptr.335, align 16
  %867 = load i1, i1* %out.42
  %868 = load i64, i64* %0, align 8
  %869 = and i64 %868, 1
  %870 = icmp ne i64 %869, 0
  %871 = load i1, i1* %out.42
  %in.234 = and i1 %871, %870
  store i1 %in.234, i1* %out.43
  %872 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %873 = load i1, i1* %out.43
  %874 = icmp slt i64 2, 3
  %875 = bitcast i64* %shadow to i64*
  %safe.337 = or i1 %873, %874
  %select.ptr.338 = select i1 %safe.337, i64* %872, i64* %875
  %876 = load i64, i64* %select.ptr.338, align 16
  %877 = or i64 %876, 1
  %878 = load i1, i1* %out.43
  %879 = icmp slt i64 2, 3
  %880 = bitcast i64* %shadow to i64*
  %safe.339 = or i1 %878, %879
  %select.ptr.340 = select i1 %safe.339, i64* %872, i64* %880
  %881 = load i64, i64* %872
  %select.val.341 = select i1 %878, i64 %877, i64 %881
  store i64 %select.val.341, i64* %select.ptr.340, align 16
  %882 = load i1, i1* %out.42
  %883 = xor i1 %870, true
  %in.235 = and i1 %882, %883
  %884 = load i1, i1* %out.43
  %885 = or i1 %in.235, %884
  store i1 %885, i1* %out.44
  %886 = getelementptr inbounds i64, i64* %0, i64 1
  %887 = load i1, i1* %out.44
  %888 = icmp slt i64 1, %N
  %889 = bitcast i64* %shadow to i64*
  %safe.342 = or i1 %887, %888
  %select.ptr.343 = select i1 %safe.342, i64* %886, i64* %889
  %890 = load i64, i64* %select.ptr.343, align 8
  %891 = and i64 %890, 1
  %892 = icmp ne i64 %891, 0
  %893 = load i1, i1* %out.44
  %in.236 = and i1 %893, %892
  store i1 %in.236, i1* %out.45
  %894 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %895 = load i1, i1* %out.45
  %896 = icmp slt i64 1, 3
  %897 = bitcast i64* %shadow to i64*
  %safe.344 = or i1 %895, %896
  %select.ptr.345 = select i1 %safe.344, i64* %894, i64* %897
  %898 = load i64, i64* %select.ptr.345, align 8
  %899 = or i64 %898, 1
  %900 = load i1, i1* %out.45
  %901 = icmp slt i64 1, 3
  %902 = bitcast i64* %shadow to i64*
  %safe.346 = or i1 %900, %901
  %select.ptr.347 = select i1 %safe.346, i64* %894, i64* %902
  %903 = load i64, i64* %894
  %select.val.348 = select i1 %900, i64 %899, i64 %903
  store i64 %select.val.348, i64* %select.ptr.347, align 8
  %904 = load i1, i1* %out.44
  %905 = xor i1 %892, true
  %in.237 = and i1 %904, %905
  %906 = load i1, i1* %out.45
  %907 = or i1 %in.237, %906
  store i1 %907, i1* %out.46
  %908 = getelementptr inbounds i64, i64* %0, i64 2
  %909 = load i1, i1* %out.46
  %910 = icmp slt i64 2, %N
  %911 = bitcast i64* %shadow to i64*
  %safe.349 = or i1 %909, %910
  %select.ptr.350 = select i1 %safe.349, i64* %908, i64* %911
  %912 = load i64, i64* %select.ptr.350, align 8
  %913 = and i64 %912, 1
  %914 = icmp ne i64 %913, 0
  %915 = load i1, i1* %out.46
  %in.238 = and i1 %915, %914
  store i1 %in.238, i1* %out.47
  %916 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %917 = load i1, i1* %out.47
  %918 = icmp slt i64 0, 3
  %919 = bitcast i64* %shadow to i64*
  %safe.351 = or i1 %917, %918
  %select.ptr.352 = select i1 %safe.351, i64* %916, i64* %919
  %920 = load i64, i64* %select.ptr.352, align 16
  %921 = or i64 %920, 1
  %922 = load i1, i1* %out.47
  %923 = icmp slt i64 0, 3
  %924 = bitcast i64* %shadow to i64*
  %safe.353 = or i1 %922, %923
  %select.ptr.354 = select i1 %safe.353, i64* %916, i64* %924
  %925 = load i64, i64* %916
  %select.val.355 = select i1 %922, i64 %921, i64 %925
  store i64 %select.val.355, i64* %select.ptr.354, align 16
  %926 = load i1, i1* %out.46
  %927 = xor i1 %914, true
  %in.239 = and i1 %926, %927
  %928 = load i1, i1* %out.47
  %929 = or i1 %in.239, %928
  store i1 %929, i1* %out.48
  %930 = load i1, i1* %out.48
  %931 = load i64, i64* %0, align 8
  %932 = lshr i64 %931, 1
  %933 = load i1, i1* %out.48
  %934 = load i64, i64* %0
  %select.val.356 = select i1 %933, i64 %932, i64 %934
  store i64 %select.val.356, i64* %0, align 8
  %935 = getelementptr inbounds i64, i64* %0, i64 1
  %936 = load i1, i1* %out.48
  %937 = icmp slt i64 1, %N
  %938 = bitcast i64* %shadow to i64*
  %safe.357 = or i1 %936, %937
  %select.ptr.358 = select i1 %safe.357, i64* %935, i64* %938
  %939 = load i64, i64* %select.ptr.358, align 8
  %940 = lshr i64 %939, 1
  %941 = load i1, i1* %out.48
  %942 = icmp slt i64 1, %N
  %943 = bitcast i64* %shadow to i64*
  %safe.359 = or i1 %941, %942
  %select.ptr.360 = select i1 %safe.359, i64* %935, i64* %943
  %944 = load i64, i64* %935
  %select.val.361 = select i1 %941, i64 %940, i64 %944
  store i64 %select.val.361, i64* %select.ptr.360, align 8
  %945 = getelementptr inbounds i64, i64* %0, i64 2
  %946 = load i1, i1* %out.48
  %947 = icmp slt i64 2, %N
  %948 = bitcast i64* %shadow to i64*
  %safe.362 = or i1 %946, %947
  %select.ptr.363 = select i1 %safe.362, i64* %945, i64* %948
  %949 = load i64, i64* %select.ptr.363, align 8
  %950 = lshr i64 %949, 1
  %951 = load i1, i1* %out.48
  %952 = icmp slt i64 2, %N
  %953 = bitcast i64* %shadow to i64*
  %safe.364 = or i1 %951, %952
  %select.ptr.365 = select i1 %safe.364, i64* %945, i64* %953
  %954 = load i64, i64* %945
  %select.val.366 = select i1 %951, i64 %950, i64 %954
  store i64 %select.val.366, i64* %select.ptr.365, align 8
  %955 = load i1, i1* %out.48
  %956 = icmp slt i64 0, 3
  %957 = bitcast i64* %shadow to i64*
  %safe.367 = or i1 %955, %956
  %select.ptr.368 = select i1 %safe.367, i64* %18, i64* %957
  %958 = load i64, i64* %select.ptr.368, align 16
  %959 = shl i64 %958, 1
  %960 = load i1, i1* %out.48
  %961 = icmp slt i64 0, 3
  %962 = bitcast i64* %shadow to i64*
  %safe.369 = or i1 %960, %961
  %select.ptr.370 = select i1 %safe.369, i64* %18, i64* %962
  %963 = load i64, i64* %18
  %select.val.371 = select i1 %960, i64 %959, i64 %963
  store i64 %select.val.371, i64* %select.ptr.370, align 16
  %964 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %965 = load i1, i1* %out.48
  %966 = icmp slt i64 1, 3
  %967 = bitcast i64* %shadow to i64*
  %safe.372 = or i1 %965, %966
  %select.ptr.373 = select i1 %safe.372, i64* %964, i64* %967
  %968 = load i64, i64* %select.ptr.373, align 8
  %969 = shl i64 %968, 1
  %970 = load i1, i1* %out.48
  %971 = icmp slt i64 1, 3
  %972 = bitcast i64* %shadow to i64*
  %safe.374 = or i1 %970, %971
  %select.ptr.375 = select i1 %safe.374, i64* %964, i64* %972
  %973 = load i64, i64* %964
  %select.val.376 = select i1 %970, i64 %969, i64 %973
  store i64 %select.val.376, i64* %select.ptr.375, align 8
  %974 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %975 = load i1, i1* %out.48
  %976 = icmp slt i64 2, 3
  %977 = bitcast i64* %shadow to i64*
  %safe.377 = or i1 %975, %976
  %select.ptr.378 = select i1 %safe.377, i64* %974, i64* %977
  %978 = load i64, i64* %select.ptr.378, align 16
  %979 = shl i64 %978, 1
  %980 = load i1, i1* %out.48
  %981 = icmp slt i64 2, 3
  %982 = bitcast i64* %shadow to i64*
  %safe.379 = or i1 %980, %981
  %select.ptr.380 = select i1 %safe.379, i64* %974, i64* %982
  %983 = load i64, i64* %974
  %select.val.381 = select i1 %980, i64 %979, i64 %983
  store i64 %select.val.381, i64* %select.ptr.380, align 16
  %984 = load i1, i1* %out.48
  %985 = load i64, i64* %0, align 8
  %986 = and i64 %985, 1
  %987 = icmp ne i64 %986, 0
  %988 = load i1, i1* %out.48
  %in.240 = and i1 %988, %987
  store i1 %in.240, i1* %out.49
  %989 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %990 = load i1, i1* %out.49
  %991 = icmp slt i64 2, 3
  %992 = bitcast i64* %shadow to i64*
  %safe.382 = or i1 %990, %991
  %select.ptr.383 = select i1 %safe.382, i64* %989, i64* %992
  %993 = load i64, i64* %select.ptr.383, align 16
  %994 = or i64 %993, 1
  %995 = load i1, i1* %out.49
  %996 = icmp slt i64 2, 3
  %997 = bitcast i64* %shadow to i64*
  %safe.384 = or i1 %995, %996
  %select.ptr.385 = select i1 %safe.384, i64* %989, i64* %997
  %998 = load i64, i64* %989
  %select.val.386 = select i1 %995, i64 %994, i64 %998
  store i64 %select.val.386, i64* %select.ptr.385, align 16
  %999 = load i1, i1* %out.48
  %1000 = xor i1 %987, true
  %in.241 = and i1 %999, %1000
  %1001 = load i1, i1* %out.49
  %1002 = or i1 %in.241, %1001
  store i1 %1002, i1* %out.50
  %1003 = getelementptr inbounds i64, i64* %0, i64 1
  %1004 = load i1, i1* %out.50
  %1005 = icmp slt i64 1, %N
  %1006 = bitcast i64* %shadow to i64*
  %safe.387 = or i1 %1004, %1005
  %select.ptr.388 = select i1 %safe.387, i64* %1003, i64* %1006
  %1007 = load i64, i64* %select.ptr.388, align 8
  %1008 = and i64 %1007, 1
  %1009 = icmp ne i64 %1008, 0
  %1010 = load i1, i1* %out.50
  %in.242 = and i1 %1010, %1009
  store i1 %in.242, i1* %out.51
  %1011 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1012 = load i1, i1* %out.51
  %1013 = icmp slt i64 1, 3
  %1014 = bitcast i64* %shadow to i64*
  %safe.389 = or i1 %1012, %1013
  %select.ptr.390 = select i1 %safe.389, i64* %1011, i64* %1014
  %1015 = load i64, i64* %select.ptr.390, align 8
  %1016 = or i64 %1015, 1
  %1017 = load i1, i1* %out.51
  %1018 = icmp slt i64 1, 3
  %1019 = bitcast i64* %shadow to i64*
  %safe.391 = or i1 %1017, %1018
  %select.ptr.392 = select i1 %safe.391, i64* %1011, i64* %1019
  %1020 = load i64, i64* %1011
  %select.val.393 = select i1 %1017, i64 %1016, i64 %1020
  store i64 %select.val.393, i64* %select.ptr.392, align 8
  %1021 = load i1, i1* %out.50
  %1022 = xor i1 %1009, true
  %in.243 = and i1 %1021, %1022
  %1023 = load i1, i1* %out.51
  %1024 = or i1 %in.243, %1023
  store i1 %1024, i1* %out.52
  %1025 = getelementptr inbounds i64, i64* %0, i64 2
  %1026 = load i1, i1* %out.52
  %1027 = icmp slt i64 2, %N
  %1028 = bitcast i64* %shadow to i64*
  %safe.394 = or i1 %1026, %1027
  %select.ptr.395 = select i1 %safe.394, i64* %1025, i64* %1028
  %1029 = load i64, i64* %select.ptr.395, align 8
  %1030 = and i64 %1029, 1
  %1031 = icmp ne i64 %1030, 0
  %1032 = load i1, i1* %out.52
  %in.244 = and i1 %1032, %1031
  store i1 %in.244, i1* %out.53
  %1033 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %1034 = load i1, i1* %out.53
  %1035 = icmp slt i64 0, 3
  %1036 = bitcast i64* %shadow to i64*
  %safe.396 = or i1 %1034, %1035
  %select.ptr.397 = select i1 %safe.396, i64* %1033, i64* %1036
  %1037 = load i64, i64* %select.ptr.397, align 16
  %1038 = or i64 %1037, 1
  %1039 = load i1, i1* %out.53
  %1040 = icmp slt i64 0, 3
  %1041 = bitcast i64* %shadow to i64*
  %safe.398 = or i1 %1039, %1040
  %select.ptr.399 = select i1 %safe.398, i64* %1033, i64* %1041
  %1042 = load i64, i64* %1033
  %select.val.400 = select i1 %1039, i64 %1038, i64 %1042
  store i64 %select.val.400, i64* %select.ptr.399, align 16
  %1043 = load i1, i1* %out.52
  %1044 = xor i1 %1031, true
  %in.245 = and i1 %1043, %1044
  %1045 = load i1, i1* %out.53
  %1046 = or i1 %in.245, %1045
  store i1 %1046, i1* %out.54
  %1047 = load i1, i1* %out.54
  %1048 = load i64, i64* %0, align 8
  %1049 = lshr i64 %1048, 1
  %1050 = load i1, i1* %out.54
  %1051 = load i64, i64* %0
  %select.val.401 = select i1 %1050, i64 %1049, i64 %1051
  store i64 %select.val.401, i64* %0, align 8
  %1052 = getelementptr inbounds i64, i64* %0, i64 1
  %1053 = load i1, i1* %out.54
  %1054 = icmp slt i64 1, %N
  %1055 = bitcast i64* %shadow to i64*
  %safe.402 = or i1 %1053, %1054
  %select.ptr.403 = select i1 %safe.402, i64* %1052, i64* %1055
  %1056 = load i64, i64* %select.ptr.403, align 8
  %1057 = lshr i64 %1056, 1
  %1058 = load i1, i1* %out.54
  %1059 = icmp slt i64 1, %N
  %1060 = bitcast i64* %shadow to i64*
  %safe.404 = or i1 %1058, %1059
  %select.ptr.405 = select i1 %safe.404, i64* %1052, i64* %1060
  %1061 = load i64, i64* %1052
  %select.val.406 = select i1 %1058, i64 %1057, i64 %1061
  store i64 %select.val.406, i64* %select.ptr.405, align 8
  %1062 = getelementptr inbounds i64, i64* %0, i64 2
  %1063 = load i1, i1* %out.54
  %1064 = icmp slt i64 2, %N
  %1065 = bitcast i64* %shadow to i64*
  %safe.407 = or i1 %1063, %1064
  %select.ptr.408 = select i1 %safe.407, i64* %1062, i64* %1065
  %1066 = load i64, i64* %select.ptr.408, align 8
  %1067 = lshr i64 %1066, 1
  %1068 = load i1, i1* %out.54
  %1069 = icmp slt i64 2, %N
  %1070 = bitcast i64* %shadow to i64*
  %safe.409 = or i1 %1068, %1069
  %select.ptr.410 = select i1 %safe.409, i64* %1062, i64* %1070
  %1071 = load i64, i64* %1062
  %select.val.411 = select i1 %1068, i64 %1067, i64 %1071
  store i64 %select.val.411, i64* %select.ptr.410, align 8
  %1072 = load i1, i1* %out.54
  %1073 = icmp slt i64 0, 3
  %1074 = bitcast i64* %shadow to i64*
  %safe.412 = or i1 %1072, %1073
  %select.ptr.413 = select i1 %safe.412, i64* %18, i64* %1074
  %1075 = load i64, i64* %select.ptr.413, align 16
  %1076 = shl i64 %1075, 1
  %1077 = load i1, i1* %out.54
  %1078 = icmp slt i64 0, 3
  %1079 = bitcast i64* %shadow to i64*
  %safe.414 = or i1 %1077, %1078
  %select.ptr.415 = select i1 %safe.414, i64* %18, i64* %1079
  %1080 = load i64, i64* %18
  %select.val.416 = select i1 %1077, i64 %1076, i64 %1080
  store i64 %select.val.416, i64* %select.ptr.415, align 16
  %1081 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1082 = load i1, i1* %out.54
  %1083 = icmp slt i64 1, 3
  %1084 = bitcast i64* %shadow to i64*
  %safe.417 = or i1 %1082, %1083
  %select.ptr.418 = select i1 %safe.417, i64* %1081, i64* %1084
  %1085 = load i64, i64* %select.ptr.418, align 8
  %1086 = shl i64 %1085, 1
  %1087 = load i1, i1* %out.54
  %1088 = icmp slt i64 1, 3
  %1089 = bitcast i64* %shadow to i64*
  %safe.419 = or i1 %1087, %1088
  %select.ptr.420 = select i1 %safe.419, i64* %1081, i64* %1089
  %1090 = load i64, i64* %1081
  %select.val.421 = select i1 %1087, i64 %1086, i64 %1090
  store i64 %select.val.421, i64* %select.ptr.420, align 8
  %1091 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1092 = load i1, i1* %out.54
  %1093 = icmp slt i64 2, 3
  %1094 = bitcast i64* %shadow to i64*
  %safe.422 = or i1 %1092, %1093
  %select.ptr.423 = select i1 %safe.422, i64* %1091, i64* %1094
  %1095 = load i64, i64* %select.ptr.423, align 16
  %1096 = shl i64 %1095, 1
  %1097 = load i1, i1* %out.54
  %1098 = icmp slt i64 2, 3
  %1099 = bitcast i64* %shadow to i64*
  %safe.424 = or i1 %1097, %1098
  %select.ptr.425 = select i1 %safe.424, i64* %1091, i64* %1099
  %1100 = load i64, i64* %1091
  %select.val.426 = select i1 %1097, i64 %1096, i64 %1100
  store i64 %select.val.426, i64* %select.ptr.425, align 16
  %1101 = load i1, i1* %out.54
  %1102 = load i64, i64* %0, align 8
  %1103 = and i64 %1102, 1
  %1104 = icmp ne i64 %1103, 0
  %1105 = load i1, i1* %out.54
  %in.246 = and i1 %1105, %1104
  store i1 %in.246, i1* %out.55
  %1106 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1107 = load i1, i1* %out.55
  %1108 = icmp slt i64 2, 3
  %1109 = bitcast i64* %shadow to i64*
  %safe.427 = or i1 %1107, %1108
  %select.ptr.428 = select i1 %safe.427, i64* %1106, i64* %1109
  %1110 = load i64, i64* %select.ptr.428, align 16
  %1111 = or i64 %1110, 1
  %1112 = load i1, i1* %out.55
  %1113 = icmp slt i64 2, 3
  %1114 = bitcast i64* %shadow to i64*
  %safe.429 = or i1 %1112, %1113
  %select.ptr.430 = select i1 %safe.429, i64* %1106, i64* %1114
  %1115 = load i64, i64* %1106
  %select.val.431 = select i1 %1112, i64 %1111, i64 %1115
  store i64 %select.val.431, i64* %select.ptr.430, align 16
  %1116 = load i1, i1* %out.54
  %1117 = xor i1 %1104, true
  %in.247 = and i1 %1116, %1117
  %1118 = load i1, i1* %out.55
  %1119 = or i1 %in.247, %1118
  store i1 %1119, i1* %out.56
  %1120 = getelementptr inbounds i64, i64* %0, i64 1
  %1121 = load i1, i1* %out.56
  %1122 = icmp slt i64 1, %N
  %1123 = bitcast i64* %shadow to i64*
  %safe.432 = or i1 %1121, %1122
  %select.ptr.433 = select i1 %safe.432, i64* %1120, i64* %1123
  %1124 = load i64, i64* %select.ptr.433, align 8
  %1125 = and i64 %1124, 1
  %1126 = icmp ne i64 %1125, 0
  %1127 = load i1, i1* %out.56
  %in.248 = and i1 %1127, %1126
  store i1 %in.248, i1* %out.57
  %1128 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1129 = load i1, i1* %out.57
  %1130 = icmp slt i64 1, 3
  %1131 = bitcast i64* %shadow to i64*
  %safe.434 = or i1 %1129, %1130
  %select.ptr.435 = select i1 %safe.434, i64* %1128, i64* %1131
  %1132 = load i64, i64* %select.ptr.435, align 8
  %1133 = or i64 %1132, 1
  %1134 = load i1, i1* %out.57
  %1135 = icmp slt i64 1, 3
  %1136 = bitcast i64* %shadow to i64*
  %safe.436 = or i1 %1134, %1135
  %select.ptr.437 = select i1 %safe.436, i64* %1128, i64* %1136
  %1137 = load i64, i64* %1128
  %select.val.438 = select i1 %1134, i64 %1133, i64 %1137
  store i64 %select.val.438, i64* %select.ptr.437, align 8
  %1138 = load i1, i1* %out.56
  %1139 = xor i1 %1126, true
  %in.249 = and i1 %1138, %1139
  %1140 = load i1, i1* %out.57
  %1141 = or i1 %in.249, %1140
  store i1 %1141, i1* %out.58
  %1142 = getelementptr inbounds i64, i64* %0, i64 2
  %1143 = load i1, i1* %out.58
  %1144 = icmp slt i64 2, %N
  %1145 = bitcast i64* %shadow to i64*
  %safe.439 = or i1 %1143, %1144
  %select.ptr.440 = select i1 %safe.439, i64* %1142, i64* %1145
  %1146 = load i64, i64* %select.ptr.440, align 8
  %1147 = and i64 %1146, 1
  %1148 = icmp ne i64 %1147, 0
  %1149 = load i1, i1* %out.58
  %in.250 = and i1 %1149, %1148
  store i1 %in.250, i1* %out.59
  %1150 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %1151 = load i1, i1* %out.59
  %1152 = icmp slt i64 0, 3
  %1153 = bitcast i64* %shadow to i64*
  %safe.441 = or i1 %1151, %1152
  %select.ptr.442 = select i1 %safe.441, i64* %1150, i64* %1153
  %1154 = load i64, i64* %select.ptr.442, align 16
  %1155 = or i64 %1154, 1
  %1156 = load i1, i1* %out.59
  %1157 = icmp slt i64 0, 3
  %1158 = bitcast i64* %shadow to i64*
  %safe.443 = or i1 %1156, %1157
  %select.ptr.444 = select i1 %safe.443, i64* %1150, i64* %1158
  %1159 = load i64, i64* %1150
  %select.val.445 = select i1 %1156, i64 %1155, i64 %1159
  store i64 %select.val.445, i64* %select.ptr.444, align 16
  %1160 = load i1, i1* %out.58
  %1161 = xor i1 %1148, true
  %in.251 = and i1 %1160, %1161
  %1162 = load i1, i1* %out.59
  %1163 = or i1 %in.251, %1162
  store i1 %1163, i1* %out.60
  %1164 = load i1, i1* %out.60
  %1165 = load i64, i64* %0, align 8
  %1166 = lshr i64 %1165, 1
  %1167 = load i1, i1* %out.60
  %1168 = load i64, i64* %0
  %select.val.446 = select i1 %1167, i64 %1166, i64 %1168
  store i64 %select.val.446, i64* %0, align 8
  %1169 = getelementptr inbounds i64, i64* %0, i64 1
  %1170 = load i1, i1* %out.60
  %1171 = icmp slt i64 1, %N
  %1172 = bitcast i64* %shadow to i64*
  %safe.447 = or i1 %1170, %1171
  %select.ptr.448 = select i1 %safe.447, i64* %1169, i64* %1172
  %1173 = load i64, i64* %select.ptr.448, align 8
  %1174 = lshr i64 %1173, 1
  %1175 = load i1, i1* %out.60
  %1176 = icmp slt i64 1, %N
  %1177 = bitcast i64* %shadow to i64*
  %safe.449 = or i1 %1175, %1176
  %select.ptr.450 = select i1 %safe.449, i64* %1169, i64* %1177
  %1178 = load i64, i64* %1169
  %select.val.451 = select i1 %1175, i64 %1174, i64 %1178
  store i64 %select.val.451, i64* %select.ptr.450, align 8
  %1179 = getelementptr inbounds i64, i64* %0, i64 2
  %1180 = load i1, i1* %out.60
  %1181 = icmp slt i64 2, %N
  %1182 = bitcast i64* %shadow to i64*
  %safe.452 = or i1 %1180, %1181
  %select.ptr.453 = select i1 %safe.452, i64* %1179, i64* %1182
  %1183 = load i64, i64* %select.ptr.453, align 8
  %1184 = lshr i64 %1183, 1
  %1185 = load i1, i1* %out.60
  %1186 = icmp slt i64 2, %N
  %1187 = bitcast i64* %shadow to i64*
  %safe.454 = or i1 %1185, %1186
  %select.ptr.455 = select i1 %safe.454, i64* %1179, i64* %1187
  %1188 = load i64, i64* %1179
  %select.val.456 = select i1 %1185, i64 %1184, i64 %1188
  store i64 %select.val.456, i64* %select.ptr.455, align 8
  %1189 = load i1, i1* %out.60
  %1190 = icmp slt i64 0, 3
  %1191 = bitcast i64* %shadow to i64*
  %safe.457 = or i1 %1189, %1190
  %select.ptr.458 = select i1 %safe.457, i64* %18, i64* %1191
  %1192 = load i64, i64* %select.ptr.458, align 16
  %1193 = shl i64 %1192, 1
  %1194 = load i1, i1* %out.60
  %1195 = icmp slt i64 0, 3
  %1196 = bitcast i64* %shadow to i64*
  %safe.459 = or i1 %1194, %1195
  %select.ptr.460 = select i1 %safe.459, i64* %18, i64* %1196
  %1197 = load i64, i64* %18
  %select.val.461 = select i1 %1194, i64 %1193, i64 %1197
  store i64 %select.val.461, i64* %select.ptr.460, align 16
  %1198 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1199 = load i1, i1* %out.60
  %1200 = icmp slt i64 1, 3
  %1201 = bitcast i64* %shadow to i64*
  %safe.462 = or i1 %1199, %1200
  %select.ptr.463 = select i1 %safe.462, i64* %1198, i64* %1201
  %1202 = load i64, i64* %select.ptr.463, align 8
  %1203 = shl i64 %1202, 1
  %1204 = load i1, i1* %out.60
  %1205 = icmp slt i64 1, 3
  %1206 = bitcast i64* %shadow to i64*
  %safe.464 = or i1 %1204, %1205
  %select.ptr.465 = select i1 %safe.464, i64* %1198, i64* %1206
  %1207 = load i64, i64* %1198
  %select.val.466 = select i1 %1204, i64 %1203, i64 %1207
  store i64 %select.val.466, i64* %select.ptr.465, align 8
  %1208 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1209 = load i1, i1* %out.60
  %1210 = icmp slt i64 2, 3
  %1211 = bitcast i64* %shadow to i64*
  %safe.467 = or i1 %1209, %1210
  %select.ptr.468 = select i1 %safe.467, i64* %1208, i64* %1211
  %1212 = load i64, i64* %select.ptr.468, align 16
  %1213 = shl i64 %1212, 1
  %1214 = load i1, i1* %out.60
  %1215 = icmp slt i64 2, 3
  %1216 = bitcast i64* %shadow to i64*
  %safe.469 = or i1 %1214, %1215
  %select.ptr.470 = select i1 %safe.469, i64* %1208, i64* %1216
  %1217 = load i64, i64* %1208
  %select.val.471 = select i1 %1214, i64 %1213, i64 %1217
  store i64 %select.val.471, i64* %select.ptr.470, align 16
  %1218 = load i1, i1* %out.60
  %1219 = load i64, i64* %0, align 8
  %1220 = and i64 %1219, 1
  %1221 = icmp ne i64 %1220, 0
  %1222 = load i1, i1* %out.60
  %in.252 = and i1 %1222, %1221
  store i1 %in.252, i1* %out.61
  %1223 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1224 = load i1, i1* %out.61
  %1225 = icmp slt i64 2, 3
  %1226 = bitcast i64* %shadow to i64*
  %safe.472 = or i1 %1224, %1225
  %select.ptr.473 = select i1 %safe.472, i64* %1223, i64* %1226
  %1227 = load i64, i64* %select.ptr.473, align 16
  %1228 = or i64 %1227, 1
  %1229 = load i1, i1* %out.61
  %1230 = icmp slt i64 2, 3
  %1231 = bitcast i64* %shadow to i64*
  %safe.474 = or i1 %1229, %1230
  %select.ptr.475 = select i1 %safe.474, i64* %1223, i64* %1231
  %1232 = load i64, i64* %1223
  %select.val.476 = select i1 %1229, i64 %1228, i64 %1232
  store i64 %select.val.476, i64* %select.ptr.475, align 16
  %1233 = load i1, i1* %out.60
  %1234 = xor i1 %1221, true
  %in.253 = and i1 %1233, %1234
  %1235 = load i1, i1* %out.61
  %1236 = or i1 %in.253, %1235
  store i1 %1236, i1* %out.62
  %1237 = getelementptr inbounds i64, i64* %0, i64 1
  %1238 = load i1, i1* %out.62
  %1239 = icmp slt i64 1, %N
  %1240 = bitcast i64* %shadow to i64*
  %safe.477 = or i1 %1238, %1239
  %select.ptr.478 = select i1 %safe.477, i64* %1237, i64* %1240
  %1241 = load i64, i64* %select.ptr.478, align 8
  %1242 = and i64 %1241, 1
  %1243 = icmp ne i64 %1242, 0
  %1244 = load i1, i1* %out.62
  %in.254 = and i1 %1244, %1243
  store i1 %in.254, i1* %out.63
  %1245 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1246 = load i1, i1* %out.63
  %1247 = icmp slt i64 1, 3
  %1248 = bitcast i64* %shadow to i64*
  %safe.479 = or i1 %1246, %1247
  %select.ptr.480 = select i1 %safe.479, i64* %1245, i64* %1248
  %1249 = load i64, i64* %select.ptr.480, align 8
  %1250 = or i64 %1249, 1
  %1251 = load i1, i1* %out.63
  %1252 = icmp slt i64 1, 3
  %1253 = bitcast i64* %shadow to i64*
  %safe.481 = or i1 %1251, %1252
  %select.ptr.482 = select i1 %safe.481, i64* %1245, i64* %1253
  %1254 = load i64, i64* %1245
  %select.val.483 = select i1 %1251, i64 %1250, i64 %1254
  store i64 %select.val.483, i64* %select.ptr.482, align 8
  %1255 = load i1, i1* %out.62
  %1256 = xor i1 %1243, true
  %in.255 = and i1 %1255, %1256
  %1257 = load i1, i1* %out.63
  %1258 = or i1 %in.255, %1257
  store i1 %1258, i1* %out.64
  %1259 = getelementptr inbounds i64, i64* %0, i64 2
  %1260 = load i1, i1* %out.64
  %1261 = icmp slt i64 2, %N
  %1262 = bitcast i64* %shadow to i64*
  %safe.484 = or i1 %1260, %1261
  %select.ptr.485 = select i1 %safe.484, i64* %1259, i64* %1262
  %1263 = load i64, i64* %select.ptr.485, align 8
  %1264 = and i64 %1263, 1
  %1265 = icmp ne i64 %1264, 0
  %1266 = load i1, i1* %out.64
  %in.256 = and i1 %1266, %1265
  store i1 %in.256, i1* %out.65
  %1267 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %1268 = load i1, i1* %out.65
  %1269 = icmp slt i64 0, 3
  %1270 = bitcast i64* %shadow to i64*
  %safe.486 = or i1 %1268, %1269
  %select.ptr.487 = select i1 %safe.486, i64* %1267, i64* %1270
  %1271 = load i64, i64* %select.ptr.487, align 16
  %1272 = or i64 %1271, 1
  %1273 = load i1, i1* %out.65
  %1274 = icmp slt i64 0, 3
  %1275 = bitcast i64* %shadow to i64*
  %safe.488 = or i1 %1273, %1274
  %select.ptr.489 = select i1 %safe.488, i64* %1267, i64* %1275
  %1276 = load i64, i64* %1267
  %select.val.490 = select i1 %1273, i64 %1272, i64 %1276
  store i64 %select.val.490, i64* %select.ptr.489, align 16
  %1277 = load i1, i1* %out.64
  %1278 = xor i1 %1265, true
  %in.257 = and i1 %1277, %1278
  %1279 = load i1, i1* %out.65
  %1280 = or i1 %in.257, %1279
  store i1 %1280, i1* %out.66
  %1281 = load i1, i1* %out.66
  %1282 = load i64, i64* %0, align 8
  %1283 = lshr i64 %1282, 1
  %1284 = load i1, i1* %out.66
  %1285 = load i64, i64* %0
  %select.val.491 = select i1 %1284, i64 %1283, i64 %1285
  store i64 %select.val.491, i64* %0, align 8
  %1286 = getelementptr inbounds i64, i64* %0, i64 1
  %1287 = load i1, i1* %out.66
  %1288 = icmp slt i64 1, %N
  %1289 = bitcast i64* %shadow to i64*
  %safe.492 = or i1 %1287, %1288
  %select.ptr.493 = select i1 %safe.492, i64* %1286, i64* %1289
  %1290 = load i64, i64* %select.ptr.493, align 8
  %1291 = lshr i64 %1290, 1
  %1292 = load i1, i1* %out.66
  %1293 = icmp slt i64 1, %N
  %1294 = bitcast i64* %shadow to i64*
  %safe.494 = or i1 %1292, %1293
  %select.ptr.495 = select i1 %safe.494, i64* %1286, i64* %1294
  %1295 = load i64, i64* %1286
  %select.val.496 = select i1 %1292, i64 %1291, i64 %1295
  store i64 %select.val.496, i64* %select.ptr.495, align 8
  %1296 = getelementptr inbounds i64, i64* %0, i64 2
  %1297 = load i1, i1* %out.66
  %1298 = icmp slt i64 2, %N
  %1299 = bitcast i64* %shadow to i64*
  %safe.497 = or i1 %1297, %1298
  %select.ptr.498 = select i1 %safe.497, i64* %1296, i64* %1299
  %1300 = load i64, i64* %select.ptr.498, align 8
  %1301 = lshr i64 %1300, 1
  %1302 = load i1, i1* %out.66
  %1303 = icmp slt i64 2, %N
  %1304 = bitcast i64* %shadow to i64*
  %safe.499 = or i1 %1302, %1303
  %select.ptr.500 = select i1 %safe.499, i64* %1296, i64* %1304
  %1305 = load i64, i64* %1296
  %select.val.501 = select i1 %1302, i64 %1301, i64 %1305
  store i64 %select.val.501, i64* %select.ptr.500, align 8
  %1306 = load i1, i1* %out.66
  %1307 = icmp slt i64 0, 3
  %1308 = bitcast i64* %shadow to i64*
  %safe.502 = or i1 %1306, %1307
  %select.ptr.503 = select i1 %safe.502, i64* %18, i64* %1308
  %1309 = load i64, i64* %select.ptr.503, align 16
  %1310 = shl i64 %1309, 1
  %1311 = load i1, i1* %out.66
  %1312 = icmp slt i64 0, 3
  %1313 = bitcast i64* %shadow to i64*
  %safe.504 = or i1 %1311, %1312
  %select.ptr.505 = select i1 %safe.504, i64* %18, i64* %1313
  %1314 = load i64, i64* %18
  %select.val.506 = select i1 %1311, i64 %1310, i64 %1314
  store i64 %select.val.506, i64* %select.ptr.505, align 16
  %1315 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1316 = load i1, i1* %out.66
  %1317 = icmp slt i64 1, 3
  %1318 = bitcast i64* %shadow to i64*
  %safe.507 = or i1 %1316, %1317
  %select.ptr.508 = select i1 %safe.507, i64* %1315, i64* %1318
  %1319 = load i64, i64* %select.ptr.508, align 8
  %1320 = shl i64 %1319, 1
  %1321 = load i1, i1* %out.66
  %1322 = icmp slt i64 1, 3
  %1323 = bitcast i64* %shadow to i64*
  %safe.509 = or i1 %1321, %1322
  %select.ptr.510 = select i1 %safe.509, i64* %1315, i64* %1323
  %1324 = load i64, i64* %1315
  %select.val.511 = select i1 %1321, i64 %1320, i64 %1324
  store i64 %select.val.511, i64* %select.ptr.510, align 8
  %1325 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1326 = load i1, i1* %out.66
  %1327 = icmp slt i64 2, 3
  %1328 = bitcast i64* %shadow to i64*
  %safe.512 = or i1 %1326, %1327
  %select.ptr.513 = select i1 %safe.512, i64* %1325, i64* %1328
  %1329 = load i64, i64* %select.ptr.513, align 16
  %1330 = shl i64 %1329, 1
  %1331 = load i1, i1* %out.66
  %1332 = icmp slt i64 2, 3
  %1333 = bitcast i64* %shadow to i64*
  %safe.514 = or i1 %1331, %1332
  %select.ptr.515 = select i1 %safe.514, i64* %1325, i64* %1333
  %1334 = load i64, i64* %1325
  %select.val.516 = select i1 %1331, i64 %1330, i64 %1334
  store i64 %select.val.516, i64* %select.ptr.515, align 16
  %1335 = load i1, i1* %out.66
  %1336 = load i64, i64* %0, align 8
  %1337 = and i64 %1336, 1
  %1338 = icmp ne i64 %1337, 0
  %1339 = load i1, i1* %out.66
  %in.258 = and i1 %1339, %1338
  store i1 %in.258, i1* %out.67
  %1340 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1341 = load i1, i1* %out.67
  %1342 = icmp slt i64 2, 3
  %1343 = bitcast i64* %shadow to i64*
  %safe.517 = or i1 %1341, %1342
  %select.ptr.518 = select i1 %safe.517, i64* %1340, i64* %1343
  %1344 = load i64, i64* %select.ptr.518, align 16
  %1345 = or i64 %1344, 1
  %1346 = load i1, i1* %out.67
  %1347 = icmp slt i64 2, 3
  %1348 = bitcast i64* %shadow to i64*
  %safe.519 = or i1 %1346, %1347
  %select.ptr.520 = select i1 %safe.519, i64* %1340, i64* %1348
  %1349 = load i64, i64* %1340
  %select.val.521 = select i1 %1346, i64 %1345, i64 %1349
  store i64 %select.val.521, i64* %select.ptr.520, align 16
  %1350 = load i1, i1* %out.66
  %1351 = xor i1 %1338, true
  %in.259 = and i1 %1350, %1351
  %1352 = load i1, i1* %out.67
  %1353 = or i1 %in.259, %1352
  store i1 %1353, i1* %out.68
  %1354 = getelementptr inbounds i64, i64* %0, i64 1
  %1355 = load i1, i1* %out.68
  %1356 = icmp slt i64 1, %N
  %1357 = bitcast i64* %shadow to i64*
  %safe.522 = or i1 %1355, %1356
  %select.ptr.523 = select i1 %safe.522, i64* %1354, i64* %1357
  %1358 = load i64, i64* %select.ptr.523, align 8
  %1359 = and i64 %1358, 1
  %1360 = icmp ne i64 %1359, 0
  %1361 = load i1, i1* %out.68
  %in.260 = and i1 %1361, %1360
  store i1 %in.260, i1* %out.69
  %1362 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1363 = load i1, i1* %out.69
  %1364 = icmp slt i64 1, 3
  %1365 = bitcast i64* %shadow to i64*
  %safe.524 = or i1 %1363, %1364
  %select.ptr.525 = select i1 %safe.524, i64* %1362, i64* %1365
  %1366 = load i64, i64* %select.ptr.525, align 8
  %1367 = or i64 %1366, 1
  %1368 = load i1, i1* %out.69
  %1369 = icmp slt i64 1, 3
  %1370 = bitcast i64* %shadow to i64*
  %safe.526 = or i1 %1368, %1369
  %select.ptr.527 = select i1 %safe.526, i64* %1362, i64* %1370
  %1371 = load i64, i64* %1362
  %select.val.528 = select i1 %1368, i64 %1367, i64 %1371
  store i64 %select.val.528, i64* %select.ptr.527, align 8
  %1372 = load i1, i1* %out.68
  %1373 = xor i1 %1360, true
  %in.261 = and i1 %1372, %1373
  %1374 = load i1, i1* %out.69
  %1375 = or i1 %in.261, %1374
  store i1 %1375, i1* %out.70
  %1376 = getelementptr inbounds i64, i64* %0, i64 2
  %1377 = load i1, i1* %out.70
  %1378 = icmp slt i64 2, %N
  %1379 = bitcast i64* %shadow to i64*
  %safe.529 = or i1 %1377, %1378
  %select.ptr.530 = select i1 %safe.529, i64* %1376, i64* %1379
  %1380 = load i64, i64* %select.ptr.530, align 8
  %1381 = and i64 %1380, 1
  %1382 = icmp ne i64 %1381, 0
  %1383 = load i1, i1* %out.70
  %in.262 = and i1 %1383, %1382
  store i1 %in.262, i1* %out.71
  %1384 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %1385 = load i1, i1* %out.71
  %1386 = icmp slt i64 0, 3
  %1387 = bitcast i64* %shadow to i64*
  %safe.531 = or i1 %1385, %1386
  %select.ptr.532 = select i1 %safe.531, i64* %1384, i64* %1387
  %1388 = load i64, i64* %select.ptr.532, align 16
  %1389 = or i64 %1388, 1
  %1390 = load i1, i1* %out.71
  %1391 = icmp slt i64 0, 3
  %1392 = bitcast i64* %shadow to i64*
  %safe.533 = or i1 %1390, %1391
  %select.ptr.534 = select i1 %safe.533, i64* %1384, i64* %1392
  %1393 = load i64, i64* %1384
  %select.val.535 = select i1 %1390, i64 %1389, i64 %1393
  store i64 %select.val.535, i64* %select.ptr.534, align 16
  %1394 = load i1, i1* %out.70
  %1395 = xor i1 %1382, true
  %in.263 = and i1 %1394, %1395
  %1396 = load i1, i1* %out.71
  %1397 = or i1 %in.263, %1396
  store i1 %1397, i1* %out.72
  %1398 = load i1, i1* %out.72
  %1399 = load i64, i64* %0, align 8
  %1400 = lshr i64 %1399, 1
  %1401 = load i1, i1* %out.72
  %1402 = load i64, i64* %0
  %select.val.536 = select i1 %1401, i64 %1400, i64 %1402
  store i64 %select.val.536, i64* %0, align 8
  %1403 = getelementptr inbounds i64, i64* %0, i64 1
  %1404 = load i1, i1* %out.72
  %1405 = icmp slt i64 1, %N
  %1406 = bitcast i64* %shadow to i64*
  %safe.537 = or i1 %1404, %1405
  %select.ptr.538 = select i1 %safe.537, i64* %1403, i64* %1406
  %1407 = load i64, i64* %select.ptr.538, align 8
  %1408 = lshr i64 %1407, 1
  %1409 = load i1, i1* %out.72
  %1410 = icmp slt i64 1, %N
  %1411 = bitcast i64* %shadow to i64*
  %safe.539 = or i1 %1409, %1410
  %select.ptr.540 = select i1 %safe.539, i64* %1403, i64* %1411
  %1412 = load i64, i64* %1403
  %select.val.541 = select i1 %1409, i64 %1408, i64 %1412
  store i64 %select.val.541, i64* %select.ptr.540, align 8
  %1413 = getelementptr inbounds i64, i64* %0, i64 2
  %1414 = load i1, i1* %out.72
  %1415 = icmp slt i64 2, %N
  %1416 = bitcast i64* %shadow to i64*
  %safe.542 = or i1 %1414, %1415
  %select.ptr.543 = select i1 %safe.542, i64* %1413, i64* %1416
  %1417 = load i64, i64* %select.ptr.543, align 8
  %1418 = lshr i64 %1417, 1
  %1419 = load i1, i1* %out.72
  %1420 = icmp slt i64 2, %N
  %1421 = bitcast i64* %shadow to i64*
  %safe.544 = or i1 %1419, %1420
  %select.ptr.545 = select i1 %safe.544, i64* %1413, i64* %1421
  %1422 = load i64, i64* %1413
  %select.val.546 = select i1 %1419, i64 %1418, i64 %1422
  store i64 %select.val.546, i64* %select.ptr.545, align 8
  %1423 = load i1, i1* %out.72
  %1424 = icmp slt i64 0, 3
  %1425 = bitcast i64* %shadow to i64*
  %safe.547 = or i1 %1423, %1424
  %select.ptr.548 = select i1 %safe.547, i64* %18, i64* %1425
  %1426 = load i64, i64* %select.ptr.548, align 16
  %1427 = shl i64 %1426, 1
  %1428 = load i1, i1* %out.72
  %1429 = icmp slt i64 0, 3
  %1430 = bitcast i64* %shadow to i64*
  %safe.549 = or i1 %1428, %1429
  %select.ptr.550 = select i1 %safe.549, i64* %18, i64* %1430
  %1431 = load i64, i64* %18
  %select.val.551 = select i1 %1428, i64 %1427, i64 %1431
  store i64 %select.val.551, i64* %select.ptr.550, align 16
  %1432 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1433 = load i1, i1* %out.72
  %1434 = icmp slt i64 1, 3
  %1435 = bitcast i64* %shadow to i64*
  %safe.552 = or i1 %1433, %1434
  %select.ptr.553 = select i1 %safe.552, i64* %1432, i64* %1435
  %1436 = load i64, i64* %select.ptr.553, align 8
  %1437 = shl i64 %1436, 1
  %1438 = load i1, i1* %out.72
  %1439 = icmp slt i64 1, 3
  %1440 = bitcast i64* %shadow to i64*
  %safe.554 = or i1 %1438, %1439
  %select.ptr.555 = select i1 %safe.554, i64* %1432, i64* %1440
  %1441 = load i64, i64* %1432
  %select.val.556 = select i1 %1438, i64 %1437, i64 %1441
  store i64 %select.val.556, i64* %select.ptr.555, align 8
  %1442 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1443 = load i1, i1* %out.72
  %1444 = icmp slt i64 2, 3
  %1445 = bitcast i64* %shadow to i64*
  %safe.557 = or i1 %1443, %1444
  %select.ptr.558 = select i1 %safe.557, i64* %1442, i64* %1445
  %1446 = load i64, i64* %select.ptr.558, align 16
  %1447 = shl i64 %1446, 1
  %1448 = load i1, i1* %out.72
  %1449 = icmp slt i64 2, 3
  %1450 = bitcast i64* %shadow to i64*
  %safe.559 = or i1 %1448, %1449
  %select.ptr.560 = select i1 %safe.559, i64* %1442, i64* %1450
  %1451 = load i64, i64* %1442
  %select.val.561 = select i1 %1448, i64 %1447, i64 %1451
  store i64 %select.val.561, i64* %select.ptr.560, align 16
  %1452 = load i1, i1* %out.72
  %1453 = load i64, i64* %0, align 8
  %1454 = and i64 %1453, 1
  %1455 = icmp ne i64 %1454, 0
  %1456 = load i1, i1* %out.72
  %in.264 = and i1 %1456, %1455
  store i1 %in.264, i1* %out.73
  %1457 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1458 = load i1, i1* %out.73
  %1459 = icmp slt i64 2, 3
  %1460 = bitcast i64* %shadow to i64*
  %safe.562 = or i1 %1458, %1459
  %select.ptr.563 = select i1 %safe.562, i64* %1457, i64* %1460
  %1461 = load i64, i64* %select.ptr.563, align 16
  %1462 = or i64 %1461, 1
  %1463 = load i1, i1* %out.73
  %1464 = icmp slt i64 2, 3
  %1465 = bitcast i64* %shadow to i64*
  %safe.564 = or i1 %1463, %1464
  %select.ptr.565 = select i1 %safe.564, i64* %1457, i64* %1465
  %1466 = load i64, i64* %1457
  %select.val.566 = select i1 %1463, i64 %1462, i64 %1466
  store i64 %select.val.566, i64* %select.ptr.565, align 16
  %1467 = load i1, i1* %out.72
  %1468 = xor i1 %1455, true
  %in.265 = and i1 %1467, %1468
  %1469 = load i1, i1* %out.73
  %1470 = or i1 %in.265, %1469
  store i1 %1470, i1* %out.74
  %1471 = getelementptr inbounds i64, i64* %0, i64 1
  %1472 = load i1, i1* %out.74
  %1473 = icmp slt i64 1, %N
  %1474 = bitcast i64* %shadow to i64*
  %safe.567 = or i1 %1472, %1473
  %select.ptr.568 = select i1 %safe.567, i64* %1471, i64* %1474
  %1475 = load i64, i64* %select.ptr.568, align 8
  %1476 = and i64 %1475, 1
  %1477 = icmp ne i64 %1476, 0
  %1478 = load i1, i1* %out.74
  %in.266 = and i1 %1478, %1477
  store i1 %in.266, i1* %out.75
  %1479 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1480 = load i1, i1* %out.75
  %1481 = icmp slt i64 1, 3
  %1482 = bitcast i64* %shadow to i64*
  %safe.569 = or i1 %1480, %1481
  %select.ptr.570 = select i1 %safe.569, i64* %1479, i64* %1482
  %1483 = load i64, i64* %select.ptr.570, align 8
  %1484 = or i64 %1483, 1
  %1485 = load i1, i1* %out.75
  %1486 = icmp slt i64 1, 3
  %1487 = bitcast i64* %shadow to i64*
  %safe.571 = or i1 %1485, %1486
  %select.ptr.572 = select i1 %safe.571, i64* %1479, i64* %1487
  %1488 = load i64, i64* %1479
  %select.val.573 = select i1 %1485, i64 %1484, i64 %1488
  store i64 %select.val.573, i64* %select.ptr.572, align 8
  %1489 = load i1, i1* %out.74
  %1490 = xor i1 %1477, true
  %in.267 = and i1 %1489, %1490
  %1491 = load i1, i1* %out.75
  %1492 = or i1 %in.267, %1491
  store i1 %1492, i1* %out.76
  %1493 = getelementptr inbounds i64, i64* %0, i64 2
  %1494 = load i1, i1* %out.76
  %1495 = icmp slt i64 2, %N
  %1496 = bitcast i64* %shadow to i64*
  %safe.574 = or i1 %1494, %1495
  %select.ptr.575 = select i1 %safe.574, i64* %1493, i64* %1496
  %1497 = load i64, i64* %select.ptr.575, align 8
  %1498 = and i64 %1497, 1
  %1499 = icmp ne i64 %1498, 0
  %1500 = load i1, i1* %out.76
  %in.268 = and i1 %1500, %1499
  store i1 %in.268, i1* %out.77
  %1501 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %1502 = load i1, i1* %out.77
  %1503 = icmp slt i64 0, 3
  %1504 = bitcast i64* %shadow to i64*
  %safe.576 = or i1 %1502, %1503
  %select.ptr.577 = select i1 %safe.576, i64* %1501, i64* %1504
  %1505 = load i64, i64* %select.ptr.577, align 16
  %1506 = or i64 %1505, 1
  %1507 = load i1, i1* %out.77
  %1508 = icmp slt i64 0, 3
  %1509 = bitcast i64* %shadow to i64*
  %safe.578 = or i1 %1507, %1508
  %select.ptr.579 = select i1 %safe.578, i64* %1501, i64* %1509
  %1510 = load i64, i64* %1501
  %select.val.580 = select i1 %1507, i64 %1506, i64 %1510
  store i64 %select.val.580, i64* %select.ptr.579, align 16
  %1511 = load i1, i1* %out.76
  %1512 = xor i1 %1499, true
  %in.269 = and i1 %1511, %1512
  %1513 = load i1, i1* %out.77
  %1514 = or i1 %in.269, %1513
  store i1 %1514, i1* %out.78
  %1515 = load i1, i1* %out.78
  %1516 = load i64, i64* %0, align 8
  %1517 = lshr i64 %1516, 1
  %1518 = load i1, i1* %out.78
  %1519 = load i64, i64* %0
  %select.val.581 = select i1 %1518, i64 %1517, i64 %1519
  store i64 %select.val.581, i64* %0, align 8
  %1520 = getelementptr inbounds i64, i64* %0, i64 1
  %1521 = load i1, i1* %out.78
  %1522 = icmp slt i64 1, %N
  %1523 = bitcast i64* %shadow to i64*
  %safe.582 = or i1 %1521, %1522
  %select.ptr.583 = select i1 %safe.582, i64* %1520, i64* %1523
  %1524 = load i64, i64* %select.ptr.583, align 8
  %1525 = lshr i64 %1524, 1
  %1526 = load i1, i1* %out.78
  %1527 = icmp slt i64 1, %N
  %1528 = bitcast i64* %shadow to i64*
  %safe.584 = or i1 %1526, %1527
  %select.ptr.585 = select i1 %safe.584, i64* %1520, i64* %1528
  %1529 = load i64, i64* %1520
  %select.val.586 = select i1 %1526, i64 %1525, i64 %1529
  store i64 %select.val.586, i64* %select.ptr.585, align 8
  %1530 = getelementptr inbounds i64, i64* %0, i64 2
  %1531 = load i1, i1* %out.78
  %1532 = icmp slt i64 2, %N
  %1533 = bitcast i64* %shadow to i64*
  %safe.587 = or i1 %1531, %1532
  %select.ptr.588 = select i1 %safe.587, i64* %1530, i64* %1533
  %1534 = load i64, i64* %select.ptr.588, align 8
  %1535 = lshr i64 %1534, 1
  %1536 = load i1, i1* %out.78
  %1537 = icmp slt i64 2, %N
  %1538 = bitcast i64* %shadow to i64*
  %safe.589 = or i1 %1536, %1537
  %select.ptr.590 = select i1 %safe.589, i64* %1530, i64* %1538
  %1539 = load i64, i64* %1530
  %select.val.591 = select i1 %1536, i64 %1535, i64 %1539
  store i64 %select.val.591, i64* %select.ptr.590, align 8
  %1540 = load i1, i1* %out.78
  %1541 = icmp slt i64 0, 3
  %1542 = bitcast i64* %shadow to i64*
  %safe.592 = or i1 %1540, %1541
  %select.ptr.593 = select i1 %safe.592, i64* %18, i64* %1542
  %1543 = load i64, i64* %select.ptr.593, align 16
  %1544 = shl i64 %1543, 1
  %1545 = load i1, i1* %out.78
  %1546 = icmp slt i64 0, 3
  %1547 = bitcast i64* %shadow to i64*
  %safe.594 = or i1 %1545, %1546
  %select.ptr.595 = select i1 %safe.594, i64* %18, i64* %1547
  %1548 = load i64, i64* %18
  %select.val.596 = select i1 %1545, i64 %1544, i64 %1548
  store i64 %select.val.596, i64* %select.ptr.595, align 16
  %1549 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1550 = load i1, i1* %out.78
  %1551 = icmp slt i64 1, 3
  %1552 = bitcast i64* %shadow to i64*
  %safe.597 = or i1 %1550, %1551
  %select.ptr.598 = select i1 %safe.597, i64* %1549, i64* %1552
  %1553 = load i64, i64* %select.ptr.598, align 8
  %1554 = shl i64 %1553, 1
  %1555 = load i1, i1* %out.78
  %1556 = icmp slt i64 1, 3
  %1557 = bitcast i64* %shadow to i64*
  %safe.599 = or i1 %1555, %1556
  %select.ptr.600 = select i1 %safe.599, i64* %1549, i64* %1557
  %1558 = load i64, i64* %1549
  %select.val.601 = select i1 %1555, i64 %1554, i64 %1558
  store i64 %select.val.601, i64* %select.ptr.600, align 8
  %1559 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1560 = load i1, i1* %out.78
  %1561 = icmp slt i64 2, 3
  %1562 = bitcast i64* %shadow to i64*
  %safe.602 = or i1 %1560, %1561
  %select.ptr.603 = select i1 %safe.602, i64* %1559, i64* %1562
  %1563 = load i64, i64* %select.ptr.603, align 16
  %1564 = shl i64 %1563, 1
  %1565 = load i1, i1* %out.78
  %1566 = icmp slt i64 2, 3
  %1567 = bitcast i64* %shadow to i64*
  %safe.604 = or i1 %1565, %1566
  %select.ptr.605 = select i1 %safe.604, i64* %1559, i64* %1567
  %1568 = load i64, i64* %1559
  %select.val.606 = select i1 %1565, i64 %1564, i64 %1568
  store i64 %select.val.606, i64* %select.ptr.605, align 16
  %1569 = load i1, i1* %out.78
  %1570 = load i64, i64* %0, align 8
  %1571 = and i64 %1570, 1
  %1572 = icmp ne i64 %1571, 0
  %1573 = load i1, i1* %out.78
  %in.270 = and i1 %1573, %1572
  store i1 %in.270, i1* %out.79
  %1574 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1575 = load i1, i1* %out.79
  %1576 = icmp slt i64 2, 3
  %1577 = bitcast i64* %shadow to i64*
  %safe.607 = or i1 %1575, %1576
  %select.ptr.608 = select i1 %safe.607, i64* %1574, i64* %1577
  %1578 = load i64, i64* %select.ptr.608, align 16
  %1579 = or i64 %1578, 1
  %1580 = load i1, i1* %out.79
  %1581 = icmp slt i64 2, 3
  %1582 = bitcast i64* %shadow to i64*
  %safe.609 = or i1 %1580, %1581
  %select.ptr.610 = select i1 %safe.609, i64* %1574, i64* %1582
  %1583 = load i64, i64* %1574
  %select.val.611 = select i1 %1580, i64 %1579, i64 %1583
  store i64 %select.val.611, i64* %select.ptr.610, align 16
  %1584 = load i1, i1* %out.78
  %1585 = xor i1 %1572, true
  %in.271 = and i1 %1584, %1585
  %1586 = load i1, i1* %out.79
  %1587 = or i1 %in.271, %1586
  store i1 %1587, i1* %out.80
  %1588 = getelementptr inbounds i64, i64* %0, i64 1
  %1589 = load i1, i1* %out.80
  %1590 = icmp slt i64 1, %N
  %1591 = bitcast i64* %shadow to i64*
  %safe.612 = or i1 %1589, %1590
  %select.ptr.613 = select i1 %safe.612, i64* %1588, i64* %1591
  %1592 = load i64, i64* %select.ptr.613, align 8
  %1593 = and i64 %1592, 1
  %1594 = icmp ne i64 %1593, 0
  %1595 = load i1, i1* %out.80
  %in.272 = and i1 %1595, %1594
  store i1 %in.272, i1* %out.81
  %1596 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1597 = load i1, i1* %out.81
  %1598 = icmp slt i64 1, 3
  %1599 = bitcast i64* %shadow to i64*
  %safe.614 = or i1 %1597, %1598
  %select.ptr.615 = select i1 %safe.614, i64* %1596, i64* %1599
  %1600 = load i64, i64* %select.ptr.615, align 8
  %1601 = or i64 %1600, 1
  %1602 = load i1, i1* %out.81
  %1603 = icmp slt i64 1, 3
  %1604 = bitcast i64* %shadow to i64*
  %safe.616 = or i1 %1602, %1603
  %select.ptr.617 = select i1 %safe.616, i64* %1596, i64* %1604
  %1605 = load i64, i64* %1596
  %select.val.618 = select i1 %1602, i64 %1601, i64 %1605
  store i64 %select.val.618, i64* %select.ptr.617, align 8
  %1606 = load i1, i1* %out.80
  %1607 = xor i1 %1594, true
  %in.273 = and i1 %1606, %1607
  %1608 = load i1, i1* %out.81
  %1609 = or i1 %in.273, %1608
  store i1 %1609, i1* %out.82
  %1610 = getelementptr inbounds i64, i64* %0, i64 2
  %1611 = load i1, i1* %out.82
  %1612 = icmp slt i64 2, %N
  %1613 = bitcast i64* %shadow to i64*
  %safe.619 = or i1 %1611, %1612
  %select.ptr.620 = select i1 %safe.619, i64* %1610, i64* %1613
  %1614 = load i64, i64* %select.ptr.620, align 8
  %1615 = and i64 %1614, 1
  %1616 = icmp ne i64 %1615, 0
  %1617 = load i1, i1* %out.82
  %in.274 = and i1 %1617, %1616
  store i1 %in.274, i1* %out.83
  %1618 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %1619 = load i1, i1* %out.83
  %1620 = icmp slt i64 0, 3
  %1621 = bitcast i64* %shadow to i64*
  %safe.621 = or i1 %1619, %1620
  %select.ptr.622 = select i1 %safe.621, i64* %1618, i64* %1621
  %1622 = load i64, i64* %select.ptr.622, align 16
  %1623 = or i64 %1622, 1
  %1624 = load i1, i1* %out.83
  %1625 = icmp slt i64 0, 3
  %1626 = bitcast i64* %shadow to i64*
  %safe.623 = or i1 %1624, %1625
  %select.ptr.624 = select i1 %safe.623, i64* %1618, i64* %1626
  %1627 = load i64, i64* %1618
  %select.val.625 = select i1 %1624, i64 %1623, i64 %1627
  store i64 %select.val.625, i64* %select.ptr.624, align 16
  %1628 = load i1, i1* %out.82
  %1629 = xor i1 %1616, true
  %in.275 = and i1 %1628, %1629
  %1630 = load i1, i1* %out.83
  %1631 = or i1 %in.275, %1630
  store i1 %1631, i1* %out.84
  %1632 = load i1, i1* %out.84
  %1633 = load i64, i64* %0, align 8
  %1634 = lshr i64 %1633, 1
  %1635 = load i1, i1* %out.84
  %1636 = load i64, i64* %0
  %select.val.626 = select i1 %1635, i64 %1634, i64 %1636
  store i64 %select.val.626, i64* %0, align 8
  %1637 = getelementptr inbounds i64, i64* %0, i64 1
  %1638 = load i1, i1* %out.84
  %1639 = icmp slt i64 1, %N
  %1640 = bitcast i64* %shadow to i64*
  %safe.627 = or i1 %1638, %1639
  %select.ptr.628 = select i1 %safe.627, i64* %1637, i64* %1640
  %1641 = load i64, i64* %select.ptr.628, align 8
  %1642 = lshr i64 %1641, 1
  %1643 = load i1, i1* %out.84
  %1644 = icmp slt i64 1, %N
  %1645 = bitcast i64* %shadow to i64*
  %safe.629 = or i1 %1643, %1644
  %select.ptr.630 = select i1 %safe.629, i64* %1637, i64* %1645
  %1646 = load i64, i64* %1637
  %select.val.631 = select i1 %1643, i64 %1642, i64 %1646
  store i64 %select.val.631, i64* %select.ptr.630, align 8
  %1647 = getelementptr inbounds i64, i64* %0, i64 2
  %1648 = load i1, i1* %out.84
  %1649 = icmp slt i64 2, %N
  %1650 = bitcast i64* %shadow to i64*
  %safe.632 = or i1 %1648, %1649
  %select.ptr.633 = select i1 %safe.632, i64* %1647, i64* %1650
  %1651 = load i64, i64* %select.ptr.633, align 8
  %1652 = lshr i64 %1651, 1
  %1653 = load i1, i1* %out.84
  %1654 = icmp slt i64 2, %N
  %1655 = bitcast i64* %shadow to i64*
  %safe.634 = or i1 %1653, %1654
  %select.ptr.635 = select i1 %safe.634, i64* %1647, i64* %1655
  %1656 = load i64, i64* %1647
  %select.val.636 = select i1 %1653, i64 %1652, i64 %1656
  store i64 %select.val.636, i64* %select.ptr.635, align 8
  %1657 = load i1, i1* %out.84
  %1658 = icmp slt i64 0, 3
  %1659 = bitcast i64* %shadow to i64*
  %safe.637 = or i1 %1657, %1658
  %select.ptr.638 = select i1 %safe.637, i64* %18, i64* %1659
  %1660 = load i64, i64* %select.ptr.638, align 16
  %1661 = shl i64 %1660, 1
  %1662 = load i1, i1* %out.84
  %1663 = icmp slt i64 0, 3
  %1664 = bitcast i64* %shadow to i64*
  %safe.639 = or i1 %1662, %1663
  %select.ptr.640 = select i1 %safe.639, i64* %18, i64* %1664
  %1665 = load i64, i64* %18
  %select.val.641 = select i1 %1662, i64 %1661, i64 %1665
  store i64 %select.val.641, i64* %select.ptr.640, align 16
  %1666 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1667 = load i1, i1* %out.84
  %1668 = icmp slt i64 1, 3
  %1669 = bitcast i64* %shadow to i64*
  %safe.642 = or i1 %1667, %1668
  %select.ptr.643 = select i1 %safe.642, i64* %1666, i64* %1669
  %1670 = load i64, i64* %select.ptr.643, align 8
  %1671 = shl i64 %1670, 1
  %1672 = load i1, i1* %out.84
  %1673 = icmp slt i64 1, 3
  %1674 = bitcast i64* %shadow to i64*
  %safe.644 = or i1 %1672, %1673
  %select.ptr.645 = select i1 %safe.644, i64* %1666, i64* %1674
  %1675 = load i64, i64* %1666
  %select.val.646 = select i1 %1672, i64 %1671, i64 %1675
  store i64 %select.val.646, i64* %select.ptr.645, align 8
  %1676 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1677 = load i1, i1* %out.84
  %1678 = icmp slt i64 2, 3
  %1679 = bitcast i64* %shadow to i64*
  %safe.647 = or i1 %1677, %1678
  %select.ptr.648 = select i1 %safe.647, i64* %1676, i64* %1679
  %1680 = load i64, i64* %select.ptr.648, align 16
  %1681 = shl i64 %1680, 1
  %1682 = load i1, i1* %out.84
  %1683 = icmp slt i64 2, 3
  %1684 = bitcast i64* %shadow to i64*
  %safe.649 = or i1 %1682, %1683
  %select.ptr.650 = select i1 %safe.649, i64* %1676, i64* %1684
  %1685 = load i64, i64* %1676
  %select.val.651 = select i1 %1682, i64 %1681, i64 %1685
  store i64 %select.val.651, i64* %select.ptr.650, align 16
  %1686 = load i1, i1* %out.84
  %1687 = load i64, i64* %0, align 8
  %1688 = and i64 %1687, 1
  %1689 = icmp ne i64 %1688, 0
  %1690 = load i1, i1* %out.84
  %in.276 = and i1 %1690, %1689
  store i1 %in.276, i1* %out.85
  %1691 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1692 = load i1, i1* %out.85
  %1693 = icmp slt i64 2, 3
  %1694 = bitcast i64* %shadow to i64*
  %safe.652 = or i1 %1692, %1693
  %select.ptr.653 = select i1 %safe.652, i64* %1691, i64* %1694
  %1695 = load i64, i64* %select.ptr.653, align 16
  %1696 = or i64 %1695, 1
  %1697 = load i1, i1* %out.85
  %1698 = icmp slt i64 2, 3
  %1699 = bitcast i64* %shadow to i64*
  %safe.654 = or i1 %1697, %1698
  %select.ptr.655 = select i1 %safe.654, i64* %1691, i64* %1699
  %1700 = load i64, i64* %1691
  %select.val.656 = select i1 %1697, i64 %1696, i64 %1700
  store i64 %select.val.656, i64* %select.ptr.655, align 16
  %1701 = load i1, i1* %out.84
  %1702 = xor i1 %1689, true
  %in.277 = and i1 %1701, %1702
  %1703 = load i1, i1* %out.85
  %1704 = or i1 %in.277, %1703
  store i1 %1704, i1* %out.86
  %1705 = getelementptr inbounds i64, i64* %0, i64 1
  %1706 = load i1, i1* %out.86
  %1707 = icmp slt i64 1, %N
  %1708 = bitcast i64* %shadow to i64*
  %safe.657 = or i1 %1706, %1707
  %select.ptr.658 = select i1 %safe.657, i64* %1705, i64* %1708
  %1709 = load i64, i64* %select.ptr.658, align 8
  %1710 = and i64 %1709, 1
  %1711 = icmp ne i64 %1710, 0
  %1712 = load i1, i1* %out.86
  %in.278 = and i1 %1712, %1711
  store i1 %in.278, i1* %out.87
  %1713 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1714 = load i1, i1* %out.87
  %1715 = icmp slt i64 1, 3
  %1716 = bitcast i64* %shadow to i64*
  %safe.659 = or i1 %1714, %1715
  %select.ptr.660 = select i1 %safe.659, i64* %1713, i64* %1716
  %1717 = load i64, i64* %select.ptr.660, align 8
  %1718 = or i64 %1717, 1
  %1719 = load i1, i1* %out.87
  %1720 = icmp slt i64 1, 3
  %1721 = bitcast i64* %shadow to i64*
  %safe.661 = or i1 %1719, %1720
  %select.ptr.662 = select i1 %safe.661, i64* %1713, i64* %1721
  %1722 = load i64, i64* %1713
  %select.val.663 = select i1 %1719, i64 %1718, i64 %1722
  store i64 %select.val.663, i64* %select.ptr.662, align 8
  %1723 = load i1, i1* %out.86
  %1724 = xor i1 %1711, true
  %in.279 = and i1 %1723, %1724
  %1725 = load i1, i1* %out.87
  %1726 = or i1 %in.279, %1725
  store i1 %1726, i1* %out.88
  %1727 = getelementptr inbounds i64, i64* %0, i64 2
  %1728 = load i1, i1* %out.88
  %1729 = icmp slt i64 2, %N
  %1730 = bitcast i64* %shadow to i64*
  %safe.664 = or i1 %1728, %1729
  %select.ptr.665 = select i1 %safe.664, i64* %1727, i64* %1730
  %1731 = load i64, i64* %select.ptr.665, align 8
  %1732 = and i64 %1731, 1
  %1733 = icmp ne i64 %1732, 0
  %1734 = load i1, i1* %out.88
  %in.280 = and i1 %1734, %1733
  store i1 %in.280, i1* %out.89
  %1735 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %1736 = load i1, i1* %out.89
  %1737 = icmp slt i64 0, 3
  %1738 = bitcast i64* %shadow to i64*
  %safe.666 = or i1 %1736, %1737
  %select.ptr.667 = select i1 %safe.666, i64* %1735, i64* %1738
  %1739 = load i64, i64* %select.ptr.667, align 16
  %1740 = or i64 %1739, 1
  %1741 = load i1, i1* %out.89
  %1742 = icmp slt i64 0, 3
  %1743 = bitcast i64* %shadow to i64*
  %safe.668 = or i1 %1741, %1742
  %select.ptr.669 = select i1 %safe.668, i64* %1735, i64* %1743
  %1744 = load i64, i64* %1735
  %select.val.670 = select i1 %1741, i64 %1740, i64 %1744
  store i64 %select.val.670, i64* %select.ptr.669, align 16
  %1745 = load i1, i1* %out.88
  %1746 = xor i1 %1733, true
  %in.281 = and i1 %1745, %1746
  %1747 = load i1, i1* %out.89
  %1748 = or i1 %in.281, %1747
  store i1 %1748, i1* %out.90
  %1749 = load i1, i1* %out.90
  %1750 = load i64, i64* %0, align 8
  %1751 = lshr i64 %1750, 1
  %1752 = load i1, i1* %out.90
  %1753 = load i64, i64* %0
  %select.val.671 = select i1 %1752, i64 %1751, i64 %1753
  store i64 %select.val.671, i64* %0, align 8
  %1754 = getelementptr inbounds i64, i64* %0, i64 1
  %1755 = load i1, i1* %out.90
  %1756 = icmp slt i64 1, %N
  %1757 = bitcast i64* %shadow to i64*
  %safe.672 = or i1 %1755, %1756
  %select.ptr.673 = select i1 %safe.672, i64* %1754, i64* %1757
  %1758 = load i64, i64* %select.ptr.673, align 8
  %1759 = lshr i64 %1758, 1
  %1760 = load i1, i1* %out.90
  %1761 = icmp slt i64 1, %N
  %1762 = bitcast i64* %shadow to i64*
  %safe.674 = or i1 %1760, %1761
  %select.ptr.675 = select i1 %safe.674, i64* %1754, i64* %1762
  %1763 = load i64, i64* %1754
  %select.val.676 = select i1 %1760, i64 %1759, i64 %1763
  store i64 %select.val.676, i64* %select.ptr.675, align 8
  %1764 = getelementptr inbounds i64, i64* %0, i64 2
  %1765 = load i1, i1* %out.90
  %1766 = icmp slt i64 2, %N
  %1767 = bitcast i64* %shadow to i64*
  %safe.677 = or i1 %1765, %1766
  %select.ptr.678 = select i1 %safe.677, i64* %1764, i64* %1767
  %1768 = load i64, i64* %select.ptr.678, align 8
  %1769 = lshr i64 %1768, 1
  %1770 = load i1, i1* %out.90
  %1771 = icmp slt i64 2, %N
  %1772 = bitcast i64* %shadow to i64*
  %safe.679 = or i1 %1770, %1771
  %select.ptr.680 = select i1 %safe.679, i64* %1764, i64* %1772
  %1773 = load i64, i64* %1764
  %select.val.681 = select i1 %1770, i64 %1769, i64 %1773
  store i64 %select.val.681, i64* %select.ptr.680, align 8
  %1774 = load i1, i1* %out.90
  %1775 = icmp slt i64 0, 3
  %1776 = bitcast i64* %shadow to i64*
  %safe.682 = or i1 %1774, %1775
  %select.ptr.683 = select i1 %safe.682, i64* %18, i64* %1776
  %1777 = load i64, i64* %select.ptr.683, align 16
  %1778 = shl i64 %1777, 1
  %1779 = load i1, i1* %out.90
  %1780 = icmp slt i64 0, 3
  %1781 = bitcast i64* %shadow to i64*
  %safe.684 = or i1 %1779, %1780
  %select.ptr.685 = select i1 %safe.684, i64* %18, i64* %1781
  %1782 = load i64, i64* %18
  %select.val.686 = select i1 %1779, i64 %1778, i64 %1782
  store i64 %select.val.686, i64* %select.ptr.685, align 16
  %1783 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1784 = load i1, i1* %out.90
  %1785 = icmp slt i64 1, 3
  %1786 = bitcast i64* %shadow to i64*
  %safe.687 = or i1 %1784, %1785
  %select.ptr.688 = select i1 %safe.687, i64* %1783, i64* %1786
  %1787 = load i64, i64* %select.ptr.688, align 8
  %1788 = shl i64 %1787, 1
  %1789 = load i1, i1* %out.90
  %1790 = icmp slt i64 1, 3
  %1791 = bitcast i64* %shadow to i64*
  %safe.689 = or i1 %1789, %1790
  %select.ptr.690 = select i1 %safe.689, i64* %1783, i64* %1791
  %1792 = load i64, i64* %1783
  %select.val.691 = select i1 %1789, i64 %1788, i64 %1792
  store i64 %select.val.691, i64* %select.ptr.690, align 8
  %1793 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1794 = load i1, i1* %out.90
  %1795 = icmp slt i64 2, 3
  %1796 = bitcast i64* %shadow to i64*
  %safe.692 = or i1 %1794, %1795
  %select.ptr.693 = select i1 %safe.692, i64* %1793, i64* %1796
  %1797 = load i64, i64* %select.ptr.693, align 16
  %1798 = shl i64 %1797, 1
  %1799 = load i1, i1* %out.90
  %1800 = icmp slt i64 2, 3
  %1801 = bitcast i64* %shadow to i64*
  %safe.694 = or i1 %1799, %1800
  %select.ptr.695 = select i1 %safe.694, i64* %1793, i64* %1801
  %1802 = load i64, i64* %1793
  %select.val.696 = select i1 %1799, i64 %1798, i64 %1802
  store i64 %select.val.696, i64* %select.ptr.695, align 16
  %1803 = load i1, i1* %out.90
  %1804 = load i64, i64* %0, align 8
  %1805 = and i64 %1804, 1
  %1806 = icmp ne i64 %1805, 0
  %1807 = load i1, i1* %out.90
  %in.282 = and i1 %1807, %1806
  store i1 %in.282, i1* %out.91
  %1808 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1809 = load i1, i1* %out.91
  %1810 = icmp slt i64 2, 3
  %1811 = bitcast i64* %shadow to i64*
  %safe.697 = or i1 %1809, %1810
  %select.ptr.698 = select i1 %safe.697, i64* %1808, i64* %1811
  %1812 = load i64, i64* %select.ptr.698, align 16
  %1813 = or i64 %1812, 1
  %1814 = load i1, i1* %out.91
  %1815 = icmp slt i64 2, 3
  %1816 = bitcast i64* %shadow to i64*
  %safe.699 = or i1 %1814, %1815
  %select.ptr.700 = select i1 %safe.699, i64* %1808, i64* %1816
  %1817 = load i64, i64* %1808
  %select.val.701 = select i1 %1814, i64 %1813, i64 %1817
  store i64 %select.val.701, i64* %select.ptr.700, align 16
  %1818 = load i1, i1* %out.90
  %1819 = xor i1 %1806, true
  %in.283 = and i1 %1818, %1819
  %1820 = load i1, i1* %out.91
  %1821 = or i1 %in.283, %1820
  store i1 %1821, i1* %out.92
  %1822 = getelementptr inbounds i64, i64* %0, i64 1
  %1823 = load i1, i1* %out.92
  %1824 = icmp slt i64 1, %N
  %1825 = bitcast i64* %shadow to i64*
  %safe.702 = or i1 %1823, %1824
  %select.ptr.703 = select i1 %safe.702, i64* %1822, i64* %1825
  %1826 = load i64, i64* %select.ptr.703, align 8
  %1827 = and i64 %1826, 1
  %1828 = icmp ne i64 %1827, 0
  %1829 = load i1, i1* %out.92
  %in.284 = and i1 %1829, %1828
  store i1 %in.284, i1* %out.93
  %1830 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1831 = load i1, i1* %out.93
  %1832 = icmp slt i64 1, 3
  %1833 = bitcast i64* %shadow to i64*
  %safe.704 = or i1 %1831, %1832
  %select.ptr.705 = select i1 %safe.704, i64* %1830, i64* %1833
  %1834 = load i64, i64* %select.ptr.705, align 8
  %1835 = or i64 %1834, 1
  %1836 = load i1, i1* %out.93
  %1837 = icmp slt i64 1, 3
  %1838 = bitcast i64* %shadow to i64*
  %safe.706 = or i1 %1836, %1837
  %select.ptr.707 = select i1 %safe.706, i64* %1830, i64* %1838
  %1839 = load i64, i64* %1830
  %select.val.708 = select i1 %1836, i64 %1835, i64 %1839
  store i64 %select.val.708, i64* %select.ptr.707, align 8
  %1840 = load i1, i1* %out.92
  %1841 = xor i1 %1828, true
  %in.285 = and i1 %1840, %1841
  %1842 = load i1, i1* %out.93
  %1843 = or i1 %in.285, %1842
  store i1 %1843, i1* %out.94
  %1844 = getelementptr inbounds i64, i64* %0, i64 2
  %1845 = load i1, i1* %out.94
  %1846 = icmp slt i64 2, %N
  %1847 = bitcast i64* %shadow to i64*
  %safe.709 = or i1 %1845, %1846
  %select.ptr.710 = select i1 %safe.709, i64* %1844, i64* %1847
  %1848 = load i64, i64* %select.ptr.710, align 8
  %1849 = and i64 %1848, 1
  %1850 = icmp ne i64 %1849, 0
  %1851 = load i1, i1* %out.94
  %in.286 = and i1 %1851, %1850
  store i1 %in.286, i1* %out.95
  %1852 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %1853 = load i1, i1* %out.95
  %1854 = icmp slt i64 0, 3
  %1855 = bitcast i64* %shadow to i64*
  %safe.711 = or i1 %1853, %1854
  %select.ptr.712 = select i1 %safe.711, i64* %1852, i64* %1855
  %1856 = load i64, i64* %select.ptr.712, align 16
  %1857 = or i64 %1856, 1
  %1858 = load i1, i1* %out.95
  %1859 = icmp slt i64 0, 3
  %1860 = bitcast i64* %shadow to i64*
  %safe.713 = or i1 %1858, %1859
  %select.ptr.714 = select i1 %safe.713, i64* %1852, i64* %1860
  %1861 = load i64, i64* %1852
  %select.val.715 = select i1 %1858, i64 %1857, i64 %1861
  store i64 %select.val.715, i64* %select.ptr.714, align 16
  %1862 = load i1, i1* %out.94
  %1863 = xor i1 %1850, true
  %in.287 = and i1 %1862, %1863
  %1864 = load i1, i1* %out.95
  %1865 = or i1 %in.287, %1864
  store i1 %1865, i1* %out.96
  %1866 = load i1, i1* %out.96
  %1867 = load i64, i64* %0, align 8
  %1868 = lshr i64 %1867, 1
  %1869 = load i1, i1* %out.96
  %1870 = load i64, i64* %0
  %select.val.716 = select i1 %1869, i64 %1868, i64 %1870
  store i64 %select.val.716, i64* %0, align 8
  %1871 = getelementptr inbounds i64, i64* %0, i64 1
  %1872 = load i1, i1* %out.96
  %1873 = icmp slt i64 1, %N
  %1874 = bitcast i64* %shadow to i64*
  %safe.717 = or i1 %1872, %1873
  %select.ptr.718 = select i1 %safe.717, i64* %1871, i64* %1874
  %1875 = load i64, i64* %select.ptr.718, align 8
  %1876 = lshr i64 %1875, 1
  %1877 = load i1, i1* %out.96
  %1878 = icmp slt i64 1, %N
  %1879 = bitcast i64* %shadow to i64*
  %safe.719 = or i1 %1877, %1878
  %select.ptr.720 = select i1 %safe.719, i64* %1871, i64* %1879
  %1880 = load i64, i64* %1871
  %select.val.721 = select i1 %1877, i64 %1876, i64 %1880
  store i64 %select.val.721, i64* %select.ptr.720, align 8
  %1881 = getelementptr inbounds i64, i64* %0, i64 2
  %1882 = load i1, i1* %out.96
  %1883 = icmp slt i64 2, %N
  %1884 = bitcast i64* %shadow to i64*
  %safe.722 = or i1 %1882, %1883
  %select.ptr.723 = select i1 %safe.722, i64* %1881, i64* %1884
  %1885 = load i64, i64* %select.ptr.723, align 8
  %1886 = lshr i64 %1885, 1
  %1887 = load i1, i1* %out.96
  %1888 = icmp slt i64 2, %N
  %1889 = bitcast i64* %shadow to i64*
  %safe.724 = or i1 %1887, %1888
  %select.ptr.725 = select i1 %safe.724, i64* %1881, i64* %1889
  %1890 = load i64, i64* %1881
  %select.val.726 = select i1 %1887, i64 %1886, i64 %1890
  store i64 %select.val.726, i64* %select.ptr.725, align 8
  %1891 = load i1, i1* %out.96
  %1892 = icmp slt i64 0, 3
  %1893 = bitcast i64* %shadow to i64*
  %safe.727 = or i1 %1891, %1892
  %select.ptr.728 = select i1 %safe.727, i64* %18, i64* %1893
  %1894 = load i64, i64* %select.ptr.728, align 16
  %1895 = shl i64 %1894, 1
  %1896 = load i1, i1* %out.96
  %1897 = icmp slt i64 0, 3
  %1898 = bitcast i64* %shadow to i64*
  %safe.729 = or i1 %1896, %1897
  %select.ptr.730 = select i1 %safe.729, i64* %18, i64* %1898
  %1899 = load i64, i64* %18
  %select.val.731 = select i1 %1896, i64 %1895, i64 %1899
  store i64 %select.val.731, i64* %select.ptr.730, align 16
  %1900 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1901 = load i1, i1* %out.96
  %1902 = icmp slt i64 1, 3
  %1903 = bitcast i64* %shadow to i64*
  %safe.732 = or i1 %1901, %1902
  %select.ptr.733 = select i1 %safe.732, i64* %1900, i64* %1903
  %1904 = load i64, i64* %select.ptr.733, align 8
  %1905 = shl i64 %1904, 1
  %1906 = load i1, i1* %out.96
  %1907 = icmp slt i64 1, 3
  %1908 = bitcast i64* %shadow to i64*
  %safe.734 = or i1 %1906, %1907
  %select.ptr.735 = select i1 %safe.734, i64* %1900, i64* %1908
  %1909 = load i64, i64* %1900
  %select.val.736 = select i1 %1906, i64 %1905, i64 %1909
  store i64 %select.val.736, i64* %select.ptr.735, align 8
  %1910 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1911 = load i1, i1* %out.96
  %1912 = icmp slt i64 2, 3
  %1913 = bitcast i64* %shadow to i64*
  %safe.737 = or i1 %1911, %1912
  %select.ptr.738 = select i1 %safe.737, i64* %1910, i64* %1913
  %1914 = load i64, i64* %select.ptr.738, align 16
  %1915 = shl i64 %1914, 1
  %1916 = load i1, i1* %out.96
  %1917 = icmp slt i64 2, 3
  %1918 = bitcast i64* %shadow to i64*
  %safe.739 = or i1 %1916, %1917
  %select.ptr.740 = select i1 %safe.739, i64* %1910, i64* %1918
  %1919 = load i64, i64* %1910
  %select.val.741 = select i1 %1916, i64 %1915, i64 %1919
  store i64 %select.val.741, i64* %select.ptr.740, align 16
  %1920 = load i1, i1* %out.96
  %1921 = load i64, i64* %0, align 8
  %1922 = and i64 %1921, 1
  %1923 = icmp ne i64 %1922, 0
  %1924 = load i1, i1* %out.96
  %in.288 = and i1 %1924, %1923
  store i1 %in.288, i1* %out.97
  %1925 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %1926 = load i1, i1* %out.97
  %1927 = icmp slt i64 2, 3
  %1928 = bitcast i64* %shadow to i64*
  %safe.742 = or i1 %1926, %1927
  %select.ptr.743 = select i1 %safe.742, i64* %1925, i64* %1928
  %1929 = load i64, i64* %select.ptr.743, align 16
  %1930 = or i64 %1929, 1
  %1931 = load i1, i1* %out.97
  %1932 = icmp slt i64 2, 3
  %1933 = bitcast i64* %shadow to i64*
  %safe.744 = or i1 %1931, %1932
  %select.ptr.745 = select i1 %safe.744, i64* %1925, i64* %1933
  %1934 = load i64, i64* %1925
  %select.val.746 = select i1 %1931, i64 %1930, i64 %1934
  store i64 %select.val.746, i64* %select.ptr.745, align 16
  %1935 = load i1, i1* %out.96
  %1936 = xor i1 %1923, true
  %in.289 = and i1 %1935, %1936
  %1937 = load i1, i1* %out.97
  %1938 = or i1 %in.289, %1937
  store i1 %1938, i1* %out.98
  %1939 = getelementptr inbounds i64, i64* %0, i64 1
  %1940 = load i1, i1* %out.98
  %1941 = icmp slt i64 1, %N
  %1942 = bitcast i64* %shadow to i64*
  %safe.747 = or i1 %1940, %1941
  %select.ptr.748 = select i1 %safe.747, i64* %1939, i64* %1942
  %1943 = load i64, i64* %select.ptr.748, align 8
  %1944 = and i64 %1943, 1
  %1945 = icmp ne i64 %1944, 0
  %1946 = load i1, i1* %out.98
  %in.290 = and i1 %1946, %1945
  store i1 %in.290, i1* %out.99
  %1947 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %1948 = load i1, i1* %out.99
  %1949 = icmp slt i64 1, 3
  %1950 = bitcast i64* %shadow to i64*
  %safe.749 = or i1 %1948, %1949
  %select.ptr.750 = select i1 %safe.749, i64* %1947, i64* %1950
  %1951 = load i64, i64* %select.ptr.750, align 8
  %1952 = or i64 %1951, 1
  %1953 = load i1, i1* %out.99
  %1954 = icmp slt i64 1, 3
  %1955 = bitcast i64* %shadow to i64*
  %safe.751 = or i1 %1953, %1954
  %select.ptr.752 = select i1 %safe.751, i64* %1947, i64* %1955
  %1956 = load i64, i64* %1947
  %select.val.753 = select i1 %1953, i64 %1952, i64 %1956
  store i64 %select.val.753, i64* %select.ptr.752, align 8
  %1957 = load i1, i1* %out.98
  %1958 = xor i1 %1945, true
  %in.291 = and i1 %1957, %1958
  %1959 = load i1, i1* %out.99
  %1960 = or i1 %in.291, %1959
  store i1 %1960, i1* %out.100
  %1961 = getelementptr inbounds i64, i64* %0, i64 2
  %1962 = load i1, i1* %out.100
  %1963 = icmp slt i64 2, %N
  %1964 = bitcast i64* %shadow to i64*
  %safe.754 = or i1 %1962, %1963
  %select.ptr.755 = select i1 %safe.754, i64* %1961, i64* %1964
  %1965 = load i64, i64* %select.ptr.755, align 8
  %1966 = and i64 %1965, 1
  %1967 = icmp ne i64 %1966, 0
  %1968 = load i1, i1* %out.100
  %in.292 = and i1 %1968, %1967
  store i1 %in.292, i1* %out.101
  %1969 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %1970 = load i1, i1* %out.101
  %1971 = icmp slt i64 0, 3
  %1972 = bitcast i64* %shadow to i64*
  %safe.756 = or i1 %1970, %1971
  %select.ptr.757 = select i1 %safe.756, i64* %1969, i64* %1972
  %1973 = load i64, i64* %select.ptr.757, align 16
  %1974 = or i64 %1973, 1
  %1975 = load i1, i1* %out.101
  %1976 = icmp slt i64 0, 3
  %1977 = bitcast i64* %shadow to i64*
  %safe.758 = or i1 %1975, %1976
  %select.ptr.759 = select i1 %safe.758, i64* %1969, i64* %1977
  %1978 = load i64, i64* %1969
  %select.val.760 = select i1 %1975, i64 %1974, i64 %1978
  store i64 %select.val.760, i64* %select.ptr.759, align 16
  %1979 = load i1, i1* %out.100
  %1980 = xor i1 %1967, true
  %in.293 = and i1 %1979, %1980
  %1981 = load i1, i1* %out.101
  %1982 = or i1 %in.293, %1981
  store i1 %1982, i1* %out.102
  %1983 = load i1, i1* %out.102
  %1984 = load i64, i64* %0, align 8
  %1985 = lshr i64 %1984, 1
  %1986 = load i1, i1* %out.102
  %1987 = load i64, i64* %0
  %select.val.761 = select i1 %1986, i64 %1985, i64 %1987
  store i64 %select.val.761, i64* %0, align 8
  %1988 = getelementptr inbounds i64, i64* %0, i64 1
  %1989 = load i1, i1* %out.102
  %1990 = icmp slt i64 1, %N
  %1991 = bitcast i64* %shadow to i64*
  %safe.762 = or i1 %1989, %1990
  %select.ptr.763 = select i1 %safe.762, i64* %1988, i64* %1991
  %1992 = load i64, i64* %select.ptr.763, align 8
  %1993 = lshr i64 %1992, 1
  %1994 = load i1, i1* %out.102
  %1995 = icmp slt i64 1, %N
  %1996 = bitcast i64* %shadow to i64*
  %safe.764 = or i1 %1994, %1995
  %select.ptr.765 = select i1 %safe.764, i64* %1988, i64* %1996
  %1997 = load i64, i64* %1988
  %select.val.766 = select i1 %1994, i64 %1993, i64 %1997
  store i64 %select.val.766, i64* %select.ptr.765, align 8
  %1998 = getelementptr inbounds i64, i64* %0, i64 2
  %1999 = load i1, i1* %out.102
  %2000 = icmp slt i64 2, %N
  %2001 = bitcast i64* %shadow to i64*
  %safe.767 = or i1 %1999, %2000
  %select.ptr.768 = select i1 %safe.767, i64* %1998, i64* %2001
  %2002 = load i64, i64* %select.ptr.768, align 8
  %2003 = lshr i64 %2002, 1
  %2004 = load i1, i1* %out.102
  %2005 = icmp slt i64 2, %N
  %2006 = bitcast i64* %shadow to i64*
  %safe.769 = or i1 %2004, %2005
  %select.ptr.770 = select i1 %safe.769, i64* %1998, i64* %2006
  %2007 = load i64, i64* %1998
  %select.val.771 = select i1 %2004, i64 %2003, i64 %2007
  store i64 %select.val.771, i64* %select.ptr.770, align 8
  %2008 = load i1, i1* %out.102
  %2009 = icmp slt i64 0, 3
  %2010 = bitcast i64* %shadow to i64*
  %safe.772 = or i1 %2008, %2009
  %select.ptr.773 = select i1 %safe.772, i64* %18, i64* %2010
  %2011 = load i64, i64* %select.ptr.773, align 16
  %2012 = shl i64 %2011, 1
  %2013 = load i1, i1* %out.102
  %2014 = icmp slt i64 0, 3
  %2015 = bitcast i64* %shadow to i64*
  %safe.774 = or i1 %2013, %2014
  %select.ptr.775 = select i1 %safe.774, i64* %18, i64* %2015
  %2016 = load i64, i64* %18
  %select.val.776 = select i1 %2013, i64 %2012, i64 %2016
  store i64 %select.val.776, i64* %select.ptr.775, align 16
  %2017 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2018 = load i1, i1* %out.102
  %2019 = icmp slt i64 1, 3
  %2020 = bitcast i64* %shadow to i64*
  %safe.777 = or i1 %2018, %2019
  %select.ptr.778 = select i1 %safe.777, i64* %2017, i64* %2020
  %2021 = load i64, i64* %select.ptr.778, align 8
  %2022 = shl i64 %2021, 1
  %2023 = load i1, i1* %out.102
  %2024 = icmp slt i64 1, 3
  %2025 = bitcast i64* %shadow to i64*
  %safe.779 = or i1 %2023, %2024
  %select.ptr.780 = select i1 %safe.779, i64* %2017, i64* %2025
  %2026 = load i64, i64* %2017
  %select.val.781 = select i1 %2023, i64 %2022, i64 %2026
  store i64 %select.val.781, i64* %select.ptr.780, align 8
  %2027 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2028 = load i1, i1* %out.102
  %2029 = icmp slt i64 2, 3
  %2030 = bitcast i64* %shadow to i64*
  %safe.782 = or i1 %2028, %2029
  %select.ptr.783 = select i1 %safe.782, i64* %2027, i64* %2030
  %2031 = load i64, i64* %select.ptr.783, align 16
  %2032 = shl i64 %2031, 1
  %2033 = load i1, i1* %out.102
  %2034 = icmp slt i64 2, 3
  %2035 = bitcast i64* %shadow to i64*
  %safe.784 = or i1 %2033, %2034
  %select.ptr.785 = select i1 %safe.784, i64* %2027, i64* %2035
  %2036 = load i64, i64* %2027
  %select.val.786 = select i1 %2033, i64 %2032, i64 %2036
  store i64 %select.val.786, i64* %select.ptr.785, align 16
  %2037 = load i1, i1* %out.102
  %2038 = load i64, i64* %0, align 8
  %2039 = and i64 %2038, 1
  %2040 = icmp ne i64 %2039, 0
  %2041 = load i1, i1* %out.102
  %in.294 = and i1 %2041, %2040
  store i1 %in.294, i1* %out.103
  %2042 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2043 = load i1, i1* %out.103
  %2044 = icmp slt i64 2, 3
  %2045 = bitcast i64* %shadow to i64*
  %safe.787 = or i1 %2043, %2044
  %select.ptr.788 = select i1 %safe.787, i64* %2042, i64* %2045
  %2046 = load i64, i64* %select.ptr.788, align 16
  %2047 = or i64 %2046, 1
  %2048 = load i1, i1* %out.103
  %2049 = icmp slt i64 2, 3
  %2050 = bitcast i64* %shadow to i64*
  %safe.789 = or i1 %2048, %2049
  %select.ptr.790 = select i1 %safe.789, i64* %2042, i64* %2050
  %2051 = load i64, i64* %2042
  %select.val.791 = select i1 %2048, i64 %2047, i64 %2051
  store i64 %select.val.791, i64* %select.ptr.790, align 16
  %2052 = load i1, i1* %out.102
  %2053 = xor i1 %2040, true
  %in.295 = and i1 %2052, %2053
  %2054 = load i1, i1* %out.103
  %2055 = or i1 %in.295, %2054
  store i1 %2055, i1* %out.104
  %2056 = getelementptr inbounds i64, i64* %0, i64 1
  %2057 = load i1, i1* %out.104
  %2058 = icmp slt i64 1, %N
  %2059 = bitcast i64* %shadow to i64*
  %safe.792 = or i1 %2057, %2058
  %select.ptr.793 = select i1 %safe.792, i64* %2056, i64* %2059
  %2060 = load i64, i64* %select.ptr.793, align 8
  %2061 = and i64 %2060, 1
  %2062 = icmp ne i64 %2061, 0
  %2063 = load i1, i1* %out.104
  %in.296 = and i1 %2063, %2062
  store i1 %in.296, i1* %out.105
  %2064 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2065 = load i1, i1* %out.105
  %2066 = icmp slt i64 1, 3
  %2067 = bitcast i64* %shadow to i64*
  %safe.794 = or i1 %2065, %2066
  %select.ptr.795 = select i1 %safe.794, i64* %2064, i64* %2067
  %2068 = load i64, i64* %select.ptr.795, align 8
  %2069 = or i64 %2068, 1
  %2070 = load i1, i1* %out.105
  %2071 = icmp slt i64 1, 3
  %2072 = bitcast i64* %shadow to i64*
  %safe.796 = or i1 %2070, %2071
  %select.ptr.797 = select i1 %safe.796, i64* %2064, i64* %2072
  %2073 = load i64, i64* %2064
  %select.val.798 = select i1 %2070, i64 %2069, i64 %2073
  store i64 %select.val.798, i64* %select.ptr.797, align 8
  %2074 = load i1, i1* %out.104
  %2075 = xor i1 %2062, true
  %in.297 = and i1 %2074, %2075
  %2076 = load i1, i1* %out.105
  %2077 = or i1 %in.297, %2076
  store i1 %2077, i1* %out.106
  %2078 = getelementptr inbounds i64, i64* %0, i64 2
  %2079 = load i1, i1* %out.106
  %2080 = icmp slt i64 2, %N
  %2081 = bitcast i64* %shadow to i64*
  %safe.799 = or i1 %2079, %2080
  %select.ptr.800 = select i1 %safe.799, i64* %2078, i64* %2081
  %2082 = load i64, i64* %select.ptr.800, align 8
  %2083 = and i64 %2082, 1
  %2084 = icmp ne i64 %2083, 0
  %2085 = load i1, i1* %out.106
  %in.298 = and i1 %2085, %2084
  store i1 %in.298, i1* %out.107
  %2086 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %2087 = load i1, i1* %out.107
  %2088 = icmp slt i64 0, 3
  %2089 = bitcast i64* %shadow to i64*
  %safe.801 = or i1 %2087, %2088
  %select.ptr.802 = select i1 %safe.801, i64* %2086, i64* %2089
  %2090 = load i64, i64* %select.ptr.802, align 16
  %2091 = or i64 %2090, 1
  %2092 = load i1, i1* %out.107
  %2093 = icmp slt i64 0, 3
  %2094 = bitcast i64* %shadow to i64*
  %safe.803 = or i1 %2092, %2093
  %select.ptr.804 = select i1 %safe.803, i64* %2086, i64* %2094
  %2095 = load i64, i64* %2086
  %select.val.805 = select i1 %2092, i64 %2091, i64 %2095
  store i64 %select.val.805, i64* %select.ptr.804, align 16
  %2096 = load i1, i1* %out.106
  %2097 = xor i1 %2084, true
  %in.299 = and i1 %2096, %2097
  %2098 = load i1, i1* %out.107
  %2099 = or i1 %in.299, %2098
  store i1 %2099, i1* %out.108
  %2100 = load i1, i1* %out.108
  %2101 = load i64, i64* %0, align 8
  %2102 = lshr i64 %2101, 1
  %2103 = load i1, i1* %out.108
  %2104 = load i64, i64* %0
  %select.val.806 = select i1 %2103, i64 %2102, i64 %2104
  store i64 %select.val.806, i64* %0, align 8
  %2105 = getelementptr inbounds i64, i64* %0, i64 1
  %2106 = load i1, i1* %out.108
  %2107 = icmp slt i64 1, %N
  %2108 = bitcast i64* %shadow to i64*
  %safe.807 = or i1 %2106, %2107
  %select.ptr.808 = select i1 %safe.807, i64* %2105, i64* %2108
  %2109 = load i64, i64* %select.ptr.808, align 8
  %2110 = lshr i64 %2109, 1
  %2111 = load i1, i1* %out.108
  %2112 = icmp slt i64 1, %N
  %2113 = bitcast i64* %shadow to i64*
  %safe.809 = or i1 %2111, %2112
  %select.ptr.810 = select i1 %safe.809, i64* %2105, i64* %2113
  %2114 = load i64, i64* %2105
  %select.val.811 = select i1 %2111, i64 %2110, i64 %2114
  store i64 %select.val.811, i64* %select.ptr.810, align 8
  %2115 = getelementptr inbounds i64, i64* %0, i64 2
  %2116 = load i1, i1* %out.108
  %2117 = icmp slt i64 2, %N
  %2118 = bitcast i64* %shadow to i64*
  %safe.812 = or i1 %2116, %2117
  %select.ptr.813 = select i1 %safe.812, i64* %2115, i64* %2118
  %2119 = load i64, i64* %select.ptr.813, align 8
  %2120 = lshr i64 %2119, 1
  %2121 = load i1, i1* %out.108
  %2122 = icmp slt i64 2, %N
  %2123 = bitcast i64* %shadow to i64*
  %safe.814 = or i1 %2121, %2122
  %select.ptr.815 = select i1 %safe.814, i64* %2115, i64* %2123
  %2124 = load i64, i64* %2115
  %select.val.816 = select i1 %2121, i64 %2120, i64 %2124
  store i64 %select.val.816, i64* %select.ptr.815, align 8
  %2125 = load i1, i1* %out.108
  %2126 = icmp slt i64 0, 3
  %2127 = bitcast i64* %shadow to i64*
  %safe.817 = or i1 %2125, %2126
  %select.ptr.818 = select i1 %safe.817, i64* %18, i64* %2127
  %2128 = load i64, i64* %select.ptr.818, align 16
  %2129 = shl i64 %2128, 1
  %2130 = load i1, i1* %out.108
  %2131 = icmp slt i64 0, 3
  %2132 = bitcast i64* %shadow to i64*
  %safe.819 = or i1 %2130, %2131
  %select.ptr.820 = select i1 %safe.819, i64* %18, i64* %2132
  %2133 = load i64, i64* %18
  %select.val.821 = select i1 %2130, i64 %2129, i64 %2133
  store i64 %select.val.821, i64* %select.ptr.820, align 16
  %2134 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2135 = load i1, i1* %out.108
  %2136 = icmp slt i64 1, 3
  %2137 = bitcast i64* %shadow to i64*
  %safe.822 = or i1 %2135, %2136
  %select.ptr.823 = select i1 %safe.822, i64* %2134, i64* %2137
  %2138 = load i64, i64* %select.ptr.823, align 8
  %2139 = shl i64 %2138, 1
  %2140 = load i1, i1* %out.108
  %2141 = icmp slt i64 1, 3
  %2142 = bitcast i64* %shadow to i64*
  %safe.824 = or i1 %2140, %2141
  %select.ptr.825 = select i1 %safe.824, i64* %2134, i64* %2142
  %2143 = load i64, i64* %2134
  %select.val.826 = select i1 %2140, i64 %2139, i64 %2143
  store i64 %select.val.826, i64* %select.ptr.825, align 8
  %2144 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2145 = load i1, i1* %out.108
  %2146 = icmp slt i64 2, 3
  %2147 = bitcast i64* %shadow to i64*
  %safe.827 = or i1 %2145, %2146
  %select.ptr.828 = select i1 %safe.827, i64* %2144, i64* %2147
  %2148 = load i64, i64* %select.ptr.828, align 16
  %2149 = shl i64 %2148, 1
  %2150 = load i1, i1* %out.108
  %2151 = icmp slt i64 2, 3
  %2152 = bitcast i64* %shadow to i64*
  %safe.829 = or i1 %2150, %2151
  %select.ptr.830 = select i1 %safe.829, i64* %2144, i64* %2152
  %2153 = load i64, i64* %2144
  %select.val.831 = select i1 %2150, i64 %2149, i64 %2153
  store i64 %select.val.831, i64* %select.ptr.830, align 16
  %2154 = load i1, i1* %out.108
  %2155 = load i64, i64* %0, align 8
  %2156 = and i64 %2155, 1
  %2157 = icmp ne i64 %2156, 0
  %2158 = load i1, i1* %out.108
  %in.300 = and i1 %2158, %2157
  store i1 %in.300, i1* %out.109
  %2159 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2160 = load i1, i1* %out.109
  %2161 = icmp slt i64 2, 3
  %2162 = bitcast i64* %shadow to i64*
  %safe.832 = or i1 %2160, %2161
  %select.ptr.833 = select i1 %safe.832, i64* %2159, i64* %2162
  %2163 = load i64, i64* %select.ptr.833, align 16
  %2164 = or i64 %2163, 1
  %2165 = load i1, i1* %out.109
  %2166 = icmp slt i64 2, 3
  %2167 = bitcast i64* %shadow to i64*
  %safe.834 = or i1 %2165, %2166
  %select.ptr.835 = select i1 %safe.834, i64* %2159, i64* %2167
  %2168 = load i64, i64* %2159
  %select.val.836 = select i1 %2165, i64 %2164, i64 %2168
  store i64 %select.val.836, i64* %select.ptr.835, align 16
  %2169 = load i1, i1* %out.108
  %2170 = xor i1 %2157, true
  %in.301 = and i1 %2169, %2170
  %2171 = load i1, i1* %out.109
  %2172 = or i1 %in.301, %2171
  store i1 %2172, i1* %out.110
  %2173 = getelementptr inbounds i64, i64* %0, i64 1
  %2174 = load i1, i1* %out.110
  %2175 = icmp slt i64 1, %N
  %2176 = bitcast i64* %shadow to i64*
  %safe.837 = or i1 %2174, %2175
  %select.ptr.838 = select i1 %safe.837, i64* %2173, i64* %2176
  %2177 = load i64, i64* %select.ptr.838, align 8
  %2178 = and i64 %2177, 1
  %2179 = icmp ne i64 %2178, 0
  %2180 = load i1, i1* %out.110
  %in.302 = and i1 %2180, %2179
  store i1 %in.302, i1* %out.111
  %2181 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2182 = load i1, i1* %out.111
  %2183 = icmp slt i64 1, 3
  %2184 = bitcast i64* %shadow to i64*
  %safe.839 = or i1 %2182, %2183
  %select.ptr.840 = select i1 %safe.839, i64* %2181, i64* %2184
  %2185 = load i64, i64* %select.ptr.840, align 8
  %2186 = or i64 %2185, 1
  %2187 = load i1, i1* %out.111
  %2188 = icmp slt i64 1, 3
  %2189 = bitcast i64* %shadow to i64*
  %safe.841 = or i1 %2187, %2188
  %select.ptr.842 = select i1 %safe.841, i64* %2181, i64* %2189
  %2190 = load i64, i64* %2181
  %select.val.843 = select i1 %2187, i64 %2186, i64 %2190
  store i64 %select.val.843, i64* %select.ptr.842, align 8
  %2191 = load i1, i1* %out.110
  %2192 = xor i1 %2179, true
  %in.303 = and i1 %2191, %2192
  %2193 = load i1, i1* %out.111
  %2194 = or i1 %in.303, %2193
  store i1 %2194, i1* %out.112
  %2195 = getelementptr inbounds i64, i64* %0, i64 2
  %2196 = load i1, i1* %out.112
  %2197 = icmp slt i64 2, %N
  %2198 = bitcast i64* %shadow to i64*
  %safe.844 = or i1 %2196, %2197
  %select.ptr.845 = select i1 %safe.844, i64* %2195, i64* %2198
  %2199 = load i64, i64* %select.ptr.845, align 8
  %2200 = and i64 %2199, 1
  %2201 = icmp ne i64 %2200, 0
  %2202 = load i1, i1* %out.112
  %in.304 = and i1 %2202, %2201
  store i1 %in.304, i1* %out.113
  %2203 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %2204 = load i1, i1* %out.113
  %2205 = icmp slt i64 0, 3
  %2206 = bitcast i64* %shadow to i64*
  %safe.846 = or i1 %2204, %2205
  %select.ptr.847 = select i1 %safe.846, i64* %2203, i64* %2206
  %2207 = load i64, i64* %select.ptr.847, align 16
  %2208 = or i64 %2207, 1
  %2209 = load i1, i1* %out.113
  %2210 = icmp slt i64 0, 3
  %2211 = bitcast i64* %shadow to i64*
  %safe.848 = or i1 %2209, %2210
  %select.ptr.849 = select i1 %safe.848, i64* %2203, i64* %2211
  %2212 = load i64, i64* %2203
  %select.val.850 = select i1 %2209, i64 %2208, i64 %2212
  store i64 %select.val.850, i64* %select.ptr.849, align 16
  %2213 = load i1, i1* %out.112
  %2214 = xor i1 %2201, true
  %in.305 = and i1 %2213, %2214
  %2215 = load i1, i1* %out.113
  %2216 = or i1 %in.305, %2215
  store i1 %2216, i1* %out.114
  %2217 = load i1, i1* %out.114
  %2218 = load i64, i64* %0, align 8
  %2219 = lshr i64 %2218, 1
  %2220 = load i1, i1* %out.114
  %2221 = load i64, i64* %0
  %select.val.851 = select i1 %2220, i64 %2219, i64 %2221
  store i64 %select.val.851, i64* %0, align 8
  %2222 = getelementptr inbounds i64, i64* %0, i64 1
  %2223 = load i1, i1* %out.114
  %2224 = icmp slt i64 1, %N
  %2225 = bitcast i64* %shadow to i64*
  %safe.852 = or i1 %2223, %2224
  %select.ptr.853 = select i1 %safe.852, i64* %2222, i64* %2225
  %2226 = load i64, i64* %select.ptr.853, align 8
  %2227 = lshr i64 %2226, 1
  %2228 = load i1, i1* %out.114
  %2229 = icmp slt i64 1, %N
  %2230 = bitcast i64* %shadow to i64*
  %safe.854 = or i1 %2228, %2229
  %select.ptr.855 = select i1 %safe.854, i64* %2222, i64* %2230
  %2231 = load i64, i64* %2222
  %select.val.856 = select i1 %2228, i64 %2227, i64 %2231
  store i64 %select.val.856, i64* %select.ptr.855, align 8
  %2232 = getelementptr inbounds i64, i64* %0, i64 2
  %2233 = load i1, i1* %out.114
  %2234 = icmp slt i64 2, %N
  %2235 = bitcast i64* %shadow to i64*
  %safe.857 = or i1 %2233, %2234
  %select.ptr.858 = select i1 %safe.857, i64* %2232, i64* %2235
  %2236 = load i64, i64* %select.ptr.858, align 8
  %2237 = lshr i64 %2236, 1
  %2238 = load i1, i1* %out.114
  %2239 = icmp slt i64 2, %N
  %2240 = bitcast i64* %shadow to i64*
  %safe.859 = or i1 %2238, %2239
  %select.ptr.860 = select i1 %safe.859, i64* %2232, i64* %2240
  %2241 = load i64, i64* %2232
  %select.val.861 = select i1 %2238, i64 %2237, i64 %2241
  store i64 %select.val.861, i64* %select.ptr.860, align 8
  %2242 = load i1, i1* %out.114
  %2243 = icmp slt i64 0, 3
  %2244 = bitcast i64* %shadow to i64*
  %safe.862 = or i1 %2242, %2243
  %select.ptr.863 = select i1 %safe.862, i64* %18, i64* %2244
  %2245 = load i64, i64* %select.ptr.863, align 16
  %2246 = shl i64 %2245, 1
  %2247 = load i1, i1* %out.114
  %2248 = icmp slt i64 0, 3
  %2249 = bitcast i64* %shadow to i64*
  %safe.864 = or i1 %2247, %2248
  %select.ptr.865 = select i1 %safe.864, i64* %18, i64* %2249
  %2250 = load i64, i64* %18
  %select.val.866 = select i1 %2247, i64 %2246, i64 %2250
  store i64 %select.val.866, i64* %select.ptr.865, align 16
  %2251 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2252 = load i1, i1* %out.114
  %2253 = icmp slt i64 1, 3
  %2254 = bitcast i64* %shadow to i64*
  %safe.867 = or i1 %2252, %2253
  %select.ptr.868 = select i1 %safe.867, i64* %2251, i64* %2254
  %2255 = load i64, i64* %select.ptr.868, align 8
  %2256 = shl i64 %2255, 1
  %2257 = load i1, i1* %out.114
  %2258 = icmp slt i64 1, 3
  %2259 = bitcast i64* %shadow to i64*
  %safe.869 = or i1 %2257, %2258
  %select.ptr.870 = select i1 %safe.869, i64* %2251, i64* %2259
  %2260 = load i64, i64* %2251
  %select.val.871 = select i1 %2257, i64 %2256, i64 %2260
  store i64 %select.val.871, i64* %select.ptr.870, align 8
  %2261 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2262 = load i1, i1* %out.114
  %2263 = icmp slt i64 2, 3
  %2264 = bitcast i64* %shadow to i64*
  %safe.872 = or i1 %2262, %2263
  %select.ptr.873 = select i1 %safe.872, i64* %2261, i64* %2264
  %2265 = load i64, i64* %select.ptr.873, align 16
  %2266 = shl i64 %2265, 1
  %2267 = load i1, i1* %out.114
  %2268 = icmp slt i64 2, 3
  %2269 = bitcast i64* %shadow to i64*
  %safe.874 = or i1 %2267, %2268
  %select.ptr.875 = select i1 %safe.874, i64* %2261, i64* %2269
  %2270 = load i64, i64* %2261
  %select.val.876 = select i1 %2267, i64 %2266, i64 %2270
  store i64 %select.val.876, i64* %select.ptr.875, align 16
  %2271 = load i1, i1* %out.114
  %2272 = load i64, i64* %0, align 8
  %2273 = and i64 %2272, 1
  %2274 = icmp ne i64 %2273, 0
  %2275 = load i1, i1* %out.114
  %in.306 = and i1 %2275, %2274
  store i1 %in.306, i1* %out.115
  %2276 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2277 = load i1, i1* %out.115
  %2278 = icmp slt i64 2, 3
  %2279 = bitcast i64* %shadow to i64*
  %safe.877 = or i1 %2277, %2278
  %select.ptr.878 = select i1 %safe.877, i64* %2276, i64* %2279
  %2280 = load i64, i64* %select.ptr.878, align 16
  %2281 = or i64 %2280, 1
  %2282 = load i1, i1* %out.115
  %2283 = icmp slt i64 2, 3
  %2284 = bitcast i64* %shadow to i64*
  %safe.879 = or i1 %2282, %2283
  %select.ptr.880 = select i1 %safe.879, i64* %2276, i64* %2284
  %2285 = load i64, i64* %2276
  %select.val.881 = select i1 %2282, i64 %2281, i64 %2285
  store i64 %select.val.881, i64* %select.ptr.880, align 16
  %2286 = load i1, i1* %out.114
  %2287 = xor i1 %2274, true
  %in.307 = and i1 %2286, %2287
  %2288 = load i1, i1* %out.115
  %2289 = or i1 %in.307, %2288
  store i1 %2289, i1* %out.116
  %2290 = getelementptr inbounds i64, i64* %0, i64 1
  %2291 = load i1, i1* %out.116
  %2292 = icmp slt i64 1, %N
  %2293 = bitcast i64* %shadow to i64*
  %safe.882 = or i1 %2291, %2292
  %select.ptr.883 = select i1 %safe.882, i64* %2290, i64* %2293
  %2294 = load i64, i64* %select.ptr.883, align 8
  %2295 = and i64 %2294, 1
  %2296 = icmp ne i64 %2295, 0
  %2297 = load i1, i1* %out.116
  %in.308 = and i1 %2297, %2296
  store i1 %in.308, i1* %out.117
  %2298 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2299 = load i1, i1* %out.117
  %2300 = icmp slt i64 1, 3
  %2301 = bitcast i64* %shadow to i64*
  %safe.884 = or i1 %2299, %2300
  %select.ptr.885 = select i1 %safe.884, i64* %2298, i64* %2301
  %2302 = load i64, i64* %select.ptr.885, align 8
  %2303 = or i64 %2302, 1
  %2304 = load i1, i1* %out.117
  %2305 = icmp slt i64 1, 3
  %2306 = bitcast i64* %shadow to i64*
  %safe.886 = or i1 %2304, %2305
  %select.ptr.887 = select i1 %safe.886, i64* %2298, i64* %2306
  %2307 = load i64, i64* %2298
  %select.val.888 = select i1 %2304, i64 %2303, i64 %2307
  store i64 %select.val.888, i64* %select.ptr.887, align 8
  %2308 = load i1, i1* %out.116
  %2309 = xor i1 %2296, true
  %in.309 = and i1 %2308, %2309
  %2310 = load i1, i1* %out.117
  %2311 = or i1 %in.309, %2310
  store i1 %2311, i1* %out.118
  %2312 = getelementptr inbounds i64, i64* %0, i64 2
  %2313 = load i1, i1* %out.118
  %2314 = icmp slt i64 2, %N
  %2315 = bitcast i64* %shadow to i64*
  %safe.889 = or i1 %2313, %2314
  %select.ptr.890 = select i1 %safe.889, i64* %2312, i64* %2315
  %2316 = load i64, i64* %select.ptr.890, align 8
  %2317 = and i64 %2316, 1
  %2318 = icmp ne i64 %2317, 0
  %2319 = load i1, i1* %out.118
  %in.310 = and i1 %2319, %2318
  store i1 %in.310, i1* %out.119
  %2320 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %2321 = load i1, i1* %out.119
  %2322 = icmp slt i64 0, 3
  %2323 = bitcast i64* %shadow to i64*
  %safe.891 = or i1 %2321, %2322
  %select.ptr.892 = select i1 %safe.891, i64* %2320, i64* %2323
  %2324 = load i64, i64* %select.ptr.892, align 16
  %2325 = or i64 %2324, 1
  %2326 = load i1, i1* %out.119
  %2327 = icmp slt i64 0, 3
  %2328 = bitcast i64* %shadow to i64*
  %safe.893 = or i1 %2326, %2327
  %select.ptr.894 = select i1 %safe.893, i64* %2320, i64* %2328
  %2329 = load i64, i64* %2320
  %select.val.895 = select i1 %2326, i64 %2325, i64 %2329
  store i64 %select.val.895, i64* %select.ptr.894, align 16
  %2330 = load i1, i1* %out.118
  %2331 = xor i1 %2318, true
  %in.311 = and i1 %2330, %2331
  %2332 = load i1, i1* %out.119
  %2333 = or i1 %in.311, %2332
  store i1 %2333, i1* %out.120
  %2334 = load i1, i1* %out.120
  %2335 = load i64, i64* %0, align 8
  %2336 = lshr i64 %2335, 1
  %2337 = load i1, i1* %out.120
  %2338 = load i64, i64* %0
  %select.val.896 = select i1 %2337, i64 %2336, i64 %2338
  store i64 %select.val.896, i64* %0, align 8
  %2339 = getelementptr inbounds i64, i64* %0, i64 1
  %2340 = load i1, i1* %out.120
  %2341 = icmp slt i64 1, %N
  %2342 = bitcast i64* %shadow to i64*
  %safe.897 = or i1 %2340, %2341
  %select.ptr.898 = select i1 %safe.897, i64* %2339, i64* %2342
  %2343 = load i64, i64* %select.ptr.898, align 8
  %2344 = lshr i64 %2343, 1
  %2345 = load i1, i1* %out.120
  %2346 = icmp slt i64 1, %N
  %2347 = bitcast i64* %shadow to i64*
  %safe.899 = or i1 %2345, %2346
  %select.ptr.900 = select i1 %safe.899, i64* %2339, i64* %2347
  %2348 = load i64, i64* %2339
  %select.val.901 = select i1 %2345, i64 %2344, i64 %2348
  store i64 %select.val.901, i64* %select.ptr.900, align 8
  %2349 = getelementptr inbounds i64, i64* %0, i64 2
  %2350 = load i1, i1* %out.120
  %2351 = icmp slt i64 2, %N
  %2352 = bitcast i64* %shadow to i64*
  %safe.902 = or i1 %2350, %2351
  %select.ptr.903 = select i1 %safe.902, i64* %2349, i64* %2352
  %2353 = load i64, i64* %select.ptr.903, align 8
  %2354 = lshr i64 %2353, 1
  %2355 = load i1, i1* %out.120
  %2356 = icmp slt i64 2, %N
  %2357 = bitcast i64* %shadow to i64*
  %safe.904 = or i1 %2355, %2356
  %select.ptr.905 = select i1 %safe.904, i64* %2349, i64* %2357
  %2358 = load i64, i64* %2349
  %select.val.906 = select i1 %2355, i64 %2354, i64 %2358
  store i64 %select.val.906, i64* %select.ptr.905, align 8
  %2359 = load i1, i1* %out.120
  %2360 = icmp slt i64 0, 3
  %2361 = bitcast i64* %shadow to i64*
  %safe.907 = or i1 %2359, %2360
  %select.ptr.908 = select i1 %safe.907, i64* %18, i64* %2361
  %2362 = load i64, i64* %select.ptr.908, align 16
  %2363 = shl i64 %2362, 1
  %2364 = load i1, i1* %out.120
  %2365 = icmp slt i64 0, 3
  %2366 = bitcast i64* %shadow to i64*
  %safe.909 = or i1 %2364, %2365
  %select.ptr.910 = select i1 %safe.909, i64* %18, i64* %2366
  %2367 = load i64, i64* %18
  %select.val.911 = select i1 %2364, i64 %2363, i64 %2367
  store i64 %select.val.911, i64* %select.ptr.910, align 16
  %2368 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2369 = load i1, i1* %out.120
  %2370 = icmp slt i64 1, 3
  %2371 = bitcast i64* %shadow to i64*
  %safe.912 = or i1 %2369, %2370
  %select.ptr.913 = select i1 %safe.912, i64* %2368, i64* %2371
  %2372 = load i64, i64* %select.ptr.913, align 8
  %2373 = shl i64 %2372, 1
  %2374 = load i1, i1* %out.120
  %2375 = icmp slt i64 1, 3
  %2376 = bitcast i64* %shadow to i64*
  %safe.914 = or i1 %2374, %2375
  %select.ptr.915 = select i1 %safe.914, i64* %2368, i64* %2376
  %2377 = load i64, i64* %2368
  %select.val.916 = select i1 %2374, i64 %2373, i64 %2377
  store i64 %select.val.916, i64* %select.ptr.915, align 8
  %2378 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2379 = load i1, i1* %out.120
  %2380 = icmp slt i64 2, 3
  %2381 = bitcast i64* %shadow to i64*
  %safe.917 = or i1 %2379, %2380
  %select.ptr.918 = select i1 %safe.917, i64* %2378, i64* %2381
  %2382 = load i64, i64* %select.ptr.918, align 16
  %2383 = shl i64 %2382, 1
  %2384 = load i1, i1* %out.120
  %2385 = icmp slt i64 2, 3
  %2386 = bitcast i64* %shadow to i64*
  %safe.919 = or i1 %2384, %2385
  %select.ptr.920 = select i1 %safe.919, i64* %2378, i64* %2386
  %2387 = load i64, i64* %2378
  %select.val.921 = select i1 %2384, i64 %2383, i64 %2387
  store i64 %select.val.921, i64* %select.ptr.920, align 16
  %2388 = load i1, i1* %out.120
  %2389 = load i64, i64* %0, align 8
  %2390 = and i64 %2389, 1
  %2391 = icmp ne i64 %2390, 0
  %2392 = load i1, i1* %out.120
  %in.312 = and i1 %2392, %2391
  store i1 %in.312, i1* %out.121
  %2393 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2394 = load i1, i1* %out.121
  %2395 = icmp slt i64 2, 3
  %2396 = bitcast i64* %shadow to i64*
  %safe.922 = or i1 %2394, %2395
  %select.ptr.923 = select i1 %safe.922, i64* %2393, i64* %2396
  %2397 = load i64, i64* %select.ptr.923, align 16
  %2398 = or i64 %2397, 1
  %2399 = load i1, i1* %out.121
  %2400 = icmp slt i64 2, 3
  %2401 = bitcast i64* %shadow to i64*
  %safe.924 = or i1 %2399, %2400
  %select.ptr.925 = select i1 %safe.924, i64* %2393, i64* %2401
  %2402 = load i64, i64* %2393
  %select.val.926 = select i1 %2399, i64 %2398, i64 %2402
  store i64 %select.val.926, i64* %select.ptr.925, align 16
  %2403 = load i1, i1* %out.120
  %2404 = xor i1 %2391, true
  %in.313 = and i1 %2403, %2404
  %2405 = load i1, i1* %out.121
  %2406 = or i1 %in.313, %2405
  store i1 %2406, i1* %out.122
  %2407 = getelementptr inbounds i64, i64* %0, i64 1
  %2408 = load i1, i1* %out.122
  %2409 = icmp slt i64 1, %N
  %2410 = bitcast i64* %shadow to i64*
  %safe.927 = or i1 %2408, %2409
  %select.ptr.928 = select i1 %safe.927, i64* %2407, i64* %2410
  %2411 = load i64, i64* %select.ptr.928, align 8
  %2412 = and i64 %2411, 1
  %2413 = icmp ne i64 %2412, 0
  %2414 = load i1, i1* %out.122
  %in.314 = and i1 %2414, %2413
  store i1 %in.314, i1* %out.123
  %2415 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2416 = load i1, i1* %out.123
  %2417 = icmp slt i64 1, 3
  %2418 = bitcast i64* %shadow to i64*
  %safe.929 = or i1 %2416, %2417
  %select.ptr.930 = select i1 %safe.929, i64* %2415, i64* %2418
  %2419 = load i64, i64* %select.ptr.930, align 8
  %2420 = or i64 %2419, 1
  %2421 = load i1, i1* %out.123
  %2422 = icmp slt i64 1, 3
  %2423 = bitcast i64* %shadow to i64*
  %safe.931 = or i1 %2421, %2422
  %select.ptr.932 = select i1 %safe.931, i64* %2415, i64* %2423
  %2424 = load i64, i64* %2415
  %select.val.933 = select i1 %2421, i64 %2420, i64 %2424
  store i64 %select.val.933, i64* %select.ptr.932, align 8
  %2425 = load i1, i1* %out.122
  %2426 = xor i1 %2413, true
  %in.315 = and i1 %2425, %2426
  %2427 = load i1, i1* %out.123
  %2428 = or i1 %in.315, %2427
  store i1 %2428, i1* %out.124
  %2429 = getelementptr inbounds i64, i64* %0, i64 2
  %2430 = load i1, i1* %out.124
  %2431 = icmp slt i64 2, %N
  %2432 = bitcast i64* %shadow to i64*
  %safe.934 = or i1 %2430, %2431
  %select.ptr.935 = select i1 %safe.934, i64* %2429, i64* %2432
  %2433 = load i64, i64* %select.ptr.935, align 8
  %2434 = and i64 %2433, 1
  %2435 = icmp ne i64 %2434, 0
  %2436 = load i1, i1* %out.124
  %in.316 = and i1 %2436, %2435
  store i1 %in.316, i1* %out.125
  %2437 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %2438 = load i1, i1* %out.125
  %2439 = icmp slt i64 0, 3
  %2440 = bitcast i64* %shadow to i64*
  %safe.936 = or i1 %2438, %2439
  %select.ptr.937 = select i1 %safe.936, i64* %2437, i64* %2440
  %2441 = load i64, i64* %select.ptr.937, align 16
  %2442 = or i64 %2441, 1
  %2443 = load i1, i1* %out.125
  %2444 = icmp slt i64 0, 3
  %2445 = bitcast i64* %shadow to i64*
  %safe.938 = or i1 %2443, %2444
  %select.ptr.939 = select i1 %safe.938, i64* %2437, i64* %2445
  %2446 = load i64, i64* %2437
  %select.val.940 = select i1 %2443, i64 %2442, i64 %2446
  store i64 %select.val.940, i64* %select.ptr.939, align 16
  %2447 = load i1, i1* %out.124
  %2448 = xor i1 %2435, true
  %in.317 = and i1 %2447, %2448
  %2449 = load i1, i1* %out.125
  %2450 = or i1 %in.317, %2449
  store i1 %2450, i1* %out.126
  %2451 = load i1, i1* %out.126
  %2452 = load i64, i64* %0, align 8
  %2453 = lshr i64 %2452, 1
  %2454 = load i1, i1* %out.126
  %2455 = load i64, i64* %0
  %select.val.941 = select i1 %2454, i64 %2453, i64 %2455
  store i64 %select.val.941, i64* %0, align 8
  %2456 = getelementptr inbounds i64, i64* %0, i64 1
  %2457 = load i1, i1* %out.126
  %2458 = icmp slt i64 1, %N
  %2459 = bitcast i64* %shadow to i64*
  %safe.942 = or i1 %2457, %2458
  %select.ptr.943 = select i1 %safe.942, i64* %2456, i64* %2459
  %2460 = load i64, i64* %select.ptr.943, align 8
  %2461 = lshr i64 %2460, 1
  %2462 = load i1, i1* %out.126
  %2463 = icmp slt i64 1, %N
  %2464 = bitcast i64* %shadow to i64*
  %safe.944 = or i1 %2462, %2463
  %select.ptr.945 = select i1 %safe.944, i64* %2456, i64* %2464
  %2465 = load i64, i64* %2456
  %select.val.946 = select i1 %2462, i64 %2461, i64 %2465
  store i64 %select.val.946, i64* %select.ptr.945, align 8
  %2466 = getelementptr inbounds i64, i64* %0, i64 2
  %2467 = load i1, i1* %out.126
  %2468 = icmp slt i64 2, %N
  %2469 = bitcast i64* %shadow to i64*
  %safe.947 = or i1 %2467, %2468
  %select.ptr.948 = select i1 %safe.947, i64* %2466, i64* %2469
  %2470 = load i64, i64* %select.ptr.948, align 8
  %2471 = lshr i64 %2470, 1
  %2472 = load i1, i1* %out.126
  %2473 = icmp slt i64 2, %N
  %2474 = bitcast i64* %shadow to i64*
  %safe.949 = or i1 %2472, %2473
  %select.ptr.950 = select i1 %safe.949, i64* %2466, i64* %2474
  %2475 = load i64, i64* %2466
  %select.val.951 = select i1 %2472, i64 %2471, i64 %2475
  store i64 %select.val.951, i64* %select.ptr.950, align 8
  %2476 = load i1, i1* %out.126
  %2477 = icmp slt i64 0, 3
  %2478 = bitcast i64* %shadow to i64*
  %safe.952 = or i1 %2476, %2477
  %select.ptr.953 = select i1 %safe.952, i64* %18, i64* %2478
  %2479 = load i64, i64* %select.ptr.953, align 16
  %2480 = shl i64 %2479, 1
  %2481 = load i1, i1* %out.126
  %2482 = icmp slt i64 0, 3
  %2483 = bitcast i64* %shadow to i64*
  %safe.954 = or i1 %2481, %2482
  %select.ptr.955 = select i1 %safe.954, i64* %18, i64* %2483
  %2484 = load i64, i64* %18
  %select.val.956 = select i1 %2481, i64 %2480, i64 %2484
  store i64 %select.val.956, i64* %select.ptr.955, align 16
  %2485 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2486 = load i1, i1* %out.126
  %2487 = icmp slt i64 1, 3
  %2488 = bitcast i64* %shadow to i64*
  %safe.957 = or i1 %2486, %2487
  %select.ptr.958 = select i1 %safe.957, i64* %2485, i64* %2488
  %2489 = load i64, i64* %select.ptr.958, align 8
  %2490 = shl i64 %2489, 1
  %2491 = load i1, i1* %out.126
  %2492 = icmp slt i64 1, 3
  %2493 = bitcast i64* %shadow to i64*
  %safe.959 = or i1 %2491, %2492
  %select.ptr.960 = select i1 %safe.959, i64* %2485, i64* %2493
  %2494 = load i64, i64* %2485
  %select.val.961 = select i1 %2491, i64 %2490, i64 %2494
  store i64 %select.val.961, i64* %select.ptr.960, align 8
  %2495 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2496 = load i1, i1* %out.126
  %2497 = icmp slt i64 2, 3
  %2498 = bitcast i64* %shadow to i64*
  %safe.962 = or i1 %2496, %2497
  %select.ptr.963 = select i1 %safe.962, i64* %2495, i64* %2498
  %2499 = load i64, i64* %select.ptr.963, align 16
  %2500 = shl i64 %2499, 1
  %2501 = load i1, i1* %out.126
  %2502 = icmp slt i64 2, 3
  %2503 = bitcast i64* %shadow to i64*
  %safe.964 = or i1 %2501, %2502
  %select.ptr.965 = select i1 %safe.964, i64* %2495, i64* %2503
  %2504 = load i64, i64* %2495
  %select.val.966 = select i1 %2501, i64 %2500, i64 %2504
  store i64 %select.val.966, i64* %select.ptr.965, align 16
  %2505 = load i1, i1* %out.126
  %2506 = load i64, i64* %0, align 8
  %2507 = and i64 %2506, 1
  %2508 = icmp ne i64 %2507, 0
  %2509 = load i1, i1* %out.126
  %in.318 = and i1 %2509, %2508
  store i1 %in.318, i1* %out.127
  %2510 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2511 = load i1, i1* %out.127
  %2512 = icmp slt i64 2, 3
  %2513 = bitcast i64* %shadow to i64*
  %safe.967 = or i1 %2511, %2512
  %select.ptr.968 = select i1 %safe.967, i64* %2510, i64* %2513
  %2514 = load i64, i64* %select.ptr.968, align 16
  %2515 = or i64 %2514, 1
  %2516 = load i1, i1* %out.127
  %2517 = icmp slt i64 2, 3
  %2518 = bitcast i64* %shadow to i64*
  %safe.969 = or i1 %2516, %2517
  %select.ptr.970 = select i1 %safe.969, i64* %2510, i64* %2518
  %2519 = load i64, i64* %2510
  %select.val.971 = select i1 %2516, i64 %2515, i64 %2519
  store i64 %select.val.971, i64* %select.ptr.970, align 16
  %2520 = load i1, i1* %out.126
  %2521 = xor i1 %2508, true
  %in.319 = and i1 %2520, %2521
  %2522 = load i1, i1* %out.127
  %2523 = or i1 %in.319, %2522
  store i1 %2523, i1* %out.128
  %2524 = getelementptr inbounds i64, i64* %0, i64 1
  %2525 = load i1, i1* %out.128
  %2526 = icmp slt i64 1, %N
  %2527 = bitcast i64* %shadow to i64*
  %safe.972 = or i1 %2525, %2526
  %select.ptr.973 = select i1 %safe.972, i64* %2524, i64* %2527
  %2528 = load i64, i64* %select.ptr.973, align 8
  %2529 = and i64 %2528, 1
  %2530 = icmp ne i64 %2529, 0
  %2531 = load i1, i1* %out.128
  %in.320 = and i1 %2531, %2530
  store i1 %in.320, i1* %out.129
  %2532 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2533 = load i1, i1* %out.129
  %2534 = icmp slt i64 1, 3
  %2535 = bitcast i64* %shadow to i64*
  %safe.974 = or i1 %2533, %2534
  %select.ptr.975 = select i1 %safe.974, i64* %2532, i64* %2535
  %2536 = load i64, i64* %select.ptr.975, align 8
  %2537 = or i64 %2536, 1
  %2538 = load i1, i1* %out.129
  %2539 = icmp slt i64 1, 3
  %2540 = bitcast i64* %shadow to i64*
  %safe.976 = or i1 %2538, %2539
  %select.ptr.977 = select i1 %safe.976, i64* %2532, i64* %2540
  %2541 = load i64, i64* %2532
  %select.val.978 = select i1 %2538, i64 %2537, i64 %2541
  store i64 %select.val.978, i64* %select.ptr.977, align 8
  %2542 = load i1, i1* %out.128
  %2543 = xor i1 %2530, true
  %in.321 = and i1 %2542, %2543
  %2544 = load i1, i1* %out.129
  %2545 = or i1 %in.321, %2544
  store i1 %2545, i1* %out.130
  %2546 = getelementptr inbounds i64, i64* %0, i64 2
  %2547 = load i1, i1* %out.130
  %2548 = icmp slt i64 2, %N
  %2549 = bitcast i64* %shadow to i64*
  %safe.979 = or i1 %2547, %2548
  %select.ptr.980 = select i1 %safe.979, i64* %2546, i64* %2549
  %2550 = load i64, i64* %select.ptr.980, align 8
  %2551 = and i64 %2550, 1
  %2552 = icmp ne i64 %2551, 0
  %2553 = load i1, i1* %out.130
  %in.322 = and i1 %2553, %2552
  store i1 %in.322, i1* %out.131
  %2554 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %2555 = load i1, i1* %out.131
  %2556 = icmp slt i64 0, 3
  %2557 = bitcast i64* %shadow to i64*
  %safe.981 = or i1 %2555, %2556
  %select.ptr.982 = select i1 %safe.981, i64* %2554, i64* %2557
  %2558 = load i64, i64* %select.ptr.982, align 16
  %2559 = or i64 %2558, 1
  %2560 = load i1, i1* %out.131
  %2561 = icmp slt i64 0, 3
  %2562 = bitcast i64* %shadow to i64*
  %safe.983 = or i1 %2560, %2561
  %select.ptr.984 = select i1 %safe.983, i64* %2554, i64* %2562
  %2563 = load i64, i64* %2554
  %select.val.985 = select i1 %2560, i64 %2559, i64 %2563
  store i64 %select.val.985, i64* %select.ptr.984, align 16
  %2564 = load i1, i1* %out.130
  %2565 = xor i1 %2552, true
  %in.323 = and i1 %2564, %2565
  %2566 = load i1, i1* %out.131
  %2567 = or i1 %in.323, %2566
  store i1 %2567, i1* %out.132
  %2568 = load i1, i1* %out.132
  %2569 = load i64, i64* %0, align 8
  %2570 = lshr i64 %2569, 1
  %2571 = load i1, i1* %out.132
  %2572 = load i64, i64* %0
  %select.val.986 = select i1 %2571, i64 %2570, i64 %2572
  store i64 %select.val.986, i64* %0, align 8
  %2573 = getelementptr inbounds i64, i64* %0, i64 1
  %2574 = load i1, i1* %out.132
  %2575 = icmp slt i64 1, %N
  %2576 = bitcast i64* %shadow to i64*
  %safe.987 = or i1 %2574, %2575
  %select.ptr.988 = select i1 %safe.987, i64* %2573, i64* %2576
  %2577 = load i64, i64* %select.ptr.988, align 8
  %2578 = lshr i64 %2577, 1
  %2579 = load i1, i1* %out.132
  %2580 = icmp slt i64 1, %N
  %2581 = bitcast i64* %shadow to i64*
  %safe.989 = or i1 %2579, %2580
  %select.ptr.990 = select i1 %safe.989, i64* %2573, i64* %2581
  %2582 = load i64, i64* %2573
  %select.val.991 = select i1 %2579, i64 %2578, i64 %2582
  store i64 %select.val.991, i64* %select.ptr.990, align 8
  %2583 = getelementptr inbounds i64, i64* %0, i64 2
  %2584 = load i1, i1* %out.132
  %2585 = icmp slt i64 2, %N
  %2586 = bitcast i64* %shadow to i64*
  %safe.992 = or i1 %2584, %2585
  %select.ptr.993 = select i1 %safe.992, i64* %2583, i64* %2586
  %2587 = load i64, i64* %select.ptr.993, align 8
  %2588 = lshr i64 %2587, 1
  %2589 = load i1, i1* %out.132
  %2590 = icmp slt i64 2, %N
  %2591 = bitcast i64* %shadow to i64*
  %safe.994 = or i1 %2589, %2590
  %select.ptr.995 = select i1 %safe.994, i64* %2583, i64* %2591
  %2592 = load i64, i64* %2583
  %select.val.996 = select i1 %2589, i64 %2588, i64 %2592
  store i64 %select.val.996, i64* %select.ptr.995, align 8
  %2593 = load i1, i1* %out.132
  %2594 = icmp slt i64 0, 3
  %2595 = bitcast i64* %shadow to i64*
  %safe.997 = or i1 %2593, %2594
  %select.ptr.998 = select i1 %safe.997, i64* %18, i64* %2595
  %2596 = load i64, i64* %select.ptr.998, align 16
  %2597 = shl i64 %2596, 1
  %2598 = load i1, i1* %out.132
  %2599 = icmp slt i64 0, 3
  %2600 = bitcast i64* %shadow to i64*
  %safe.999 = or i1 %2598, %2599
  %select.ptr.1000 = select i1 %safe.999, i64* %18, i64* %2600
  %2601 = load i64, i64* %18
  %select.val.1001 = select i1 %2598, i64 %2597, i64 %2601
  store i64 %select.val.1001, i64* %select.ptr.1000, align 16
  %2602 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2603 = load i1, i1* %out.132
  %2604 = icmp slt i64 1, 3
  %2605 = bitcast i64* %shadow to i64*
  %safe.1002 = or i1 %2603, %2604
  %select.ptr.1003 = select i1 %safe.1002, i64* %2602, i64* %2605
  %2606 = load i64, i64* %select.ptr.1003, align 8
  %2607 = shl i64 %2606, 1
  %2608 = load i1, i1* %out.132
  %2609 = icmp slt i64 1, 3
  %2610 = bitcast i64* %shadow to i64*
  %safe.1004 = or i1 %2608, %2609
  %select.ptr.1005 = select i1 %safe.1004, i64* %2602, i64* %2610
  %2611 = load i64, i64* %2602
  %select.val.1006 = select i1 %2608, i64 %2607, i64 %2611
  store i64 %select.val.1006, i64* %select.ptr.1005, align 8
  %2612 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2613 = load i1, i1* %out.132
  %2614 = icmp slt i64 2, 3
  %2615 = bitcast i64* %shadow to i64*
  %safe.1007 = or i1 %2613, %2614
  %select.ptr.1008 = select i1 %safe.1007, i64* %2612, i64* %2615
  %2616 = load i64, i64* %select.ptr.1008, align 16
  %2617 = shl i64 %2616, 1
  %2618 = load i1, i1* %out.132
  %2619 = icmp slt i64 2, 3
  %2620 = bitcast i64* %shadow to i64*
  %safe.1009 = or i1 %2618, %2619
  %select.ptr.1010 = select i1 %safe.1009, i64* %2612, i64* %2620
  %2621 = load i64, i64* %2612
  %select.val.1011 = select i1 %2618, i64 %2617, i64 %2621
  store i64 %select.val.1011, i64* %select.ptr.1010, align 16
  %2622 = load i1, i1* %out.132
  %2623 = load i64, i64* %0, align 8
  %2624 = and i64 %2623, 1
  %2625 = icmp ne i64 %2624, 0
  %2626 = load i1, i1* %out.132
  %in.324 = and i1 %2626, %2625
  store i1 %in.324, i1* %out.133
  %2627 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2628 = load i1, i1* %out.133
  %2629 = icmp slt i64 2, 3
  %2630 = bitcast i64* %shadow to i64*
  %safe.1012 = or i1 %2628, %2629
  %select.ptr.1013 = select i1 %safe.1012, i64* %2627, i64* %2630
  %2631 = load i64, i64* %select.ptr.1013, align 16
  %2632 = or i64 %2631, 1
  %2633 = load i1, i1* %out.133
  %2634 = icmp slt i64 2, 3
  %2635 = bitcast i64* %shadow to i64*
  %safe.1014 = or i1 %2633, %2634
  %select.ptr.1015 = select i1 %safe.1014, i64* %2627, i64* %2635
  %2636 = load i64, i64* %2627
  %select.val.1016 = select i1 %2633, i64 %2632, i64 %2636
  store i64 %select.val.1016, i64* %select.ptr.1015, align 16
  %2637 = load i1, i1* %out.132
  %2638 = xor i1 %2625, true
  %in.325 = and i1 %2637, %2638
  %2639 = load i1, i1* %out.133
  %2640 = or i1 %in.325, %2639
  store i1 %2640, i1* %out.134
  %2641 = getelementptr inbounds i64, i64* %0, i64 1
  %2642 = load i1, i1* %out.134
  %2643 = icmp slt i64 1, %N
  %2644 = bitcast i64* %shadow to i64*
  %safe.1017 = or i1 %2642, %2643
  %select.ptr.1018 = select i1 %safe.1017, i64* %2641, i64* %2644
  %2645 = load i64, i64* %select.ptr.1018, align 8
  %2646 = and i64 %2645, 1
  %2647 = icmp ne i64 %2646, 0
  %2648 = load i1, i1* %out.134
  %in.326 = and i1 %2648, %2647
  store i1 %in.326, i1* %out.135
  %2649 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2650 = load i1, i1* %out.135
  %2651 = icmp slt i64 1, 3
  %2652 = bitcast i64* %shadow to i64*
  %safe.1019 = or i1 %2650, %2651
  %select.ptr.1020 = select i1 %safe.1019, i64* %2649, i64* %2652
  %2653 = load i64, i64* %select.ptr.1020, align 8
  %2654 = or i64 %2653, 1
  %2655 = load i1, i1* %out.135
  %2656 = icmp slt i64 1, 3
  %2657 = bitcast i64* %shadow to i64*
  %safe.1021 = or i1 %2655, %2656
  %select.ptr.1022 = select i1 %safe.1021, i64* %2649, i64* %2657
  %2658 = load i64, i64* %2649
  %select.val.1023 = select i1 %2655, i64 %2654, i64 %2658
  store i64 %select.val.1023, i64* %select.ptr.1022, align 8
  %2659 = load i1, i1* %out.134
  %2660 = xor i1 %2647, true
  %in.327 = and i1 %2659, %2660
  %2661 = load i1, i1* %out.135
  %2662 = or i1 %in.327, %2661
  store i1 %2662, i1* %out.136
  %2663 = getelementptr inbounds i64, i64* %0, i64 2
  %2664 = load i1, i1* %out.136
  %2665 = icmp slt i64 2, %N
  %2666 = bitcast i64* %shadow to i64*
  %safe.1024 = or i1 %2664, %2665
  %select.ptr.1025 = select i1 %safe.1024, i64* %2663, i64* %2666
  %2667 = load i64, i64* %select.ptr.1025, align 8
  %2668 = and i64 %2667, 1
  %2669 = icmp ne i64 %2668, 0
  %2670 = load i1, i1* %out.136
  %in.328 = and i1 %2670, %2669
  store i1 %in.328, i1* %out.137
  %2671 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %2672 = load i1, i1* %out.137
  %2673 = icmp slt i64 0, 3
  %2674 = bitcast i64* %shadow to i64*
  %safe.1026 = or i1 %2672, %2673
  %select.ptr.1027 = select i1 %safe.1026, i64* %2671, i64* %2674
  %2675 = load i64, i64* %select.ptr.1027, align 16
  %2676 = or i64 %2675, 1
  %2677 = load i1, i1* %out.137
  %2678 = icmp slt i64 0, 3
  %2679 = bitcast i64* %shadow to i64*
  %safe.1028 = or i1 %2677, %2678
  %select.ptr.1029 = select i1 %safe.1028, i64* %2671, i64* %2679
  %2680 = load i64, i64* %2671
  %select.val.1030 = select i1 %2677, i64 %2676, i64 %2680
  store i64 %select.val.1030, i64* %select.ptr.1029, align 16
  %2681 = load i1, i1* %out.136
  %2682 = xor i1 %2669, true
  %in.329 = and i1 %2681, %2682
  %2683 = load i1, i1* %out.137
  %2684 = or i1 %in.329, %2683
  store i1 %2684, i1* %out.138
  %2685 = load i1, i1* %out.138
  %2686 = load i64, i64* %0, align 8
  %2687 = lshr i64 %2686, 1
  %2688 = load i1, i1* %out.138
  %2689 = load i64, i64* %0
  %select.val.1031 = select i1 %2688, i64 %2687, i64 %2689
  store i64 %select.val.1031, i64* %0, align 8
  %2690 = getelementptr inbounds i64, i64* %0, i64 1
  %2691 = load i1, i1* %out.138
  %2692 = icmp slt i64 1, %N
  %2693 = bitcast i64* %shadow to i64*
  %safe.1032 = or i1 %2691, %2692
  %select.ptr.1033 = select i1 %safe.1032, i64* %2690, i64* %2693
  %2694 = load i64, i64* %select.ptr.1033, align 8
  %2695 = lshr i64 %2694, 1
  %2696 = load i1, i1* %out.138
  %2697 = icmp slt i64 1, %N
  %2698 = bitcast i64* %shadow to i64*
  %safe.1034 = or i1 %2696, %2697
  %select.ptr.1035 = select i1 %safe.1034, i64* %2690, i64* %2698
  %2699 = load i64, i64* %2690
  %select.val.1036 = select i1 %2696, i64 %2695, i64 %2699
  store i64 %select.val.1036, i64* %select.ptr.1035, align 8
  %2700 = getelementptr inbounds i64, i64* %0, i64 2
  %2701 = load i1, i1* %out.138
  %2702 = icmp slt i64 2, %N
  %2703 = bitcast i64* %shadow to i64*
  %safe.1037 = or i1 %2701, %2702
  %select.ptr.1038 = select i1 %safe.1037, i64* %2700, i64* %2703
  %2704 = load i64, i64* %select.ptr.1038, align 8
  %2705 = lshr i64 %2704, 1
  %2706 = load i1, i1* %out.138
  %2707 = icmp slt i64 2, %N
  %2708 = bitcast i64* %shadow to i64*
  %safe.1039 = or i1 %2706, %2707
  %select.ptr.1040 = select i1 %safe.1039, i64* %2700, i64* %2708
  %2709 = load i64, i64* %2700
  %select.val.1041 = select i1 %2706, i64 %2705, i64 %2709
  store i64 %select.val.1041, i64* %select.ptr.1040, align 8
  %2710 = load i1, i1* %out.138
  %2711 = icmp slt i64 0, 3
  %2712 = bitcast i64* %shadow to i64*
  %safe.1042 = or i1 %2710, %2711
  %select.ptr.1043 = select i1 %safe.1042, i64* %18, i64* %2712
  %2713 = load i64, i64* %select.ptr.1043, align 16
  %2714 = shl i64 %2713, 1
  %2715 = load i1, i1* %out.138
  %2716 = icmp slt i64 0, 3
  %2717 = bitcast i64* %shadow to i64*
  %safe.1044 = or i1 %2715, %2716
  %select.ptr.1045 = select i1 %safe.1044, i64* %18, i64* %2717
  %2718 = load i64, i64* %18
  %select.val.1046 = select i1 %2715, i64 %2714, i64 %2718
  store i64 %select.val.1046, i64* %select.ptr.1045, align 16
  %2719 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2720 = load i1, i1* %out.138
  %2721 = icmp slt i64 1, 3
  %2722 = bitcast i64* %shadow to i64*
  %safe.1047 = or i1 %2720, %2721
  %select.ptr.1048 = select i1 %safe.1047, i64* %2719, i64* %2722
  %2723 = load i64, i64* %select.ptr.1048, align 8
  %2724 = shl i64 %2723, 1
  %2725 = load i1, i1* %out.138
  %2726 = icmp slt i64 1, 3
  %2727 = bitcast i64* %shadow to i64*
  %safe.1049 = or i1 %2725, %2726
  %select.ptr.1050 = select i1 %safe.1049, i64* %2719, i64* %2727
  %2728 = load i64, i64* %2719
  %select.val.1051 = select i1 %2725, i64 %2724, i64 %2728
  store i64 %select.val.1051, i64* %select.ptr.1050, align 8
  %2729 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2730 = load i1, i1* %out.138
  %2731 = icmp slt i64 2, 3
  %2732 = bitcast i64* %shadow to i64*
  %safe.1052 = or i1 %2730, %2731
  %select.ptr.1053 = select i1 %safe.1052, i64* %2729, i64* %2732
  %2733 = load i64, i64* %select.ptr.1053, align 16
  %2734 = shl i64 %2733, 1
  %2735 = load i1, i1* %out.138
  %2736 = icmp slt i64 2, 3
  %2737 = bitcast i64* %shadow to i64*
  %safe.1054 = or i1 %2735, %2736
  %select.ptr.1055 = select i1 %safe.1054, i64* %2729, i64* %2737
  %2738 = load i64, i64* %2729
  %select.val.1056 = select i1 %2735, i64 %2734, i64 %2738
  store i64 %select.val.1056, i64* %select.ptr.1055, align 16
  %2739 = load i1, i1* %out.138
  %2740 = load i64, i64* %0, align 8
  %2741 = and i64 %2740, 1
  %2742 = icmp ne i64 %2741, 0
  %2743 = load i1, i1* %out.138
  %in.330 = and i1 %2743, %2742
  store i1 %in.330, i1* %out.139
  %2744 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2745 = load i1, i1* %out.139
  %2746 = icmp slt i64 2, 3
  %2747 = bitcast i64* %shadow to i64*
  %safe.1057 = or i1 %2745, %2746
  %select.ptr.1058 = select i1 %safe.1057, i64* %2744, i64* %2747
  %2748 = load i64, i64* %select.ptr.1058, align 16
  %2749 = or i64 %2748, 1
  %2750 = load i1, i1* %out.139
  %2751 = icmp slt i64 2, 3
  %2752 = bitcast i64* %shadow to i64*
  %safe.1059 = or i1 %2750, %2751
  %select.ptr.1060 = select i1 %safe.1059, i64* %2744, i64* %2752
  %2753 = load i64, i64* %2744
  %select.val.1061 = select i1 %2750, i64 %2749, i64 %2753
  store i64 %select.val.1061, i64* %select.ptr.1060, align 16
  %2754 = load i1, i1* %out.138
  %2755 = xor i1 %2742, true
  %in.331 = and i1 %2754, %2755
  %2756 = load i1, i1* %out.139
  %2757 = or i1 %in.331, %2756
  store i1 %2757, i1* %out.140
  %2758 = getelementptr inbounds i64, i64* %0, i64 1
  %2759 = load i1, i1* %out.140
  %2760 = icmp slt i64 1, %N
  %2761 = bitcast i64* %shadow to i64*
  %safe.1062 = or i1 %2759, %2760
  %select.ptr.1063 = select i1 %safe.1062, i64* %2758, i64* %2761
  %2762 = load i64, i64* %select.ptr.1063, align 8
  %2763 = and i64 %2762, 1
  %2764 = icmp ne i64 %2763, 0
  %2765 = load i1, i1* %out.140
  %in.332 = and i1 %2765, %2764
  store i1 %in.332, i1* %out.141
  %2766 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2767 = load i1, i1* %out.141
  %2768 = icmp slt i64 1, 3
  %2769 = bitcast i64* %shadow to i64*
  %safe.1064 = or i1 %2767, %2768
  %select.ptr.1065 = select i1 %safe.1064, i64* %2766, i64* %2769
  %2770 = load i64, i64* %select.ptr.1065, align 8
  %2771 = or i64 %2770, 1
  %2772 = load i1, i1* %out.141
  %2773 = icmp slt i64 1, 3
  %2774 = bitcast i64* %shadow to i64*
  %safe.1066 = or i1 %2772, %2773
  %select.ptr.1067 = select i1 %safe.1066, i64* %2766, i64* %2774
  %2775 = load i64, i64* %2766
  %select.val.1068 = select i1 %2772, i64 %2771, i64 %2775
  store i64 %select.val.1068, i64* %select.ptr.1067, align 8
  %2776 = load i1, i1* %out.140
  %2777 = xor i1 %2764, true
  %in.333 = and i1 %2776, %2777
  %2778 = load i1, i1* %out.141
  %2779 = or i1 %in.333, %2778
  store i1 %2779, i1* %out.142
  %2780 = getelementptr inbounds i64, i64* %0, i64 2
  %2781 = load i1, i1* %out.142
  %2782 = icmp slt i64 2, %N
  %2783 = bitcast i64* %shadow to i64*
  %safe.1069 = or i1 %2781, %2782
  %select.ptr.1070 = select i1 %safe.1069, i64* %2780, i64* %2783
  %2784 = load i64, i64* %select.ptr.1070, align 8
  %2785 = and i64 %2784, 1
  %2786 = icmp ne i64 %2785, 0
  %2787 = load i1, i1* %out.142
  %in.334 = and i1 %2787, %2786
  store i1 %in.334, i1* %out.143
  %2788 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %2789 = load i1, i1* %out.143
  %2790 = icmp slt i64 0, 3
  %2791 = bitcast i64* %shadow to i64*
  %safe.1071 = or i1 %2789, %2790
  %select.ptr.1072 = select i1 %safe.1071, i64* %2788, i64* %2791
  %2792 = load i64, i64* %select.ptr.1072, align 16
  %2793 = or i64 %2792, 1
  %2794 = load i1, i1* %out.143
  %2795 = icmp slt i64 0, 3
  %2796 = bitcast i64* %shadow to i64*
  %safe.1073 = or i1 %2794, %2795
  %select.ptr.1074 = select i1 %safe.1073, i64* %2788, i64* %2796
  %2797 = load i64, i64* %2788
  %select.val.1075 = select i1 %2794, i64 %2793, i64 %2797
  store i64 %select.val.1075, i64* %select.ptr.1074, align 16
  %2798 = load i1, i1* %out.142
  %2799 = xor i1 %2786, true
  %in.335 = and i1 %2798, %2799
  %2800 = load i1, i1* %out.143
  %2801 = or i1 %in.335, %2800
  store i1 %2801, i1* %out.144
  %2802 = load i1, i1* %out.144
  %2803 = load i64, i64* %0, align 8
  %2804 = lshr i64 %2803, 1
  %2805 = load i1, i1* %out.144
  %2806 = load i64, i64* %0
  %select.val.1076 = select i1 %2805, i64 %2804, i64 %2806
  store i64 %select.val.1076, i64* %0, align 8
  %2807 = getelementptr inbounds i64, i64* %0, i64 1
  %2808 = load i1, i1* %out.144
  %2809 = icmp slt i64 1, %N
  %2810 = bitcast i64* %shadow to i64*
  %safe.1077 = or i1 %2808, %2809
  %select.ptr.1078 = select i1 %safe.1077, i64* %2807, i64* %2810
  %2811 = load i64, i64* %select.ptr.1078, align 8
  %2812 = lshr i64 %2811, 1
  %2813 = load i1, i1* %out.144
  %2814 = icmp slt i64 1, %N
  %2815 = bitcast i64* %shadow to i64*
  %safe.1079 = or i1 %2813, %2814
  %select.ptr.1080 = select i1 %safe.1079, i64* %2807, i64* %2815
  %2816 = load i64, i64* %2807
  %select.val.1081 = select i1 %2813, i64 %2812, i64 %2816
  store i64 %select.val.1081, i64* %select.ptr.1080, align 8
  %2817 = getelementptr inbounds i64, i64* %0, i64 2
  %2818 = load i1, i1* %out.144
  %2819 = icmp slt i64 2, %N
  %2820 = bitcast i64* %shadow to i64*
  %safe.1082 = or i1 %2818, %2819
  %select.ptr.1083 = select i1 %safe.1082, i64* %2817, i64* %2820
  %2821 = load i64, i64* %select.ptr.1083, align 8
  %2822 = lshr i64 %2821, 1
  %2823 = load i1, i1* %out.144
  %2824 = icmp slt i64 2, %N
  %2825 = bitcast i64* %shadow to i64*
  %safe.1084 = or i1 %2823, %2824
  %select.ptr.1085 = select i1 %safe.1084, i64* %2817, i64* %2825
  %2826 = load i64, i64* %2817
  %select.val.1086 = select i1 %2823, i64 %2822, i64 %2826
  store i64 %select.val.1086, i64* %select.ptr.1085, align 8
  %2827 = load i1, i1* %out.144
  %2828 = icmp slt i64 0, 3
  %2829 = bitcast i64* %shadow to i64*
  %safe.1087 = or i1 %2827, %2828
  %select.ptr.1088 = select i1 %safe.1087, i64* %18, i64* %2829
  %2830 = load i64, i64* %select.ptr.1088, align 16
  %2831 = shl i64 %2830, 1
  %2832 = load i1, i1* %out.144
  %2833 = icmp slt i64 0, 3
  %2834 = bitcast i64* %shadow to i64*
  %safe.1089 = or i1 %2832, %2833
  %select.ptr.1090 = select i1 %safe.1089, i64* %18, i64* %2834
  %2835 = load i64, i64* %18
  %select.val.1091 = select i1 %2832, i64 %2831, i64 %2835
  store i64 %select.val.1091, i64* %select.ptr.1090, align 16
  %2836 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2837 = load i1, i1* %out.144
  %2838 = icmp slt i64 1, 3
  %2839 = bitcast i64* %shadow to i64*
  %safe.1092 = or i1 %2837, %2838
  %select.ptr.1093 = select i1 %safe.1092, i64* %2836, i64* %2839
  %2840 = load i64, i64* %select.ptr.1093, align 8
  %2841 = shl i64 %2840, 1
  %2842 = load i1, i1* %out.144
  %2843 = icmp slt i64 1, 3
  %2844 = bitcast i64* %shadow to i64*
  %safe.1094 = or i1 %2842, %2843
  %select.ptr.1095 = select i1 %safe.1094, i64* %2836, i64* %2844
  %2845 = load i64, i64* %2836
  %select.val.1096 = select i1 %2842, i64 %2841, i64 %2845
  store i64 %select.val.1096, i64* %select.ptr.1095, align 8
  %2846 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2847 = load i1, i1* %out.144
  %2848 = icmp slt i64 2, 3
  %2849 = bitcast i64* %shadow to i64*
  %safe.1097 = or i1 %2847, %2848
  %select.ptr.1098 = select i1 %safe.1097, i64* %2846, i64* %2849
  %2850 = load i64, i64* %select.ptr.1098, align 16
  %2851 = shl i64 %2850, 1
  %2852 = load i1, i1* %out.144
  %2853 = icmp slt i64 2, 3
  %2854 = bitcast i64* %shadow to i64*
  %safe.1099 = or i1 %2852, %2853
  %select.ptr.1100 = select i1 %safe.1099, i64* %2846, i64* %2854
  %2855 = load i64, i64* %2846
  %select.val.1101 = select i1 %2852, i64 %2851, i64 %2855
  store i64 %select.val.1101, i64* %select.ptr.1100, align 16
  %2856 = load i1, i1* %out.144
  %2857 = load i64, i64* %0, align 8
  %2858 = and i64 %2857, 1
  %2859 = icmp ne i64 %2858, 0
  %2860 = load i1, i1* %out.144
  %in.336 = and i1 %2860, %2859
  store i1 %in.336, i1* %out.145
  %2861 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2862 = load i1, i1* %out.145
  %2863 = icmp slt i64 2, 3
  %2864 = bitcast i64* %shadow to i64*
  %safe.1102 = or i1 %2862, %2863
  %select.ptr.1103 = select i1 %safe.1102, i64* %2861, i64* %2864
  %2865 = load i64, i64* %select.ptr.1103, align 16
  %2866 = or i64 %2865, 1
  %2867 = load i1, i1* %out.145
  %2868 = icmp slt i64 2, 3
  %2869 = bitcast i64* %shadow to i64*
  %safe.1104 = or i1 %2867, %2868
  %select.ptr.1105 = select i1 %safe.1104, i64* %2861, i64* %2869
  %2870 = load i64, i64* %2861
  %select.val.1106 = select i1 %2867, i64 %2866, i64 %2870
  store i64 %select.val.1106, i64* %select.ptr.1105, align 16
  %2871 = load i1, i1* %out.144
  %2872 = xor i1 %2859, true
  %in.337 = and i1 %2871, %2872
  %2873 = load i1, i1* %out.145
  %2874 = or i1 %in.337, %2873
  store i1 %2874, i1* %out.146
  %2875 = getelementptr inbounds i64, i64* %0, i64 1
  %2876 = load i1, i1* %out.146
  %2877 = icmp slt i64 1, %N
  %2878 = bitcast i64* %shadow to i64*
  %safe.1107 = or i1 %2876, %2877
  %select.ptr.1108 = select i1 %safe.1107, i64* %2875, i64* %2878
  %2879 = load i64, i64* %select.ptr.1108, align 8
  %2880 = and i64 %2879, 1
  %2881 = icmp ne i64 %2880, 0
  %2882 = load i1, i1* %out.146
  %in.338 = and i1 %2882, %2881
  store i1 %in.338, i1* %out.147
  %2883 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2884 = load i1, i1* %out.147
  %2885 = icmp slt i64 1, 3
  %2886 = bitcast i64* %shadow to i64*
  %safe.1109 = or i1 %2884, %2885
  %select.ptr.1110 = select i1 %safe.1109, i64* %2883, i64* %2886
  %2887 = load i64, i64* %select.ptr.1110, align 8
  %2888 = or i64 %2887, 1
  %2889 = load i1, i1* %out.147
  %2890 = icmp slt i64 1, 3
  %2891 = bitcast i64* %shadow to i64*
  %safe.1111 = or i1 %2889, %2890
  %select.ptr.1112 = select i1 %safe.1111, i64* %2883, i64* %2891
  %2892 = load i64, i64* %2883
  %select.val.1113 = select i1 %2889, i64 %2888, i64 %2892
  store i64 %select.val.1113, i64* %select.ptr.1112, align 8
  %2893 = load i1, i1* %out.146
  %2894 = xor i1 %2881, true
  %in.339 = and i1 %2893, %2894
  %2895 = load i1, i1* %out.147
  %2896 = or i1 %in.339, %2895
  store i1 %2896, i1* %out.148
  %2897 = getelementptr inbounds i64, i64* %0, i64 2
  %2898 = load i1, i1* %out.148
  %2899 = icmp slt i64 2, %N
  %2900 = bitcast i64* %shadow to i64*
  %safe.1114 = or i1 %2898, %2899
  %select.ptr.1115 = select i1 %safe.1114, i64* %2897, i64* %2900
  %2901 = load i64, i64* %select.ptr.1115, align 8
  %2902 = and i64 %2901, 1
  %2903 = icmp ne i64 %2902, 0
  %2904 = load i1, i1* %out.148
  %in.340 = and i1 %2904, %2903
  store i1 %in.340, i1* %out.149
  %2905 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %2906 = load i1, i1* %out.149
  %2907 = icmp slt i64 0, 3
  %2908 = bitcast i64* %shadow to i64*
  %safe.1116 = or i1 %2906, %2907
  %select.ptr.1117 = select i1 %safe.1116, i64* %2905, i64* %2908
  %2909 = load i64, i64* %select.ptr.1117, align 16
  %2910 = or i64 %2909, 1
  %2911 = load i1, i1* %out.149
  %2912 = icmp slt i64 0, 3
  %2913 = bitcast i64* %shadow to i64*
  %safe.1118 = or i1 %2911, %2912
  %select.ptr.1119 = select i1 %safe.1118, i64* %2905, i64* %2913
  %2914 = load i64, i64* %2905
  %select.val.1120 = select i1 %2911, i64 %2910, i64 %2914
  store i64 %select.val.1120, i64* %select.ptr.1119, align 16
  %2915 = load i1, i1* %out.148
  %2916 = xor i1 %2903, true
  %in.341 = and i1 %2915, %2916
  %2917 = load i1, i1* %out.149
  %2918 = or i1 %in.341, %2917
  store i1 %2918, i1* %out.150
  %2919 = load i1, i1* %out.150
  %2920 = load i64, i64* %0, align 8
  %2921 = lshr i64 %2920, 1
  %2922 = load i1, i1* %out.150
  %2923 = load i64, i64* %0
  %select.val.1121 = select i1 %2922, i64 %2921, i64 %2923
  store i64 %select.val.1121, i64* %0, align 8
  %2924 = getelementptr inbounds i64, i64* %0, i64 1
  %2925 = load i1, i1* %out.150
  %2926 = icmp slt i64 1, %N
  %2927 = bitcast i64* %shadow to i64*
  %safe.1122 = or i1 %2925, %2926
  %select.ptr.1123 = select i1 %safe.1122, i64* %2924, i64* %2927
  %2928 = load i64, i64* %select.ptr.1123, align 8
  %2929 = lshr i64 %2928, 1
  %2930 = load i1, i1* %out.150
  %2931 = icmp slt i64 1, %N
  %2932 = bitcast i64* %shadow to i64*
  %safe.1124 = or i1 %2930, %2931
  %select.ptr.1125 = select i1 %safe.1124, i64* %2924, i64* %2932
  %2933 = load i64, i64* %2924
  %select.val.1126 = select i1 %2930, i64 %2929, i64 %2933
  store i64 %select.val.1126, i64* %select.ptr.1125, align 8
  %2934 = getelementptr inbounds i64, i64* %0, i64 2
  %2935 = load i1, i1* %out.150
  %2936 = icmp slt i64 2, %N
  %2937 = bitcast i64* %shadow to i64*
  %safe.1127 = or i1 %2935, %2936
  %select.ptr.1128 = select i1 %safe.1127, i64* %2934, i64* %2937
  %2938 = load i64, i64* %select.ptr.1128, align 8
  %2939 = lshr i64 %2938, 1
  %2940 = load i1, i1* %out.150
  %2941 = icmp slt i64 2, %N
  %2942 = bitcast i64* %shadow to i64*
  %safe.1129 = or i1 %2940, %2941
  %select.ptr.1130 = select i1 %safe.1129, i64* %2934, i64* %2942
  %2943 = load i64, i64* %2934
  %select.val.1131 = select i1 %2940, i64 %2939, i64 %2943
  store i64 %select.val.1131, i64* %select.ptr.1130, align 8
  %2944 = load i1, i1* %out.150
  %2945 = icmp slt i64 0, 3
  %2946 = bitcast i64* %shadow to i64*
  %safe.1132 = or i1 %2944, %2945
  %select.ptr.1133 = select i1 %safe.1132, i64* %18, i64* %2946
  %2947 = load i64, i64* %select.ptr.1133, align 16
  %2948 = shl i64 %2947, 1
  %2949 = load i1, i1* %out.150
  %2950 = icmp slt i64 0, 3
  %2951 = bitcast i64* %shadow to i64*
  %safe.1134 = or i1 %2949, %2950
  %select.ptr.1135 = select i1 %safe.1134, i64* %18, i64* %2951
  %2952 = load i64, i64* %18
  %select.val.1136 = select i1 %2949, i64 %2948, i64 %2952
  store i64 %select.val.1136, i64* %select.ptr.1135, align 16
  %2953 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %2954 = load i1, i1* %out.150
  %2955 = icmp slt i64 1, 3
  %2956 = bitcast i64* %shadow to i64*
  %safe.1137 = or i1 %2954, %2955
  %select.ptr.1138 = select i1 %safe.1137, i64* %2953, i64* %2956
  %2957 = load i64, i64* %select.ptr.1138, align 8
  %2958 = shl i64 %2957, 1
  %2959 = load i1, i1* %out.150
  %2960 = icmp slt i64 1, 3
  %2961 = bitcast i64* %shadow to i64*
  %safe.1139 = or i1 %2959, %2960
  %select.ptr.1140 = select i1 %safe.1139, i64* %2953, i64* %2961
  %2962 = load i64, i64* %2953
  %select.val.1141 = select i1 %2959, i64 %2958, i64 %2962
  store i64 %select.val.1141, i64* %select.ptr.1140, align 8
  %2963 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2964 = load i1, i1* %out.150
  %2965 = icmp slt i64 2, 3
  %2966 = bitcast i64* %shadow to i64*
  %safe.1142 = or i1 %2964, %2965
  %select.ptr.1143 = select i1 %safe.1142, i64* %2963, i64* %2966
  %2967 = load i64, i64* %select.ptr.1143, align 16
  %2968 = shl i64 %2967, 1
  %2969 = load i1, i1* %out.150
  %2970 = icmp slt i64 2, 3
  %2971 = bitcast i64* %shadow to i64*
  %safe.1144 = or i1 %2969, %2970
  %select.ptr.1145 = select i1 %safe.1144, i64* %2963, i64* %2971
  %2972 = load i64, i64* %2963
  %select.val.1146 = select i1 %2969, i64 %2968, i64 %2972
  store i64 %select.val.1146, i64* %select.ptr.1145, align 16
  %2973 = load i1, i1* %out.150
  %2974 = load i64, i64* %0, align 8
  %2975 = and i64 %2974, 1
  %2976 = icmp ne i64 %2975, 0
  %2977 = load i1, i1* %out.150
  %in.342 = and i1 %2977, %2976
  store i1 %in.342, i1* %out.151
  %2978 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %2979 = load i1, i1* %out.151
  %2980 = icmp slt i64 2, 3
  %2981 = bitcast i64* %shadow to i64*
  %safe.1147 = or i1 %2979, %2980
  %select.ptr.1148 = select i1 %safe.1147, i64* %2978, i64* %2981
  %2982 = load i64, i64* %select.ptr.1148, align 16
  %2983 = or i64 %2982, 1
  %2984 = load i1, i1* %out.151
  %2985 = icmp slt i64 2, 3
  %2986 = bitcast i64* %shadow to i64*
  %safe.1149 = or i1 %2984, %2985
  %select.ptr.1150 = select i1 %safe.1149, i64* %2978, i64* %2986
  %2987 = load i64, i64* %2978
  %select.val.1151 = select i1 %2984, i64 %2983, i64 %2987
  store i64 %select.val.1151, i64* %select.ptr.1150, align 16
  %2988 = load i1, i1* %out.150
  %2989 = xor i1 %2976, true
  %in.343 = and i1 %2988, %2989
  %2990 = load i1, i1* %out.151
  %2991 = or i1 %in.343, %2990
  store i1 %2991, i1* %out.152
  %2992 = getelementptr inbounds i64, i64* %0, i64 1
  %2993 = load i1, i1* %out.152
  %2994 = icmp slt i64 1, %N
  %2995 = bitcast i64* %shadow to i64*
  %safe.1152 = or i1 %2993, %2994
  %select.ptr.1153 = select i1 %safe.1152, i64* %2992, i64* %2995
  %2996 = load i64, i64* %select.ptr.1153, align 8
  %2997 = and i64 %2996, 1
  %2998 = icmp ne i64 %2997, 0
  %2999 = load i1, i1* %out.152
  %in.344 = and i1 %2999, %2998
  store i1 %in.344, i1* %out.153
  %3000 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3001 = load i1, i1* %out.153
  %3002 = icmp slt i64 1, 3
  %3003 = bitcast i64* %shadow to i64*
  %safe.1154 = or i1 %3001, %3002
  %select.ptr.1155 = select i1 %safe.1154, i64* %3000, i64* %3003
  %3004 = load i64, i64* %select.ptr.1155, align 8
  %3005 = or i64 %3004, 1
  %3006 = load i1, i1* %out.153
  %3007 = icmp slt i64 1, 3
  %3008 = bitcast i64* %shadow to i64*
  %safe.1156 = or i1 %3006, %3007
  %select.ptr.1157 = select i1 %safe.1156, i64* %3000, i64* %3008
  %3009 = load i64, i64* %3000
  %select.val.1158 = select i1 %3006, i64 %3005, i64 %3009
  store i64 %select.val.1158, i64* %select.ptr.1157, align 8
  %3010 = load i1, i1* %out.152
  %3011 = xor i1 %2998, true
  %in.345 = and i1 %3010, %3011
  %3012 = load i1, i1* %out.153
  %3013 = or i1 %in.345, %3012
  store i1 %3013, i1* %out.154
  %3014 = getelementptr inbounds i64, i64* %0, i64 2
  %3015 = load i1, i1* %out.154
  %3016 = icmp slt i64 2, %N
  %3017 = bitcast i64* %shadow to i64*
  %safe.1159 = or i1 %3015, %3016
  %select.ptr.1160 = select i1 %safe.1159, i64* %3014, i64* %3017
  %3018 = load i64, i64* %select.ptr.1160, align 8
  %3019 = and i64 %3018, 1
  %3020 = icmp ne i64 %3019, 0
  %3021 = load i1, i1* %out.154
  %in.346 = and i1 %3021, %3020
  store i1 %in.346, i1* %out.155
  %3022 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %3023 = load i1, i1* %out.155
  %3024 = icmp slt i64 0, 3
  %3025 = bitcast i64* %shadow to i64*
  %safe.1161 = or i1 %3023, %3024
  %select.ptr.1162 = select i1 %safe.1161, i64* %3022, i64* %3025
  %3026 = load i64, i64* %select.ptr.1162, align 16
  %3027 = or i64 %3026, 1
  %3028 = load i1, i1* %out.155
  %3029 = icmp slt i64 0, 3
  %3030 = bitcast i64* %shadow to i64*
  %safe.1163 = or i1 %3028, %3029
  %select.ptr.1164 = select i1 %safe.1163, i64* %3022, i64* %3030
  %3031 = load i64, i64* %3022
  %select.val.1165 = select i1 %3028, i64 %3027, i64 %3031
  store i64 %select.val.1165, i64* %select.ptr.1164, align 16
  %3032 = load i1, i1* %out.154
  %3033 = xor i1 %3020, true
  %in.347 = and i1 %3032, %3033
  %3034 = load i1, i1* %out.155
  %3035 = or i1 %in.347, %3034
  store i1 %3035, i1* %out.156
  %3036 = load i1, i1* %out.156
  %3037 = load i64, i64* %0, align 8
  %3038 = lshr i64 %3037, 1
  %3039 = load i1, i1* %out.156
  %3040 = load i64, i64* %0
  %select.val.1166 = select i1 %3039, i64 %3038, i64 %3040
  store i64 %select.val.1166, i64* %0, align 8
  %3041 = getelementptr inbounds i64, i64* %0, i64 1
  %3042 = load i1, i1* %out.156
  %3043 = icmp slt i64 1, %N
  %3044 = bitcast i64* %shadow to i64*
  %safe.1167 = or i1 %3042, %3043
  %select.ptr.1168 = select i1 %safe.1167, i64* %3041, i64* %3044
  %3045 = load i64, i64* %select.ptr.1168, align 8
  %3046 = lshr i64 %3045, 1
  %3047 = load i1, i1* %out.156
  %3048 = icmp slt i64 1, %N
  %3049 = bitcast i64* %shadow to i64*
  %safe.1169 = or i1 %3047, %3048
  %select.ptr.1170 = select i1 %safe.1169, i64* %3041, i64* %3049
  %3050 = load i64, i64* %3041
  %select.val.1171 = select i1 %3047, i64 %3046, i64 %3050
  store i64 %select.val.1171, i64* %select.ptr.1170, align 8
  %3051 = getelementptr inbounds i64, i64* %0, i64 2
  %3052 = load i1, i1* %out.156
  %3053 = icmp slt i64 2, %N
  %3054 = bitcast i64* %shadow to i64*
  %safe.1172 = or i1 %3052, %3053
  %select.ptr.1173 = select i1 %safe.1172, i64* %3051, i64* %3054
  %3055 = load i64, i64* %select.ptr.1173, align 8
  %3056 = lshr i64 %3055, 1
  %3057 = load i1, i1* %out.156
  %3058 = icmp slt i64 2, %N
  %3059 = bitcast i64* %shadow to i64*
  %safe.1174 = or i1 %3057, %3058
  %select.ptr.1175 = select i1 %safe.1174, i64* %3051, i64* %3059
  %3060 = load i64, i64* %3051
  %select.val.1176 = select i1 %3057, i64 %3056, i64 %3060
  store i64 %select.val.1176, i64* %select.ptr.1175, align 8
  %3061 = load i1, i1* %out.156
  %3062 = icmp slt i64 0, 3
  %3063 = bitcast i64* %shadow to i64*
  %safe.1177 = or i1 %3061, %3062
  %select.ptr.1178 = select i1 %safe.1177, i64* %18, i64* %3063
  %3064 = load i64, i64* %select.ptr.1178, align 16
  %3065 = shl i64 %3064, 1
  %3066 = load i1, i1* %out.156
  %3067 = icmp slt i64 0, 3
  %3068 = bitcast i64* %shadow to i64*
  %safe.1179 = or i1 %3066, %3067
  %select.ptr.1180 = select i1 %safe.1179, i64* %18, i64* %3068
  %3069 = load i64, i64* %18
  %select.val.1181 = select i1 %3066, i64 %3065, i64 %3069
  store i64 %select.val.1181, i64* %select.ptr.1180, align 16
  %3070 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3071 = load i1, i1* %out.156
  %3072 = icmp slt i64 1, 3
  %3073 = bitcast i64* %shadow to i64*
  %safe.1182 = or i1 %3071, %3072
  %select.ptr.1183 = select i1 %safe.1182, i64* %3070, i64* %3073
  %3074 = load i64, i64* %select.ptr.1183, align 8
  %3075 = shl i64 %3074, 1
  %3076 = load i1, i1* %out.156
  %3077 = icmp slt i64 1, 3
  %3078 = bitcast i64* %shadow to i64*
  %safe.1184 = or i1 %3076, %3077
  %select.ptr.1185 = select i1 %safe.1184, i64* %3070, i64* %3078
  %3079 = load i64, i64* %3070
  %select.val.1186 = select i1 %3076, i64 %3075, i64 %3079
  store i64 %select.val.1186, i64* %select.ptr.1185, align 8
  %3080 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3081 = load i1, i1* %out.156
  %3082 = icmp slt i64 2, 3
  %3083 = bitcast i64* %shadow to i64*
  %safe.1187 = or i1 %3081, %3082
  %select.ptr.1188 = select i1 %safe.1187, i64* %3080, i64* %3083
  %3084 = load i64, i64* %select.ptr.1188, align 16
  %3085 = shl i64 %3084, 1
  %3086 = load i1, i1* %out.156
  %3087 = icmp slt i64 2, 3
  %3088 = bitcast i64* %shadow to i64*
  %safe.1189 = or i1 %3086, %3087
  %select.ptr.1190 = select i1 %safe.1189, i64* %3080, i64* %3088
  %3089 = load i64, i64* %3080
  %select.val.1191 = select i1 %3086, i64 %3085, i64 %3089
  store i64 %select.val.1191, i64* %select.ptr.1190, align 16
  %3090 = load i1, i1* %out.156
  %3091 = load i64, i64* %0, align 8
  %3092 = and i64 %3091, 1
  %3093 = icmp ne i64 %3092, 0
  %3094 = load i1, i1* %out.156
  %in.348 = and i1 %3094, %3093
  store i1 %in.348, i1* %out.157
  %3095 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3096 = load i1, i1* %out.157
  %3097 = icmp slt i64 2, 3
  %3098 = bitcast i64* %shadow to i64*
  %safe.1192 = or i1 %3096, %3097
  %select.ptr.1193 = select i1 %safe.1192, i64* %3095, i64* %3098
  %3099 = load i64, i64* %select.ptr.1193, align 16
  %3100 = or i64 %3099, 1
  %3101 = load i1, i1* %out.157
  %3102 = icmp slt i64 2, 3
  %3103 = bitcast i64* %shadow to i64*
  %safe.1194 = or i1 %3101, %3102
  %select.ptr.1195 = select i1 %safe.1194, i64* %3095, i64* %3103
  %3104 = load i64, i64* %3095
  %select.val.1196 = select i1 %3101, i64 %3100, i64 %3104
  store i64 %select.val.1196, i64* %select.ptr.1195, align 16
  %3105 = load i1, i1* %out.156
  %3106 = xor i1 %3093, true
  %in.349 = and i1 %3105, %3106
  %3107 = load i1, i1* %out.157
  %3108 = or i1 %in.349, %3107
  store i1 %3108, i1* %out.158
  %3109 = getelementptr inbounds i64, i64* %0, i64 1
  %3110 = load i1, i1* %out.158
  %3111 = icmp slt i64 1, %N
  %3112 = bitcast i64* %shadow to i64*
  %safe.1197 = or i1 %3110, %3111
  %select.ptr.1198 = select i1 %safe.1197, i64* %3109, i64* %3112
  %3113 = load i64, i64* %select.ptr.1198, align 8
  %3114 = and i64 %3113, 1
  %3115 = icmp ne i64 %3114, 0
  %3116 = load i1, i1* %out.158
  %in.350 = and i1 %3116, %3115
  store i1 %in.350, i1* %out.159
  %3117 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3118 = load i1, i1* %out.159
  %3119 = icmp slt i64 1, 3
  %3120 = bitcast i64* %shadow to i64*
  %safe.1199 = or i1 %3118, %3119
  %select.ptr.1200 = select i1 %safe.1199, i64* %3117, i64* %3120
  %3121 = load i64, i64* %select.ptr.1200, align 8
  %3122 = or i64 %3121, 1
  %3123 = load i1, i1* %out.159
  %3124 = icmp slt i64 1, 3
  %3125 = bitcast i64* %shadow to i64*
  %safe.1201 = or i1 %3123, %3124
  %select.ptr.1202 = select i1 %safe.1201, i64* %3117, i64* %3125
  %3126 = load i64, i64* %3117
  %select.val.1203 = select i1 %3123, i64 %3122, i64 %3126
  store i64 %select.val.1203, i64* %select.ptr.1202, align 8
  %3127 = load i1, i1* %out.158
  %3128 = xor i1 %3115, true
  %in.351 = and i1 %3127, %3128
  %3129 = load i1, i1* %out.159
  %3130 = or i1 %in.351, %3129
  store i1 %3130, i1* %out.160
  %3131 = getelementptr inbounds i64, i64* %0, i64 2
  %3132 = load i1, i1* %out.160
  %3133 = icmp slt i64 2, %N
  %3134 = bitcast i64* %shadow to i64*
  %safe.1204 = or i1 %3132, %3133
  %select.ptr.1205 = select i1 %safe.1204, i64* %3131, i64* %3134
  %3135 = load i64, i64* %select.ptr.1205, align 8
  %3136 = and i64 %3135, 1
  %3137 = icmp ne i64 %3136, 0
  %3138 = load i1, i1* %out.160
  %in.352 = and i1 %3138, %3137
  store i1 %in.352, i1* %out.161
  %3139 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %3140 = load i1, i1* %out.161
  %3141 = icmp slt i64 0, 3
  %3142 = bitcast i64* %shadow to i64*
  %safe.1206 = or i1 %3140, %3141
  %select.ptr.1207 = select i1 %safe.1206, i64* %3139, i64* %3142
  %3143 = load i64, i64* %select.ptr.1207, align 16
  %3144 = or i64 %3143, 1
  %3145 = load i1, i1* %out.161
  %3146 = icmp slt i64 0, 3
  %3147 = bitcast i64* %shadow to i64*
  %safe.1208 = or i1 %3145, %3146
  %select.ptr.1209 = select i1 %safe.1208, i64* %3139, i64* %3147
  %3148 = load i64, i64* %3139
  %select.val.1210 = select i1 %3145, i64 %3144, i64 %3148
  store i64 %select.val.1210, i64* %select.ptr.1209, align 16
  %3149 = load i1, i1* %out.160
  %3150 = xor i1 %3137, true
  %in.353 = and i1 %3149, %3150
  %3151 = load i1, i1* %out.161
  %3152 = or i1 %in.353, %3151
  store i1 %3152, i1* %out.162
  %3153 = load i1, i1* %out.162
  %3154 = load i64, i64* %0, align 8
  %3155 = lshr i64 %3154, 1
  %3156 = load i1, i1* %out.162
  %3157 = load i64, i64* %0
  %select.val.1211 = select i1 %3156, i64 %3155, i64 %3157
  store i64 %select.val.1211, i64* %0, align 8
  %3158 = getelementptr inbounds i64, i64* %0, i64 1
  %3159 = load i1, i1* %out.162
  %3160 = icmp slt i64 1, %N
  %3161 = bitcast i64* %shadow to i64*
  %safe.1212 = or i1 %3159, %3160
  %select.ptr.1213 = select i1 %safe.1212, i64* %3158, i64* %3161
  %3162 = load i64, i64* %select.ptr.1213, align 8
  %3163 = lshr i64 %3162, 1
  %3164 = load i1, i1* %out.162
  %3165 = icmp slt i64 1, %N
  %3166 = bitcast i64* %shadow to i64*
  %safe.1214 = or i1 %3164, %3165
  %select.ptr.1215 = select i1 %safe.1214, i64* %3158, i64* %3166
  %3167 = load i64, i64* %3158
  %select.val.1216 = select i1 %3164, i64 %3163, i64 %3167
  store i64 %select.val.1216, i64* %select.ptr.1215, align 8
  %3168 = getelementptr inbounds i64, i64* %0, i64 2
  %3169 = load i1, i1* %out.162
  %3170 = icmp slt i64 2, %N
  %3171 = bitcast i64* %shadow to i64*
  %safe.1217 = or i1 %3169, %3170
  %select.ptr.1218 = select i1 %safe.1217, i64* %3168, i64* %3171
  %3172 = load i64, i64* %select.ptr.1218, align 8
  %3173 = lshr i64 %3172, 1
  %3174 = load i1, i1* %out.162
  %3175 = icmp slt i64 2, %N
  %3176 = bitcast i64* %shadow to i64*
  %safe.1219 = or i1 %3174, %3175
  %select.ptr.1220 = select i1 %safe.1219, i64* %3168, i64* %3176
  %3177 = load i64, i64* %3168
  %select.val.1221 = select i1 %3174, i64 %3173, i64 %3177
  store i64 %select.val.1221, i64* %select.ptr.1220, align 8
  %3178 = load i1, i1* %out.162
  %3179 = icmp slt i64 0, 3
  %3180 = bitcast i64* %shadow to i64*
  %safe.1222 = or i1 %3178, %3179
  %select.ptr.1223 = select i1 %safe.1222, i64* %18, i64* %3180
  %3181 = load i64, i64* %select.ptr.1223, align 16
  %3182 = shl i64 %3181, 1
  %3183 = load i1, i1* %out.162
  %3184 = icmp slt i64 0, 3
  %3185 = bitcast i64* %shadow to i64*
  %safe.1224 = or i1 %3183, %3184
  %select.ptr.1225 = select i1 %safe.1224, i64* %18, i64* %3185
  %3186 = load i64, i64* %18
  %select.val.1226 = select i1 %3183, i64 %3182, i64 %3186
  store i64 %select.val.1226, i64* %select.ptr.1225, align 16
  %3187 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3188 = load i1, i1* %out.162
  %3189 = icmp slt i64 1, 3
  %3190 = bitcast i64* %shadow to i64*
  %safe.1227 = or i1 %3188, %3189
  %select.ptr.1228 = select i1 %safe.1227, i64* %3187, i64* %3190
  %3191 = load i64, i64* %select.ptr.1228, align 8
  %3192 = shl i64 %3191, 1
  %3193 = load i1, i1* %out.162
  %3194 = icmp slt i64 1, 3
  %3195 = bitcast i64* %shadow to i64*
  %safe.1229 = or i1 %3193, %3194
  %select.ptr.1230 = select i1 %safe.1229, i64* %3187, i64* %3195
  %3196 = load i64, i64* %3187
  %select.val.1231 = select i1 %3193, i64 %3192, i64 %3196
  store i64 %select.val.1231, i64* %select.ptr.1230, align 8
  %3197 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3198 = load i1, i1* %out.162
  %3199 = icmp slt i64 2, 3
  %3200 = bitcast i64* %shadow to i64*
  %safe.1232 = or i1 %3198, %3199
  %select.ptr.1233 = select i1 %safe.1232, i64* %3197, i64* %3200
  %3201 = load i64, i64* %select.ptr.1233, align 16
  %3202 = shl i64 %3201, 1
  %3203 = load i1, i1* %out.162
  %3204 = icmp slt i64 2, 3
  %3205 = bitcast i64* %shadow to i64*
  %safe.1234 = or i1 %3203, %3204
  %select.ptr.1235 = select i1 %safe.1234, i64* %3197, i64* %3205
  %3206 = load i64, i64* %3197
  %select.val.1236 = select i1 %3203, i64 %3202, i64 %3206
  store i64 %select.val.1236, i64* %select.ptr.1235, align 16
  %3207 = load i1, i1* %out.162
  %3208 = load i64, i64* %0, align 8
  %3209 = and i64 %3208, 1
  %3210 = icmp ne i64 %3209, 0
  %3211 = load i1, i1* %out.162
  %in.354 = and i1 %3211, %3210
  store i1 %in.354, i1* %out.163
  %3212 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3213 = load i1, i1* %out.163
  %3214 = icmp slt i64 2, 3
  %3215 = bitcast i64* %shadow to i64*
  %safe.1237 = or i1 %3213, %3214
  %select.ptr.1238 = select i1 %safe.1237, i64* %3212, i64* %3215
  %3216 = load i64, i64* %select.ptr.1238, align 16
  %3217 = or i64 %3216, 1
  %3218 = load i1, i1* %out.163
  %3219 = icmp slt i64 2, 3
  %3220 = bitcast i64* %shadow to i64*
  %safe.1239 = or i1 %3218, %3219
  %select.ptr.1240 = select i1 %safe.1239, i64* %3212, i64* %3220
  %3221 = load i64, i64* %3212
  %select.val.1241 = select i1 %3218, i64 %3217, i64 %3221
  store i64 %select.val.1241, i64* %select.ptr.1240, align 16
  %3222 = load i1, i1* %out.162
  %3223 = xor i1 %3210, true
  %in.355 = and i1 %3222, %3223
  %3224 = load i1, i1* %out.163
  %3225 = or i1 %in.355, %3224
  store i1 %3225, i1* %out.164
  %3226 = getelementptr inbounds i64, i64* %0, i64 1
  %3227 = load i1, i1* %out.164
  %3228 = icmp slt i64 1, %N
  %3229 = bitcast i64* %shadow to i64*
  %safe.1242 = or i1 %3227, %3228
  %select.ptr.1243 = select i1 %safe.1242, i64* %3226, i64* %3229
  %3230 = load i64, i64* %select.ptr.1243, align 8
  %3231 = and i64 %3230, 1
  %3232 = icmp ne i64 %3231, 0
  %3233 = load i1, i1* %out.164
  %in.356 = and i1 %3233, %3232
  store i1 %in.356, i1* %out.165
  %3234 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3235 = load i1, i1* %out.165
  %3236 = icmp slt i64 1, 3
  %3237 = bitcast i64* %shadow to i64*
  %safe.1244 = or i1 %3235, %3236
  %select.ptr.1245 = select i1 %safe.1244, i64* %3234, i64* %3237
  %3238 = load i64, i64* %select.ptr.1245, align 8
  %3239 = or i64 %3238, 1
  %3240 = load i1, i1* %out.165
  %3241 = icmp slt i64 1, 3
  %3242 = bitcast i64* %shadow to i64*
  %safe.1246 = or i1 %3240, %3241
  %select.ptr.1247 = select i1 %safe.1246, i64* %3234, i64* %3242
  %3243 = load i64, i64* %3234
  %select.val.1248 = select i1 %3240, i64 %3239, i64 %3243
  store i64 %select.val.1248, i64* %select.ptr.1247, align 8
  %3244 = load i1, i1* %out.164
  %3245 = xor i1 %3232, true
  %in.357 = and i1 %3244, %3245
  %3246 = load i1, i1* %out.165
  %3247 = or i1 %in.357, %3246
  store i1 %3247, i1* %out.166
  %3248 = getelementptr inbounds i64, i64* %0, i64 2
  %3249 = load i1, i1* %out.166
  %3250 = icmp slt i64 2, %N
  %3251 = bitcast i64* %shadow to i64*
  %safe.1249 = or i1 %3249, %3250
  %select.ptr.1250 = select i1 %safe.1249, i64* %3248, i64* %3251
  %3252 = load i64, i64* %select.ptr.1250, align 8
  %3253 = and i64 %3252, 1
  %3254 = icmp ne i64 %3253, 0
  %3255 = load i1, i1* %out.166
  %in.358 = and i1 %3255, %3254
  store i1 %in.358, i1* %out.167
  %3256 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %3257 = load i1, i1* %out.167
  %3258 = icmp slt i64 0, 3
  %3259 = bitcast i64* %shadow to i64*
  %safe.1251 = or i1 %3257, %3258
  %select.ptr.1252 = select i1 %safe.1251, i64* %3256, i64* %3259
  %3260 = load i64, i64* %select.ptr.1252, align 16
  %3261 = or i64 %3260, 1
  %3262 = load i1, i1* %out.167
  %3263 = icmp slt i64 0, 3
  %3264 = bitcast i64* %shadow to i64*
  %safe.1253 = or i1 %3262, %3263
  %select.ptr.1254 = select i1 %safe.1253, i64* %3256, i64* %3264
  %3265 = load i64, i64* %3256
  %select.val.1255 = select i1 %3262, i64 %3261, i64 %3265
  store i64 %select.val.1255, i64* %select.ptr.1254, align 16
  %3266 = load i1, i1* %out.166
  %3267 = xor i1 %3254, true
  %in.359 = and i1 %3266, %3267
  %3268 = load i1, i1* %out.167
  %3269 = or i1 %in.359, %3268
  store i1 %3269, i1* %out.168
  %3270 = load i1, i1* %out.168
  %3271 = load i64, i64* %0, align 8
  %3272 = lshr i64 %3271, 1
  %3273 = load i1, i1* %out.168
  %3274 = load i64, i64* %0
  %select.val.1256 = select i1 %3273, i64 %3272, i64 %3274
  store i64 %select.val.1256, i64* %0, align 8
  %3275 = getelementptr inbounds i64, i64* %0, i64 1
  %3276 = load i1, i1* %out.168
  %3277 = icmp slt i64 1, %N
  %3278 = bitcast i64* %shadow to i64*
  %safe.1257 = or i1 %3276, %3277
  %select.ptr.1258 = select i1 %safe.1257, i64* %3275, i64* %3278
  %3279 = load i64, i64* %select.ptr.1258, align 8
  %3280 = lshr i64 %3279, 1
  %3281 = load i1, i1* %out.168
  %3282 = icmp slt i64 1, %N
  %3283 = bitcast i64* %shadow to i64*
  %safe.1259 = or i1 %3281, %3282
  %select.ptr.1260 = select i1 %safe.1259, i64* %3275, i64* %3283
  %3284 = load i64, i64* %3275
  %select.val.1261 = select i1 %3281, i64 %3280, i64 %3284
  store i64 %select.val.1261, i64* %select.ptr.1260, align 8
  %3285 = getelementptr inbounds i64, i64* %0, i64 2
  %3286 = load i1, i1* %out.168
  %3287 = icmp slt i64 2, %N
  %3288 = bitcast i64* %shadow to i64*
  %safe.1262 = or i1 %3286, %3287
  %select.ptr.1263 = select i1 %safe.1262, i64* %3285, i64* %3288
  %3289 = load i64, i64* %select.ptr.1263, align 8
  %3290 = lshr i64 %3289, 1
  %3291 = load i1, i1* %out.168
  %3292 = icmp slt i64 2, %N
  %3293 = bitcast i64* %shadow to i64*
  %safe.1264 = or i1 %3291, %3292
  %select.ptr.1265 = select i1 %safe.1264, i64* %3285, i64* %3293
  %3294 = load i64, i64* %3285
  %select.val.1266 = select i1 %3291, i64 %3290, i64 %3294
  store i64 %select.val.1266, i64* %select.ptr.1265, align 8
  %3295 = load i1, i1* %out.168
  %3296 = icmp slt i64 0, 3
  %3297 = bitcast i64* %shadow to i64*
  %safe.1267 = or i1 %3295, %3296
  %select.ptr.1268 = select i1 %safe.1267, i64* %18, i64* %3297
  %3298 = load i64, i64* %select.ptr.1268, align 16
  %3299 = shl i64 %3298, 1
  %3300 = load i1, i1* %out.168
  %3301 = icmp slt i64 0, 3
  %3302 = bitcast i64* %shadow to i64*
  %safe.1269 = or i1 %3300, %3301
  %select.ptr.1270 = select i1 %safe.1269, i64* %18, i64* %3302
  %3303 = load i64, i64* %18
  %select.val.1271 = select i1 %3300, i64 %3299, i64 %3303
  store i64 %select.val.1271, i64* %select.ptr.1270, align 16
  %3304 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3305 = load i1, i1* %out.168
  %3306 = icmp slt i64 1, 3
  %3307 = bitcast i64* %shadow to i64*
  %safe.1272 = or i1 %3305, %3306
  %select.ptr.1273 = select i1 %safe.1272, i64* %3304, i64* %3307
  %3308 = load i64, i64* %select.ptr.1273, align 8
  %3309 = shl i64 %3308, 1
  %3310 = load i1, i1* %out.168
  %3311 = icmp slt i64 1, 3
  %3312 = bitcast i64* %shadow to i64*
  %safe.1274 = or i1 %3310, %3311
  %select.ptr.1275 = select i1 %safe.1274, i64* %3304, i64* %3312
  %3313 = load i64, i64* %3304
  %select.val.1276 = select i1 %3310, i64 %3309, i64 %3313
  store i64 %select.val.1276, i64* %select.ptr.1275, align 8
  %3314 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3315 = load i1, i1* %out.168
  %3316 = icmp slt i64 2, 3
  %3317 = bitcast i64* %shadow to i64*
  %safe.1277 = or i1 %3315, %3316
  %select.ptr.1278 = select i1 %safe.1277, i64* %3314, i64* %3317
  %3318 = load i64, i64* %select.ptr.1278, align 16
  %3319 = shl i64 %3318, 1
  %3320 = load i1, i1* %out.168
  %3321 = icmp slt i64 2, 3
  %3322 = bitcast i64* %shadow to i64*
  %safe.1279 = or i1 %3320, %3321
  %select.ptr.1280 = select i1 %safe.1279, i64* %3314, i64* %3322
  %3323 = load i64, i64* %3314
  %select.val.1281 = select i1 %3320, i64 %3319, i64 %3323
  store i64 %select.val.1281, i64* %select.ptr.1280, align 16
  %3324 = load i1, i1* %out.168
  %3325 = load i64, i64* %0, align 8
  %3326 = and i64 %3325, 1
  %3327 = icmp ne i64 %3326, 0
  %3328 = load i1, i1* %out.168
  %in.360 = and i1 %3328, %3327
  store i1 %in.360, i1* %out.169
  %3329 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3330 = load i1, i1* %out.169
  %3331 = icmp slt i64 2, 3
  %3332 = bitcast i64* %shadow to i64*
  %safe.1282 = or i1 %3330, %3331
  %select.ptr.1283 = select i1 %safe.1282, i64* %3329, i64* %3332
  %3333 = load i64, i64* %select.ptr.1283, align 16
  %3334 = or i64 %3333, 1
  %3335 = load i1, i1* %out.169
  %3336 = icmp slt i64 2, 3
  %3337 = bitcast i64* %shadow to i64*
  %safe.1284 = or i1 %3335, %3336
  %select.ptr.1285 = select i1 %safe.1284, i64* %3329, i64* %3337
  %3338 = load i64, i64* %3329
  %select.val.1286 = select i1 %3335, i64 %3334, i64 %3338
  store i64 %select.val.1286, i64* %select.ptr.1285, align 16
  %3339 = load i1, i1* %out.168
  %3340 = xor i1 %3327, true
  %in.361 = and i1 %3339, %3340
  %3341 = load i1, i1* %out.169
  %3342 = or i1 %in.361, %3341
  store i1 %3342, i1* %out.170
  %3343 = getelementptr inbounds i64, i64* %0, i64 1
  %3344 = load i1, i1* %out.170
  %3345 = icmp slt i64 1, %N
  %3346 = bitcast i64* %shadow to i64*
  %safe.1287 = or i1 %3344, %3345
  %select.ptr.1288 = select i1 %safe.1287, i64* %3343, i64* %3346
  %3347 = load i64, i64* %select.ptr.1288, align 8
  %3348 = and i64 %3347, 1
  %3349 = icmp ne i64 %3348, 0
  %3350 = load i1, i1* %out.170
  %in.362 = and i1 %3350, %3349
  store i1 %in.362, i1* %out.171
  %3351 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3352 = load i1, i1* %out.171
  %3353 = icmp slt i64 1, 3
  %3354 = bitcast i64* %shadow to i64*
  %safe.1289 = or i1 %3352, %3353
  %select.ptr.1290 = select i1 %safe.1289, i64* %3351, i64* %3354
  %3355 = load i64, i64* %select.ptr.1290, align 8
  %3356 = or i64 %3355, 1
  %3357 = load i1, i1* %out.171
  %3358 = icmp slt i64 1, 3
  %3359 = bitcast i64* %shadow to i64*
  %safe.1291 = or i1 %3357, %3358
  %select.ptr.1292 = select i1 %safe.1291, i64* %3351, i64* %3359
  %3360 = load i64, i64* %3351
  %select.val.1293 = select i1 %3357, i64 %3356, i64 %3360
  store i64 %select.val.1293, i64* %select.ptr.1292, align 8
  %3361 = load i1, i1* %out.170
  %3362 = xor i1 %3349, true
  %in.363 = and i1 %3361, %3362
  %3363 = load i1, i1* %out.171
  %3364 = or i1 %in.363, %3363
  store i1 %3364, i1* %out.172
  %3365 = getelementptr inbounds i64, i64* %0, i64 2
  %3366 = load i1, i1* %out.172
  %3367 = icmp slt i64 2, %N
  %3368 = bitcast i64* %shadow to i64*
  %safe.1294 = or i1 %3366, %3367
  %select.ptr.1295 = select i1 %safe.1294, i64* %3365, i64* %3368
  %3369 = load i64, i64* %select.ptr.1295, align 8
  %3370 = and i64 %3369, 1
  %3371 = icmp ne i64 %3370, 0
  %3372 = load i1, i1* %out.172
  %in.364 = and i1 %3372, %3371
  store i1 %in.364, i1* %out.173
  %3373 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %3374 = load i1, i1* %out.173
  %3375 = icmp slt i64 0, 3
  %3376 = bitcast i64* %shadow to i64*
  %safe.1296 = or i1 %3374, %3375
  %select.ptr.1297 = select i1 %safe.1296, i64* %3373, i64* %3376
  %3377 = load i64, i64* %select.ptr.1297, align 16
  %3378 = or i64 %3377, 1
  %3379 = load i1, i1* %out.173
  %3380 = icmp slt i64 0, 3
  %3381 = bitcast i64* %shadow to i64*
  %safe.1298 = or i1 %3379, %3380
  %select.ptr.1299 = select i1 %safe.1298, i64* %3373, i64* %3381
  %3382 = load i64, i64* %3373
  %select.val.1300 = select i1 %3379, i64 %3378, i64 %3382
  store i64 %select.val.1300, i64* %select.ptr.1299, align 16
  %3383 = load i1, i1* %out.172
  %3384 = xor i1 %3371, true
  %in.365 = and i1 %3383, %3384
  %3385 = load i1, i1* %out.173
  %3386 = or i1 %in.365, %3385
  store i1 %3386, i1* %out.174
  %3387 = load i1, i1* %out.174
  %3388 = load i64, i64* %0, align 8
  %3389 = lshr i64 %3388, 1
  %3390 = load i1, i1* %out.174
  %3391 = load i64, i64* %0
  %select.val.1301 = select i1 %3390, i64 %3389, i64 %3391
  store i64 %select.val.1301, i64* %0, align 8
  %3392 = getelementptr inbounds i64, i64* %0, i64 1
  %3393 = load i1, i1* %out.174
  %3394 = icmp slt i64 1, %N
  %3395 = bitcast i64* %shadow to i64*
  %safe.1302 = or i1 %3393, %3394
  %select.ptr.1303 = select i1 %safe.1302, i64* %3392, i64* %3395
  %3396 = load i64, i64* %select.ptr.1303, align 8
  %3397 = lshr i64 %3396, 1
  %3398 = load i1, i1* %out.174
  %3399 = icmp slt i64 1, %N
  %3400 = bitcast i64* %shadow to i64*
  %safe.1304 = or i1 %3398, %3399
  %select.ptr.1305 = select i1 %safe.1304, i64* %3392, i64* %3400
  %3401 = load i64, i64* %3392
  %select.val.1306 = select i1 %3398, i64 %3397, i64 %3401
  store i64 %select.val.1306, i64* %select.ptr.1305, align 8
  %3402 = getelementptr inbounds i64, i64* %0, i64 2
  %3403 = load i1, i1* %out.174
  %3404 = icmp slt i64 2, %N
  %3405 = bitcast i64* %shadow to i64*
  %safe.1307 = or i1 %3403, %3404
  %select.ptr.1308 = select i1 %safe.1307, i64* %3402, i64* %3405
  %3406 = load i64, i64* %select.ptr.1308, align 8
  %3407 = lshr i64 %3406, 1
  %3408 = load i1, i1* %out.174
  %3409 = icmp slt i64 2, %N
  %3410 = bitcast i64* %shadow to i64*
  %safe.1309 = or i1 %3408, %3409
  %select.ptr.1310 = select i1 %safe.1309, i64* %3402, i64* %3410
  %3411 = load i64, i64* %3402
  %select.val.1311 = select i1 %3408, i64 %3407, i64 %3411
  store i64 %select.val.1311, i64* %select.ptr.1310, align 8
  %3412 = load i1, i1* %out.174
  %3413 = icmp slt i64 0, 3
  %3414 = bitcast i64* %shadow to i64*
  %safe.1312 = or i1 %3412, %3413
  %select.ptr.1313 = select i1 %safe.1312, i64* %18, i64* %3414
  %3415 = load i64, i64* %select.ptr.1313, align 16
  %3416 = shl i64 %3415, 1
  %3417 = load i1, i1* %out.174
  %3418 = icmp slt i64 0, 3
  %3419 = bitcast i64* %shadow to i64*
  %safe.1314 = or i1 %3417, %3418
  %select.ptr.1315 = select i1 %safe.1314, i64* %18, i64* %3419
  %3420 = load i64, i64* %18
  %select.val.1316 = select i1 %3417, i64 %3416, i64 %3420
  store i64 %select.val.1316, i64* %select.ptr.1315, align 16
  %3421 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3422 = load i1, i1* %out.174
  %3423 = icmp slt i64 1, 3
  %3424 = bitcast i64* %shadow to i64*
  %safe.1317 = or i1 %3422, %3423
  %select.ptr.1318 = select i1 %safe.1317, i64* %3421, i64* %3424
  %3425 = load i64, i64* %select.ptr.1318, align 8
  %3426 = shl i64 %3425, 1
  %3427 = load i1, i1* %out.174
  %3428 = icmp slt i64 1, 3
  %3429 = bitcast i64* %shadow to i64*
  %safe.1319 = or i1 %3427, %3428
  %select.ptr.1320 = select i1 %safe.1319, i64* %3421, i64* %3429
  %3430 = load i64, i64* %3421
  %select.val.1321 = select i1 %3427, i64 %3426, i64 %3430
  store i64 %select.val.1321, i64* %select.ptr.1320, align 8
  %3431 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3432 = load i1, i1* %out.174
  %3433 = icmp slt i64 2, 3
  %3434 = bitcast i64* %shadow to i64*
  %safe.1322 = or i1 %3432, %3433
  %select.ptr.1323 = select i1 %safe.1322, i64* %3431, i64* %3434
  %3435 = load i64, i64* %select.ptr.1323, align 16
  %3436 = shl i64 %3435, 1
  %3437 = load i1, i1* %out.174
  %3438 = icmp slt i64 2, 3
  %3439 = bitcast i64* %shadow to i64*
  %safe.1324 = or i1 %3437, %3438
  %select.ptr.1325 = select i1 %safe.1324, i64* %3431, i64* %3439
  %3440 = load i64, i64* %3431
  %select.val.1326 = select i1 %3437, i64 %3436, i64 %3440
  store i64 %select.val.1326, i64* %select.ptr.1325, align 16
  %3441 = load i1, i1* %out.174
  %3442 = load i64, i64* %0, align 8
  %3443 = and i64 %3442, 1
  %3444 = icmp ne i64 %3443, 0
  %3445 = load i1, i1* %out.174
  %in.366 = and i1 %3445, %3444
  store i1 %in.366, i1* %out.175
  %3446 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3447 = load i1, i1* %out.175
  %3448 = icmp slt i64 2, 3
  %3449 = bitcast i64* %shadow to i64*
  %safe.1327 = or i1 %3447, %3448
  %select.ptr.1328 = select i1 %safe.1327, i64* %3446, i64* %3449
  %3450 = load i64, i64* %select.ptr.1328, align 16
  %3451 = or i64 %3450, 1
  %3452 = load i1, i1* %out.175
  %3453 = icmp slt i64 2, 3
  %3454 = bitcast i64* %shadow to i64*
  %safe.1329 = or i1 %3452, %3453
  %select.ptr.1330 = select i1 %safe.1329, i64* %3446, i64* %3454
  %3455 = load i64, i64* %3446
  %select.val.1331 = select i1 %3452, i64 %3451, i64 %3455
  store i64 %select.val.1331, i64* %select.ptr.1330, align 16
  %3456 = load i1, i1* %out.174
  %3457 = xor i1 %3444, true
  %in.367 = and i1 %3456, %3457
  %3458 = load i1, i1* %out.175
  %3459 = or i1 %in.367, %3458
  store i1 %3459, i1* %out.176
  %3460 = getelementptr inbounds i64, i64* %0, i64 1
  %3461 = load i1, i1* %out.176
  %3462 = icmp slt i64 1, %N
  %3463 = bitcast i64* %shadow to i64*
  %safe.1332 = or i1 %3461, %3462
  %select.ptr.1333 = select i1 %safe.1332, i64* %3460, i64* %3463
  %3464 = load i64, i64* %select.ptr.1333, align 8
  %3465 = and i64 %3464, 1
  %3466 = icmp ne i64 %3465, 0
  %3467 = load i1, i1* %out.176
  %in.368 = and i1 %3467, %3466
  store i1 %in.368, i1* %out.177
  %3468 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3469 = load i1, i1* %out.177
  %3470 = icmp slt i64 1, 3
  %3471 = bitcast i64* %shadow to i64*
  %safe.1334 = or i1 %3469, %3470
  %select.ptr.1335 = select i1 %safe.1334, i64* %3468, i64* %3471
  %3472 = load i64, i64* %select.ptr.1335, align 8
  %3473 = or i64 %3472, 1
  %3474 = load i1, i1* %out.177
  %3475 = icmp slt i64 1, 3
  %3476 = bitcast i64* %shadow to i64*
  %safe.1336 = or i1 %3474, %3475
  %select.ptr.1337 = select i1 %safe.1336, i64* %3468, i64* %3476
  %3477 = load i64, i64* %3468
  %select.val.1338 = select i1 %3474, i64 %3473, i64 %3477
  store i64 %select.val.1338, i64* %select.ptr.1337, align 8
  %3478 = load i1, i1* %out.176
  %3479 = xor i1 %3466, true
  %in.369 = and i1 %3478, %3479
  %3480 = load i1, i1* %out.177
  %3481 = or i1 %in.369, %3480
  store i1 %3481, i1* %out.178
  %3482 = getelementptr inbounds i64, i64* %0, i64 2
  %3483 = load i1, i1* %out.178
  %3484 = icmp slt i64 2, %N
  %3485 = bitcast i64* %shadow to i64*
  %safe.1339 = or i1 %3483, %3484
  %select.ptr.1340 = select i1 %safe.1339, i64* %3482, i64* %3485
  %3486 = load i64, i64* %select.ptr.1340, align 8
  %3487 = and i64 %3486, 1
  %3488 = icmp ne i64 %3487, 0
  %3489 = load i1, i1* %out.178
  %in.370 = and i1 %3489, %3488
  store i1 %in.370, i1* %out.179
  %3490 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %3491 = load i1, i1* %out.179
  %3492 = icmp slt i64 0, 3
  %3493 = bitcast i64* %shadow to i64*
  %safe.1341 = or i1 %3491, %3492
  %select.ptr.1342 = select i1 %safe.1341, i64* %3490, i64* %3493
  %3494 = load i64, i64* %select.ptr.1342, align 16
  %3495 = or i64 %3494, 1
  %3496 = load i1, i1* %out.179
  %3497 = icmp slt i64 0, 3
  %3498 = bitcast i64* %shadow to i64*
  %safe.1343 = or i1 %3496, %3497
  %select.ptr.1344 = select i1 %safe.1343, i64* %3490, i64* %3498
  %3499 = load i64, i64* %3490
  %select.val.1345 = select i1 %3496, i64 %3495, i64 %3499
  store i64 %select.val.1345, i64* %select.ptr.1344, align 16
  %3500 = load i1, i1* %out.178
  %3501 = xor i1 %3488, true
  %in.371 = and i1 %3500, %3501
  %3502 = load i1, i1* %out.179
  %3503 = or i1 %in.371, %3502
  store i1 %3503, i1* %out.180
  %3504 = load i1, i1* %out.180
  %3505 = load i64, i64* %0, align 8
  %3506 = lshr i64 %3505, 1
  %3507 = load i1, i1* %out.180
  %3508 = load i64, i64* %0
  %select.val.1346 = select i1 %3507, i64 %3506, i64 %3508
  store i64 %select.val.1346, i64* %0, align 8
  %3509 = getelementptr inbounds i64, i64* %0, i64 1
  %3510 = load i1, i1* %out.180
  %3511 = icmp slt i64 1, %N
  %3512 = bitcast i64* %shadow to i64*
  %safe.1347 = or i1 %3510, %3511
  %select.ptr.1348 = select i1 %safe.1347, i64* %3509, i64* %3512
  %3513 = load i64, i64* %select.ptr.1348, align 8
  %3514 = lshr i64 %3513, 1
  %3515 = load i1, i1* %out.180
  %3516 = icmp slt i64 1, %N
  %3517 = bitcast i64* %shadow to i64*
  %safe.1349 = or i1 %3515, %3516
  %select.ptr.1350 = select i1 %safe.1349, i64* %3509, i64* %3517
  %3518 = load i64, i64* %3509
  %select.val.1351 = select i1 %3515, i64 %3514, i64 %3518
  store i64 %select.val.1351, i64* %select.ptr.1350, align 8
  %3519 = getelementptr inbounds i64, i64* %0, i64 2
  %3520 = load i1, i1* %out.180
  %3521 = icmp slt i64 2, %N
  %3522 = bitcast i64* %shadow to i64*
  %safe.1352 = or i1 %3520, %3521
  %select.ptr.1353 = select i1 %safe.1352, i64* %3519, i64* %3522
  %3523 = load i64, i64* %select.ptr.1353, align 8
  %3524 = lshr i64 %3523, 1
  %3525 = load i1, i1* %out.180
  %3526 = icmp slt i64 2, %N
  %3527 = bitcast i64* %shadow to i64*
  %safe.1354 = or i1 %3525, %3526
  %select.ptr.1355 = select i1 %safe.1354, i64* %3519, i64* %3527
  %3528 = load i64, i64* %3519
  %select.val.1356 = select i1 %3525, i64 %3524, i64 %3528
  store i64 %select.val.1356, i64* %select.ptr.1355, align 8
  %3529 = load i1, i1* %out.180
  %3530 = icmp slt i64 0, 3
  %3531 = bitcast i64* %shadow to i64*
  %safe.1357 = or i1 %3529, %3530
  %select.ptr.1358 = select i1 %safe.1357, i64* %18, i64* %3531
  %3532 = load i64, i64* %select.ptr.1358, align 16
  %3533 = shl i64 %3532, 1
  %3534 = load i1, i1* %out.180
  %3535 = icmp slt i64 0, 3
  %3536 = bitcast i64* %shadow to i64*
  %safe.1359 = or i1 %3534, %3535
  %select.ptr.1360 = select i1 %safe.1359, i64* %18, i64* %3536
  %3537 = load i64, i64* %18
  %select.val.1361 = select i1 %3534, i64 %3533, i64 %3537
  store i64 %select.val.1361, i64* %select.ptr.1360, align 16
  %3538 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3539 = load i1, i1* %out.180
  %3540 = icmp slt i64 1, 3
  %3541 = bitcast i64* %shadow to i64*
  %safe.1362 = or i1 %3539, %3540
  %select.ptr.1363 = select i1 %safe.1362, i64* %3538, i64* %3541
  %3542 = load i64, i64* %select.ptr.1363, align 8
  %3543 = shl i64 %3542, 1
  %3544 = load i1, i1* %out.180
  %3545 = icmp slt i64 1, 3
  %3546 = bitcast i64* %shadow to i64*
  %safe.1364 = or i1 %3544, %3545
  %select.ptr.1365 = select i1 %safe.1364, i64* %3538, i64* %3546
  %3547 = load i64, i64* %3538
  %select.val.1366 = select i1 %3544, i64 %3543, i64 %3547
  store i64 %select.val.1366, i64* %select.ptr.1365, align 8
  %3548 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3549 = load i1, i1* %out.180
  %3550 = icmp slt i64 2, 3
  %3551 = bitcast i64* %shadow to i64*
  %safe.1367 = or i1 %3549, %3550
  %select.ptr.1368 = select i1 %safe.1367, i64* %3548, i64* %3551
  %3552 = load i64, i64* %select.ptr.1368, align 16
  %3553 = shl i64 %3552, 1
  %3554 = load i1, i1* %out.180
  %3555 = icmp slt i64 2, 3
  %3556 = bitcast i64* %shadow to i64*
  %safe.1369 = or i1 %3554, %3555
  %select.ptr.1370 = select i1 %safe.1369, i64* %3548, i64* %3556
  %3557 = load i64, i64* %3548
  %select.val.1371 = select i1 %3554, i64 %3553, i64 %3557
  store i64 %select.val.1371, i64* %select.ptr.1370, align 16
  %3558 = load i1, i1* %out.180
  %3559 = load i64, i64* %0, align 8
  %3560 = and i64 %3559, 1
  %3561 = icmp ne i64 %3560, 0
  %3562 = load i1, i1* %out.180
  %in.372 = and i1 %3562, %3561
  store i1 %in.372, i1* %out.181
  %3563 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3564 = load i1, i1* %out.181
  %3565 = icmp slt i64 2, 3
  %3566 = bitcast i64* %shadow to i64*
  %safe.1372 = or i1 %3564, %3565
  %select.ptr.1373 = select i1 %safe.1372, i64* %3563, i64* %3566
  %3567 = load i64, i64* %select.ptr.1373, align 16
  %3568 = or i64 %3567, 1
  %3569 = load i1, i1* %out.181
  %3570 = icmp slt i64 2, 3
  %3571 = bitcast i64* %shadow to i64*
  %safe.1374 = or i1 %3569, %3570
  %select.ptr.1375 = select i1 %safe.1374, i64* %3563, i64* %3571
  %3572 = load i64, i64* %3563
  %select.val.1376 = select i1 %3569, i64 %3568, i64 %3572
  store i64 %select.val.1376, i64* %select.ptr.1375, align 16
  %3573 = load i1, i1* %out.180
  %3574 = xor i1 %3561, true
  %in.373 = and i1 %3573, %3574
  %3575 = load i1, i1* %out.181
  %3576 = or i1 %in.373, %3575
  store i1 %3576, i1* %out.182
  %3577 = getelementptr inbounds i64, i64* %0, i64 1
  %3578 = load i1, i1* %out.182
  %3579 = icmp slt i64 1, %N
  %3580 = bitcast i64* %shadow to i64*
  %safe.1377 = or i1 %3578, %3579
  %select.ptr.1378 = select i1 %safe.1377, i64* %3577, i64* %3580
  %3581 = load i64, i64* %select.ptr.1378, align 8
  %3582 = and i64 %3581, 1
  %3583 = icmp ne i64 %3582, 0
  %3584 = load i1, i1* %out.182
  %in.374 = and i1 %3584, %3583
  store i1 %in.374, i1* %out.183
  %3585 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3586 = load i1, i1* %out.183
  %3587 = icmp slt i64 1, 3
  %3588 = bitcast i64* %shadow to i64*
  %safe.1379 = or i1 %3586, %3587
  %select.ptr.1380 = select i1 %safe.1379, i64* %3585, i64* %3588
  %3589 = load i64, i64* %select.ptr.1380, align 8
  %3590 = or i64 %3589, 1
  %3591 = load i1, i1* %out.183
  %3592 = icmp slt i64 1, 3
  %3593 = bitcast i64* %shadow to i64*
  %safe.1381 = or i1 %3591, %3592
  %select.ptr.1382 = select i1 %safe.1381, i64* %3585, i64* %3593
  %3594 = load i64, i64* %3585
  %select.val.1383 = select i1 %3591, i64 %3590, i64 %3594
  store i64 %select.val.1383, i64* %select.ptr.1382, align 8
  %3595 = load i1, i1* %out.182
  %3596 = xor i1 %3583, true
  %in.375 = and i1 %3595, %3596
  %3597 = load i1, i1* %out.183
  %3598 = or i1 %in.375, %3597
  store i1 %3598, i1* %out.184
  %3599 = getelementptr inbounds i64, i64* %0, i64 2
  %3600 = load i1, i1* %out.184
  %3601 = icmp slt i64 2, %N
  %3602 = bitcast i64* %shadow to i64*
  %safe.1384 = or i1 %3600, %3601
  %select.ptr.1385 = select i1 %safe.1384, i64* %3599, i64* %3602
  %3603 = load i64, i64* %select.ptr.1385, align 8
  %3604 = and i64 %3603, 1
  %3605 = icmp ne i64 %3604, 0
  %3606 = load i1, i1* %out.184
  %in.376 = and i1 %3606, %3605
  store i1 %in.376, i1* %out.185
  %3607 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %3608 = load i1, i1* %out.185
  %3609 = icmp slt i64 0, 3
  %3610 = bitcast i64* %shadow to i64*
  %safe.1386 = or i1 %3608, %3609
  %select.ptr.1387 = select i1 %safe.1386, i64* %3607, i64* %3610
  %3611 = load i64, i64* %select.ptr.1387, align 16
  %3612 = or i64 %3611, 1
  %3613 = load i1, i1* %out.185
  %3614 = icmp slt i64 0, 3
  %3615 = bitcast i64* %shadow to i64*
  %safe.1388 = or i1 %3613, %3614
  %select.ptr.1389 = select i1 %safe.1388, i64* %3607, i64* %3615
  %3616 = load i64, i64* %3607
  %select.val.1390 = select i1 %3613, i64 %3612, i64 %3616
  store i64 %select.val.1390, i64* %select.ptr.1389, align 16
  %3617 = load i1, i1* %out.184
  %3618 = xor i1 %3605, true
  %in.377 = and i1 %3617, %3618
  %3619 = load i1, i1* %out.185
  %3620 = or i1 %in.377, %3619
  store i1 %3620, i1* %out.186
  %3621 = load i1, i1* %out.186
  %3622 = load i64, i64* %0, align 8
  %3623 = lshr i64 %3622, 1
  %3624 = load i1, i1* %out.186
  %3625 = load i64, i64* %0
  %select.val.1391 = select i1 %3624, i64 %3623, i64 %3625
  store i64 %select.val.1391, i64* %0, align 8
  %3626 = getelementptr inbounds i64, i64* %0, i64 1
  %3627 = load i1, i1* %out.186
  %3628 = icmp slt i64 1, %N
  %3629 = bitcast i64* %shadow to i64*
  %safe.1392 = or i1 %3627, %3628
  %select.ptr.1393 = select i1 %safe.1392, i64* %3626, i64* %3629
  %3630 = load i64, i64* %select.ptr.1393, align 8
  %3631 = lshr i64 %3630, 1
  %3632 = load i1, i1* %out.186
  %3633 = icmp slt i64 1, %N
  %3634 = bitcast i64* %shadow to i64*
  %safe.1394 = or i1 %3632, %3633
  %select.ptr.1395 = select i1 %safe.1394, i64* %3626, i64* %3634
  %3635 = load i64, i64* %3626
  %select.val.1396 = select i1 %3632, i64 %3631, i64 %3635
  store i64 %select.val.1396, i64* %select.ptr.1395, align 8
  %3636 = getelementptr inbounds i64, i64* %0, i64 2
  %3637 = load i1, i1* %out.186
  %3638 = icmp slt i64 2, %N
  %3639 = bitcast i64* %shadow to i64*
  %safe.1397 = or i1 %3637, %3638
  %select.ptr.1398 = select i1 %safe.1397, i64* %3636, i64* %3639
  %3640 = load i64, i64* %select.ptr.1398, align 8
  %3641 = lshr i64 %3640, 1
  %3642 = load i1, i1* %out.186
  %3643 = icmp slt i64 2, %N
  %3644 = bitcast i64* %shadow to i64*
  %safe.1399 = or i1 %3642, %3643
  %select.ptr.1400 = select i1 %safe.1399, i64* %3636, i64* %3644
  %3645 = load i64, i64* %3636
  %select.val.1401 = select i1 %3642, i64 %3641, i64 %3645
  store i64 %select.val.1401, i64* %select.ptr.1400, align 8
  %3646 = load i1, i1* %out.186
  %3647 = icmp slt i64 0, 3
  %3648 = bitcast i64* %shadow to i64*
  %safe.1402 = or i1 %3646, %3647
  %select.ptr.1403 = select i1 %safe.1402, i64* %18, i64* %3648
  %3649 = load i64, i64* %select.ptr.1403, align 16
  %3650 = shl i64 %3649, 1
  %3651 = load i1, i1* %out.186
  %3652 = icmp slt i64 0, 3
  %3653 = bitcast i64* %shadow to i64*
  %safe.1404 = or i1 %3651, %3652
  %select.ptr.1405 = select i1 %safe.1404, i64* %18, i64* %3653
  %3654 = load i64, i64* %18
  %select.val.1406 = select i1 %3651, i64 %3650, i64 %3654
  store i64 %select.val.1406, i64* %select.ptr.1405, align 16
  %3655 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3656 = load i1, i1* %out.186
  %3657 = icmp slt i64 1, 3
  %3658 = bitcast i64* %shadow to i64*
  %safe.1407 = or i1 %3656, %3657
  %select.ptr.1408 = select i1 %safe.1407, i64* %3655, i64* %3658
  %3659 = load i64, i64* %select.ptr.1408, align 8
  %3660 = shl i64 %3659, 1
  %3661 = load i1, i1* %out.186
  %3662 = icmp slt i64 1, 3
  %3663 = bitcast i64* %shadow to i64*
  %safe.1409 = or i1 %3661, %3662
  %select.ptr.1410 = select i1 %safe.1409, i64* %3655, i64* %3663
  %3664 = load i64, i64* %3655
  %select.val.1411 = select i1 %3661, i64 %3660, i64 %3664
  store i64 %select.val.1411, i64* %select.ptr.1410, align 8
  %3665 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3666 = load i1, i1* %out.186
  %3667 = icmp slt i64 2, 3
  %3668 = bitcast i64* %shadow to i64*
  %safe.1412 = or i1 %3666, %3667
  %select.ptr.1413 = select i1 %safe.1412, i64* %3665, i64* %3668
  %3669 = load i64, i64* %select.ptr.1413, align 16
  %3670 = shl i64 %3669, 1
  %3671 = load i1, i1* %out.186
  %3672 = icmp slt i64 2, 3
  %3673 = bitcast i64* %shadow to i64*
  %safe.1414 = or i1 %3671, %3672
  %select.ptr.1415 = select i1 %safe.1414, i64* %3665, i64* %3673
  %3674 = load i64, i64* %3665
  %select.val.1416 = select i1 %3671, i64 %3670, i64 %3674
  store i64 %select.val.1416, i64* %select.ptr.1415, align 16
  %3675 = load i1, i1* %out.186
  %3676 = load i64, i64* %0, align 8
  %3677 = and i64 %3676, 1
  %3678 = icmp ne i64 %3677, 0
  %3679 = load i1, i1* %out.186
  %in.378 = and i1 %3679, %3678
  store i1 %in.378, i1* %out.187
  %3680 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3681 = load i1, i1* %out.187
  %3682 = icmp slt i64 2, 3
  %3683 = bitcast i64* %shadow to i64*
  %safe.1417 = or i1 %3681, %3682
  %select.ptr.1418 = select i1 %safe.1417, i64* %3680, i64* %3683
  %3684 = load i64, i64* %select.ptr.1418, align 16
  %3685 = or i64 %3684, 1
  %3686 = load i1, i1* %out.187
  %3687 = icmp slt i64 2, 3
  %3688 = bitcast i64* %shadow to i64*
  %safe.1419 = or i1 %3686, %3687
  %select.ptr.1420 = select i1 %safe.1419, i64* %3680, i64* %3688
  %3689 = load i64, i64* %3680
  %select.val.1421 = select i1 %3686, i64 %3685, i64 %3689
  store i64 %select.val.1421, i64* %select.ptr.1420, align 16
  %3690 = load i1, i1* %out.186
  %3691 = xor i1 %3678, true
  %in.379 = and i1 %3690, %3691
  %3692 = load i1, i1* %out.187
  %3693 = or i1 %in.379, %3692
  store i1 %3693, i1* %out.188
  %3694 = getelementptr inbounds i64, i64* %0, i64 1
  %3695 = load i1, i1* %out.188
  %3696 = icmp slt i64 1, %N
  %3697 = bitcast i64* %shadow to i64*
  %safe.1422 = or i1 %3695, %3696
  %select.ptr.1423 = select i1 %safe.1422, i64* %3694, i64* %3697
  %3698 = load i64, i64* %select.ptr.1423, align 8
  %3699 = and i64 %3698, 1
  %3700 = icmp ne i64 %3699, 0
  %3701 = load i1, i1* %out.188
  %in.380 = and i1 %3701, %3700
  store i1 %in.380, i1* %out.189
  %3702 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3703 = load i1, i1* %out.189
  %3704 = icmp slt i64 1, 3
  %3705 = bitcast i64* %shadow to i64*
  %safe.1424 = or i1 %3703, %3704
  %select.ptr.1425 = select i1 %safe.1424, i64* %3702, i64* %3705
  %3706 = load i64, i64* %select.ptr.1425, align 8
  %3707 = or i64 %3706, 1
  %3708 = load i1, i1* %out.189
  %3709 = icmp slt i64 1, 3
  %3710 = bitcast i64* %shadow to i64*
  %safe.1426 = or i1 %3708, %3709
  %select.ptr.1427 = select i1 %safe.1426, i64* %3702, i64* %3710
  %3711 = load i64, i64* %3702
  %select.val.1428 = select i1 %3708, i64 %3707, i64 %3711
  store i64 %select.val.1428, i64* %select.ptr.1427, align 8
  %3712 = load i1, i1* %out.188
  %3713 = xor i1 %3700, true
  %in.381 = and i1 %3712, %3713
  %3714 = load i1, i1* %out.189
  %3715 = or i1 %in.381, %3714
  store i1 %3715, i1* %out.190
  %3716 = getelementptr inbounds i64, i64* %0, i64 2
  %3717 = load i1, i1* %out.190
  %3718 = icmp slt i64 2, %N
  %3719 = bitcast i64* %shadow to i64*
  %safe.1429 = or i1 %3717, %3718
  %select.ptr.1430 = select i1 %safe.1429, i64* %3716, i64* %3719
  %3720 = load i64, i64* %select.ptr.1430, align 8
  %3721 = and i64 %3720, 1
  %3722 = icmp ne i64 %3721, 0
  %3723 = load i1, i1* %out.190
  %in.382 = and i1 %3723, %3722
  store i1 %in.382, i1* %out.191
  %3724 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %3725 = load i1, i1* %out.191
  %3726 = icmp slt i64 0, 3
  %3727 = bitcast i64* %shadow to i64*
  %safe.1431 = or i1 %3725, %3726
  %select.ptr.1432 = select i1 %safe.1431, i64* %3724, i64* %3727
  %3728 = load i64, i64* %select.ptr.1432, align 16
  %3729 = or i64 %3728, 1
  %3730 = load i1, i1* %out.191
  %3731 = icmp slt i64 0, 3
  %3732 = bitcast i64* %shadow to i64*
  %safe.1433 = or i1 %3730, %3731
  %select.ptr.1434 = select i1 %safe.1433, i64* %3724, i64* %3732
  %3733 = load i64, i64* %3724
  %select.val.1435 = select i1 %3730, i64 %3729, i64 %3733
  store i64 %select.val.1435, i64* %select.ptr.1434, align 16
  %3734 = load i1, i1* %out.190
  %3735 = xor i1 %3722, true
  %in.383 = and i1 %3734, %3735
  %3736 = load i1, i1* %out.191
  %3737 = or i1 %in.383, %3736
  store i1 %3737, i1* %out.192
  %3738 = load i1, i1* %out.192
  %3739 = load i64, i64* %0, align 8
  %3740 = lshr i64 %3739, 1
  %3741 = load i1, i1* %out.192
  %3742 = load i64, i64* %0
  %select.val.1436 = select i1 %3741, i64 %3740, i64 %3742
  store i64 %select.val.1436, i64* %0, align 8
  %3743 = getelementptr inbounds i64, i64* %0, i64 1
  %3744 = load i1, i1* %out.192
  %3745 = icmp slt i64 1, %N
  %3746 = bitcast i64* %shadow to i64*
  %safe.1437 = or i1 %3744, %3745
  %select.ptr.1438 = select i1 %safe.1437, i64* %3743, i64* %3746
  %3747 = load i64, i64* %select.ptr.1438, align 8
  %3748 = lshr i64 %3747, 1
  %3749 = load i1, i1* %out.192
  %3750 = icmp slt i64 1, %N
  %3751 = bitcast i64* %shadow to i64*
  %safe.1439 = or i1 %3749, %3750
  %select.ptr.1440 = select i1 %safe.1439, i64* %3743, i64* %3751
  %3752 = load i64, i64* %3743
  %select.val.1441 = select i1 %3749, i64 %3748, i64 %3752
  store i64 %select.val.1441, i64* %select.ptr.1440, align 8
  %3753 = getelementptr inbounds i64, i64* %0, i64 2
  %3754 = load i1, i1* %out.192
  %3755 = icmp slt i64 2, %N
  %3756 = bitcast i64* %shadow to i64*
  %safe.1442 = or i1 %3754, %3755
  %select.ptr.1443 = select i1 %safe.1442, i64* %3753, i64* %3756
  %3757 = load i64, i64* %select.ptr.1443, align 8
  %3758 = lshr i64 %3757, 1
  %3759 = load i1, i1* %out.192
  %3760 = icmp slt i64 2, %N
  %3761 = bitcast i64* %shadow to i64*
  %safe.1444 = or i1 %3759, %3760
  %select.ptr.1445 = select i1 %safe.1444, i64* %3753, i64* %3761
  %3762 = load i64, i64* %3753
  %select.val.1446 = select i1 %3759, i64 %3758, i64 %3762
  store i64 %select.val.1446, i64* %select.ptr.1445, align 8
  %3763 = load i1, i1* %out.192
  %3764 = icmp slt i64 0, 3
  %3765 = bitcast i64* %shadow to i64*
  %safe.1447 = or i1 %3763, %3764
  %select.ptr.1448 = select i1 %safe.1447, i64* %18, i64* %3765
  %3766 = load i64, i64* %select.ptr.1448, align 16
  %3767 = load i1, i1* %out.192
  %3768 = load i64, i64* %0
  %select.val.1449 = select i1 %3767, i64 %3766, i64 %3768
  store i64 %select.val.1449, i64* %0, align 8
  %3769 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %3770 = load i1, i1* %out.192
  %3771 = icmp slt i64 1, 3
  %3772 = bitcast i64* %shadow to i64*
  %safe.1450 = or i1 %3770, %3771
  %select.ptr.1451 = select i1 %safe.1450, i64* %3769, i64* %3772
  %3773 = load i64, i64* %select.ptr.1451, align 8
  %3774 = getelementptr inbounds i64, i64* %0, i64 1
  %3775 = load i1, i1* %out.192
  %3776 = icmp slt i64 1, %N
  %3777 = bitcast i64* %shadow to i64*
  %safe.1452 = or i1 %3775, %3776
  %select.ptr.1453 = select i1 %safe.1452, i64* %3774, i64* %3777
  %3778 = load i64, i64* %3774
  %select.val.1454 = select i1 %3775, i64 %3773, i64 %3778
  store i64 %select.val.1454, i64* %select.ptr.1453, align 8
  %3779 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %3780 = load i1, i1* %out.192
  %3781 = icmp slt i64 2, 3
  %3782 = bitcast i64* %shadow to i64*
  %safe.1455 = or i1 %3780, %3781
  %select.ptr.1456 = select i1 %safe.1455, i64* %3779, i64* %3782
  %3783 = load i64, i64* %select.ptr.1456, align 16
  %3784 = getelementptr inbounds i64, i64* %0, i64 2
  %3785 = load i1, i1* %out.192
  %3786 = icmp slt i64 2, %N
  %3787 = bitcast i64* %shadow to i64*
  %safe.1457 = or i1 %3785, %3786
  %select.ptr.1458 = select i1 %safe.1457, i64* %3784, i64* %3787
  %3788 = load i64, i64* %3784
  %select.val.1459 = select i1 %3785, i64 %3783, i64 %3788
  store i64 %select.val.1459, i64* %select.ptr.1458, align 8
  ret void
}

define void @gamma_(i64* %0, i64 %N, i1 %.cond) {
  %shadow = alloca i64
  %out. = alloca i1
  store i1 %.cond, i1* %out.
  %2 = alloca [3 x i64], align 16
  %3 = getelementptr inbounds i64, i64* %0, i64 0
  %4 = load i1, i1* %out.
  %5 = icmp slt i64 0, %N
  %6 = bitcast i64* %shadow to i64*
  %safe. = or i1 %4, %5
  %select.ptr. = select i1 %safe., i64* %3, i64* %6
  %7 = load i64, i64* %select.ptr., align 8
  %8 = getelementptr inbounds i64, i64* %0, i64 1
  %9 = load i1, i1* %out.
  %10 = icmp slt i64 1, %N
  %11 = bitcast i64* %shadow to i64*
  %safe.1 = or i1 %9, %10
  %select.ptr.2 = select i1 %safe.1, i64* %8, i64* %11
  %12 = load i64, i64* %select.ptr.2, align 8
  %13 = getelementptr inbounds i64, i64* %0, i64 2
  %14 = load i1, i1* %out.
  %15 = icmp slt i64 2, %N
  %16 = bitcast i64* %shadow to i64*
  %safe.3 = or i1 %14, %15
  %select.ptr.4 = select i1 %safe.3, i64* %13, i64* %16
  %17 = load i64, i64* %select.ptr.4, align 8
  %18 = xor i64 %17, -1
  %19 = or i64 %12, %18
  %20 = xor i64 %7, %19
  %21 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %22 = load i1, i1* %out.
  %23 = icmp slt i64 0, 3
  %24 = bitcast i64* %shadow to i64*
  %safe.5 = or i1 %22, %23
  %select.ptr.6 = select i1 %safe.5, i64* %21, i64* %24
  %25 = load i64, i64* %21
  %select.val. = select i1 %22, i64 %20, i64 %25
  store i64 %select.val., i64* %select.ptr.6, align 16
  %26 = getelementptr inbounds i64, i64* %0, i64 1
  %27 = load i1, i1* %out.
  %28 = icmp slt i64 1, %N
  %29 = bitcast i64* %shadow to i64*
  %safe.7 = or i1 %27, %28
  %select.ptr.8 = select i1 %safe.7, i64* %26, i64* %29
  %30 = load i64, i64* %select.ptr.8, align 8
  %31 = getelementptr inbounds i64, i64* %0, i64 2
  %32 = load i1, i1* %out.
  %33 = icmp slt i64 2, %N
  %34 = bitcast i64* %shadow to i64*
  %safe.9 = or i1 %32, %33
  %select.ptr.10 = select i1 %safe.9, i64* %31, i64* %34
  %35 = load i64, i64* %select.ptr.10, align 8
  %36 = getelementptr inbounds i64, i64* %0, i64 0
  %37 = load i1, i1* %out.
  %38 = icmp slt i64 0, %N
  %39 = bitcast i64* %shadow to i64*
  %safe.11 = or i1 %37, %38
  %select.ptr.12 = select i1 %safe.11, i64* %36, i64* %39
  %40 = load i64, i64* %select.ptr.12, align 8
  %41 = xor i64 %40, -1
  %42 = or i64 %35, %41
  %43 = xor i64 %30, %42
  %44 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %45 = load i1, i1* %out.
  %46 = icmp slt i64 1, 3
  %47 = bitcast i64* %shadow to i64*
  %safe.13 = or i1 %45, %46
  %select.ptr.14 = select i1 %safe.13, i64* %44, i64* %47
  %48 = load i64, i64* %44
  %select.val.15 = select i1 %45, i64 %43, i64 %48
  store i64 %select.val.15, i64* %select.ptr.14, align 8
  %49 = getelementptr inbounds i64, i64* %0, i64 2
  %50 = load i1, i1* %out.
  %51 = icmp slt i64 2, %N
  %52 = bitcast i64* %shadow to i64*
  %safe.16 = or i1 %50, %51
  %select.ptr.17 = select i1 %safe.16, i64* %49, i64* %52
  %53 = load i64, i64* %select.ptr.17, align 8
  %54 = getelementptr inbounds i64, i64* %0, i64 0
  %55 = load i1, i1* %out.
  %56 = icmp slt i64 0, %N
  %57 = bitcast i64* %shadow to i64*
  %safe.18 = or i1 %55, %56
  %select.ptr.19 = select i1 %safe.18, i64* %54, i64* %57
  %58 = load i64, i64* %select.ptr.19, align 8
  %59 = getelementptr inbounds i64, i64* %0, i64 1
  %60 = load i1, i1* %out.
  %61 = icmp slt i64 1, %N
  %62 = bitcast i64* %shadow to i64*
  %safe.20 = or i1 %60, %61
  %select.ptr.21 = select i1 %safe.20, i64* %59, i64* %62
  %63 = load i64, i64* %select.ptr.21, align 8
  %64 = xor i64 %63, -1
  %65 = or i64 %58, %64
  %66 = xor i64 %53, %65
  %67 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %68 = load i1, i1* %out.
  %69 = icmp slt i64 2, 3
  %70 = bitcast i64* %shadow to i64*
  %safe.22 = or i1 %68, %69
  %select.ptr.23 = select i1 %safe.22, i64* %67, i64* %70
  %71 = load i64, i64* %67
  %select.val.24 = select i1 %68, i64 %66, i64 %71
  store i64 %select.val.24, i64* %select.ptr.23, align 16
  %72 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %73 = load i1, i1* %out.
  %74 = icmp slt i64 0, 3
  %75 = bitcast i64* %shadow to i64*
  %safe.25 = or i1 %73, %74
  %select.ptr.26 = select i1 %safe.25, i64* %72, i64* %75
  %76 = load i64, i64* %select.ptr.26, align 16
  %77 = getelementptr inbounds i64, i64* %0, i64 0
  %78 = load i1, i1* %out.
  %79 = icmp slt i64 0, %N
  %80 = bitcast i64* %shadow to i64*
  %safe.27 = or i1 %78, %79
  %select.ptr.28 = select i1 %safe.27, i64* %77, i64* %80
  %81 = load i64, i64* %77
  %select.val.29 = select i1 %78, i64 %76, i64 %81
  store i64 %select.val.29, i64* %select.ptr.28, align 8
  %82 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %83 = load i1, i1* %out.
  %84 = icmp slt i64 1, 3
  %85 = bitcast i64* %shadow to i64*
  %safe.30 = or i1 %83, %84
  %select.ptr.31 = select i1 %safe.30, i64* %82, i64* %85
  %86 = load i64, i64* %select.ptr.31, align 8
  %87 = getelementptr inbounds i64, i64* %0, i64 1
  %88 = load i1, i1* %out.
  %89 = icmp slt i64 1, %N
  %90 = bitcast i64* %shadow to i64*
  %safe.32 = or i1 %88, %89
  %select.ptr.33 = select i1 %safe.32, i64* %87, i64* %90
  %91 = load i64, i64* %87
  %select.val.34 = select i1 %88, i64 %86, i64 %91
  store i64 %select.val.34, i64* %select.ptr.33, align 8
  %92 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %93 = load i1, i1* %out.
  %94 = icmp slt i64 2, 3
  %95 = bitcast i64* %shadow to i64*
  %safe.35 = or i1 %93, %94
  %select.ptr.36 = select i1 %safe.35, i64* %92, i64* %95
  %96 = load i64, i64* %select.ptr.36, align 16
  %97 = getelementptr inbounds i64, i64* %0, i64 2
  %98 = load i1, i1* %out.
  %99 = icmp slt i64 2, %N
  %100 = bitcast i64* %shadow to i64*
  %safe.37 = or i1 %98, %99
  %select.ptr.38 = select i1 %safe.37, i64* %97, i64* %100
  %101 = load i64, i64* %97
  %select.val.39 = select i1 %98, i64 %96, i64 %101
  store i64 %select.val.39, i64* %select.ptr.38, align 8
  ret void
}

define void @theta(i64* %0, i64 %N, i1 %.cond) {
  %shadow = alloca i64
  %out. = alloca i1
  store i1 %.cond, i1* %out.
  %2 = alloca [3 x i64], align 16
  %3 = getelementptr inbounds i64, i64* %0, i64 0
  %4 = load i1, i1* %out.
  %5 = icmp slt i64 0, %N
  %6 = bitcast i64* %shadow to i64*
  %safe. = or i1 %4, %5
  %select.ptr. = select i1 %safe., i64* %3, i64* %6
  %7 = load i64, i64* %select.ptr., align 8
  %8 = getelementptr inbounds i64, i64* %0, i64 0
  %9 = load i1, i1* %out.
  %10 = icmp slt i64 0, %N
  %11 = bitcast i64* %shadow to i64*
  %safe.1 = or i1 %9, %10
  %select.ptr.2 = select i1 %safe.1, i64* %8, i64* %11
  %12 = load i64, i64* %select.ptr.2, align 8
  %13 = lshr i64 %12, 16
  %14 = xor i64 %7, %13
  %15 = getelementptr inbounds i64, i64* %0, i64 1
  %16 = load i1, i1* %out.
  %17 = icmp slt i64 1, %N
  %18 = bitcast i64* %shadow to i64*
  %safe.3 = or i1 %16, %17
  %select.ptr.4 = select i1 %safe.3, i64* %15, i64* %18
  %19 = load i64, i64* %select.ptr.4, align 8
  %20 = shl i64 %19, 16
  %21 = xor i64 %14, %20
  %22 = getelementptr inbounds i64, i64* %0, i64 1
  %23 = load i1, i1* %out.
  %24 = icmp slt i64 1, %N
  %25 = bitcast i64* %shadow to i64*
  %safe.5 = or i1 %23, %24
  %select.ptr.6 = select i1 %safe.5, i64* %22, i64* %25
  %26 = load i64, i64* %select.ptr.6, align 8
  %27 = lshr i64 %26, 16
  %28 = xor i64 %21, %27
  %29 = getelementptr inbounds i64, i64* %0, i64 2
  %30 = load i1, i1* %out.
  %31 = icmp slt i64 2, %N
  %32 = bitcast i64* %shadow to i64*
  %safe.7 = or i1 %30, %31
  %select.ptr.8 = select i1 %safe.7, i64* %29, i64* %32
  %33 = load i64, i64* %select.ptr.8, align 8
  %34 = shl i64 %33, 16
  %35 = xor i64 %28, %34
  %36 = getelementptr inbounds i64, i64* %0, i64 1
  %37 = load i1, i1* %out.
  %38 = icmp slt i64 1, %N
  %39 = bitcast i64* %shadow to i64*
  %safe.9 = or i1 %37, %38
  %select.ptr.10 = select i1 %safe.9, i64* %36, i64* %39
  %40 = load i64, i64* %select.ptr.10, align 8
  %41 = lshr i64 %40, 24
  %42 = xor i64 %35, %41
  %43 = getelementptr inbounds i64, i64* %0, i64 2
  %44 = load i1, i1* %out.
  %45 = icmp slt i64 2, %N
  %46 = bitcast i64* %shadow to i64*
  %safe.11 = or i1 %44, %45
  %select.ptr.12 = select i1 %safe.11, i64* %43, i64* %46
  %47 = load i64, i64* %select.ptr.12, align 8
  %48 = shl i64 %47, 8
  %49 = xor i64 %42, %48
  %50 = getelementptr inbounds i64, i64* %0, i64 2
  %51 = load i1, i1* %out.
  %52 = icmp slt i64 2, %N
  %53 = bitcast i64* %shadow to i64*
  %safe.13 = or i1 %51, %52
  %select.ptr.14 = select i1 %safe.13, i64* %50, i64* %53
  %54 = load i64, i64* %select.ptr.14, align 8
  %55 = lshr i64 %54, 8
  %56 = xor i64 %49, %55
  %57 = getelementptr inbounds i64, i64* %0, i64 0
  %58 = load i1, i1* %out.
  %59 = icmp slt i64 0, %N
  %60 = bitcast i64* %shadow to i64*
  %safe.15 = or i1 %58, %59
  %select.ptr.16 = select i1 %safe.15, i64* %57, i64* %60
  %61 = load i64, i64* %select.ptr.16, align 8
  %62 = shl i64 %61, 24
  %63 = xor i64 %56, %62
  %64 = getelementptr inbounds i64, i64* %0, i64 2
  %65 = load i1, i1* %out.
  %66 = icmp slt i64 2, %N
  %67 = bitcast i64* %shadow to i64*
  %safe.17 = or i1 %65, %66
  %select.ptr.18 = select i1 %safe.17, i64* %64, i64* %67
  %68 = load i64, i64* %select.ptr.18, align 8
  %69 = lshr i64 %68, 16
  %70 = xor i64 %63, %69
  %71 = getelementptr inbounds i64, i64* %0, i64 0
  %72 = load i1, i1* %out.
  %73 = icmp slt i64 0, %N
  %74 = bitcast i64* %shadow to i64*
  %safe.19 = or i1 %72, %73
  %select.ptr.20 = select i1 %safe.19, i64* %71, i64* %74
  %75 = load i64, i64* %select.ptr.20, align 8
  %76 = shl i64 %75, 16
  %77 = xor i64 %70, %76
  %78 = getelementptr inbounds i64, i64* %0, i64 2
  %79 = load i1, i1* %out.
  %80 = icmp slt i64 2, %N
  %81 = bitcast i64* %shadow to i64*
  %safe.21 = or i1 %79, %80
  %select.ptr.22 = select i1 %safe.21, i64* %78, i64* %81
  %82 = load i64, i64* %select.ptr.22, align 8
  %83 = lshr i64 %82, 24
  %84 = xor i64 %77, %83
  %85 = getelementptr inbounds i64, i64* %0, i64 0
  %86 = load i1, i1* %out.
  %87 = icmp slt i64 0, %N
  %88 = bitcast i64* %shadow to i64*
  %safe.23 = or i1 %86, %87
  %select.ptr.24 = select i1 %safe.23, i64* %85, i64* %88
  %89 = load i64, i64* %select.ptr.24, align 8
  %90 = shl i64 %89, 8
  %91 = xor i64 %84, %90
  %92 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %93 = load i1, i1* %out.
  %94 = icmp slt i64 0, 3
  %95 = bitcast i64* %shadow to i64*
  %safe.25 = or i1 %93, %94
  %select.ptr.26 = select i1 %safe.25, i64* %92, i64* %95
  %96 = load i64, i64* %92
  %select.val. = select i1 %93, i64 %91, i64 %96
  store i64 %select.val., i64* %select.ptr.26, align 16
  %97 = getelementptr inbounds i64, i64* %0, i64 1
  %98 = load i1, i1* %out.
  %99 = icmp slt i64 1, %N
  %100 = bitcast i64* %shadow to i64*
  %safe.27 = or i1 %98, %99
  %select.ptr.28 = select i1 %safe.27, i64* %97, i64* %100
  %101 = load i64, i64* %select.ptr.28, align 8
  %102 = getelementptr inbounds i64, i64* %0, i64 1
  %103 = load i1, i1* %out.
  %104 = icmp slt i64 1, %N
  %105 = bitcast i64* %shadow to i64*
  %safe.29 = or i1 %103, %104
  %select.ptr.30 = select i1 %safe.29, i64* %102, i64* %105
  %106 = load i64, i64* %select.ptr.30, align 8
  %107 = lshr i64 %106, 16
  %108 = xor i64 %101, %107
  %109 = getelementptr inbounds i64, i64* %0, i64 2
  %110 = load i1, i1* %out.
  %111 = icmp slt i64 2, %N
  %112 = bitcast i64* %shadow to i64*
  %safe.31 = or i1 %110, %111
  %select.ptr.32 = select i1 %safe.31, i64* %109, i64* %112
  %113 = load i64, i64* %select.ptr.32, align 8
  %114 = shl i64 %113, 16
  %115 = xor i64 %108, %114
  %116 = getelementptr inbounds i64, i64* %0, i64 2
  %117 = load i1, i1* %out.
  %118 = icmp slt i64 2, %N
  %119 = bitcast i64* %shadow to i64*
  %safe.33 = or i1 %117, %118
  %select.ptr.34 = select i1 %safe.33, i64* %116, i64* %119
  %120 = load i64, i64* %select.ptr.34, align 8
  %121 = lshr i64 %120, 16
  %122 = xor i64 %115, %121
  %123 = getelementptr inbounds i64, i64* %0, i64 0
  %124 = load i1, i1* %out.
  %125 = icmp slt i64 0, %N
  %126 = bitcast i64* %shadow to i64*
  %safe.35 = or i1 %124, %125
  %select.ptr.36 = select i1 %safe.35, i64* %123, i64* %126
  %127 = load i64, i64* %select.ptr.36, align 8
  %128 = shl i64 %127, 16
  %129 = xor i64 %122, %128
  %130 = getelementptr inbounds i64, i64* %0, i64 2
  %131 = load i1, i1* %out.
  %132 = icmp slt i64 2, %N
  %133 = bitcast i64* %shadow to i64*
  %safe.37 = or i1 %131, %132
  %select.ptr.38 = select i1 %safe.37, i64* %130, i64* %133
  %134 = load i64, i64* %select.ptr.38, align 8
  %135 = lshr i64 %134, 24
  %136 = xor i64 %129, %135
  %137 = getelementptr inbounds i64, i64* %0, i64 0
  %138 = load i1, i1* %out.
  %139 = icmp slt i64 0, %N
  %140 = bitcast i64* %shadow to i64*
  %safe.39 = or i1 %138, %139
  %select.ptr.40 = select i1 %safe.39, i64* %137, i64* %140
  %141 = load i64, i64* %select.ptr.40, align 8
  %142 = shl i64 %141, 8
  %143 = xor i64 %136, %142
  %144 = getelementptr inbounds i64, i64* %0, i64 0
  %145 = load i1, i1* %out.
  %146 = icmp slt i64 0, %N
  %147 = bitcast i64* %shadow to i64*
  %safe.41 = or i1 %145, %146
  %select.ptr.42 = select i1 %safe.41, i64* %144, i64* %147
  %148 = load i64, i64* %select.ptr.42, align 8
  %149 = lshr i64 %148, 8
  %150 = xor i64 %143, %149
  %151 = getelementptr inbounds i64, i64* %0, i64 1
  %152 = load i1, i1* %out.
  %153 = icmp slt i64 1, %N
  %154 = bitcast i64* %shadow to i64*
  %safe.43 = or i1 %152, %153
  %select.ptr.44 = select i1 %safe.43, i64* %151, i64* %154
  %155 = load i64, i64* %select.ptr.44, align 8
  %156 = shl i64 %155, 24
  %157 = xor i64 %150, %156
  %158 = getelementptr inbounds i64, i64* %0, i64 0
  %159 = load i1, i1* %out.
  %160 = icmp slt i64 0, %N
  %161 = bitcast i64* %shadow to i64*
  %safe.45 = or i1 %159, %160
  %select.ptr.46 = select i1 %safe.45, i64* %158, i64* %161
  %162 = load i64, i64* %select.ptr.46, align 8
  %163 = lshr i64 %162, 16
  %164 = xor i64 %157, %163
  %165 = getelementptr inbounds i64, i64* %0, i64 1
  %166 = load i1, i1* %out.
  %167 = icmp slt i64 1, %N
  %168 = bitcast i64* %shadow to i64*
  %safe.47 = or i1 %166, %167
  %select.ptr.48 = select i1 %safe.47, i64* %165, i64* %168
  %169 = load i64, i64* %select.ptr.48, align 8
  %170 = shl i64 %169, 16
  %171 = xor i64 %164, %170
  %172 = getelementptr inbounds i64, i64* %0, i64 0
  %173 = load i1, i1* %out.
  %174 = icmp slt i64 0, %N
  %175 = bitcast i64* %shadow to i64*
  %safe.49 = or i1 %173, %174
  %select.ptr.50 = select i1 %safe.49, i64* %172, i64* %175
  %176 = load i64, i64* %select.ptr.50, align 8
  %177 = lshr i64 %176, 24
  %178 = xor i64 %171, %177
  %179 = getelementptr inbounds i64, i64* %0, i64 1
  %180 = load i1, i1* %out.
  %181 = icmp slt i64 1, %N
  %182 = bitcast i64* %shadow to i64*
  %safe.51 = or i1 %180, %181
  %select.ptr.52 = select i1 %safe.51, i64* %179, i64* %182
  %183 = load i64, i64* %select.ptr.52, align 8
  %184 = shl i64 %183, 8
  %185 = xor i64 %178, %184
  %186 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %187 = load i1, i1* %out.
  %188 = icmp slt i64 1, 3
  %189 = bitcast i64* %shadow to i64*
  %safe.53 = or i1 %187, %188
  %select.ptr.54 = select i1 %safe.53, i64* %186, i64* %189
  %190 = load i64, i64* %186
  %select.val.55 = select i1 %187, i64 %185, i64 %190
  store i64 %select.val.55, i64* %select.ptr.54, align 8
  %191 = getelementptr inbounds i64, i64* %0, i64 2
  %192 = load i1, i1* %out.
  %193 = icmp slt i64 2, %N
  %194 = bitcast i64* %shadow to i64*
  %safe.56 = or i1 %192, %193
  %select.ptr.57 = select i1 %safe.56, i64* %191, i64* %194
  %195 = load i64, i64* %select.ptr.57, align 8
  %196 = getelementptr inbounds i64, i64* %0, i64 2
  %197 = load i1, i1* %out.
  %198 = icmp slt i64 2, %N
  %199 = bitcast i64* %shadow to i64*
  %safe.58 = or i1 %197, %198
  %select.ptr.59 = select i1 %safe.58, i64* %196, i64* %199
  %200 = load i64, i64* %select.ptr.59, align 8
  %201 = lshr i64 %200, 16
  %202 = xor i64 %195, %201
  %203 = getelementptr inbounds i64, i64* %0, i64 0
  %204 = load i1, i1* %out.
  %205 = icmp slt i64 0, %N
  %206 = bitcast i64* %shadow to i64*
  %safe.60 = or i1 %204, %205
  %select.ptr.61 = select i1 %safe.60, i64* %203, i64* %206
  %207 = load i64, i64* %select.ptr.61, align 8
  %208 = shl i64 %207, 16
  %209 = xor i64 %202, %208
  %210 = getelementptr inbounds i64, i64* %0, i64 0
  %211 = load i1, i1* %out.
  %212 = icmp slt i64 0, %N
  %213 = bitcast i64* %shadow to i64*
  %safe.62 = or i1 %211, %212
  %select.ptr.63 = select i1 %safe.62, i64* %210, i64* %213
  %214 = load i64, i64* %select.ptr.63, align 8
  %215 = lshr i64 %214, 16
  %216 = xor i64 %209, %215
  %217 = getelementptr inbounds i64, i64* %0, i64 1
  %218 = load i1, i1* %out.
  %219 = icmp slt i64 1, %N
  %220 = bitcast i64* %shadow to i64*
  %safe.64 = or i1 %218, %219
  %select.ptr.65 = select i1 %safe.64, i64* %217, i64* %220
  %221 = load i64, i64* %select.ptr.65, align 8
  %222 = shl i64 %221, 16
  %223 = xor i64 %216, %222
  %224 = getelementptr inbounds i64, i64* %0, i64 0
  %225 = load i1, i1* %out.
  %226 = icmp slt i64 0, %N
  %227 = bitcast i64* %shadow to i64*
  %safe.66 = or i1 %225, %226
  %select.ptr.67 = select i1 %safe.66, i64* %224, i64* %227
  %228 = load i64, i64* %select.ptr.67, align 8
  %229 = lshr i64 %228, 24
  %230 = xor i64 %223, %229
  %231 = getelementptr inbounds i64, i64* %0, i64 1
  %232 = load i1, i1* %out.
  %233 = icmp slt i64 1, %N
  %234 = bitcast i64* %shadow to i64*
  %safe.68 = or i1 %232, %233
  %select.ptr.69 = select i1 %safe.68, i64* %231, i64* %234
  %235 = load i64, i64* %select.ptr.69, align 8
  %236 = shl i64 %235, 8
  %237 = xor i64 %230, %236
  %238 = getelementptr inbounds i64, i64* %0, i64 1
  %239 = load i1, i1* %out.
  %240 = icmp slt i64 1, %N
  %241 = bitcast i64* %shadow to i64*
  %safe.70 = or i1 %239, %240
  %select.ptr.71 = select i1 %safe.70, i64* %238, i64* %241
  %242 = load i64, i64* %select.ptr.71, align 8
  %243 = lshr i64 %242, 8
  %244 = xor i64 %237, %243
  %245 = getelementptr inbounds i64, i64* %0, i64 2
  %246 = load i1, i1* %out.
  %247 = icmp slt i64 2, %N
  %248 = bitcast i64* %shadow to i64*
  %safe.72 = or i1 %246, %247
  %select.ptr.73 = select i1 %safe.72, i64* %245, i64* %248
  %249 = load i64, i64* %select.ptr.73, align 8
  %250 = shl i64 %249, 24
  %251 = xor i64 %244, %250
  %252 = getelementptr inbounds i64, i64* %0, i64 1
  %253 = load i1, i1* %out.
  %254 = icmp slt i64 1, %N
  %255 = bitcast i64* %shadow to i64*
  %safe.74 = or i1 %253, %254
  %select.ptr.75 = select i1 %safe.74, i64* %252, i64* %255
  %256 = load i64, i64* %select.ptr.75, align 8
  %257 = lshr i64 %256, 16
  %258 = xor i64 %251, %257
  %259 = getelementptr inbounds i64, i64* %0, i64 2
  %260 = load i1, i1* %out.
  %261 = icmp slt i64 2, %N
  %262 = bitcast i64* %shadow to i64*
  %safe.76 = or i1 %260, %261
  %select.ptr.77 = select i1 %safe.76, i64* %259, i64* %262
  %263 = load i64, i64* %select.ptr.77, align 8
  %264 = shl i64 %263, 16
  %265 = xor i64 %258, %264
  %266 = getelementptr inbounds i64, i64* %0, i64 1
  %267 = load i1, i1* %out.
  %268 = icmp slt i64 1, %N
  %269 = bitcast i64* %shadow to i64*
  %safe.78 = or i1 %267, %268
  %select.ptr.79 = select i1 %safe.78, i64* %266, i64* %269
  %270 = load i64, i64* %select.ptr.79, align 8
  %271 = lshr i64 %270, 24
  %272 = xor i64 %265, %271
  %273 = getelementptr inbounds i64, i64* %0, i64 2
  %274 = load i1, i1* %out.
  %275 = icmp slt i64 2, %N
  %276 = bitcast i64* %shadow to i64*
  %safe.80 = or i1 %274, %275
  %select.ptr.81 = select i1 %safe.80, i64* %273, i64* %276
  %277 = load i64, i64* %select.ptr.81, align 8
  %278 = shl i64 %277, 8
  %279 = xor i64 %272, %278
  %280 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %281 = load i1, i1* %out.
  %282 = icmp slt i64 2, 3
  %283 = bitcast i64* %shadow to i64*
  %safe.82 = or i1 %281, %282
  %select.ptr.83 = select i1 %safe.82, i64* %280, i64* %283
  %284 = load i64, i64* %280
  %select.val.84 = select i1 %281, i64 %279, i64 %284
  store i64 %select.val.84, i64* %select.ptr.83, align 16
  %285 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  %286 = load i1, i1* %out.
  %287 = icmp slt i64 0, 3
  %288 = bitcast i64* %shadow to i64*
  %safe.85 = or i1 %286, %287
  %select.ptr.86 = select i1 %safe.85, i64* %285, i64* %288
  %289 = load i64, i64* %select.ptr.86, align 16
  %290 = getelementptr inbounds i64, i64* %0, i64 0
  %291 = load i1, i1* %out.
  %292 = icmp slt i64 0, %N
  %293 = bitcast i64* %shadow to i64*
  %safe.87 = or i1 %291, %292
  %select.ptr.88 = select i1 %safe.87, i64* %290, i64* %293
  %294 = load i64, i64* %290
  %select.val.89 = select i1 %291, i64 %289, i64 %294
  store i64 %select.val.89, i64* %select.ptr.88, align 8
  %295 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 1
  %296 = load i1, i1* %out.
  %297 = icmp slt i64 1, 3
  %298 = bitcast i64* %shadow to i64*
  %safe.90 = or i1 %296, %297
  %select.ptr.91 = select i1 %safe.90, i64* %295, i64* %298
  %299 = load i64, i64* %select.ptr.91, align 8
  %300 = getelementptr inbounds i64, i64* %0, i64 1
  %301 = load i1, i1* %out.
  %302 = icmp slt i64 1, %N
  %303 = bitcast i64* %shadow to i64*
  %safe.92 = or i1 %301, %302
  %select.ptr.93 = select i1 %safe.92, i64* %300, i64* %303
  %304 = load i64, i64* %300
  %select.val.94 = select i1 %301, i64 %299, i64 %304
  store i64 %select.val.94, i64* %select.ptr.93, align 8
  %305 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 2
  %306 = load i1, i1* %out.
  %307 = icmp slt i64 2, 3
  %308 = bitcast i64* %shadow to i64*
  %safe.95 = or i1 %306, %307
  %select.ptr.96 = select i1 %safe.95, i64* %305, i64* %308
  %309 = load i64, i64* %select.ptr.96, align 16
  %310 = getelementptr inbounds i64, i64* %0, i64 2
  %311 = load i1, i1* %out.
  %312 = icmp slt i64 2, %N
  %313 = bitcast i64* %shadow to i64*
  %safe.97 = or i1 %311, %312
  %select.ptr.98 = select i1 %safe.97, i64* %310, i64* %313
  %314 = load i64, i64* %310
  %select.val.99 = select i1 %311, i64 %309, i64 %314
  store i64 %select.val.99, i64* %select.ptr.98, align 8
  ret void
}

define void @pi_1(i64* %0, i64 %N, i1 %.cond) {
  %shadow = alloca i64
  %out. = alloca i1
  store i1 %.cond, i1* %out.
  %2 = getelementptr inbounds i64, i64* %0, i64 0
  %3 = load i1, i1* %out.
  %4 = icmp slt i64 0, %N
  %5 = bitcast i64* %shadow to i64*
  %safe. = or i1 %3, %4
  %select.ptr. = select i1 %safe., i64* %2, i64* %5
  %6 = load i64, i64* %select.ptr., align 8
  %7 = lshr i64 %6, 10
  %8 = getelementptr inbounds i64, i64* %0, i64 0
  %9 = load i1, i1* %out.
  %10 = icmp slt i64 0, %N
  %11 = bitcast i64* %shadow to i64*
  %safe.1 = or i1 %9, %10
  %select.ptr.2 = select i1 %safe.1, i64* %8, i64* %11
  %12 = load i64, i64* %select.ptr.2, align 8
  %13 = shl i64 %12, 22
  %14 = xor i64 %7, %13
  %15 = getelementptr inbounds i64, i64* %0, i64 0
  %16 = load i1, i1* %out.
  %17 = icmp slt i64 0, %N
  %18 = bitcast i64* %shadow to i64*
  %safe.3 = or i1 %16, %17
  %select.ptr.4 = select i1 %safe.3, i64* %15, i64* %18
  %19 = load i64, i64* %15
  %select.val. = select i1 %16, i64 %14, i64 %19
  store i64 %select.val., i64* %select.ptr.4, align 8
  %20 = getelementptr inbounds i64, i64* %0, i64 2
  %21 = load i1, i1* %out.
  %22 = icmp slt i64 2, %N
  %23 = bitcast i64* %shadow to i64*
  %safe.5 = or i1 %21, %22
  %select.ptr.6 = select i1 %safe.5, i64* %20, i64* %23
  %24 = load i64, i64* %select.ptr.6, align 8
  %25 = shl i64 %24, 1
  %26 = getelementptr inbounds i64, i64* %0, i64 2
  %27 = load i1, i1* %out.
  %28 = icmp slt i64 2, %N
  %29 = bitcast i64* %shadow to i64*
  %safe.7 = or i1 %27, %28
  %select.ptr.8 = select i1 %safe.7, i64* %26, i64* %29
  %30 = load i64, i64* %select.ptr.8, align 8
  %31 = lshr i64 %30, 31
  %32 = xor i64 %25, %31
  %33 = getelementptr inbounds i64, i64* %0, i64 2
  %34 = load i1, i1* %out.
  %35 = icmp slt i64 2, %N
  %36 = bitcast i64* %shadow to i64*
  %safe.9 = or i1 %34, %35
  %select.ptr.10 = select i1 %safe.9, i64* %33, i64* %36
  %37 = load i64, i64* %33
  %select.val.11 = select i1 %34, i64 %32, i64 %37
  store i64 %select.val.11, i64* %select.ptr.10, align 8
  ret void
}

define void @pi_2(i64* %0, i64 %N, i1 %.cond) {
  %shadow = alloca i64
  %out. = alloca i1
  store i1 %.cond, i1* %out.
  %2 = getelementptr inbounds i64, i64* %0, i64 0
  %3 = load i1, i1* %out.
  %4 = icmp slt i64 0, %N
  %5 = bitcast i64* %shadow to i64*
  %safe. = or i1 %3, %4
  %select.ptr. = select i1 %safe., i64* %2, i64* %5
  %6 = load i64, i64* %select.ptr., align 8
  %7 = shl i64 %6, 1
  %8 = getelementptr inbounds i64, i64* %0, i64 0
  %9 = load i1, i1* %out.
  %10 = icmp slt i64 0, %N
  %11 = bitcast i64* %shadow to i64*
  %safe.1 = or i1 %9, %10
  %select.ptr.2 = select i1 %safe.1, i64* %8, i64* %11
  %12 = load i64, i64* %select.ptr.2, align 8
  %13 = lshr i64 %12, 31
  %14 = xor i64 %7, %13
  %15 = getelementptr inbounds i64, i64* %0, i64 0
  %16 = load i1, i1* %out.
  %17 = icmp slt i64 0, %N
  %18 = bitcast i64* %shadow to i64*
  %safe.3 = or i1 %16, %17
  %select.ptr.4 = select i1 %safe.3, i64* %15, i64* %18
  %19 = load i64, i64* %15
  %select.val. = select i1 %16, i64 %14, i64 %19
  store i64 %select.val., i64* %select.ptr.4, align 8
  %20 = getelementptr inbounds i64, i64* %0, i64 2
  %21 = load i1, i1* %out.
  %22 = icmp slt i64 2, %N
  %23 = bitcast i64* %shadow to i64*
  %safe.5 = or i1 %21, %22
  %select.ptr.6 = select i1 %safe.5, i64* %20, i64* %23
  %24 = load i64, i64* %select.ptr.6, align 8
  %25 = lshr i64 %24, 10
  %26 = getelementptr inbounds i64, i64* %0, i64 2
  %27 = load i1, i1* %out.
  %28 = icmp slt i64 2, %N
  %29 = bitcast i64* %shadow to i64*
  %safe.7 = or i1 %27, %28
  %select.ptr.8 = select i1 %safe.7, i64* %26, i64* %29
  %30 = load i64, i64* %select.ptr.8, align 8
  %31 = shl i64 %30, 22
  %32 = xor i64 %25, %31
  %33 = getelementptr inbounds i64, i64* %0, i64 2
  %34 = load i1, i1* %out.
  %35 = icmp slt i64 2, %N
  %36 = bitcast i64* %shadow to i64*
  %safe.9 = or i1 %34, %35
  %select.ptr.10 = select i1 %safe.9, i64* %33, i64* %36
  %37 = load i64, i64* %33
  %select.val.11 = select i1 %34, i64 %32, i64 %37
  store i64 %select.val.11, i64* %select.ptr.10, align 8
  ret void
}

define void @rho(i64* %0, i64 %N, i1 %.cond) {
  %shadow = alloca i64
  %out. = alloca i1
  store i1 %.cond, i1* %out.
  call void @theta(i64* %0, i64 %N, i1 %.cond)
  call void @pi_1(i64* %0, i64 %N, i1 %.cond)
  call void @gamma_(i64* %0, i64 %N, i1 %.cond)
  call void @pi_2(i64* %0, i64 %N, i1 %.cond)
  ret void
}

define void @rndcon_gen(i64 %0, i64* %1, i64 %N) {
  store i64 %0, i64* %1, align 8
  %3 = shl i64 %0, 1
  %4 = and i64 %3, 65536
  %5 = icmp ne i64 %4, 0
  %6 = xor i64 %3, 69649
  %spec.select = select i1 %5, i64 %6, i64 %3
  %7 = getelementptr inbounds i64, i64* %1, i64 1
  store i64 %spec.select, i64* %7, align 8
  %8 = shl i64 %spec.select, 1
  %9 = and i64 %8, 65536
  %10 = icmp ne i64 %9, 0
  %11 = xor i64 %8, 69649
  %spec.select.1 = select i1 %10, i64 %11, i64 %8
  %12 = getelementptr inbounds i64, i64* %1, i64 2
  store i64 %spec.select.1, i64* %12, align 8
  %13 = shl i64 %spec.select.1, 1
  %14 = and i64 %13, 65536
  %15 = icmp ne i64 %14, 0
  %16 = xor i64 %13, 69649
  %spec.select.2 = select i1 %15, i64 %16, i64 %13
  %17 = getelementptr inbounds i64, i64* %1, i64 3
  store i64 %spec.select.2, i64* %17, align 8
  %18 = shl i64 %spec.select.2, 1
  %19 = and i64 %18, 65536
  %20 = icmp ne i64 %19, 0
  %21 = xor i64 %18, 69649
  %spec.select.3 = select i1 %20, i64 %21, i64 %18
  %22 = getelementptr inbounds i64, i64* %1, i64 4
  store i64 %spec.select.3, i64* %22, align 8
  %23 = shl i64 %spec.select.3, 1
  %24 = and i64 %23, 65536
  %25 = icmp ne i64 %24, 0
  %26 = xor i64 %23, 69649
  %spec.select.4 = select i1 %25, i64 %26, i64 %23
  %27 = getelementptr inbounds i64, i64* %1, i64 5
  store i64 %spec.select.4, i64* %27, align 8
  %28 = shl i64 %spec.select.4, 1
  %29 = and i64 %28, 65536
  %30 = icmp ne i64 %29, 0
  %31 = xor i64 %28, 69649
  %spec.select.5 = select i1 %30, i64 %31, i64 %28
  %32 = getelementptr inbounds i64, i64* %1, i64 6
  store i64 %spec.select.5, i64* %32, align 8
  %33 = shl i64 %spec.select.5, 1
  %34 = and i64 %33, 65536
  %35 = icmp ne i64 %34, 0
  %36 = xor i64 %33, 69649
  %spec.select.6 = select i1 %35, i64 %36, i64 %33
  %37 = getelementptr inbounds i64, i64* %1, i64 7
  store i64 %spec.select.6, i64* %37, align 8
  %38 = shl i64 %spec.select.6, 1
  %39 = and i64 %38, 65536
  %40 = icmp ne i64 %39, 0
  %41 = xor i64 %38, 69649
  %spec.select.7 = select i1 %40, i64 %41, i64 %38
  %42 = getelementptr inbounds i64, i64* %1, i64 8
  store i64 %spec.select.7, i64* %42, align 8
  %43 = shl i64 %spec.select.7, 1
  %44 = and i64 %43, 65536
  %45 = icmp ne i64 %44, 0
  %46 = xor i64 %43, 69649
  %spec.select.8 = select i1 %45, i64 %46, i64 %43
  %47 = getelementptr inbounds i64, i64* %1, i64 9
  store i64 %spec.select.8, i64* %47, align 8
  %48 = shl i64 %spec.select.8, 1
  %49 = and i64 %48, 65536
  %50 = icmp ne i64 %49, 0
  %51 = xor i64 %48, 69649
  %spec.select.9 = select i1 %50, i64 %51, i64 %48
  %52 = getelementptr inbounds i64, i64* %1, i64 10
  store i64 %spec.select.9, i64* %52, align 8
  %53 = shl i64 %spec.select.9, 1
  %54 = and i64 %53, 65536
  %55 = icmp ne i64 %54, 0
  %56 = xor i64 %53, 69649
  %spec.select.10 = select i1 %55, i64 %56, i64 %53
  %57 = getelementptr inbounds i64, i64* %1, i64 11
  store i64 %spec.select.10, i64* %57, align 8
  %58 = shl i64 %spec.select.10, 1
  %59 = and i64 %58, 65536
  %60 = icmp ne i64 %59, 0
  %61 = xor i64 %58, 69649
  ret void
}

define void @encrypt(%struct.twy_ctx* %0, i64 %N, i64* %1, i64 %N1, i1 %.cond) {
  %shadow = alloca i64
  %out. = alloca i1
  store i1 %.cond, i1* %out.
  %3 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %4 = getelementptr inbounds [3 x i64], [3 x i64]* %3, i64 0, i64 0
  %5 = load i1, i1* %out.
  %6 = icmp slt i64 0, %N
  %7 = bitcast i64* %shadow to i64*
  %safe. = or i1 %5, %6
  %select.ptr. = select i1 %safe., i64* %4, i64* %7
  %8 = load i64, i64* %select.ptr., align 8
  %9 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %10 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 0
  %11 = load i1, i1* %out.
  %12 = icmp slt i64 0, %N
  %13 = bitcast i64* %shadow to i64*
  %safe.2 = or i1 %11, %12
  %select.ptr.3 = select i1 %safe.2, i64* %10, i64* %13
  %14 = load i64, i64* %select.ptr.3, align 8
  %15 = shl i64 %14, 16
  %16 = xor i64 %8, %15
  %17 = load i1, i1* %out.
  %18 = load i64, i64* %1, align 8
  %19 = xor i64 %18, %16
  %20 = load i1, i1* %out.
  %21 = load i64, i64* %1
  %select.val. = select i1 %20, i64 %19, i64 %21
  store i64 %select.val., i64* %1, align 8
  %22 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %23 = getelementptr inbounds [3 x i64], [3 x i64]* %22, i64 0, i64 1
  %24 = load i1, i1* %out.
  %25 = icmp slt i64 1, %N
  %26 = bitcast i64* %shadow to i64*
  %safe.4 = or i1 %24, %25
  %select.ptr.5 = select i1 %safe.4, i64* %23, i64* %26
  %27 = load i64, i64* %select.ptr.5, align 8
  %28 = getelementptr inbounds i64, i64* %1, i64 1
  %29 = load i1, i1* %out.
  %30 = icmp slt i64 1, %N1
  %31 = bitcast i64* %shadow to i64*
  %safe.6 = or i1 %29, %30
  %select.ptr.7 = select i1 %safe.6, i64* %28, i64* %31
  %32 = load i64, i64* %select.ptr.7, align 8
  %33 = xor i64 %32, %27
  %34 = load i1, i1* %out.
  %35 = icmp slt i64 1, %N1
  %36 = bitcast i64* %shadow to i64*
  %safe.8 = or i1 %34, %35
  %select.ptr.9 = select i1 %safe.8, i64* %28, i64* %36
  %37 = load i64, i64* %28
  %select.val.10 = select i1 %34, i64 %33, i64 %37
  store i64 %select.val.10, i64* %select.ptr.9, align 8
  %38 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %39 = getelementptr inbounds [3 x i64], [3 x i64]* %38, i64 0, i64 2
  %40 = load i1, i1* %out.
  %41 = icmp slt i64 2, %N
  %42 = bitcast i64* %shadow to i64*
  %safe.11 = or i1 %40, %41
  %select.ptr.12 = select i1 %safe.11, i64* %39, i64* %42
  %43 = load i64, i64* %select.ptr.12, align 8
  %44 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %45 = getelementptr inbounds [12 x i64], [12 x i64]* %44, i64 0, i64 0
  %46 = load i1, i1* %out.
  %47 = icmp slt i64 0, %N
  %48 = bitcast i64* %shadow to i64*
  %safe.13 = or i1 %46, %47
  %select.ptr.14 = select i1 %safe.13, i64* %45, i64* %48
  %49 = load i64, i64* %select.ptr.14, align 8
  %50 = xor i64 %43, %49
  %51 = getelementptr inbounds i64, i64* %1, i64 2
  %52 = load i1, i1* %out.
  %53 = icmp slt i64 2, %N1
  %54 = bitcast i64* %shadow to i64*
  %safe.15 = or i1 %52, %53
  %select.ptr.16 = select i1 %safe.15, i64* %51, i64* %54
  %55 = load i64, i64* %select.ptr.16, align 8
  %56 = xor i64 %55, %50
  %57 = load i1, i1* %out.
  %58 = icmp slt i64 2, %N1
  %59 = bitcast i64* %shadow to i64*
  %safe.17 = or i1 %57, %58
  %select.ptr.18 = select i1 %safe.17, i64* %51, i64* %59
  %60 = load i64, i64* %51
  %select.val.19 = select i1 %57, i64 %56, i64 %60
  store i64 %select.val.19, i64* %select.ptr.18, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %61 = load i1, i1* %out.
  %62 = icmp slt i64 0, %N
  %63 = bitcast i64* %shadow to i64*
  %safe.20 = or i1 %61, %62
  %select.ptr.21 = select i1 %safe.20, i64* %4, i64* %63
  %64 = load i64, i64* %select.ptr.21, align 8
  %65 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 1
  %66 = load i1, i1* %out.
  %67 = icmp slt i64 1, %N
  %68 = bitcast i64* %shadow to i64*
  %safe.22 = or i1 %66, %67
  %select.ptr.23 = select i1 %safe.22, i64* %65, i64* %68
  %69 = load i64, i64* %select.ptr.23, align 8
  %70 = shl i64 %69, 16
  %71 = xor i64 %64, %70
  %72 = load i1, i1* %out.
  %73 = load i64, i64* %1, align 8
  %74 = xor i64 %73, %71
  %75 = load i1, i1* %out.
  %76 = load i64, i64* %1
  %select.val.24 = select i1 %75, i64 %74, i64 %76
  store i64 %select.val.24, i64* %1, align 8
  %77 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %78 = getelementptr inbounds [3 x i64], [3 x i64]* %77, i64 0, i64 1
  %79 = load i1, i1* %out.
  %80 = icmp slt i64 1, %N
  %81 = bitcast i64* %shadow to i64*
  %safe.25 = or i1 %79, %80
  %select.ptr.26 = select i1 %safe.25, i64* %78, i64* %81
  %82 = load i64, i64* %select.ptr.26, align 8
  %83 = getelementptr inbounds i64, i64* %1, i64 1
  %84 = load i1, i1* %out.
  %85 = icmp slt i64 1, %N1
  %86 = bitcast i64* %shadow to i64*
  %safe.27 = or i1 %84, %85
  %select.ptr.28 = select i1 %safe.27, i64* %83, i64* %86
  %87 = load i64, i64* %select.ptr.28, align 8
  %88 = xor i64 %87, %82
  %89 = load i1, i1* %out.
  %90 = icmp slt i64 1, %N1
  %91 = bitcast i64* %shadow to i64*
  %safe.29 = or i1 %89, %90
  %select.ptr.30 = select i1 %safe.29, i64* %83, i64* %91
  %92 = load i64, i64* %83
  %select.val.31 = select i1 %89, i64 %88, i64 %92
  store i64 %select.val.31, i64* %select.ptr.30, align 8
  %93 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %94 = getelementptr inbounds [3 x i64], [3 x i64]* %93, i64 0, i64 2
  %95 = load i1, i1* %out.
  %96 = icmp slt i64 2, %N
  %97 = bitcast i64* %shadow to i64*
  %safe.32 = or i1 %95, %96
  %select.ptr.33 = select i1 %safe.32, i64* %94, i64* %97
  %98 = load i64, i64* %select.ptr.33, align 8
  %99 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %100 = getelementptr inbounds [12 x i64], [12 x i64]* %99, i64 0, i64 1
  %101 = load i1, i1* %out.
  %102 = icmp slt i64 1, %N
  %103 = bitcast i64* %shadow to i64*
  %safe.34 = or i1 %101, %102
  %select.ptr.35 = select i1 %safe.34, i64* %100, i64* %103
  %104 = load i64, i64* %select.ptr.35, align 8
  %105 = xor i64 %98, %104
  %106 = getelementptr inbounds i64, i64* %1, i64 2
  %107 = load i1, i1* %out.
  %108 = icmp slt i64 2, %N1
  %109 = bitcast i64* %shadow to i64*
  %safe.36 = or i1 %107, %108
  %select.ptr.37 = select i1 %safe.36, i64* %106, i64* %109
  %110 = load i64, i64* %select.ptr.37, align 8
  %111 = xor i64 %110, %105
  %112 = load i1, i1* %out.
  %113 = icmp slt i64 2, %N1
  %114 = bitcast i64* %shadow to i64*
  %safe.38 = or i1 %112, %113
  %select.ptr.39 = select i1 %safe.38, i64* %106, i64* %114
  %115 = load i64, i64* %106
  %select.val.40 = select i1 %112, i64 %111, i64 %115
  store i64 %select.val.40, i64* %select.ptr.39, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %116 = load i1, i1* %out.
  %117 = icmp slt i64 0, %N
  %118 = bitcast i64* %shadow to i64*
  %safe.41 = or i1 %116, %117
  %select.ptr.42 = select i1 %safe.41, i64* %4, i64* %118
  %119 = load i64, i64* %select.ptr.42, align 8
  %120 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 2
  %121 = load i1, i1* %out.
  %122 = icmp slt i64 2, %N
  %123 = bitcast i64* %shadow to i64*
  %safe.43 = or i1 %121, %122
  %select.ptr.44 = select i1 %safe.43, i64* %120, i64* %123
  %124 = load i64, i64* %select.ptr.44, align 8
  %125 = shl i64 %124, 16
  %126 = xor i64 %119, %125
  %127 = load i1, i1* %out.
  %128 = load i64, i64* %1, align 8
  %129 = xor i64 %128, %126
  %130 = load i1, i1* %out.
  %131 = load i64, i64* %1
  %select.val.45 = select i1 %130, i64 %129, i64 %131
  store i64 %select.val.45, i64* %1, align 8
  %132 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %133 = getelementptr inbounds [3 x i64], [3 x i64]* %132, i64 0, i64 1
  %134 = load i1, i1* %out.
  %135 = icmp slt i64 1, %N
  %136 = bitcast i64* %shadow to i64*
  %safe.46 = or i1 %134, %135
  %select.ptr.47 = select i1 %safe.46, i64* %133, i64* %136
  %137 = load i64, i64* %select.ptr.47, align 8
  %138 = getelementptr inbounds i64, i64* %1, i64 1
  %139 = load i1, i1* %out.
  %140 = icmp slt i64 1, %N1
  %141 = bitcast i64* %shadow to i64*
  %safe.48 = or i1 %139, %140
  %select.ptr.49 = select i1 %safe.48, i64* %138, i64* %141
  %142 = load i64, i64* %select.ptr.49, align 8
  %143 = xor i64 %142, %137
  %144 = load i1, i1* %out.
  %145 = icmp slt i64 1, %N1
  %146 = bitcast i64* %shadow to i64*
  %safe.50 = or i1 %144, %145
  %select.ptr.51 = select i1 %safe.50, i64* %138, i64* %146
  %147 = load i64, i64* %138
  %select.val.52 = select i1 %144, i64 %143, i64 %147
  store i64 %select.val.52, i64* %select.ptr.51, align 8
  %148 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %149 = getelementptr inbounds [3 x i64], [3 x i64]* %148, i64 0, i64 2
  %150 = load i1, i1* %out.
  %151 = icmp slt i64 2, %N
  %152 = bitcast i64* %shadow to i64*
  %safe.53 = or i1 %150, %151
  %select.ptr.54 = select i1 %safe.53, i64* %149, i64* %152
  %153 = load i64, i64* %select.ptr.54, align 8
  %154 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %155 = getelementptr inbounds [12 x i64], [12 x i64]* %154, i64 0, i64 2
  %156 = load i1, i1* %out.
  %157 = icmp slt i64 2, %N
  %158 = bitcast i64* %shadow to i64*
  %safe.55 = or i1 %156, %157
  %select.ptr.56 = select i1 %safe.55, i64* %155, i64* %158
  %159 = load i64, i64* %select.ptr.56, align 8
  %160 = xor i64 %153, %159
  %161 = getelementptr inbounds i64, i64* %1, i64 2
  %162 = load i1, i1* %out.
  %163 = icmp slt i64 2, %N1
  %164 = bitcast i64* %shadow to i64*
  %safe.57 = or i1 %162, %163
  %select.ptr.58 = select i1 %safe.57, i64* %161, i64* %164
  %165 = load i64, i64* %select.ptr.58, align 8
  %166 = xor i64 %165, %160
  %167 = load i1, i1* %out.
  %168 = icmp slt i64 2, %N1
  %169 = bitcast i64* %shadow to i64*
  %safe.59 = or i1 %167, %168
  %select.ptr.60 = select i1 %safe.59, i64* %161, i64* %169
  %170 = load i64, i64* %161
  %select.val.61 = select i1 %167, i64 %166, i64 %170
  store i64 %select.val.61, i64* %select.ptr.60, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %171 = load i1, i1* %out.
  %172 = icmp slt i64 0, %N
  %173 = bitcast i64* %shadow to i64*
  %safe.62 = or i1 %171, %172
  %select.ptr.63 = select i1 %safe.62, i64* %4, i64* %173
  %174 = load i64, i64* %select.ptr.63, align 8
  %175 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 3
  %176 = load i1, i1* %out.
  %177 = icmp slt i64 3, %N
  %178 = bitcast i64* %shadow to i64*
  %safe.64 = or i1 %176, %177
  %select.ptr.65 = select i1 %safe.64, i64* %175, i64* %178
  %179 = load i64, i64* %select.ptr.65, align 8
  %180 = shl i64 %179, 16
  %181 = xor i64 %174, %180
  %182 = load i1, i1* %out.
  %183 = load i64, i64* %1, align 8
  %184 = xor i64 %183, %181
  %185 = load i1, i1* %out.
  %186 = load i64, i64* %1
  %select.val.66 = select i1 %185, i64 %184, i64 %186
  store i64 %select.val.66, i64* %1, align 8
  %187 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %188 = getelementptr inbounds [3 x i64], [3 x i64]* %187, i64 0, i64 1
  %189 = load i1, i1* %out.
  %190 = icmp slt i64 1, %N
  %191 = bitcast i64* %shadow to i64*
  %safe.67 = or i1 %189, %190
  %select.ptr.68 = select i1 %safe.67, i64* %188, i64* %191
  %192 = load i64, i64* %select.ptr.68, align 8
  %193 = getelementptr inbounds i64, i64* %1, i64 1
  %194 = load i1, i1* %out.
  %195 = icmp slt i64 1, %N1
  %196 = bitcast i64* %shadow to i64*
  %safe.69 = or i1 %194, %195
  %select.ptr.70 = select i1 %safe.69, i64* %193, i64* %196
  %197 = load i64, i64* %select.ptr.70, align 8
  %198 = xor i64 %197, %192
  %199 = load i1, i1* %out.
  %200 = icmp slt i64 1, %N1
  %201 = bitcast i64* %shadow to i64*
  %safe.71 = or i1 %199, %200
  %select.ptr.72 = select i1 %safe.71, i64* %193, i64* %201
  %202 = load i64, i64* %193
  %select.val.73 = select i1 %199, i64 %198, i64 %202
  store i64 %select.val.73, i64* %select.ptr.72, align 8
  %203 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %204 = getelementptr inbounds [3 x i64], [3 x i64]* %203, i64 0, i64 2
  %205 = load i1, i1* %out.
  %206 = icmp slt i64 2, %N
  %207 = bitcast i64* %shadow to i64*
  %safe.74 = or i1 %205, %206
  %select.ptr.75 = select i1 %safe.74, i64* %204, i64* %207
  %208 = load i64, i64* %select.ptr.75, align 8
  %209 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %210 = getelementptr inbounds [12 x i64], [12 x i64]* %209, i64 0, i64 3
  %211 = load i1, i1* %out.
  %212 = icmp slt i64 3, %N
  %213 = bitcast i64* %shadow to i64*
  %safe.76 = or i1 %211, %212
  %select.ptr.77 = select i1 %safe.76, i64* %210, i64* %213
  %214 = load i64, i64* %select.ptr.77, align 8
  %215 = xor i64 %208, %214
  %216 = getelementptr inbounds i64, i64* %1, i64 2
  %217 = load i1, i1* %out.
  %218 = icmp slt i64 2, %N1
  %219 = bitcast i64* %shadow to i64*
  %safe.78 = or i1 %217, %218
  %select.ptr.79 = select i1 %safe.78, i64* %216, i64* %219
  %220 = load i64, i64* %select.ptr.79, align 8
  %221 = xor i64 %220, %215
  %222 = load i1, i1* %out.
  %223 = icmp slt i64 2, %N1
  %224 = bitcast i64* %shadow to i64*
  %safe.80 = or i1 %222, %223
  %select.ptr.81 = select i1 %safe.80, i64* %216, i64* %224
  %225 = load i64, i64* %216
  %select.val.82 = select i1 %222, i64 %221, i64 %225
  store i64 %select.val.82, i64* %select.ptr.81, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %226 = load i1, i1* %out.
  %227 = icmp slt i64 0, %N
  %228 = bitcast i64* %shadow to i64*
  %safe.83 = or i1 %226, %227
  %select.ptr.84 = select i1 %safe.83, i64* %4, i64* %228
  %229 = load i64, i64* %select.ptr.84, align 8
  %230 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 4
  %231 = load i1, i1* %out.
  %232 = icmp slt i64 4, %N
  %233 = bitcast i64* %shadow to i64*
  %safe.85 = or i1 %231, %232
  %select.ptr.86 = select i1 %safe.85, i64* %230, i64* %233
  %234 = load i64, i64* %select.ptr.86, align 8
  %235 = shl i64 %234, 16
  %236 = xor i64 %229, %235
  %237 = load i1, i1* %out.
  %238 = load i64, i64* %1, align 8
  %239 = xor i64 %238, %236
  %240 = load i1, i1* %out.
  %241 = load i64, i64* %1
  %select.val.87 = select i1 %240, i64 %239, i64 %241
  store i64 %select.val.87, i64* %1, align 8
  %242 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %243 = getelementptr inbounds [3 x i64], [3 x i64]* %242, i64 0, i64 1
  %244 = load i1, i1* %out.
  %245 = icmp slt i64 1, %N
  %246 = bitcast i64* %shadow to i64*
  %safe.88 = or i1 %244, %245
  %select.ptr.89 = select i1 %safe.88, i64* %243, i64* %246
  %247 = load i64, i64* %select.ptr.89, align 8
  %248 = getelementptr inbounds i64, i64* %1, i64 1
  %249 = load i1, i1* %out.
  %250 = icmp slt i64 1, %N1
  %251 = bitcast i64* %shadow to i64*
  %safe.90 = or i1 %249, %250
  %select.ptr.91 = select i1 %safe.90, i64* %248, i64* %251
  %252 = load i64, i64* %select.ptr.91, align 8
  %253 = xor i64 %252, %247
  %254 = load i1, i1* %out.
  %255 = icmp slt i64 1, %N1
  %256 = bitcast i64* %shadow to i64*
  %safe.92 = or i1 %254, %255
  %select.ptr.93 = select i1 %safe.92, i64* %248, i64* %256
  %257 = load i64, i64* %248
  %select.val.94 = select i1 %254, i64 %253, i64 %257
  store i64 %select.val.94, i64* %select.ptr.93, align 8
  %258 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %259 = getelementptr inbounds [3 x i64], [3 x i64]* %258, i64 0, i64 2
  %260 = load i1, i1* %out.
  %261 = icmp slt i64 2, %N
  %262 = bitcast i64* %shadow to i64*
  %safe.95 = or i1 %260, %261
  %select.ptr.96 = select i1 %safe.95, i64* %259, i64* %262
  %263 = load i64, i64* %select.ptr.96, align 8
  %264 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %265 = getelementptr inbounds [12 x i64], [12 x i64]* %264, i64 0, i64 4
  %266 = load i1, i1* %out.
  %267 = icmp slt i64 4, %N
  %268 = bitcast i64* %shadow to i64*
  %safe.97 = or i1 %266, %267
  %select.ptr.98 = select i1 %safe.97, i64* %265, i64* %268
  %269 = load i64, i64* %select.ptr.98, align 8
  %270 = xor i64 %263, %269
  %271 = getelementptr inbounds i64, i64* %1, i64 2
  %272 = load i1, i1* %out.
  %273 = icmp slt i64 2, %N1
  %274 = bitcast i64* %shadow to i64*
  %safe.99 = or i1 %272, %273
  %select.ptr.100 = select i1 %safe.99, i64* %271, i64* %274
  %275 = load i64, i64* %select.ptr.100, align 8
  %276 = xor i64 %275, %270
  %277 = load i1, i1* %out.
  %278 = icmp slt i64 2, %N1
  %279 = bitcast i64* %shadow to i64*
  %safe.101 = or i1 %277, %278
  %select.ptr.102 = select i1 %safe.101, i64* %271, i64* %279
  %280 = load i64, i64* %271
  %select.val.103 = select i1 %277, i64 %276, i64 %280
  store i64 %select.val.103, i64* %select.ptr.102, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %281 = load i1, i1* %out.
  %282 = icmp slt i64 0, %N
  %283 = bitcast i64* %shadow to i64*
  %safe.104 = or i1 %281, %282
  %select.ptr.105 = select i1 %safe.104, i64* %4, i64* %283
  %284 = load i64, i64* %select.ptr.105, align 8
  %285 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 5
  %286 = load i1, i1* %out.
  %287 = icmp slt i64 5, %N
  %288 = bitcast i64* %shadow to i64*
  %safe.106 = or i1 %286, %287
  %select.ptr.107 = select i1 %safe.106, i64* %285, i64* %288
  %289 = load i64, i64* %select.ptr.107, align 8
  %290 = shl i64 %289, 16
  %291 = xor i64 %284, %290
  %292 = load i1, i1* %out.
  %293 = load i64, i64* %1, align 8
  %294 = xor i64 %293, %291
  %295 = load i1, i1* %out.
  %296 = load i64, i64* %1
  %select.val.108 = select i1 %295, i64 %294, i64 %296
  store i64 %select.val.108, i64* %1, align 8
  %297 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %298 = getelementptr inbounds [3 x i64], [3 x i64]* %297, i64 0, i64 1
  %299 = load i1, i1* %out.
  %300 = icmp slt i64 1, %N
  %301 = bitcast i64* %shadow to i64*
  %safe.109 = or i1 %299, %300
  %select.ptr.110 = select i1 %safe.109, i64* %298, i64* %301
  %302 = load i64, i64* %select.ptr.110, align 8
  %303 = getelementptr inbounds i64, i64* %1, i64 1
  %304 = load i1, i1* %out.
  %305 = icmp slt i64 1, %N1
  %306 = bitcast i64* %shadow to i64*
  %safe.111 = or i1 %304, %305
  %select.ptr.112 = select i1 %safe.111, i64* %303, i64* %306
  %307 = load i64, i64* %select.ptr.112, align 8
  %308 = xor i64 %307, %302
  %309 = load i1, i1* %out.
  %310 = icmp slt i64 1, %N1
  %311 = bitcast i64* %shadow to i64*
  %safe.113 = or i1 %309, %310
  %select.ptr.114 = select i1 %safe.113, i64* %303, i64* %311
  %312 = load i64, i64* %303
  %select.val.115 = select i1 %309, i64 %308, i64 %312
  store i64 %select.val.115, i64* %select.ptr.114, align 8
  %313 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %314 = getelementptr inbounds [3 x i64], [3 x i64]* %313, i64 0, i64 2
  %315 = load i1, i1* %out.
  %316 = icmp slt i64 2, %N
  %317 = bitcast i64* %shadow to i64*
  %safe.116 = or i1 %315, %316
  %select.ptr.117 = select i1 %safe.116, i64* %314, i64* %317
  %318 = load i64, i64* %select.ptr.117, align 8
  %319 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %320 = getelementptr inbounds [12 x i64], [12 x i64]* %319, i64 0, i64 5
  %321 = load i1, i1* %out.
  %322 = icmp slt i64 5, %N
  %323 = bitcast i64* %shadow to i64*
  %safe.118 = or i1 %321, %322
  %select.ptr.119 = select i1 %safe.118, i64* %320, i64* %323
  %324 = load i64, i64* %select.ptr.119, align 8
  %325 = xor i64 %318, %324
  %326 = getelementptr inbounds i64, i64* %1, i64 2
  %327 = load i1, i1* %out.
  %328 = icmp slt i64 2, %N1
  %329 = bitcast i64* %shadow to i64*
  %safe.120 = or i1 %327, %328
  %select.ptr.121 = select i1 %safe.120, i64* %326, i64* %329
  %330 = load i64, i64* %select.ptr.121, align 8
  %331 = xor i64 %330, %325
  %332 = load i1, i1* %out.
  %333 = icmp slt i64 2, %N1
  %334 = bitcast i64* %shadow to i64*
  %safe.122 = or i1 %332, %333
  %select.ptr.123 = select i1 %safe.122, i64* %326, i64* %334
  %335 = load i64, i64* %326
  %select.val.124 = select i1 %332, i64 %331, i64 %335
  store i64 %select.val.124, i64* %select.ptr.123, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %336 = load i1, i1* %out.
  %337 = icmp slt i64 0, %N
  %338 = bitcast i64* %shadow to i64*
  %safe.125 = or i1 %336, %337
  %select.ptr.126 = select i1 %safe.125, i64* %4, i64* %338
  %339 = load i64, i64* %select.ptr.126, align 8
  %340 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 6
  %341 = load i1, i1* %out.
  %342 = icmp slt i64 6, %N
  %343 = bitcast i64* %shadow to i64*
  %safe.127 = or i1 %341, %342
  %select.ptr.128 = select i1 %safe.127, i64* %340, i64* %343
  %344 = load i64, i64* %select.ptr.128, align 8
  %345 = shl i64 %344, 16
  %346 = xor i64 %339, %345
  %347 = load i1, i1* %out.
  %348 = load i64, i64* %1, align 8
  %349 = xor i64 %348, %346
  %350 = load i1, i1* %out.
  %351 = load i64, i64* %1
  %select.val.129 = select i1 %350, i64 %349, i64 %351
  store i64 %select.val.129, i64* %1, align 8
  %352 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %353 = getelementptr inbounds [3 x i64], [3 x i64]* %352, i64 0, i64 1
  %354 = load i1, i1* %out.
  %355 = icmp slt i64 1, %N
  %356 = bitcast i64* %shadow to i64*
  %safe.130 = or i1 %354, %355
  %select.ptr.131 = select i1 %safe.130, i64* %353, i64* %356
  %357 = load i64, i64* %select.ptr.131, align 8
  %358 = getelementptr inbounds i64, i64* %1, i64 1
  %359 = load i1, i1* %out.
  %360 = icmp slt i64 1, %N1
  %361 = bitcast i64* %shadow to i64*
  %safe.132 = or i1 %359, %360
  %select.ptr.133 = select i1 %safe.132, i64* %358, i64* %361
  %362 = load i64, i64* %select.ptr.133, align 8
  %363 = xor i64 %362, %357
  %364 = load i1, i1* %out.
  %365 = icmp slt i64 1, %N1
  %366 = bitcast i64* %shadow to i64*
  %safe.134 = or i1 %364, %365
  %select.ptr.135 = select i1 %safe.134, i64* %358, i64* %366
  %367 = load i64, i64* %358
  %select.val.136 = select i1 %364, i64 %363, i64 %367
  store i64 %select.val.136, i64* %select.ptr.135, align 8
  %368 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %369 = getelementptr inbounds [3 x i64], [3 x i64]* %368, i64 0, i64 2
  %370 = load i1, i1* %out.
  %371 = icmp slt i64 2, %N
  %372 = bitcast i64* %shadow to i64*
  %safe.137 = or i1 %370, %371
  %select.ptr.138 = select i1 %safe.137, i64* %369, i64* %372
  %373 = load i64, i64* %select.ptr.138, align 8
  %374 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %375 = getelementptr inbounds [12 x i64], [12 x i64]* %374, i64 0, i64 6
  %376 = load i1, i1* %out.
  %377 = icmp slt i64 6, %N
  %378 = bitcast i64* %shadow to i64*
  %safe.139 = or i1 %376, %377
  %select.ptr.140 = select i1 %safe.139, i64* %375, i64* %378
  %379 = load i64, i64* %select.ptr.140, align 8
  %380 = xor i64 %373, %379
  %381 = getelementptr inbounds i64, i64* %1, i64 2
  %382 = load i1, i1* %out.
  %383 = icmp slt i64 2, %N1
  %384 = bitcast i64* %shadow to i64*
  %safe.141 = or i1 %382, %383
  %select.ptr.142 = select i1 %safe.141, i64* %381, i64* %384
  %385 = load i64, i64* %select.ptr.142, align 8
  %386 = xor i64 %385, %380
  %387 = load i1, i1* %out.
  %388 = icmp slt i64 2, %N1
  %389 = bitcast i64* %shadow to i64*
  %safe.143 = or i1 %387, %388
  %select.ptr.144 = select i1 %safe.143, i64* %381, i64* %389
  %390 = load i64, i64* %381
  %select.val.145 = select i1 %387, i64 %386, i64 %390
  store i64 %select.val.145, i64* %select.ptr.144, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %391 = load i1, i1* %out.
  %392 = icmp slt i64 0, %N
  %393 = bitcast i64* %shadow to i64*
  %safe.146 = or i1 %391, %392
  %select.ptr.147 = select i1 %safe.146, i64* %4, i64* %393
  %394 = load i64, i64* %select.ptr.147, align 8
  %395 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 7
  %396 = load i1, i1* %out.
  %397 = icmp slt i64 7, %N
  %398 = bitcast i64* %shadow to i64*
  %safe.148 = or i1 %396, %397
  %select.ptr.149 = select i1 %safe.148, i64* %395, i64* %398
  %399 = load i64, i64* %select.ptr.149, align 8
  %400 = shl i64 %399, 16
  %401 = xor i64 %394, %400
  %402 = load i1, i1* %out.
  %403 = load i64, i64* %1, align 8
  %404 = xor i64 %403, %401
  %405 = load i1, i1* %out.
  %406 = load i64, i64* %1
  %select.val.150 = select i1 %405, i64 %404, i64 %406
  store i64 %select.val.150, i64* %1, align 8
  %407 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %408 = getelementptr inbounds [3 x i64], [3 x i64]* %407, i64 0, i64 1
  %409 = load i1, i1* %out.
  %410 = icmp slt i64 1, %N
  %411 = bitcast i64* %shadow to i64*
  %safe.151 = or i1 %409, %410
  %select.ptr.152 = select i1 %safe.151, i64* %408, i64* %411
  %412 = load i64, i64* %select.ptr.152, align 8
  %413 = getelementptr inbounds i64, i64* %1, i64 1
  %414 = load i1, i1* %out.
  %415 = icmp slt i64 1, %N1
  %416 = bitcast i64* %shadow to i64*
  %safe.153 = or i1 %414, %415
  %select.ptr.154 = select i1 %safe.153, i64* %413, i64* %416
  %417 = load i64, i64* %select.ptr.154, align 8
  %418 = xor i64 %417, %412
  %419 = load i1, i1* %out.
  %420 = icmp slt i64 1, %N1
  %421 = bitcast i64* %shadow to i64*
  %safe.155 = or i1 %419, %420
  %select.ptr.156 = select i1 %safe.155, i64* %413, i64* %421
  %422 = load i64, i64* %413
  %select.val.157 = select i1 %419, i64 %418, i64 %422
  store i64 %select.val.157, i64* %select.ptr.156, align 8
  %423 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %424 = getelementptr inbounds [3 x i64], [3 x i64]* %423, i64 0, i64 2
  %425 = load i1, i1* %out.
  %426 = icmp slt i64 2, %N
  %427 = bitcast i64* %shadow to i64*
  %safe.158 = or i1 %425, %426
  %select.ptr.159 = select i1 %safe.158, i64* %424, i64* %427
  %428 = load i64, i64* %select.ptr.159, align 8
  %429 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %430 = getelementptr inbounds [12 x i64], [12 x i64]* %429, i64 0, i64 7
  %431 = load i1, i1* %out.
  %432 = icmp slt i64 7, %N
  %433 = bitcast i64* %shadow to i64*
  %safe.160 = or i1 %431, %432
  %select.ptr.161 = select i1 %safe.160, i64* %430, i64* %433
  %434 = load i64, i64* %select.ptr.161, align 8
  %435 = xor i64 %428, %434
  %436 = getelementptr inbounds i64, i64* %1, i64 2
  %437 = load i1, i1* %out.
  %438 = icmp slt i64 2, %N1
  %439 = bitcast i64* %shadow to i64*
  %safe.162 = or i1 %437, %438
  %select.ptr.163 = select i1 %safe.162, i64* %436, i64* %439
  %440 = load i64, i64* %select.ptr.163, align 8
  %441 = xor i64 %440, %435
  %442 = load i1, i1* %out.
  %443 = icmp slt i64 2, %N1
  %444 = bitcast i64* %shadow to i64*
  %safe.164 = or i1 %442, %443
  %select.ptr.165 = select i1 %safe.164, i64* %436, i64* %444
  %445 = load i64, i64* %436
  %select.val.166 = select i1 %442, i64 %441, i64 %445
  store i64 %select.val.166, i64* %select.ptr.165, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %446 = load i1, i1* %out.
  %447 = icmp slt i64 0, %N
  %448 = bitcast i64* %shadow to i64*
  %safe.167 = or i1 %446, %447
  %select.ptr.168 = select i1 %safe.167, i64* %4, i64* %448
  %449 = load i64, i64* %select.ptr.168, align 8
  %450 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 8
  %451 = load i1, i1* %out.
  %452 = icmp slt i64 8, %N
  %453 = bitcast i64* %shadow to i64*
  %safe.169 = or i1 %451, %452
  %select.ptr.170 = select i1 %safe.169, i64* %450, i64* %453
  %454 = load i64, i64* %select.ptr.170, align 8
  %455 = shl i64 %454, 16
  %456 = xor i64 %449, %455
  %457 = load i1, i1* %out.
  %458 = load i64, i64* %1, align 8
  %459 = xor i64 %458, %456
  %460 = load i1, i1* %out.
  %461 = load i64, i64* %1
  %select.val.171 = select i1 %460, i64 %459, i64 %461
  store i64 %select.val.171, i64* %1, align 8
  %462 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %463 = getelementptr inbounds [3 x i64], [3 x i64]* %462, i64 0, i64 1
  %464 = load i1, i1* %out.
  %465 = icmp slt i64 1, %N
  %466 = bitcast i64* %shadow to i64*
  %safe.172 = or i1 %464, %465
  %select.ptr.173 = select i1 %safe.172, i64* %463, i64* %466
  %467 = load i64, i64* %select.ptr.173, align 8
  %468 = getelementptr inbounds i64, i64* %1, i64 1
  %469 = load i1, i1* %out.
  %470 = icmp slt i64 1, %N1
  %471 = bitcast i64* %shadow to i64*
  %safe.174 = or i1 %469, %470
  %select.ptr.175 = select i1 %safe.174, i64* %468, i64* %471
  %472 = load i64, i64* %select.ptr.175, align 8
  %473 = xor i64 %472, %467
  %474 = load i1, i1* %out.
  %475 = icmp slt i64 1, %N1
  %476 = bitcast i64* %shadow to i64*
  %safe.176 = or i1 %474, %475
  %select.ptr.177 = select i1 %safe.176, i64* %468, i64* %476
  %477 = load i64, i64* %468
  %select.val.178 = select i1 %474, i64 %473, i64 %477
  store i64 %select.val.178, i64* %select.ptr.177, align 8
  %478 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %479 = getelementptr inbounds [3 x i64], [3 x i64]* %478, i64 0, i64 2
  %480 = load i1, i1* %out.
  %481 = icmp slt i64 2, %N
  %482 = bitcast i64* %shadow to i64*
  %safe.179 = or i1 %480, %481
  %select.ptr.180 = select i1 %safe.179, i64* %479, i64* %482
  %483 = load i64, i64* %select.ptr.180, align 8
  %484 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %485 = getelementptr inbounds [12 x i64], [12 x i64]* %484, i64 0, i64 8
  %486 = load i1, i1* %out.
  %487 = icmp slt i64 8, %N
  %488 = bitcast i64* %shadow to i64*
  %safe.181 = or i1 %486, %487
  %select.ptr.182 = select i1 %safe.181, i64* %485, i64* %488
  %489 = load i64, i64* %select.ptr.182, align 8
  %490 = xor i64 %483, %489
  %491 = getelementptr inbounds i64, i64* %1, i64 2
  %492 = load i1, i1* %out.
  %493 = icmp slt i64 2, %N1
  %494 = bitcast i64* %shadow to i64*
  %safe.183 = or i1 %492, %493
  %select.ptr.184 = select i1 %safe.183, i64* %491, i64* %494
  %495 = load i64, i64* %select.ptr.184, align 8
  %496 = xor i64 %495, %490
  %497 = load i1, i1* %out.
  %498 = icmp slt i64 2, %N1
  %499 = bitcast i64* %shadow to i64*
  %safe.185 = or i1 %497, %498
  %select.ptr.186 = select i1 %safe.185, i64* %491, i64* %499
  %500 = load i64, i64* %491
  %select.val.187 = select i1 %497, i64 %496, i64 %500
  store i64 %select.val.187, i64* %select.ptr.186, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %501 = load i1, i1* %out.
  %502 = icmp slt i64 0, %N
  %503 = bitcast i64* %shadow to i64*
  %safe.188 = or i1 %501, %502
  %select.ptr.189 = select i1 %safe.188, i64* %4, i64* %503
  %504 = load i64, i64* %select.ptr.189, align 8
  %505 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 9
  %506 = load i1, i1* %out.
  %507 = icmp slt i64 9, %N
  %508 = bitcast i64* %shadow to i64*
  %safe.190 = or i1 %506, %507
  %select.ptr.191 = select i1 %safe.190, i64* %505, i64* %508
  %509 = load i64, i64* %select.ptr.191, align 8
  %510 = shl i64 %509, 16
  %511 = xor i64 %504, %510
  %512 = load i1, i1* %out.
  %513 = load i64, i64* %1, align 8
  %514 = xor i64 %513, %511
  %515 = load i1, i1* %out.
  %516 = load i64, i64* %1
  %select.val.192 = select i1 %515, i64 %514, i64 %516
  store i64 %select.val.192, i64* %1, align 8
  %517 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %518 = getelementptr inbounds [3 x i64], [3 x i64]* %517, i64 0, i64 1
  %519 = load i1, i1* %out.
  %520 = icmp slt i64 1, %N
  %521 = bitcast i64* %shadow to i64*
  %safe.193 = or i1 %519, %520
  %select.ptr.194 = select i1 %safe.193, i64* %518, i64* %521
  %522 = load i64, i64* %select.ptr.194, align 8
  %523 = getelementptr inbounds i64, i64* %1, i64 1
  %524 = load i1, i1* %out.
  %525 = icmp slt i64 1, %N1
  %526 = bitcast i64* %shadow to i64*
  %safe.195 = or i1 %524, %525
  %select.ptr.196 = select i1 %safe.195, i64* %523, i64* %526
  %527 = load i64, i64* %select.ptr.196, align 8
  %528 = xor i64 %527, %522
  %529 = load i1, i1* %out.
  %530 = icmp slt i64 1, %N1
  %531 = bitcast i64* %shadow to i64*
  %safe.197 = or i1 %529, %530
  %select.ptr.198 = select i1 %safe.197, i64* %523, i64* %531
  %532 = load i64, i64* %523
  %select.val.199 = select i1 %529, i64 %528, i64 %532
  store i64 %select.val.199, i64* %select.ptr.198, align 8
  %533 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %534 = getelementptr inbounds [3 x i64], [3 x i64]* %533, i64 0, i64 2
  %535 = load i1, i1* %out.
  %536 = icmp slt i64 2, %N
  %537 = bitcast i64* %shadow to i64*
  %safe.200 = or i1 %535, %536
  %select.ptr.201 = select i1 %safe.200, i64* %534, i64* %537
  %538 = load i64, i64* %select.ptr.201, align 8
  %539 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %540 = getelementptr inbounds [12 x i64], [12 x i64]* %539, i64 0, i64 9
  %541 = load i1, i1* %out.
  %542 = icmp slt i64 9, %N
  %543 = bitcast i64* %shadow to i64*
  %safe.202 = or i1 %541, %542
  %select.ptr.203 = select i1 %safe.202, i64* %540, i64* %543
  %544 = load i64, i64* %select.ptr.203, align 8
  %545 = xor i64 %538, %544
  %546 = getelementptr inbounds i64, i64* %1, i64 2
  %547 = load i1, i1* %out.
  %548 = icmp slt i64 2, %N1
  %549 = bitcast i64* %shadow to i64*
  %safe.204 = or i1 %547, %548
  %select.ptr.205 = select i1 %safe.204, i64* %546, i64* %549
  %550 = load i64, i64* %select.ptr.205, align 8
  %551 = xor i64 %550, %545
  %552 = load i1, i1* %out.
  %553 = icmp slt i64 2, %N1
  %554 = bitcast i64* %shadow to i64*
  %safe.206 = or i1 %552, %553
  %select.ptr.207 = select i1 %safe.206, i64* %546, i64* %554
  %555 = load i64, i64* %546
  %select.val.208 = select i1 %552, i64 %551, i64 %555
  store i64 %select.val.208, i64* %select.ptr.207, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %556 = load i1, i1* %out.
  %557 = icmp slt i64 0, %N
  %558 = bitcast i64* %shadow to i64*
  %safe.209 = or i1 %556, %557
  %select.ptr.210 = select i1 %safe.209, i64* %4, i64* %558
  %559 = load i64, i64* %select.ptr.210, align 8
  %560 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 10
  %561 = load i1, i1* %out.
  %562 = icmp slt i64 10, %N
  %563 = bitcast i64* %shadow to i64*
  %safe.211 = or i1 %561, %562
  %select.ptr.212 = select i1 %safe.211, i64* %560, i64* %563
  %564 = load i64, i64* %select.ptr.212, align 8
  %565 = shl i64 %564, 16
  %566 = xor i64 %559, %565
  %567 = load i1, i1* %out.
  %568 = load i64, i64* %1, align 8
  %569 = xor i64 %568, %566
  %570 = load i1, i1* %out.
  %571 = load i64, i64* %1
  %select.val.213 = select i1 %570, i64 %569, i64 %571
  store i64 %select.val.213, i64* %1, align 8
  %572 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %573 = getelementptr inbounds [3 x i64], [3 x i64]* %572, i64 0, i64 1
  %574 = load i1, i1* %out.
  %575 = icmp slt i64 1, %N
  %576 = bitcast i64* %shadow to i64*
  %safe.214 = or i1 %574, %575
  %select.ptr.215 = select i1 %safe.214, i64* %573, i64* %576
  %577 = load i64, i64* %select.ptr.215, align 8
  %578 = getelementptr inbounds i64, i64* %1, i64 1
  %579 = load i1, i1* %out.
  %580 = icmp slt i64 1, %N1
  %581 = bitcast i64* %shadow to i64*
  %safe.216 = or i1 %579, %580
  %select.ptr.217 = select i1 %safe.216, i64* %578, i64* %581
  %582 = load i64, i64* %select.ptr.217, align 8
  %583 = xor i64 %582, %577
  %584 = load i1, i1* %out.
  %585 = icmp slt i64 1, %N1
  %586 = bitcast i64* %shadow to i64*
  %safe.218 = or i1 %584, %585
  %select.ptr.219 = select i1 %safe.218, i64* %578, i64* %586
  %587 = load i64, i64* %578
  %select.val.220 = select i1 %584, i64 %583, i64 %587
  store i64 %select.val.220, i64* %select.ptr.219, align 8
  %588 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %589 = getelementptr inbounds [3 x i64], [3 x i64]* %588, i64 0, i64 2
  %590 = load i1, i1* %out.
  %591 = icmp slt i64 2, %N
  %592 = bitcast i64* %shadow to i64*
  %safe.221 = or i1 %590, %591
  %select.ptr.222 = select i1 %safe.221, i64* %589, i64* %592
  %593 = load i64, i64* %select.ptr.222, align 8
  %594 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %595 = getelementptr inbounds [12 x i64], [12 x i64]* %594, i64 0, i64 10
  %596 = load i1, i1* %out.
  %597 = icmp slt i64 10, %N
  %598 = bitcast i64* %shadow to i64*
  %safe.223 = or i1 %596, %597
  %select.ptr.224 = select i1 %safe.223, i64* %595, i64* %598
  %599 = load i64, i64* %select.ptr.224, align 8
  %600 = xor i64 %593, %599
  %601 = getelementptr inbounds i64, i64* %1, i64 2
  %602 = load i1, i1* %out.
  %603 = icmp slt i64 2, %N1
  %604 = bitcast i64* %shadow to i64*
  %safe.225 = or i1 %602, %603
  %select.ptr.226 = select i1 %safe.225, i64* %601, i64* %604
  %605 = load i64, i64* %select.ptr.226, align 8
  %606 = xor i64 %605, %600
  %607 = load i1, i1* %out.
  %608 = icmp slt i64 2, %N1
  %609 = bitcast i64* %shadow to i64*
  %safe.227 = or i1 %607, %608
  %select.ptr.228 = select i1 %safe.227, i64* %601, i64* %609
  %610 = load i64, i64* %601
  %select.val.229 = select i1 %607, i64 %606, i64 %610
  store i64 %select.val.229, i64* %select.ptr.228, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %611 = load i1, i1* %out.
  %612 = icmp slt i64 0, %N
  %613 = bitcast i64* %shadow to i64*
  %safe.230 = or i1 %611, %612
  %select.ptr.231 = select i1 %safe.230, i64* %4, i64* %613
  %614 = load i64, i64* %select.ptr.231, align 8
  %615 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 11
  %616 = load i1, i1* %out.
  %617 = icmp slt i64 11, %N
  %618 = bitcast i64* %shadow to i64*
  %safe.232 = or i1 %616, %617
  %select.ptr.233 = select i1 %safe.232, i64* %615, i64* %618
  %619 = load i64, i64* %select.ptr.233, align 8
  %620 = shl i64 %619, 16
  %621 = xor i64 %614, %620
  %622 = load i1, i1* %out.
  %623 = load i64, i64* %1, align 8
  %624 = xor i64 %623, %621
  %625 = load i1, i1* %out.
  %626 = load i64, i64* %1
  %select.val.234 = select i1 %625, i64 %624, i64 %626
  store i64 %select.val.234, i64* %1, align 8
  %627 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %628 = getelementptr inbounds [3 x i64], [3 x i64]* %627, i64 0, i64 1
  %629 = load i1, i1* %out.
  %630 = icmp slt i64 1, %N
  %631 = bitcast i64* %shadow to i64*
  %safe.235 = or i1 %629, %630
  %select.ptr.236 = select i1 %safe.235, i64* %628, i64* %631
  %632 = load i64, i64* %select.ptr.236, align 8
  %633 = getelementptr inbounds i64, i64* %1, i64 1
  %634 = load i1, i1* %out.
  %635 = icmp slt i64 1, %N1
  %636 = bitcast i64* %shadow to i64*
  %safe.237 = or i1 %634, %635
  %select.ptr.238 = select i1 %safe.237, i64* %633, i64* %636
  %637 = load i64, i64* %select.ptr.238, align 8
  %638 = xor i64 %637, %632
  %639 = load i1, i1* %out.
  %640 = icmp slt i64 1, %N1
  %641 = bitcast i64* %shadow to i64*
  %safe.239 = or i1 %639, %640
  %select.ptr.240 = select i1 %safe.239, i64* %633, i64* %641
  %642 = load i64, i64* %633
  %select.val.241 = select i1 %639, i64 %638, i64 %642
  store i64 %select.val.241, i64* %select.ptr.240, align 8
  %643 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %644 = getelementptr inbounds [3 x i64], [3 x i64]* %643, i64 0, i64 2
  %645 = load i1, i1* %out.
  %646 = icmp slt i64 2, %N
  %647 = bitcast i64* %shadow to i64*
  %safe.242 = or i1 %645, %646
  %select.ptr.243 = select i1 %safe.242, i64* %644, i64* %647
  %648 = load i64, i64* %select.ptr.243, align 8
  %649 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %650 = getelementptr inbounds [12 x i64], [12 x i64]* %649, i64 0, i64 11
  %651 = load i1, i1* %out.
  %652 = icmp slt i64 11, %N
  %653 = bitcast i64* %shadow to i64*
  %safe.244 = or i1 %651, %652
  %select.ptr.245 = select i1 %safe.244, i64* %650, i64* %653
  %654 = load i64, i64* %select.ptr.245, align 8
  %655 = xor i64 %648, %654
  %656 = getelementptr inbounds i64, i64* %1, i64 2
  %657 = load i1, i1* %out.
  %658 = icmp slt i64 2, %N1
  %659 = bitcast i64* %shadow to i64*
  %safe.246 = or i1 %657, %658
  %select.ptr.247 = select i1 %safe.246, i64* %656, i64* %659
  %660 = load i64, i64* %select.ptr.247, align 8
  %661 = xor i64 %660, %655
  %662 = load i1, i1* %out.
  %663 = icmp slt i64 2, %N1
  %664 = bitcast i64* %shadow to i64*
  %safe.248 = or i1 %662, %663
  %select.ptr.249 = select i1 %safe.248, i64* %656, i64* %664
  %665 = load i64, i64* %656
  %select.val.250 = select i1 %662, i64 %661, i64 %665
  store i64 %select.val.250, i64* %select.ptr.249, align 8
  call void @theta(i64* %1, i64 %N1, i1 %.cond)
  ret void
}

define void @decrypt(%struct.twy_ctx* %0, i64 %N, i64* %1, i64 %N1, i1 %.cond) {
  %shadow = alloca i64
  %out. = alloca i1
  store i1 %.cond, i1* %out.
  call void @mu(i64* %1, i64 %N1, i1 %.cond)
  %3 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %4 = getelementptr inbounds [3 x i64], [3 x i64]* %3, i64 0, i64 0
  %5 = load i1, i1* %out.
  %6 = icmp slt i64 0, %N
  %7 = bitcast i64* %shadow to i64*
  %safe. = or i1 %5, %6
  %select.ptr. = select i1 %safe., i64* %4, i64* %7
  %8 = load i64, i64* %select.ptr., align 8
  %9 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %10 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 0
  %11 = load i1, i1* %out.
  %12 = icmp slt i64 0, %N
  %13 = bitcast i64* %shadow to i64*
  %safe.2 = or i1 %11, %12
  %select.ptr.3 = select i1 %safe.2, i64* %10, i64* %13
  %14 = load i64, i64* %select.ptr.3, align 8
  %15 = shl i64 %14, 16
  %16 = xor i64 %8, %15
  %17 = load i1, i1* %out.
  %18 = load i64, i64* %1, align 8
  %19 = xor i64 %18, %16
  %20 = load i1, i1* %out.
  %21 = load i64, i64* %1
  %select.val. = select i1 %20, i64 %19, i64 %21
  store i64 %select.val., i64* %1, align 8
  %22 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %23 = getelementptr inbounds [3 x i64], [3 x i64]* %22, i64 0, i64 1
  %24 = load i1, i1* %out.
  %25 = icmp slt i64 1, %N
  %26 = bitcast i64* %shadow to i64*
  %safe.4 = or i1 %24, %25
  %select.ptr.5 = select i1 %safe.4, i64* %23, i64* %26
  %27 = load i64, i64* %select.ptr.5, align 8
  %28 = getelementptr inbounds i64, i64* %1, i64 1
  %29 = load i1, i1* %out.
  %30 = icmp slt i64 1, %N1
  %31 = bitcast i64* %shadow to i64*
  %safe.6 = or i1 %29, %30
  %select.ptr.7 = select i1 %safe.6, i64* %28, i64* %31
  %32 = load i64, i64* %select.ptr.7, align 8
  %33 = xor i64 %32, %27
  %34 = load i1, i1* %out.
  %35 = icmp slt i64 1, %N1
  %36 = bitcast i64* %shadow to i64*
  %safe.8 = or i1 %34, %35
  %select.ptr.9 = select i1 %safe.8, i64* %28, i64* %36
  %37 = load i64, i64* %28
  %select.val.10 = select i1 %34, i64 %33, i64 %37
  store i64 %select.val.10, i64* %select.ptr.9, align 8
  %38 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %39 = getelementptr inbounds [3 x i64], [3 x i64]* %38, i64 0, i64 2
  %40 = load i1, i1* %out.
  %41 = icmp slt i64 2, %N
  %42 = bitcast i64* %shadow to i64*
  %safe.11 = or i1 %40, %41
  %select.ptr.12 = select i1 %safe.11, i64* %39, i64* %42
  %43 = load i64, i64* %select.ptr.12, align 8
  %44 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %45 = getelementptr inbounds [12 x i64], [12 x i64]* %44, i64 0, i64 0
  %46 = load i1, i1* %out.
  %47 = icmp slt i64 0, %N
  %48 = bitcast i64* %shadow to i64*
  %safe.13 = or i1 %46, %47
  %select.ptr.14 = select i1 %safe.13, i64* %45, i64* %48
  %49 = load i64, i64* %select.ptr.14, align 8
  %50 = xor i64 %43, %49
  %51 = getelementptr inbounds i64, i64* %1, i64 2
  %52 = load i1, i1* %out.
  %53 = icmp slt i64 2, %N1
  %54 = bitcast i64* %shadow to i64*
  %safe.15 = or i1 %52, %53
  %select.ptr.16 = select i1 %safe.15, i64* %51, i64* %54
  %55 = load i64, i64* %select.ptr.16, align 8
  %56 = xor i64 %55, %50
  %57 = load i1, i1* %out.
  %58 = icmp slt i64 2, %N1
  %59 = bitcast i64* %shadow to i64*
  %safe.17 = or i1 %57, %58
  %select.ptr.18 = select i1 %safe.17, i64* %51, i64* %59
  %60 = load i64, i64* %51
  %select.val.19 = select i1 %57, i64 %56, i64 %60
  store i64 %select.val.19, i64* %select.ptr.18, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %61 = load i1, i1* %out.
  %62 = icmp slt i64 0, %N
  %63 = bitcast i64* %shadow to i64*
  %safe.20 = or i1 %61, %62
  %select.ptr.21 = select i1 %safe.20, i64* %4, i64* %63
  %64 = load i64, i64* %select.ptr.21, align 8
  %65 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 1
  %66 = load i1, i1* %out.
  %67 = icmp slt i64 1, %N
  %68 = bitcast i64* %shadow to i64*
  %safe.22 = or i1 %66, %67
  %select.ptr.23 = select i1 %safe.22, i64* %65, i64* %68
  %69 = load i64, i64* %select.ptr.23, align 8
  %70 = shl i64 %69, 16
  %71 = xor i64 %64, %70
  %72 = load i1, i1* %out.
  %73 = load i64, i64* %1, align 8
  %74 = xor i64 %73, %71
  %75 = load i1, i1* %out.
  %76 = load i64, i64* %1
  %select.val.24 = select i1 %75, i64 %74, i64 %76
  store i64 %select.val.24, i64* %1, align 8
  %77 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %78 = getelementptr inbounds [3 x i64], [3 x i64]* %77, i64 0, i64 1
  %79 = load i1, i1* %out.
  %80 = icmp slt i64 1, %N
  %81 = bitcast i64* %shadow to i64*
  %safe.25 = or i1 %79, %80
  %select.ptr.26 = select i1 %safe.25, i64* %78, i64* %81
  %82 = load i64, i64* %select.ptr.26, align 8
  %83 = getelementptr inbounds i64, i64* %1, i64 1
  %84 = load i1, i1* %out.
  %85 = icmp slt i64 1, %N1
  %86 = bitcast i64* %shadow to i64*
  %safe.27 = or i1 %84, %85
  %select.ptr.28 = select i1 %safe.27, i64* %83, i64* %86
  %87 = load i64, i64* %select.ptr.28, align 8
  %88 = xor i64 %87, %82
  %89 = load i1, i1* %out.
  %90 = icmp slt i64 1, %N1
  %91 = bitcast i64* %shadow to i64*
  %safe.29 = or i1 %89, %90
  %select.ptr.30 = select i1 %safe.29, i64* %83, i64* %91
  %92 = load i64, i64* %83
  %select.val.31 = select i1 %89, i64 %88, i64 %92
  store i64 %select.val.31, i64* %select.ptr.30, align 8
  %93 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %94 = getelementptr inbounds [3 x i64], [3 x i64]* %93, i64 0, i64 2
  %95 = load i1, i1* %out.
  %96 = icmp slt i64 2, %N
  %97 = bitcast i64* %shadow to i64*
  %safe.32 = or i1 %95, %96
  %select.ptr.33 = select i1 %safe.32, i64* %94, i64* %97
  %98 = load i64, i64* %select.ptr.33, align 8
  %99 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %100 = getelementptr inbounds [12 x i64], [12 x i64]* %99, i64 0, i64 1
  %101 = load i1, i1* %out.
  %102 = icmp slt i64 1, %N
  %103 = bitcast i64* %shadow to i64*
  %safe.34 = or i1 %101, %102
  %select.ptr.35 = select i1 %safe.34, i64* %100, i64* %103
  %104 = load i64, i64* %select.ptr.35, align 8
  %105 = xor i64 %98, %104
  %106 = getelementptr inbounds i64, i64* %1, i64 2
  %107 = load i1, i1* %out.
  %108 = icmp slt i64 2, %N1
  %109 = bitcast i64* %shadow to i64*
  %safe.36 = or i1 %107, %108
  %select.ptr.37 = select i1 %safe.36, i64* %106, i64* %109
  %110 = load i64, i64* %select.ptr.37, align 8
  %111 = xor i64 %110, %105
  %112 = load i1, i1* %out.
  %113 = icmp slt i64 2, %N1
  %114 = bitcast i64* %shadow to i64*
  %safe.38 = or i1 %112, %113
  %select.ptr.39 = select i1 %safe.38, i64* %106, i64* %114
  %115 = load i64, i64* %106
  %select.val.40 = select i1 %112, i64 %111, i64 %115
  store i64 %select.val.40, i64* %select.ptr.39, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %116 = load i1, i1* %out.
  %117 = icmp slt i64 0, %N
  %118 = bitcast i64* %shadow to i64*
  %safe.41 = or i1 %116, %117
  %select.ptr.42 = select i1 %safe.41, i64* %4, i64* %118
  %119 = load i64, i64* %select.ptr.42, align 8
  %120 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 2
  %121 = load i1, i1* %out.
  %122 = icmp slt i64 2, %N
  %123 = bitcast i64* %shadow to i64*
  %safe.43 = or i1 %121, %122
  %select.ptr.44 = select i1 %safe.43, i64* %120, i64* %123
  %124 = load i64, i64* %select.ptr.44, align 8
  %125 = shl i64 %124, 16
  %126 = xor i64 %119, %125
  %127 = load i1, i1* %out.
  %128 = load i64, i64* %1, align 8
  %129 = xor i64 %128, %126
  %130 = load i1, i1* %out.
  %131 = load i64, i64* %1
  %select.val.45 = select i1 %130, i64 %129, i64 %131
  store i64 %select.val.45, i64* %1, align 8
  %132 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %133 = getelementptr inbounds [3 x i64], [3 x i64]* %132, i64 0, i64 1
  %134 = load i1, i1* %out.
  %135 = icmp slt i64 1, %N
  %136 = bitcast i64* %shadow to i64*
  %safe.46 = or i1 %134, %135
  %select.ptr.47 = select i1 %safe.46, i64* %133, i64* %136
  %137 = load i64, i64* %select.ptr.47, align 8
  %138 = getelementptr inbounds i64, i64* %1, i64 1
  %139 = load i1, i1* %out.
  %140 = icmp slt i64 1, %N1
  %141 = bitcast i64* %shadow to i64*
  %safe.48 = or i1 %139, %140
  %select.ptr.49 = select i1 %safe.48, i64* %138, i64* %141
  %142 = load i64, i64* %select.ptr.49, align 8
  %143 = xor i64 %142, %137
  %144 = load i1, i1* %out.
  %145 = icmp slt i64 1, %N1
  %146 = bitcast i64* %shadow to i64*
  %safe.50 = or i1 %144, %145
  %select.ptr.51 = select i1 %safe.50, i64* %138, i64* %146
  %147 = load i64, i64* %138
  %select.val.52 = select i1 %144, i64 %143, i64 %147
  store i64 %select.val.52, i64* %select.ptr.51, align 8
  %148 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %149 = getelementptr inbounds [3 x i64], [3 x i64]* %148, i64 0, i64 2
  %150 = load i1, i1* %out.
  %151 = icmp slt i64 2, %N
  %152 = bitcast i64* %shadow to i64*
  %safe.53 = or i1 %150, %151
  %select.ptr.54 = select i1 %safe.53, i64* %149, i64* %152
  %153 = load i64, i64* %select.ptr.54, align 8
  %154 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %155 = getelementptr inbounds [12 x i64], [12 x i64]* %154, i64 0, i64 2
  %156 = load i1, i1* %out.
  %157 = icmp slt i64 2, %N
  %158 = bitcast i64* %shadow to i64*
  %safe.55 = or i1 %156, %157
  %select.ptr.56 = select i1 %safe.55, i64* %155, i64* %158
  %159 = load i64, i64* %select.ptr.56, align 8
  %160 = xor i64 %153, %159
  %161 = getelementptr inbounds i64, i64* %1, i64 2
  %162 = load i1, i1* %out.
  %163 = icmp slt i64 2, %N1
  %164 = bitcast i64* %shadow to i64*
  %safe.57 = or i1 %162, %163
  %select.ptr.58 = select i1 %safe.57, i64* %161, i64* %164
  %165 = load i64, i64* %select.ptr.58, align 8
  %166 = xor i64 %165, %160
  %167 = load i1, i1* %out.
  %168 = icmp slt i64 2, %N1
  %169 = bitcast i64* %shadow to i64*
  %safe.59 = or i1 %167, %168
  %select.ptr.60 = select i1 %safe.59, i64* %161, i64* %169
  %170 = load i64, i64* %161
  %select.val.61 = select i1 %167, i64 %166, i64 %170
  store i64 %select.val.61, i64* %select.ptr.60, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %171 = load i1, i1* %out.
  %172 = icmp slt i64 0, %N
  %173 = bitcast i64* %shadow to i64*
  %safe.62 = or i1 %171, %172
  %select.ptr.63 = select i1 %safe.62, i64* %4, i64* %173
  %174 = load i64, i64* %select.ptr.63, align 8
  %175 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 3
  %176 = load i1, i1* %out.
  %177 = icmp slt i64 3, %N
  %178 = bitcast i64* %shadow to i64*
  %safe.64 = or i1 %176, %177
  %select.ptr.65 = select i1 %safe.64, i64* %175, i64* %178
  %179 = load i64, i64* %select.ptr.65, align 8
  %180 = shl i64 %179, 16
  %181 = xor i64 %174, %180
  %182 = load i1, i1* %out.
  %183 = load i64, i64* %1, align 8
  %184 = xor i64 %183, %181
  %185 = load i1, i1* %out.
  %186 = load i64, i64* %1
  %select.val.66 = select i1 %185, i64 %184, i64 %186
  store i64 %select.val.66, i64* %1, align 8
  %187 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %188 = getelementptr inbounds [3 x i64], [3 x i64]* %187, i64 0, i64 1
  %189 = load i1, i1* %out.
  %190 = icmp slt i64 1, %N
  %191 = bitcast i64* %shadow to i64*
  %safe.67 = or i1 %189, %190
  %select.ptr.68 = select i1 %safe.67, i64* %188, i64* %191
  %192 = load i64, i64* %select.ptr.68, align 8
  %193 = getelementptr inbounds i64, i64* %1, i64 1
  %194 = load i1, i1* %out.
  %195 = icmp slt i64 1, %N1
  %196 = bitcast i64* %shadow to i64*
  %safe.69 = or i1 %194, %195
  %select.ptr.70 = select i1 %safe.69, i64* %193, i64* %196
  %197 = load i64, i64* %select.ptr.70, align 8
  %198 = xor i64 %197, %192
  %199 = load i1, i1* %out.
  %200 = icmp slt i64 1, %N1
  %201 = bitcast i64* %shadow to i64*
  %safe.71 = or i1 %199, %200
  %select.ptr.72 = select i1 %safe.71, i64* %193, i64* %201
  %202 = load i64, i64* %193
  %select.val.73 = select i1 %199, i64 %198, i64 %202
  store i64 %select.val.73, i64* %select.ptr.72, align 8
  %203 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %204 = getelementptr inbounds [3 x i64], [3 x i64]* %203, i64 0, i64 2
  %205 = load i1, i1* %out.
  %206 = icmp slt i64 2, %N
  %207 = bitcast i64* %shadow to i64*
  %safe.74 = or i1 %205, %206
  %select.ptr.75 = select i1 %safe.74, i64* %204, i64* %207
  %208 = load i64, i64* %select.ptr.75, align 8
  %209 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %210 = getelementptr inbounds [12 x i64], [12 x i64]* %209, i64 0, i64 3
  %211 = load i1, i1* %out.
  %212 = icmp slt i64 3, %N
  %213 = bitcast i64* %shadow to i64*
  %safe.76 = or i1 %211, %212
  %select.ptr.77 = select i1 %safe.76, i64* %210, i64* %213
  %214 = load i64, i64* %select.ptr.77, align 8
  %215 = xor i64 %208, %214
  %216 = getelementptr inbounds i64, i64* %1, i64 2
  %217 = load i1, i1* %out.
  %218 = icmp slt i64 2, %N1
  %219 = bitcast i64* %shadow to i64*
  %safe.78 = or i1 %217, %218
  %select.ptr.79 = select i1 %safe.78, i64* %216, i64* %219
  %220 = load i64, i64* %select.ptr.79, align 8
  %221 = xor i64 %220, %215
  %222 = load i1, i1* %out.
  %223 = icmp slt i64 2, %N1
  %224 = bitcast i64* %shadow to i64*
  %safe.80 = or i1 %222, %223
  %select.ptr.81 = select i1 %safe.80, i64* %216, i64* %224
  %225 = load i64, i64* %216
  %select.val.82 = select i1 %222, i64 %221, i64 %225
  store i64 %select.val.82, i64* %select.ptr.81, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %226 = load i1, i1* %out.
  %227 = icmp slt i64 0, %N
  %228 = bitcast i64* %shadow to i64*
  %safe.83 = or i1 %226, %227
  %select.ptr.84 = select i1 %safe.83, i64* %4, i64* %228
  %229 = load i64, i64* %select.ptr.84, align 8
  %230 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 4
  %231 = load i1, i1* %out.
  %232 = icmp slt i64 4, %N
  %233 = bitcast i64* %shadow to i64*
  %safe.85 = or i1 %231, %232
  %select.ptr.86 = select i1 %safe.85, i64* %230, i64* %233
  %234 = load i64, i64* %select.ptr.86, align 8
  %235 = shl i64 %234, 16
  %236 = xor i64 %229, %235
  %237 = load i1, i1* %out.
  %238 = load i64, i64* %1, align 8
  %239 = xor i64 %238, %236
  %240 = load i1, i1* %out.
  %241 = load i64, i64* %1
  %select.val.87 = select i1 %240, i64 %239, i64 %241
  store i64 %select.val.87, i64* %1, align 8
  %242 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %243 = getelementptr inbounds [3 x i64], [3 x i64]* %242, i64 0, i64 1
  %244 = load i1, i1* %out.
  %245 = icmp slt i64 1, %N
  %246 = bitcast i64* %shadow to i64*
  %safe.88 = or i1 %244, %245
  %select.ptr.89 = select i1 %safe.88, i64* %243, i64* %246
  %247 = load i64, i64* %select.ptr.89, align 8
  %248 = getelementptr inbounds i64, i64* %1, i64 1
  %249 = load i1, i1* %out.
  %250 = icmp slt i64 1, %N1
  %251 = bitcast i64* %shadow to i64*
  %safe.90 = or i1 %249, %250
  %select.ptr.91 = select i1 %safe.90, i64* %248, i64* %251
  %252 = load i64, i64* %select.ptr.91, align 8
  %253 = xor i64 %252, %247
  %254 = load i1, i1* %out.
  %255 = icmp slt i64 1, %N1
  %256 = bitcast i64* %shadow to i64*
  %safe.92 = or i1 %254, %255
  %select.ptr.93 = select i1 %safe.92, i64* %248, i64* %256
  %257 = load i64, i64* %248
  %select.val.94 = select i1 %254, i64 %253, i64 %257
  store i64 %select.val.94, i64* %select.ptr.93, align 8
  %258 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %259 = getelementptr inbounds [3 x i64], [3 x i64]* %258, i64 0, i64 2
  %260 = load i1, i1* %out.
  %261 = icmp slt i64 2, %N
  %262 = bitcast i64* %shadow to i64*
  %safe.95 = or i1 %260, %261
  %select.ptr.96 = select i1 %safe.95, i64* %259, i64* %262
  %263 = load i64, i64* %select.ptr.96, align 8
  %264 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %265 = getelementptr inbounds [12 x i64], [12 x i64]* %264, i64 0, i64 4
  %266 = load i1, i1* %out.
  %267 = icmp slt i64 4, %N
  %268 = bitcast i64* %shadow to i64*
  %safe.97 = or i1 %266, %267
  %select.ptr.98 = select i1 %safe.97, i64* %265, i64* %268
  %269 = load i64, i64* %select.ptr.98, align 8
  %270 = xor i64 %263, %269
  %271 = getelementptr inbounds i64, i64* %1, i64 2
  %272 = load i1, i1* %out.
  %273 = icmp slt i64 2, %N1
  %274 = bitcast i64* %shadow to i64*
  %safe.99 = or i1 %272, %273
  %select.ptr.100 = select i1 %safe.99, i64* %271, i64* %274
  %275 = load i64, i64* %select.ptr.100, align 8
  %276 = xor i64 %275, %270
  %277 = load i1, i1* %out.
  %278 = icmp slt i64 2, %N1
  %279 = bitcast i64* %shadow to i64*
  %safe.101 = or i1 %277, %278
  %select.ptr.102 = select i1 %safe.101, i64* %271, i64* %279
  %280 = load i64, i64* %271
  %select.val.103 = select i1 %277, i64 %276, i64 %280
  store i64 %select.val.103, i64* %select.ptr.102, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %281 = load i1, i1* %out.
  %282 = icmp slt i64 0, %N
  %283 = bitcast i64* %shadow to i64*
  %safe.104 = or i1 %281, %282
  %select.ptr.105 = select i1 %safe.104, i64* %4, i64* %283
  %284 = load i64, i64* %select.ptr.105, align 8
  %285 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 5
  %286 = load i1, i1* %out.
  %287 = icmp slt i64 5, %N
  %288 = bitcast i64* %shadow to i64*
  %safe.106 = or i1 %286, %287
  %select.ptr.107 = select i1 %safe.106, i64* %285, i64* %288
  %289 = load i64, i64* %select.ptr.107, align 8
  %290 = shl i64 %289, 16
  %291 = xor i64 %284, %290
  %292 = load i1, i1* %out.
  %293 = load i64, i64* %1, align 8
  %294 = xor i64 %293, %291
  %295 = load i1, i1* %out.
  %296 = load i64, i64* %1
  %select.val.108 = select i1 %295, i64 %294, i64 %296
  store i64 %select.val.108, i64* %1, align 8
  %297 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %298 = getelementptr inbounds [3 x i64], [3 x i64]* %297, i64 0, i64 1
  %299 = load i1, i1* %out.
  %300 = icmp slt i64 1, %N
  %301 = bitcast i64* %shadow to i64*
  %safe.109 = or i1 %299, %300
  %select.ptr.110 = select i1 %safe.109, i64* %298, i64* %301
  %302 = load i64, i64* %select.ptr.110, align 8
  %303 = getelementptr inbounds i64, i64* %1, i64 1
  %304 = load i1, i1* %out.
  %305 = icmp slt i64 1, %N1
  %306 = bitcast i64* %shadow to i64*
  %safe.111 = or i1 %304, %305
  %select.ptr.112 = select i1 %safe.111, i64* %303, i64* %306
  %307 = load i64, i64* %select.ptr.112, align 8
  %308 = xor i64 %307, %302
  %309 = load i1, i1* %out.
  %310 = icmp slt i64 1, %N1
  %311 = bitcast i64* %shadow to i64*
  %safe.113 = or i1 %309, %310
  %select.ptr.114 = select i1 %safe.113, i64* %303, i64* %311
  %312 = load i64, i64* %303
  %select.val.115 = select i1 %309, i64 %308, i64 %312
  store i64 %select.val.115, i64* %select.ptr.114, align 8
  %313 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %314 = getelementptr inbounds [3 x i64], [3 x i64]* %313, i64 0, i64 2
  %315 = load i1, i1* %out.
  %316 = icmp slt i64 2, %N
  %317 = bitcast i64* %shadow to i64*
  %safe.116 = or i1 %315, %316
  %select.ptr.117 = select i1 %safe.116, i64* %314, i64* %317
  %318 = load i64, i64* %select.ptr.117, align 8
  %319 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %320 = getelementptr inbounds [12 x i64], [12 x i64]* %319, i64 0, i64 5
  %321 = load i1, i1* %out.
  %322 = icmp slt i64 5, %N
  %323 = bitcast i64* %shadow to i64*
  %safe.118 = or i1 %321, %322
  %select.ptr.119 = select i1 %safe.118, i64* %320, i64* %323
  %324 = load i64, i64* %select.ptr.119, align 8
  %325 = xor i64 %318, %324
  %326 = getelementptr inbounds i64, i64* %1, i64 2
  %327 = load i1, i1* %out.
  %328 = icmp slt i64 2, %N1
  %329 = bitcast i64* %shadow to i64*
  %safe.120 = or i1 %327, %328
  %select.ptr.121 = select i1 %safe.120, i64* %326, i64* %329
  %330 = load i64, i64* %select.ptr.121, align 8
  %331 = xor i64 %330, %325
  %332 = load i1, i1* %out.
  %333 = icmp slt i64 2, %N1
  %334 = bitcast i64* %shadow to i64*
  %safe.122 = or i1 %332, %333
  %select.ptr.123 = select i1 %safe.122, i64* %326, i64* %334
  %335 = load i64, i64* %326
  %select.val.124 = select i1 %332, i64 %331, i64 %335
  store i64 %select.val.124, i64* %select.ptr.123, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %336 = load i1, i1* %out.
  %337 = icmp slt i64 0, %N
  %338 = bitcast i64* %shadow to i64*
  %safe.125 = or i1 %336, %337
  %select.ptr.126 = select i1 %safe.125, i64* %4, i64* %338
  %339 = load i64, i64* %select.ptr.126, align 8
  %340 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 6
  %341 = load i1, i1* %out.
  %342 = icmp slt i64 6, %N
  %343 = bitcast i64* %shadow to i64*
  %safe.127 = or i1 %341, %342
  %select.ptr.128 = select i1 %safe.127, i64* %340, i64* %343
  %344 = load i64, i64* %select.ptr.128, align 8
  %345 = shl i64 %344, 16
  %346 = xor i64 %339, %345
  %347 = load i1, i1* %out.
  %348 = load i64, i64* %1, align 8
  %349 = xor i64 %348, %346
  %350 = load i1, i1* %out.
  %351 = load i64, i64* %1
  %select.val.129 = select i1 %350, i64 %349, i64 %351
  store i64 %select.val.129, i64* %1, align 8
  %352 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %353 = getelementptr inbounds [3 x i64], [3 x i64]* %352, i64 0, i64 1
  %354 = load i1, i1* %out.
  %355 = icmp slt i64 1, %N
  %356 = bitcast i64* %shadow to i64*
  %safe.130 = or i1 %354, %355
  %select.ptr.131 = select i1 %safe.130, i64* %353, i64* %356
  %357 = load i64, i64* %select.ptr.131, align 8
  %358 = getelementptr inbounds i64, i64* %1, i64 1
  %359 = load i1, i1* %out.
  %360 = icmp slt i64 1, %N1
  %361 = bitcast i64* %shadow to i64*
  %safe.132 = or i1 %359, %360
  %select.ptr.133 = select i1 %safe.132, i64* %358, i64* %361
  %362 = load i64, i64* %select.ptr.133, align 8
  %363 = xor i64 %362, %357
  %364 = load i1, i1* %out.
  %365 = icmp slt i64 1, %N1
  %366 = bitcast i64* %shadow to i64*
  %safe.134 = or i1 %364, %365
  %select.ptr.135 = select i1 %safe.134, i64* %358, i64* %366
  %367 = load i64, i64* %358
  %select.val.136 = select i1 %364, i64 %363, i64 %367
  store i64 %select.val.136, i64* %select.ptr.135, align 8
  %368 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %369 = getelementptr inbounds [3 x i64], [3 x i64]* %368, i64 0, i64 2
  %370 = load i1, i1* %out.
  %371 = icmp slt i64 2, %N
  %372 = bitcast i64* %shadow to i64*
  %safe.137 = or i1 %370, %371
  %select.ptr.138 = select i1 %safe.137, i64* %369, i64* %372
  %373 = load i64, i64* %select.ptr.138, align 8
  %374 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %375 = getelementptr inbounds [12 x i64], [12 x i64]* %374, i64 0, i64 6
  %376 = load i1, i1* %out.
  %377 = icmp slt i64 6, %N
  %378 = bitcast i64* %shadow to i64*
  %safe.139 = or i1 %376, %377
  %select.ptr.140 = select i1 %safe.139, i64* %375, i64* %378
  %379 = load i64, i64* %select.ptr.140, align 8
  %380 = xor i64 %373, %379
  %381 = getelementptr inbounds i64, i64* %1, i64 2
  %382 = load i1, i1* %out.
  %383 = icmp slt i64 2, %N1
  %384 = bitcast i64* %shadow to i64*
  %safe.141 = or i1 %382, %383
  %select.ptr.142 = select i1 %safe.141, i64* %381, i64* %384
  %385 = load i64, i64* %select.ptr.142, align 8
  %386 = xor i64 %385, %380
  %387 = load i1, i1* %out.
  %388 = icmp slt i64 2, %N1
  %389 = bitcast i64* %shadow to i64*
  %safe.143 = or i1 %387, %388
  %select.ptr.144 = select i1 %safe.143, i64* %381, i64* %389
  %390 = load i64, i64* %381
  %select.val.145 = select i1 %387, i64 %386, i64 %390
  store i64 %select.val.145, i64* %select.ptr.144, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %391 = load i1, i1* %out.
  %392 = icmp slt i64 0, %N
  %393 = bitcast i64* %shadow to i64*
  %safe.146 = or i1 %391, %392
  %select.ptr.147 = select i1 %safe.146, i64* %4, i64* %393
  %394 = load i64, i64* %select.ptr.147, align 8
  %395 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 7
  %396 = load i1, i1* %out.
  %397 = icmp slt i64 7, %N
  %398 = bitcast i64* %shadow to i64*
  %safe.148 = or i1 %396, %397
  %select.ptr.149 = select i1 %safe.148, i64* %395, i64* %398
  %399 = load i64, i64* %select.ptr.149, align 8
  %400 = shl i64 %399, 16
  %401 = xor i64 %394, %400
  %402 = load i1, i1* %out.
  %403 = load i64, i64* %1, align 8
  %404 = xor i64 %403, %401
  %405 = load i1, i1* %out.
  %406 = load i64, i64* %1
  %select.val.150 = select i1 %405, i64 %404, i64 %406
  store i64 %select.val.150, i64* %1, align 8
  %407 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %408 = getelementptr inbounds [3 x i64], [3 x i64]* %407, i64 0, i64 1
  %409 = load i1, i1* %out.
  %410 = icmp slt i64 1, %N
  %411 = bitcast i64* %shadow to i64*
  %safe.151 = or i1 %409, %410
  %select.ptr.152 = select i1 %safe.151, i64* %408, i64* %411
  %412 = load i64, i64* %select.ptr.152, align 8
  %413 = getelementptr inbounds i64, i64* %1, i64 1
  %414 = load i1, i1* %out.
  %415 = icmp slt i64 1, %N1
  %416 = bitcast i64* %shadow to i64*
  %safe.153 = or i1 %414, %415
  %select.ptr.154 = select i1 %safe.153, i64* %413, i64* %416
  %417 = load i64, i64* %select.ptr.154, align 8
  %418 = xor i64 %417, %412
  %419 = load i1, i1* %out.
  %420 = icmp slt i64 1, %N1
  %421 = bitcast i64* %shadow to i64*
  %safe.155 = or i1 %419, %420
  %select.ptr.156 = select i1 %safe.155, i64* %413, i64* %421
  %422 = load i64, i64* %413
  %select.val.157 = select i1 %419, i64 %418, i64 %422
  store i64 %select.val.157, i64* %select.ptr.156, align 8
  %423 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %424 = getelementptr inbounds [3 x i64], [3 x i64]* %423, i64 0, i64 2
  %425 = load i1, i1* %out.
  %426 = icmp slt i64 2, %N
  %427 = bitcast i64* %shadow to i64*
  %safe.158 = or i1 %425, %426
  %select.ptr.159 = select i1 %safe.158, i64* %424, i64* %427
  %428 = load i64, i64* %select.ptr.159, align 8
  %429 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %430 = getelementptr inbounds [12 x i64], [12 x i64]* %429, i64 0, i64 7
  %431 = load i1, i1* %out.
  %432 = icmp slt i64 7, %N
  %433 = bitcast i64* %shadow to i64*
  %safe.160 = or i1 %431, %432
  %select.ptr.161 = select i1 %safe.160, i64* %430, i64* %433
  %434 = load i64, i64* %select.ptr.161, align 8
  %435 = xor i64 %428, %434
  %436 = getelementptr inbounds i64, i64* %1, i64 2
  %437 = load i1, i1* %out.
  %438 = icmp slt i64 2, %N1
  %439 = bitcast i64* %shadow to i64*
  %safe.162 = or i1 %437, %438
  %select.ptr.163 = select i1 %safe.162, i64* %436, i64* %439
  %440 = load i64, i64* %select.ptr.163, align 8
  %441 = xor i64 %440, %435
  %442 = load i1, i1* %out.
  %443 = icmp slt i64 2, %N1
  %444 = bitcast i64* %shadow to i64*
  %safe.164 = or i1 %442, %443
  %select.ptr.165 = select i1 %safe.164, i64* %436, i64* %444
  %445 = load i64, i64* %436
  %select.val.166 = select i1 %442, i64 %441, i64 %445
  store i64 %select.val.166, i64* %select.ptr.165, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %446 = load i1, i1* %out.
  %447 = icmp slt i64 0, %N
  %448 = bitcast i64* %shadow to i64*
  %safe.167 = or i1 %446, %447
  %select.ptr.168 = select i1 %safe.167, i64* %4, i64* %448
  %449 = load i64, i64* %select.ptr.168, align 8
  %450 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 8
  %451 = load i1, i1* %out.
  %452 = icmp slt i64 8, %N
  %453 = bitcast i64* %shadow to i64*
  %safe.169 = or i1 %451, %452
  %select.ptr.170 = select i1 %safe.169, i64* %450, i64* %453
  %454 = load i64, i64* %select.ptr.170, align 8
  %455 = shl i64 %454, 16
  %456 = xor i64 %449, %455
  %457 = load i1, i1* %out.
  %458 = load i64, i64* %1, align 8
  %459 = xor i64 %458, %456
  %460 = load i1, i1* %out.
  %461 = load i64, i64* %1
  %select.val.171 = select i1 %460, i64 %459, i64 %461
  store i64 %select.val.171, i64* %1, align 8
  %462 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %463 = getelementptr inbounds [3 x i64], [3 x i64]* %462, i64 0, i64 1
  %464 = load i1, i1* %out.
  %465 = icmp slt i64 1, %N
  %466 = bitcast i64* %shadow to i64*
  %safe.172 = or i1 %464, %465
  %select.ptr.173 = select i1 %safe.172, i64* %463, i64* %466
  %467 = load i64, i64* %select.ptr.173, align 8
  %468 = getelementptr inbounds i64, i64* %1, i64 1
  %469 = load i1, i1* %out.
  %470 = icmp slt i64 1, %N1
  %471 = bitcast i64* %shadow to i64*
  %safe.174 = or i1 %469, %470
  %select.ptr.175 = select i1 %safe.174, i64* %468, i64* %471
  %472 = load i64, i64* %select.ptr.175, align 8
  %473 = xor i64 %472, %467
  %474 = load i1, i1* %out.
  %475 = icmp slt i64 1, %N1
  %476 = bitcast i64* %shadow to i64*
  %safe.176 = or i1 %474, %475
  %select.ptr.177 = select i1 %safe.176, i64* %468, i64* %476
  %477 = load i64, i64* %468
  %select.val.178 = select i1 %474, i64 %473, i64 %477
  store i64 %select.val.178, i64* %select.ptr.177, align 8
  %478 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %479 = getelementptr inbounds [3 x i64], [3 x i64]* %478, i64 0, i64 2
  %480 = load i1, i1* %out.
  %481 = icmp slt i64 2, %N
  %482 = bitcast i64* %shadow to i64*
  %safe.179 = or i1 %480, %481
  %select.ptr.180 = select i1 %safe.179, i64* %479, i64* %482
  %483 = load i64, i64* %select.ptr.180, align 8
  %484 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %485 = getelementptr inbounds [12 x i64], [12 x i64]* %484, i64 0, i64 8
  %486 = load i1, i1* %out.
  %487 = icmp slt i64 8, %N
  %488 = bitcast i64* %shadow to i64*
  %safe.181 = or i1 %486, %487
  %select.ptr.182 = select i1 %safe.181, i64* %485, i64* %488
  %489 = load i64, i64* %select.ptr.182, align 8
  %490 = xor i64 %483, %489
  %491 = getelementptr inbounds i64, i64* %1, i64 2
  %492 = load i1, i1* %out.
  %493 = icmp slt i64 2, %N1
  %494 = bitcast i64* %shadow to i64*
  %safe.183 = or i1 %492, %493
  %select.ptr.184 = select i1 %safe.183, i64* %491, i64* %494
  %495 = load i64, i64* %select.ptr.184, align 8
  %496 = xor i64 %495, %490
  %497 = load i1, i1* %out.
  %498 = icmp slt i64 2, %N1
  %499 = bitcast i64* %shadow to i64*
  %safe.185 = or i1 %497, %498
  %select.ptr.186 = select i1 %safe.185, i64* %491, i64* %499
  %500 = load i64, i64* %491
  %select.val.187 = select i1 %497, i64 %496, i64 %500
  store i64 %select.val.187, i64* %select.ptr.186, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %501 = load i1, i1* %out.
  %502 = icmp slt i64 0, %N
  %503 = bitcast i64* %shadow to i64*
  %safe.188 = or i1 %501, %502
  %select.ptr.189 = select i1 %safe.188, i64* %4, i64* %503
  %504 = load i64, i64* %select.ptr.189, align 8
  %505 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 9
  %506 = load i1, i1* %out.
  %507 = icmp slt i64 9, %N
  %508 = bitcast i64* %shadow to i64*
  %safe.190 = or i1 %506, %507
  %select.ptr.191 = select i1 %safe.190, i64* %505, i64* %508
  %509 = load i64, i64* %select.ptr.191, align 8
  %510 = shl i64 %509, 16
  %511 = xor i64 %504, %510
  %512 = load i1, i1* %out.
  %513 = load i64, i64* %1, align 8
  %514 = xor i64 %513, %511
  %515 = load i1, i1* %out.
  %516 = load i64, i64* %1
  %select.val.192 = select i1 %515, i64 %514, i64 %516
  store i64 %select.val.192, i64* %1, align 8
  %517 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %518 = getelementptr inbounds [3 x i64], [3 x i64]* %517, i64 0, i64 1
  %519 = load i1, i1* %out.
  %520 = icmp slt i64 1, %N
  %521 = bitcast i64* %shadow to i64*
  %safe.193 = or i1 %519, %520
  %select.ptr.194 = select i1 %safe.193, i64* %518, i64* %521
  %522 = load i64, i64* %select.ptr.194, align 8
  %523 = getelementptr inbounds i64, i64* %1, i64 1
  %524 = load i1, i1* %out.
  %525 = icmp slt i64 1, %N1
  %526 = bitcast i64* %shadow to i64*
  %safe.195 = or i1 %524, %525
  %select.ptr.196 = select i1 %safe.195, i64* %523, i64* %526
  %527 = load i64, i64* %select.ptr.196, align 8
  %528 = xor i64 %527, %522
  %529 = load i1, i1* %out.
  %530 = icmp slt i64 1, %N1
  %531 = bitcast i64* %shadow to i64*
  %safe.197 = or i1 %529, %530
  %select.ptr.198 = select i1 %safe.197, i64* %523, i64* %531
  %532 = load i64, i64* %523
  %select.val.199 = select i1 %529, i64 %528, i64 %532
  store i64 %select.val.199, i64* %select.ptr.198, align 8
  %533 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %534 = getelementptr inbounds [3 x i64], [3 x i64]* %533, i64 0, i64 2
  %535 = load i1, i1* %out.
  %536 = icmp slt i64 2, %N
  %537 = bitcast i64* %shadow to i64*
  %safe.200 = or i1 %535, %536
  %select.ptr.201 = select i1 %safe.200, i64* %534, i64* %537
  %538 = load i64, i64* %select.ptr.201, align 8
  %539 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %540 = getelementptr inbounds [12 x i64], [12 x i64]* %539, i64 0, i64 9
  %541 = load i1, i1* %out.
  %542 = icmp slt i64 9, %N
  %543 = bitcast i64* %shadow to i64*
  %safe.202 = or i1 %541, %542
  %select.ptr.203 = select i1 %safe.202, i64* %540, i64* %543
  %544 = load i64, i64* %select.ptr.203, align 8
  %545 = xor i64 %538, %544
  %546 = getelementptr inbounds i64, i64* %1, i64 2
  %547 = load i1, i1* %out.
  %548 = icmp slt i64 2, %N1
  %549 = bitcast i64* %shadow to i64*
  %safe.204 = or i1 %547, %548
  %select.ptr.205 = select i1 %safe.204, i64* %546, i64* %549
  %550 = load i64, i64* %select.ptr.205, align 8
  %551 = xor i64 %550, %545
  %552 = load i1, i1* %out.
  %553 = icmp slt i64 2, %N1
  %554 = bitcast i64* %shadow to i64*
  %safe.206 = or i1 %552, %553
  %select.ptr.207 = select i1 %safe.206, i64* %546, i64* %554
  %555 = load i64, i64* %546
  %select.val.208 = select i1 %552, i64 %551, i64 %555
  store i64 %select.val.208, i64* %select.ptr.207, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %556 = load i1, i1* %out.
  %557 = icmp slt i64 0, %N
  %558 = bitcast i64* %shadow to i64*
  %safe.209 = or i1 %556, %557
  %select.ptr.210 = select i1 %safe.209, i64* %4, i64* %558
  %559 = load i64, i64* %select.ptr.210, align 8
  %560 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 10
  %561 = load i1, i1* %out.
  %562 = icmp slt i64 10, %N
  %563 = bitcast i64* %shadow to i64*
  %safe.211 = or i1 %561, %562
  %select.ptr.212 = select i1 %safe.211, i64* %560, i64* %563
  %564 = load i64, i64* %select.ptr.212, align 8
  %565 = shl i64 %564, 16
  %566 = xor i64 %559, %565
  %567 = load i1, i1* %out.
  %568 = load i64, i64* %1, align 8
  %569 = xor i64 %568, %566
  %570 = load i1, i1* %out.
  %571 = load i64, i64* %1
  %select.val.213 = select i1 %570, i64 %569, i64 %571
  store i64 %select.val.213, i64* %1, align 8
  %572 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %573 = getelementptr inbounds [3 x i64], [3 x i64]* %572, i64 0, i64 1
  %574 = load i1, i1* %out.
  %575 = icmp slt i64 1, %N
  %576 = bitcast i64* %shadow to i64*
  %safe.214 = or i1 %574, %575
  %select.ptr.215 = select i1 %safe.214, i64* %573, i64* %576
  %577 = load i64, i64* %select.ptr.215, align 8
  %578 = getelementptr inbounds i64, i64* %1, i64 1
  %579 = load i1, i1* %out.
  %580 = icmp slt i64 1, %N1
  %581 = bitcast i64* %shadow to i64*
  %safe.216 = or i1 %579, %580
  %select.ptr.217 = select i1 %safe.216, i64* %578, i64* %581
  %582 = load i64, i64* %select.ptr.217, align 8
  %583 = xor i64 %582, %577
  %584 = load i1, i1* %out.
  %585 = icmp slt i64 1, %N1
  %586 = bitcast i64* %shadow to i64*
  %safe.218 = or i1 %584, %585
  %select.ptr.219 = select i1 %safe.218, i64* %578, i64* %586
  %587 = load i64, i64* %578
  %select.val.220 = select i1 %584, i64 %583, i64 %587
  store i64 %select.val.220, i64* %select.ptr.219, align 8
  %588 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %589 = getelementptr inbounds [3 x i64], [3 x i64]* %588, i64 0, i64 2
  %590 = load i1, i1* %out.
  %591 = icmp slt i64 2, %N
  %592 = bitcast i64* %shadow to i64*
  %safe.221 = or i1 %590, %591
  %select.ptr.222 = select i1 %safe.221, i64* %589, i64* %592
  %593 = load i64, i64* %select.ptr.222, align 8
  %594 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %595 = getelementptr inbounds [12 x i64], [12 x i64]* %594, i64 0, i64 10
  %596 = load i1, i1* %out.
  %597 = icmp slt i64 10, %N
  %598 = bitcast i64* %shadow to i64*
  %safe.223 = or i1 %596, %597
  %select.ptr.224 = select i1 %safe.223, i64* %595, i64* %598
  %599 = load i64, i64* %select.ptr.224, align 8
  %600 = xor i64 %593, %599
  %601 = getelementptr inbounds i64, i64* %1, i64 2
  %602 = load i1, i1* %out.
  %603 = icmp slt i64 2, %N1
  %604 = bitcast i64* %shadow to i64*
  %safe.225 = or i1 %602, %603
  %select.ptr.226 = select i1 %safe.225, i64* %601, i64* %604
  %605 = load i64, i64* %select.ptr.226, align 8
  %606 = xor i64 %605, %600
  %607 = load i1, i1* %out.
  %608 = icmp slt i64 2, %N1
  %609 = bitcast i64* %shadow to i64*
  %safe.227 = or i1 %607, %608
  %select.ptr.228 = select i1 %safe.227, i64* %601, i64* %609
  %610 = load i64, i64* %601
  %select.val.229 = select i1 %607, i64 %606, i64 %610
  store i64 %select.val.229, i64* %select.ptr.228, align 8
  call void @rho(i64* %1, i64 %N1, i1 %.cond)
  %611 = load i1, i1* %out.
  %612 = icmp slt i64 0, %N
  %613 = bitcast i64* %shadow to i64*
  %safe.230 = or i1 %611, %612
  %select.ptr.231 = select i1 %safe.230, i64* %4, i64* %613
  %614 = load i64, i64* %select.ptr.231, align 8
  %615 = getelementptr inbounds [12 x i64], [12 x i64]* %9, i64 0, i64 11
  %616 = load i1, i1* %out.
  %617 = icmp slt i64 11, %N
  %618 = bitcast i64* %shadow to i64*
  %safe.232 = or i1 %616, %617
  %select.ptr.233 = select i1 %safe.232, i64* %615, i64* %618
  %619 = load i64, i64* %select.ptr.233, align 8
  %620 = shl i64 %619, 16
  %621 = xor i64 %614, %620
  %622 = load i1, i1* %out.
  %623 = load i64, i64* %1, align 8
  %624 = xor i64 %623, %621
  %625 = load i1, i1* %out.
  %626 = load i64, i64* %1
  %select.val.234 = select i1 %625, i64 %624, i64 %626
  store i64 %select.val.234, i64* %1, align 8
  %627 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %628 = getelementptr inbounds [3 x i64], [3 x i64]* %627, i64 0, i64 1
  %629 = load i1, i1* %out.
  %630 = icmp slt i64 1, %N
  %631 = bitcast i64* %shadow to i64*
  %safe.235 = or i1 %629, %630
  %select.ptr.236 = select i1 %safe.235, i64* %628, i64* %631
  %632 = load i64, i64* %select.ptr.236, align 8
  %633 = getelementptr inbounds i64, i64* %1, i64 1
  %634 = load i1, i1* %out.
  %635 = icmp slt i64 1, %N1
  %636 = bitcast i64* %shadow to i64*
  %safe.237 = or i1 %634, %635
  %select.ptr.238 = select i1 %safe.237, i64* %633, i64* %636
  %637 = load i64, i64* %select.ptr.238, align 8
  %638 = xor i64 %637, %632
  %639 = load i1, i1* %out.
  %640 = icmp slt i64 1, %N1
  %641 = bitcast i64* %shadow to i64*
  %safe.239 = or i1 %639, %640
  %select.ptr.240 = select i1 %safe.239, i64* %633, i64* %641
  %642 = load i64, i64* %633
  %select.val.241 = select i1 %639, i64 %638, i64 %642
  store i64 %select.val.241, i64* %select.ptr.240, align 8
  %643 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %644 = getelementptr inbounds [3 x i64], [3 x i64]* %643, i64 0, i64 2
  %645 = load i1, i1* %out.
  %646 = icmp slt i64 2, %N
  %647 = bitcast i64* %shadow to i64*
  %safe.242 = or i1 %645, %646
  %select.ptr.243 = select i1 %safe.242, i64* %644, i64* %647
  %648 = load i64, i64* %select.ptr.243, align 8
  %649 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %650 = getelementptr inbounds [12 x i64], [12 x i64]* %649, i64 0, i64 11
  %651 = load i1, i1* %out.
  %652 = icmp slt i64 11, %N
  %653 = bitcast i64* %shadow to i64*
  %safe.244 = or i1 %651, %652
  %select.ptr.245 = select i1 %safe.244, i64* %650, i64* %653
  %654 = load i64, i64* %select.ptr.245, align 8
  %655 = xor i64 %648, %654
  %656 = getelementptr inbounds i64, i64* %1, i64 2
  %657 = load i1, i1* %out.
  %658 = icmp slt i64 2, %N1
  %659 = bitcast i64* %shadow to i64*
  %safe.246 = or i1 %657, %658
  %select.ptr.247 = select i1 %safe.246, i64* %656, i64* %659
  %660 = load i64, i64* %select.ptr.247, align 8
  %661 = xor i64 %660, %655
  %662 = load i1, i1* %out.
  %663 = icmp slt i64 2, %N1
  %664 = bitcast i64* %shadow to i64*
  %safe.248 = or i1 %662, %663
  %select.ptr.249 = select i1 %safe.248, i64* %656, i64* %664
  %665 = load i64, i64* %656
  %select.val.250 = select i1 %662, i64 %661, i64 %665
  store i64 %select.val.250, i64* %select.ptr.249, align 8
  call void @theta(i64* %1, i64 %N1, i1 %.cond)
  call void @mu(i64* %1, i64 %N1, i1 %.cond)
  ret void
}

define void @twy_key(%struct.twy_ctx* %0, i64 %N, i64* %1, i64 %N1) {
  %3 = getelementptr inbounds i64, i64* %1, i64 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %6 = getelementptr inbounds [3 x i64], [3 x i64]* %5, i64 0, i64 0
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %8 = getelementptr inbounds [3 x i64], [3 x i64]* %7, i64 0, i64 0
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds i64, i64* %1, i64 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %12 = getelementptr inbounds [3 x i64], [3 x i64]* %11, i64 0, i64 1
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %14 = getelementptr inbounds [3 x i64], [3 x i64]* %13, i64 0, i64 1
  store i64 %10, i64* %14, align 8
  %15 = getelementptr inbounds i64, i64* %1, i64 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %18 = getelementptr inbounds [3 x i64], [3 x i64]* %17, i64 0, i64 2
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %20 = getelementptr inbounds [3 x i64], [3 x i64]* %19, i64 0, i64 2
  store i64 %16, i64* %20, align 8
  %21 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %22 = getelementptr inbounds [3 x i64], [3 x i64]* %21, i64 0, i64 0
  call void @theta(i64* %22, i64 %N, i1 true)
  %23 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %24 = getelementptr inbounds [3 x i64], [3 x i64]* %23, i64 0, i64 0
  call void @mu(i64* %24, i64 %N, i1 true)
  %25 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 2
  %26 = getelementptr inbounds [12 x i64], [12 x i64]* %25, i64 0, i64 0
  call void @rndcon_gen(i64 2827, i64* %26, i64 %N)
  %27 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 3
  %28 = getelementptr inbounds [12 x i64], [12 x i64]* %27, i64 0, i64 0
  call void @rndcon_gen(i64 45489, i64* %28, i64 %N)
  ret void
}

define void @twy_enc(%struct.twy_ctx* %0, i64 %N, i64* %1, i64 %N1, i32 %2) {
  %out. = alloca i1
  store i1 true, i1* %out.
  %out.1 = alloca i1
  %out.2 = alloca i1
  %out.3 = alloca i1
  %out.4 = alloca i1
  %out.5 = alloca i1
  %out.6 = alloca i1
  %4 = icmp slt i32 0, %2
  %shadow = alloca i64
  %5 = load i1, i1* %out.
  %in. = and i1 %5, %4
  store i1 %in., i1* %out.1
  call void @encrypt(%struct.twy_ctx* %0, i64 %N, i64* %1, i64 %N1, i1 %in.)
  %6 = getelementptr inbounds i64, i64* %1, i64 3
  %7 = load i1, i1* %out.
  %8 = xor i1 %4, true
  %in.7 = and i1 %7, %8
  %9 = load i1, i1* %out.1
  %select.phi. = select i1 %in.7, i64* %1, i64* %6
  %10 = or i1 %in.7, %9
  store i1 %10, i1* %out.2
  %11 = icmp slt i32 1, %2
  %12 = load i1, i1* %out.2
  %in.8 = and i1 %12, %11
  store i1 %in.8, i1* %out.3
  call void @encrypt(%struct.twy_ctx* %0, i64 %N, i64* %select.phi., i64 %N1, i1 %in.8)
  %13 = getelementptr inbounds i64, i64* %select.phi., i64 3
  %14 = load i1, i1* %out.2
  %15 = xor i1 %11, true
  %in.9 = and i1 %14, %15
  %16 = load i1, i1* %out.3
  %select.phi.4 = select i1 %in.9, i64 %N1, i64 %N1
  %select.phi.3 = select i1 %in.9, i64 %N1, i64 %N1
  %select.phi.2 = select i1 %in.9, i64* %select.phi., i64* %13
  %17 = or i1 %in.9, %16
  store i1 %17, i1* %out.4
  %18 = icmp slt i32 2, %2
  %19 = load i1, i1* %out.4
  %in.10 = and i1 %19, %18
  store i1 %in.10, i1* %out.5
  call void @encrypt(%struct.twy_ctx* %0, i64 %N, i64* %select.phi.2, i64 %select.phi.4, i1 %in.10)
  %20 = getelementptr inbounds i64, i64* %select.phi.2, i64 3
  %21 = load i1, i1* %out.4
  %22 = xor i1 %18, true
  %in.11 = and i1 %21, %22
  %23 = load i1, i1* %out.5
  %24 = or i1 %in.11, %23
  store i1 %24, i1* %out.6
  ret void
}

define void @twy_dec(%struct.twy_ctx* %0, i64 %N, i64* %1, i64 %N1, i32 %2) {
  %out. = alloca i1
  store i1 true, i1* %out.
  %out.1 = alloca i1
  %out.2 = alloca i1
  %out.3 = alloca i1
  %out.4 = alloca i1
  %out.5 = alloca i1
  %out.6 = alloca i1
  %4 = icmp slt i32 0, %2
  %shadow = alloca i64
  %5 = load i1, i1* %out.
  %in. = and i1 %5, %4
  store i1 %in., i1* %out.1
  call void @decrypt(%struct.twy_ctx* %0, i64 %N, i64* %1, i64 %N1, i1 %in.)
  %6 = getelementptr inbounds i64, i64* %1, i64 3
  %7 = load i1, i1* %out.
  %8 = xor i1 %4, true
  %in.7 = and i1 %7, %8
  %9 = load i1, i1* %out.1
  %select.phi. = select i1 %in.7, i64* %1, i64* %6
  %10 = or i1 %in.7, %9
  store i1 %10, i1* %out.2
  %11 = icmp slt i32 1, %2
  %12 = load i1, i1* %out.2
  %in.8 = and i1 %12, %11
  store i1 %in.8, i1* %out.3
  call void @decrypt(%struct.twy_ctx* %0, i64 %N, i64* %select.phi., i64 %N1, i1 %in.8)
  %13 = getelementptr inbounds i64, i64* %select.phi., i64 3
  %14 = load i1, i1* %out.2
  %15 = xor i1 %11, true
  %in.9 = and i1 %14, %15
  %16 = load i1, i1* %out.3
  %select.phi.4 = select i1 %in.9, i64 %N1, i64 %N1
  %select.phi.3 = select i1 %in.9, i64 %N1, i64 %N1
  %select.phi.2 = select i1 %in.9, i64* %select.phi., i64* %13
  %17 = or i1 %in.9, %16
  store i1 %17, i1* %out.4
  %18 = icmp slt i32 2, %2
  %19 = load i1, i1* %out.4
  %in.10 = and i1 %19, %18
  store i1 %in.10, i1* %out.5
  call void @decrypt(%struct.twy_ctx* %0, i64 %N, i64* %select.phi.2, i64 %select.phi.4, i1 %in.10)
  %20 = getelementptr inbounds i64, i64* %select.phi.2, i64 3
  %21 = load i1, i1* %out.4
  %22 = xor i1 %18, true
  %in.11 = and i1 %21, %22
  %23 = load i1, i1* %out.5
  %24 = or i1 %in.11, %23
  store i1 %24, i1* %out.6
  ret void
}

define void @twy_destroy(%struct.twy_ctx* %0, i64 %N) {
  %2 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %3 = getelementptr inbounds [3 x i64], [3 x i64]* %2, i64 0, i64 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %5 = getelementptr inbounds [3 x i64], [3 x i64]* %4, i64 0, i64 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %7 = getelementptr inbounds [3 x i64], [3 x i64]* %6, i64 0, i64 1
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %9 = getelementptr inbounds [3 x i64], [3 x i64]* %8, i64 0, i64 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 1
  %11 = getelementptr inbounds [3 x i64], [3 x i64]* %10, i64 0, i64 2
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %struct.twy_ctx, %struct.twy_ctx* %0, i32 0, i32 0
  %13 = getelementptr inbounds [3 x i64], [3 x i64]* %12, i64 0, i64 2
  store i64 0, i64* %13, align 8
  ret void
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
