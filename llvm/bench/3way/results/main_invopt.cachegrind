--------------------------------------------------------------------------------
I1 cache:         128 B, 32 B, 2-way associative
D1 cache:         128 B, 32 B, 2-way associative
LL cache:         128 B, 32 B, 2-way associative
Command:          3way/bin/main_invopt
Data file:        tmp.cachegrind
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir               I1mr            ILmr            Dr              D1mr            DLmr            Dw              D1mw            DLmw            
--------------------------------------------------------------------------------
307,668 (100.0%) 36,031 (100.0%) 36,026 (100.0%) 69,955 (100.0%) 31,999 (100.0%) 31,928 (100.0%) 27,214 (100.0%) 10,457 (100.0%) 10,449 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir              I1mr           ILmr           Dr              D1mr           DLmr           Dw             D1mw           DLmw            file:function
--------------------------------------------------------------------------------
71,450 (23.22%) 7,800 (21.65%) 7,799 (21.65%) 14,298 (20.44%) 6,435 (20.11%) 6,414 (20.09%)    17 ( 0.06%)     8 ( 0.08%)     8 ( 0.08%)  ???:_dl_addr
29,738 ( 9.67%)   598 ( 1.66%)   598 ( 1.66%)  5,664 ( 8.10%) 3,370 (10.53%) 3,370 (10.55%)     6 ( 0.02%)     1 ( 0.01%)     1 ( 0.01%)  ???:__GI___tunables_init
29,194 ( 9.49%) 2,441 ( 6.77%) 2,441 ( 6.78%)  7,248 (10.36%) 3,109 ( 9.72%) 3,109 ( 9.74%) 2,566 ( 9.43%) 1,144 (10.94%) 1,144 (10.95%)  ???:_dl_relocate_object
25,883 ( 8.41%) 2,860 ( 7.94%) 2,860 ( 7.94%)  4,719 ( 6.75%)   462 ( 1.44%)   462 ( 1.45%) 3,146 (11.56%)   429 ( 4.10%)   429 ( 4.11%)  /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s:rho
23,899 ( 7.77%) 4,130 (11.46%) 4,130 (11.46%)  7,735 (11.06%) 5,504 (17.20%) 5,504 (17.24%) 3,890 (14.29%) 2,016 (19.28%) 2,016 (19.29%)  ???:do_lookup_x
22,224 ( 7.22%) 2,640 ( 7.33%) 2,640 ( 7.33%)  6,160 ( 8.81%) 1,463 ( 4.57%) 1,451 ( 4.54%) 4,096 (15.05%) 1,852 (17.71%) 1,848 (17.69%)  /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s:mu
20,590 ( 6.69%) 4,645 (12.89%) 4,645 (12.89%)  4,992 ( 7.14%) 2,685 ( 8.39%) 2,685 ( 8.41%) 3,248 (11.94%) 1,381 (13.21%) 1,381 (13.22%)  ???:__vfprintf_internal
20,012 ( 6.50%) 1,502 ( 4.17%) 1,502 ( 4.17%)  4,285 ( 6.13%) 1,561 ( 4.88%) 1,561 ( 4.89%) 2,157 ( 7.93%)   846 ( 8.09%)   846 ( 8.10%)  ???:_dl_lookup_symbol_x
 9,077 ( 2.95%) 1,121 ( 3.11%) 1,121 ( 3.11%)  1,888 ( 2.70%)   697 ( 2.18%)   697 ( 2.18%) 1,512 ( 5.56%)   463 ( 4.43%)   463 ( 4.43%)  ???:_IO_file_xsputn@@GLIBC_2.2.5
 5,475 ( 1.78%)   240 ( 0.67%)   240 ( 0.67%)    579 ( 0.83%)    69 ( 0.22%)    69 ( 0.22%)   519 ( 1.91%)    69 ( 0.66%)    69 ( 0.66%)  ???:_itoa_word
 5,102 ( 1.66%)   802 ( 2.23%)   802 ( 2.23%)  1,107 ( 1.58%)   329 ( 1.03%)   329 ( 1.03%)     0              0              0           ???:strcmp
 4,868 ( 1.58%)   895 ( 2.48%)   895 ( 2.48%)  1,616 ( 2.31%)   801 ( 2.50%)   801 ( 2.51%)   547 ( 2.01%)   193 ( 1.85%)   193 ( 1.85%)  ???:check_match
 3,850 ( 1.25%)   567 ( 1.57%)   567 ( 1.57%)  1,428 ( 2.04%)   890 ( 2.78%)   868 ( 2.72%)   525 ( 1.93%)   161 ( 1.54%)   161 ( 1.54%)  /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s:encrypt
 3,384 ( 1.10%)   498 ( 1.38%)   498 ( 1.38%)  1,236 ( 1.77%)   702 ( 2.19%)   695 ( 2.18%)   462 ( 1.70%)   153 ( 1.46%)   153 ( 1.46%)  /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s:decrypt
 2,259 ( 0.73%)   610 ( 1.69%)   610 ( 1.69%)    475 ( 0.68%)   284 ( 0.89%)   284 ( 0.89%)   296 ( 1.09%)   185 ( 1.77%)   185 ( 1.77%)  ???:__memcpy_avx_unaligned_erms
 2,192 ( 0.71%)   322 ( 0.89%)   322 ( 0.89%)    495 ( 0.71%)   346 ( 1.08%)   345 ( 1.08%)   230 ( 0.85%)   138 ( 1.32%)   138 ( 1.32%)  ???:_dl_map_object_from_fd
 1,791 ( 0.58%)   291 ( 0.81%)   291 ( 0.81%)    183 ( 0.26%)   153 ( 0.48%)   153 ( 0.48%)     0              0              0           ???:__strchrnul_avx2
 1,686 ( 0.55%)   128 ( 0.36%)   128 ( 0.36%)    561 ( 0.80%)   235 ( 0.73%)   235 ( 0.74%)   216 ( 0.79%)    82 ( 0.78%)    78 ( 0.75%)  ???:_dl_check_map_versions
 1,354 ( 0.44%)    75 ( 0.21%)    73 ( 0.20%)    123 ( 0.18%)    57 ( 0.18%)    57 ( 0.18%)    18 ( 0.07%)     0              0           ???:intel_check_word.constprop.0
 1,290 ( 0.42%)   260 ( 0.72%)   260 ( 0.72%)    312 ( 0.45%)   182 ( 0.57%)   182 ( 0.57%)   208 ( 0.76%)    78 ( 0.75%)    78 ( 0.75%)  ???:_IO_padn
 1,145 ( 0.37%)   186 ( 0.52%)   186 ( 0.52%)    271 ( 0.39%)   200 ( 0.63%)   200 ( 0.63%)   144 ( 0.53%)    83 ( 0.79%)    83 ( 0.79%)  ???:dl_main
 1,081 ( 0.35%)    99 ( 0.27%)    99 ( 0.27%)    258 ( 0.37%)   109 ( 0.34%)   109 ( 0.34%)    88 ( 0.32%)    65 ( 0.62%)    65 ( 0.62%)  ???:_dl_start
 1,056 ( 0.34%)   240 ( 0.67%)   240 ( 0.67%)    300 ( 0.43%)   144 ( 0.45%)   144 ( 0.45%)    84 ( 0.31%)     0              0           ???:read_int
   932 ( 0.30%)   111 ( 0.31%)   111 ( 0.31%)    187 ( 0.27%)   126 ( 0.39%)   126 ( 0.39%)   103 ( 0.38%)    63 ( 0.60%)    63 ( 0.60%)  ???:_dl_map_object_deps
   791 ( 0.26%)   380 ( 1.05%)   380 ( 1.05%)    381 ( 0.54%)   365 ( 1.14%)   365 ( 1.14%)    14 ( 0.05%)     4 ( 0.04%)     4 ( 0.04%)  ???:???
   724 ( 0.24%)    27 ( 0.07%)    27 ( 0.07%)     11 ( 0.02%)    10 ( 0.03%)    10 ( 0.03%)   275 ( 1.01%)    73 ( 0.70%)    73 ( 0.70%)  ???:ptmalloc_init.part.0
   716 ( 0.23%)   179 ( 0.50%)   179 ( 0.50%)      0              0              0              0              0              0           ???:__mempcpy_avx_unaligned_erms
   714 ( 0.23%)    45 ( 0.12%)    45 ( 0.12%)    112 ( 0.16%)    18 ( 0.06%)    18 ( 0.06%)     0              0              0           ???:_dl_cache_libcmp
   678 ( 0.22%)    78 ( 0.22%)    78 ( 0.22%)    109 ( 0.16%)    42 ( 0.13%)    42 ( 0.13%)   120 ( 0.44%)    61 ( 0.58%)    61 ( 0.58%)  ???:_dl_new_object
   673 ( 0.22%)    69 ( 0.19%)    69 ( 0.19%)    161 ( 0.23%)    62 ( 0.19%)    62 ( 0.19%)    79 ( 0.29%)    31 ( 0.30%)    31 ( 0.30%)  ???:_dl_sysdep_start
   593 ( 0.19%)    56 ( 0.16%)    56 ( 0.16%)     88 ( 0.13%)    40 ( 0.13%)    37 ( 0.12%)    84 ( 0.31%)    34 ( 0.33%)    34 ( 0.33%)  ???:_dl_important_hwcaps
   565 ( 0.18%)    76 ( 0.21%)    76 ( 0.21%)    117 ( 0.17%)    33 ( 0.10%)    33 ( 0.10%)   106 ( 0.39%)    30 ( 0.29%)    30 ( 0.29%)  ???:malloc
   540 ( 0.18%)   126 ( 0.35%)   126 ( 0.35%)    108 ( 0.15%)    96 ( 0.30%)    96 ( 0.30%)   198 ( 0.73%)    64 ( 0.61%)    64 ( 0.61%)  ???:printf
   529 ( 0.17%)    46 ( 0.13%)    46 ( 0.13%)     16 ( 0.02%)     6 ( 0.02%)     6 ( 0.02%)   220 ( 0.81%)   103 ( 0.98%)   103 ( 0.99%)  ???:memset
   512 ( 0.17%)    66 ( 0.18%)    66 ( 0.18%)    121 ( 0.17%)    53 ( 0.17%)    53 ( 0.17%)    38 ( 0.14%)    19 ( 0.18%)    19 ( 0.18%)  ???:open_verify.constprop.0
   508 ( 0.17%)    72 ( 0.20%)    72 ( 0.20%)     48 ( 0.07%)    16 ( 0.05%)    16 ( 0.05%)   164 ( 0.60%)    49 ( 0.47%)    49 ( 0.47%)  /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s:twy_key
   442 ( 0.14%)     5 ( 0.01%)     5 ( 0.01%)    154 ( 0.22%)    68 ( 0.21%)    68 ( 0.21%)     1 ( 0.00%)     1 ( 0.01%)     1 ( 0.01%)  ???:_dl_next_ld_env_entry
   425 ( 0.14%)    83 ( 0.23%)    83 ( 0.23%)     90 ( 0.13%)    65 ( 0.20%)    65 ( 0.20%)    70 ( 0.26%)    30 ( 0.29%)    30 ( 0.29%)  ???:_dl_map_object
   415 ( 0.13%)    88 ( 0.24%)    88 ( 0.24%)    103 ( 0.15%)    66 ( 0.21%)    66 ( 0.21%)    60 ( 0.22%)    14 ( 0.13%)    14 ( 0.13%)  ???:_dl_name_match_p
   391 ( 0.13%)    72 ( 0.20%)    72 ( 0.20%)     80 ( 0.11%)    42 ( 0.13%)    42 ( 0.13%)    20 ( 0.07%)    16 ( 0.15%)    16 ( 0.15%)  ???:__tunable_get_val
   357 ( 0.12%)    52 ( 0.14%)    52 ( 0.14%)    105 ( 0.15%)    39 ( 0.12%)    39 ( 0.12%)    52 ( 0.19%)    15 ( 0.14%)    15 ( 0.14%)  ???:_dl_sort_maps
   333 ( 0.11%)    55 ( 0.15%)    55 ( 0.15%)     60 ( 0.09%)    34 ( 0.11%)    34 ( 0.11%)    35 ( 0.13%)     8 ( 0.08%)     8 ( 0.08%)  ???:_dl_load_cache_lookup
   329 ( 0.11%)     7 ( 0.02%)     7 ( 0.02%)      7 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)   297 ( 1.09%)    77 ( 0.74%)    77 ( 0.74%)  ???:_dl_allocate_tls_storage
   299 ( 0.10%)    52 ( 0.14%)    52 ( 0.14%)    112 ( 0.16%)    68 ( 0.21%)    68 ( 0.21%)    49 ( 0.18%)     9 ( 0.09%)     9 ( 0.09%)  ???:puts
   288 ( 0.09%)    48 ( 0.13%)    48 ( 0.13%)     32 ( 0.05%)    20 ( 0.06%)    20 ( 0.06%)     0              0              0           ???:__strlen_avx2
   288 ( 0.09%)    40 ( 0.11%)    40 ( 0.11%)     41 ( 0.06%)    21 ( 0.07%)    21 ( 0.07%)     0              0              0           ???:strlen
   270 ( 0.09%)    39 ( 0.11%)    39 ( 0.11%)     80 ( 0.11%)    64 ( 0.20%)    64 ( 0.20%)    30 ( 0.11%)    17 ( 0.16%)    17 ( 0.16%)  ???:_dl_fini
   268 ( 0.09%)    50 ( 0.14%)    50 ( 0.14%)     42 ( 0.06%)    27 ( 0.08%)    27 ( 0.08%)    50 ( 0.18%)    20 ( 0.19%)    20 ( 0.19%)  ???:_int_malloc
   253 ( 0.08%)    55 ( 0.15%)    55 ( 0.15%)     67 ( 0.10%)    30 ( 0.09%)    30 ( 0.09%)    47 ( 0.17%)    21 ( 0.20%)    21 ( 0.20%)  ???:memcpy
   250 ( 0.08%)    34 ( 0.09%)    32 ( 0.09%)     20 ( 0.03%)     8 ( 0.03%)     8 ( 0.03%)    21 ( 0.08%)    10 ( 0.10%)    10 ( 0.10%)  ???:init_cacheinfo
   227 ( 0.07%)     8 ( 0.02%)     8 ( 0.02%)    103 ( 0.15%)    18 ( 0.06%)    13 ( 0.04%)    34 ( 0.12%)    11 ( 0.11%)    11 ( 0.11%)  ???:strcspn
   220 ( 0.07%)    33 ( 0.09%)    33 ( 0.09%)     33 ( 0.05%)     0              0             22 ( 0.08%)     5 ( 0.05%)     5 ( 0.05%)  ???:mmap
   209 ( 0.07%)    62 ( 0.17%)    62 ( 0.17%)     27 ( 0.04%)    11 ( 0.03%)    11 ( 0.03%)    71 ( 0.26%)    13 ( 0.12%)    13 ( 0.12%)  /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s:main
   180 ( 0.06%)    29 ( 0.08%)    29 ( 0.08%)     46 ( 0.07%)    24 ( 0.08%)    24 ( 0.08%)    23 ( 0.08%)     9 ( 0.09%)     9 ( 0.09%)  ???:_dl_process_pt_note
   177 ( 0.06%)    31 ( 0.09%)    31 ( 0.09%)     24 ( 0.03%)    11 ( 0.03%)    11 ( 0.03%)     0              0              0           ???:index
   166 ( 0.05%)    24 ( 0.07%)    24 ( 0.07%)     59 ( 0.08%)    33 ( 0.10%)    33 ( 0.10%)    29 ( 0.11%)     6 ( 0.06%)     6 ( 0.06%)  ???:call_init.part.0
   162 ( 0.05%)    30 ( 0.08%)    30 ( 0.08%)     36 ( 0.05%)    20 ( 0.06%)    20 ( 0.06%)    42 ( 0.15%)     5 ( 0.05%)     5 ( 0.05%)  ???:handle_intel.constprop.0
   162 ( 0.05%)    22 ( 0.06%)    22 ( 0.06%)     58 ( 0.08%)    41 ( 0.13%)    41 ( 0.13%)    12 ( 0.04%)     6 ( 0.06%)     6 ( 0.06%)  ???:_dl_fixup
   149 ( 0.05%)    26 ( 0.07%)    26 ( 0.07%)     46 ( 0.07%)    33 ( 0.10%)    33 ( 0.10%)    27 ( 0.10%)     8 ( 0.08%)     8 ( 0.08%)  ???:_IO_cleanup
   148 ( 0.05%)    29 ( 0.08%)    29 ( 0.08%)     34 ( 0.05%)    22 ( 0.07%)    22 ( 0.07%)    25 ( 0.09%)     9 ( 0.09%)     9 ( 0.09%)  ???:sysmalloc
   132 ( 0.04%)    32 ( 0.09%)    32 ( 0.09%)     60 ( 0.09%)    32 ( 0.10%)    32 ( 0.10%)    24 ( 0.09%)     0              0           /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s:printvec
   123 ( 0.04%)    25 ( 0.07%)    25 ( 0.07%)     36 ( 0.05%)    20 ( 0.06%)    20 ( 0.06%)    21 ( 0.08%)     5 ( 0.05%)     5 ( 0.05%)  ???:_IO_flush_all_lockp
   114 ( 0.04%)     7 ( 0.02%)     7 ( 0.02%)      9 ( 0.01%)     7 ( 0.02%)     7 ( 0.02%)    84 ( 0.31%)    24 ( 0.23%)    24 ( 0.23%)  ???:tcache_init.part.0
   109 ( 0.04%)    15 ( 0.04%)    15 ( 0.04%)     29 ( 0.04%)    22 ( 0.07%)    22 ( 0.07%)    23 ( 0.08%)     7 ( 0.07%)     7 ( 0.07%)  ???:_dl_add_to_namespace_list
   108 ( 0.04%)    21 ( 0.06%)    21 ( 0.06%)     24 ( 0.03%)     8 ( 0.03%)     8 ( 0.03%)    39 ( 0.14%)    18 ( 0.17%)    18 ( 0.17%)  ???:_dl_catch_exception
    98 ( 0.03%)    20 ( 0.06%)    20 ( 0.06%)     25 ( 0.04%)    11 ( 0.03%)    11 ( 0.03%)    15 ( 0.06%)     6 ( 0.06%)     6 ( 0.06%)  ???:__run_exit_handlers
    98 ( 0.03%)     8 ( 0.02%)     8 ( 0.02%)     20 ( 0.03%)     4 ( 0.01%)     4 ( 0.01%)    18 ( 0.07%)     3 ( 0.03%)     3 ( 0.03%)  ???:_IO_default_xsputn
    97 ( 0.03%)    17 ( 0.05%)    17 ( 0.05%)     14 ( 0.02%)     1 ( 0.00%)     1 ( 0.00%)    21 ( 0.08%)     5 ( 0.05%)     5 ( 0.05%)  ???:get_common_indices.constprop.0
    96 ( 0.03%)    16 ( 0.04%)    16 ( 0.04%)     28 ( 0.04%)    15 ( 0.05%)    15 ( 0.05%)    24 ( 0.09%)     8 ( 0.08%)     8 ( 0.08%)  ???:_dl_setup_hash
    94 ( 0.03%)    16 ( 0.04%)    16 ( 0.04%)     20 ( 0.03%)    13 ( 0.04%)    13 ( 0.04%)    35 ( 0.13%)    14 ( 0.13%)    14 ( 0.13%)  ???:__sigsetjmp
    88 ( 0.03%)    16 ( 0.04%)    16 ( 0.04%)      0              0              0              0              0              0           ???:calloc
    87 ( 0.03%)    14 ( 0.04%)    14 ( 0.04%)     27 ( 0.04%)    15 ( 0.05%)    15 ( 0.05%)    15 ( 0.06%)     6 ( 0.06%)     6 ( 0.06%)  ???:_dl_allocate_tls_init
    86 ( 0.03%)    14 ( 0.04%)    14 ( 0.04%)     14 ( 0.02%)     4 ( 0.01%)     4 ( 0.01%)    20 ( 0.07%)     2 ( 0.02%)     2 ( 0.02%)  /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s:twy_dec
    85 ( 0.03%)     6 ( 0.02%)     6 ( 0.02%)     12 ( 0.02%)     3 ( 0.01%)     3 ( 0.01%)     4 ( 0.01%)     2 ( 0.02%)     2 ( 0.02%)  ???:_dl_discover_osversion
    82 ( 0.03%)    14 ( 0.04%)    14 ( 0.04%)     96 ( 0.14%)    49 ( 0.15%)    49 ( 0.15%)   100 ( 0.37%)    44 ( 0.42%)    44 ( 0.42%)  ???:_dl_runtime_resolve_xsave
    80 ( 0.03%)    17 ( 0.05%)    17 ( 0.05%)     14 ( 0.02%)     8 ( 0.03%)     8 ( 0.03%)    25 ( 0.09%)    14 ( 0.13%)    14 ( 0.13%)  ???:_dl_init_paths
    80 ( 0.03%)    12 ( 0.03%)    12 ( 0.03%)     24 ( 0.03%)     8 ( 0.03%)     8 ( 0.03%)     8 ( 0.03%)     4 ( 0.04%)     4 ( 0.04%)  ???:_dl_protect_relro
    78 ( 0.03%)    13 ( 0.04%)    13 ( 0.04%)     24 ( 0.03%)    16 ( 0.05%)    16 ( 0.05%)    11 ( 0.04%)     5 ( 0.05%)     5 ( 0.05%)  ???:_dl_init
    74 ( 0.02%)    15 ( 0.04%)    15 ( 0.04%)     18 ( 0.03%)     7 ( 0.02%)     7 ( 0.02%)    16 ( 0.06%)     1 ( 0.01%)     1 ( 0.01%)  ???:_IO_file_overflow@@GLIBC_2.2.5
    72 ( 0.02%)    12 ( 0.03%)    12 ( 0.03%)     15 ( 0.02%)    12 ( 0.04%)    12 ( 0.04%)    13 ( 0.05%)     6 ( 0.06%)     6 ( 0.06%)  ???:init_tls
    72 ( 0.02%)    11 ( 0.03%)    11 ( 0.03%)     16 ( 0.02%)     8 ( 0.03%)     8 ( 0.03%)    11 ( 0.04%)     4 ( 0.04%)     4 ( 0.04%)  ???:_dl_determine_tlsoffset
    72 ( 0.02%)     7 ( 0.02%)     7 ( 0.02%)     13 ( 0.02%)    10 ( 0.03%)    10 ( 0.03%)     8 ( 0.03%)     2 ( 0.02%)     2 ( 0.02%)  ???:_dl_check_all_versions
    69 ( 0.02%)    15 ( 0.04%)    15 ( 0.04%)     16 ( 0.02%)    12 ( 0.04%)    12 ( 0.04%)     9 ( 0.03%)     3 ( 0.03%)     3 ( 0.03%)  ???:_IO_file_doallocate
    66 ( 0.02%)    13 ( 0.04%)    13 ( 0.04%)     19 ( 0.03%)     7 ( 0.02%)     7 ( 0.02%)    10 ( 0.04%)     1 ( 0.01%)     1 ( 0.01%)  ???:sbrk
    59 ( 0.02%)    13 ( 0.04%)    13 ( 0.04%)     16 ( 0.02%)    13 ( 0.04%)    13 ( 0.04%)    18 ( 0.07%)     6 ( 0.06%)     6 ( 0.06%)  ???:(below main)
    59 ( 0.02%)     8 ( 0.02%)     8 ( 0.02%)     17 ( 0.02%)    11 ( 0.03%)    11 ( 0.03%)     7 ( 0.03%)     3 ( 0.03%)     3 ( 0.03%)  ???:__cxa_finalize
    58 ( 0.02%)     9 ( 0.02%)     9 ( 0.02%)     17 ( 0.02%)     9 ( 0.03%)     9 ( 0.03%)    13 ( 0.05%)     4 ( 0.04%)     4 ( 0.04%)  ???:new_do_write
    57 ( 0.02%)     9 ( 0.02%)     9 ( 0.02%)      3 ( 0.00%)     0              0              3 ( 0.01%)     3 ( 0.03%)     3 ( 0.03%)  ???:__open_nocancel
    54 ( 0.02%)     9 ( 0.02%)     9 ( 0.02%)     18 ( 0.03%)     4 ( 0.01%)     4 ( 0.01%)    18 ( 0.07%)     5 ( 0.05%)     5 ( 0.05%)  ???:_dl_dst_count
    53 ( 0.02%)    11 ( 0.03%)    11 ( 0.03%)     12 ( 0.02%)     8 ( 0.03%)     8 ( 0.03%)    10 ( 0.04%)     3 ( 0.03%)     3 ( 0.03%)  ???:handle_preload_list
    53 ( 0.02%)     8 ( 0.02%)     8 ( 0.02%)      9 ( 0.01%)     5 ( 0.02%)     5 ( 0.02%)    15 ( 0.06%)     3 ( 0.03%)     3 ( 0.03%)  ???:_IO_default_setbuf
    49 ( 0.02%)    11 ( 0.03%)    11 ( 0.03%)      5 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     0              0              0           ???:mempcpy
    45 ( 0.01%)    16 ( 0.04%)    16 ( 0.04%)     13 ( 0.02%)    10 ( 0.03%)    10 ( 0.03%)     4 ( 0.01%)     1 ( 0.01%)     1 ( 0.01%)  ???:_dl_debug_initialize
    44 ( 0.01%)     8 ( 0.02%)     8 ( 0.02%)      4 ( 0.01%)     0              0              0              0              0           ???:_fxstat
    44 ( 0.01%)     5 ( 0.01%)     5 ( 0.01%)     17 ( 0.02%)    11 ( 0.03%)    11 ( 0.03%)     4 ( 0.01%)     1 ( 0.01%)     1 ( 0.01%)  ???:_dl_find_dso_for_object
    43 ( 0.01%)     9 ( 0.02%)     9 ( 0.02%)      6 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     9 ( 0.03%)     4 ( 0.04%)     4 ( 0.04%)  ???:_dl_sysdep_read_whole_file
    43 ( 0.01%)     7 ( 0.02%)     7 ( 0.02%)      7 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)    10 ( 0.04%)     2 ( 0.02%)     2 ( 0.02%)  /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s:twy_enc
    42 ( 0.01%)    12 ( 0.03%)    12 ( 0.03%)      6 ( 0.01%)     0              0              0              0              0           ???:__pread64_nocancel
    40 ( 0.01%)     6 ( 0.02%)     6 ( 0.02%)     11 ( 0.02%)     7 ( 0.02%)     7 ( 0.02%)    10 ( 0.04%)     4 ( 0.04%)     4 ( 0.04%)  ???:__internal_atexit
    37 ( 0.01%)     5 ( 0.01%)     5 ( 0.01%)      8 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)     5 ( 0.02%)     2 ( 0.02%)     2 ( 0.02%)  ???:_IO_file_write@@GLIBC_2.2.5
    36 ( 0.01%)     6 ( 0.02%)     6 ( 0.02%)     16 ( 0.02%)     8 ( 0.03%)     8 ( 0.03%)     6 ( 0.02%)     4 ( 0.04%)     4 ( 0.04%)  ???:openaux
    36 ( 0.01%)     6 ( 0.02%)     6 ( 0.02%)     10 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     6 ( 0.02%)     2 ( 0.02%)     2 ( 0.02%)  ???:__libc_scratch_buffer_set_array_size
    36 ( 0.01%)     6 ( 0.02%)     6 ( 0.02%)      4 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     8 ( 0.03%)     1 ( 0.01%)     1 ( 0.01%)  ???:strdup
    34 ( 0.01%)     8 ( 0.02%)     8 ( 0.02%)      6 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     0              0              0           ???:wmemset
    34 ( 0.01%)     6 ( 0.02%)     6 ( 0.02%)     10 ( 0.01%)     8 ( 0.03%)     8 ( 0.03%)     0              0              0           ???:memmove
    34 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      8 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     8 ( 0.03%)     2 ( 0.02%)     2 ( 0.02%)  ???:__libc_csu_init
    32 ( 0.01%)     7 ( 0.02%)     7 ( 0.02%)      8 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     5 ( 0.02%)     1 ( 0.01%)     1 ( 0.01%)  ???:__new_exitfn
    32 ( 0.01%)     6 ( 0.02%)     6 ( 0.02%)      5 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     3 ( 0.01%)     3 ( 0.03%)     3 ( 0.03%)  ???:brk
    31 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      9 ( 0.01%)     1 ( 0.00%)     1 ( 0.00%)     6 ( 0.02%)     1 ( 0.01%)     1 ( 0.01%)  ???:dl_cet_check
    30 ( 0.01%)    10 ( 0.03%)    10 ( 0.03%)      5 ( 0.01%)     0              0              0              0              0           ???:mprotect
    28 ( 0.01%)     6 ( 0.02%)     6 ( 0.02%)      2 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:__strrchr_avx2
    28 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      9 ( 0.01%)     6 ( 0.02%)     6 ( 0.02%)     6 ( 0.02%)     1 ( 0.01%)     1 ( 0.01%)  ???:_dl_add_to_slotinfo
    28 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      7 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     8 ( 0.03%)     3 ( 0.03%)     3 ( 0.03%)  ???:do_preload
    28 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)      7 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)     7 ( 0.03%)     1 ( 0.01%)     1 ( 0.01%)  ???:_IO_setb
    26 ( 0.01%)     5 ( 0.01%)     5 ( 0.01%)      8 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)     4 ( 0.01%)     1 ( 0.01%)     1 ( 0.01%)  ???:_IO_doallocbuf
    25 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      7 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     5 ( 0.02%)     3 ( 0.03%)     3 ( 0.03%)  ???:__init_misc
    23 ( 0.01%)     5 ( 0.01%)     5 ( 0.01%)      5 ( 0.01%)     1 ( 0.00%)     1 ( 0.00%)     2 ( 0.01%)     0              0           ???:tcgetattr
    23 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      7 ( 0.01%)     0              0              7 ( 0.03%)     4 ( 0.04%)     4 ( 0.04%)  ???:_dl_catch_error
    22 ( 0.01%)     5 ( 0.01%)     5 ( 0.01%)      7 ( 0.01%)     6 ( 0.02%)     6 ( 0.02%)     6 ( 0.02%)     4 ( 0.04%)     4 ( 0.04%)  ???:_init
    20 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      6 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     0              0              0           ???:wcschr
    20 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      6 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     0              0              0           ???:strnlen
    20 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      6 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     0              0              0           ???:wmemchr
    18 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)      7 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)     1 ( 0.01%)     1 ( 0.01%)  ???:_IO_file_sync@@GLIBC_2.2.5
    18 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)      5 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     6 ( 0.02%)     2 ( 0.02%)     2 ( 0.02%)  ???:expand_dynamic_string_token
    18 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     0              0              0              0              0           ???:__GI___close_nocancel
    17 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     10 ( 0.01%)     8 ( 0.03%)     8 ( 0.03%)     3 ( 0.01%)     1 ( 0.01%)     1 ( 0.01%)  ???:__ctype_init
    17 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      7 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     1 ( 0.00%)     0              0           ???:__unregister_atfork
    17 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      5 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     7 ( 0.03%)     2 ( 0.02%)     2 ( 0.02%)  ???:_dl_receive_error
    17 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      3 ( 0.00%)     0              0              2 ( 0.01%)     0              0           ???:_IO_do_write@@GLIBC_2.2.5
    17 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)      5 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     0              0              0           ???:memcpy@@GLIBC_2.14
    16 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      3 ( 0.00%)     0              0              8 ( 0.03%)     0              0           ???:_IO_file_setbuf@@GLIBC_2.2.5
    16 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)      2 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     2 ( 0.02%)     2 ( 0.02%)  ???:__default_morecore
    15 ( 0.00%)     5 ( 0.01%)     5 ( 0.01%)     10 ( 0.01%)     5 ( 0.02%)     5 ( 0.02%)     0              0              0           ???:rtld_lock_default_unlock_recursive
    15 ( 0.00%)     5 ( 0.01%)     5 ( 0.01%)     10 ( 0.01%)     5 ( 0.02%)     5 ( 0.02%)     0              0              0           ???:rtld_lock_default_lock_recursive
    15 ( 0.00%)     4 ( 0.01%)     4 ( 0.01%)      4 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     1 ( 0.01%)     1 ( 0.01%)  ???:isatty
    15 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      5 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)     3 ( 0.01%)     2 ( 0.02%)     2 ( 0.02%)  ???:map_doit
    13 ( 0.00%)     4 ( 0.01%)     4 ( 0.01%)      5 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     0              0              0           ???:wmemcmp
    13 ( 0.00%)     4 ( 0.01%)     4 ( 0.01%)      5 ( 0.01%)     4 ( 0.01%)     4 ( 0.01%)     0              0              0           ???:bcmp
    12 ( 0.00%)     4 ( 0.01%)     4 ( 0.01%)      7 ( 0.01%)     7 ( 0.02%)     7 ( 0.02%)     0              0              0           ???:check_stdfiles_vtables
    12 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      5 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     0              0           ???:__call_tls_dtors
    12 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)     3 ( 0.01%)     0              0           ???:malloc_hook_ini
    12 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      2 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     3 ( 0.01%)     0              0           ???:_start
    12 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      2 ( 0.00%)     0              0              0              0              0           ???:__read_nocancel
    11 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      4 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     0              0           ???:version_check_doit
    11 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     0              0           ???:_dl_unload_cache
    10 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:memrchr
    10 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:wcslen
    10 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:rindex
    10 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      4 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:free
    10 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:strchrnul
    10 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:memchr
    10 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:rawmemchr
    10 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:wcscmp
     9 ( 0.00%)     4 ( 0.01%)     4 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:strncpy
     9 ( 0.00%)     4 ( 0.01%)     4 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:strcpy
     9 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:strcat
     9 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:stpcpy
     9 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:wcsnlen
     9 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:stpncpy
     9 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:strncmp
     9 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      1 ( 0.00%)     0              0              1 ( 0.00%)     1 ( 0.01%)     1 ( 0.01%)  ???:access
     9 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      2 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)     0              0              0           ???:write
     9 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      2 ( 0.00%)     0              0              2 ( 0.01%)     1 ( 0.01%)     1 ( 0.01%)  ???:__sigjmp_save
     8 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      4 ( 0.01%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:alloc_perturb
     7 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)     0              0              0           ???:strspn
     7 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)     0              0              0           ???:strpbrk
     7 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)     0              0              0           ???:wcscpy
     7 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      1 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)     0              0              0           ???:_Exit
     7 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     1 ( 0.00%)     0              0           ???:_dl_next_tls_modid
     6 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:strncasecmp
     6 ( 0.00%)     3 ( 0.01%)     3 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:strncasecmp_l
     6 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:strcasecmp
     6 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:_dl_count_modids
     6 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      3 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)     0              0              0           ???:strcasecmp_l
     6 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      1 ( 0.00%)     0              0              0              0              0           ???:munmap
     6 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      1 ( 0.00%)     0              0              0              0              0           ???:uname
     6 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      0              0              0              1 ( 0.00%)     0              0           ???:exit
     5 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      1 ( 0.00%)     0              0              0              0              0           ???:_IO_file_stat
     4 ( 0.00%)     2 ( 0.01%)     2 ( 0.01%)      2 ( 0.00%)     0              0              0              0              0           ???:_dl_debug_state
     3 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      0              0              0              0              0              0           ???:__cxa_atexit
     3 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      0              0              0              0              0              0           ???:_setjmp
     2 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      1 ( 0.00%)     0              0              0              0              0           ???:_dl_sysdep_start_cleanup
     2 ( 0.00%)     1 ( 0.00%)     1 ( 0.00%)      0              0              0              0              0              0           ???:_dl_cet_check

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/luigi/dev/ufmg/static-analysis/side-channel/lif/llvm/bench/3way/asm/main_invopt.s
--------------------------------------------------------------------------------
Ir           I1mr         ILmr         Dr           D1mr         DLmr         Dw           D1mw         DLmw         

  .            .            .            .            .            .            .            .            .           	.text
  .            .            .            .            .            .            .            .            .           	.file	"llvm-link"
  .            .            .            .            .            .            .            .            .           	.globl	printvec                # -- Begin function printvec
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	printvec,@function
  .            .            .            .            .            .            .            .            .           printvec:                               # @printvec
  .            .            .            .            .            .            .            .            .           # %bb.0:
 12 ( 0.00%)  12 ( 0.03%)  12 ( 0.03%)   0            0            0           12 ( 0.04%)   0            0           	pushq	%rax
 12 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rsi
 12 ( 0.00%)   0            0           12 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movq	16(%rdx), %rax
 12 ( 0.00%)   0            0           12 ( 0.02%)   8 ( 0.03%)   8 ( 0.03%)   0            0            0           	movq	(%rdx), %r8
 12 ( 0.00%)   0            0           12 ( 0.02%)   0            0            0            0            0           	movq	8(%rdx), %rcx
 12 ( 0.00%)   8 ( 0.02%)   8 ( 0.02%)   0            0            0            0            0            0           	movl	$.L.str, %edi
 12 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rax, %rdx
 12 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%eax, %eax
 12 ( 0.00%)   0            0            0            0            0           12 ( 0.04%)   0            0           	callq	printf
 12 ( 0.00%)  12 ( 0.03%)  12 ( 0.03%)  12 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	popq	%rax
 12 ( 0.00%)   0            0           12 ( 0.02%)   0            0            0            0            0           	retq
  .            .            .            .            .            .            .            .            .           .Lfunc_end0:
  .            .            .            .            .            .            .            .            .           	.size	printvec, .Lfunc_end0-printvec
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	main                    # -- Begin function main
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	main,@function
  .            .            .            .            .            .            .            .            .           main:                                   # @main
  .            .            .            .            .            .            .            .            .           	.cfi_startproc
  .            .            .            .            .            .            .            .            .           # %bb.0:
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	pushq	%rbp
  .            .            .            .            .            .            .            .            .           	.cfi_def_cfa_offset 16
  .            .            .            .            .            .            .            .            .           	.cfi_offset %rbp, -16
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rsp, %rbp
  .            .            .            .            .            .            .            .            .           	.cfi_def_cfa_register %rbp
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	pushq	%r15
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	pushq	%r14
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	pushq	%r12
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	pushq	%rbx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	subq	$352, %rsp              # imm = 0x160
  .            .            .            .            .            .            .            .            .           	.cfi_offset %rbx, -48
  .            .            .            .            .            .            .            .            .           	.cfi_offset %r12, -40
  .            .            .            .            .            .            .            .            .           	.cfi_offset %r14, -32
  .            .            .            .            .            .            .            .            .           	.cfi_offset %r15, -24
  1 ( 0.00%)   0            0            1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	%fs:40, %rax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	%rax, -40(%rbp)
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorps	%xmm0, %xmm0
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movaps	%xmm0, -384(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	$0, -368(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	$1, -336(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	$1, -344(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	movq	$1, -352(%rbp)
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	-280(%rbp), %r14
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	-384(%rbp), %r15
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	callq	twy_key
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.Lstr.3, %edi
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	puts
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.2, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	leaq	-352(%rbp), %r12
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$.L.str.3, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$9, %ecx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$1, %r8d
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	encrypt
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.4, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	movq	$6, -384(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	$5, -376(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	$4, -368(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	movq	$3, -352(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	$2, -344(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	$1, -336(%rbp)
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movq	%r15, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	twy_key
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.Lstr.3, %edi
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	puts
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.2, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.3, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$9, %ecx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$1, %r8d
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	encrypt
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.4, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$2209258948, %ebx       # imm = 0x83AE9DC4
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	959468110(%rbx), %rax
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	%rax, -368(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	$1164413355, -376(%rbp) # imm = 0x456789AB
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	1531016304(%rbx), %rax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	%rax, -384(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	$19088743, -336(%rbp)   # imm = 0x1234567
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	386810156(%rbx), %rax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	%rax, -344(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	movq	$591751049, -352(%rbp)  # imm = 0x23456789
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	twy_key
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.Lstr.3, %edi
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	puts
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.2, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.3, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$9, %ecx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %r8d
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	encrypt
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.4, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	leaq	1191871241(%rbx), %rax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	%rax, -368(%rbp)
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	1382392692(%rbx), %rax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	%rax, -376(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	leaq	1329708442(%rbx), %rax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	%rax, -384(%rbp)
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	695422771(%rbx), %rax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	%rax, -336(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	%rbx, -344(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	movq	$1079625582, -352(%rbp) # imm = 0x4059C76E
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	twy_key
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.Lstr.3, %edi
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	callq	puts
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.2, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.3, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$9, %ecx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %r8d
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	encrypt
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.4, %edi
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printvec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	$0, -352(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	$1, -344(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	$2, -336(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	$3, -328(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	$4, -320(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	movq	$5, -312(%rbp)
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	-304(%rbp), %r15
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	movq	$6, -304(%rbp)
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	movq	$7, -296(%rbp)
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	movq	$8, -288(%rbp)
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$9, %ecx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$3, %r8d
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	twy_enc
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	-352(%rbp), %rdx
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	movq	-344(%rbp), %rcx
  1 ( 0.00%)   0            0            1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	-336(%rbp), %r8
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$.L.str.5, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%esi, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%eax, %eax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printf
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	-328(%rbp), %rdx
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	movq	-320(%rbp), %rcx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0           	movq	-312(%rbp), %r8
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$.L.str.5, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%eax, %eax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printf
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	-304(%rbp), %rdx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0           	movq	-296(%rbp), %rcx
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	movq	-288(%rbp), %r8
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$.L.str.5, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$2, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%eax, %eax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printf
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$9, %ecx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$2, %r8d
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	twy_dec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$9, %ecx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movq	%r14, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %r8d
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	twy_dec
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	-352(%rbp), %rdx
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	movq	-344(%rbp), %rcx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	-336(%rbp), %r8
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$.L.str.6, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%esi, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%eax, %eax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printf
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	-328(%rbp), %rdx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0           	movq	-320(%rbp), %rcx
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	movq	-312(%rbp), %r8
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$.L.str.6, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%eax, %eax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printf
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	-304(%rbp), %rdx
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0           	movq	-296(%rbp), %rcx
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	movq	-288(%rbp), %r8
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$.L.str.6, %edi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$2, %esi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%eax, %eax
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	printf
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0           	movq	%fs:40, %rax
  1 ( 0.00%)   0            0            1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	cmpq	-40(%rbp), %rax
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	jne	.LBB1_2
  .            .            .            .            .            .            .            .            .           # %bb.1:                                # %SP_return
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%eax, %eax
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	addq	$352, %rsp              # imm = 0x160
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	popq	%rbx
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	popq	%r12
  1 ( 0.00%)   0            0            1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	popq	%r14
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	popq	%r15
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	popq	%rbp
  .            .            .            .            .            .            .            .            .           	.cfi_def_cfa %rsp, 8
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	retq
  .            .            .            .            .            .            .            .            .           .LBB1_2:                                # %CallStackCheckFailBlk
  .            .            .            .            .            .            .            .            .           	.cfi_def_cfa %rbp, 16
  .            .            .            .            .            .            .            .            .           	callq	__stack_chk_fail
  .            .            .            .            .            .            .            .            .           .Lfunc_end1:
  .            .            .            .            .            .            .            .            .           	.size	main, .Lfunc_end1-main
  .            .            .            .            .            .            .            .            .           	.cfi_endproc
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	mu                      # -- Begin function mu
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	mu,@function
  .            .            .            .            .            .            .            .            .           mu:                                     # @mu
  .            .            .            .            .            .            .            .            .           # %bb.0:
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	pushq	%rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	pushq	%r15
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	pushq	%r14
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	pushq	%r13
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	pushq	%r12
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	pushq	%rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	subq	$744, %rsp              # imm = 0x2E8
 16 ( 0.01%)   0            0           16 ( 0.02%)  15 ( 0.05%)  15 ( 0.05%)   0            0            0           	movq	(%rdi), %r13
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	leaq	8(%rdi), %r9
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmpq	$1, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	setg	%al
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orb	%dl, %al
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movb	%al, -112(%rsp)         # 1-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	leaq	-128(%rsp), %rcx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %r9
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	movl	(%r9), %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rax, -120(%rsp)        # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	leaq	16(%rdi), %r8
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmpq	$2, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	setg	%al
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orb	%dl, %al
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %r8
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movl	(%r8), %ecx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	%edx, %ecx
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rcx, 240(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movl	%edx, %ecx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andb	$1, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%r13, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	cmoveq	8(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rbx, 248(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %r10
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%r10, 232(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 220(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 272(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rbx, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%r10, %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 216(%rsp)         # 4-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 288(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 256(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, -96(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 212(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 304(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 264(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rbp, -88(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 208(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 320(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 280(%rsp)         # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rbp, -80(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 204(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 336(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 296(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rbp, -72(%rsp)         # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   4 ( 0.04%)   4 ( 0.04%)  	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 200(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 352(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 312(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, -64(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 196(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 368(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 328(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, -56(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 192(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 384(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 344(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, -48(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 188(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 400(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 360(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, -40(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movl	%ebp, 184(%rsp)         # 4-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 416(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  10 ( 0.03%)  10 ( 0.03%)   0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 376(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, -32(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   4 ( 0.04%)   4 ( 0.04%)  	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 180(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 432(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  10 ( 0.03%)  10 ( 0.03%)   0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 392(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, -24(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 176(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 448(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 408(%rsp)         # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rbp, -16(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movl	%ebp, 172(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 464(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 424(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, -8(%rsp)          # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   4 ( 0.04%)   4 ( 0.04%)  	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 168(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 480(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  10 ( 0.03%)  10 ( 0.03%)   0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 440(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, (%rsp)            # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 164(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 496(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  10 ( 0.03%)  10 ( 0.03%)   0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 456(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, 8(%rsp)           # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movl	%ebp, 160(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 512(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 472(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, 16(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 156(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 528(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 488(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, 24(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 152(%rsp)         # 4-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 544(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 504(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, 32(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   4 ( 0.04%)   4 ( 0.04%)  	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  12 ( 0.11%)  12 ( 0.11%)  	movl	%ebp, 148(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 560(%rsp)         # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 520(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rbp, 40(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 144(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 576(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 536(%rsp)         # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rbp, 48(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 140(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 592(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 552(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rbp, 56(%rsp)          # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   4 ( 0.04%)   4 ( 0.04%)  	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 136(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 608(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 568(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, 64(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 132(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 624(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 584(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, 72(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 128(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 640(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 600(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rbp, %r12
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 124(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 656(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 616(%rsp)         # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, 88(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movl	%ebp, 120(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 672(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  10 ( 0.03%)  10 ( 0.03%)   0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 632(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  12 ( 0.11%)  12 ( 0.11%)  	movq	%rbp, 80(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movl	%ebp, 116(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 688(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  10 ( 0.03%)  10 ( 0.03%)   0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 648(%rsp)         # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  10 ( 0.10%)  	movq	%rbp, 96(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movl	%ebp, 112(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 704(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 664(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbp, -104(%rsp)        # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	-128(%rsp), %ebp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movl	%ebp, 108(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebp, %esi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 712(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 680(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %rbp
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	-128(%rsp), %ebx
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movl	%ebx, 104(%rsp)         # 4-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movl	16(%rdi), %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%ebx, %esi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)  12 ( 0.11%)  12 ( 0.11%)  	movq	%rsi, 728(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  14 ( 0.13%)  14 ( 0.13%)  	movq	%rsi, 696(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %r14
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	cmoveq	%r14, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r8), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%rdi), %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 720(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%cl, %rsi
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rdi), %r11
 16 ( 0.01%)   0            0           16 ( 0.02%)  12 ( 0.04%)  12 ( 0.04%)   0            0            0           	movl	-128(%rsp), %ebx
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rbx, 224(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	(%r9), %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shrq	%rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	cmoveq	%r11, %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rsi, 736(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %r13d
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %r13d
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	leaq	(%r13,%r13), %r15
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%r13, %r15
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	-120(%rsp), %rsi        # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	leaq	(%rsi,%rsi), %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rsi, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  14 ( 0.04%)  14 ( 0.04%)   0            0            0           	movq	240(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	leaq	(%rsi,%rsi), %r13
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmoveq	%rsi, %r13
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	testb	$1, -112(%rsp)          # 1-byte Folded Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	232(%rsp), %r10         # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	cmovel	220(%rsp), %r10d        # 4-byte Folded Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	-96(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	cmovel	216(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -96(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-88(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	212(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -88(%rsp)         # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	-80(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	208(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -80(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-72(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	204(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -72(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	-64(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	200(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -64(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-56(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	cmovel	196(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -56(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-48(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	192(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -48(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-40(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	cmovel	188(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -40(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	-32(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	184(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -32(%rsp)         # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	-24(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	180(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -24(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-16(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	176(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -16(%rsp)         # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-8(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	172(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -8(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	(%rsp), %rsi            # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	168(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%rsp)            # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rsp), %rsi           # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	164(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 8(%rsp)           # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	16(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	cmovel	160(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 16(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	24(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	cmovel	156(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 24(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	32(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	cmovel	152(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 32(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	40(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	148(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 40(%rsp)          # 8-byte Spill
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	48(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	144(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 48(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	56(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	140(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 56(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	64(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	136(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 64(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	72(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	132(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 72(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	128(%rsp), %r12d        # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%r12, -120(%rsp)        # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)   4 ( 0.01%)   0            0            0           	movq	88(%rsp), %r12          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	cmovel	124(%rsp), %r12d        # 4-byte Folded Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%r12, 88(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	80(%rsp), %rsi          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	120(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, 80(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	96(%rsp), %r12          # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	116(%rsp), %r12d        # 4-byte Folded Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%r12, 96(%rsp)          # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-104(%rsp), %rsi        # 8-byte Reload
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	112(%rsp), %esi         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, -104(%rsp)        # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	108(%rsp), %ebp         # 4-byte Folded Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rbp, %r12
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmovel	104(%rsp), %r14d        # 4-byte Folded Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0           16 ( 0.06%)   0            0           	movq	%r14, -112(%rsp)        # 8-byte Spill
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	224(%rsp), %r14         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	cmovel	%r14d, %r11d
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	$1, %al
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	cmovnel	16(%rdi), %r14d
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	248(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%r15, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %r10d
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %r10d
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %r10
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	272(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%r13, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %r10
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	256(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	-96(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%r10, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	288(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	264(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-88(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	304(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	280(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-80(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	320(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	296(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	-72(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	336(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	312(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	-64(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	352(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	328(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	-56(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	368(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	344(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	-48(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	384(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	360(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	-40(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	400(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	376(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	-32(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	416(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	392(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-24(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	432(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	408(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-16(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	448(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	424(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-8(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	464(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	440(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	(%rsp), %rax            # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	480(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	456(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	8(%rsp), %rax           # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	496(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	472(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	16(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	512(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	488(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	24(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	528(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	504(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	32(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	544(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	520(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	40(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	560(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	536(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	48(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	576(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	552(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	56(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	592(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	568(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	64(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	608(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	584(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	72(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	624(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	600(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	-120(%rsp), %rax        # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	640(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	616(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	88(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	656(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	632(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	80(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	672(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	648(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	96(%rsp), %rax          # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	movq	688(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	664(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	-104(%rsp), %rax        # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	704(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	680(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%r12, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	712(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	696(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	orq	%rbp, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	-112(%rsp), %rax        # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	728(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %eax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	$1, %eax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rsi, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	shlq	%cl, %rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	movq	720(%rsp), %rsi         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %esi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbp, %rsi
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %r11d
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	andl	$1, %r11d
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rbx, %r11
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	movq	%r14, %rbx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	%edx, %ebx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	andl	$1, %ebx
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	orq	%rax, %rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	movq	736(%rsp), %rax         # 8-byte Reload
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)  16 ( 0.15%)  16 ( 0.15%)  	movq	%rax, (%r9)
 16 ( 0.01%)   0            0           16 ( 0.02%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r8), %rax
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)   0            0            0            0            0            0           	shrq	%rax
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	testb	%cl, %cl
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rax
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rax, (%r8)
 16 ( 0.01%)   0            0           16 ( 0.02%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	cmoveq	(%rdi), %rbx
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rbx, (%rdi)
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	cmoveq	8(%rdi), %r11
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%r11, (%r9)
 16 ( 0.01%)  16 ( 0.04%)  16 ( 0.04%)  16 ( 0.02%)   0            0            0            0            0           	cmoveq	16(%rdi), %rsi
 16 ( 0.01%)   0            0            0            0            0           16 ( 0.06%)   0            0           	movq	%rsi, (%r8)
 16 ( 0.01%)   0            0            0            0            0            0            0            0           	addq	$744, %rsp              # imm = 0x2E8
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	popq	%rbx
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	popq	%r12
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	popq	%r13
 16 ( 0.01%)   0            0           16 ( 0.02%)  16 ( 0.05%)  16 ( 0.05%)   0            0            0           	popq	%r14
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	popq	%r15
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	popq	%rbp
 16 ( 0.01%)   0            0           16 ( 0.02%)   0            0            0            0            0           	retq
  .            .            .            .            .            .            .            .            .           .Lfunc_end2:
  .            .            .            .            .            .            .            .            .           	.size	mu, .Lfunc_end2-mu
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	gamma_                  # -- Begin function gamma_
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	gamma_,@function
  .            .            .            .            .            .            .            .            .           gamma_:                                 # @gamma_
  .            .            .            .            .            .            .            .            .           # %bb.0:
-- line 1654 ----------------------------------------
-- line 1893 ----------------------------------------
  .            .            .            .            .            .            .            .            .           .Lfunc_end6:
  .            .            .            .            .            .            .            .            .           	.size	pi_2, .Lfunc_end6-pi_2
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	rho                     # -- Begin function rho
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	rho,@function
  .            .            .            .            .            .            .            .            .           rho:                                    # @rho
  .            .            .            .            .            .            .            .            .           # %bb.0:
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0          143 ( 0.53%)   0            0           	pushq	%rbp
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	pushq	%r15
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	pushq	%r14
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%) 143 ( 1.37%) 143 ( 1.37%)  	pushq	%r13
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	pushq	%r12
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	pushq	%rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rdi, %r8
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testq	%rsi, %rsi
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	setg	%al
143 ( 0.05%)   0            0            0            0            0            0            0            0           	orb	%dl, %al
143 ( 0.05%)   0            0            0            0            0            0            0            0           	leaq	16(%rdi), %r14
143 ( 0.05%)   0            0            0            0            0            0            0            0           	cmpq	$2, %rsi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	setg	%cl
143 ( 0.05%)   0            0            0            0            0            0            0            0           	orb	%dl, %cl
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%) 143 ( 1.37%) 143 ( 1.37%)  	movl	%edx, -52(%rsp)         # 4-byte Spill
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %al
143 ( 0.05%)   0            0            0            0            0            0            0            0           	leaq	-8(%rsp), %rbp
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rbp, %rdi
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	cmovneq	%r8, %rdi
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%) 143 ( 1.37%) 143 ( 1.37%)  	movq	%rdi, -16(%rsp)         # 8-byte Spill
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %cl
143 ( 0.05%)   0            0            0            0            0            0            0            0           	cmoveq	%rbp, %r14
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %al
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rbp, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	cmovneq	%r8, %rax
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rax, -24(%rsp)         # 8-byte Spill
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%) 143 ( 0.20%) 143 ( 0.45%) 143 ( 0.45%)   0            0            0           	movq	(%rax), %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rbx, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$16, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rax, %r13
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rax, -48(%rsp)         # 8-byte Spill
143 ( 0.05%)   0            0            0            0            0            0            0            0           	leaq	8(%r8), %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	cmpq	$1, %rsi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	setg	%al
143 ( 0.05%)   0            0            0            0            0            0            0            0           	orb	%dl, %al
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %al
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	cmoveq	%rbp, %rcx
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rcx, -32(%rsp)         # 8-byte Spill
143 ( 0.05%)   0            0          143 ( 0.20%)  22 ( 0.07%)  22 ( 0.07%)   0            0            0           	movq	(%rcx), %r9
143 ( 0.05%)   0            0          143 ( 0.20%)  66 ( 0.21%)  66 ( 0.21%)   0            0            0           	movq	(%r14), %r12
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r9, %r10
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shlq	$16, %r10
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r9, %rbp
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$16, %rbp
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r12, %r11
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	shlq	$16, %r11
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r9, %r15
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$24, %r15
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r12, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shlq	$8, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rax, -40(%rsp)         # 8-byte Spill
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$8, %rdx
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	movq	%rbx, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shlq	$24, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rbx, %rdi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shlq	$16, %rdi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rbx, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shlq	$8, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rbx, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rax, %rcx
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	xorq	%r10, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r15, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rbx, %rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$8, %rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r9, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r9, %rdx
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	shlq	$24, %rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$24, %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r13, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rbx, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$16, %rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r12, %r13
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	shrq	$24, %r13
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r13, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%r9, %rsi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shlq	$8, %rsi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r10, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r13, %rax
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	xorq	%rdi, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r12, %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r10, %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$8, %r9
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r9, %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r15, %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rbx
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	shlq	$24, %r12
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r12, %rbx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rbx
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	movq	-48(%rsp), %rdx         # 8-byte Reload
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rcx
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	xorq	-40(%rsp), %rbx         # 8-byte Folded Reload
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rbx
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	movl	-52(%rsp), %ebp         # 4-byte Reload
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%) 143 ( 0.20%)   0            0            0            0            0           	cmoveq	(%r8), %rcx
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	movq	-24(%rsp), %rdx         # 8-byte Reload
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rcx, (%rdx)
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	cmoveq	8(%r8), %rax
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	movq	-32(%rsp), %rsi         # 8-byte Reload
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rax, (%rsi)
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	cmoveq	16(%r8), %rbx
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rbx, (%r14)
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%) 143 ( 0.20%)   0            0            0            0            0           	movq	(%rdx), %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rdx, %r9
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rax, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$10, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shlq	$22, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rcx, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	cmoveq	(%r8), %rax
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rax, (%rdx)
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%) 143 ( 0.20%)   0            0            0            0            0           	movq	(%r14), %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	leaq	(%rax,%rax), %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$31, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rax, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	cmoveq	16(%r8), %rcx
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rcx, (%r14)
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	movq	-16(%rsp), %rbx         # 8-byte Reload
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%) 143 ( 0.20%)   0            0            0            0            0           	movq	(%rbx), %rax
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	movq	(%rsi), %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rsi, %r10
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	movq	(%r14), %rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	notq	%rsi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rcx, %rdi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	notq	%rdi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	orq	%rdx, %rsi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	orq	%rax, %rdi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rdi
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%)   0            0            0            0            0            0           	notq	%rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	orq	%rcx, %rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rax, %rdx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rcx, %rsi
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	cmoveq	(%r8), %rdx
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rdx, (%rbx)
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	cmoveq	8(%r8), %rsi
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rsi, (%r10)
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%) 143 ( 0.20%)   0            0            0            0            0           	cmoveq	16(%r8), %rdi
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rdi, (%r14)
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	movq	(%r9), %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	leaq	(%rax,%rax), %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$31, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rax, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	cmoveq	(%r8), %rcx
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rcx, (%r9)
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%) 143 ( 0.20%)   0            0            0            0            0           	movq	(%r14), %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	movq	%rax, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shrq	$10, %rcx
143 ( 0.05%)   0            0            0            0            0            0            0            0           	shlq	$22, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	xorq	%rcx, %rax
143 ( 0.05%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	cmoveq	16(%r8), %rax
143 ( 0.05%)   0            0            0            0            0          143 ( 0.53%)   0            0           	movq	%rax, (%r14)
143 ( 0.05%)   0            0          143 ( 0.20%) 121 ( 0.38%) 121 ( 0.38%)   0            0            0           	popq	%rbx
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	popq	%r12
143 ( 0.05%) 143 ( 0.40%) 143 ( 0.40%) 143 ( 0.20%)   0            0            0            0            0           	popq	%r13
143 ( 0.05%)   0            0          143 ( 0.20%) 110 ( 0.34%) 110 ( 0.34%)   0            0            0           	popq	%r14
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	popq	%r15
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	popq	%rbp
143 ( 0.05%)   0            0          143 ( 0.20%)   0            0            0            0            0           	retq
  .            .            .            .            .            .            .            .            .           .Lfunc_end7:
  .            .            .            .            .            .            .            .            .           	.size	rho, .Lfunc_end7-rho
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	rndcon_gen              # -- Begin function rndcon_gen
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	rndcon_gen,@function
  .            .            .            .            .            .            .            .            .           rndcon_gen:                             # @rndcon_gen
  .            .            .            .            .            .            .            .            .           # %bb.0:
-- line 2089 ----------------------------------------
-- line 2295 ----------------------------------------
  .            .            .            .            .            .            .            .            .           .Lfunc_end8:
  .            .            .            .            .            .            .            .            .           	.size	rndcon_gen, .Lfunc_end8-rndcon_gen
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	encrypt                 # -- Begin function encrypt
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	encrypt,@function
  .            .            .            .            .            .            .            .            .           encrypt:                                # @encrypt
  .            .            .            .            .            .            .            .            .           # %bb.0:
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   0            0           	pushq	%rbp
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   1 ( 0.01%)   1 ( 0.01%)  	pushq	%r15
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	pushq	%r14
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	pushq	%r13
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	pushq	%r12
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   5 ( 0.05%)   5 ( 0.05%)  	pushq	%rbx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	subq	$248, %rsp
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%r8d, %ebp
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %r9
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %r12
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rsi, %r8
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rbx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	addq	$8, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$1, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%al
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	orb	%bpl, %al
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	16(%r12), %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$2, %rcx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%rcx, 40(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%cl
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	orb	%bpl, %cl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %cl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	232(%rsp), %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %r10
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rsi, %r10
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	240(%rsp), %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %rsi
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   1 ( 0.01%)   1 ( 0.01%)  	movq	%rsi, 80(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %al
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %r11
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rdx, %r11
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %rdx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rdx, 72(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%r12, %rcx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   0            0           	movq	%rcx, 64(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	136(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 224(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%rcx, 216(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	128(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 208(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   0            0           	movq	%rcx, 200(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	120(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 192(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%rcx, 184(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	112(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 176(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   0            0           	movq	%rcx, 168(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	104(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 160(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%rcx, 152(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	96(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 144(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   0            0           	movq	%rcx, 136(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	88(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 128(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%rcx, 120(%rsp)         # 8-byte Spill
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	80(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 112(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rcx, 104(%rsp)         # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	leaq	72(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 96(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%rcx, 88(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testq	%r8, %r8
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%al
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	orb	%bpl, %al
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %al
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rdx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmovneq	%rbx, %rdx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%rdx, 16(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	48(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdi, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rax), %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rcx
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rdx), %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%edx, %edx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rcx
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rcx, (%r12)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$1, %r8
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%r8, 48(%rsp)           # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%cl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	orb	%bpl, %cl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %cl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	8(%rbx), %rsi
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmoveq	%rdi, %rsi
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%rsi, 8(%rsp)           # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%r11, 56(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%r11), %rdx
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rsi), %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rdx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rdx, (%r11)
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmpq	$2, %r8
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%r14b
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	orb	%bpl, %r14b
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %r14b
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rax), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	16(%rbx), %r15
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdi, %r15
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	xorq	(%r15), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   1 ( 0.01%)   1 ( 0.01%)  	movq	%r15, 32(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%r10, 24(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r10), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%r10)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %cl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	56(%rbx), %r13
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmoveq	%rdi, %r13
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%r13), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	16(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %ecx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	56(%rsp), %rdx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%rdx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	8(%rsp), %rcx           # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rdx)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%r13), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	xorq	(%r15), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   1 ( 0.00%)   0            0            0           	movq	24(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	addq	$64, %rbx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %r14b
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rcx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	232(%rsp), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rax, %rbx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	40(%rsp), %r15          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	16(%rsp), %r13          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %ecx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	56(%rsp), %rdx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%rdx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	8(%rsp), %rcx           # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rdx)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rbx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	32(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   1 ( 0.00%)   0            0            0           	movq	24(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rcx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	48(%rsp), %rbx          # 8-byte Reload
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmpq	$3, %rbx
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	88(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	cmovgq	96(%rsp), %rcx          # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	movl	$0, %ecx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	56(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	8(%rsp), %r14           # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r14), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rcx)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rdx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	32(%rsp), %r13          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	24(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rcx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmpq	$4, %rbx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	104(%rsp), %rcx         # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmovgq	112(%rsp), %rcx         # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	16(%rsp), %rbx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmoveq	%rdx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	56(%rsp), %r15          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%r15), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r14), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%r15)
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	24(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rcx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	40(%rsp), %r13          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r13, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	48(%rsp), %r14          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$5, %r14
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	120(%rsp), %rcx         # 8-byte Reload
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	cmovgq	128(%rsp), %rcx         # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   0            0            0            0            0           	movq	(%r15), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	8(%rsp), %rdx           # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%r15)
  7 ( 0.00%)   0            0            7 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	32(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	24(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rcx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r13, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmpq	$6, %r14
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	136(%rsp), %rcx         # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmovgq	144(%rsp), %rcx         # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	16(%rsp), %r13          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%r15), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	8(%rsp), %rdx           # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%r15)
  7 ( 0.00%)   0            0            7 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	32(%rsp), %rbx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   1 ( 0.00%)   0            0            0           	xorq	(%rbx), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   0            0            0            0            0           	movq	24(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rcx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	40(%rsp), %rsi          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmpq	$7, %r14
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	152(%rsp), %rcx         # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	cmovgq	160(%rsp), %rcx         # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%r15), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	8(%rsp), %r14           # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r14), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%r15)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	xorq	(%rbx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	24(%rsp), %rbx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rbx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	40(%rsp), %rsi          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	cmpq	$8, 48(%rsp)            # 8-byte Folded Reload
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	168(%rsp), %rcx         # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmovgq	176(%rsp), %rcx         # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmoveq	%rdx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%r15), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r14), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%r15)
  7 ( 0.00%)   0            0            7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	32(%rsp), %r13          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rbx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   1 ( 0.00%)   0            0            0           	movq	40(%rsp), %r14          # 8-byte Reload
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	movq	%r14, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	cmpq	$9, 48(%rsp)            # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	184(%rsp), %rcx         # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	cmovgq	192(%rsp), %rcx         # 8-byte Folded Reload
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	16(%rsp), %rdx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   0            0            0            0            0           	movq	(%r15), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	8(%rsp), %rdx           # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%r15)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	xorq	(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rbx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	48(%rsp), %r14          # 8-byte Reload
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmpq	$10, %r14
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	200(%rsp), %rcx         # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmovgq	208(%rsp), %rcx         # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	16(%rsp), %rdx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%r15), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	8(%rsp), %r13           # 8-byte Reload
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%r15)
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	32(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   1 ( 0.00%)   0            0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rbx)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	40(%rsp), %rsi          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebp, %edx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	callq	rho
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	cmpq	$11, %r14
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	216(%rsp), %rcx         # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	cmovgq	224(%rsp), %rcx         # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	16(%rsp), %rdx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	movl	$0, %edx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r12)
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%r15), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%r15)
  7 ( 0.00%)   0            0            7 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	32(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rbx), %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rbx)
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	cmpq	$0, 40(%rsp)            # 8-byte Folded Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	movq	64(%rsp), %rax          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovgq	%r12, %rax
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 64(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%rax), %rdx
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	72(%rsp), %rax          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%rax), %r14
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %r8
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	shlq	$16, %r8
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %r11
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$16, %r11
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	80(%rsp), %rax          # 8-byte Reload
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	(%rax), %r9
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %r10
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %r10
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$24, %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	movq	%rax, %rbx
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   7 ( 0.07%)   7 ( 0.07%)  	movq	%rax, 16(%rsp)          # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$8, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, 8(%rsp)           # 8-byte Spill
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$8, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %rcx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	shlq	$24, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %r15
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %r15
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$8, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r15, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rax, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r8, %rcx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	xorq	%r11, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbx, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r10, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$8, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r14, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %rdi
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	shrq	$16, %rdi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rbx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$24, %rbx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$24, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbx, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %rbx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$16, %rbx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	movq	%r9, %r13
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$24, %r13
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbx, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r13, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$8, %rsi
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r8, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r10, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbx, %rax
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	xorq	%r13, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r15, %rax
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r15, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r9, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r8, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$8, %r14
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r14, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rdx
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	xorq	16(%rsp), %rdx          # 8-byte Folded Reload
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0            0            0            0           	xorq	%rbx, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$24, %r9
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r9, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r10, %rdx
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	xorq	8(%rsp), %rdx           # 8-byte Folded Reload
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rcx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rdx
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bpl
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	cmoveq	(%r12), %rcx
  7 ( 0.00%)   0            0            7 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	64(%rsp), %rsi          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rcx, (%rsi)
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r12), %rax
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	movq	72(%rsp), %rcx          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rax, (%rcx)
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r12), %rdx
  7 ( 0.00%)   7 ( 0.02%)   7 ( 0.02%)   7 ( 0.01%)   0            0            0            0            0           	movq	80(%rsp), %rax          # 8-byte Reload
  7 ( 0.00%)   0            0            0            0            0            7 ( 0.03%)   0            0           	movq	%rdx, (%rax)
  7 ( 0.00%)   0            0            0            0            0            0            0            0           	addq	$248, %rsp
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	popq	%rbx
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	popq	%r12
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	popq	%r13
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	popq	%r14
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	popq	%r15
  7 ( 0.00%)   0            0            7 ( 0.01%)   7 ( 0.02%)   7 ( 0.02%)   0            0            0           	popq	%rbp
  7 ( 0.00%)   0            0            7 ( 0.01%)   0            0            0            0            0           	retq
  .            .            .            .            .            .            .            .            .           .Lfunc_end9:
  .            .            .            .            .            .            .            .            .           	.size	encrypt, .Lfunc_end9-encrypt
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	decrypt                 # -- Begin function decrypt
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	decrypt,@function
  .            .            .            .            .            .            .            .            .           decrypt:                                # @decrypt
  .            .            .            .            .            .            .            .            .           # %bb.0:
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            6 ( 0.02%)   0            0           	pushq	%rbp
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   1 ( 0.01%)   1 ( 0.01%)  	pushq	%r15
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	pushq	%r14
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	pushq	%r13
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	pushq	%r12
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   2 ( 0.02%)   2 ( 0.02%)  	pushq	%rbx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	subq	$248, %rsp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%r8d, %ebx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %rbp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %r15
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rsi, 40(%rsp)          # 8-byte Spill
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movq	%rdi, %r13
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	addq	$8, %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$1, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%al
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	orb	%bl, %al
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	16(%r15), %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$2, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rcx, 24(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%cl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	orb	%bl, %cl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %cl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	232(%rsp), %r12
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rsi, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rcx, 32(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	240(%rsp), %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmoveq	%rcx, %rsi
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rsi, 80(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %al
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %r14
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rdx, %r14
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %rdx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rdx, 72(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmovneq	%r15, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rcx, 64(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	232(%rdi), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 224(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rcx, 216(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	224(%rdi), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 208(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmovneq	%rax, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rcx, 200(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	216(%rdi), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 192(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmovneq	%rax, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rcx, 184(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	208(%rdi), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 176(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmovneq	%rax, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rcx, 168(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	200(%rdi), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 160(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmovneq	%rax, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rcx, 152(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	192(%rdi), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 144(%rsp)         # 8-byte Spill
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rcx, 136(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	184(%rdi), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 128(%rsp)         # 8-byte Spill
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rcx, 120(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	176(%rdi), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 112(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmovneq	%rax, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rcx, 104(%rsp)         # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	168(%rdi), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 96(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovneq	%rax, %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rcx, 88(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rbp, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%r8d, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	mu
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	leaq	24(%r13), %rdx
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	40(%rsp), %rbp          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testq	%rbp, %rbp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%cl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	orb	%bl, %cl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	leaq	144(%r13), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %cl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%r12, %rdx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rdx, 16(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%r12, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rax), %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	shlq	$16, %rcx
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rdx), %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%edx, %edx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rcx
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rcx, (%r15)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	32(%r13), %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$1, %rbp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%cl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	orb	%bl, %cl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %cl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   0            0            0            0            0           	movq	(%r14), %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%r12, %rsi
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rsi, 48(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rsi), %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	cmoveq	8(%r15), %rdx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rdx, (%r14)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	40(%r13), %rdx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmpq	$2, %rbp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%r12b
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	orb	%bl, %r12b
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %r12b
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rax), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdi, %rdx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rdx, 8(%rsp)           # 8-byte Spill
  6 ( 0.00%)   0            0            6 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	32(%rsp), %rdx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	152(%r13), %rbp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %cl
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rdx)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdi, %rbp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	24(%rsp), %rsi          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rbp), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	16(%rsp), %rcx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movl	$0, %ecx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rcx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%r14, 56(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%r14), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	48(%rsp), %r14          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%r14), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rcx)
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	(%rbp), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	8(%rsp), %rcx           # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	32(%rsp), %rcx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   5 ( 0.02%)   3 ( 0.01%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	addq	$160, %r13
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %r12b
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rcx)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %r12
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	232(%rsp), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmoveq	%rax, %r13
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   0            0            6 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	24(%rsp), %rbp          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rbp, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%r13), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	16(%rsp), %rcx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %ecx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rcx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	56(%rsp), %rcx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%r14), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rcx)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %r14
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	(%r13), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	8(%rsp), %rcx           # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	xorq	(%r12), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r12)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rbp, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	40(%rsp), %rbp          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$3, %rbp
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	88(%rsp), %rcx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	cmovgq	96(%rsp), %rcx          # 8-byte Folded Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	16(%rsp), %r13          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movl	$0, %edx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%r14), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	48(%rsp), %r12          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%r12), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r14)
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	movq	8(%rsp), %r14           # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%r14), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	32(%rsp), %rcx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rcx)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	24(%rsp), %rsi          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmpq	$4, %rbp
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	104(%rsp), %rcx         # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmovgq	112(%rsp), %rcx         # 8-byte Folded Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	56(%rsp), %rdx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%rdx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rbp
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%r12), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rdx)
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%r14), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	32(%rsp), %rcx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rcx)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	24(%rsp), %rsi          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	40(%rsp), %r12          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$5, %r12
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	120(%rsp), %rcx         # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	cmovgq	128(%rsp), %rcx         # 8-byte Folded Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movl	$0, %edx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	56(%rsp), %r14          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%r14), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rbp), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r14)
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   0            0            0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	8(%rsp), %r13           # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%r13), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	32(%rsp), %rcx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rcx)
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   0            0            6 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	24(%rsp), %rbp          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rbp, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmpq	$6, %r12
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	136(%rsp), %rcx         # 8-byte Reload
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   0            0            0            0            0           	cmovgq	144(%rsp), %rcx         # 8-byte Folded Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	16(%rsp), %rdx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%r14), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	48(%rsp), %rdx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rdx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r14)
  6 ( 0.00%)   0            0            6 ( 0.01%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%r13), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	32(%rsp), %r12          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%r12), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r12)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rbp, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	40(%rsp), %rbp          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$7, %rbp
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	152(%rsp), %rcx         # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	cmovgq	160(%rsp), %rcx         # 8-byte Folded Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	16(%rsp), %r13          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%r14), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	48(%rsp), %rdx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rdx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r14)
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	8(%rsp), %rcx           # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	xorq	(%r12), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r12)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   0            0            6 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	24(%rsp), %rsi          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmpq	$8, %rbp
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	168(%rsp), %rcx         # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmovgq	176(%rsp), %rcx         # 8-byte Folded Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%r13), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movl	$0, %edx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%r14), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	48(%rsp), %rbp          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rbp), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r14)
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	8(%rsp), %r14           # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%r14), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	xorq	(%r12), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r12)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	movq	24(%rsp), %r13          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r13, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	40(%rsp), %r12          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpq	$9, %r12
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	184(%rsp), %rcx         # 8-byte Reload
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	cmovgq	192(%rsp), %rcx         # 8-byte Folded Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	16(%rsp), %rdx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%rdx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmoveq	%rdx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	56(%rsp), %rdx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%rdx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rbp), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rdx)
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%r14), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   5 ( 0.02%)   1 ( 0.00%)   0            0            0           	movq	32(%rsp), %r14          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%r14), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r14)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r13, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	cmpq	$10, %r12
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	200(%rsp), %rcx         # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmovgq	208(%rsp), %rcx         # 8-byte Folded Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	16(%rsp), %r12          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%r12), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$0, %edx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	56(%rsp), %rdx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%rdx), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rbp), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rdx)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %rbp
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	8(%rsp), %rcx           # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	xorq	(%r14), %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r14)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r13, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	rho
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	cmpq	$11, 40(%rsp)           # 8-byte Folded Reload
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	216(%rsp), %rcx         # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	cmovgq	224(%rsp), %rcx         # 8-byte Folded Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	(%r12), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movl	$0, %edx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmoveq	%rdx, %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	xorq	%rax, (%r15)
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%rbp), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	48(%rsp), %rdx          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	xorq	(%rdx), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rbp)
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   0            0            0            0            0           	movq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	8(%rsp), %rcx           # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	xorq	(%rcx), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	xorq	(%r14), %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%r14)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testq	%r13, %r13
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	movq	64(%rsp), %rax          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovgq	%r15, %rax
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 64(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	movq	(%rax), %rdx
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	72(%rsp), %rax          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%rax), %r14
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %r8
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %r8
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %r11
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	shrq	$16, %r11
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	80(%rsp), %rax          # 8-byte Reload
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	(%rax), %r9
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %r10
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %r10
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$24, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rax, %rbp
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	movq	%rax, 16(%rsp)          # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$8, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rax, %rsi
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, 8(%rsp)           # 8-byte Spill
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$8, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$24, %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	movq	%rdx, %r12
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %r12
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$8, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r12, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rax, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r8, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rcx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	xorq	%r10, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$8, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r14, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdx, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$16, %rdi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rbp
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	shlq	$24, %rbp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$24, %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdx, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %rbp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$16, %rbp
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r9, %r13
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$24, %r13
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	xorq	%rbp, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r13, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$8, %rsi
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r8, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r10, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r13, %rax
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r12, %rax
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	xorq	%r12, %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r9, %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r8, %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$8, %r14
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r14, %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rdx
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	xorq	16(%rsp), %rdx          # 8-byte Folded Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rdx
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	shlq	$24, %r9
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r9, %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r10, %rdx
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	xorq	8(%rsp), %rdx           # 8-byte Folded Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rcx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rdx
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	testb	$1, %bl
  6 ( 0.00%)   0            0            6 ( 0.01%)   3 ( 0.01%)   3 ( 0.01%)   0            0            0           	cmoveq	(%r15), %rcx
  6 ( 0.00%)   0            0            6 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	64(%rsp), %rsi          # 8-byte Reload
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            6 ( 0.02%)   0            0           	movq	%rcx, (%rsi)
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	8(%r15), %rax
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	72(%rsp), %rcx          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rax, (%rcx)
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	cmoveq	16(%r15), %rdx
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	movq	80(%rsp), %rax          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   0            0           	movq	%rdx, (%rax)
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   6 ( 0.01%)   5 ( 0.02%)   5 ( 0.02%)   0            0            0           	movq	24(%rsp), %rsi          # 8-byte Reload
  6 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%ebx, %edx
  6 ( 0.00%)   0            0            0            0            0            6 ( 0.02%)   6 ( 0.06%)   6 ( 0.06%)  	callq	mu
  6 ( 0.00%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0            0            0            0           	addq	$248, %rsp
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	popq	%rbx
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	popq	%r12
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	popq	%r13
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	popq	%r14
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	popq	%r15
  6 ( 0.00%)   0            0            6 ( 0.01%)   6 ( 0.02%)   6 ( 0.02%)   0            0            0           	popq	%rbp
  6 ( 0.00%)   0            0            6 ( 0.01%)   0            0            0            0            0           	retq
  .            .            .            .            .            .            .            .            .           .Lfunc_end10:
  .            .            .            .            .            .            .            .            .           	.size	decrypt, .Lfunc_end10-decrypt
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	twy_key                 # -- Begin function twy_key
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	twy_key,@function
  .            .            .            .            .            .            .            .            .           twy_key:                                # @twy_key
  .            .            .            .            .            .            .            .            .           # %bb.0:
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   0            0           	pushq	%rbp
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   1 ( 0.01%)   1 ( 0.01%)  	pushq	%r15
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	pushq	%r14
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	pushq	%r13
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	pushq	%r12
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	pushq	%rbx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	subq	$24, %rsp
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	%rsi, 16(%rsp)          # 8-byte Spill
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %rbx
  4 ( 0.00%)   0            0            4 ( 0.01%)   0            0            0            0            0           	movq	(%rdx), %rcx
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	%rcx, (%rdi)
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	%rcx, 24(%rdi)
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            0            0           	movq	8(%rdx), %r15
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	%r15, 8(%rdi)
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	%r15, 32(%rdi)
  4 ( 0.00%)   0            0            4 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	movq	16(%rdx), %r10
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %r9
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$16, %r9
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rsi
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %rsi
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            0            0            0           	movq	%r15, %r11
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$16, %r11
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r10, %r8
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %r8
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %r14
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$24, %r14
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r10, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$8, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rax, %rdi
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	%rax, 8(%rsp)           # 8-byte Spill
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r10, %rbp
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$8, %rbp
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$24, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %r13
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$16, %r13
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$8, %rax
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            0            0            0           	xorq	%rcx, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r13, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rax, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r14, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r8, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %rbp
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$8, %rbp
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            0            0            0           	xorq	%r15, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rbp
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$24, %rbp
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$24, %rcx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r9, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rcx, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r10, %rbp
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            0            0            0           	shrq	$16, %rbp
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r10, %r12
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$24, %r12
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r12, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rdi
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$8, %rdi
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rax
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            0            0            0           	xorq	%r8, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r12, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r13, %rax
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r13, %rcx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r10, %rcx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rsi, %rcx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rdi, %rcx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shrq	$8, %r15
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r15, %rcx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r11, %rcx
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            0            0            0           	xorq	%r14, %rcx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%rbp, %rcx
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	%r10, 16(%rbx)
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	shlq	$24, %r10
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r10, %rcx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r8, %rcx
  4 ( 0.00%)   0            0            4 ( 0.01%)   0            0            0            0            0           	xorq	8(%rsp), %rcx           # 8-byte Folded Reload
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r9, %rdx
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	xorq	%r9, %rcx
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   0            0           	movq	%rdx, 24(%rbx)
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	%rax, 32(%rbx)
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	%rcx, 40(%rbx)
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	24(%rbx), %rdi
  4 ( 0.00%)   0            0            4 ( 0.01%)   0            0            0            0            0           	movq	16(%rsp), %rsi          # 8-byte Reload
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	$1, %edx
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	callq	mu
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   0            0           	movq	$2827, 48(%rbx)         # imm = 0xB0B
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$5654, 56(%rbx)         # imm = 0x1616
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$11308, 64(%rbx)        # imm = 0x2C2C
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	$22616, 72(%rbx)        # imm = 0x5858
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   0            0           	movq	$45232, 80(%rbx)        # imm = 0xB0B0
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$29041, 88(%rbx)        # imm = 0x7171
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$58082, 96(%rbx)        # imm = 0xE2E2
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	$54741, 104(%rbx)       # imm = 0xD5D5
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   0            0           	movq	$48059, 112(%rbx)       # imm = 0xBBBB
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$26471, 120(%rbx)       # imm = 0x6767
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$52942, 128(%rbx)       # imm = 0xCECE
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	$36237, 136(%rbx)       # imm = 0x8D8D
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$45489, 144(%rbx)       # imm = 0xB1B1
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$29555, 152(%rbx)       # imm = 0x7373
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   0            0           	movq	$59110, 160(%rbx)       # imm = 0xE6E6
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	$56797, 168(%rbx)       # imm = 0xDDDD
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$43947, 176(%rbx)       # imm = 0xABAB
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   0            0           	movq	$18247, 184(%rbx)       # imm = 0x4747
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$36494, 192(%rbx)       # imm = 0x8E8E
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	$3341, 200(%rbx)        # imm = 0xD0D
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   0            0           	movq	$6682, 208(%rbx)        # imm = 0x1A1A
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$13364, 216(%rbx)       # imm = 0x3434
  4 ( 0.00%)   0            0            0            0            0            4 ( 0.01%)   0            0           	movq	$26728, 224(%rbx)       # imm = 0x6868
  4 ( 0.00%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0            4 ( 0.01%)   4 ( 0.04%)   4 ( 0.04%)  	movq	$53456, 232(%rbx)       # imm = 0xD0D0
  4 ( 0.00%)   0            0            0            0            0            0            0            0           	addq	$24, %rsp
  4 ( 0.00%)   0            0            4 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	popq	%rbx
  4 ( 0.00%)   0            0            4 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	popq	%r12
  4 ( 0.00%)   0            0            4 ( 0.01%)   0            0            0            0            0           	popq	%r13
  4 ( 0.00%)   0            0            4 ( 0.01%)   0            0            0            0            0           	popq	%r14
  4 ( 0.00%)   0            0            4 ( 0.01%)   0            0            0            0            0           	popq	%r15
  4 ( 0.00%)   0            0            4 ( 0.01%)   4 ( 0.01%)   4 ( 0.01%)   0            0            0           	popq	%rbp
  4 ( 0.00%)   0            0            4 ( 0.01%)   0            0            0            0            0           	retq
  .            .            .            .            .            .            .            .            .           .Lfunc_end11:
  .            .            .            .            .            .            .            .            .           	.size	twy_key, .Lfunc_end11-twy_key
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	twy_enc                 # -- Begin function twy_enc
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	twy_enc,@function
  .            .            .            .            .            .            .            .            .           twy_enc:                                # @twy_enc
  .            .            .            .            .            .            .            .            .           # %bb.0:
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            1 ( 0.00%)   0            0           	pushq	%rbp
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	pushq	%r15
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	pushq	%r14
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	pushq	%r13
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	pushq	%r12
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   1 ( 0.01%)   1 ( 0.01%)  	pushq	%rbx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	pushq	%rax
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%r8d, %r13d
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %r14
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rsi, %r15
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %r12
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	24(%rdx), %rbx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%r8d, %r8d
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	testl	%r13d, %r13d
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%r8b
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovleq	%rdx, %rbx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	encrypt
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	leaq	24(%rbx), %rbp
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%r8d, %r8d
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpl	$1, %r13d
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%r8b
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	cmovleq	%rbx, %rbp
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rsi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rbx, %rdx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rcx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	encrypt
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	xorl	%r8d, %r8d
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpl	$2, %r13d
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%r8b
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	movq	%r15, %rsi
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rbp, %rdx
  1 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rcx
  1 ( 0.00%)   0            0            0            0            0            1 ( 0.00%)   0            0           	callq	encrypt
  1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0            0            0            0           	addq	$8, %rsp
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	popq	%rbx
  1 ( 0.00%)   0            0            1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	popq	%r12
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	popq	%r13
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	popq	%r14
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	popq	%r15
  1 ( 0.00%)   0            0            1 ( 0.00%)   1 ( 0.00%)   1 ( 0.00%)   0            0            0           	popq	%rbp
  1 ( 0.00%)   0            0            1 ( 0.00%)   0            0            0            0            0           	retq
  .            .            .            .            .            .            .            .            .           .Lfunc_end12:
  .            .            .            .            .            .            .            .            .           	.size	twy_enc, .Lfunc_end12-twy_enc
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	twy_dec                 # -- Begin function twy_dec
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	twy_dec,@function
  .            .            .            .            .            .            .            .            .           twy_dec:                                # @twy_dec
  .            .            .            .            .            .            .            .            .           # %bb.0:
  2 ( 0.00%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0            2 ( 0.01%)   0            0           	pushq	%rbp
  2 ( 0.00%)   0            0            0            0            0            2 ( 0.01%)   1 ( 0.01%)   1 ( 0.01%)  	pushq	%r15
  2 ( 0.00%)   0            0            0            0            0            2 ( 0.01%)   0            0           	pushq	%r14
  2 ( 0.00%)   0            0            0            0            0            2 ( 0.01%)   0            0           	pushq	%r13
  2 ( 0.00%)   0            0            0            0            0            2 ( 0.01%)   0            0           	pushq	%r12
  2 ( 0.00%)   0            0            0            0            0            2 ( 0.01%)   1 ( 0.01%)   1 ( 0.01%)  	pushq	%rbx
  2 ( 0.00%)   0            0            0            0            0            2 ( 0.01%)   0            0           	pushq	%rax
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movl	%r8d, %r13d
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rcx, %r14
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rsi, %r15
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rdi, %r12
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	leaq	24(%rdx), %rbx
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%r8d, %r8d
  2 ( 0.00%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0            0            0            0           	testl	%r13d, %r13d
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%r8b
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	cmovleq	%rdx, %rbx
  2 ( 0.00%)   0            0            0            0            0            2 ( 0.01%)   0            0           	callq	decrypt
  2 ( 0.00%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0            0            0            0           	leaq	24(%rbx), %rbp
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	xorl	%r8d, %r8d
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpl	$1, %r13d
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%r8b
  2 ( 0.00%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0            0            0            0           	cmovleq	%rbx, %rbp
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r15, %rsi
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rbx, %rdx
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rcx
  2 ( 0.00%)   0            0            0            0            0            2 ( 0.01%)   0            0           	callq	decrypt
  2 ( 0.00%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0            0            0            0           	xorl	%r8d, %r8d
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	cmpl	$2, %r13d
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	setg	%r8b
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r12, %rdi
  2 ( 0.00%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0            0            0            0           	movq	%r15, %rsi
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%rbp, %rdx
  2 ( 0.00%)   0            0            0            0            0            0            0            0           	movq	%r14, %rcx
  2 ( 0.00%)   0            0            0            0            0            2 ( 0.01%)   0            0           	callq	decrypt
  2 ( 0.00%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0            0            0            0           	addq	$8, %rsp
  2 ( 0.00%)   0            0            2 ( 0.00%)   0            0            0            0            0           	popq	%rbx
  2 ( 0.00%)   0            0            2 ( 0.00%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	popq	%r12
  2 ( 0.00%)   0            0            2 ( 0.00%)   0            0            0            0            0           	popq	%r13
  2 ( 0.00%)   0            0            2 ( 0.00%)   0            0            0            0            0           	popq	%r14
  2 ( 0.00%)   0            0            2 ( 0.00%)   0            0            0            0            0           	popq	%r15
  2 ( 0.00%)   0            0            2 ( 0.00%)   2 ( 0.01%)   2 ( 0.01%)   0            0            0           	popq	%rbp
  2 ( 0.00%)   0            0            2 ( 0.00%)   0            0            0            0            0           	retq
  .            .            .            .            .            .            .            .            .           .Lfunc_end13:
  .            .            .            .            .            .            .            .            .           	.size	twy_dec, .Lfunc_end13-twy_dec
  .            .            .            .            .            .            .            .            .                                                   # -- End function
  .            .            .            .            .            .            .            .            .           	.globl	twy_destroy             # -- Begin function twy_destroy
  .            .            .            .            .            .            .            .            .           	.p2align	4, 0x90
  .            .            .            .            .            .            .            .            .           	.type	twy_destroy,@function
  .            .            .            .            .            .            .            .            .           twy_destroy:                            # @twy_destroy
  .            .            .            .            .            .            .            .            .           # %bb.0:
-- line 3669 ----------------------------------------

--------------------------------------------------------------------------------
Ir              I1mr           ILmr           Dr              D1mr           DLmr           Dw             D1mw           DLmw           
--------------------------------------------------------------------------------
56,319 (18.31%) 6,752 (18.74%) 6,752 (18.74%) 13,699 (19.58%) 3,582 (11.19%) 3,541 (11.09%) 8,518 (31.30%) 2,661 (25.45%) 2,657 (25.43%)  events annotated

