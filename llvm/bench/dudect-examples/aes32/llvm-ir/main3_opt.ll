; ModuleID = 'dudect-examples/aes32/llvm-ir/main3.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@chunk_size = dso_local local_unnamed_addr constant i64 16, align 8
@number_measurements = dso_local local_unnamed_addr constant i64 1, align 8
@__const.main.input_data = private unnamed_addr constant [16 x i8] c".\B1\C9!#S\97\FA\E2\19\9Ee\99\F6d\C5", align 16
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@rk = internal global [44 x i32] zeroinitializer, align 16
@Te0 = internal unnamed_addr constant [256 x i32] [i32 -966564955, i32 -126059388, i32 -294160487, i32 -159679603, i32 -855539, i32 -697603139, i32 -563122255, i32 -1849309868, i32 1613770832, i32 33620227, i32 -832084055, i32 1445669757, i32 -402719207, i32 -1244145822, i32 1303096294, i32 -327780710, i32 -1882535355, i32 528646813, i32 -1983264448, i32 -92439161, i32 -268764651, i32 -1302767125, i32 -1907931191, i32 -68095989, i32 1101901292, i32 -1277897625, i32 1604494077, i32 1169141738, i32 597466303, i32 1403299063, i32 -462261610, i32 -1681866661, i32 1974974402, i32 -503448292, i32 1033081774, i32 1277568618, i32 1815492186, i32 2118074177, i32 -168298750, i32 -2083730353, i32 1748251740, i32 1369810420, i32 -773462732, i32 -101584632, i32 -495881837, i32 -1411852173, i32 1647391059, i32 706024767, i32 134480908, i32 -1782069422, i32 1176707941, i32 -1648114850, i32 806885416, i32 932615841, i32 168101135, i32 798661301, i32 235341577, i32 605164086, i32 461406363, i32 -538779075, i32 -840176858, i32 1311188841, i32 2142417613, i32 -361400929, i32 302582043, i32 495158174, i32 1479289972, i32 874125870, i32 907746093, i32 -596742478, i32 -1269146898, i32 1537253627, i32 -1538108682, i32 1983593293, i32 -1210657183, i32 2108928974, i32 1378429307, i32 -572267714, i32 1580150641, i32 327451799, i32 -1504488459, i32 -1177431704, i32 0, i32 -1041371860, i32 1075847264, i32 -469959649, i32 2041688520, i32 -1235526675, i32 -731223362, i32 -1916023994, i32 1740553945, i32 1916352843, i32 -1807070498, i32 -1739830060, i32 -1336387352, i32 -2049978550, i32 -1143943061, i32 -974131414, i32 1336584933, i32 -302253290, i32 -2042412091, i32 -1706209833, i32 1714631509, i32 293963156, i32 -1975171633, i32 -369493744, i32 67240454, i32 -25198719, i32 -1605349136, i32 2017213508, i32 631218106, i32 1269344483, i32 -1571728909, i32 1571005438, i32 -2143272768, i32 93294474, i32 1066570413, i32 563977660, i32 1882732616, i32 -235539196, i32 1673313503, i32 2008463041, i32 -1344611723, i32 1109467491, i32 537923632, i32 -436207846, i32 -34344178, i32 -1076702611, i32 -2117218996, i32 403442708, i32 638784309, i32 -1007883217, i32 -1101045791, i32 899127202, i32 -2008791860, i32 773265209, i32 -1815821225, i32 1437050866, i32 -58818942, i32 2050833735, i32 -932944724, i32 -1168286233, i32 840505643, i32 -428641387, i32 -1067425632, i32 427917720, i32 -1638969391, i32 -1545806721, i32 1143087718, i32 1412049534, i32 999329963, i32 193497219, i32 -1941551414, i32 -940642775, i32 1807268051, i32 672404540, i32 -1478566279, i32 -1134666014, i32 369822493, i32 -1378100362, i32 -606019525, i32 1681011286, i32 1949973070, i32 336202270, i32 -1840690725, i32 201721354, i32 1210328172, i32 -1201906460, i32 -1614626211, i32 -1110191250, i32 1135389935, i32 -1000185178, i32 965841320, i32 831886756, i32 -739974089, i32 -226920053, i32 -706222286, i32 -1949775805, i32 104281945, i32 -630362697, i32 26054028, i32 -1311386268, i32 -1672589614, i32 1235855840, i32 -663982924, i32 -1403627782, i32 -202050553, i32 -806688219, i32 -899324497, i32 -193299826, i32 1202630377, i32 268961816, i32 1874508501, i32 -260540280, i32 1243948399, i32 1546530418, i32 941366308, i32 1470539505, i32 1941222599, i32 -1748580783, i32 -873928669, i32 -1579295364, i32 -395021156, i32 1042226977, i32 -1773450275, i32 1639824860, i32 227249030, i32 260737669, i32 -529502064, i32 2084453954, i32 1907733956, i32 -865704278, i32 -1874310952, i32 100860677, i32 -134810111, i32 470683154, i32 -1033805405, i32 1781871967, i32 -1370007559, i32 1773779408, i32 394692241, i32 -1715355304, i32 974986535, i32 664706745, i32 -639508168, i32 -336005101, i32 731420851, i32 571543859, i32 -764843589, i32 -1445340816, i32 126783113, i32 865375399, i32 765172662, i32 1008606754, i32 361203602, i32 -907417312, i32 -2016489911, i32 -1437248001, i32 1344809080, i32 -1512054918, i32 59542671, i32 1503764984, i32 160008576, i32 437062935, i32 1707065306, i32 -672733647, i32 -2076032314, i32 -798463816, i32 -2109652541, i32 697932208, i32 1512910199, i32 504303377, i32 2075177163, i32 -1470868228, i32 1841019862, i32 739644986], align 16
@Te1 = internal unnamed_addr constant [256 x i32] [i32 -1513725085, i32 -2064089988, i32 -1712425097, i32 -1913226373, i32 234877682, i32 -1110021269, i32 -1310822545, i32 1418839493, i32 1348481072, i32 50462977, i32 -1446090905, i32 2102799147, i32 434634494, i32 1656084439, i32 -431117397, i32 -1695779210, i32 1167051466, i32 -1658879358, i32 1082771913, i32 -2013627011, i32 368048890, i32 -340633255, i32 -913422521, i32 201060592, i32 -331240019, i32 1739838676, i32 -44064094, i32 -364531793, i32 -1088185188, i32 -145513308, i32 -1763413390, i32 1536934080, i32 -1032472649, i32 484572669, i32 -1371696237, i32 1783375398, i32 1517041206, i32 1098792767, i32 49674231, i32 1334037708, i32 1550332980, i32 -195975771, i32 886171109, i32 150598129, i32 -1813876367, i32 1940642008, i32 1398944049, i32 1059722517, i32 201851908, i32 1385547719, i32 1699095331, i32 1587397571, i32 674240536, i32 -1590192490, i32 252314885, i32 -1255171430, i32 151914247, i32 908333586, i32 -1692696448, i32 1038082786, i32 651029483, i32 1766729511, i32 -847269198, i32 -1612024459, i32 454166793, i32 -1642232957, i32 1951935532, i32 775166490, i32 758520603, i32 -1294176658, i32 -290170278, i32 -77881184, i32 -157003182, i32 1299594043, i32 1639438038, i32 -830622797, i32 2068982057, i32 1054729187, i32 1901997871, i32 -1760328572, i32 -173649069, i32 1757008337, i32 0, i32 750906861, i32 1614815264, i32 535035132, i32 -931548751, i32 -306816165, i32 -1093375382, i32 1183697867, i32 -647512386, i32 1265776953, i32 -560706998, i32 -728216500, i32 -391096232, i32 1250283471, i32 1807470800, i32 717615087, i32 -447763798, i32 384695291, i32 -981056701, i32 -677753523, i32 1432761139, i32 -1810791035, i32 -813021883, i32 283769337, i32 100925954, i32 -2114027649, i32 -257929136, i32 1148730428, i32 -1171939425, i32 -481580888, i32 -207466159, i32 -27417693, i32 -1065336768, i32 -1979347057, i32 -1388342638, i32 -1138647651, i32 1215313976, i32 82966005, i32 -547111748, i32 -1049119050, i32 1974459098, i32 1665278241, i32 807407632, i32 451280895, i32 251524083, i32 1841287890, i32 1283575245, i32 337120268, i32 891687699, i32 801369324, i32 -507617441, i32 -1573546089, i32 -863484860, i32 959321879, i32 1469301956, i32 -229267545, i32 -2097381762, i32 1199193405, i32 -1396153244, i32 -407216803, i32 724703513, i32 -1780059277, i32 -1598005152, i32 -1743158911, i32 -778154161, i32 2141445340, i32 1715741218, i32 2119445034, i32 -1422159728, i32 -2096396152, i32 -896776634, i32 700968686, i32 -747915080, i32 1009259540, i32 2041044702, i32 -490971554, i32 487983883, i32 1991105499, i32 1004265696, i32 1449407026, i32 1316239930, i32 504629770, i32 -611169975, i32 168560134, i32 1816667172, i32 -457679780, i32 1570751170, i32 1857934291, i32 -280777556, i32 -1497079198, i32 -1472622191, i32 -1540254315, i32 936633572, i32 -1947043463, i32 852879335, i32 1133234376, i32 1500395319, i32 -1210421907, i32 -1946055283, i32 1689376213, i32 -761508274, i32 -532043351, i32 -1260884884, i32 -89369002, i32 133428468, i32 634383082, i32 -1345690267, i32 -1896580486, i32 -381178194, i32 403703816, i32 -714097990, i32 -1997506440, i32 1867130149, i32 1918643758, i32 607656988, i32 -245913946, i32 -948718412, i32 1368901318, i32 600565992, i32 2090982877, i32 -1662487436, i32 557719327, i32 -577352885, i32 -597574211, i32 -2045932661, i32 -2062579062, i32 -1864339344, i32 1115438654, i32 -999180875, i32 -1429445018, i32 -661632952, i32 84280067, i32 33027830, i32 303828494, i32 -1547542175, i32 1600795957, i32 -106014889, i32 -798377543, i32 -1860729210, i32 1486471617, i32 658119965, i32 -1188585826, i32 953803233, i32 334231800, i32 -1288988520, i32 857870609, i32 -1143838359, i32 1890179545, i32 -1995993458, i32 -1489791852, i32 -1238525029, i32 574365214, i32 -1844082809, i32 550103529, i32 1233637070, i32 -5614251, i32 2018519080, i32 2057691103, i32 -1895592820, i32 -128343647, i32 -2146858615, i32 387583245, i32 -630865985, i32 836232934, i32 -964410814, i32 -1194301336, i32 -1014873791, i32 -1339450983, i32 2002398509, i32 287182607, i32 -881086288, i32 -56077228, i32 -697451589, i32 975967766], align 16
@Te2 = internal unnamed_addr constant [256 x i32] [i32 1671808611, i32 2089089148, i32 2006576759, i32 2072901243, i32 -233963534, i32 1807603307, i32 1873927791, i32 -984313403, i32 810573872, i32 16974337, i32 1739181671, i32 729634347, i32 -31856642, i32 -681396777, i32 -1410970197, i32 1989864566, i32 -901410870, i32 -2103631998, i32 -918517303, i32 2106063485, i32 -99225606, i32 1508618841, i32 1204391495, i32 -267650064, i32 -1377025619, i32 -731401260, i32 -1560453214, i32 -1343601233, i32 -1665195108, i32 -1527295068, i32 1922491506, i32 -1067738176, i32 -1211992649, i32 -48438787, i32 -1817297517, i32 644500518, i32 911895606, i32 1061256767, i32 -150800905, i32 -867204148, i32 878471220, i32 -1510714971, i32 -449523227, i32 -251069967, i32 1905517169, i32 -663508008, i32 827548209, i32 356461077, i32 67897348, i32 -950889017, i32 593839651, i32 -1017209405, i32 405286936, i32 -1767819370, i32 84871685, i32 -1699401830, i32 118033927, i32 305538066, i32 -2137318528, i32 -499261470, i32 -349778453, i32 661212711, i32 -1295155278, i32 1973414517, i32 152769033, i32 -2086789757, i32 745822252, i32 439235610, i32 455947803, i32 1857215598, i32 1525593178, i32 -1594139744, i32 1391895634, i32 994932283, i32 -698239018, i32 -1278313037, i32 695947817, i32 -482419229, i32 795958831, i32 -2070473852, i32 1408607827, i32 -781665839, i32 0, i32 -315833875, i32 543178784, i32 -65018884, i32 -1312261711, i32 1542305371, i32 1790891114, i32 -884568629, i32 -1093048386, i32 961245753, i32 1256100938, i32 1289001036, i32 1491644504, i32 -817199665, i32 -798245936, i32 -282409489, i32 -1427812438, i32 -82383365, i32 1137018435, i32 1305975373, i32 861234739, i32 -2053893755, i32 1171229253, i32 -116332039, i32 33948674, i32 2139225727, i32 1357946960, i32 1011120188, i32 -1615190625, i32 -1461498968, i32 1374921297, i32 -1543610973, i32 1086357568, i32 -1886780017, i32 -1834139758, i32 -1648615011, i32 944271416, i32 -184225291, i32 -1126210628, i32 -1228834890, i32 -629821478, i32 560153121, i32 271589392, i32 -15014401, i32 -217121293, i32 -764559406, i32 -850624051, i32 202643468, i32 322250259, i32 -332413972, i32 1608629855, i32 -1750977129, i32 1154254916, i32 389623319, i32 -1000893500, i32 -1477290585, i32 2122513534, i32 1028094525, i32 1689045092, i32 1575467613, i32 422261273, i32 1939203699, i32 1621147744, i32 -2120738431, i32 1339137615, i32 -595614756, i32 577127458, i32 712922154, i32 -1867826288, i32 -2004677752, i32 1187679302, i32 -299251730, i32 -1194103880, i32 339486740, i32 -562452514, i32 1591917662, i32 186455563, i32 -612979237, i32 -532948000, i32 844522546, i32 978220090, i32 169743370, i32 1239126601, i32 101321734, i32 611076132, i32 1558493276, i32 -1034051646, i32 -747717165, i32 -1393605716, i32 1655096418, i32 -1851246191, i32 -1784401515, i32 -466103324, i32 2039214713, i32 -416098841, i32 -935097400, i32 928607799, i32 1840765549, i32 -1920204403, i32 -714821163, i32 1322425422, i32 -1444918871, i32 1823791212, i32 1459268694, i32 -200805388, i32 -366620694, i32 1706019429, i32 2056189050, i32 -1360443474, i32 135794696, i32 -1160417350, i32 2022240376, i32 628050469, i32 779246638, i32 472135708, i32 -1494132826, i32 -1261997132, i32 -967731258, i32 -400307224, i32 -579034659, i32 1956440180, i32 522272287, i32 1272813131, i32 -1109630531, i32 -1954148981, i32 -1970991222, i32 1888542832, i32 1044544574, i32 -1245417035, i32 1722469478, i32 1222152264, i32 50660867, i32 -167643146, i32 236067854, i32 1638122081, i32 895445557, i32 1475980887, i32 -1177523783, i32 -2037311610, i32 -1051158079, i32 489110045, i32 -1632032866, i32 -516367903, i32 -132912136, i32 -1733088360, i32 288563729, i32 1773916777, i32 -646927911, i32 -1903622258, i32 -1800981612, i32 -1682559589, i32 505560094, i32 -2020469369, i32 -383727127, i32 -834041906, i32 1442818645, i32 678973480, i32 -545610273, i32 -1936784500, i32 -1577559647, i32 -1988097655, i32 219617805, i32 -1076206145, i32 -432941082, i32 1120306242, i32 1756942440, i32 1103331905, i32 -1716508263, i32 762796589, i32 252780047, i32 -1328841808, i32 1425844308, i32 -1143575109, i32 372911126], align 16
@Te3 = internal unnamed_addr constant [256 x i32] [i32 1667474886, i32 2088535288, i32 2004326894, i32 2071694838, i32 -219017729, i32 1802223062, i32 1869591006, i32 -976923503, i32 808472672, i32 16843522, i32 1734846926, i32 724270422, i32 -16901657, i32 -673750347, i32 -1414797747, i32 1987484396, i32 -892713585, i32 -2105369313, i32 -909557623, i32 2105378810, i32 -84273681, i32 1499065266, i32 1195886990, i32 -252703749, i32 -1381110719, i32 -724277325, i32 -1566376609, i32 -1347425723, i32 -1667449053, i32 -1532692653, i32 1920112356, i32 -1061135461, i32 -1212693899, i32 -33743647, i32 -1819038147, i32 640051788, i32 909531756, i32 1061110142, i32 -134806795, i32 -859025533, i32 875846760, i32 -1515850671, i32 -437963567, i32 -235861767, i32 1903268834, i32 -656903253, i32 825316194, i32 353713962, i32 67374088, i32 -943238507, i32 589522246, i32 -1010606435, i32 404236336, i32 -1768513225, i32 84217610, i32 -1701137105, i32 117901582, i32 303183396, i32 -2139055333, i32 -488489505, i32 -336910643, i32 656894286, i32 -1296904833, i32 1970642922, i32 151591698, i32 -2088526307, i32 741110872, i32 437923380, i32 454765878, i32 1852748508, i32 1515908788, i32 -1600062629, i32 1381168804, i32 993742198, i32 -690593353, i32 -1280061827, i32 690584402, i32 -471646499, i32 791638366, i32 -2071685357, i32 1398011302, i32 -774805319, i32 0, i32 -303223615, i32 538992704, i32 -50585629, i32 -1313748871, i32 1532751286, i32 1785380564, i32 -875870579, i32 -1094788761, i32 960056178, i32 1246420628, i32 1280103576, i32 1482221744, i32 -808498555, i32 -791647301, i32 -269538619, i32 -1431640753, i32 -67430675, i32 1128514950, i32 1296947098, i32 859002214, i32 -2054843375, i32 1162203018, i32 -101117719, i32 33687044, i32 2139062782, i32 1347481760, i32 1010582648, i32 -1616922075, i32 -1465326773, i32 1364325282, i32 -1549533603, i32 1077985408, i32 -1886418427, i32 -1835881153, i32 -1650607071, i32 943212656, i32 -168491791, i32 -1128472733, i32 -1229536905, i32 -623217233, i32 555836226, i32 269496352, i32 -58651, i32 -202174723, i32 -757961281, i32 -842183551, i32 202118168, i32 320025894, i32 -320065597, i32 1600119230, i32 -1751670219, i32 1145359496, i32 387397934, i32 -993765485, i32 -1482165675, i32 2122220284, i32 1027426170, i32 1684319432, i32 1566435258, i32 421079858, i32 1936954854, i32 1616945344, i32 -2122213351, i32 1330631070, i32 -589529181, i32 572679748, i32 707427924, i32 -1869567173, i32 -2004319477, i32 1179044492, i32 -286381625, i32 -1195846805, i32 336870440, i32 -555845209, i32 1583276732, i32 185277718, i32 -606374227, i32 -522175525, i32 842159716, i32 976899700, i32 168435220, i32 1229577106, i32 101059084, i32 606366792, i32 1549591736, i32 -1027449441, i32 -741118275, i32 -1397952701, i32 1650632388, i32 -1852725191, i32 -1785355215, i32 -454805549, i32 2038008818, i32 -404278571, i32 -926399605, i32 926374254, i32 1835907034, i32 -1920103423, i32 -707435343, i32 1313788572, i32 -1448484791, i32 1819063512, i32 1448540844, i32 -185333773, i32 -353753649, i32 1701162954, i32 2054852340, i32 -1364268729, i32 134748176, i32 -1162160785, i32 2021165296, i32 623210314, i32 774795868, i32 471606328, i32 -1499008681, i32 -1263220877, i32 -960081513, i32 -387439669, i32 -572687199, i32 1953799400, i32 522133822, i32 1263263126, i32 -1111630751, i32 -1953790451, i32 -1970633457, i32 1886425312, i32 1044267644, i32 -1246378895, i32 1718004428, i32 1212733584, i32 50529542, i32 -151649801, i32 235803164, i32 1633788866, i32 892690282, i32 1465383342, i32 -1179004823, i32 -2038001385, i32 -1044293479, i32 488449850, i32 -1633765081, i32 -505333543, i32 -117959701, i32 -1734823125, i32 286339874, i32 1768537042, i32 -640061271, i32 -1903261433, i32 -1802197197, i32 -1684294099, i32 505291324, i32 -2021158379, i32 -370597687, i32 -825341561, i32 1431699370, i32 673740880, i32 -539002203, i32 -1936945405, i32 -1583220647, i32 -1987477495, i32 218961690, i32 -1077945755, i32 -421121577, i32 1111672452, i32 1751693520, i32 1094828930, i32 -1717981143, i32 757954394, i32 252645662, i32 -1330590853, i32 1414855848, i32 -1145317779, i32 370555436], align 16
@Te4 = internal unnamed_addr constant [256 x i32] [i32 1667457891, i32 2088533116, i32 2004318071, i32 2071690107, i32 -218959118, i32 1802201963, i32 1869573999, i32 -976894523, i32 808464432, i32 16843009, i32 1734829927, i32 724249387, i32 -16843010, i32 -673720361, i32 -1414812757, i32 1987475062, i32 -892679478, i32 -2105376126, i32 -909522487, i32 2105376125, i32 -84215046, i32 1499027801, i32 1195853639, i32 -252645136, i32 -1381126739, i32 -724249388, i32 -1566399838, i32 -1347440721, i32 -1667457892, i32 -1532713820, i32 1920103026, i32 -1061109568, i32 -1212696649, i32 -33686019, i32 -1819044973, i32 640034342, i32 909522486, i32 1061109567, i32 -134744073, i32 -858993460, i32 875836468, i32 -1515870811, i32 -437918235, i32 -235802127, i32 1903260017, i32 -656877352, i32 825307441, i32 353703189, i32 67372036, i32 -943208505, i32 589505315, i32 -1010580541, i32 404232216, i32 -1768515946, i32 84215045, i32 -1701143910, i32 117901063, i32 303174162, i32 -2139062144, i32 -488447262, i32 -336860181, i32 656877351, i32 -1296911694, i32 1970632053, i32 151587081, i32 -2088533117, i32 741092396, i32 437918234, i32 454761243, i32 1852730990, i32 1515870810, i32 -1600085856, i32 1381126738, i32 993737531, i32 -690563370, i32 -1280068685, i32 690563369, i32 -471604253, i32 791621423, i32 -2071690108, i32 1397969747, i32 -774778415, i32 0, i32 -303174163, i32 538976288, i32 -50529028, i32 -1313754703, i32 1532713819, i32 1785358954, i32 -875836469, i32 -1094795586, i32 960051513, i32 1246382666, i32 1280068684, i32 1482184792, i32 -808464433, i32 -791621424, i32 -269488145, i32 -1431655766, i32 -67372037, i32 1128481603, i32 1296911693, i32 858993459, i32 -2054847099, i32 1162167621, i32 -101058055, i32 33686018, i32 2139062143, i32 1347440720, i32 1010580540, i32 -1616928865, i32 -1465341784, i32 1364283729, i32 -1549556829, i32 1077952576, i32 -1886417009, i32 -1835887982, i32 -1650614883, i32 943208504, i32 -168430091, i32 -1128481604, i32 -1229539658, i32 -623191334, i32 555819297, i32 269488144, i32 -1, i32 -202116109, i32 -757935406, i32 -842150451, i32 202116108, i32 320017171, i32 -320017172, i32 1600085855, i32 -1751672937, i32 1145324612, i32 387389207, i32 -993737532, i32 -1482184793, i32 2122219134, i32 1027423549, i32 1684300900, i32 1566399837, i32 421075225, i32 1936946035, i32 1616928864, i32 -2122219135, i32 1330597711, i32 -589505316, i32 572662306, i32 707406378, i32 -1869574000, i32 -2004318072, i32 1179010630, i32 -286331154, i32 -1195853640, i32 336860180, i32 -555819298, i32 1583242846, i32 185273099, i32 -606348325, i32 -522133280, i32 842150450, i32 976894522, i32 168430090, i32 1229539657, i32 101058054, i32 606348324, i32 1549556828, i32 -1027423550, i32 -741092397, i32 -1397969748, i32 1650614882, i32 -1852730991, i32 -1785358955, i32 -454761244, i32 2038004089, i32 -404232217, i32 -926365496, i32 926365495, i32 1835887981, i32 -1920103027, i32 -707406379, i32 1313754702, i32 -1448498775, i32 1819044972, i32 1448498774, i32 -185273100, i32 -353703190, i32 1701143909, i32 2054847098, i32 -1364283730, i32 134744072, i32 -1162167622, i32 2021161080, i32 623191333, i32 774778414, i32 471604252, i32 -1499027802, i32 -1263225676, i32 -960051514, i32 -387389208, i32 -572662307, i32 1953789044, i32 522133279, i32 1263225675, i32 -1111638595, i32 -1953789045, i32 -1970632054, i32 1886417008, i32 1044266558, i32 -1246382667, i32 1717986918, i32 1212696648, i32 50529027, i32 -151587082, i32 235802126, i32 1633771873, i32 892679477, i32 1465341783, i32 -1179010631, i32 -2038004090, i32 -1044266559, i32 488447261, i32 -1633771874, i32 -505290271, i32 -117901064, i32 -1734829928, i32 286331153, i32 1768515945, i32 -640034343, i32 -1903260018, i32 -1802201964, i32 -1684300901, i32 505290270, i32 -2021161081, i32 -370546199, i32 -825307442, i32 1431655765, i32 673720360, i32 -538976289, i32 -1936946036, i32 -1583242847, i32 -1987475063, i32 218959117, i32 -1077952577, i32 -421075226, i32 1111638594, i32 1751672936, i32 1094795585, i32 -1717986919, i32 757935405, i32 252645135, i32 -1330597712, i32 1414812756, i32 -1145324613, i32 370546198], align 16
@Td0 = internal unnamed_addr constant [256 x i32] [i32 1374988112, i32 2118214995, i32 437757123, i32 975658646, i32 1001089995, i32 530400753, i32 -1392879445, i32 1273168787, i32 540080725, i32 -1384747530, i32 -1999866223, i32 -184398811, i32 1340463100, i32 -987051049, i32 641025152, i32 -1251826801, i32 -558802359, i32 632953703, i32 1172967064, i32 1576976609, i32 -1020300030, i32 -2125664238, i32 -1924753501, i32 1809054150, i32 59727847, i32 361929877, i32 -1083344149, i32 -1789765158, i32 -725712083, i32 1484005843, i32 1239443753, i32 -1899378620, i32 1975683434, i32 -191989384, i32 -1722270101, i32 666464733, i32 -1092530250, i32 -259478249, i32 -920605594, i32 2110667444, i32 1675577880, i32 -451268222, i32 -1756286112, i32 1649639237, i32 -1318815776, i32 -1150570876, i32 -25059300, i32 -116905068, i32 1883793496, i32 -1891238631, i32 -1797362553, i32 1383856311, i32 -1418472669, i32 1917518562, i32 -484470953, i32 1716890410, i32 -1293211641, i32 800440835, i32 -2033878118, i32 -751368027, i32 807962610, i32 599762354, i32 33778362, i32 -317291940, i32 -1966138325, i32 -1485196142, i32 -217582864, i32 1315562145, i32 1708848333, i32 101039829, i32 -785096161, i32 -995688822, i32 875451293, i32 -1561111136, i32 92987698, i32 -1527321739, i32 193195065, i32 1080094634, i32 1584504582, i32 -1116860335, i32 1042385657, i32 -1763899843, i32 -583137874, i32 1306967366, i32 -1856729675, i32 1908694277, i32 67556463, i32 1615861247, i32 429456164, i32 -692196969, i32 -1992277044, i32 1742315127, i32 -1326955843, i32 126454664, i32 -417768648, i32 2043211483, i32 -1585706425, i32 2084704233, i32 -125559095, i32 0, i32 159417987, i32 841739592, i32 504459436, i32 1817866830, i32 -49348613, i32 260388950, i32 1034867998, i32 908933415, i32 168810852, i32 1750902305, i32 -1688513327, i32 607530554, i32 202008497, i32 -1822955761, i32 -1259432238, i32 463180190, i32 -2134850225, i32 1641816226, i32 1517767529, i32 470948374, i32 -493635062, i32 -1063245083, i32 1008918595, i32 303765277, i32 235474187, i32 -225720403, i32 766945465, i32 337553864, i32 1475418501, i32 -1351284916, i32 -291906117, i32 -1551933187, i32 -150919521, i32 1551037884, i32 1147550661, i32 1543208500, i32 -1958532746, i32 -886847780, i32 -1225917336, i32 -1192955549, i32 -684598070, i32 1113818384, i32 328671808, i32 -2067394272, i32 -2058738563, i32 -759480840, i32 -1359400431, i32 -953573011, i32 496906059, i32 -592301837, i32 226906860, i32 2009195472, i32 733156972, i32 -1452230247, i32 294930682, i32 1206477858, i32 -1459843900, i32 -1594867942, i32 1451044056, i32 573804783, i32 -2025238841, i32 -650587711, i32 -1932877058, i32 -1730933962, i32 -1493859889, i32 -1518674392, i32 -625504730, i32 1068351396, i32 742039012, i32 1350078989, i32 1784663195, i32 1417561698, i32 -158526526, i32 -1864845080, i32 775550814, i32 -2101104651, i32 -1621262146, i32 1775276924, i32 1876241833, i32 -819653965, i32 -928212677, i32 270040487, i32 -392404114, i32 -616842373, i32 -853116919, i32 1851332852, i32 -325404927, i32 -2091935064, i32 -426414491, i32 -1426069890, i32 566021896, i32 -283776794, i32 -1159226407, i32 1248802510, i32 -358676012, i32 699432150, i32 832877231, i32 708780849, i32 -962227152, i32 899835584, i32 1951317047, i32 -58537306, i32 -527380304, i32 866637845, i32 -251357110, i32 1106041591, i32 2144161806, i32 395441711, i32 1984812685, i32 1139781709, i32 -861254316, i32 -459930401, i32 -1630423581, i32 1282050075, i32 -1054072904, i32 1181045119, i32 -1654724092, i32 25965917, i32 -91786125, i32 -83148498, i32 -1285087910, i32 -1831087534, i32 -384805325, i32 1842759443, i32 -1697160820, i32 933301370, i32 1509430414, i32 -351060855, i32 -827774994, i32 -1218328267, i32 -518199827, i32 2051518780, i32 -1663901863, i32 1441952575, i32 404016761, i32 1942435775, i32 1408749034, i32 1610459739, i32 -549621996, i32 2017778566, i32 -894438527, i32 -1184316354, i32 941896748, i32 -1029488545, i32 371049330, i32 -1126030068, i32 675039627, i32 -15887039, i32 967311729, i32 135050206, i32 -659233636, i32 1683407248, i32 2076935265, i32 -718096784, i32 1215061108, i32 -793225406], align 16
@Td1 = internal unnamed_addr constant [256 x i32] [i32 1347548327, i32 1400783205, i32 -1021700188, i32 -1774573730, i32 -885281941, i32 -249586363, i32 -1414727080, i32 -1823743229, i32 1428173050, i32 -156404115, i32 -1853305738, i32 636813900, i32 -61872681, i32 -674944309, i32 -2144979644, i32 -1883938141, i32 1239331162, i32 1730525723, i32 -1740248562, i32 -513933632, i32 46346101, i32 310463728, i32 -1551022441, i32 -966011911, i32 -419197089, i32 -1793748324, i32 -339776134, i32 -627748263, i32 768917123, i32 -749177823, i32 692707433, i32 1150208456, i32 1786102409, i32 2029293177, i32 1805211710, i32 -584599183, i32 -1229004465, i32 401639597, i32 1724457132, i32 -1266823622, i32 409198410, i32 -2098914767, i32 1620529459, i32 1164071807, i32 -525245321, i32 -2068091986, i32 486441376, i32 -1795618773, i32 1483753576, i32 428819965, i32 -2020286868, i32 -1219331080, i32 598438867, i32 -495826174, i32 1474502543, i32 711349675, i32 129166120, i32 53458370, i32 -1702443653, i32 -1512884472, i32 -231724921, i32 -1306280027, i32 -1174273174, i32 1559041666, i32 730517276, i32 -1834518092, i32 -252508174, i32 -1588696606, i32 -848962828, i32 -721025602, i32 533804130, i32 -1966823682, i32 -1657524653, i32 -1599933611, i32 839224033, i32 1973745387, i32 957055980, i32 -1438621457, i32 106852767, i32 1371368976, i32 -113368694, i32 1033297158, i32 -1361232379, i32 1179510461, i32 -1248766835, i32 91341917, i32 1862534868, i32 -10465259, i32 605657339, i32 -1747534359, i32 -863420349, i32 2003294622, i32 -1112479678, i32 -2012771957, i32 954669403, i32 -612775698, i32 1201765386, i32 -377732593, i32 -906460130, i32 0, i32 -2096529274, i32 1211247597, i32 -1407315600, i32 1315723890, i32 -67301633, i32 1443857720, i32 507358933, i32 657861945, i32 1678381017, i32 560487590, i32 -778347692, i32 975451694, i32 -1324610969, i32 261314535, i32 -759894378, i32 -1642357871, i32 1333838021, i32 -1570644960, i32 1767536459, i32 370938394, i32 182621114, i32 -440360918, i32 1128014560, i32 487725847, i32 185469197, i32 -1376613433, i32 -1188186456, i32 -938205527, i32 -2057834215, i32 1286567175, i32 -1141990947, i32 -39616672, i32 -1611202266, i32 -1134791947, i32 -985373125, i32 878443390, i32 1988838185, i32 -590666810, i32 1756818940, i32 1673061617, i32 -891866660, i32 272786309, i32 1075025698, i32 545572369, i32 2105887268, i32 -120407235, i32 296679730, i32 1841768865, i32 1260232239, i32 -203640272, i32 -334657966, i32 -797457949, i32 1814803222, i32 -1716948807, i32 -99511224, i32 575138148, i32 -995558260, i32 446754879, i32 -665420500, i32 -282971248, i32 -947435186, i32 -1042728751, i32 -24327518, i32 915985419, i32 -811141759, i32 681933534, i32 651868046, i32 -1539330625, i32 -466863459, i32 223377554, i32 -1687527476, i32 1649704518, i32 -1024029421, i32 -393160520, i32 1580087799, i32 -175979601, i32 -1096852096, i32 2087309459, i32 -1452288723, i32 -1278270190, i32 1003007129, i32 -1492117379, i32 1860738147, i32 2077965243, i32 164439672, i32 -194094824, i32 32283319, i32 -1467789414, i32 1709610350, i32 2125135846, i32 136428751, i32 -420538904, i32 -642062437, i32 -833982666, i32 -722821367, i32 -701910916, i32 -1355701070, i32 824852259, i32 818324884, i32 -1070226842, i32 930369212, i32 -1493400886, i32 -1327460144, i32 355706840, i32 1257309336, i32 -146674470, i32 243256656, i32 790073846, i32 -1921626666, i32 1296297904, i32 1422699085, i32 -538667516, i32 -476130891, i32 457992840, i32 -1195299809, i32 2135319889, i32 77422314, i32 1560382517, i32 1945798516, i32 788204353, i32 1521706781, i32 1385356242, i32 870912086, i32 325965383, i32 -1936009375, i32 2050466060, i32 -1906706412, i32 -1981082820, i32 -288446169, i32 901210569, i32 -304014107, i32 1014646705, i32 1503449823, i32 1062597235, i32 2031621326, i32 -1082931401, i32 -363595827, i32 1533017514, i32 350174575, i32 -2038938405, i32 -2117423117, i32 1052338372, i32 741876788, i32 1606591296, i32 1914052035, i32 213705253, i32 -1960297399, i32 1107234197, i32 1899603969, i32 -569897805, i32 -1663519516, i32 -1872472383, i32 1635502980, i32 1893020342, i32 1950903388, i32 1120974935], align 16
@Td2 = internal unnamed_addr constant [256 x i32] [i32 -1487908364, i32 1699970625, i32 -1530717673, i32 1586903591, i32 1808481195, i32 1173430173, i32 1487645946, i32 59984867, i32 -95084496, i32 1844882806, i32 1989249228, i32 1277555970, i32 -671330331, i32 -875051734, i32 1149249077, i32 -1550863006, i32 1514790577, i32 459744698, i32 244860394, i32 -1058972162, i32 1963115311, i32 -267222708, i32 -1750889146, i32 -104436781, i32 1608975247, i32 -1667951214, i32 2062270317, i32 1507497298, i32 -2094148418, i32 567498868, i32 1764313568, i32 -935031095, i32 -1989511742, i32 2037970062, i32 1047239000, i32 1910319033, i32 1337376481, i32 -1390940024, i32 -1402549984, i32 984907214, i32 1243112415, i32 830661914, i32 861968209, i32 2135253587, i32 2011214180, i32 -1367032981, i32 -1608712575, i32 731183368, i32 1750626376, i32 -48656571, i32 1820824798, i32 -122203525, i32 -752637069, i32 48394827, i32 -1890065633, i32 -1423284651, i32 671593195, i32 -1039978571, i32 2073724613, i32 145085239, i32 -2014171096, i32 -1515052097, i32 1790575107, i32 -2107839210, i32 472615631, i32 -1265457287, i32 -219090169, i32 -492745111, i32 -187865638, i32 -1093335547, i32 1646252340, i32 -24460122, i32 1402811438, i32 1436590835, i32 -516815478, i32 -344611594, i32 -331805821, i32 -274055072, i32 -1626972559, i32 273792366, i32 -1963377119, i32 104699613, i32 95345982, i32 -1119466010, i32 -1917480620, i32 1560637892, i32 -730921978, i32 369057872, i32 -81520232, i32 -375925059, i32 1137477952, i32 -1636341799, i32 1119727848, i32 -1954019447, i32 1530455833, i32 -287606328, i32 172466556, i32 266959938, i32 516552836, i32 0, i32 -2038232704, i32 -314035669, i32 1890328081, i32 1917742170, i32 -262898, i32 945164165, i32 -719438418, i32 958871085, i32 -647755249, i32 -1507760036, i32 1423022939, i32 775562294, i32 1739656202, i32 -418409641, i32 -1764576018, i32 -1851909221, i32 -984645440, i32 547512796, i32 1265195639, i32 437656594, i32 -1173691757, i32 719700128, i32 -532464606, i32 387781147, i32 218828297, i32 -944901493, i32 -1464259146, i32 -1446505442, i32 428169201, i32 122466165, i32 -574886247, i32 1627235199, i32 648017665, i32 -172204942, i32 1002783846, i32 2117360635, i32 695634755, i32 -958608605, i32 -60246291, i32 -245122844, i32 -590686415, i32 -2062531997, i32 574624663, i32 287343814, i32 612205898, i32 1039717051, i32 840019705, i32 -1586641111, i32 793451934, i32 821288114, i32 1391201670, i32 -472877119, i32 376187827, i32 -1181111952, i32 1224348052, i32 1679968233, i32 -1933268740, i32 1058709744, i32 752375421, i32 -1863376333, i32 1321699145, i32 -775825096, i32 -1560376118, i32 188127444, i32 -2117097739, i32 -567761542, i32 -1910056265, i32 -1079754835, i32 -1645990854, i32 -1844621192, i32 -862229921, i32 1180849278, i32 331544205, i32 -1192718120, i32 -144822727, i32 -1342864701, i32 -2134991011, i32 -1820562992, i32 766078933, i32 313773861, i32 -1724135252, i32 2108100632, i32 1668212892, i32 -1149510853, i32 2013908262, i32 418672217, i32 -1224610662, i32 -1700232369, i32 1852171925, i32 -427906305, i32 -821550660, i32 -387518699, i32 -1680229657, i32 919489135, i32 164948639, i32 2094410160, i32 -1297141340, i32 590424639, i32 -1808742747, i32 1723872674, i32 -1137216434, i32 -895026046, i32 -793714544, i32 -669699161, i32 -1739919100, i32 -621329940, i32 1343127501, i32 -164685935, i32 -695372211, i32 -1337113617, i32 1297403050, i32 81781910, i32 -1243373871, i32 -2011476886, i32 532201772, i32 1367295589, i32 -368796322, i32 895287692, i32 1953757831, i32 1093597963, i32 492483431, i32 -766340389, i32 1446242576, i32 1192455638, i32 1636604631, i32 209336225, i32 344873464, i32 1015671571, i32 669961897, i32 -919226527, i32 -437395172, i32 -1321436601, i32 -547775278, i32 1933530610, i32 -830924780, i32 935293895, i32 -840281097, i32 -1436852227, i32 1863638845, i32 -611944380, i32 -209597777, i32 -1002522264, i32 875313188, i32 1080017571, i32 -1015933411, i32 621591778, i32 1233856572, i32 -1790836979, i32 24197544, i32 -1277294580, i32 -459482956, i32 -1047501738, i32 -2073986101, i32 -1234119374, i32 1551124588, i32 1463996600], align 16
@Td3 = internal unnamed_addr constant [256 x i32] [i32 -190361519, i32 1097159550, i32 396673818, i32 660510266, i32 -1418998981, i32 -1656360673, i32 -94852180, i32 -486304949, i32 821712160, i32 1986918061, i32 -864644728, i32 38544885, i32 -438830001, i32 718002117, i32 893681702, i32 1654886325, i32 -1319482914, i32 -1172609243, i32 -368142267, i32 -20913827, i32 796197571, i32 1290801793, i32 1184342925, i32 -738605461, i32 -1889540349, i32 -1835231979, i32 1836772287, i32 1381620373, i32 -1098699308, i32 1948373848, i32 -529979063, i32 -909622130, i32 -1031181707, i32 -1904641804, i32 1480485785, i32 -1183720153, i32 -514869570, i32 -2001922064, i32 548169417, i32 -835013507, i32 -548792221, i32 439452389, i32 1362321559, i32 1400849762, i32 1685577905, i32 1806599355, i32 -2120213250, i32 137073913, i32 1214797936, i32 1174215055, i32 -563312748, i32 2079897426, i32 1943217067, i32 1258480242, i32 529487843, i32 1437280870, i32 -349698126, i32 -1245576401, i32 -981755258, i32 923313619, i32 679998000, i32 -1079659997, i32 57326082, i32 377642221, i32 -820237430, i32 2041877159, i32 133361907, i32 1776460110, i32 -621490843, i32 96392454, i32 878845905, i32 -1493267772, i32 777231668, i32 -212492126, i32 -1964953083, i32 -152341084, i32 -2081670901, i32 1626319424, i32 1906247262, i32 1846563261, i32 562755902, i32 -586793578, i32 1040559837, i32 -423803315, i32 1418573201, i32 -1000536719, i32 114585348, i32 1343618912, i32 -1728371687, i32 -1108764714, i32 1078185097, i32 -643926169, i32 -398279248, i32 -1987344377, i32 425408743, i32 -923870343, i32 2081048481, i32 1108339068, i32 -2078357000, i32 0, i32 -2138668279, i32 736970802, i32 292596766, i32 1517440620, i32 251657213, i32 -2059905521, i32 -1361764803, i32 758720310, i32 265905162, i32 1554391400, i32 1532285339, i32 908999204, i32 174567692, i32 1474760595, i32 -292105548, i32 -1684955621, i32 -1060810880, i32 -601841055, i32 2001430874, i32 303699484, i32 -1816524062, i32 -1607801408, i32 585122620, i32 454499602, i32 151849742, i32 -1949848078, i32 -1230456531, i32 514443284, i32 -249985705, i32 1963412655, i32 -1713521682, i32 2137062819, i32 19308535, i32 1928707164, i32 1715193156, i32 -75615141, i32 1126790795, i32 600235211, i32 -302225226, i32 -453942344, i32 836553431, i32 1669664834, i32 -1759363053, i32 -971956092, i32 1243905413, i32 -1153566510, i32 -114159186, i32 698445255, i32 -1641067747, i32 -1305414692, i32 -2041385971, i32 -1042034569, i32 -1290376149, i32 1891211689, i32 -1807156719, i32 -379313593, i32 -57883480, i32 -264299872, i32 2100090966, i32 865136418, i32 1229899655, i32 953270745, i32 -895287668, i32 -737462632, i32 -176042074, i32 2061379749, i32 -1215420710, i32 -1379949505, i32 983426092, i32 2022837584, i32 1607244650, i32 2118541908, i32 -1928084746, i32 -658970480, i32 972512814, i32 -1011878526, i32 1568718495, i32 -795640727, i32 -718427793, i32 621982671, i32 -1399243832, i32 410887952, i32 -1671205144, i32 1002142683, i32 645401037, i32 1494807662, i32 -1699282452, i32 1335535747, i32 -1787927066, i32 -1671510, i32 -1127282655, i32 367585007, i32 -409216582, i32 1865862730, i32 -1626745622, i32 -1333995991, i32 -1531793615, i32 1059270954, i32 -1517014842, i32 -1570324427, i32 1320957812, i32 -2100648196, i32 -1865371424, i32 -1479011021, i32 77089521, i32 -321194175, i32 -850391425, i32 -1846137065, i32 1305906550, i32 -273658557, i32 -1437772596, i32 -1778065436, i32 -776608866, i32 1787304780, i32 740276417, i32 1699839814, i32 1592394909, i32 -1942659839, i32 -2022411270, i32 188821243, i32 1729977011, i32 -606973294, i32 274084841, i32 -699985043, i32 -681472870, i32 -1593017801, i32 -132870567, i32 322734571, i32 -1457000754, i32 1640576439, i32 484830689, i32 1202797690, i32 -757114468, i32 -227328171, i32 349075736, i32 -952647821, i32 -137500077, i32 -39167137, i32 1030690015, i32 1155237496, i32 -1342996022, i32 1757691577, i32 607398968, i32 -1556062270, i32 499347990, i32 -500888388, i32 1011452712, i32 227885567, i32 -1476300487, i32 213114376, i32 -1260086056, i32 1455525988, i32 -880516741, i32 850817237, i32 1817998408, i32 -1202240816], align 16
@Td4 = internal unnamed_addr constant [256 x i32] [i32 1381126738, i32 151587081, i32 1785358954, i32 -707406379, i32 808464432, i32 909522486, i32 -1515870811, i32 943208504, i32 -1077952577, i32 1077952576, i32 -1549556829, i32 -1633771874, i32 -2122219135, i32 -202116109, i32 -673720361, i32 -67372037, i32 2088533116, i32 -471604253, i32 960051513, i32 -2105376126, i32 -1684300901, i32 791621423, i32 -1, i32 -2021161081, i32 875836468, i32 -1903260018, i32 1128481603, i32 1145324612, i32 -993737532, i32 -555819298, i32 -370546199, i32 -875836469, i32 1414812756, i32 2071690107, i32 -1802201964, i32 842150450, i32 -1499027802, i32 -1027423550, i32 589505315, i32 1027423549, i32 -286331154, i32 1280068684, i32 -1785358955, i32 185273099, i32 1111638594, i32 -84215046, i32 -1010580541, i32 1313754702, i32 134744072, i32 774778414, i32 -1583242847, i32 1717986918, i32 673720360, i32 -640034343, i32 606348324, i32 -1296911694, i32 1987475062, i32 1532713819, i32 -1566399838, i32 1229539657, i32 1835887981, i32 -1953789045, i32 -774778415, i32 623191333, i32 1920103026, i32 -117901064, i32 -151587082, i32 1684300900, i32 -2038004090, i32 1751672936, i32 -1734829928, i32 370546198, i32 -724249388, i32 -1532713820, i32 1549556828, i32 -858993460, i32 1566399837, i32 1701143909, i32 -1229539658, i32 -1835887982, i32 1819044972, i32 1886417008, i32 1212696648, i32 1347440720, i32 -33686019, i32 -303174163, i32 -1179010631, i32 -623191334, i32 1583242846, i32 353703189, i32 1179010630, i32 1465341783, i32 -1482184793, i32 -1920103027, i32 -1650614883, i32 -2071690108, i32 -1869574000, i32 -656877352, i32 -1414812757, i32 0, i32 -1936946036, i32 -1128481604, i32 -741092397, i32 168430090, i32 -134744073, i32 -454761244, i32 1482184792, i32 84215045, i32 -1195853640, i32 -1280068685, i32 1162167621, i32 101058054, i32 -791621424, i32 741092396, i32 505290270, i32 -1886417009, i32 -892679478, i32 1061109567, i32 252645135, i32 33686018, i32 -1044266559, i32 -1347440721, i32 -1111638595, i32 50529027, i32 16843009, i32 320017171, i32 -1970632054, i32 1802201963, i32 976894522, i32 -1852730991, i32 286331153, i32 1094795585, i32 1330597711, i32 1734829927, i32 -589505316, i32 -353703190, i32 -1751672937, i32 -218959118, i32 -808464433, i32 -825307442, i32 -252645136, i32 -1263225676, i32 -421075226, i32 1936946035, i32 -1768515946, i32 -1397969748, i32 1953789044, i32 572662306, i32 -404232217, i32 -1381126739, i32 892679477, i32 -2054847099, i32 -488447262, i32 -101058055, i32 926365495, i32 -387389208, i32 471604252, i32 1970632053, i32 -538976289, i32 1852730990, i32 1195853639, i32 -235802127, i32 437918234, i32 1903260017, i32 488447261, i32 690563369, i32 -976894523, i32 -1987475063, i32 1869573999, i32 -1212696649, i32 1650614882, i32 235802126, i32 -1431655766, i32 404232216, i32 -1094795586, i32 454761243, i32 -50529028, i32 1448498774, i32 1044266558, i32 1263225675, i32 -960051514, i32 -757935406, i32 2038004089, i32 538976288, i32 -1701143910, i32 -606348325, i32 -1061109568, i32 -16843010, i32 2021161080, i32 -842150451, i32 1515870810, i32 -185273100, i32 522133279, i32 -572662307, i32 -1465341784, i32 858993459, i32 -2004318072, i32 117901063, i32 -943208505, i32 825307441, i32 -1313754703, i32 303174162, i32 269488144, i32 1499027801, i32 656877351, i32 -2139062144, i32 -320017172, i32 1600085855, i32 1616928864, i32 1364283729, i32 2139062143, i32 -1448498775, i32 421075225, i32 -1246382667, i32 1246382666, i32 218959117, i32 757935405, i32 -437918235, i32 2054847098, i32 -1616928865, i32 -1819044973, i32 -909522487, i32 -1667457892, i32 -269488145, i32 -1600085856, i32 -522133280, i32 993737531, i32 1296911693, i32 -1364283730, i32 707406378, i32 -168430091, i32 -1330597712, i32 -926365496, i32 -336860181, i32 -1145324613, i32 1010580540, i32 -2088533117, i32 1397969747, i32 -1717986919, i32 1633771873, i32 387389207, i32 724249387, i32 67372036, i32 2122219134, i32 -1162167622, i32 2004318071, i32 -690563370, i32 640034342, i32 -505290271, i32 1768515945, i32 336860180, i32 1667457891, i32 1431655765, i32 555819297, i32 202116108, i32 2105376125], align 16
@.str.3 = private unnamed_addr constant [10 x i8] c"xlen >= 0\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"dudect-examples/aes32/sources/random.c\00", align 1
@__PRETTY_FUNCTION__.randombytes = private unnamed_addr constant [36 x i8] c"void randombytes(uint8_t *, size_t)\00", align 1
@randombytes.fd = internal unnamed_addr global i32 -1, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca [16 x i8], align 16
  tail call void @init_dut()
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %2, i8* nonnull align 16 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.main.input_data, i64 0, i64 0), i64 16, i1 false)
  %3 = call zeroext i8 @do_one_computation(i8* nonnull %2, i32 13)
  %4 = zext i8 %3 to i32
  %5 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %4)
  ret i32 0
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @init_dut() local_unnamed_addr #0 {
  %1 = alloca [16 x i8], align 16
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  %3 = call i32 @rijndaelKeySetupEnc(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i8* nonnull %2, i32 128)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local zeroext i8 @do_one_computation(i8* nocapture readonly %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca [16 x i8], align 16
  %4 = alloca [16 x i8], align 16
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 1 dereferenceable(16) %0, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* nonnull %5, i8* nonnull %6)
  %7 = load i8, i8* %6, align 16
  ret i8 %7
}

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree noinline norecurse nounwind sspstrong uwtable
define dso_local void @rijndaelEncrypt(i32* readonly %0, i32 %1, i8* nocapture readonly %2, i8* nocapture %3) local_unnamed_addr #3 {
  %5 = load i8, i8* %2, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 %6, 24
  %8 = getelementptr inbounds i8, i8* %2, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = or i32 %11, %7
  %13 = getelementptr inbounds i8, i8* %2, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds i8, i8* %2, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = load i32, i32* %0, align 4
  %23 = xor i32 %21, %22
  %24 = getelementptr inbounds i8, i8* %2, i64 4
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %2, i64 5
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = getelementptr inbounds i8, i8* %2, i64 6
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 8
  %35 = getelementptr inbounds i8, i8* %2, i64 7
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i32, i32* %0, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds i8, i8* %2, i64 8
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i8, i8* %2, i64 9
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 16
  %47 = getelementptr inbounds i8, i8* %2, i64 10
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 8
  %51 = getelementptr inbounds i8, i8* %2, i64 11
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = getelementptr inbounds i32, i32* %0, i64 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds i8, i8* %2, i64 12
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = getelementptr inbounds i8, i8* %2, i64 13
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 16
  %63 = getelementptr inbounds i8, i8* %2, i64 14
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 8
  %67 = getelementptr inbounds i8, i8* %2, i64 15
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = getelementptr inbounds i32, i32* %0, i64 3
  %71 = load i32, i32* %70, align 4
  %72 = lshr i32 %23, 24
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %.preheader12, label %74

74:                                               ; preds = %4
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  br label %.preheader12

.preheader12:                                     ; preds = %74, %4
  %78 = phi i32 [ %77, %74 ], [ -966564955, %4 ]
  %79 = shl nuw i32 %26, 24
  %80 = or i32 %30, %79
  %81 = or i32 %80, %34
  %82 = or i32 %81, %37
  %83 = xor i32 %82, %39
  %84 = shl nuw i32 %42, 24
  %85 = or i32 %46, %84
  %86 = or i32 %85, %50
  %87 = or i32 %86, %53
  %88 = xor i32 %87, %55
  %89 = shl nuw i32 %58, 24
  %90 = or i32 %62, %89
  %91 = or i32 %90, %66
  %92 = or i32 %91, %69
  %93 = xor i32 %92, %71
  %94 = lshr i32 %83, 16
  %95 = and i32 %94, 255
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %.preheader11, label %97

97:                                               ; preds = %.preheader12
  %98 = zext i32 %95 to i64
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  br label %.preheader11

.preheader11:                                     ; preds = %97, %.preheader12
  %101 = phi i32 [ %100, %97 ], [ -1513725085, %.preheader12 ]
  %102 = xor i32 %101, %78
  %103 = lshr i32 %88, 8
  %104 = and i32 %103, 255
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %.preheader, label %106

106:                                              ; preds = %.preheader11
  %107 = zext i32 %104 to i64
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  br label %.preheader

.preheader:                                       ; preds = %106, %.preheader11
  %110 = phi i32 [ %109, %106 ], [ 1671808611, %.preheader11 ]
  %111 = xor i32 %102, %110
  %112 = and i32 %93, 255
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %.preheader
  %115 = zext i32 %112 to i64
  %116 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4
  br label %118

118:                                              ; preds = %114, %.preheader
  %119 = phi i32 [ %117, %114 ], [ 1667474886, %.preheader ]
  %120 = xor i32 %111, %119
  %121 = getelementptr inbounds i32, i32* %0, i64 4
  %122 = load i32, i32* %121, align 4
  %123 = xor i32 %120, %122
  %124 = lshr i32 %83, 24
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = lshr i32 %88, 16
  %129 = and i32 %128, 255
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = xor i32 %132, %127
  %134 = lshr i32 %93, 8
  %135 = and i32 %134, 255
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = xor i32 %133, %138
  %140 = and i32 %23, 255
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = xor i32 %139, %143
  %145 = getelementptr inbounds i32, i32* %0, i64 5
  %146 = load i32, i32* %145, align 4
  %147 = xor i32 %144, %146
  %148 = lshr i32 %88, 24
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = lshr i32 %93, 16
  %153 = and i32 %152, 255
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = xor i32 %156, %151
  %158 = lshr i32 %23, 8
  %159 = and i32 %158, 255
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = xor i32 %157, %162
  %164 = and i32 %83, 255
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = xor i32 %163, %167
  %169 = getelementptr inbounds i32, i32* %0, i64 6
  %170 = load i32, i32* %169, align 4
  %171 = xor i32 %168, %170
  %172 = lshr i32 %93, 24
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = lshr i32 %23, 16
  %177 = and i32 %176, 255
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = xor i32 %180, %175
  %182 = lshr i32 %83, 8
  %183 = and i32 %182, 255
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = xor i32 %181, %186
  %188 = and i32 %88, 255
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = xor i32 %187, %191
  %193 = getelementptr inbounds i32, i32* %0, i64 7
  %194 = load i32, i32* %193, align 4
  %195 = xor i32 %192, %194
  %196 = lshr i32 %123, 24
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = lshr i32 %147, 16
  %201 = and i32 %200, 255
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = xor i32 %204, %199
  %206 = lshr i32 %171, 8
  %207 = and i32 %206, 255
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = xor i32 %205, %210
  %212 = and i32 %195, 255
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = xor i32 %211, %215
  %217 = getelementptr inbounds i32, i32* %0, i64 8
  %218 = load i32, i32* %217, align 4
  %219 = xor i32 %216, %218
  %220 = lshr i32 %147, 24
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = lshr i32 %171, 16
  %225 = and i32 %224, 255
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = xor i32 %228, %223
  %230 = lshr i32 %195, 8
  %231 = and i32 %230, 255
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = xor i32 %229, %234
  %236 = and i32 %123, 255
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = xor i32 %235, %239
  %241 = getelementptr inbounds i32, i32* %0, i64 9
  %242 = load i32, i32* %241, align 4
  %243 = xor i32 %240, %242
  %244 = lshr i32 %171, 24
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = lshr i32 %195, 16
  %249 = and i32 %248, 255
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = xor i32 %252, %247
  %254 = lshr i32 %123, 8
  %255 = and i32 %254, 255
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = xor i32 %253, %258
  %260 = and i32 %147, 255
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = xor i32 %259, %263
  %265 = getelementptr inbounds i32, i32* %0, i64 10
  %266 = load i32, i32* %265, align 4
  %267 = xor i32 %264, %266
  %268 = lshr i32 %195, 24
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %269
  %271 = load i32, i32* %270, align 4
  %272 = lshr i32 %123, 16
  %273 = and i32 %272, 255
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %274
  %276 = load i32, i32* %275, align 4
  %277 = xor i32 %276, %271
  %278 = lshr i32 %147, 8
  %279 = and i32 %278, 255
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = xor i32 %277, %282
  %284 = and i32 %171, 255
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = xor i32 %283, %287
  %289 = getelementptr inbounds i32, i32* %0, i64 11
  %290 = load i32, i32* %289, align 4
  %291 = xor i32 %288, %290
  %292 = lshr i32 %219, 24
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = lshr i32 %243, 16
  %297 = and i32 %296, 255
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = xor i32 %300, %295
  %302 = lshr i32 %267, 8
  %303 = and i32 %302, 255
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = xor i32 %301, %306
  %308 = and i32 %291, 255
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = xor i32 %307, %311
  %313 = getelementptr inbounds i32, i32* %0, i64 12
  %314 = load i32, i32* %313, align 4
  %315 = xor i32 %312, %314
  %316 = lshr i32 %243, 24
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = lshr i32 %267, 16
  %321 = and i32 %320, 255
  %322 = zext i32 %321 to i64
  %323 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %322
  %324 = load i32, i32* %323, align 4
  %325 = xor i32 %324, %319
  %326 = lshr i32 %291, 8
  %327 = and i32 %326, 255
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %328
  %330 = load i32, i32* %329, align 4
  %331 = xor i32 %325, %330
  %332 = and i32 %219, 255
  %333 = zext i32 %332 to i64
  %334 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = xor i32 %331, %335
  %337 = getelementptr inbounds i32, i32* %0, i64 13
  %338 = load i32, i32* %337, align 4
  %339 = xor i32 %336, %338
  %340 = lshr i32 %267, 24
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = lshr i32 %291, 16
  %345 = and i32 %344, 255
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = xor i32 %348, %343
  %350 = lshr i32 %219, 8
  %351 = and i32 %350, 255
  %352 = zext i32 %351 to i64
  %353 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = xor i32 %349, %354
  %356 = and i32 %243, 255
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %357
  %359 = load i32, i32* %358, align 4
  %360 = xor i32 %355, %359
  %361 = getelementptr inbounds i32, i32* %0, i64 14
  %362 = load i32, i32* %361, align 4
  %363 = xor i32 %360, %362
  %364 = lshr i32 %291, 24
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %365
  %367 = load i32, i32* %366, align 4
  %368 = lshr i32 %219, 16
  %369 = and i32 %368, 255
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %370
  %372 = load i32, i32* %371, align 4
  %373 = xor i32 %372, %367
  %374 = lshr i32 %243, 8
  %375 = and i32 %374, 255
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %376
  %378 = load i32, i32* %377, align 4
  %379 = xor i32 %373, %378
  %380 = and i32 %267, 255
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = xor i32 %379, %383
  %385 = getelementptr inbounds i32, i32* %0, i64 15
  %386 = load i32, i32* %385, align 4
  %387 = xor i32 %384, %386
  %388 = lshr i32 %315, 24
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %389
  %391 = load i32, i32* %390, align 4
  %392 = lshr i32 %339, 16
  %393 = and i32 %392, 255
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %394
  %396 = load i32, i32* %395, align 4
  %397 = xor i32 %396, %391
  %398 = lshr i32 %363, 8
  %399 = and i32 %398, 255
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %400
  %402 = load i32, i32* %401, align 4
  %403 = xor i32 %397, %402
  %404 = and i32 %387, 255
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = xor i32 %403, %407
  %409 = getelementptr inbounds i32, i32* %0, i64 16
  %410 = load i32, i32* %409, align 4
  %411 = xor i32 %408, %410
  %412 = lshr i32 %339, 24
  %413 = zext i32 %412 to i64
  %414 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %413
  %415 = load i32, i32* %414, align 4
  %416 = lshr i32 %363, 16
  %417 = and i32 %416, 255
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %418
  %420 = load i32, i32* %419, align 4
  %421 = xor i32 %420, %415
  %422 = lshr i32 %387, 8
  %423 = and i32 %422, 255
  %424 = zext i32 %423 to i64
  %425 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %424
  %426 = load i32, i32* %425, align 4
  %427 = xor i32 %421, %426
  %428 = and i32 %315, 255
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = xor i32 %427, %431
  %433 = getelementptr inbounds i32, i32* %0, i64 17
  %434 = load i32, i32* %433, align 4
  %435 = xor i32 %432, %434
  %436 = lshr i32 %363, 24
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %437
  %439 = load i32, i32* %438, align 4
  %440 = lshr i32 %387, 16
  %441 = and i32 %440, 255
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %442
  %444 = load i32, i32* %443, align 4
  %445 = xor i32 %444, %439
  %446 = lshr i32 %315, 8
  %447 = and i32 %446, 255
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = xor i32 %445, %450
  %452 = and i32 %339, 255
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = xor i32 %451, %455
  %457 = getelementptr inbounds i32, i32* %0, i64 18
  %458 = load i32, i32* %457, align 4
  %459 = xor i32 %456, %458
  %460 = lshr i32 %387, 24
  %461 = zext i32 %460 to i64
  %462 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %461
  %463 = load i32, i32* %462, align 4
  %464 = lshr i32 %315, 16
  %465 = and i32 %464, 255
  %466 = zext i32 %465 to i64
  %467 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %466
  %468 = load i32, i32* %467, align 4
  %469 = xor i32 %468, %463
  %470 = lshr i32 %339, 8
  %471 = and i32 %470, 255
  %472 = zext i32 %471 to i64
  %473 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %472
  %474 = load i32, i32* %473, align 4
  %475 = xor i32 %469, %474
  %476 = and i32 %363, 255
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %477
  %479 = load i32, i32* %478, align 4
  %480 = xor i32 %475, %479
  %481 = getelementptr inbounds i32, i32* %0, i64 19
  %482 = load i32, i32* %481, align 4
  %483 = xor i32 %480, %482
  %484 = lshr i32 %411, 24
  %485 = zext i32 %484 to i64
  %486 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %485
  %487 = load i32, i32* %486, align 4
  %488 = lshr i32 %435, 16
  %489 = and i32 %488, 255
  %490 = zext i32 %489 to i64
  %491 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %490
  %492 = load i32, i32* %491, align 4
  %493 = xor i32 %492, %487
  %494 = lshr i32 %459, 8
  %495 = and i32 %494, 255
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %496
  %498 = load i32, i32* %497, align 4
  %499 = xor i32 %493, %498
  %500 = and i32 %483, 255
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %501
  %503 = load i32, i32* %502, align 4
  %504 = xor i32 %499, %503
  %505 = getelementptr inbounds i32, i32* %0, i64 20
  %506 = load i32, i32* %505, align 4
  %507 = xor i32 %504, %506
  %508 = lshr i32 %435, 24
  %509 = zext i32 %508 to i64
  %510 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %509
  %511 = load i32, i32* %510, align 4
  %512 = lshr i32 %459, 16
  %513 = and i32 %512, 255
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %514
  %516 = load i32, i32* %515, align 4
  %517 = xor i32 %516, %511
  %518 = lshr i32 %483, 8
  %519 = and i32 %518, 255
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %520
  %522 = load i32, i32* %521, align 4
  %523 = xor i32 %517, %522
  %524 = and i32 %411, 255
  %525 = zext i32 %524 to i64
  %526 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %525
  %527 = load i32, i32* %526, align 4
  %528 = xor i32 %523, %527
  %529 = getelementptr inbounds i32, i32* %0, i64 21
  %530 = load i32, i32* %529, align 4
  %531 = xor i32 %528, %530
  %532 = lshr i32 %459, 24
  %533 = zext i32 %532 to i64
  %534 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %533
  %535 = load i32, i32* %534, align 4
  %536 = lshr i32 %483, 16
  %537 = and i32 %536, 255
  %538 = zext i32 %537 to i64
  %539 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %538
  %540 = load i32, i32* %539, align 4
  %541 = xor i32 %540, %535
  %542 = lshr i32 %411, 8
  %543 = and i32 %542, 255
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %544
  %546 = load i32, i32* %545, align 4
  %547 = xor i32 %541, %546
  %548 = and i32 %435, 255
  %549 = zext i32 %548 to i64
  %550 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %549
  %551 = load i32, i32* %550, align 4
  %552 = xor i32 %547, %551
  %553 = getelementptr inbounds i32, i32* %0, i64 22
  %554 = load i32, i32* %553, align 4
  %555 = xor i32 %552, %554
  %556 = lshr i32 %483, 24
  %557 = zext i32 %556 to i64
  %558 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %557
  %559 = load i32, i32* %558, align 4
  %560 = lshr i32 %411, 16
  %561 = and i32 %560, 255
  %562 = zext i32 %561 to i64
  %563 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = xor i32 %564, %559
  %566 = lshr i32 %435, 8
  %567 = and i32 %566, 255
  %568 = zext i32 %567 to i64
  %569 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %568
  %570 = load i32, i32* %569, align 4
  %571 = xor i32 %565, %570
  %572 = and i32 %459, 255
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %573
  %575 = load i32, i32* %574, align 4
  %576 = xor i32 %571, %575
  %577 = getelementptr inbounds i32, i32* %0, i64 23
  %578 = load i32, i32* %577, align 4
  %579 = xor i32 %576, %578
  %580 = lshr i32 %507, 24
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %581
  %583 = load i32, i32* %582, align 4
  %584 = lshr i32 %531, 16
  %585 = and i32 %584, 255
  %586 = zext i32 %585 to i64
  %587 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %586
  %588 = load i32, i32* %587, align 4
  %589 = xor i32 %588, %583
  %590 = lshr i32 %555, 8
  %591 = and i32 %590, 255
  %592 = zext i32 %591 to i64
  %593 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %592
  %594 = load i32, i32* %593, align 4
  %595 = xor i32 %589, %594
  %596 = and i32 %579, 255
  %597 = zext i32 %596 to i64
  %598 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %597
  %599 = load i32, i32* %598, align 4
  %600 = xor i32 %595, %599
  %601 = getelementptr inbounds i32, i32* %0, i64 24
  %602 = load i32, i32* %601, align 4
  %603 = xor i32 %600, %602
  %604 = lshr i32 %531, 24
  %605 = zext i32 %604 to i64
  %606 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %605
  %607 = load i32, i32* %606, align 4
  %608 = lshr i32 %555, 16
  %609 = and i32 %608, 255
  %610 = zext i32 %609 to i64
  %611 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %610
  %612 = load i32, i32* %611, align 4
  %613 = xor i32 %612, %607
  %614 = lshr i32 %579, 8
  %615 = and i32 %614, 255
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %616
  %618 = load i32, i32* %617, align 4
  %619 = xor i32 %613, %618
  %620 = and i32 %507, 255
  %621 = zext i32 %620 to i64
  %622 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %621
  %623 = load i32, i32* %622, align 4
  %624 = xor i32 %619, %623
  %625 = getelementptr inbounds i32, i32* %0, i64 25
  %626 = load i32, i32* %625, align 4
  %627 = xor i32 %624, %626
  %628 = lshr i32 %555, 24
  %629 = zext i32 %628 to i64
  %630 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %629
  %631 = load i32, i32* %630, align 4
  %632 = lshr i32 %579, 16
  %633 = and i32 %632, 255
  %634 = zext i32 %633 to i64
  %635 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %634
  %636 = load i32, i32* %635, align 4
  %637 = xor i32 %636, %631
  %638 = lshr i32 %507, 8
  %639 = and i32 %638, 255
  %640 = zext i32 %639 to i64
  %641 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %640
  %642 = load i32, i32* %641, align 4
  %643 = xor i32 %637, %642
  %644 = and i32 %531, 255
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %645
  %647 = load i32, i32* %646, align 4
  %648 = xor i32 %643, %647
  %649 = getelementptr inbounds i32, i32* %0, i64 26
  %650 = load i32, i32* %649, align 4
  %651 = xor i32 %648, %650
  %652 = lshr i32 %579, 24
  %653 = zext i32 %652 to i64
  %654 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %653
  %655 = load i32, i32* %654, align 4
  %656 = lshr i32 %507, 16
  %657 = and i32 %656, 255
  %658 = zext i32 %657 to i64
  %659 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %658
  %660 = load i32, i32* %659, align 4
  %661 = xor i32 %660, %655
  %662 = lshr i32 %531, 8
  %663 = and i32 %662, 255
  %664 = zext i32 %663 to i64
  %665 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %664
  %666 = load i32, i32* %665, align 4
  %667 = xor i32 %661, %666
  %668 = and i32 %555, 255
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %669
  %671 = load i32, i32* %670, align 4
  %672 = xor i32 %667, %671
  %673 = getelementptr inbounds i32, i32* %0, i64 27
  %674 = load i32, i32* %673, align 4
  %675 = xor i32 %672, %674
  %676 = lshr i32 %603, 24
  %677 = zext i32 %676 to i64
  %678 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %677
  %679 = load i32, i32* %678, align 4
  %680 = lshr i32 %627, 16
  %681 = and i32 %680, 255
  %682 = zext i32 %681 to i64
  %683 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %682
  %684 = load i32, i32* %683, align 4
  %685 = xor i32 %684, %679
  %686 = lshr i32 %651, 8
  %687 = and i32 %686, 255
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %688
  %690 = load i32, i32* %689, align 4
  %691 = xor i32 %685, %690
  %692 = and i32 %675, 255
  %693 = zext i32 %692 to i64
  %694 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %693
  %695 = load i32, i32* %694, align 4
  %696 = xor i32 %691, %695
  %697 = getelementptr inbounds i32, i32* %0, i64 28
  %698 = load i32, i32* %697, align 4
  %699 = xor i32 %696, %698
  %700 = lshr i32 %627, 24
  %701 = zext i32 %700 to i64
  %702 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %701
  %703 = load i32, i32* %702, align 4
  %704 = lshr i32 %651, 16
  %705 = and i32 %704, 255
  %706 = zext i32 %705 to i64
  %707 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %706
  %708 = load i32, i32* %707, align 4
  %709 = xor i32 %708, %703
  %710 = lshr i32 %675, 8
  %711 = and i32 %710, 255
  %712 = zext i32 %711 to i64
  %713 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %712
  %714 = load i32, i32* %713, align 4
  %715 = xor i32 %709, %714
  %716 = and i32 %603, 255
  %717 = zext i32 %716 to i64
  %718 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %717
  %719 = load i32, i32* %718, align 4
  %720 = xor i32 %715, %719
  %721 = getelementptr inbounds i32, i32* %0, i64 29
  %722 = load i32, i32* %721, align 4
  %723 = xor i32 %720, %722
  %724 = lshr i32 %651, 24
  %725 = zext i32 %724 to i64
  %726 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %725
  %727 = load i32, i32* %726, align 4
  %728 = lshr i32 %675, 16
  %729 = and i32 %728, 255
  %730 = zext i32 %729 to i64
  %731 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %730
  %732 = load i32, i32* %731, align 4
  %733 = xor i32 %732, %727
  %734 = lshr i32 %603, 8
  %735 = and i32 %734, 255
  %736 = zext i32 %735 to i64
  %737 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %736
  %738 = load i32, i32* %737, align 4
  %739 = xor i32 %733, %738
  %740 = and i32 %627, 255
  %741 = zext i32 %740 to i64
  %742 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %741
  %743 = load i32, i32* %742, align 4
  %744 = xor i32 %739, %743
  %745 = getelementptr inbounds i32, i32* %0, i64 30
  %746 = load i32, i32* %745, align 4
  %747 = xor i32 %744, %746
  %748 = lshr i32 %675, 24
  %749 = zext i32 %748 to i64
  %750 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %749
  %751 = load i32, i32* %750, align 4
  %752 = lshr i32 %603, 16
  %753 = and i32 %752, 255
  %754 = zext i32 %753 to i64
  %755 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %754
  %756 = load i32, i32* %755, align 4
  %757 = xor i32 %756, %751
  %758 = lshr i32 %627, 8
  %759 = and i32 %758, 255
  %760 = zext i32 %759 to i64
  %761 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %760
  %762 = load i32, i32* %761, align 4
  %763 = xor i32 %757, %762
  %764 = and i32 %651, 255
  %765 = zext i32 %764 to i64
  %766 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %765
  %767 = load i32, i32* %766, align 4
  %768 = xor i32 %763, %767
  %769 = getelementptr inbounds i32, i32* %0, i64 31
  %770 = load i32, i32* %769, align 4
  %771 = xor i32 %768, %770
  %772 = lshr i32 %699, 24
  %773 = zext i32 %772 to i64
  %774 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %773
  %775 = load i32, i32* %774, align 4
  %776 = lshr i32 %723, 16
  %777 = and i32 %776, 255
  %778 = zext i32 %777 to i64
  %779 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %778
  %780 = load i32, i32* %779, align 4
  %781 = xor i32 %780, %775
  %782 = lshr i32 %747, 8
  %783 = and i32 %782, 255
  %784 = zext i32 %783 to i64
  %785 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %784
  %786 = load i32, i32* %785, align 4
  %787 = xor i32 %781, %786
  %788 = and i32 %771, 255
  %789 = zext i32 %788 to i64
  %790 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %789
  %791 = load i32, i32* %790, align 4
  %792 = xor i32 %787, %791
  %793 = getelementptr inbounds i32, i32* %0, i64 32
  %794 = load i32, i32* %793, align 4
  %795 = xor i32 %792, %794
  %796 = lshr i32 %723, 24
  %797 = zext i32 %796 to i64
  %798 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %797
  %799 = load i32, i32* %798, align 4
  %800 = lshr i32 %747, 16
  %801 = and i32 %800, 255
  %802 = zext i32 %801 to i64
  %803 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %802
  %804 = load i32, i32* %803, align 4
  %805 = xor i32 %804, %799
  %806 = lshr i32 %771, 8
  %807 = and i32 %806, 255
  %808 = zext i32 %807 to i64
  %809 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %808
  %810 = load i32, i32* %809, align 4
  %811 = xor i32 %805, %810
  %812 = and i32 %699, 255
  %813 = zext i32 %812 to i64
  %814 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %813
  %815 = load i32, i32* %814, align 4
  %816 = xor i32 %811, %815
  %817 = getelementptr inbounds i32, i32* %0, i64 33
  %818 = load i32, i32* %817, align 4
  %819 = xor i32 %816, %818
  %820 = lshr i32 %747, 24
  %821 = zext i32 %820 to i64
  %822 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %821
  %823 = load i32, i32* %822, align 4
  %824 = lshr i32 %771, 16
  %825 = and i32 %824, 255
  %826 = zext i32 %825 to i64
  %827 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %826
  %828 = load i32, i32* %827, align 4
  %829 = xor i32 %828, %823
  %830 = lshr i32 %699, 8
  %831 = and i32 %830, 255
  %832 = zext i32 %831 to i64
  %833 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %832
  %834 = load i32, i32* %833, align 4
  %835 = xor i32 %829, %834
  %836 = and i32 %723, 255
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %837
  %839 = load i32, i32* %838, align 4
  %840 = xor i32 %835, %839
  %841 = getelementptr inbounds i32, i32* %0, i64 34
  %842 = load i32, i32* %841, align 4
  %843 = xor i32 %840, %842
  %844 = lshr i32 %771, 24
  %845 = zext i32 %844 to i64
  %846 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %845
  %847 = load i32, i32* %846, align 4
  %848 = lshr i32 %699, 16
  %849 = and i32 %848, 255
  %850 = zext i32 %849 to i64
  %851 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %850
  %852 = load i32, i32* %851, align 4
  %853 = xor i32 %852, %847
  %854 = lshr i32 %723, 8
  %855 = and i32 %854, 255
  %856 = zext i32 %855 to i64
  %857 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %856
  %858 = load i32, i32* %857, align 4
  %859 = xor i32 %853, %858
  %860 = and i32 %747, 255
  %861 = zext i32 %860 to i64
  %862 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %861
  %863 = load i32, i32* %862, align 4
  %864 = xor i32 %859, %863
  %865 = getelementptr inbounds i32, i32* %0, i64 35
  %866 = load i32, i32* %865, align 4
  %867 = xor i32 %864, %866
  %868 = lshr i32 %795, 24
  %869 = zext i32 %868 to i64
  %870 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %869
  %871 = load i32, i32* %870, align 4
  %872 = lshr i32 %819, 16
  %873 = and i32 %872, 255
  %874 = zext i32 %873 to i64
  %875 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %874
  %876 = load i32, i32* %875, align 4
  %877 = xor i32 %876, %871
  %878 = lshr i32 %843, 8
  %879 = and i32 %878, 255
  %880 = zext i32 %879 to i64
  %881 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %880
  %882 = load i32, i32* %881, align 4
  %883 = xor i32 %877, %882
  %884 = and i32 %867, 255
  %885 = zext i32 %884 to i64
  %886 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %885
  %887 = load i32, i32* %886, align 4
  %888 = xor i32 %883, %887
  %889 = getelementptr inbounds i32, i32* %0, i64 36
  %890 = load i32, i32* %889, align 4
  %891 = xor i32 %888, %890
  %892 = lshr i32 %819, 24
  %893 = zext i32 %892 to i64
  %894 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %893
  %895 = load i32, i32* %894, align 4
  %896 = lshr i32 %843, 16
  %897 = and i32 %896, 255
  %898 = zext i32 %897 to i64
  %899 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %898
  %900 = load i32, i32* %899, align 4
  %901 = xor i32 %900, %895
  %902 = lshr i32 %867, 8
  %903 = and i32 %902, 255
  %904 = zext i32 %903 to i64
  %905 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %904
  %906 = load i32, i32* %905, align 4
  %907 = xor i32 %901, %906
  %908 = and i32 %795, 255
  %909 = zext i32 %908 to i64
  %910 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %909
  %911 = load i32, i32* %910, align 4
  %912 = xor i32 %907, %911
  %913 = getelementptr inbounds i32, i32* %0, i64 37
  %914 = load i32, i32* %913, align 4
  %915 = xor i32 %912, %914
  %916 = lshr i32 %843, 24
  %917 = zext i32 %916 to i64
  %918 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %917
  %919 = load i32, i32* %918, align 4
  %920 = lshr i32 %867, 16
  %921 = and i32 %920, 255
  %922 = zext i32 %921 to i64
  %923 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %922
  %924 = load i32, i32* %923, align 4
  %925 = xor i32 %924, %919
  %926 = lshr i32 %795, 8
  %927 = and i32 %926, 255
  %928 = zext i32 %927 to i64
  %929 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %928
  %930 = load i32, i32* %929, align 4
  %931 = xor i32 %925, %930
  %932 = and i32 %819, 255
  %933 = zext i32 %932 to i64
  %934 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %933
  %935 = load i32, i32* %934, align 4
  %936 = xor i32 %931, %935
  %937 = getelementptr inbounds i32, i32* %0, i64 38
  %938 = load i32, i32* %937, align 4
  %939 = xor i32 %936, %938
  %940 = lshr i32 %867, 24
  %941 = zext i32 %940 to i64
  %942 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %941
  %943 = load i32, i32* %942, align 4
  %944 = lshr i32 %795, 16
  %945 = and i32 %944, 255
  %946 = zext i32 %945 to i64
  %947 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %946
  %948 = load i32, i32* %947, align 4
  %949 = xor i32 %948, %943
  %950 = lshr i32 %819, 8
  %951 = and i32 %950, 255
  %952 = zext i32 %951 to i64
  %953 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %952
  %954 = load i32, i32* %953, align 4
  %955 = xor i32 %949, %954
  %956 = and i32 %843, 255
  %957 = zext i32 %956 to i64
  %958 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %957
  %959 = load i32, i32* %958, align 4
  %960 = xor i32 %955, %959
  %961 = getelementptr inbounds i32, i32* %0, i64 39
  %962 = load i32, i32* %961, align 4
  %963 = xor i32 %960, %962
  %964 = icmp sgt i32 %1, 10
  br i1 %964, label %965, label %1352

965:                                              ; preds = %118
  %966 = lshr i32 %891, 24
  %967 = zext i32 %966 to i64
  %968 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %967
  %969 = load i32, i32* %968, align 4
  %970 = lshr i32 %915, 16
  %971 = and i32 %970, 255
  %972 = zext i32 %971 to i64
  %973 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %972
  %974 = load i32, i32* %973, align 4
  %975 = xor i32 %974, %969
  %976 = lshr i32 %939, 8
  %977 = and i32 %976, 255
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %978
  %980 = load i32, i32* %979, align 4
  %981 = xor i32 %975, %980
  %982 = and i32 %963, 255
  %983 = zext i32 %982 to i64
  %984 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %983
  %985 = load i32, i32* %984, align 4
  %986 = xor i32 %981, %985
  %987 = getelementptr inbounds i32, i32* %0, i64 40
  %988 = load i32, i32* %987, align 4
  %989 = xor i32 %986, %988
  %990 = lshr i32 %915, 24
  %991 = zext i32 %990 to i64
  %992 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %991
  %993 = load i32, i32* %992, align 4
  %994 = lshr i32 %939, 16
  %995 = and i32 %994, 255
  %996 = zext i32 %995 to i64
  %997 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %996
  %998 = load i32, i32* %997, align 4
  %999 = xor i32 %998, %993
  %1000 = lshr i32 %963, 8
  %1001 = and i32 %1000, 255
  %1002 = zext i32 %1001 to i64
  %1003 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1002
  %1004 = load i32, i32* %1003, align 4
  %1005 = xor i32 %999, %1004
  %1006 = and i32 %891, 255
  %1007 = zext i32 %1006 to i64
  %1008 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1007
  %1009 = load i32, i32* %1008, align 4
  %1010 = xor i32 %1005, %1009
  %1011 = getelementptr inbounds i32, i32* %0, i64 41
  %1012 = load i32, i32* %1011, align 4
  %1013 = xor i32 %1010, %1012
  %1014 = lshr i32 %939, 24
  %1015 = zext i32 %1014 to i64
  %1016 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1015
  %1017 = load i32, i32* %1016, align 4
  %1018 = lshr i32 %963, 16
  %1019 = and i32 %1018, 255
  %1020 = zext i32 %1019 to i64
  %1021 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1020
  %1022 = load i32, i32* %1021, align 4
  %1023 = xor i32 %1022, %1017
  %1024 = lshr i32 %891, 8
  %1025 = and i32 %1024, 255
  %1026 = zext i32 %1025 to i64
  %1027 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1026
  %1028 = load i32, i32* %1027, align 4
  %1029 = xor i32 %1023, %1028
  %1030 = and i32 %915, 255
  %1031 = zext i32 %1030 to i64
  %1032 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1031
  %1033 = load i32, i32* %1032, align 4
  %1034 = xor i32 %1029, %1033
  %1035 = getelementptr inbounds i32, i32* %0, i64 42
  %1036 = load i32, i32* %1035, align 4
  %1037 = xor i32 %1034, %1036
  %1038 = lshr i32 %963, 24
  %1039 = zext i32 %1038 to i64
  %1040 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1039
  %1041 = load i32, i32* %1040, align 4
  %1042 = lshr i32 %891, 16
  %1043 = and i32 %1042, 255
  %1044 = zext i32 %1043 to i64
  %1045 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1044
  %1046 = load i32, i32* %1045, align 4
  %1047 = xor i32 %1046, %1041
  %1048 = lshr i32 %915, 8
  %1049 = and i32 %1048, 255
  %1050 = zext i32 %1049 to i64
  %1051 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1050
  %1052 = load i32, i32* %1051, align 4
  %1053 = xor i32 %1047, %1052
  %1054 = and i32 %939, 255
  %1055 = zext i32 %1054 to i64
  %1056 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1055
  %1057 = load i32, i32* %1056, align 4
  %1058 = xor i32 %1053, %1057
  %1059 = getelementptr inbounds i32, i32* %0, i64 43
  %1060 = load i32, i32* %1059, align 4
  %1061 = xor i32 %1058, %1060
  %1062 = lshr i32 %989, 24
  %1063 = zext i32 %1062 to i64
  %1064 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1063
  %1065 = load i32, i32* %1064, align 4
  %1066 = lshr i32 %1013, 16
  %1067 = and i32 %1066, 255
  %1068 = zext i32 %1067 to i64
  %1069 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1068
  %1070 = load i32, i32* %1069, align 4
  %1071 = xor i32 %1070, %1065
  %1072 = lshr i32 %1037, 8
  %1073 = and i32 %1072, 255
  %1074 = zext i32 %1073 to i64
  %1075 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1074
  %1076 = load i32, i32* %1075, align 4
  %1077 = xor i32 %1071, %1076
  %1078 = and i32 %1061, 255
  %1079 = zext i32 %1078 to i64
  %1080 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1079
  %1081 = load i32, i32* %1080, align 4
  %1082 = xor i32 %1077, %1081
  %1083 = getelementptr inbounds i32, i32* %0, i64 44
  %1084 = load i32, i32* %1083, align 4
  %1085 = xor i32 %1082, %1084
  %1086 = lshr i32 %1013, 24
  %1087 = zext i32 %1086 to i64
  %1088 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1087
  %1089 = load i32, i32* %1088, align 4
  %1090 = lshr i32 %1037, 16
  %1091 = and i32 %1090, 255
  %1092 = zext i32 %1091 to i64
  %1093 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1092
  %1094 = load i32, i32* %1093, align 4
  %1095 = xor i32 %1094, %1089
  %1096 = lshr i32 %1061, 8
  %1097 = and i32 %1096, 255
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1098
  %1100 = load i32, i32* %1099, align 4
  %1101 = xor i32 %1095, %1100
  %1102 = and i32 %989, 255
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1103
  %1105 = load i32, i32* %1104, align 4
  %1106 = xor i32 %1101, %1105
  %1107 = getelementptr inbounds i32, i32* %0, i64 45
  %1108 = load i32, i32* %1107, align 4
  %1109 = xor i32 %1106, %1108
  %1110 = lshr i32 %1037, 24
  %1111 = zext i32 %1110 to i64
  %1112 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1111
  %1113 = load i32, i32* %1112, align 4
  %1114 = lshr i32 %1061, 16
  %1115 = and i32 %1114, 255
  %1116 = zext i32 %1115 to i64
  %1117 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1116
  %1118 = load i32, i32* %1117, align 4
  %1119 = xor i32 %1118, %1113
  %1120 = lshr i32 %989, 8
  %1121 = and i32 %1120, 255
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1122
  %1124 = load i32, i32* %1123, align 4
  %1125 = xor i32 %1119, %1124
  %1126 = and i32 %1013, 255
  %1127 = zext i32 %1126 to i64
  %1128 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1127
  %1129 = load i32, i32* %1128, align 4
  %1130 = xor i32 %1125, %1129
  %1131 = getelementptr inbounds i32, i32* %0, i64 46
  %1132 = load i32, i32* %1131, align 4
  %1133 = xor i32 %1130, %1132
  %1134 = lshr i32 %1061, 24
  %1135 = zext i32 %1134 to i64
  %1136 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1135
  %1137 = load i32, i32* %1136, align 4
  %1138 = lshr i32 %989, 16
  %1139 = and i32 %1138, 255
  %1140 = zext i32 %1139 to i64
  %1141 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1140
  %1142 = load i32, i32* %1141, align 4
  %1143 = xor i32 %1142, %1137
  %1144 = lshr i32 %1013, 8
  %1145 = and i32 %1144, 255
  %1146 = zext i32 %1145 to i64
  %1147 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1146
  %1148 = load i32, i32* %1147, align 4
  %1149 = xor i32 %1143, %1148
  %1150 = and i32 %1037, 255
  %1151 = zext i32 %1150 to i64
  %1152 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1151
  %1153 = load i32, i32* %1152, align 4
  %1154 = xor i32 %1149, %1153
  %1155 = getelementptr inbounds i32, i32* %0, i64 47
  %1156 = load i32, i32* %1155, align 4
  %1157 = xor i32 %1154, %1156
  %1158 = icmp sgt i32 %1, 12
  br i1 %1158, label %1159, label %1352

1159:                                             ; preds = %965
  %1160 = lshr i32 %1085, 24
  %1161 = zext i32 %1160 to i64
  %1162 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1161
  %1163 = load i32, i32* %1162, align 4
  %1164 = lshr i32 %1109, 16
  %1165 = and i32 %1164, 255
  %1166 = zext i32 %1165 to i64
  %1167 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1166
  %1168 = load i32, i32* %1167, align 4
  %1169 = xor i32 %1168, %1163
  %1170 = lshr i32 %1133, 8
  %1171 = and i32 %1170, 255
  %1172 = zext i32 %1171 to i64
  %1173 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1172
  %1174 = load i32, i32* %1173, align 4
  %1175 = xor i32 %1169, %1174
  %1176 = and i32 %1157, 255
  %1177 = zext i32 %1176 to i64
  %1178 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1177
  %1179 = load i32, i32* %1178, align 4
  %1180 = xor i32 %1175, %1179
  %1181 = getelementptr inbounds i32, i32* %0, i64 48
  %1182 = load i32, i32* %1181, align 4
  %1183 = xor i32 %1180, %1182
  %1184 = lshr i32 %1109, 24
  %1185 = zext i32 %1184 to i64
  %1186 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1185
  %1187 = load i32, i32* %1186, align 4
  %1188 = lshr i32 %1133, 16
  %1189 = and i32 %1188, 255
  %1190 = zext i32 %1189 to i64
  %1191 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1190
  %1192 = load i32, i32* %1191, align 4
  %1193 = xor i32 %1192, %1187
  %1194 = lshr i32 %1157, 8
  %1195 = and i32 %1194, 255
  %1196 = zext i32 %1195 to i64
  %1197 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1196
  %1198 = load i32, i32* %1197, align 4
  %1199 = xor i32 %1193, %1198
  %1200 = and i32 %1085, 255
  %1201 = zext i32 %1200 to i64
  %1202 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1201
  %1203 = load i32, i32* %1202, align 4
  %1204 = xor i32 %1199, %1203
  %1205 = getelementptr inbounds i32, i32* %0, i64 49
  %1206 = load i32, i32* %1205, align 4
  %1207 = xor i32 %1204, %1206
  %1208 = lshr i32 %1133, 24
  %1209 = zext i32 %1208 to i64
  %1210 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1209
  %1211 = load i32, i32* %1210, align 4
  %1212 = lshr i32 %1157, 16
  %1213 = and i32 %1212, 255
  %1214 = zext i32 %1213 to i64
  %1215 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1214
  %1216 = load i32, i32* %1215, align 4
  %1217 = xor i32 %1216, %1211
  %1218 = lshr i32 %1085, 8
  %1219 = and i32 %1218, 255
  %1220 = zext i32 %1219 to i64
  %1221 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1220
  %1222 = load i32, i32* %1221, align 4
  %1223 = xor i32 %1217, %1222
  %1224 = and i32 %1109, 255
  %1225 = zext i32 %1224 to i64
  %1226 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1225
  %1227 = load i32, i32* %1226, align 4
  %1228 = xor i32 %1223, %1227
  %1229 = getelementptr inbounds i32, i32* %0, i64 50
  %1230 = load i32, i32* %1229, align 4
  %1231 = xor i32 %1228, %1230
  %1232 = lshr i32 %1157, 24
  %1233 = zext i32 %1232 to i64
  %1234 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1233
  %1235 = load i32, i32* %1234, align 4
  %1236 = lshr i32 %1085, 16
  %1237 = and i32 %1236, 255
  %1238 = zext i32 %1237 to i64
  %1239 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1238
  %1240 = load i32, i32* %1239, align 4
  %1241 = xor i32 %1240, %1235
  %1242 = lshr i32 %1109, 8
  %1243 = and i32 %1242, 255
  %1244 = zext i32 %1243 to i64
  %1245 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1244
  %1246 = load i32, i32* %1245, align 4
  %1247 = xor i32 %1241, %1246
  %1248 = and i32 %1133, 255
  %1249 = zext i32 %1248 to i64
  %1250 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1249
  %1251 = load i32, i32* %1250, align 4
  %1252 = xor i32 %1247, %1251
  %1253 = getelementptr inbounds i32, i32* %0, i64 51
  %1254 = load i32, i32* %1253, align 4
  %1255 = xor i32 %1252, %1254
  %1256 = lshr i32 %1183, 24
  %1257 = zext i32 %1256 to i64
  %1258 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1257
  %1259 = load i32, i32* %1258, align 4
  %1260 = lshr i32 %1207, 16
  %1261 = and i32 %1260, 255
  %1262 = zext i32 %1261 to i64
  %1263 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1262
  %1264 = load i32, i32* %1263, align 4
  %1265 = xor i32 %1264, %1259
  %1266 = lshr i32 %1231, 8
  %1267 = and i32 %1266, 255
  %1268 = zext i32 %1267 to i64
  %1269 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1268
  %1270 = load i32, i32* %1269, align 4
  %1271 = xor i32 %1265, %1270
  %1272 = and i32 %1255, 255
  %1273 = zext i32 %1272 to i64
  %1274 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1273
  %1275 = load i32, i32* %1274, align 4
  %1276 = xor i32 %1271, %1275
  %1277 = getelementptr inbounds i32, i32* %0, i64 52
  %1278 = load i32, i32* %1277, align 4
  %1279 = xor i32 %1276, %1278
  %1280 = lshr i32 %1207, 24
  %1281 = zext i32 %1280 to i64
  %1282 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1281
  %1283 = load i32, i32* %1282, align 4
  %1284 = lshr i32 %1231, 16
  %1285 = and i32 %1284, 255
  %1286 = zext i32 %1285 to i64
  %1287 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1286
  %1288 = load i32, i32* %1287, align 4
  %1289 = xor i32 %1288, %1283
  %1290 = lshr i32 %1255, 8
  %1291 = and i32 %1290, 255
  %1292 = zext i32 %1291 to i64
  %1293 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1292
  %1294 = load i32, i32* %1293, align 4
  %1295 = xor i32 %1289, %1294
  %1296 = and i32 %1183, 255
  %1297 = zext i32 %1296 to i64
  %1298 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1297
  %1299 = load i32, i32* %1298, align 4
  %1300 = xor i32 %1295, %1299
  %1301 = getelementptr inbounds i32, i32* %0, i64 53
  %1302 = load i32, i32* %1301, align 4
  %1303 = xor i32 %1300, %1302
  %1304 = lshr i32 %1231, 24
  %1305 = zext i32 %1304 to i64
  %1306 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1305
  %1307 = load i32, i32* %1306, align 4
  %1308 = lshr i32 %1255, 16
  %1309 = and i32 %1308, 255
  %1310 = zext i32 %1309 to i64
  %1311 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1310
  %1312 = load i32, i32* %1311, align 4
  %1313 = xor i32 %1312, %1307
  %1314 = lshr i32 %1183, 8
  %1315 = and i32 %1314, 255
  %1316 = zext i32 %1315 to i64
  %1317 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1316
  %1318 = load i32, i32* %1317, align 4
  %1319 = xor i32 %1313, %1318
  %1320 = and i32 %1207, 255
  %1321 = zext i32 %1320 to i64
  %1322 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1321
  %1323 = load i32, i32* %1322, align 4
  %1324 = xor i32 %1319, %1323
  %1325 = getelementptr inbounds i32, i32* %0, i64 54
  %1326 = load i32, i32* %1325, align 4
  %1327 = xor i32 %1324, %1326
  %1328 = lshr i32 %1255, 24
  %1329 = zext i32 %1328 to i64
  %1330 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1329
  %1331 = load i32, i32* %1330, align 4
  %1332 = lshr i32 %1183, 16
  %1333 = and i32 %1332, 255
  %1334 = zext i32 %1333 to i64
  %1335 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1334
  %1336 = load i32, i32* %1335, align 4
  %1337 = xor i32 %1336, %1331
  %1338 = lshr i32 %1207, 8
  %1339 = and i32 %1338, 255
  %1340 = zext i32 %1339 to i64
  %1341 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1340
  %1342 = load i32, i32* %1341, align 4
  %1343 = xor i32 %1337, %1342
  %1344 = and i32 %1231, 255
  %1345 = zext i32 %1344 to i64
  %1346 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1345
  %1347 = load i32, i32* %1346, align 4
  %1348 = xor i32 %1343, %1347
  %1349 = getelementptr inbounds i32, i32* %0, i64 55
  %1350 = load i32, i32* %1349, align 4
  %1351 = xor i32 %1348, %1350
  br label %1352

1352:                                             ; preds = %1159, %965, %118
  %.19 = phi i32 [ %963, %118 ], [ %1351, %1159 ], [ %1157, %965 ]
  %.17 = phi i32 [ %939, %118 ], [ %1327, %1159 ], [ %1133, %965 ]
  %.15 = phi i32 [ %915, %118 ], [ %1303, %1159 ], [ %1109, %965 ]
  %.5 = phi i32 [ %891, %118 ], [ %1279, %1159 ], [ %1085, %965 ]
  %1353 = shl i32 %1, 2
  %1354 = sext i32 %1353 to i64
  %1355 = getelementptr inbounds i32, i32* %0, i64 %1354
  %1356 = lshr i32 %.5, 24
  %1357 = zext i32 %1356 to i64
  %1358 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1357
  %1359 = load i32, i32* %1358, align 4
  %1360 = and i32 %1359, -16777216
  %1361 = lshr i32 %.15, 16
  %1362 = and i32 %1361, 255
  %1363 = zext i32 %1362 to i64
  %1364 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1363
  %1365 = load i32, i32* %1364, align 4
  %1366 = and i32 %1365, 16711680
  %1367 = or i32 %1366, %1360
  %1368 = lshr i32 %.17, 8
  %1369 = and i32 %1368, 255
  %1370 = zext i32 %1369 to i64
  %1371 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1370
  %1372 = load i32, i32* %1371, align 4
  %1373 = and i32 %1372, 65280
  %1374 = or i32 %1367, %1373
  %1375 = and i32 %.19, 255
  %1376 = zext i32 %1375 to i64
  %1377 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1376
  %1378 = load i32, i32* %1377, align 4
  %1379 = and i32 %1378, 255
  %1380 = or i32 %1374, %1379
  %1381 = load i32, i32* %1355, align 4
  %1382 = xor i32 %1380, %1381
  %1383 = lshr i32 %1382, 24
  %1384 = trunc i32 %1383 to i8
  store i8 %1384, i8* %3, align 1
  %1385 = lshr i32 %1382, 16
  %1386 = trunc i32 %1385 to i8
  %1387 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %1386, i8* %1387, align 1
  %1388 = lshr i32 %1382, 8
  %1389 = trunc i32 %1388 to i8
  %1390 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %1389, i8* %1390, align 1
  %1391 = trunc i32 %1382 to i8
  %1392 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %1391, i8* %1392, align 1
  %1393 = lshr i32 %.15, 24
  %1394 = zext i32 %1393 to i64
  %1395 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1394
  %1396 = load i32, i32* %1395, align 4
  %1397 = and i32 %1396, -16777216
  %1398 = lshr i32 %.17, 16
  %1399 = and i32 %1398, 255
  %1400 = zext i32 %1399 to i64
  %1401 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1400
  %1402 = load i32, i32* %1401, align 4
  %1403 = and i32 %1402, 16711680
  %1404 = or i32 %1403, %1397
  %1405 = lshr i32 %.19, 8
  %1406 = and i32 %1405, 255
  %1407 = zext i32 %1406 to i64
  %1408 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1407
  %1409 = load i32, i32* %1408, align 4
  %1410 = and i32 %1409, 65280
  %1411 = or i32 %1404, %1410
  %1412 = and i32 %.5, 255
  %1413 = zext i32 %1412 to i64
  %1414 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1413
  %1415 = load i32, i32* %1414, align 4
  %1416 = and i32 %1415, 255
  %1417 = or i32 %1411, %1416
  %1418 = getelementptr inbounds i32, i32* %1355, i64 1
  %1419 = load i32, i32* %1418, align 4
  %1420 = xor i32 %1417, %1419
  %1421 = lshr i32 %1420, 24
  %1422 = trunc i32 %1421 to i8
  %1423 = getelementptr inbounds i8, i8* %3, i64 4
  store i8 %1422, i8* %1423, align 1
  %1424 = lshr i32 %1420, 16
  %1425 = trunc i32 %1424 to i8
  %1426 = getelementptr inbounds i8, i8* %3, i64 5
  store i8 %1425, i8* %1426, align 1
  %1427 = lshr i32 %1420, 8
  %1428 = trunc i32 %1427 to i8
  %1429 = getelementptr inbounds i8, i8* %3, i64 6
  store i8 %1428, i8* %1429, align 1
  %1430 = trunc i32 %1420 to i8
  %1431 = getelementptr inbounds i8, i8* %3, i64 7
  store i8 %1430, i8* %1431, align 1
  %1432 = lshr i32 %.17, 24
  %1433 = zext i32 %1432 to i64
  %1434 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1433
  %1435 = load i32, i32* %1434, align 4
  %1436 = and i32 %1435, -16777216
  %1437 = lshr i32 %.19, 16
  %1438 = and i32 %1437, 255
  %1439 = zext i32 %1438 to i64
  %1440 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1439
  %1441 = load i32, i32* %1440, align 4
  %1442 = and i32 %1441, 16711680
  %1443 = or i32 %1442, %1436
  %1444 = lshr i32 %.5, 8
  %1445 = and i32 %1444, 255
  %1446 = zext i32 %1445 to i64
  %1447 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1446
  %1448 = load i32, i32* %1447, align 4
  %1449 = and i32 %1448, 65280
  %1450 = or i32 %1443, %1449
  %1451 = and i32 %.15, 255
  %1452 = zext i32 %1451 to i64
  %1453 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1452
  %1454 = load i32, i32* %1453, align 4
  %1455 = and i32 %1454, 255
  %1456 = or i32 %1450, %1455
  %1457 = getelementptr inbounds i32, i32* %1355, i64 2
  %1458 = load i32, i32* %1457, align 4
  %1459 = xor i32 %1456, %1458
  %1460 = lshr i32 %1459, 24
  %1461 = trunc i32 %1460 to i8
  %1462 = getelementptr inbounds i8, i8* %3, i64 8
  store i8 %1461, i8* %1462, align 1
  %1463 = lshr i32 %1459, 16
  %1464 = trunc i32 %1463 to i8
  %1465 = getelementptr inbounds i8, i8* %3, i64 9
  store i8 %1464, i8* %1465, align 1
  %1466 = lshr i32 %1459, 8
  %1467 = trunc i32 %1466 to i8
  %1468 = getelementptr inbounds i8, i8* %3, i64 10
  store i8 %1467, i8* %1468, align 1
  %1469 = trunc i32 %1459 to i8
  %1470 = getelementptr inbounds i8, i8* %3, i64 11
  store i8 %1469, i8* %1470, align 1
  %1471 = lshr i32 %.19, 24
  %1472 = zext i32 %1471 to i64
  %1473 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1472
  %1474 = load i32, i32* %1473, align 4
  %1475 = and i32 %1474, -16777216
  %1476 = lshr i32 %.5, 16
  %1477 = and i32 %1476, 255
  %1478 = zext i32 %1477 to i64
  %1479 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1478
  %1480 = load i32, i32* %1479, align 4
  %1481 = and i32 %1480, 16711680
  %1482 = or i32 %1481, %1475
  %1483 = lshr i32 %.15, 8
  %1484 = and i32 %1483, 255
  %1485 = zext i32 %1484 to i64
  %1486 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1485
  %1487 = load i32, i32* %1486, align 4
  %1488 = and i32 %1487, 65280
  %1489 = or i32 %1482, %1488
  %1490 = and i32 %.17, 255
  %1491 = zext i32 %1490 to i64
  %1492 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1491
  %1493 = load i32, i32* %1492, align 4
  %1494 = and i32 %1493, 255
  %1495 = or i32 %1489, %1494
  %1496 = getelementptr inbounds i32, i32* %1355, i64 3
  %1497 = load i32, i32* %1496, align 4
  %1498 = xor i32 %1495, %1497
  %1499 = lshr i32 %1498, 24
  %1500 = trunc i32 %1499 to i8
  %1501 = getelementptr inbounds i8, i8* %3, i64 12
  store i8 %1500, i8* %1501, align 1
  %1502 = lshr i32 %1498, 16
  %1503 = trunc i32 %1502 to i8
  %1504 = getelementptr inbounds i8, i8* %3, i64 13
  store i8 %1503, i8* %1504, align 1
  %1505 = lshr i32 %1498, 8
  %1506 = trunc i32 %1505 to i8
  %1507 = getelementptr inbounds i8, i8* %3, i64 14
  store i8 %1506, i8* %1507, align 1
  %1508 = trunc i32 %1498 to i8
  %1509 = getelementptr inbounds i8, i8* %3, i64 15
  store i8 %1508, i8* %1509, align 1
  ret void
}

; Function Attrs: nofree noinline norecurse nounwind sspstrong uwtable
define dso_local i32 @rijndaelKeySetupEnc(i32* %0, i8* readonly %1, i32 %2) local_unnamed_addr #3 {
  %4 = load i8, i8* %1, align 1
  %5 = zext i8 %4 to i32
  %6 = shl nuw i32 %5, 24
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 16
  %11 = or i32 %10, %6
  %12 = getelementptr inbounds i8, i8* %1, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  %16 = or i32 %11, %15
  %17 = getelementptr inbounds i8, i8* %1, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = or i32 %16, %19
  store i32 %20, i32* %0, align 4
  %21 = getelementptr inbounds i8, i8* %1, i64 4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw i32 %23, 24
  %25 = getelementptr inbounds i8, i8* %1, i64 5
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 16
  %29 = or i32 %28, %24
  %30 = getelementptr inbounds i8, i8* %1, i64 6
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 8
  %34 = or i32 %29, %33
  %35 = getelementptr inbounds i8, i8* %1, i64 7
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = or i32 %34, %37
  %39 = getelementptr inbounds i32, i32* %0, i64 1
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %1, i64 8
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw i32 %42, 24
  %44 = getelementptr inbounds i8, i8* %1, i64 9
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw nsw i32 %46, 16
  %48 = or i32 %47, %43
  %49 = getelementptr inbounds i8, i8* %1, i64 10
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = or i32 %48, %52
  %54 = getelementptr inbounds i8, i8* %1, i64 11
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %53, %56
  %58 = getelementptr inbounds i32, i32* %0, i64 2
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds i8, i8* %1, i64 12
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw i32 %61, 24
  %63 = getelementptr inbounds i8, i8* %1, i64 13
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 16
  %67 = or i32 %66, %62
  %68 = getelementptr inbounds i8, i8* %1, i64 14
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 8
  %72 = or i32 %67, %71
  %73 = getelementptr inbounds i8, i8* %1, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = or i32 %72, %75
  %77 = getelementptr inbounds i32, i32* %0, i64 3
  store i32 %76, i32* %77, align 4
  %78 = icmp eq i32 %2, 128
  br i1 %78, label %.loopexit, label %412

.loopexit:                                        ; preds = %3
  %79 = zext i8 %64 to i64
  %80 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, -16777216
  %83 = zext i8 %69 to i64
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 16711680
  %87 = zext i8 %74 to i64
  %88 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 65280
  %91 = zext i8 %60 to i64
  %92 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, 255
  %95 = xor i32 %20, 16777216
  %96 = xor i32 %95, %82
  %97 = xor i32 %96, %86
  %98 = xor i32 %97, %90
  %99 = xor i32 %98, %94
  %100 = getelementptr inbounds i32, i32* %0, i64 4
  store i32 %99, i32* %100, align 4
  %101 = xor i32 %99, %38
  %102 = getelementptr inbounds i32, i32* %0, i64 5
  store i32 %101, i32* %102, align 4
  %103 = xor i32 %101, %57
  %104 = getelementptr inbounds i32, i32* %0, i64 6
  store i32 %103, i32* %104, align 4
  %105 = xor i32 %103, %76
  %106 = getelementptr inbounds i32, i32* %0, i64 7
  store i32 %105, i32* %106, align 4
  %107 = lshr i32 %105, 16
  %108 = and i32 %107, 255
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = and i32 %111, -16777216
  %113 = lshr i32 %105, 8
  %114 = and i32 %113, 255
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = and i32 %117, 16711680
  %119 = and i32 %105, 255
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, 65280
  %124 = lshr i32 %105, 24
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 255
  %129 = xor i32 %99, 33554432
  %130 = xor i32 %129, %112
  %131 = xor i32 %130, %118
  %132 = xor i32 %131, %123
  %133 = xor i32 %132, %128
  %134 = getelementptr inbounds i32, i32* %0, i64 8
  store i32 %133, i32* %134, align 4
  %135 = xor i32 %133, %101
  %136 = getelementptr inbounds i32, i32* %0, i64 9
  store i32 %135, i32* %136, align 4
  %137 = xor i32 %133, %57
  %138 = getelementptr inbounds i32, i32* %0, i64 10
  store i32 %137, i32* %138, align 4
  %139 = xor i32 %137, %105
  %140 = getelementptr inbounds i32, i32* %0, i64 11
  store i32 %139, i32* %140, align 4
  %141 = lshr i32 %139, 16
  %142 = and i32 %141, 255
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %145, -16777216
  %147 = lshr i32 %139, 8
  %148 = and i32 %147, 255
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 16711680
  %153 = and i32 %139, 255
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = and i32 %156, 65280
  %158 = lshr i32 %139, 24
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = and i32 %161, 255
  %163 = xor i32 %133, 67108864
  %164 = xor i32 %163, %146
  %165 = xor i32 %164, %152
  %166 = xor i32 %165, %157
  %167 = xor i32 %166, %162
  %168 = getelementptr inbounds i32, i32* %0, i64 12
  store i32 %167, i32* %168, align 4
  %169 = xor i32 %167, %135
  %170 = getelementptr inbounds i32, i32* %0, i64 13
  store i32 %169, i32* %170, align 4
  %171 = xor i32 %169, %137
  %172 = getelementptr inbounds i32, i32* %0, i64 14
  store i32 %171, i32* %172, align 4
  %173 = xor i32 %169, %105
  %174 = getelementptr inbounds i32, i32* %0, i64 15
  store i32 %173, i32* %174, align 4
  %175 = lshr i32 %173, 16
  %176 = and i32 %175, 255
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = and i32 %179, -16777216
  %181 = lshr i32 %173, 8
  %182 = and i32 %181, 255
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = and i32 %185, 16711680
  %187 = and i32 %173, 255
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = and i32 %190, 65280
  %192 = lshr i32 %173, 24
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %195, 255
  %197 = xor i32 %167, 134217728
  %198 = xor i32 %197, %180
  %199 = xor i32 %198, %186
  %200 = xor i32 %199, %191
  %201 = xor i32 %200, %196
  %202 = getelementptr inbounds i32, i32* %0, i64 16
  store i32 %201, i32* %202, align 4
  %203 = xor i32 %201, %169
  %204 = getelementptr inbounds i32, i32* %0, i64 17
  store i32 %203, i32* %204, align 4
  %205 = xor i32 %201, %137
  %206 = getelementptr inbounds i32, i32* %0, i64 18
  store i32 %205, i32* %206, align 4
  %207 = xor i32 %205, %173
  %208 = getelementptr inbounds i32, i32* %0, i64 19
  store i32 %207, i32* %208, align 4
  %209 = lshr i32 %207, 16
  %210 = and i32 %209, 255
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = and i32 %213, -16777216
  %215 = lshr i32 %207, 8
  %216 = and i32 %215, 255
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = and i32 %219, 16711680
  %221 = and i32 %207, 255
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = and i32 %224, 65280
  %226 = lshr i32 %207, 24
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = and i32 %229, 255
  %231 = xor i32 %201, 268435456
  %232 = xor i32 %231, %214
  %233 = xor i32 %232, %220
  %234 = xor i32 %233, %225
  %235 = xor i32 %234, %230
  %236 = getelementptr inbounds i32, i32* %0, i64 20
  store i32 %235, i32* %236, align 4
  %237 = xor i32 %235, %203
  %238 = getelementptr inbounds i32, i32* %0, i64 21
  store i32 %237, i32* %238, align 4
  %239 = xor i32 %237, %205
  %240 = getelementptr inbounds i32, i32* %0, i64 22
  store i32 %239, i32* %240, align 4
  %241 = xor i32 %237, %173
  %242 = getelementptr inbounds i32, i32* %0, i64 23
  store i32 %241, i32* %242, align 4
  %243 = lshr i32 %241, 16
  %244 = and i32 %243, 255
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = and i32 %247, -16777216
  %249 = lshr i32 %241, 8
  %250 = and i32 %249, 255
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = and i32 %253, 16711680
  %255 = and i32 %241, 255
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = and i32 %258, 65280
  %260 = lshr i32 %241, 24
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = and i32 %263, 255
  %265 = xor i32 %235, 536870912
  %266 = xor i32 %265, %248
  %267 = xor i32 %266, %254
  %268 = xor i32 %267, %259
  %269 = xor i32 %268, %264
  %270 = getelementptr inbounds i32, i32* %0, i64 24
  store i32 %269, i32* %270, align 4
  %271 = xor i32 %269, %237
  %272 = getelementptr inbounds i32, i32* %0, i64 25
  store i32 %271, i32* %272, align 4
  %273 = xor i32 %269, %205
  %274 = getelementptr inbounds i32, i32* %0, i64 26
  store i32 %273, i32* %274, align 4
  %275 = xor i32 %273, %241
  %276 = getelementptr inbounds i32, i32* %0, i64 27
  store i32 %275, i32* %276, align 4
  %277 = lshr i32 %275, 16
  %278 = and i32 %277, 255
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = and i32 %281, -16777216
  %283 = lshr i32 %275, 8
  %284 = and i32 %283, 255
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = and i32 %287, 16711680
  %289 = and i32 %275, 255
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = and i32 %292, 65280
  %294 = lshr i32 %275, 24
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = and i32 %297, 255
  %299 = xor i32 %269, 1073741824
  %300 = xor i32 %299, %282
  %301 = xor i32 %300, %288
  %302 = xor i32 %301, %293
  %303 = xor i32 %302, %298
  %304 = getelementptr inbounds i32, i32* %0, i64 28
  store i32 %303, i32* %304, align 4
  %305 = xor i32 %303, %271
  %306 = getelementptr inbounds i32, i32* %0, i64 29
  store i32 %305, i32* %306, align 4
  %307 = xor i32 %305, %273
  %308 = getelementptr inbounds i32, i32* %0, i64 30
  store i32 %307, i32* %308, align 4
  %309 = xor i32 %305, %241
  %310 = getelementptr inbounds i32, i32* %0, i64 31
  store i32 %309, i32* %310, align 4
  %311 = lshr i32 %309, 16
  %312 = and i32 %311, 255
  %313 = zext i32 %312 to i64
  %314 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %313
  %315 = load i32, i32* %314, align 4
  %316 = and i32 %315, -16777216
  %317 = lshr i32 %309, 8
  %318 = and i32 %317, 255
  %319 = zext i32 %318 to i64
  %320 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %319
  %321 = load i32, i32* %320, align 4
  %322 = and i32 %321, 16711680
  %323 = and i32 %309, 255
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = and i32 %326, 65280
  %328 = lshr i32 %309, 24
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = and i32 %331, 255
  %333 = xor i32 %303, -2147483648
  %334 = xor i32 %333, %316
  %335 = xor i32 %334, %322
  %336 = xor i32 %335, %327
  %337 = xor i32 %336, %332
  %338 = getelementptr inbounds i32, i32* %0, i64 32
  store i32 %337, i32* %338, align 4
  %339 = xor i32 %337, %305
  %340 = getelementptr inbounds i32, i32* %0, i64 33
  store i32 %339, i32* %340, align 4
  %341 = xor i32 %337, %273
  %342 = getelementptr inbounds i32, i32* %0, i64 34
  store i32 %341, i32* %342, align 4
  %343 = xor i32 %341, %309
  %344 = getelementptr inbounds i32, i32* %0, i64 35
  store i32 %343, i32* %344, align 4
  %345 = lshr i32 %343, 16
  %346 = and i32 %345, 255
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = and i32 %349, -16777216
  %351 = lshr i32 %343, 8
  %352 = and i32 %351, 255
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = and i32 %355, 16711680
  %357 = and i32 %343, 255
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = and i32 %360, 65280
  %362 = lshr i32 %343, 24
  %363 = zext i32 %362 to i64
  %364 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %363
  %365 = load i32, i32* %364, align 4
  %366 = and i32 %365, 255
  %367 = xor i32 %337, 452984832
  %368 = xor i32 %367, %350
  %369 = xor i32 %368, %356
  %370 = xor i32 %369, %361
  %371 = xor i32 %370, %366
  %372 = getelementptr inbounds i32, i32* %0, i64 36
  store i32 %371, i32* %372, align 4
  %373 = xor i32 %371, %339
  %374 = getelementptr inbounds i32, i32* %0, i64 37
  store i32 %373, i32* %374, align 4
  %375 = xor i32 %373, %341
  %376 = getelementptr inbounds i32, i32* %0, i64 38
  store i32 %375, i32* %376, align 4
  %377 = xor i32 %373, %309
  %378 = getelementptr inbounds i32, i32* %0, i64 39
  store i32 %377, i32* %378, align 4
  %379 = lshr i32 %377, 16
  %380 = and i32 %379, 255
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = and i32 %383, -16777216
  %385 = lshr i32 %377, 8
  %386 = and i32 %385, 255
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = and i32 %389, 16711680
  %391 = and i32 %377, 255
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %392
  %394 = load i32, i32* %393, align 4
  %395 = and i32 %394, 65280
  %396 = lshr i32 %377, 24
  %397 = zext i32 %396 to i64
  %398 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %397
  %399 = load i32, i32* %398, align 4
  %400 = and i32 %399, 255
  %401 = xor i32 %371, 905969664
  %402 = xor i32 %401, %384
  %403 = xor i32 %402, %390
  %404 = xor i32 %403, %395
  %405 = xor i32 %404, %400
  %406 = getelementptr inbounds i32, i32* %0, i64 40
  store i32 %405, i32* %406, align 4
  %407 = xor i32 %405, %373
  %408 = getelementptr inbounds i32, i32* %0, i64 41
  store i32 %407, i32* %408, align 4
  %409 = xor i32 %405, %341
  %410 = getelementptr inbounds i32, i32* %0, i64 42
  store i32 %409, i32* %410, align 4
  %411 = xor i32 %409, %377
  br label %.sink.split

412:                                              ; preds = %3
  %413 = getelementptr inbounds i8, i8* %1, i64 16
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i32
  %416 = shl nuw i32 %415, 24
  %417 = getelementptr inbounds i8, i8* %1, i64 17
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i32
  %420 = shl nuw nsw i32 %419, 16
  %421 = or i32 %420, %416
  %422 = getelementptr inbounds i8, i8* %1, i64 18
  %423 = load i8, i8* %422, align 1
  %424 = zext i8 %423 to i32
  %425 = shl nuw nsw i32 %424, 8
  %426 = or i32 %421, %425
  %427 = getelementptr inbounds i8, i8* %1, i64 19
  %428 = load i8, i8* %427, align 1
  %429 = zext i8 %428 to i32
  %430 = or i32 %426, %429
  %431 = getelementptr inbounds i32, i32* %0, i64 4
  store i32 %430, i32* %431, align 4
  %432 = getelementptr inbounds i8, i8* %1, i64 20
  %433 = load i8, i8* %432, align 1
  %434 = zext i8 %433 to i32
  %435 = shl nuw i32 %434, 24
  %436 = getelementptr inbounds i8, i8* %1, i64 21
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i32
  %439 = shl nuw nsw i32 %438, 16
  %440 = or i32 %439, %435
  %441 = getelementptr inbounds i8, i8* %1, i64 22
  %442 = load i8, i8* %441, align 1
  %443 = zext i8 %442 to i32
  %444 = shl nuw nsw i32 %443, 8
  %445 = or i32 %440, %444
  %446 = getelementptr inbounds i8, i8* %1, i64 23
  %447 = load i8, i8* %446, align 1
  %448 = zext i8 %447 to i32
  %449 = or i32 %445, %448
  %450 = getelementptr inbounds i32, i32* %0, i64 5
  store i32 %449, i32* %450, align 4
  %451 = icmp eq i32 %2, 192
  br i1 %451, label %.preheader5, label %745

.preheader5:                                      ; preds = %412
  %452 = zext i8 %437 to i64
  %453 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %452
  %454 = load i32, i32* %453, align 4
  %455 = and i32 %454, -16777216
  %456 = zext i8 %442 to i64
  %457 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %456
  %458 = load i32, i32* %457, align 4
  %459 = and i32 %458, 16711680
  %460 = zext i8 %447 to i64
  %461 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %460
  %462 = load i32, i32* %461, align 4
  %463 = and i32 %462, 65280
  %464 = zext i8 %433 to i64
  %465 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = and i32 %466, 255
  %468 = xor i32 %20, 16777216
  %469 = xor i32 %468, %455
  %470 = xor i32 %469, %459
  %471 = xor i32 %470, %463
  %472 = xor i32 %471, %467
  %473 = getelementptr inbounds i32, i32* %0, i64 6
  store i32 %472, i32* %473, align 4
  %474 = xor i32 %472, %38
  %475 = getelementptr inbounds i32, i32* %0, i64 7
  store i32 %474, i32* %475, align 4
  %476 = xor i32 %474, %57
  %477 = getelementptr inbounds i32, i32* %0, i64 8
  store i32 %476, i32* %477, align 4
  %478 = xor i32 %476, %76
  %479 = getelementptr inbounds i32, i32* %0, i64 9
  store i32 %478, i32* %479, align 4
  %480 = xor i32 %478, %430
  %481 = getelementptr inbounds i32, i32* %0, i64 10
  store i32 %480, i32* %481, align 4
  %482 = xor i32 %480, %449
  %483 = getelementptr inbounds i32, i32* %0, i64 11
  store i32 %482, i32* %483, align 4
  %484 = lshr i32 %482, 16
  %485 = and i32 %484, 255
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = and i32 %488, -16777216
  %490 = lshr i32 %482, 8
  %491 = and i32 %490, 255
  %492 = zext i32 %491 to i64
  %493 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %492
  %494 = load i32, i32* %493, align 4
  %495 = and i32 %494, 16711680
  %496 = and i32 %482, 255
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %497
  %499 = load i32, i32* %498, align 4
  %500 = and i32 %499, 65280
  %501 = lshr i32 %482, 24
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %502
  %504 = load i32, i32* %503, align 4
  %505 = and i32 %504, 255
  %506 = xor i32 %472, 33554432
  %507 = xor i32 %506, %489
  %508 = xor i32 %507, %495
  %509 = xor i32 %508, %500
  %510 = xor i32 %509, %505
  %511 = getelementptr inbounds i32, i32* %0, i64 12
  store i32 %510, i32* %511, align 4
  %512 = xor i32 %510, %474
  %513 = getelementptr inbounds i32, i32* %0, i64 13
  store i32 %512, i32* %513, align 4
  %514 = xor i32 %510, %57
  %515 = getelementptr inbounds i32, i32* %0, i64 14
  store i32 %514, i32* %515, align 4
  %516 = xor i32 %514, %478
  %517 = getelementptr inbounds i32, i32* %0, i64 15
  store i32 %516, i32* %517, align 4
  %518 = xor i32 %514, %430
  %519 = getelementptr inbounds i32, i32* %0, i64 16
  store i32 %518, i32* %519, align 4
  %520 = xor i32 %518, %482
  %521 = getelementptr inbounds i32, i32* %0, i64 17
  store i32 %520, i32* %521, align 4
  %522 = lshr i32 %520, 16
  %523 = and i32 %522, 255
  %524 = zext i32 %523 to i64
  %525 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %524
  %526 = load i32, i32* %525, align 4
  %527 = and i32 %526, -16777216
  %528 = lshr i32 %520, 8
  %529 = and i32 %528, 255
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %530
  %532 = load i32, i32* %531, align 4
  %533 = and i32 %532, 16711680
  %534 = and i32 %520, 255
  %535 = zext i32 %534 to i64
  %536 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %535
  %537 = load i32, i32* %536, align 4
  %538 = and i32 %537, 65280
  %539 = lshr i32 %520, 24
  %540 = zext i32 %539 to i64
  %541 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %540
  %542 = load i32, i32* %541, align 4
  %543 = and i32 %542, 255
  %544 = xor i32 %510, 67108864
  %545 = xor i32 %544, %527
  %546 = xor i32 %545, %533
  %547 = xor i32 %546, %538
  %548 = xor i32 %547, %543
  %549 = getelementptr inbounds i32, i32* %0, i64 18
  store i32 %548, i32* %549, align 4
  %550 = xor i32 %548, %512
  %551 = getelementptr inbounds i32, i32* %0, i64 19
  store i32 %550, i32* %551, align 4
  %552 = xor i32 %550, %514
  %553 = getelementptr inbounds i32, i32* %0, i64 20
  store i32 %552, i32* %553, align 4
  %554 = xor i32 %550, %478
  %555 = getelementptr inbounds i32, i32* %0, i64 21
  store i32 %554, i32* %555, align 4
  %556 = xor i32 %554, %518
  %557 = getelementptr inbounds i32, i32* %0, i64 22
  store i32 %556, i32* %557, align 4
  %558 = xor i32 %554, %482
  %559 = getelementptr inbounds i32, i32* %0, i64 23
  store i32 %558, i32* %559, align 4
  %560 = lshr i32 %558, 16
  %561 = and i32 %560, 255
  %562 = zext i32 %561 to i64
  %563 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = and i32 %564, -16777216
  %566 = lshr i32 %558, 8
  %567 = and i32 %566, 255
  %568 = zext i32 %567 to i64
  %569 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %568
  %570 = load i32, i32* %569, align 4
  %571 = and i32 %570, 16711680
  %572 = and i32 %558, 255
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %573
  %575 = load i32, i32* %574, align 4
  %576 = and i32 %575, 65280
  %577 = lshr i32 %558, 24
  %578 = zext i32 %577 to i64
  %579 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %578
  %580 = load i32, i32* %579, align 4
  %581 = and i32 %580, 255
  %582 = xor i32 %548, 134217728
  %583 = xor i32 %582, %565
  %584 = xor i32 %583, %571
  %585 = xor i32 %584, %576
  %586 = xor i32 %585, %581
  %587 = getelementptr inbounds i32, i32* %0, i64 24
  store i32 %586, i32* %587, align 4
  %588 = xor i32 %586, %550
  %589 = getelementptr inbounds i32, i32* %0, i64 25
  store i32 %588, i32* %589, align 4
  %590 = xor i32 %586, %514
  %591 = getelementptr inbounds i32, i32* %0, i64 26
  store i32 %590, i32* %591, align 4
  %592 = xor i32 %590, %554
  %593 = getelementptr inbounds i32, i32* %0, i64 27
  store i32 %592, i32* %593, align 4
  %594 = xor i32 %586, %430
  %595 = getelementptr inbounds i32, i32* %0, i64 28
  store i32 %594, i32* %595, align 4
  %596 = xor i32 %594, %558
  %597 = getelementptr inbounds i32, i32* %0, i64 29
  store i32 %596, i32* %597, align 4
  %598 = lshr i32 %596, 16
  %599 = and i32 %598, 255
  %600 = zext i32 %599 to i64
  %601 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %600
  %602 = load i32, i32* %601, align 4
  %603 = and i32 %602, -16777216
  %604 = lshr i32 %596, 8
  %605 = and i32 %604, 255
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %606
  %608 = load i32, i32* %607, align 4
  %609 = and i32 %608, 16711680
  %610 = and i32 %596, 255
  %611 = zext i32 %610 to i64
  %612 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %611
  %613 = load i32, i32* %612, align 4
  %614 = and i32 %613, 65280
  %615 = lshr i32 %596, 24
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %616
  %618 = load i32, i32* %617, align 4
  %619 = and i32 %618, 255
  %620 = xor i32 %586, 268435456
  %621 = xor i32 %620, %603
  %622 = xor i32 %621, %609
  %623 = xor i32 %622, %614
  %624 = xor i32 %623, %619
  %625 = getelementptr inbounds i32, i32* %0, i64 30
  store i32 %624, i32* %625, align 4
  %626 = xor i32 %624, %588
  %627 = getelementptr inbounds i32, i32* %0, i64 31
  store i32 %626, i32* %627, align 4
  %628 = xor i32 %626, %590
  %629 = getelementptr inbounds i32, i32* %0, i64 32
  store i32 %628, i32* %629, align 4
  %630 = xor i32 %626, %554
  %631 = getelementptr inbounds i32, i32* %0, i64 33
  store i32 %630, i32* %631, align 4
  %632 = xor i32 %630, %594
  %633 = getelementptr inbounds i32, i32* %0, i64 34
  store i32 %632, i32* %633, align 4
  %634 = xor i32 %626, %482
  %635 = getelementptr inbounds i32, i32* %0, i64 35
  store i32 %634, i32* %635, align 4
  %636 = lshr i32 %634, 16
  %637 = and i32 %636, 255
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %638
  %640 = load i32, i32* %639, align 4
  %641 = and i32 %640, -16777216
  %642 = lshr i32 %634, 8
  %643 = and i32 %642, 255
  %644 = zext i32 %643 to i64
  %645 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %644
  %646 = load i32, i32* %645, align 4
  %647 = and i32 %646, 16711680
  %648 = and i32 %634, 255
  %649 = zext i32 %648 to i64
  %650 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %649
  %651 = load i32, i32* %650, align 4
  %652 = and i32 %651, 65280
  %653 = lshr i32 %634, 24
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %654
  %656 = load i32, i32* %655, align 4
  %657 = and i32 %656, 255
  %658 = xor i32 %624, 536870912
  %659 = xor i32 %658, %641
  %660 = xor i32 %659, %647
  %661 = xor i32 %660, %652
  %662 = xor i32 %661, %657
  %663 = getelementptr inbounds i32, i32* %0, i64 36
  store i32 %662, i32* %663, align 4
  %664 = xor i32 %662, %626
  %665 = getelementptr inbounds i32, i32* %0, i64 37
  store i32 %664, i32* %665, align 4
  %666 = xor i32 %662, %590
  %667 = getelementptr inbounds i32, i32* %0, i64 38
  store i32 %666, i32* %667, align 4
  %668 = xor i32 %666, %630
  %669 = getelementptr inbounds i32, i32* %0, i64 39
  store i32 %668, i32* %669, align 4
  %670 = xor i32 %666, %594
  %671 = getelementptr inbounds i32, i32* %0, i64 40
  store i32 %670, i32* %671, align 4
  %672 = xor i32 %670, %634
  %673 = getelementptr inbounds i32, i32* %0, i64 41
  store i32 %672, i32* %673, align 4
  %674 = lshr i32 %672, 16
  %675 = and i32 %674, 255
  %676 = zext i32 %675 to i64
  %677 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %676
  %678 = load i32, i32* %677, align 4
  %679 = and i32 %678, -16777216
  %680 = lshr i32 %672, 8
  %681 = and i32 %680, 255
  %682 = zext i32 %681 to i64
  %683 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %682
  %684 = load i32, i32* %683, align 4
  %685 = and i32 %684, 16711680
  %686 = and i32 %672, 255
  %687 = zext i32 %686 to i64
  %688 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %687
  %689 = load i32, i32* %688, align 4
  %690 = and i32 %689, 65280
  %691 = lshr i32 %672, 24
  %692 = zext i32 %691 to i64
  %693 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %692
  %694 = load i32, i32* %693, align 4
  %695 = and i32 %694, 255
  %696 = xor i32 %662, 1073741824
  %697 = xor i32 %696, %679
  %698 = xor i32 %697, %685
  %699 = xor i32 %698, %690
  %700 = xor i32 %699, %695
  %701 = getelementptr inbounds i32, i32* %0, i64 42
  store i32 %700, i32* %701, align 4
  %702 = xor i32 %700, %664
  %703 = getelementptr inbounds i32, i32* %0, i64 43
  store i32 %702, i32* %703, align 4
  %704 = xor i32 %702, %666
  %705 = getelementptr inbounds i32, i32* %0, i64 44
  store i32 %704, i32* %705, align 4
  %706 = xor i32 %702, %630
  %707 = getelementptr inbounds i32, i32* %0, i64 45
  store i32 %706, i32* %707, align 4
  %708 = xor i32 %706, %670
  %709 = getelementptr inbounds i32, i32* %0, i64 46
  store i32 %708, i32* %709, align 4
  %710 = xor i32 %706, %634
  %711 = getelementptr inbounds i32, i32* %0, i64 47
  store i32 %710, i32* %711, align 4
  %712 = lshr i32 %710, 16
  %713 = and i32 %712, 255
  %714 = zext i32 %713 to i64
  %715 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %714
  %716 = load i32, i32* %715, align 4
  %717 = and i32 %716, -16777216
  %718 = lshr i32 %710, 8
  %719 = and i32 %718, 255
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %720
  %722 = load i32, i32* %721, align 4
  %723 = and i32 %722, 16711680
  %724 = and i32 %710, 255
  %725 = zext i32 %724 to i64
  %726 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %725
  %727 = load i32, i32* %726, align 4
  %728 = and i32 %727, 65280
  %729 = lshr i32 %710, 24
  %730 = zext i32 %729 to i64
  %731 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %730
  %732 = load i32, i32* %731, align 4
  %733 = and i32 %732, 255
  %734 = xor i32 %700, -2147483648
  %735 = xor i32 %734, %717
  %736 = xor i32 %735, %723
  %737 = xor i32 %736, %728
  %738 = xor i32 %737, %733
  %739 = getelementptr inbounds i32, i32* %0, i64 48
  store i32 %738, i32* %739, align 4
  %740 = xor i32 %738, %702
  %741 = getelementptr inbounds i32, i32* %0, i64 49
  store i32 %740, i32* %741, align 4
  %742 = xor i32 %738, %666
  %743 = getelementptr inbounds i32, i32* %0, i64 50
  store i32 %742, i32* %743, align 4
  %744 = xor i32 %742, %706
  br label %.sink.split

745:                                              ; preds = %412
  %746 = getelementptr inbounds i8, i8* %1, i64 24
  %747 = load i8, i8* %746, align 1
  %748 = zext i8 %747 to i32
  %749 = shl nuw i32 %748, 24
  %750 = getelementptr inbounds i8, i8* %1, i64 25
  %751 = load i8, i8* %750, align 1
  %752 = zext i8 %751 to i32
  %753 = shl nuw nsw i32 %752, 16
  %754 = or i32 %753, %749
  %755 = getelementptr inbounds i8, i8* %1, i64 26
  %756 = load i8, i8* %755, align 1
  %757 = zext i8 %756 to i32
  %758 = shl nuw nsw i32 %757, 8
  %759 = or i32 %754, %758
  %760 = getelementptr inbounds i8, i8* %1, i64 27
  %761 = load i8, i8* %760, align 1
  %762 = zext i8 %761 to i32
  %763 = or i32 %759, %762
  %764 = getelementptr inbounds i32, i32* %0, i64 6
  store i32 %763, i32* %764, align 4
  %765 = getelementptr inbounds i8, i8* %1, i64 28
  %766 = load i8, i8* %765, align 1
  %767 = zext i8 %766 to i32
  %768 = shl nuw i32 %767, 24
  %769 = getelementptr inbounds i8, i8* %1, i64 29
  %770 = load i8, i8* %769, align 1
  %771 = zext i8 %770 to i32
  %772 = shl nuw nsw i32 %771, 16
  %773 = or i32 %772, %768
  %774 = getelementptr inbounds i8, i8* %1, i64 30
  %775 = load i8, i8* %774, align 1
  %776 = zext i8 %775 to i32
  %777 = shl nuw nsw i32 %776, 8
  %778 = or i32 %773, %777
  %779 = getelementptr inbounds i8, i8* %1, i64 31
  %780 = load i8, i8* %779, align 1
  %781 = zext i8 %780 to i32
  %782 = or i32 %778, %781
  %783 = getelementptr inbounds i32, i32* %0, i64 7
  store i32 %782, i32* %783, align 4
  %784 = icmp eq i32 %2, 256
  br i1 %784, label %.preheader8, label %1215

.preheader8:                                      ; preds = %745
  %785 = zext i8 %770 to i64
  %786 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %785
  %787 = load i32, i32* %786, align 4
  %788 = and i32 %787, -16777216
  %789 = zext i8 %775 to i64
  %790 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %789
  %791 = load i32, i32* %790, align 4
  %792 = and i32 %791, 16711680
  %793 = zext i8 %780 to i64
  %794 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %793
  %795 = load i32, i32* %794, align 4
  %796 = and i32 %795, 65280
  %797 = zext i8 %766 to i64
  %798 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %797
  %799 = load i32, i32* %798, align 4
  %800 = and i32 %799, 255
  %801 = xor i32 %20, 16777216
  %802 = xor i32 %801, %788
  %803 = xor i32 %802, %792
  %804 = xor i32 %803, %796
  %805 = xor i32 %804, %800
  %806 = getelementptr inbounds i32, i32* %0, i64 8
  store i32 %805, i32* %806, align 4
  %807 = xor i32 %805, %38
  %808 = getelementptr inbounds i32, i32* %0, i64 9
  store i32 %807, i32* %808, align 4
  %809 = xor i32 %807, %57
  %810 = getelementptr inbounds i32, i32* %0, i64 10
  store i32 %809, i32* %810, align 4
  %811 = xor i32 %809, %76
  %812 = getelementptr inbounds i32, i32* %0, i64 11
  store i32 %811, i32* %812, align 4
  %813 = lshr i32 %811, 24
  %814 = zext i32 %813 to i64
  %815 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %814
  %816 = load i32, i32* %815, align 4
  %817 = and i32 %816, -16777216
  %818 = xor i32 %817, %430
  %819 = lshr i32 %811, 16
  %820 = and i32 %819, 255
  %821 = zext i32 %820 to i64
  %822 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %821
  %823 = load i32, i32* %822, align 4
  %824 = and i32 %823, 16711680
  %825 = xor i32 %818, %824
  %826 = lshr i32 %811, 8
  %827 = and i32 %826, 255
  %828 = zext i32 %827 to i64
  %829 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %828
  %830 = load i32, i32* %829, align 4
  %831 = and i32 %830, 65280
  %832 = xor i32 %825, %831
  %833 = and i32 %811, 255
  %834 = zext i32 %833 to i64
  %835 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %834
  %836 = load i32, i32* %835, align 4
  %837 = and i32 %836, 255
  %838 = xor i32 %832, %837
  %839 = getelementptr inbounds i32, i32* %0, i64 12
  store i32 %838, i32* %839, align 4
  %840 = xor i32 %838, %449
  %841 = getelementptr inbounds i32, i32* %0, i64 13
  store i32 %840, i32* %841, align 4
  %842 = xor i32 %840, %763
  %843 = getelementptr inbounds i32, i32* %0, i64 14
  store i32 %842, i32* %843, align 4
  %844 = xor i32 %842, %782
  %845 = getelementptr inbounds i32, i32* %0, i64 15
  store i32 %844, i32* %845, align 4
  %846 = lshr i32 %844, 16
  %847 = and i32 %846, 255
  %848 = zext i32 %847 to i64
  %849 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %848
  %850 = load i32, i32* %849, align 4
  %851 = and i32 %850, -16777216
  %852 = lshr i32 %844, 8
  %853 = and i32 %852, 255
  %854 = zext i32 %853 to i64
  %855 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %854
  %856 = load i32, i32* %855, align 4
  %857 = and i32 %856, 16711680
  %858 = and i32 %844, 255
  %859 = zext i32 %858 to i64
  %860 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %859
  %861 = load i32, i32* %860, align 4
  %862 = and i32 %861, 65280
  %863 = lshr i32 %844, 24
  %864 = zext i32 %863 to i64
  %865 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %864
  %866 = load i32, i32* %865, align 4
  %867 = and i32 %866, 255
  %868 = xor i32 %805, 33554432
  %869 = xor i32 %868, %851
  %870 = xor i32 %869, %857
  %871 = xor i32 %870, %862
  %872 = xor i32 %871, %867
  %873 = getelementptr inbounds i32, i32* %0, i64 16
  store i32 %872, i32* %873, align 4
  %874 = xor i32 %872, %807
  %875 = getelementptr inbounds i32, i32* %0, i64 17
  store i32 %874, i32* %875, align 4
  %876 = xor i32 %872, %57
  %877 = getelementptr inbounds i32, i32* %0, i64 18
  store i32 %876, i32* %877, align 4
  %878 = xor i32 %876, %811
  %879 = getelementptr inbounds i32, i32* %0, i64 19
  store i32 %878, i32* %879, align 4
  %880 = lshr i32 %878, 24
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %881
  %883 = load i32, i32* %882, align 4
  %884 = and i32 %883, -16777216
  %885 = xor i32 %884, %838
  %886 = lshr i32 %878, 16
  %887 = and i32 %886, 255
  %888 = zext i32 %887 to i64
  %889 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %888
  %890 = load i32, i32* %889, align 4
  %891 = and i32 %890, 16711680
  %892 = xor i32 %885, %891
  %893 = lshr i32 %878, 8
  %894 = and i32 %893, 255
  %895 = zext i32 %894 to i64
  %896 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %895
  %897 = load i32, i32* %896, align 4
  %898 = and i32 %897, 65280
  %899 = xor i32 %892, %898
  %900 = and i32 %878, 255
  %901 = zext i32 %900 to i64
  %902 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %901
  %903 = load i32, i32* %902, align 4
  %904 = and i32 %903, 255
  %905 = xor i32 %899, %904
  %906 = getelementptr inbounds i32, i32* %0, i64 20
  store i32 %905, i32* %906, align 4
  %907 = xor i32 %905, %840
  %908 = getelementptr inbounds i32, i32* %0, i64 21
  store i32 %907, i32* %908, align 4
  %909 = xor i32 %905, %763
  %910 = getelementptr inbounds i32, i32* %0, i64 22
  store i32 %909, i32* %910, align 4
  %911 = xor i32 %909, %844
  %912 = getelementptr inbounds i32, i32* %0, i64 23
  store i32 %911, i32* %912, align 4
  %913 = lshr i32 %911, 16
  %914 = and i32 %913, 255
  %915 = zext i32 %914 to i64
  %916 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %915
  %917 = load i32, i32* %916, align 4
  %918 = and i32 %917, -16777216
  %919 = lshr i32 %911, 8
  %920 = and i32 %919, 255
  %921 = zext i32 %920 to i64
  %922 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %921
  %923 = load i32, i32* %922, align 4
  %924 = and i32 %923, 16711680
  %925 = and i32 %911, 255
  %926 = zext i32 %925 to i64
  %927 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %926
  %928 = load i32, i32* %927, align 4
  %929 = and i32 %928, 65280
  %930 = lshr i32 %911, 24
  %931 = zext i32 %930 to i64
  %932 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %931
  %933 = load i32, i32* %932, align 4
  %934 = and i32 %933, 255
  %935 = xor i32 %872, 67108864
  %936 = xor i32 %935, %918
  %937 = xor i32 %936, %924
  %938 = xor i32 %937, %929
  %939 = xor i32 %938, %934
  %940 = getelementptr inbounds i32, i32* %0, i64 24
  store i32 %939, i32* %940, align 4
  %941 = xor i32 %939, %874
  %942 = getelementptr inbounds i32, i32* %0, i64 25
  store i32 %941, i32* %942, align 4
  %943 = xor i32 %941, %876
  %944 = getelementptr inbounds i32, i32* %0, i64 26
  store i32 %943, i32* %944, align 4
  %945 = xor i32 %941, %811
  %946 = getelementptr inbounds i32, i32* %0, i64 27
  store i32 %945, i32* %946, align 4
  %947 = lshr i32 %945, 24
  %948 = zext i32 %947 to i64
  %949 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %948
  %950 = load i32, i32* %949, align 4
  %951 = and i32 %950, -16777216
  %952 = xor i32 %951, %905
  %953 = lshr i32 %945, 16
  %954 = and i32 %953, 255
  %955 = zext i32 %954 to i64
  %956 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %955
  %957 = load i32, i32* %956, align 4
  %958 = and i32 %957, 16711680
  %959 = xor i32 %952, %958
  %960 = lshr i32 %945, 8
  %961 = and i32 %960, 255
  %962 = zext i32 %961 to i64
  %963 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %962
  %964 = load i32, i32* %963, align 4
  %965 = and i32 %964, 65280
  %966 = xor i32 %959, %965
  %967 = and i32 %945, 255
  %968 = zext i32 %967 to i64
  %969 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %968
  %970 = load i32, i32* %969, align 4
  %971 = and i32 %970, 255
  %972 = xor i32 %966, %971
  %973 = getelementptr inbounds i32, i32* %0, i64 28
  store i32 %972, i32* %973, align 4
  %974 = xor i32 %972, %907
  %975 = getelementptr inbounds i32, i32* %0, i64 29
  store i32 %974, i32* %975, align 4
  %976 = xor i32 %974, %909
  %977 = getelementptr inbounds i32, i32* %0, i64 30
  store i32 %976, i32* %977, align 4
  %978 = xor i32 %974, %844
  %979 = getelementptr inbounds i32, i32* %0, i64 31
  store i32 %978, i32* %979, align 4
  %980 = lshr i32 %978, 16
  %981 = and i32 %980, 255
  %982 = zext i32 %981 to i64
  %983 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %982
  %984 = load i32, i32* %983, align 4
  %985 = and i32 %984, -16777216
  %986 = lshr i32 %978, 8
  %987 = and i32 %986, 255
  %988 = zext i32 %987 to i64
  %989 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %988
  %990 = load i32, i32* %989, align 4
  %991 = and i32 %990, 16711680
  %992 = and i32 %978, 255
  %993 = zext i32 %992 to i64
  %994 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %993
  %995 = load i32, i32* %994, align 4
  %996 = and i32 %995, 65280
  %997 = lshr i32 %978, 24
  %998 = zext i32 %997 to i64
  %999 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %998
  %1000 = load i32, i32* %999, align 4
  %1001 = and i32 %1000, 255
  %1002 = xor i32 %939, 134217728
  %1003 = xor i32 %1002, %985
  %1004 = xor i32 %1003, %991
  %1005 = xor i32 %1004, %996
  %1006 = xor i32 %1005, %1001
  %1007 = getelementptr inbounds i32, i32* %0, i64 32
  store i32 %1006, i32* %1007, align 4
  %1008 = xor i32 %1006, %941
  %1009 = getelementptr inbounds i32, i32* %0, i64 33
  store i32 %1008, i32* %1009, align 4
  %1010 = xor i32 %1006, %876
  %1011 = getelementptr inbounds i32, i32* %0, i64 34
  store i32 %1010, i32* %1011, align 4
  %1012 = xor i32 %1010, %945
  %1013 = getelementptr inbounds i32, i32* %0, i64 35
  store i32 %1012, i32* %1013, align 4
  %1014 = lshr i32 %1012, 24
  %1015 = zext i32 %1014 to i64
  %1016 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1015
  %1017 = load i32, i32* %1016, align 4
  %1018 = and i32 %1017, -16777216
  %1019 = xor i32 %1018, %972
  %1020 = lshr i32 %1012, 16
  %1021 = and i32 %1020, 255
  %1022 = zext i32 %1021 to i64
  %1023 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1022
  %1024 = load i32, i32* %1023, align 4
  %1025 = and i32 %1024, 16711680
  %1026 = xor i32 %1019, %1025
  %1027 = lshr i32 %1012, 8
  %1028 = and i32 %1027, 255
  %1029 = zext i32 %1028 to i64
  %1030 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1029
  %1031 = load i32, i32* %1030, align 4
  %1032 = and i32 %1031, 65280
  %1033 = xor i32 %1026, %1032
  %1034 = and i32 %1012, 255
  %1035 = zext i32 %1034 to i64
  %1036 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1035
  %1037 = load i32, i32* %1036, align 4
  %1038 = and i32 %1037, 255
  %1039 = xor i32 %1033, %1038
  %1040 = getelementptr inbounds i32, i32* %0, i64 36
  store i32 %1039, i32* %1040, align 4
  %1041 = xor i32 %1039, %974
  %1042 = getelementptr inbounds i32, i32* %0, i64 37
  store i32 %1041, i32* %1042, align 4
  %1043 = xor i32 %1039, %909
  %1044 = getelementptr inbounds i32, i32* %0, i64 38
  store i32 %1043, i32* %1044, align 4
  %1045 = xor i32 %1043, %978
  %1046 = getelementptr inbounds i32, i32* %0, i64 39
  store i32 %1045, i32* %1046, align 4
  %1047 = lshr i32 %1045, 16
  %1048 = and i32 %1047, 255
  %1049 = zext i32 %1048 to i64
  %1050 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1049
  %1051 = load i32, i32* %1050, align 4
  %1052 = and i32 %1051, -16777216
  %1053 = lshr i32 %1045, 8
  %1054 = and i32 %1053, 255
  %1055 = zext i32 %1054 to i64
  %1056 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1055
  %1057 = load i32, i32* %1056, align 4
  %1058 = and i32 %1057, 16711680
  %1059 = and i32 %1045, 255
  %1060 = zext i32 %1059 to i64
  %1061 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1060
  %1062 = load i32, i32* %1061, align 4
  %1063 = and i32 %1062, 65280
  %1064 = lshr i32 %1045, 24
  %1065 = zext i32 %1064 to i64
  %1066 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1065
  %1067 = load i32, i32* %1066, align 4
  %1068 = and i32 %1067, 255
  %1069 = xor i32 %1006, 268435456
  %1070 = xor i32 %1069, %1052
  %1071 = xor i32 %1070, %1058
  %1072 = xor i32 %1071, %1063
  %1073 = xor i32 %1072, %1068
  %1074 = getelementptr inbounds i32, i32* %0, i64 40
  store i32 %1073, i32* %1074, align 4
  %1075 = xor i32 %1073, %1008
  %1076 = getelementptr inbounds i32, i32* %0, i64 41
  store i32 %1075, i32* %1076, align 4
  %1077 = xor i32 %1075, %1010
  %1078 = getelementptr inbounds i32, i32* %0, i64 42
  store i32 %1077, i32* %1078, align 4
  %1079 = xor i32 %1075, %945
  %1080 = getelementptr inbounds i32, i32* %0, i64 43
  store i32 %1079, i32* %1080, align 4
  %1081 = lshr i32 %1079, 24
  %1082 = zext i32 %1081 to i64
  %1083 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1082
  %1084 = load i32, i32* %1083, align 4
  %1085 = and i32 %1084, -16777216
  %1086 = xor i32 %1085, %1039
  %1087 = lshr i32 %1079, 16
  %1088 = and i32 %1087, 255
  %1089 = zext i32 %1088 to i64
  %1090 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1089
  %1091 = load i32, i32* %1090, align 4
  %1092 = and i32 %1091, 16711680
  %1093 = xor i32 %1086, %1092
  %1094 = lshr i32 %1079, 8
  %1095 = and i32 %1094, 255
  %1096 = zext i32 %1095 to i64
  %1097 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1096
  %1098 = load i32, i32* %1097, align 4
  %1099 = and i32 %1098, 65280
  %1100 = xor i32 %1093, %1099
  %1101 = and i32 %1079, 255
  %1102 = zext i32 %1101 to i64
  %1103 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1102
  %1104 = load i32, i32* %1103, align 4
  %1105 = and i32 %1104, 255
  %1106 = xor i32 %1100, %1105
  %1107 = getelementptr inbounds i32, i32* %0, i64 44
  store i32 %1106, i32* %1107, align 4
  %1108 = xor i32 %1106, %1041
  %1109 = getelementptr inbounds i32, i32* %0, i64 45
  store i32 %1108, i32* %1109, align 4
  %1110 = xor i32 %1108, %1043
  %1111 = getelementptr inbounds i32, i32* %0, i64 46
  store i32 %1110, i32* %1111, align 4
  %1112 = xor i32 %1108, %978
  %1113 = getelementptr inbounds i32, i32* %0, i64 47
  store i32 %1112, i32* %1113, align 4
  %1114 = lshr i32 %1112, 16
  %1115 = and i32 %1114, 255
  %1116 = zext i32 %1115 to i64
  %1117 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1116
  %1118 = load i32, i32* %1117, align 4
  %1119 = and i32 %1118, -16777216
  %1120 = lshr i32 %1112, 8
  %1121 = and i32 %1120, 255
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1122
  %1124 = load i32, i32* %1123, align 4
  %1125 = and i32 %1124, 16711680
  %1126 = and i32 %1112, 255
  %1127 = zext i32 %1126 to i64
  %1128 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1127
  %1129 = load i32, i32* %1128, align 4
  %1130 = and i32 %1129, 65280
  %1131 = lshr i32 %1112, 24
  %1132 = zext i32 %1131 to i64
  %1133 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1132
  %1134 = load i32, i32* %1133, align 4
  %1135 = and i32 %1134, 255
  %1136 = xor i32 %1073, 536870912
  %1137 = xor i32 %1136, %1119
  %1138 = xor i32 %1137, %1125
  %1139 = xor i32 %1138, %1130
  %1140 = xor i32 %1139, %1135
  %1141 = getelementptr inbounds i32, i32* %0, i64 48
  store i32 %1140, i32* %1141, align 4
  %1142 = xor i32 %1140, %1075
  %1143 = getelementptr inbounds i32, i32* %0, i64 49
  store i32 %1142, i32* %1143, align 4
  %1144 = xor i32 %1140, %1010
  %1145 = getelementptr inbounds i32, i32* %0, i64 50
  store i32 %1144, i32* %1145, align 4
  %1146 = xor i32 %1144, %1079
  %1147 = getelementptr inbounds i32, i32* %0, i64 51
  store i32 %1146, i32* %1147, align 4
  %1148 = lshr i32 %1146, 24
  %1149 = zext i32 %1148 to i64
  %1150 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1149
  %1151 = load i32, i32* %1150, align 4
  %1152 = and i32 %1151, -16777216
  %1153 = xor i32 %1152, %1106
  %1154 = lshr i32 %1146, 16
  %1155 = and i32 %1154, 255
  %1156 = zext i32 %1155 to i64
  %1157 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1156
  %1158 = load i32, i32* %1157, align 4
  %1159 = and i32 %1158, 16711680
  %1160 = xor i32 %1153, %1159
  %1161 = lshr i32 %1146, 8
  %1162 = and i32 %1161, 255
  %1163 = zext i32 %1162 to i64
  %1164 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1163
  %1165 = load i32, i32* %1164, align 4
  %1166 = and i32 %1165, 65280
  %1167 = xor i32 %1160, %1166
  %1168 = and i32 %1146, 255
  %1169 = zext i32 %1168 to i64
  %1170 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1169
  %1171 = load i32, i32* %1170, align 4
  %1172 = and i32 %1171, 255
  %1173 = xor i32 %1167, %1172
  %1174 = getelementptr inbounds i32, i32* %0, i64 52
  store i32 %1173, i32* %1174, align 4
  %1175 = xor i32 %1173, %1108
  %1176 = getelementptr inbounds i32, i32* %0, i64 53
  store i32 %1175, i32* %1176, align 4
  %1177 = xor i32 %1173, %1043
  %1178 = getelementptr inbounds i32, i32* %0, i64 54
  store i32 %1177, i32* %1178, align 4
  %1179 = xor i32 %1177, %1112
  %1180 = getelementptr inbounds i32, i32* %0, i64 55
  store i32 %1179, i32* %1180, align 4
  %1181 = lshr i32 %1179, 16
  %1182 = and i32 %1181, 255
  %1183 = zext i32 %1182 to i64
  %1184 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1183
  %1185 = load i32, i32* %1184, align 4
  %1186 = and i32 %1185, -16777216
  %1187 = lshr i32 %1179, 8
  %1188 = and i32 %1187, 255
  %1189 = zext i32 %1188 to i64
  %1190 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1189
  %1191 = load i32, i32* %1190, align 4
  %1192 = and i32 %1191, 16711680
  %1193 = and i32 %1179, 255
  %1194 = zext i32 %1193 to i64
  %1195 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1194
  %1196 = load i32, i32* %1195, align 4
  %1197 = and i32 %1196, 65280
  %1198 = lshr i32 %1179, 24
  %1199 = zext i32 %1198 to i64
  %1200 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1199
  %1201 = load i32, i32* %1200, align 4
  %1202 = and i32 %1201, 255
  %1203 = xor i32 %1140, 1073741824
  %1204 = xor i32 %1203, %1186
  %1205 = xor i32 %1204, %1192
  %1206 = xor i32 %1205, %1197
  %1207 = xor i32 %1206, %1202
  %1208 = getelementptr inbounds i32, i32* %0, i64 56
  store i32 %1207, i32* %1208, align 4
  %1209 = xor i32 %1207, %1142
  %1210 = getelementptr inbounds i32, i32* %0, i64 57
  store i32 %1209, i32* %1210, align 4
  %1211 = xor i32 %1209, %1144
  %1212 = getelementptr inbounds i32, i32* %0, i64 58
  store i32 %1211, i32* %1212, align 4
  %1213 = xor i32 %1209, %1079
  br label %.sink.split

.sink.split:                                      ; preds = %.loopexit, %.preheader5, %.preheader8
  %.sink3 = phi i64 [ 59, %.preheader8 ], [ 51, %.preheader5 ], [ 43, %.loopexit ]
  %.sink = phi i32 [ %1213, %.preheader8 ], [ %744, %.preheader5 ], [ %411, %.loopexit ]
  %.0.ph = phi i32 [ 14, %.preheader8 ], [ 12, %.preheader5 ], [ 10, %.loopexit ]
  %1214 = getelementptr inbounds i32, i32* %0, i64 %.sink3
  store i32 %.sink, i32* %1214, align 4
  br label %1215

1215:                                             ; preds = %.sink.split, %745
  %.0 = phi i32 [ 0, %745 ], [ %.0.ph, %.sink.split ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @prepare_inputs(i8* nocapture %0, i8* nocapture %1) local_unnamed_addr #0 {
  tail call void @randombytes(i8* %0, i64 16)
  %3 = tail call zeroext i8 @randombit()
  store i8 %3, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  br label %6

6:                                                ; preds = %5, %2
  ret void
}

; Function Attrs: nofree noinline norecurse nounwind sspstrong uwtable
define dso_local i32 @rijndaelKeySetupDec(i32* %0, i8* %1, i32 %2) local_unnamed_addr #3 {
  %4 = tail call i32 @rijndaelKeySetupEnc(i32* %0, i8* %1, i32 %2)
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %.lr.ph8, label %._crit_edge

.lr.ph8:                                          ; preds = %3
  %6 = shl i32 %4, 2
  %7 = sext i32 %6 to i64
  br label %9

.preheader:                                       ; preds = %9
  %8 = icmp sgt i32 %4, 1
  br i1 %8, label %.lr.ph, label %._crit_edge

9:                                                ; preds = %9, %.lr.ph8
  %indvars.iv10 = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next11, %9 ]
  %indvars.iv = phi i64 [ %7, %.lr.ph8 ], [ %indvars.iv.next, %9 ]
  %10 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  store i32 %11, i32* %12, align 4
  %14 = or i64 %indvars.iv10, 1
  %15 = getelementptr inbounds i32, i32* %0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = or i64 %indvars.iv, 1
  %18 = getelementptr inbounds i32, i32* %0, i64 %17
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %15, align 4
  store i32 %16, i32* %18, align 4
  %20 = or i64 %indvars.iv10, 2
  %21 = getelementptr inbounds i32, i32* %0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = or i64 %indvars.iv, 2
  %24 = getelementptr inbounds i32, i32* %0, i64 %23
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %21, align 4
  store i32 %22, i32* %24, align 4
  %26 = or i64 %indvars.iv10, 3
  %27 = getelementptr inbounds i32, i32* %0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = or i64 %indvars.iv, 3
  %30 = getelementptr inbounds i32, i32* %0, i64 %29
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %27, align 4
  store i32 %28, i32* %30, align 4
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 4
  %indvars.iv.next = add nsw i64 %indvars.iv, -4
  %32 = icmp slt i64 %indvars.iv.next11, %indvars.iv.next
  br i1 %32, label %9, label %.preheader

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %.04 = phi i32* [ %33, %.lr.ph ], [ %0, %.preheader ]
  %.13 = phi i32 [ %189, %.lr.ph ], [ 1, %.preheader ]
  %33 = getelementptr inbounds i32, i32* %.04, i64 4
  %34 = load i32, i32* %33, align 4
  %35 = lshr i32 %34, 24
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 255
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = lshr i32 %34, 16
  %44 = and i32 %43, 255
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 255
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = xor i32 %51, %42
  %53 = lshr i32 %34, 8
  %54 = and i32 %53, 255
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 255
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = xor i32 %52, %61
  %63 = and i32 %34, 255
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 255
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = xor i32 %62, %70
  store i32 %71, i32* %33, align 4
  %72 = getelementptr inbounds i32, i32* %.04, i64 5
  %73 = load i32, i32* %72, align 4
  %74 = lshr i32 %73, 24
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, 255
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = lshr i32 %73, 16
  %83 = and i32 %82, 255
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 255
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = xor i32 %90, %81
  %92 = lshr i32 %73, 8
  %93 = and i32 %92, 255
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 255
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = xor i32 %91, %100
  %102 = and i32 %73, 255
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 255
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = xor i32 %101, %109
  store i32 %110, i32* %72, align 4
  %111 = getelementptr inbounds i32, i32* %.04, i64 6
  %112 = load i32, i32* %111, align 4
  %113 = lshr i32 %112, 24
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 255
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = lshr i32 %112, 16
  %122 = and i32 %121, 255
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, 255
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = xor i32 %129, %120
  %131 = lshr i32 %112, 8
  %132 = and i32 %131, 255
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 255
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = xor i32 %130, %139
  %141 = and i32 %112, 255
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, 255
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = xor i32 %140, %148
  store i32 %149, i32* %111, align 4
  %150 = getelementptr inbounds i32, i32* %.04, i64 7
  %151 = load i32, i32* %150, align 4
  %152 = lshr i32 %151, 24
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, 255
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = lshr i32 %151, 16
  %161 = and i32 %160, 255
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = and i32 %164, 255
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = xor i32 %168, %159
  %170 = lshr i32 %151, 8
  %171 = and i32 %170, 255
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %174, 255
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = xor i32 %169, %178
  %180 = and i32 %151, 255
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, 255
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = xor i32 %179, %187
  store i32 %188, i32* %150, align 4
  %189 = add nuw nsw i32 %.13, 1
  %exitcond = icmp eq i32 %189, %4
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %3, %.preheader
  ret i32 %4
}

; Function Attrs: nofree noinline norecurse nounwind sspstrong uwtable
define dso_local void @rijndaelDecrypt(i32* readonly %0, i32 %1, i8* nocapture readonly %2, i8* nocapture %3) local_unnamed_addr #3 {
  %5 = load i8, i8* %2, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 %6, 24
  %8 = getelementptr inbounds i8, i8* %2, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = or i32 %11, %7
  %13 = getelementptr inbounds i8, i8* %2, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds i8, i8* %2, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = load i32, i32* %0, align 4
  %23 = xor i32 %21, %22
  %24 = getelementptr inbounds i8, i8* %2, i64 4
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds i8, i8* %2, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds i8, i8* %2, i64 6
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds i8, i8* %2, i64 7
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = getelementptr inbounds i32, i32* %0, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = xor i32 %41, %43
  %45 = getelementptr inbounds i8, i8* %2, i64 8
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw i32 %47, 24
  %49 = getelementptr inbounds i8, i8* %2, i64 9
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 16
  %53 = or i32 %52, %48
  %54 = getelementptr inbounds i8, i8* %2, i64 10
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 8
  %58 = or i32 %53, %57
  %59 = getelementptr inbounds i8, i8* %2, i64 11
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = or i32 %58, %61
  %63 = getelementptr inbounds i32, i32* %0, i64 2
  %64 = load i32, i32* %63, align 4
  %65 = xor i32 %62, %64
  %66 = getelementptr inbounds i8, i8* %2, i64 12
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw i32 %68, 24
  %70 = getelementptr inbounds i8, i8* %2, i64 13
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 16
  %74 = or i32 %73, %69
  %75 = getelementptr inbounds i8, i8* %2, i64 14
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 8
  %79 = or i32 %74, %78
  %80 = getelementptr inbounds i8, i8* %2, i64 15
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %79, %82
  %84 = getelementptr inbounds i32, i32* %0, i64 3
  %85 = load i32, i32* %84, align 4
  %86 = xor i32 %83, %85
  %87 = lshr i32 %23, 24
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = lshr i32 %86, 16
  %92 = and i32 %91, 255
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = xor i32 %95, %90
  %97 = lshr i32 %65, 8
  %98 = and i32 %97, 255
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = xor i32 %96, %101
  %103 = and i32 %44, 255
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = xor i32 %102, %106
  %108 = getelementptr inbounds i32, i32* %0, i64 4
  %109 = load i32, i32* %108, align 4
  %110 = xor i32 %107, %109
  %111 = lshr i32 %44, 24
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = lshr i32 %23, 16
  %116 = and i32 %115, 255
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = xor i32 %119, %114
  %121 = lshr i32 %86, 8
  %122 = and i32 %121, 255
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = xor i32 %120, %125
  %127 = and i32 %65, 255
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = xor i32 %126, %130
  %132 = getelementptr inbounds i32, i32* %0, i64 5
  %133 = load i32, i32* %132, align 4
  %134 = xor i32 %131, %133
  %135 = lshr i32 %65, 24
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = lshr i32 %44, 16
  %140 = and i32 %139, 255
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = xor i32 %143, %138
  %145 = lshr i32 %23, 8
  %146 = and i32 %145, 255
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = xor i32 %144, %149
  %151 = and i32 %86, 255
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = xor i32 %150, %154
  %156 = getelementptr inbounds i32, i32* %0, i64 6
  %157 = load i32, i32* %156, align 4
  %158 = xor i32 %155, %157
  %159 = lshr i32 %86, 24
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = lshr i32 %65, 16
  %164 = and i32 %163, 255
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = xor i32 %167, %162
  %169 = lshr i32 %44, 8
  %170 = and i32 %169, 255
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = xor i32 %168, %173
  %175 = and i32 %23, 255
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = xor i32 %174, %178
  %180 = getelementptr inbounds i32, i32* %0, i64 7
  %181 = load i32, i32* %180, align 4
  %182 = xor i32 %179, %181
  %183 = lshr i32 %110, 24
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = lshr i32 %182, 16
  %188 = and i32 %187, 255
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = xor i32 %191, %186
  %193 = lshr i32 %158, 8
  %194 = and i32 %193, 255
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %195
  %197 = load i32, i32* %196, align 4
  %198 = xor i32 %192, %197
  %199 = and i32 %134, 255
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = xor i32 %198, %202
  %204 = getelementptr inbounds i32, i32* %0, i64 8
  %205 = load i32, i32* %204, align 4
  %206 = xor i32 %203, %205
  %207 = lshr i32 %134, 24
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = lshr i32 %110, 16
  %212 = and i32 %211, 255
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = xor i32 %215, %210
  %217 = lshr i32 %182, 8
  %218 = and i32 %217, 255
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = xor i32 %216, %221
  %223 = and i32 %158, 255
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = xor i32 %222, %226
  %228 = getelementptr inbounds i32, i32* %0, i64 9
  %229 = load i32, i32* %228, align 4
  %230 = xor i32 %227, %229
  %231 = lshr i32 %158, 24
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = lshr i32 %134, 16
  %236 = and i32 %235, 255
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = xor i32 %239, %234
  %241 = lshr i32 %110, 8
  %242 = and i32 %241, 255
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %243
  %245 = load i32, i32* %244, align 4
  %246 = xor i32 %240, %245
  %247 = and i32 %182, 255
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = xor i32 %246, %250
  %252 = getelementptr inbounds i32, i32* %0, i64 10
  %253 = load i32, i32* %252, align 4
  %254 = xor i32 %251, %253
  %255 = lshr i32 %182, 24
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = lshr i32 %158, 16
  %260 = and i32 %259, 255
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = xor i32 %263, %258
  %265 = lshr i32 %134, 8
  %266 = and i32 %265, 255
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = xor i32 %264, %269
  %271 = and i32 %110, 255
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = xor i32 %270, %274
  %276 = getelementptr inbounds i32, i32* %0, i64 11
  %277 = load i32, i32* %276, align 4
  %278 = xor i32 %275, %277
  %279 = lshr i32 %206, 24
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = lshr i32 %278, 16
  %284 = and i32 %283, 255
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = xor i32 %287, %282
  %289 = lshr i32 %254, 8
  %290 = and i32 %289, 255
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = xor i32 %288, %293
  %295 = and i32 %230, 255
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = xor i32 %294, %298
  %300 = getelementptr inbounds i32, i32* %0, i64 12
  %301 = load i32, i32* %300, align 4
  %302 = xor i32 %299, %301
  %303 = lshr i32 %230, 24
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = lshr i32 %206, 16
  %308 = and i32 %307, 255
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = xor i32 %311, %306
  %313 = lshr i32 %278, 8
  %314 = and i32 %313, 255
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %315
  %317 = load i32, i32* %316, align 4
  %318 = xor i32 %312, %317
  %319 = and i32 %254, 255
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = xor i32 %318, %322
  %324 = getelementptr inbounds i32, i32* %0, i64 13
  %325 = load i32, i32* %324, align 4
  %326 = xor i32 %323, %325
  %327 = lshr i32 %254, 24
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %328
  %330 = load i32, i32* %329, align 4
  %331 = lshr i32 %230, 16
  %332 = and i32 %331, 255
  %333 = zext i32 %332 to i64
  %334 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = xor i32 %335, %330
  %337 = lshr i32 %206, 8
  %338 = and i32 %337, 255
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %339
  %341 = load i32, i32* %340, align 4
  %342 = xor i32 %336, %341
  %343 = and i32 %278, 255
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = xor i32 %342, %346
  %348 = getelementptr inbounds i32, i32* %0, i64 14
  %349 = load i32, i32* %348, align 4
  %350 = xor i32 %347, %349
  %351 = lshr i32 %278, 24
  %352 = zext i32 %351 to i64
  %353 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = lshr i32 %254, 16
  %356 = and i32 %355, 255
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %357
  %359 = load i32, i32* %358, align 4
  %360 = xor i32 %359, %354
  %361 = lshr i32 %230, 8
  %362 = and i32 %361, 255
  %363 = zext i32 %362 to i64
  %364 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %363
  %365 = load i32, i32* %364, align 4
  %366 = xor i32 %360, %365
  %367 = and i32 %206, 255
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %368
  %370 = load i32, i32* %369, align 4
  %371 = xor i32 %366, %370
  %372 = getelementptr inbounds i32, i32* %0, i64 15
  %373 = load i32, i32* %372, align 4
  %374 = xor i32 %371, %373
  %375 = lshr i32 %302, 24
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %376
  %378 = load i32, i32* %377, align 4
  %379 = lshr i32 %374, 16
  %380 = and i32 %379, 255
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = xor i32 %383, %378
  %385 = lshr i32 %350, 8
  %386 = and i32 %385, 255
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = xor i32 %384, %389
  %391 = and i32 %326, 255
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %392
  %394 = load i32, i32* %393, align 4
  %395 = xor i32 %390, %394
  %396 = getelementptr inbounds i32, i32* %0, i64 16
  %397 = load i32, i32* %396, align 4
  %398 = xor i32 %395, %397
  %399 = lshr i32 %326, 24
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %400
  %402 = load i32, i32* %401, align 4
  %403 = lshr i32 %302, 16
  %404 = and i32 %403, 255
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = xor i32 %407, %402
  %409 = lshr i32 %374, 8
  %410 = and i32 %409, 255
  %411 = zext i32 %410 to i64
  %412 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %411
  %413 = load i32, i32* %412, align 4
  %414 = xor i32 %408, %413
  %415 = and i32 %350, 255
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %416
  %418 = load i32, i32* %417, align 4
  %419 = xor i32 %414, %418
  %420 = getelementptr inbounds i32, i32* %0, i64 17
  %421 = load i32, i32* %420, align 4
  %422 = xor i32 %419, %421
  %423 = lshr i32 %350, 24
  %424 = zext i32 %423 to i64
  %425 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %424
  %426 = load i32, i32* %425, align 4
  %427 = lshr i32 %326, 16
  %428 = and i32 %427, 255
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = xor i32 %431, %426
  %433 = lshr i32 %302, 8
  %434 = and i32 %433, 255
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = xor i32 %432, %437
  %439 = and i32 %374, 255
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %440
  %442 = load i32, i32* %441, align 4
  %443 = xor i32 %438, %442
  %444 = getelementptr inbounds i32, i32* %0, i64 18
  %445 = load i32, i32* %444, align 4
  %446 = xor i32 %443, %445
  %447 = lshr i32 %374, 24
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = lshr i32 %350, 16
  %452 = and i32 %451, 255
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = xor i32 %455, %450
  %457 = lshr i32 %326, 8
  %458 = and i32 %457, 255
  %459 = zext i32 %458 to i64
  %460 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %459
  %461 = load i32, i32* %460, align 4
  %462 = xor i32 %456, %461
  %463 = and i32 %302, 255
  %464 = zext i32 %463 to i64
  %465 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = xor i32 %462, %466
  %468 = getelementptr inbounds i32, i32* %0, i64 19
  %469 = load i32, i32* %468, align 4
  %470 = xor i32 %467, %469
  %471 = lshr i32 %398, 24
  %472 = zext i32 %471 to i64
  %473 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %472
  %474 = load i32, i32* %473, align 4
  %475 = lshr i32 %470, 16
  %476 = and i32 %475, 255
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %477
  %479 = load i32, i32* %478, align 4
  %480 = xor i32 %479, %474
  %481 = lshr i32 %446, 8
  %482 = and i32 %481, 255
  %483 = zext i32 %482 to i64
  %484 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %483
  %485 = load i32, i32* %484, align 4
  %486 = xor i32 %480, %485
  %487 = and i32 %422, 255
  %488 = zext i32 %487 to i64
  %489 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = xor i32 %486, %490
  %492 = getelementptr inbounds i32, i32* %0, i64 20
  %493 = load i32, i32* %492, align 4
  %494 = xor i32 %491, %493
  %495 = lshr i32 %422, 24
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %496
  %498 = load i32, i32* %497, align 4
  %499 = lshr i32 %398, 16
  %500 = and i32 %499, 255
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %501
  %503 = load i32, i32* %502, align 4
  %504 = xor i32 %503, %498
  %505 = lshr i32 %470, 8
  %506 = and i32 %505, 255
  %507 = zext i32 %506 to i64
  %508 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %507
  %509 = load i32, i32* %508, align 4
  %510 = xor i32 %504, %509
  %511 = and i32 %446, 255
  %512 = zext i32 %511 to i64
  %513 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %512
  %514 = load i32, i32* %513, align 4
  %515 = xor i32 %510, %514
  %516 = getelementptr inbounds i32, i32* %0, i64 21
  %517 = load i32, i32* %516, align 4
  %518 = xor i32 %515, %517
  %519 = lshr i32 %446, 24
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %520
  %522 = load i32, i32* %521, align 4
  %523 = lshr i32 %422, 16
  %524 = and i32 %523, 255
  %525 = zext i32 %524 to i64
  %526 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %525
  %527 = load i32, i32* %526, align 4
  %528 = xor i32 %527, %522
  %529 = lshr i32 %398, 8
  %530 = and i32 %529, 255
  %531 = zext i32 %530 to i64
  %532 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %531
  %533 = load i32, i32* %532, align 4
  %534 = xor i32 %528, %533
  %535 = and i32 %470, 255
  %536 = zext i32 %535 to i64
  %537 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %536
  %538 = load i32, i32* %537, align 4
  %539 = xor i32 %534, %538
  %540 = getelementptr inbounds i32, i32* %0, i64 22
  %541 = load i32, i32* %540, align 4
  %542 = xor i32 %539, %541
  %543 = lshr i32 %470, 24
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %544
  %546 = load i32, i32* %545, align 4
  %547 = lshr i32 %446, 16
  %548 = and i32 %547, 255
  %549 = zext i32 %548 to i64
  %550 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %549
  %551 = load i32, i32* %550, align 4
  %552 = xor i32 %551, %546
  %553 = lshr i32 %422, 8
  %554 = and i32 %553, 255
  %555 = zext i32 %554 to i64
  %556 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %555
  %557 = load i32, i32* %556, align 4
  %558 = xor i32 %552, %557
  %559 = and i32 %398, 255
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %560
  %562 = load i32, i32* %561, align 4
  %563 = xor i32 %558, %562
  %564 = getelementptr inbounds i32, i32* %0, i64 23
  %565 = load i32, i32* %564, align 4
  %566 = xor i32 %563, %565
  %567 = lshr i32 %494, 24
  %568 = zext i32 %567 to i64
  %569 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %568
  %570 = load i32, i32* %569, align 4
  %571 = lshr i32 %566, 16
  %572 = and i32 %571, 255
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %573
  %575 = load i32, i32* %574, align 4
  %576 = xor i32 %575, %570
  %577 = lshr i32 %542, 8
  %578 = and i32 %577, 255
  %579 = zext i32 %578 to i64
  %580 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = xor i32 %576, %581
  %583 = and i32 %518, 255
  %584 = zext i32 %583 to i64
  %585 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %584
  %586 = load i32, i32* %585, align 4
  %587 = xor i32 %582, %586
  %588 = getelementptr inbounds i32, i32* %0, i64 24
  %589 = load i32, i32* %588, align 4
  %590 = xor i32 %587, %589
  %591 = lshr i32 %518, 24
  %592 = zext i32 %591 to i64
  %593 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %592
  %594 = load i32, i32* %593, align 4
  %595 = lshr i32 %494, 16
  %596 = and i32 %595, 255
  %597 = zext i32 %596 to i64
  %598 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %597
  %599 = load i32, i32* %598, align 4
  %600 = xor i32 %599, %594
  %601 = lshr i32 %566, 8
  %602 = and i32 %601, 255
  %603 = zext i32 %602 to i64
  %604 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %603
  %605 = load i32, i32* %604, align 4
  %606 = xor i32 %600, %605
  %607 = and i32 %542, 255
  %608 = zext i32 %607 to i64
  %609 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %608
  %610 = load i32, i32* %609, align 4
  %611 = xor i32 %606, %610
  %612 = getelementptr inbounds i32, i32* %0, i64 25
  %613 = load i32, i32* %612, align 4
  %614 = xor i32 %611, %613
  %615 = lshr i32 %542, 24
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %616
  %618 = load i32, i32* %617, align 4
  %619 = lshr i32 %518, 16
  %620 = and i32 %619, 255
  %621 = zext i32 %620 to i64
  %622 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %621
  %623 = load i32, i32* %622, align 4
  %624 = xor i32 %623, %618
  %625 = lshr i32 %494, 8
  %626 = and i32 %625, 255
  %627 = zext i32 %626 to i64
  %628 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = xor i32 %624, %629
  %631 = and i32 %566, 255
  %632 = zext i32 %631 to i64
  %633 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %632
  %634 = load i32, i32* %633, align 4
  %635 = xor i32 %630, %634
  %636 = getelementptr inbounds i32, i32* %0, i64 26
  %637 = load i32, i32* %636, align 4
  %638 = xor i32 %635, %637
  %639 = lshr i32 %566, 24
  %640 = zext i32 %639 to i64
  %641 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %640
  %642 = load i32, i32* %641, align 4
  %643 = lshr i32 %542, 16
  %644 = and i32 %643, 255
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %645
  %647 = load i32, i32* %646, align 4
  %648 = xor i32 %647, %642
  %649 = lshr i32 %518, 8
  %650 = and i32 %649, 255
  %651 = zext i32 %650 to i64
  %652 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %651
  %653 = load i32, i32* %652, align 4
  %654 = xor i32 %648, %653
  %655 = and i32 %494, 255
  %656 = zext i32 %655 to i64
  %657 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %656
  %658 = load i32, i32* %657, align 4
  %659 = xor i32 %654, %658
  %660 = getelementptr inbounds i32, i32* %0, i64 27
  %661 = load i32, i32* %660, align 4
  %662 = xor i32 %659, %661
  %663 = lshr i32 %590, 24
  %664 = zext i32 %663 to i64
  %665 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %664
  %666 = load i32, i32* %665, align 4
  %667 = lshr i32 %662, 16
  %668 = and i32 %667, 255
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %669
  %671 = load i32, i32* %670, align 4
  %672 = xor i32 %671, %666
  %673 = lshr i32 %638, 8
  %674 = and i32 %673, 255
  %675 = zext i32 %674 to i64
  %676 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %675
  %677 = load i32, i32* %676, align 4
  %678 = xor i32 %672, %677
  %679 = and i32 %614, 255
  %680 = zext i32 %679 to i64
  %681 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %680
  %682 = load i32, i32* %681, align 4
  %683 = xor i32 %678, %682
  %684 = getelementptr inbounds i32, i32* %0, i64 28
  %685 = load i32, i32* %684, align 4
  %686 = xor i32 %683, %685
  %687 = lshr i32 %614, 24
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %688
  %690 = load i32, i32* %689, align 4
  %691 = lshr i32 %590, 16
  %692 = and i32 %691, 255
  %693 = zext i32 %692 to i64
  %694 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %693
  %695 = load i32, i32* %694, align 4
  %696 = xor i32 %695, %690
  %697 = lshr i32 %662, 8
  %698 = and i32 %697, 255
  %699 = zext i32 %698 to i64
  %700 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %699
  %701 = load i32, i32* %700, align 4
  %702 = xor i32 %696, %701
  %703 = and i32 %638, 255
  %704 = zext i32 %703 to i64
  %705 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %704
  %706 = load i32, i32* %705, align 4
  %707 = xor i32 %702, %706
  %708 = getelementptr inbounds i32, i32* %0, i64 29
  %709 = load i32, i32* %708, align 4
  %710 = xor i32 %707, %709
  %711 = lshr i32 %638, 24
  %712 = zext i32 %711 to i64
  %713 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %712
  %714 = load i32, i32* %713, align 4
  %715 = lshr i32 %614, 16
  %716 = and i32 %715, 255
  %717 = zext i32 %716 to i64
  %718 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %717
  %719 = load i32, i32* %718, align 4
  %720 = xor i32 %719, %714
  %721 = lshr i32 %590, 8
  %722 = and i32 %721, 255
  %723 = zext i32 %722 to i64
  %724 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %723
  %725 = load i32, i32* %724, align 4
  %726 = xor i32 %720, %725
  %727 = and i32 %662, 255
  %728 = zext i32 %727 to i64
  %729 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %728
  %730 = load i32, i32* %729, align 4
  %731 = xor i32 %726, %730
  %732 = getelementptr inbounds i32, i32* %0, i64 30
  %733 = load i32, i32* %732, align 4
  %734 = xor i32 %731, %733
  %735 = lshr i32 %662, 24
  %736 = zext i32 %735 to i64
  %737 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %736
  %738 = load i32, i32* %737, align 4
  %739 = lshr i32 %638, 16
  %740 = and i32 %739, 255
  %741 = zext i32 %740 to i64
  %742 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %741
  %743 = load i32, i32* %742, align 4
  %744 = xor i32 %743, %738
  %745 = lshr i32 %614, 8
  %746 = and i32 %745, 255
  %747 = zext i32 %746 to i64
  %748 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %747
  %749 = load i32, i32* %748, align 4
  %750 = xor i32 %744, %749
  %751 = and i32 %590, 255
  %752 = zext i32 %751 to i64
  %753 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %752
  %754 = load i32, i32* %753, align 4
  %755 = xor i32 %750, %754
  %756 = getelementptr inbounds i32, i32* %0, i64 31
  %757 = load i32, i32* %756, align 4
  %758 = xor i32 %755, %757
  %759 = lshr i32 %686, 24
  %760 = zext i32 %759 to i64
  %761 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %760
  %762 = load i32, i32* %761, align 4
  %763 = lshr i32 %758, 16
  %764 = and i32 %763, 255
  %765 = zext i32 %764 to i64
  %766 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %765
  %767 = load i32, i32* %766, align 4
  %768 = xor i32 %767, %762
  %769 = lshr i32 %734, 8
  %770 = and i32 %769, 255
  %771 = zext i32 %770 to i64
  %772 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %771
  %773 = load i32, i32* %772, align 4
  %774 = xor i32 %768, %773
  %775 = and i32 %710, 255
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %776
  %778 = load i32, i32* %777, align 4
  %779 = xor i32 %774, %778
  %780 = getelementptr inbounds i32, i32* %0, i64 32
  %781 = load i32, i32* %780, align 4
  %782 = xor i32 %779, %781
  %783 = lshr i32 %710, 24
  %784 = zext i32 %783 to i64
  %785 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %784
  %786 = load i32, i32* %785, align 4
  %787 = lshr i32 %686, 16
  %788 = and i32 %787, 255
  %789 = zext i32 %788 to i64
  %790 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %789
  %791 = load i32, i32* %790, align 4
  %792 = xor i32 %791, %786
  %793 = lshr i32 %758, 8
  %794 = and i32 %793, 255
  %795 = zext i32 %794 to i64
  %796 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %795
  %797 = load i32, i32* %796, align 4
  %798 = xor i32 %792, %797
  %799 = and i32 %734, 255
  %800 = zext i32 %799 to i64
  %801 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %800
  %802 = load i32, i32* %801, align 4
  %803 = xor i32 %798, %802
  %804 = getelementptr inbounds i32, i32* %0, i64 33
  %805 = load i32, i32* %804, align 4
  %806 = xor i32 %803, %805
  %807 = lshr i32 %734, 24
  %808 = zext i32 %807 to i64
  %809 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %808
  %810 = load i32, i32* %809, align 4
  %811 = lshr i32 %710, 16
  %812 = and i32 %811, 255
  %813 = zext i32 %812 to i64
  %814 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %813
  %815 = load i32, i32* %814, align 4
  %816 = xor i32 %815, %810
  %817 = lshr i32 %686, 8
  %818 = and i32 %817, 255
  %819 = zext i32 %818 to i64
  %820 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %819
  %821 = load i32, i32* %820, align 4
  %822 = xor i32 %816, %821
  %823 = and i32 %758, 255
  %824 = zext i32 %823 to i64
  %825 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %824
  %826 = load i32, i32* %825, align 4
  %827 = xor i32 %822, %826
  %828 = getelementptr inbounds i32, i32* %0, i64 34
  %829 = load i32, i32* %828, align 4
  %830 = xor i32 %827, %829
  %831 = lshr i32 %758, 24
  %832 = zext i32 %831 to i64
  %833 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %832
  %834 = load i32, i32* %833, align 4
  %835 = lshr i32 %734, 16
  %836 = and i32 %835, 255
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %837
  %839 = load i32, i32* %838, align 4
  %840 = xor i32 %839, %834
  %841 = lshr i32 %710, 8
  %842 = and i32 %841, 255
  %843 = zext i32 %842 to i64
  %844 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %843
  %845 = load i32, i32* %844, align 4
  %846 = xor i32 %840, %845
  %847 = and i32 %686, 255
  %848 = zext i32 %847 to i64
  %849 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %848
  %850 = load i32, i32* %849, align 4
  %851 = xor i32 %846, %850
  %852 = getelementptr inbounds i32, i32* %0, i64 35
  %853 = load i32, i32* %852, align 4
  %854 = xor i32 %851, %853
  %855 = lshr i32 %782, 24
  %856 = zext i32 %855 to i64
  %857 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %856
  %858 = load i32, i32* %857, align 4
  %859 = lshr i32 %854, 16
  %860 = and i32 %859, 255
  %861 = zext i32 %860 to i64
  %862 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %861
  %863 = load i32, i32* %862, align 4
  %864 = xor i32 %863, %858
  %865 = lshr i32 %830, 8
  %866 = and i32 %865, 255
  %867 = zext i32 %866 to i64
  %868 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %867
  %869 = load i32, i32* %868, align 4
  %870 = xor i32 %864, %869
  %871 = and i32 %806, 255
  %872 = zext i32 %871 to i64
  %873 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %872
  %874 = load i32, i32* %873, align 4
  %875 = xor i32 %870, %874
  %876 = getelementptr inbounds i32, i32* %0, i64 36
  %877 = load i32, i32* %876, align 4
  %878 = xor i32 %875, %877
  %879 = lshr i32 %806, 24
  %880 = zext i32 %879 to i64
  %881 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %880
  %882 = load i32, i32* %881, align 4
  %883 = lshr i32 %782, 16
  %884 = and i32 %883, 255
  %885 = zext i32 %884 to i64
  %886 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %885
  %887 = load i32, i32* %886, align 4
  %888 = xor i32 %887, %882
  %889 = lshr i32 %854, 8
  %890 = and i32 %889, 255
  %891 = zext i32 %890 to i64
  %892 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %891
  %893 = load i32, i32* %892, align 4
  %894 = xor i32 %888, %893
  %895 = and i32 %830, 255
  %896 = zext i32 %895 to i64
  %897 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %896
  %898 = load i32, i32* %897, align 4
  %899 = xor i32 %894, %898
  %900 = getelementptr inbounds i32, i32* %0, i64 37
  %901 = load i32, i32* %900, align 4
  %902 = xor i32 %899, %901
  %903 = lshr i32 %830, 24
  %904 = zext i32 %903 to i64
  %905 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %904
  %906 = load i32, i32* %905, align 4
  %907 = lshr i32 %806, 16
  %908 = and i32 %907, 255
  %909 = zext i32 %908 to i64
  %910 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %909
  %911 = load i32, i32* %910, align 4
  %912 = xor i32 %911, %906
  %913 = lshr i32 %782, 8
  %914 = and i32 %913, 255
  %915 = zext i32 %914 to i64
  %916 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %915
  %917 = load i32, i32* %916, align 4
  %918 = xor i32 %912, %917
  %919 = and i32 %854, 255
  %920 = zext i32 %919 to i64
  %921 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %920
  %922 = load i32, i32* %921, align 4
  %923 = xor i32 %918, %922
  %924 = getelementptr inbounds i32, i32* %0, i64 38
  %925 = load i32, i32* %924, align 4
  %926 = xor i32 %923, %925
  %927 = lshr i32 %854, 24
  %928 = zext i32 %927 to i64
  %929 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %928
  %930 = load i32, i32* %929, align 4
  %931 = lshr i32 %830, 16
  %932 = and i32 %931, 255
  %933 = zext i32 %932 to i64
  %934 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %933
  %935 = load i32, i32* %934, align 4
  %936 = xor i32 %935, %930
  %937 = lshr i32 %806, 8
  %938 = and i32 %937, 255
  %939 = zext i32 %938 to i64
  %940 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %939
  %941 = load i32, i32* %940, align 4
  %942 = xor i32 %936, %941
  %943 = and i32 %782, 255
  %944 = zext i32 %943 to i64
  %945 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %944
  %946 = load i32, i32* %945, align 4
  %947 = xor i32 %942, %946
  %948 = getelementptr inbounds i32, i32* %0, i64 39
  %949 = load i32, i32* %948, align 4
  %950 = xor i32 %947, %949
  %951 = icmp sgt i32 %1, 10
  br i1 %951, label %952, label %1339

952:                                              ; preds = %4
  %953 = lshr i32 %878, 24
  %954 = zext i32 %953 to i64
  %955 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %954
  %956 = load i32, i32* %955, align 4
  %957 = lshr i32 %950, 16
  %958 = and i32 %957, 255
  %959 = zext i32 %958 to i64
  %960 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %959
  %961 = load i32, i32* %960, align 4
  %962 = xor i32 %961, %956
  %963 = lshr i32 %926, 8
  %964 = and i32 %963, 255
  %965 = zext i32 %964 to i64
  %966 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %965
  %967 = load i32, i32* %966, align 4
  %968 = xor i32 %962, %967
  %969 = and i32 %902, 255
  %970 = zext i32 %969 to i64
  %971 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %970
  %972 = load i32, i32* %971, align 4
  %973 = xor i32 %968, %972
  %974 = getelementptr inbounds i32, i32* %0, i64 40
  %975 = load i32, i32* %974, align 4
  %976 = xor i32 %973, %975
  %977 = lshr i32 %902, 24
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %978
  %980 = load i32, i32* %979, align 4
  %981 = lshr i32 %878, 16
  %982 = and i32 %981, 255
  %983 = zext i32 %982 to i64
  %984 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %983
  %985 = load i32, i32* %984, align 4
  %986 = xor i32 %985, %980
  %987 = lshr i32 %950, 8
  %988 = and i32 %987, 255
  %989 = zext i32 %988 to i64
  %990 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %989
  %991 = load i32, i32* %990, align 4
  %992 = xor i32 %986, %991
  %993 = and i32 %926, 255
  %994 = zext i32 %993 to i64
  %995 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %994
  %996 = load i32, i32* %995, align 4
  %997 = xor i32 %992, %996
  %998 = getelementptr inbounds i32, i32* %0, i64 41
  %999 = load i32, i32* %998, align 4
  %1000 = xor i32 %997, %999
  %1001 = lshr i32 %926, 24
  %1002 = zext i32 %1001 to i64
  %1003 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1002
  %1004 = load i32, i32* %1003, align 4
  %1005 = lshr i32 %902, 16
  %1006 = and i32 %1005, 255
  %1007 = zext i32 %1006 to i64
  %1008 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1007
  %1009 = load i32, i32* %1008, align 4
  %1010 = xor i32 %1009, %1004
  %1011 = lshr i32 %878, 8
  %1012 = and i32 %1011, 255
  %1013 = zext i32 %1012 to i64
  %1014 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1013
  %1015 = load i32, i32* %1014, align 4
  %1016 = xor i32 %1010, %1015
  %1017 = and i32 %950, 255
  %1018 = zext i32 %1017 to i64
  %1019 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1018
  %1020 = load i32, i32* %1019, align 4
  %1021 = xor i32 %1016, %1020
  %1022 = getelementptr inbounds i32, i32* %0, i64 42
  %1023 = load i32, i32* %1022, align 4
  %1024 = xor i32 %1021, %1023
  %1025 = lshr i32 %950, 24
  %1026 = zext i32 %1025 to i64
  %1027 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1026
  %1028 = load i32, i32* %1027, align 4
  %1029 = lshr i32 %926, 16
  %1030 = and i32 %1029, 255
  %1031 = zext i32 %1030 to i64
  %1032 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1031
  %1033 = load i32, i32* %1032, align 4
  %1034 = xor i32 %1033, %1028
  %1035 = lshr i32 %902, 8
  %1036 = and i32 %1035, 255
  %1037 = zext i32 %1036 to i64
  %1038 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1037
  %1039 = load i32, i32* %1038, align 4
  %1040 = xor i32 %1034, %1039
  %1041 = and i32 %878, 255
  %1042 = zext i32 %1041 to i64
  %1043 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1042
  %1044 = load i32, i32* %1043, align 4
  %1045 = xor i32 %1040, %1044
  %1046 = getelementptr inbounds i32, i32* %0, i64 43
  %1047 = load i32, i32* %1046, align 4
  %1048 = xor i32 %1045, %1047
  %1049 = lshr i32 %976, 24
  %1050 = zext i32 %1049 to i64
  %1051 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1050
  %1052 = load i32, i32* %1051, align 4
  %1053 = lshr i32 %1048, 16
  %1054 = and i32 %1053, 255
  %1055 = zext i32 %1054 to i64
  %1056 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1055
  %1057 = load i32, i32* %1056, align 4
  %1058 = xor i32 %1057, %1052
  %1059 = lshr i32 %1024, 8
  %1060 = and i32 %1059, 255
  %1061 = zext i32 %1060 to i64
  %1062 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1061
  %1063 = load i32, i32* %1062, align 4
  %1064 = xor i32 %1058, %1063
  %1065 = and i32 %1000, 255
  %1066 = zext i32 %1065 to i64
  %1067 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1066
  %1068 = load i32, i32* %1067, align 4
  %1069 = xor i32 %1064, %1068
  %1070 = getelementptr inbounds i32, i32* %0, i64 44
  %1071 = load i32, i32* %1070, align 4
  %1072 = xor i32 %1069, %1071
  %1073 = lshr i32 %1000, 24
  %1074 = zext i32 %1073 to i64
  %1075 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1074
  %1076 = load i32, i32* %1075, align 4
  %1077 = lshr i32 %976, 16
  %1078 = and i32 %1077, 255
  %1079 = zext i32 %1078 to i64
  %1080 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1079
  %1081 = load i32, i32* %1080, align 4
  %1082 = xor i32 %1081, %1076
  %1083 = lshr i32 %1048, 8
  %1084 = and i32 %1083, 255
  %1085 = zext i32 %1084 to i64
  %1086 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1085
  %1087 = load i32, i32* %1086, align 4
  %1088 = xor i32 %1082, %1087
  %1089 = and i32 %1024, 255
  %1090 = zext i32 %1089 to i64
  %1091 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1090
  %1092 = load i32, i32* %1091, align 4
  %1093 = xor i32 %1088, %1092
  %1094 = getelementptr inbounds i32, i32* %0, i64 45
  %1095 = load i32, i32* %1094, align 4
  %1096 = xor i32 %1093, %1095
  %1097 = lshr i32 %1024, 24
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1098
  %1100 = load i32, i32* %1099, align 4
  %1101 = lshr i32 %1000, 16
  %1102 = and i32 %1101, 255
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1103
  %1105 = load i32, i32* %1104, align 4
  %1106 = xor i32 %1105, %1100
  %1107 = lshr i32 %976, 8
  %1108 = and i32 %1107, 255
  %1109 = zext i32 %1108 to i64
  %1110 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1109
  %1111 = load i32, i32* %1110, align 4
  %1112 = xor i32 %1106, %1111
  %1113 = and i32 %1048, 255
  %1114 = zext i32 %1113 to i64
  %1115 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1114
  %1116 = load i32, i32* %1115, align 4
  %1117 = xor i32 %1112, %1116
  %1118 = getelementptr inbounds i32, i32* %0, i64 46
  %1119 = load i32, i32* %1118, align 4
  %1120 = xor i32 %1117, %1119
  %1121 = lshr i32 %1048, 24
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1122
  %1124 = load i32, i32* %1123, align 4
  %1125 = lshr i32 %1024, 16
  %1126 = and i32 %1125, 255
  %1127 = zext i32 %1126 to i64
  %1128 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1127
  %1129 = load i32, i32* %1128, align 4
  %1130 = xor i32 %1129, %1124
  %1131 = lshr i32 %1000, 8
  %1132 = and i32 %1131, 255
  %1133 = zext i32 %1132 to i64
  %1134 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1133
  %1135 = load i32, i32* %1134, align 4
  %1136 = xor i32 %1130, %1135
  %1137 = and i32 %976, 255
  %1138 = zext i32 %1137 to i64
  %1139 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1138
  %1140 = load i32, i32* %1139, align 4
  %1141 = xor i32 %1136, %1140
  %1142 = getelementptr inbounds i32, i32* %0, i64 47
  %1143 = load i32, i32* %1142, align 4
  %1144 = xor i32 %1141, %1143
  %1145 = icmp sgt i32 %1, 12
  br i1 %1145, label %1146, label %1339

1146:                                             ; preds = %952
  %1147 = lshr i32 %1072, 24
  %1148 = zext i32 %1147 to i64
  %1149 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1148
  %1150 = load i32, i32* %1149, align 4
  %1151 = lshr i32 %1144, 16
  %1152 = and i32 %1151, 255
  %1153 = zext i32 %1152 to i64
  %1154 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1153
  %1155 = load i32, i32* %1154, align 4
  %1156 = xor i32 %1155, %1150
  %1157 = lshr i32 %1120, 8
  %1158 = and i32 %1157, 255
  %1159 = zext i32 %1158 to i64
  %1160 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1159
  %1161 = load i32, i32* %1160, align 4
  %1162 = xor i32 %1156, %1161
  %1163 = and i32 %1096, 255
  %1164 = zext i32 %1163 to i64
  %1165 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1164
  %1166 = load i32, i32* %1165, align 4
  %1167 = xor i32 %1162, %1166
  %1168 = getelementptr inbounds i32, i32* %0, i64 48
  %1169 = load i32, i32* %1168, align 4
  %1170 = xor i32 %1167, %1169
  %1171 = lshr i32 %1096, 24
  %1172 = zext i32 %1171 to i64
  %1173 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1172
  %1174 = load i32, i32* %1173, align 4
  %1175 = lshr i32 %1072, 16
  %1176 = and i32 %1175, 255
  %1177 = zext i32 %1176 to i64
  %1178 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1177
  %1179 = load i32, i32* %1178, align 4
  %1180 = xor i32 %1179, %1174
  %1181 = lshr i32 %1144, 8
  %1182 = and i32 %1181, 255
  %1183 = zext i32 %1182 to i64
  %1184 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1183
  %1185 = load i32, i32* %1184, align 4
  %1186 = xor i32 %1180, %1185
  %1187 = and i32 %1120, 255
  %1188 = zext i32 %1187 to i64
  %1189 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1188
  %1190 = load i32, i32* %1189, align 4
  %1191 = xor i32 %1186, %1190
  %1192 = getelementptr inbounds i32, i32* %0, i64 49
  %1193 = load i32, i32* %1192, align 4
  %1194 = xor i32 %1191, %1193
  %1195 = lshr i32 %1120, 24
  %1196 = zext i32 %1195 to i64
  %1197 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1196
  %1198 = load i32, i32* %1197, align 4
  %1199 = lshr i32 %1096, 16
  %1200 = and i32 %1199, 255
  %1201 = zext i32 %1200 to i64
  %1202 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1201
  %1203 = load i32, i32* %1202, align 4
  %1204 = xor i32 %1203, %1198
  %1205 = lshr i32 %1072, 8
  %1206 = and i32 %1205, 255
  %1207 = zext i32 %1206 to i64
  %1208 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1207
  %1209 = load i32, i32* %1208, align 4
  %1210 = xor i32 %1204, %1209
  %1211 = and i32 %1144, 255
  %1212 = zext i32 %1211 to i64
  %1213 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1212
  %1214 = load i32, i32* %1213, align 4
  %1215 = xor i32 %1210, %1214
  %1216 = getelementptr inbounds i32, i32* %0, i64 50
  %1217 = load i32, i32* %1216, align 4
  %1218 = xor i32 %1215, %1217
  %1219 = lshr i32 %1144, 24
  %1220 = zext i32 %1219 to i64
  %1221 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1220
  %1222 = load i32, i32* %1221, align 4
  %1223 = lshr i32 %1120, 16
  %1224 = and i32 %1223, 255
  %1225 = zext i32 %1224 to i64
  %1226 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1225
  %1227 = load i32, i32* %1226, align 4
  %1228 = xor i32 %1227, %1222
  %1229 = lshr i32 %1096, 8
  %1230 = and i32 %1229, 255
  %1231 = zext i32 %1230 to i64
  %1232 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1231
  %1233 = load i32, i32* %1232, align 4
  %1234 = xor i32 %1228, %1233
  %1235 = and i32 %1072, 255
  %1236 = zext i32 %1235 to i64
  %1237 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1236
  %1238 = load i32, i32* %1237, align 4
  %1239 = xor i32 %1234, %1238
  %1240 = getelementptr inbounds i32, i32* %0, i64 51
  %1241 = load i32, i32* %1240, align 4
  %1242 = xor i32 %1239, %1241
  %1243 = lshr i32 %1170, 24
  %1244 = zext i32 %1243 to i64
  %1245 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1244
  %1246 = load i32, i32* %1245, align 4
  %1247 = lshr i32 %1242, 16
  %1248 = and i32 %1247, 255
  %1249 = zext i32 %1248 to i64
  %1250 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1249
  %1251 = load i32, i32* %1250, align 4
  %1252 = xor i32 %1251, %1246
  %1253 = lshr i32 %1218, 8
  %1254 = and i32 %1253, 255
  %1255 = zext i32 %1254 to i64
  %1256 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1255
  %1257 = load i32, i32* %1256, align 4
  %1258 = xor i32 %1252, %1257
  %1259 = and i32 %1194, 255
  %1260 = zext i32 %1259 to i64
  %1261 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1260
  %1262 = load i32, i32* %1261, align 4
  %1263 = xor i32 %1258, %1262
  %1264 = getelementptr inbounds i32, i32* %0, i64 52
  %1265 = load i32, i32* %1264, align 4
  %1266 = xor i32 %1263, %1265
  %1267 = lshr i32 %1194, 24
  %1268 = zext i32 %1267 to i64
  %1269 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1268
  %1270 = load i32, i32* %1269, align 4
  %1271 = lshr i32 %1170, 16
  %1272 = and i32 %1271, 255
  %1273 = zext i32 %1272 to i64
  %1274 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1273
  %1275 = load i32, i32* %1274, align 4
  %1276 = xor i32 %1275, %1270
  %1277 = lshr i32 %1242, 8
  %1278 = and i32 %1277, 255
  %1279 = zext i32 %1278 to i64
  %1280 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1279
  %1281 = load i32, i32* %1280, align 4
  %1282 = xor i32 %1276, %1281
  %1283 = and i32 %1218, 255
  %1284 = zext i32 %1283 to i64
  %1285 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1284
  %1286 = load i32, i32* %1285, align 4
  %1287 = xor i32 %1282, %1286
  %1288 = getelementptr inbounds i32, i32* %0, i64 53
  %1289 = load i32, i32* %1288, align 4
  %1290 = xor i32 %1287, %1289
  %1291 = lshr i32 %1218, 24
  %1292 = zext i32 %1291 to i64
  %1293 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1292
  %1294 = load i32, i32* %1293, align 4
  %1295 = lshr i32 %1194, 16
  %1296 = and i32 %1295, 255
  %1297 = zext i32 %1296 to i64
  %1298 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1297
  %1299 = load i32, i32* %1298, align 4
  %1300 = xor i32 %1299, %1294
  %1301 = lshr i32 %1170, 8
  %1302 = and i32 %1301, 255
  %1303 = zext i32 %1302 to i64
  %1304 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1303
  %1305 = load i32, i32* %1304, align 4
  %1306 = xor i32 %1300, %1305
  %1307 = and i32 %1242, 255
  %1308 = zext i32 %1307 to i64
  %1309 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1308
  %1310 = load i32, i32* %1309, align 4
  %1311 = xor i32 %1306, %1310
  %1312 = getelementptr inbounds i32, i32* %0, i64 54
  %1313 = load i32, i32* %1312, align 4
  %1314 = xor i32 %1311, %1313
  %1315 = lshr i32 %1242, 24
  %1316 = zext i32 %1315 to i64
  %1317 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1316
  %1318 = load i32, i32* %1317, align 4
  %1319 = lshr i32 %1218, 16
  %1320 = and i32 %1319, 255
  %1321 = zext i32 %1320 to i64
  %1322 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1321
  %1323 = load i32, i32* %1322, align 4
  %1324 = xor i32 %1323, %1318
  %1325 = lshr i32 %1194, 8
  %1326 = and i32 %1325, 255
  %1327 = zext i32 %1326 to i64
  %1328 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1327
  %1329 = load i32, i32* %1328, align 4
  %1330 = xor i32 %1324, %1329
  %1331 = and i32 %1170, 255
  %1332 = zext i32 %1331 to i64
  %1333 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1332
  %1334 = load i32, i32* %1333, align 4
  %1335 = xor i32 %1330, %1334
  %1336 = getelementptr inbounds i32, i32* %0, i64 55
  %1337 = load i32, i32* %1336, align 4
  %1338 = xor i32 %1335, %1337
  br label %1339

1339:                                             ; preds = %1146, %952, %4
  %.16 = phi i32 [ %878, %4 ], [ %1266, %1146 ], [ %1072, %952 ]
  %.14 = phi i32 [ %902, %4 ], [ %1290, %1146 ], [ %1096, %952 ]
  %.12 = phi i32 [ %926, %4 ], [ %1314, %1146 ], [ %1120, %952 ]
  %.1 = phi i32 [ %950, %4 ], [ %1338, %1146 ], [ %1144, %952 ]
  %1340 = shl i32 %1, 2
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds i32, i32* %0, i64 %1341
  %1343 = lshr i32 %.16, 24
  %1344 = zext i32 %1343 to i64
  %1345 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1344
  %1346 = load i32, i32* %1345, align 4
  %1347 = and i32 %1346, -16777216
  %1348 = lshr i32 %.1, 16
  %1349 = and i32 %1348, 255
  %1350 = zext i32 %1349 to i64
  %1351 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1350
  %1352 = load i32, i32* %1351, align 4
  %1353 = and i32 %1352, 16711680
  %1354 = or i32 %1353, %1347
  %1355 = lshr i32 %.12, 8
  %1356 = and i32 %1355, 255
  %1357 = zext i32 %1356 to i64
  %1358 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1357
  %1359 = load i32, i32* %1358, align 4
  %1360 = and i32 %1359, 65280
  %1361 = or i32 %1354, %1360
  %1362 = and i32 %.14, 255
  %1363 = zext i32 %1362 to i64
  %1364 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1363
  %1365 = load i32, i32* %1364, align 4
  %1366 = and i32 %1365, 255
  %1367 = or i32 %1361, %1366
  %1368 = load i32, i32* %1342, align 4
  %1369 = xor i32 %1367, %1368
  %1370 = lshr i32 %1369, 24
  %1371 = trunc i32 %1370 to i8
  store i8 %1371, i8* %3, align 1
  %1372 = lshr i32 %1369, 16
  %1373 = trunc i32 %1372 to i8
  %1374 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %1373, i8* %1374, align 1
  %1375 = lshr i32 %1369, 8
  %1376 = trunc i32 %1375 to i8
  %1377 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %1376, i8* %1377, align 1
  %1378 = trunc i32 %1369 to i8
  %1379 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %1378, i8* %1379, align 1
  %1380 = lshr i32 %.14, 24
  %1381 = zext i32 %1380 to i64
  %1382 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1381
  %1383 = load i32, i32* %1382, align 4
  %1384 = and i32 %1383, -16777216
  %1385 = lshr i32 %.16, 16
  %1386 = and i32 %1385, 255
  %1387 = zext i32 %1386 to i64
  %1388 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1387
  %1389 = load i32, i32* %1388, align 4
  %1390 = and i32 %1389, 16711680
  %1391 = or i32 %1390, %1384
  %1392 = lshr i32 %.1, 8
  %1393 = and i32 %1392, 255
  %1394 = zext i32 %1393 to i64
  %1395 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1394
  %1396 = load i32, i32* %1395, align 4
  %1397 = and i32 %1396, 65280
  %1398 = or i32 %1391, %1397
  %1399 = and i32 %.12, 255
  %1400 = zext i32 %1399 to i64
  %1401 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1400
  %1402 = load i32, i32* %1401, align 4
  %1403 = and i32 %1402, 255
  %1404 = or i32 %1398, %1403
  %1405 = getelementptr inbounds i32, i32* %1342, i64 1
  %1406 = load i32, i32* %1405, align 4
  %1407 = xor i32 %1404, %1406
  %1408 = lshr i32 %1407, 24
  %1409 = trunc i32 %1408 to i8
  %1410 = getelementptr inbounds i8, i8* %3, i64 4
  store i8 %1409, i8* %1410, align 1
  %1411 = lshr i32 %1407, 16
  %1412 = trunc i32 %1411 to i8
  %1413 = getelementptr inbounds i8, i8* %3, i64 5
  store i8 %1412, i8* %1413, align 1
  %1414 = lshr i32 %1407, 8
  %1415 = trunc i32 %1414 to i8
  %1416 = getelementptr inbounds i8, i8* %3, i64 6
  store i8 %1415, i8* %1416, align 1
  %1417 = trunc i32 %1407 to i8
  %1418 = getelementptr inbounds i8, i8* %3, i64 7
  store i8 %1417, i8* %1418, align 1
  %1419 = lshr i32 %.12, 24
  %1420 = zext i32 %1419 to i64
  %1421 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1420
  %1422 = load i32, i32* %1421, align 4
  %1423 = and i32 %1422, -16777216
  %1424 = lshr i32 %.14, 16
  %1425 = and i32 %1424, 255
  %1426 = zext i32 %1425 to i64
  %1427 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1426
  %1428 = load i32, i32* %1427, align 4
  %1429 = and i32 %1428, 16711680
  %1430 = or i32 %1429, %1423
  %1431 = lshr i32 %.16, 8
  %1432 = and i32 %1431, 255
  %1433 = zext i32 %1432 to i64
  %1434 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1433
  %1435 = load i32, i32* %1434, align 4
  %1436 = and i32 %1435, 65280
  %1437 = or i32 %1430, %1436
  %1438 = and i32 %.1, 255
  %1439 = zext i32 %1438 to i64
  %1440 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1439
  %1441 = load i32, i32* %1440, align 4
  %1442 = and i32 %1441, 255
  %1443 = or i32 %1437, %1442
  %1444 = getelementptr inbounds i32, i32* %1342, i64 2
  %1445 = load i32, i32* %1444, align 4
  %1446 = xor i32 %1443, %1445
  %1447 = lshr i32 %1446, 24
  %1448 = trunc i32 %1447 to i8
  %1449 = getelementptr inbounds i8, i8* %3, i64 8
  store i8 %1448, i8* %1449, align 1
  %1450 = lshr i32 %1446, 16
  %1451 = trunc i32 %1450 to i8
  %1452 = getelementptr inbounds i8, i8* %3, i64 9
  store i8 %1451, i8* %1452, align 1
  %1453 = lshr i32 %1446, 8
  %1454 = trunc i32 %1453 to i8
  %1455 = getelementptr inbounds i8, i8* %3, i64 10
  store i8 %1454, i8* %1455, align 1
  %1456 = trunc i32 %1446 to i8
  %1457 = getelementptr inbounds i8, i8* %3, i64 11
  store i8 %1456, i8* %1457, align 1
  %1458 = lshr i32 %.1, 24
  %1459 = zext i32 %1458 to i64
  %1460 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1459
  %1461 = load i32, i32* %1460, align 4
  %1462 = and i32 %1461, -16777216
  %1463 = lshr i32 %.12, 16
  %1464 = and i32 %1463, 255
  %1465 = zext i32 %1464 to i64
  %1466 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1465
  %1467 = load i32, i32* %1466, align 4
  %1468 = and i32 %1467, 16711680
  %1469 = or i32 %1468, %1462
  %1470 = lshr i32 %.14, 8
  %1471 = and i32 %1470, 255
  %1472 = zext i32 %1471 to i64
  %1473 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1472
  %1474 = load i32, i32* %1473, align 4
  %1475 = and i32 %1474, 65280
  %1476 = or i32 %1469, %1475
  %1477 = and i32 %.16, 255
  %1478 = zext i32 %1477 to i64
  %1479 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1478
  %1480 = load i32, i32* %1479, align 4
  %1481 = and i32 %1480, 255
  %1482 = or i32 %1476, %1481
  %1483 = getelementptr inbounds i32, i32* %1342, i64 3
  %1484 = load i32, i32* %1483, align 4
  %1485 = xor i32 %1482, %1484
  %1486 = lshr i32 %1485, 24
  %1487 = trunc i32 %1486 to i8
  %1488 = getelementptr inbounds i8, i8* %3, i64 12
  store i8 %1487, i8* %1488, align 1
  %1489 = lshr i32 %1485, 16
  %1490 = trunc i32 %1489 to i8
  %1491 = getelementptr inbounds i8, i8* %3, i64 13
  store i8 %1490, i8* %1491, align 1
  %1492 = lshr i32 %1485, 8
  %1493 = trunc i32 %1492 to i8
  %1494 = getelementptr inbounds i8, i8* %3, i64 14
  store i8 %1493, i8* %1494, align 1
  %1495 = trunc i32 %1485 to i8
  %1496 = getelementptr inbounds i8, i8* %3, i64 15
  store i8 %1495, i8* %1496, align 1
  ret void
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @randombytes(i8* nocapture %0, i64 %1) local_unnamed_addr #0 {
  %3 = icmp sgt i64 %1, -1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.randombytes, i64 0, i64 0)) #7
  unreachable

5:                                                ; preds = %2
  %6 = load i32, i32* @randombytes.fd, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %5
  %8 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0) #8
  store i32 %8, i32* @randombytes.fd, align 4
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %.lr.ph7, label %.loopexit

.lr.ph7:                                          ; preds = %.preheader, %85
  %10 = tail call i32 @sleep(i32 1) #8
  %11 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0) #8
  store i32 %11, i32* @randombytes.fd, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %61, label %.loopexit

.loopexit:                                        ; preds = %85, %81, %77, %73, %69, %65, %61, %.lr.ph7, %.preheader, %5
  %13 = phi i32 [ %8, %.preheader ], [ %6, %5 ], [ %87, %85 ], [ %83, %81 ], [ %79, %77 ], [ %75, %73 ], [ %71, %69 ], [ %67, %65 ], [ %63, %61 ], [ %11, %.lr.ph7 ]
  %14 = icmp sgt i64 %1, 0
  br i1 %14, label %.lr.ph, label %.outer._crit_edge

.lr.ph:                                           ; preds = %.loopexit, %.outer..lr.ph_crit_edge
  %15 = phi i32 [ %.pre, %.outer..lr.ph_crit_edge ], [ %13, %.loopexit ]
  %.0.ph6 = phi i8* [ %21, %.outer..lr.ph_crit_edge ], [ %0, %.loopexit ]
  %.01.ph5 = phi i64 [ %19, %.outer..lr.ph_crit_edge ], [ %1, %.loopexit ]
  %16 = icmp slt i64 %.01.ph5, 1048576
  %.01. = select i1 %16, i64 %.01.ph5, i64 1048576
  %17 = tail call i64 @read(i32 %15, i8* %.0.ph6, i64 %.01.) #8
  %18 = icmp slt i64 %17, 1
  br i1 %18, label %.lr.ph12, label %.outer

.outer:                                           ; preds = %56, %.lr.ph12, %26, %31, %36, %41, %46, %51, %.lr.ph
  %.lcssa = phi i64 [ %17, %.lr.ph ], [ %54, %51 ], [ %49, %46 ], [ %44, %41 ], [ %39, %36 ], [ %34, %31 ], [ %29, %26 ], [ %24, %.lr.ph12 ], [ %59, %56 ]
  %19 = sub nsw i64 %.01.ph5, %.lcssa
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %.outer..lr.ph_crit_edge, label %.outer._crit_edge

.outer..lr.ph_crit_edge:                          ; preds = %.outer
  %21 = getelementptr inbounds i8, i8* %.0.ph6, i64 %.lcssa
  %.pre = load i32, i32* @randombytes.fd, align 4
  br label %.lr.ph

.outer._crit_edge:                                ; preds = %.outer, %.loopexit
  ret void

.lr.ph12:                                         ; preds = %.lr.ph, %56
  %22 = tail call i32 @sleep(i32 1) #8
  %23 = load i32, i32* @randombytes.fd, align 4
  %24 = tail call i64 @read(i32 %23, i8* %.0.ph6, i64 %.01.) #8
  %25 = icmp slt i64 %24, 1
  br i1 %25, label %26, label %.outer

26:                                               ; preds = %.lr.ph12
  %27 = tail call i32 @sleep(i32 1) #8
  %28 = load i32, i32* @randombytes.fd, align 4
  %29 = tail call i64 @read(i32 %28, i8* %.0.ph6, i64 %.01.) #8
  %30 = icmp slt i64 %29, 1
  br i1 %30, label %31, label %.outer

31:                                               ; preds = %26
  %32 = tail call i32 @sleep(i32 1) #8
  %33 = load i32, i32* @randombytes.fd, align 4
  %34 = tail call i64 @read(i32 %33, i8* %.0.ph6, i64 %.01.) #8
  %35 = icmp slt i64 %34, 1
  br i1 %35, label %36, label %.outer

36:                                               ; preds = %31
  %37 = tail call i32 @sleep(i32 1) #8
  %38 = load i32, i32* @randombytes.fd, align 4
  %39 = tail call i64 @read(i32 %38, i8* %.0.ph6, i64 %.01.) #8
  %40 = icmp slt i64 %39, 1
  br i1 %40, label %41, label %.outer

41:                                               ; preds = %36
  %42 = tail call i32 @sleep(i32 1) #8
  %43 = load i32, i32* @randombytes.fd, align 4
  %44 = tail call i64 @read(i32 %43, i8* %.0.ph6, i64 %.01.) #8
  %45 = icmp slt i64 %44, 1
  br i1 %45, label %46, label %.outer

46:                                               ; preds = %41
  %47 = tail call i32 @sleep(i32 1) #8
  %48 = load i32, i32* @randombytes.fd, align 4
  %49 = tail call i64 @read(i32 %48, i8* %.0.ph6, i64 %.01.) #8
  %50 = icmp slt i64 %49, 1
  br i1 %50, label %51, label %.outer

51:                                               ; preds = %46
  %52 = tail call i32 @sleep(i32 1) #8
  %53 = load i32, i32* @randombytes.fd, align 4
  %54 = tail call i64 @read(i32 %53, i8* %.0.ph6, i64 %.01.) #8
  %55 = icmp slt i64 %54, 1
  br i1 %55, label %56, label %.outer

56:                                               ; preds = %51
  %57 = tail call i32 @sleep(i32 1) #8
  %58 = load i32, i32* @randombytes.fd, align 4
  %59 = tail call i64 @read(i32 %58, i8* %.0.ph6, i64 %.01.) #8
  %60 = icmp slt i64 %59, 1
  br i1 %60, label %.lr.ph12, label %.outer

61:                                               ; preds = %.lr.ph7
  %62 = tail call i32 @sleep(i32 1) #8
  %63 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0) #8
  store i32 %63, i32* @randombytes.fd, align 4
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %65, label %.loopexit

65:                                               ; preds = %61
  %66 = tail call i32 @sleep(i32 1) #8
  %67 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0) #8
  store i32 %67, i32* @randombytes.fd, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %.loopexit

69:                                               ; preds = %65
  %70 = tail call i32 @sleep(i32 1) #8
  %71 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0) #8
  store i32 %71, i32* @randombytes.fd, align 4
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %.loopexit

73:                                               ; preds = %69
  %74 = tail call i32 @sleep(i32 1) #8
  %75 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0) #8
  store i32 %75, i32* @randombytes.fd, align 4
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %.loopexit

77:                                               ; preds = %73
  %78 = tail call i32 @sleep(i32 1) #8
  %79 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0) #8
  store i32 %79, i32* @randombytes.fd, align 4
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %81, label %.loopexit

81:                                               ; preds = %77
  %82 = tail call i32 @sleep(i32 1) #8
  %83 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0) #8
  store i32 %83, i32* @randombytes.fd, align 4
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %85, label %.loopexit

85:                                               ; preds = %81
  %86 = tail call i32 @sleep(i32 1) #8
  %87 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0) #8
  store i32 %87, i32* @randombytes.fd, align 4
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %.lr.ph7, label %.loopexit, !llvm.loop !4
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nofree
declare i32 @open(i8* nocapture readonly, i32, ...) local_unnamed_addr #5

declare i32 @sleep(i32) local_unnamed_addr #6

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local zeroext i8 @randombit() local_unnamed_addr #0 {
  %1 = alloca i8, align 1
  store i8 0, i8* %1, align 1
  call void @randombytes(i8* nonnull %1, i64 1)
  %2 = load i8, i8* %1, align 1
  %3 = and i8 %2, 1
  ret i8 %3
}

attributes #0 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree noinline norecurse nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }

!llvm.ident = !{!0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
