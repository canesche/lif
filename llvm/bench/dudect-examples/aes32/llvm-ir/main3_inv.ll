; ModuleID = 'dudect-examples/aes32/llvm-ir/main3.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.input_data = private unnamed_addr constant [16 x i8] c".\B1\C9!#S\97\FA\E2\19\9Ee\99\F6d\C5", align 16
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@chunk_size = dso_local constant i64 16, align 8
@number_measurements = dso_local constant i64 1, align 8
@rk = internal global [44 x i32] zeroinitializer, align 16
@Te4 = internal global [256 x i32] [i32 1667457891, i32 2088533116, i32 2004318071, i32 2071690107, i32 -218959118, i32 1802201963, i32 1869573999, i32 -976894523, i32 808464432, i32 16843009, i32 1734829927, i32 724249387, i32 -16843010, i32 -673720361, i32 -1414812757, i32 1987475062, i32 -892679478, i32 -2105376126, i32 -909522487, i32 2105376125, i32 -84215046, i32 1499027801, i32 1195853639, i32 -252645136, i32 -1381126739, i32 -724249388, i32 -1566399838, i32 -1347440721, i32 -1667457892, i32 -1532713820, i32 1920103026, i32 -1061109568, i32 -1212696649, i32 -33686019, i32 -1819044973, i32 640034342, i32 909522486, i32 1061109567, i32 -134744073, i32 -858993460, i32 875836468, i32 -1515870811, i32 -437918235, i32 -235802127, i32 1903260017, i32 -656877352, i32 825307441, i32 353703189, i32 67372036, i32 -943208505, i32 589505315, i32 -1010580541, i32 404232216, i32 -1768515946, i32 84215045, i32 -1701143910, i32 117901063, i32 303174162, i32 -2139062144, i32 -488447262, i32 -336860181, i32 656877351, i32 -1296911694, i32 1970632053, i32 151587081, i32 -2088533117, i32 741092396, i32 437918234, i32 454761243, i32 1852730990, i32 1515870810, i32 -1600085856, i32 1381126738, i32 993737531, i32 -690563370, i32 -1280068685, i32 690563369, i32 -471604253, i32 791621423, i32 -2071690108, i32 1397969747, i32 -774778415, i32 0, i32 -303174163, i32 538976288, i32 -50529028, i32 -1313754703, i32 1532713819, i32 1785358954, i32 -875836469, i32 -1094795586, i32 960051513, i32 1246382666, i32 1280068684, i32 1482184792, i32 -808464433, i32 -791621424, i32 -269488145, i32 -1431655766, i32 -67372037, i32 1128481603, i32 1296911693, i32 858993459, i32 -2054847099, i32 1162167621, i32 -101058055, i32 33686018, i32 2139062143, i32 1347440720, i32 1010580540, i32 -1616928865, i32 -1465341784, i32 1364283729, i32 -1549556829, i32 1077952576, i32 -1886417009, i32 -1835887982, i32 -1650614883, i32 943208504, i32 -168430091, i32 -1128481604, i32 -1229539658, i32 -623191334, i32 555819297, i32 269488144, i32 -1, i32 -202116109, i32 -757935406, i32 -842150451, i32 202116108, i32 320017171, i32 -320017172, i32 1600085855, i32 -1751672937, i32 1145324612, i32 387389207, i32 -993737532, i32 -1482184793, i32 2122219134, i32 1027423549, i32 1684300900, i32 1566399837, i32 421075225, i32 1936946035, i32 1616928864, i32 -2122219135, i32 1330597711, i32 -589505316, i32 572662306, i32 707406378, i32 -1869574000, i32 -2004318072, i32 1179010630, i32 -286331154, i32 -1195853640, i32 336860180, i32 -555819298, i32 1583242846, i32 185273099, i32 -606348325, i32 -522133280, i32 842150450, i32 976894522, i32 168430090, i32 1229539657, i32 101058054, i32 606348324, i32 1549556828, i32 -1027423550, i32 -741092397, i32 -1397969748, i32 1650614882, i32 -1852730991, i32 -1785358955, i32 -454761244, i32 2038004089, i32 -404232217, i32 -926365496, i32 926365495, i32 1835887981, i32 -1920103027, i32 -707406379, i32 1313754702, i32 -1448498775, i32 1819044972, i32 1448498774, i32 -185273100, i32 -353703190, i32 1701143909, i32 2054847098, i32 -1364283730, i32 134744072, i32 -1162167622, i32 2021161080, i32 623191333, i32 774778414, i32 471604252, i32 -1499027802, i32 -1263225676, i32 -960051514, i32 -387389208, i32 -572662307, i32 1953789044, i32 522133279, i32 1263225675, i32 -1111638595, i32 -1953789045, i32 -1970632054, i32 1886417008, i32 1044266558, i32 -1246382667, i32 1717986918, i32 1212696648, i32 50529027, i32 -151587082, i32 235802126, i32 1633771873, i32 892679477, i32 1465341783, i32 -1179010631, i32 -2038004090, i32 -1044266559, i32 488447261, i32 -1633771874, i32 -505290271, i32 -117901064, i32 -1734829928, i32 286331153, i32 1768515945, i32 -640034343, i32 -1903260018, i32 -1802201964, i32 -1684300901, i32 505290270, i32 -2021161081, i32 -370546199, i32 -825307442, i32 1431655765, i32 673720360, i32 -538976289, i32 -1936946036, i32 -1583242847, i32 -1987475063, i32 218959117, i32 -1077952577, i32 -421075226, i32 1111638594, i32 1751672936, i32 1094795585, i32 -1717986919, i32 757935405, i32 252645135, i32 -1330597712, i32 1414812756, i32 -1145324613, i32 370546198], align 16
@Td0 = internal constant [256 x i32] [i32 1374988112, i32 2118214995, i32 437757123, i32 975658646, i32 1001089995, i32 530400753, i32 -1392879445, i32 1273168787, i32 540080725, i32 -1384747530, i32 -1999866223, i32 -184398811, i32 1340463100, i32 -987051049, i32 641025152, i32 -1251826801, i32 -558802359, i32 632953703, i32 1172967064, i32 1576976609, i32 -1020300030, i32 -2125664238, i32 -1924753501, i32 1809054150, i32 59727847, i32 361929877, i32 -1083344149, i32 -1789765158, i32 -725712083, i32 1484005843, i32 1239443753, i32 -1899378620, i32 1975683434, i32 -191989384, i32 -1722270101, i32 666464733, i32 -1092530250, i32 -259478249, i32 -920605594, i32 2110667444, i32 1675577880, i32 -451268222, i32 -1756286112, i32 1649639237, i32 -1318815776, i32 -1150570876, i32 -25059300, i32 -116905068, i32 1883793496, i32 -1891238631, i32 -1797362553, i32 1383856311, i32 -1418472669, i32 1917518562, i32 -484470953, i32 1716890410, i32 -1293211641, i32 800440835, i32 -2033878118, i32 -751368027, i32 807962610, i32 599762354, i32 33778362, i32 -317291940, i32 -1966138325, i32 -1485196142, i32 -217582864, i32 1315562145, i32 1708848333, i32 101039829, i32 -785096161, i32 -995688822, i32 875451293, i32 -1561111136, i32 92987698, i32 -1527321739, i32 193195065, i32 1080094634, i32 1584504582, i32 -1116860335, i32 1042385657, i32 -1763899843, i32 -583137874, i32 1306967366, i32 -1856729675, i32 1908694277, i32 67556463, i32 1615861247, i32 429456164, i32 -692196969, i32 -1992277044, i32 1742315127, i32 -1326955843, i32 126454664, i32 -417768648, i32 2043211483, i32 -1585706425, i32 2084704233, i32 -125559095, i32 0, i32 159417987, i32 841739592, i32 504459436, i32 1817866830, i32 -49348613, i32 260388950, i32 1034867998, i32 908933415, i32 168810852, i32 1750902305, i32 -1688513327, i32 607530554, i32 202008497, i32 -1822955761, i32 -1259432238, i32 463180190, i32 -2134850225, i32 1641816226, i32 1517767529, i32 470948374, i32 -493635062, i32 -1063245083, i32 1008918595, i32 303765277, i32 235474187, i32 -225720403, i32 766945465, i32 337553864, i32 1475418501, i32 -1351284916, i32 -291906117, i32 -1551933187, i32 -150919521, i32 1551037884, i32 1147550661, i32 1543208500, i32 -1958532746, i32 -886847780, i32 -1225917336, i32 -1192955549, i32 -684598070, i32 1113818384, i32 328671808, i32 -2067394272, i32 -2058738563, i32 -759480840, i32 -1359400431, i32 -953573011, i32 496906059, i32 -592301837, i32 226906860, i32 2009195472, i32 733156972, i32 -1452230247, i32 294930682, i32 1206477858, i32 -1459843900, i32 -1594867942, i32 1451044056, i32 573804783, i32 -2025238841, i32 -650587711, i32 -1932877058, i32 -1730933962, i32 -1493859889, i32 -1518674392, i32 -625504730, i32 1068351396, i32 742039012, i32 1350078989, i32 1784663195, i32 1417561698, i32 -158526526, i32 -1864845080, i32 775550814, i32 -2101104651, i32 -1621262146, i32 1775276924, i32 1876241833, i32 -819653965, i32 -928212677, i32 270040487, i32 -392404114, i32 -616842373, i32 -853116919, i32 1851332852, i32 -325404927, i32 -2091935064, i32 -426414491, i32 -1426069890, i32 566021896, i32 -283776794, i32 -1159226407, i32 1248802510, i32 -358676012, i32 699432150, i32 832877231, i32 708780849, i32 -962227152, i32 899835584, i32 1951317047, i32 -58537306, i32 -527380304, i32 866637845, i32 -251357110, i32 1106041591, i32 2144161806, i32 395441711, i32 1984812685, i32 1139781709, i32 -861254316, i32 -459930401, i32 -1630423581, i32 1282050075, i32 -1054072904, i32 1181045119, i32 -1654724092, i32 25965917, i32 -91786125, i32 -83148498, i32 -1285087910, i32 -1831087534, i32 -384805325, i32 1842759443, i32 -1697160820, i32 933301370, i32 1509430414, i32 -351060855, i32 -827774994, i32 -1218328267, i32 -518199827, i32 2051518780, i32 -1663901863, i32 1441952575, i32 404016761, i32 1942435775, i32 1408749034, i32 1610459739, i32 -549621996, i32 2017778566, i32 -894438527, i32 -1184316354, i32 941896748, i32 -1029488545, i32 371049330, i32 -1126030068, i32 675039627, i32 -15887039, i32 967311729, i32 135050206, i32 -659233636, i32 1683407248, i32 2076935265, i32 -718096784, i32 1215061108, i32 -793225406], align 16
@Td1 = internal constant [256 x i32] [i32 1347548327, i32 1400783205, i32 -1021700188, i32 -1774573730, i32 -885281941, i32 -249586363, i32 -1414727080, i32 -1823743229, i32 1428173050, i32 -156404115, i32 -1853305738, i32 636813900, i32 -61872681, i32 -674944309, i32 -2144979644, i32 -1883938141, i32 1239331162, i32 1730525723, i32 -1740248562, i32 -513933632, i32 46346101, i32 310463728, i32 -1551022441, i32 -966011911, i32 -419197089, i32 -1793748324, i32 -339776134, i32 -627748263, i32 768917123, i32 -749177823, i32 692707433, i32 1150208456, i32 1786102409, i32 2029293177, i32 1805211710, i32 -584599183, i32 -1229004465, i32 401639597, i32 1724457132, i32 -1266823622, i32 409198410, i32 -2098914767, i32 1620529459, i32 1164071807, i32 -525245321, i32 -2068091986, i32 486441376, i32 -1795618773, i32 1483753576, i32 428819965, i32 -2020286868, i32 -1219331080, i32 598438867, i32 -495826174, i32 1474502543, i32 711349675, i32 129166120, i32 53458370, i32 -1702443653, i32 -1512884472, i32 -231724921, i32 -1306280027, i32 -1174273174, i32 1559041666, i32 730517276, i32 -1834518092, i32 -252508174, i32 -1588696606, i32 -848962828, i32 -721025602, i32 533804130, i32 -1966823682, i32 -1657524653, i32 -1599933611, i32 839224033, i32 1973745387, i32 957055980, i32 -1438621457, i32 106852767, i32 1371368976, i32 -113368694, i32 1033297158, i32 -1361232379, i32 1179510461, i32 -1248766835, i32 91341917, i32 1862534868, i32 -10465259, i32 605657339, i32 -1747534359, i32 -863420349, i32 2003294622, i32 -1112479678, i32 -2012771957, i32 954669403, i32 -612775698, i32 1201765386, i32 -377732593, i32 -906460130, i32 0, i32 -2096529274, i32 1211247597, i32 -1407315600, i32 1315723890, i32 -67301633, i32 1443857720, i32 507358933, i32 657861945, i32 1678381017, i32 560487590, i32 -778347692, i32 975451694, i32 -1324610969, i32 261314535, i32 -759894378, i32 -1642357871, i32 1333838021, i32 -1570644960, i32 1767536459, i32 370938394, i32 182621114, i32 -440360918, i32 1128014560, i32 487725847, i32 185469197, i32 -1376613433, i32 -1188186456, i32 -938205527, i32 -2057834215, i32 1286567175, i32 -1141990947, i32 -39616672, i32 -1611202266, i32 -1134791947, i32 -985373125, i32 878443390, i32 1988838185, i32 -590666810, i32 1756818940, i32 1673061617, i32 -891866660, i32 272786309, i32 1075025698, i32 545572369, i32 2105887268, i32 -120407235, i32 296679730, i32 1841768865, i32 1260232239, i32 -203640272, i32 -334657966, i32 -797457949, i32 1814803222, i32 -1716948807, i32 -99511224, i32 575138148, i32 -995558260, i32 446754879, i32 -665420500, i32 -282971248, i32 -947435186, i32 -1042728751, i32 -24327518, i32 915985419, i32 -811141759, i32 681933534, i32 651868046, i32 -1539330625, i32 -466863459, i32 223377554, i32 -1687527476, i32 1649704518, i32 -1024029421, i32 -393160520, i32 1580087799, i32 -175979601, i32 -1096852096, i32 2087309459, i32 -1452288723, i32 -1278270190, i32 1003007129, i32 -1492117379, i32 1860738147, i32 2077965243, i32 164439672, i32 -194094824, i32 32283319, i32 -1467789414, i32 1709610350, i32 2125135846, i32 136428751, i32 -420538904, i32 -642062437, i32 -833982666, i32 -722821367, i32 -701910916, i32 -1355701070, i32 824852259, i32 818324884, i32 -1070226842, i32 930369212, i32 -1493400886, i32 -1327460144, i32 355706840, i32 1257309336, i32 -146674470, i32 243256656, i32 790073846, i32 -1921626666, i32 1296297904, i32 1422699085, i32 -538667516, i32 -476130891, i32 457992840, i32 -1195299809, i32 2135319889, i32 77422314, i32 1560382517, i32 1945798516, i32 788204353, i32 1521706781, i32 1385356242, i32 870912086, i32 325965383, i32 -1936009375, i32 2050466060, i32 -1906706412, i32 -1981082820, i32 -288446169, i32 901210569, i32 -304014107, i32 1014646705, i32 1503449823, i32 1062597235, i32 2031621326, i32 -1082931401, i32 -363595827, i32 1533017514, i32 350174575, i32 -2038938405, i32 -2117423117, i32 1052338372, i32 741876788, i32 1606591296, i32 1914052035, i32 213705253, i32 -1960297399, i32 1107234197, i32 1899603969, i32 -569897805, i32 -1663519516, i32 -1872472383, i32 1635502980, i32 1893020342, i32 1950903388, i32 1120974935], align 16
@Td2 = internal constant [256 x i32] [i32 -1487908364, i32 1699970625, i32 -1530717673, i32 1586903591, i32 1808481195, i32 1173430173, i32 1487645946, i32 59984867, i32 -95084496, i32 1844882806, i32 1989249228, i32 1277555970, i32 -671330331, i32 -875051734, i32 1149249077, i32 -1550863006, i32 1514790577, i32 459744698, i32 244860394, i32 -1058972162, i32 1963115311, i32 -267222708, i32 -1750889146, i32 -104436781, i32 1608975247, i32 -1667951214, i32 2062270317, i32 1507497298, i32 -2094148418, i32 567498868, i32 1764313568, i32 -935031095, i32 -1989511742, i32 2037970062, i32 1047239000, i32 1910319033, i32 1337376481, i32 -1390940024, i32 -1402549984, i32 984907214, i32 1243112415, i32 830661914, i32 861968209, i32 2135253587, i32 2011214180, i32 -1367032981, i32 -1608712575, i32 731183368, i32 1750626376, i32 -48656571, i32 1820824798, i32 -122203525, i32 -752637069, i32 48394827, i32 -1890065633, i32 -1423284651, i32 671593195, i32 -1039978571, i32 2073724613, i32 145085239, i32 -2014171096, i32 -1515052097, i32 1790575107, i32 -2107839210, i32 472615631, i32 -1265457287, i32 -219090169, i32 -492745111, i32 -187865638, i32 -1093335547, i32 1646252340, i32 -24460122, i32 1402811438, i32 1436590835, i32 -516815478, i32 -344611594, i32 -331805821, i32 -274055072, i32 -1626972559, i32 273792366, i32 -1963377119, i32 104699613, i32 95345982, i32 -1119466010, i32 -1917480620, i32 1560637892, i32 -730921978, i32 369057872, i32 -81520232, i32 -375925059, i32 1137477952, i32 -1636341799, i32 1119727848, i32 -1954019447, i32 1530455833, i32 -287606328, i32 172466556, i32 266959938, i32 516552836, i32 0, i32 -2038232704, i32 -314035669, i32 1890328081, i32 1917742170, i32 -262898, i32 945164165, i32 -719438418, i32 958871085, i32 -647755249, i32 -1507760036, i32 1423022939, i32 775562294, i32 1739656202, i32 -418409641, i32 -1764576018, i32 -1851909221, i32 -984645440, i32 547512796, i32 1265195639, i32 437656594, i32 -1173691757, i32 719700128, i32 -532464606, i32 387781147, i32 218828297, i32 -944901493, i32 -1464259146, i32 -1446505442, i32 428169201, i32 122466165, i32 -574886247, i32 1627235199, i32 648017665, i32 -172204942, i32 1002783846, i32 2117360635, i32 695634755, i32 -958608605, i32 -60246291, i32 -245122844, i32 -590686415, i32 -2062531997, i32 574624663, i32 287343814, i32 612205898, i32 1039717051, i32 840019705, i32 -1586641111, i32 793451934, i32 821288114, i32 1391201670, i32 -472877119, i32 376187827, i32 -1181111952, i32 1224348052, i32 1679968233, i32 -1933268740, i32 1058709744, i32 752375421, i32 -1863376333, i32 1321699145, i32 -775825096, i32 -1560376118, i32 188127444, i32 -2117097739, i32 -567761542, i32 -1910056265, i32 -1079754835, i32 -1645990854, i32 -1844621192, i32 -862229921, i32 1180849278, i32 331544205, i32 -1192718120, i32 -144822727, i32 -1342864701, i32 -2134991011, i32 -1820562992, i32 766078933, i32 313773861, i32 -1724135252, i32 2108100632, i32 1668212892, i32 -1149510853, i32 2013908262, i32 418672217, i32 -1224610662, i32 -1700232369, i32 1852171925, i32 -427906305, i32 -821550660, i32 -387518699, i32 -1680229657, i32 919489135, i32 164948639, i32 2094410160, i32 -1297141340, i32 590424639, i32 -1808742747, i32 1723872674, i32 -1137216434, i32 -895026046, i32 -793714544, i32 -669699161, i32 -1739919100, i32 -621329940, i32 1343127501, i32 -164685935, i32 -695372211, i32 -1337113617, i32 1297403050, i32 81781910, i32 -1243373871, i32 -2011476886, i32 532201772, i32 1367295589, i32 -368796322, i32 895287692, i32 1953757831, i32 1093597963, i32 492483431, i32 -766340389, i32 1446242576, i32 1192455638, i32 1636604631, i32 209336225, i32 344873464, i32 1015671571, i32 669961897, i32 -919226527, i32 -437395172, i32 -1321436601, i32 -547775278, i32 1933530610, i32 -830924780, i32 935293895, i32 -840281097, i32 -1436852227, i32 1863638845, i32 -611944380, i32 -209597777, i32 -1002522264, i32 875313188, i32 1080017571, i32 -1015933411, i32 621591778, i32 1233856572, i32 -1790836979, i32 24197544, i32 -1277294580, i32 -459482956, i32 -1047501738, i32 -2073986101, i32 -1234119374, i32 1551124588, i32 1463996600], align 16
@Td3 = internal constant [256 x i32] [i32 -190361519, i32 1097159550, i32 396673818, i32 660510266, i32 -1418998981, i32 -1656360673, i32 -94852180, i32 -486304949, i32 821712160, i32 1986918061, i32 -864644728, i32 38544885, i32 -438830001, i32 718002117, i32 893681702, i32 1654886325, i32 -1319482914, i32 -1172609243, i32 -368142267, i32 -20913827, i32 796197571, i32 1290801793, i32 1184342925, i32 -738605461, i32 -1889540349, i32 -1835231979, i32 1836772287, i32 1381620373, i32 -1098699308, i32 1948373848, i32 -529979063, i32 -909622130, i32 -1031181707, i32 -1904641804, i32 1480485785, i32 -1183720153, i32 -514869570, i32 -2001922064, i32 548169417, i32 -835013507, i32 -548792221, i32 439452389, i32 1362321559, i32 1400849762, i32 1685577905, i32 1806599355, i32 -2120213250, i32 137073913, i32 1214797936, i32 1174215055, i32 -563312748, i32 2079897426, i32 1943217067, i32 1258480242, i32 529487843, i32 1437280870, i32 -349698126, i32 -1245576401, i32 -981755258, i32 923313619, i32 679998000, i32 -1079659997, i32 57326082, i32 377642221, i32 -820237430, i32 2041877159, i32 133361907, i32 1776460110, i32 -621490843, i32 96392454, i32 878845905, i32 -1493267772, i32 777231668, i32 -212492126, i32 -1964953083, i32 -152341084, i32 -2081670901, i32 1626319424, i32 1906247262, i32 1846563261, i32 562755902, i32 -586793578, i32 1040559837, i32 -423803315, i32 1418573201, i32 -1000536719, i32 114585348, i32 1343618912, i32 -1728371687, i32 -1108764714, i32 1078185097, i32 -643926169, i32 -398279248, i32 -1987344377, i32 425408743, i32 -923870343, i32 2081048481, i32 1108339068, i32 -2078357000, i32 0, i32 -2138668279, i32 736970802, i32 292596766, i32 1517440620, i32 251657213, i32 -2059905521, i32 -1361764803, i32 758720310, i32 265905162, i32 1554391400, i32 1532285339, i32 908999204, i32 174567692, i32 1474760595, i32 -292105548, i32 -1684955621, i32 -1060810880, i32 -601841055, i32 2001430874, i32 303699484, i32 -1816524062, i32 -1607801408, i32 585122620, i32 454499602, i32 151849742, i32 -1949848078, i32 -1230456531, i32 514443284, i32 -249985705, i32 1963412655, i32 -1713521682, i32 2137062819, i32 19308535, i32 1928707164, i32 1715193156, i32 -75615141, i32 1126790795, i32 600235211, i32 -302225226, i32 -453942344, i32 836553431, i32 1669664834, i32 -1759363053, i32 -971956092, i32 1243905413, i32 -1153566510, i32 -114159186, i32 698445255, i32 -1641067747, i32 -1305414692, i32 -2041385971, i32 -1042034569, i32 -1290376149, i32 1891211689, i32 -1807156719, i32 -379313593, i32 -57883480, i32 -264299872, i32 2100090966, i32 865136418, i32 1229899655, i32 953270745, i32 -895287668, i32 -737462632, i32 -176042074, i32 2061379749, i32 -1215420710, i32 -1379949505, i32 983426092, i32 2022837584, i32 1607244650, i32 2118541908, i32 -1928084746, i32 -658970480, i32 972512814, i32 -1011878526, i32 1568718495, i32 -795640727, i32 -718427793, i32 621982671, i32 -1399243832, i32 410887952, i32 -1671205144, i32 1002142683, i32 645401037, i32 1494807662, i32 -1699282452, i32 1335535747, i32 -1787927066, i32 -1671510, i32 -1127282655, i32 367585007, i32 -409216582, i32 1865862730, i32 -1626745622, i32 -1333995991, i32 -1531793615, i32 1059270954, i32 -1517014842, i32 -1570324427, i32 1320957812, i32 -2100648196, i32 -1865371424, i32 -1479011021, i32 77089521, i32 -321194175, i32 -850391425, i32 -1846137065, i32 1305906550, i32 -273658557, i32 -1437772596, i32 -1778065436, i32 -776608866, i32 1787304780, i32 740276417, i32 1699839814, i32 1592394909, i32 -1942659839, i32 -2022411270, i32 188821243, i32 1729977011, i32 -606973294, i32 274084841, i32 -699985043, i32 -681472870, i32 -1593017801, i32 -132870567, i32 322734571, i32 -1457000754, i32 1640576439, i32 484830689, i32 1202797690, i32 -757114468, i32 -227328171, i32 349075736, i32 -952647821, i32 -137500077, i32 -39167137, i32 1030690015, i32 1155237496, i32 -1342996022, i32 1757691577, i32 607398968, i32 -1556062270, i32 499347990, i32 -500888388, i32 1011452712, i32 227885567, i32 -1476300487, i32 213114376, i32 -1260086056, i32 1455525988, i32 -880516741, i32 850817237, i32 1817998408, i32 -1202240816], align 16
@Te0 = internal global [256 x i32] [i32 -966564955, i32 -126059388, i32 -294160487, i32 -159679603, i32 -855539, i32 -697603139, i32 -563122255, i32 -1849309868, i32 1613770832, i32 33620227, i32 -832084055, i32 1445669757, i32 -402719207, i32 -1244145822, i32 1303096294, i32 -327780710, i32 -1882535355, i32 528646813, i32 -1983264448, i32 -92439161, i32 -268764651, i32 -1302767125, i32 -1907931191, i32 -68095989, i32 1101901292, i32 -1277897625, i32 1604494077, i32 1169141738, i32 597466303, i32 1403299063, i32 -462261610, i32 -1681866661, i32 1974974402, i32 -503448292, i32 1033081774, i32 1277568618, i32 1815492186, i32 2118074177, i32 -168298750, i32 -2083730353, i32 1748251740, i32 1369810420, i32 -773462732, i32 -101584632, i32 -495881837, i32 -1411852173, i32 1647391059, i32 706024767, i32 134480908, i32 -1782069422, i32 1176707941, i32 -1648114850, i32 806885416, i32 932615841, i32 168101135, i32 798661301, i32 235341577, i32 605164086, i32 461406363, i32 -538779075, i32 -840176858, i32 1311188841, i32 2142417613, i32 -361400929, i32 302582043, i32 495158174, i32 1479289972, i32 874125870, i32 907746093, i32 -596742478, i32 -1269146898, i32 1537253627, i32 -1538108682, i32 1983593293, i32 -1210657183, i32 2108928974, i32 1378429307, i32 -572267714, i32 1580150641, i32 327451799, i32 -1504488459, i32 -1177431704, i32 0, i32 -1041371860, i32 1075847264, i32 -469959649, i32 2041688520, i32 -1235526675, i32 -731223362, i32 -1916023994, i32 1740553945, i32 1916352843, i32 -1807070498, i32 -1739830060, i32 -1336387352, i32 -2049978550, i32 -1143943061, i32 -974131414, i32 1336584933, i32 -302253290, i32 -2042412091, i32 -1706209833, i32 1714631509, i32 293963156, i32 -1975171633, i32 -369493744, i32 67240454, i32 -25198719, i32 -1605349136, i32 2017213508, i32 631218106, i32 1269344483, i32 -1571728909, i32 1571005438, i32 -2143272768, i32 93294474, i32 1066570413, i32 563977660, i32 1882732616, i32 -235539196, i32 1673313503, i32 2008463041, i32 -1344611723, i32 1109467491, i32 537923632, i32 -436207846, i32 -34344178, i32 -1076702611, i32 -2117218996, i32 403442708, i32 638784309, i32 -1007883217, i32 -1101045791, i32 899127202, i32 -2008791860, i32 773265209, i32 -1815821225, i32 1437050866, i32 -58818942, i32 2050833735, i32 -932944724, i32 -1168286233, i32 840505643, i32 -428641387, i32 -1067425632, i32 427917720, i32 -1638969391, i32 -1545806721, i32 1143087718, i32 1412049534, i32 999329963, i32 193497219, i32 -1941551414, i32 -940642775, i32 1807268051, i32 672404540, i32 -1478566279, i32 -1134666014, i32 369822493, i32 -1378100362, i32 -606019525, i32 1681011286, i32 1949973070, i32 336202270, i32 -1840690725, i32 201721354, i32 1210328172, i32 -1201906460, i32 -1614626211, i32 -1110191250, i32 1135389935, i32 -1000185178, i32 965841320, i32 831886756, i32 -739974089, i32 -226920053, i32 -706222286, i32 -1949775805, i32 104281945, i32 -630362697, i32 26054028, i32 -1311386268, i32 -1672589614, i32 1235855840, i32 -663982924, i32 -1403627782, i32 -202050553, i32 -806688219, i32 -899324497, i32 -193299826, i32 1202630377, i32 268961816, i32 1874508501, i32 -260540280, i32 1243948399, i32 1546530418, i32 941366308, i32 1470539505, i32 1941222599, i32 -1748580783, i32 -873928669, i32 -1579295364, i32 -395021156, i32 1042226977, i32 -1773450275, i32 1639824860, i32 227249030, i32 260737669, i32 -529502064, i32 2084453954, i32 1907733956, i32 -865704278, i32 -1874310952, i32 100860677, i32 -134810111, i32 470683154, i32 -1033805405, i32 1781871967, i32 -1370007559, i32 1773779408, i32 394692241, i32 -1715355304, i32 974986535, i32 664706745, i32 -639508168, i32 -336005101, i32 731420851, i32 571543859, i32 -764843589, i32 -1445340816, i32 126783113, i32 865375399, i32 765172662, i32 1008606754, i32 361203602, i32 -907417312, i32 -2016489911, i32 -1437248001, i32 1344809080, i32 -1512054918, i32 59542671, i32 1503764984, i32 160008576, i32 437062935, i32 1707065306, i32 -672733647, i32 -2076032314, i32 -798463816, i32 -2109652541, i32 697932208, i32 1512910199, i32 504303377, i32 2075177163, i32 -1470868228, i32 1841019862, i32 739644986], align 16
@Te1 = internal global [256 x i32] [i32 -1513725085, i32 -2064089988, i32 -1712425097, i32 -1913226373, i32 234877682, i32 -1110021269, i32 -1310822545, i32 1418839493, i32 1348481072, i32 50462977, i32 -1446090905, i32 2102799147, i32 434634494, i32 1656084439, i32 -431117397, i32 -1695779210, i32 1167051466, i32 -1658879358, i32 1082771913, i32 -2013627011, i32 368048890, i32 -340633255, i32 -913422521, i32 201060592, i32 -331240019, i32 1739838676, i32 -44064094, i32 -364531793, i32 -1088185188, i32 -145513308, i32 -1763413390, i32 1536934080, i32 -1032472649, i32 484572669, i32 -1371696237, i32 1783375398, i32 1517041206, i32 1098792767, i32 49674231, i32 1334037708, i32 1550332980, i32 -195975771, i32 886171109, i32 150598129, i32 -1813876367, i32 1940642008, i32 1398944049, i32 1059722517, i32 201851908, i32 1385547719, i32 1699095331, i32 1587397571, i32 674240536, i32 -1590192490, i32 252314885, i32 -1255171430, i32 151914247, i32 908333586, i32 -1692696448, i32 1038082786, i32 651029483, i32 1766729511, i32 -847269198, i32 -1612024459, i32 454166793, i32 -1642232957, i32 1951935532, i32 775166490, i32 758520603, i32 -1294176658, i32 -290170278, i32 -77881184, i32 -157003182, i32 1299594043, i32 1639438038, i32 -830622797, i32 2068982057, i32 1054729187, i32 1901997871, i32 -1760328572, i32 -173649069, i32 1757008337, i32 0, i32 750906861, i32 1614815264, i32 535035132, i32 -931548751, i32 -306816165, i32 -1093375382, i32 1183697867, i32 -647512386, i32 1265776953, i32 -560706998, i32 -728216500, i32 -391096232, i32 1250283471, i32 1807470800, i32 717615087, i32 -447763798, i32 384695291, i32 -981056701, i32 -677753523, i32 1432761139, i32 -1810791035, i32 -813021883, i32 283769337, i32 100925954, i32 -2114027649, i32 -257929136, i32 1148730428, i32 -1171939425, i32 -481580888, i32 -207466159, i32 -27417693, i32 -1065336768, i32 -1979347057, i32 -1388342638, i32 -1138647651, i32 1215313976, i32 82966005, i32 -547111748, i32 -1049119050, i32 1974459098, i32 1665278241, i32 807407632, i32 451280895, i32 251524083, i32 1841287890, i32 1283575245, i32 337120268, i32 891687699, i32 801369324, i32 -507617441, i32 -1573546089, i32 -863484860, i32 959321879, i32 1469301956, i32 -229267545, i32 -2097381762, i32 1199193405, i32 -1396153244, i32 -407216803, i32 724703513, i32 -1780059277, i32 -1598005152, i32 -1743158911, i32 -778154161, i32 2141445340, i32 1715741218, i32 2119445034, i32 -1422159728, i32 -2096396152, i32 -896776634, i32 700968686, i32 -747915080, i32 1009259540, i32 2041044702, i32 -490971554, i32 487983883, i32 1991105499, i32 1004265696, i32 1449407026, i32 1316239930, i32 504629770, i32 -611169975, i32 168560134, i32 1816667172, i32 -457679780, i32 1570751170, i32 1857934291, i32 -280777556, i32 -1497079198, i32 -1472622191, i32 -1540254315, i32 936633572, i32 -1947043463, i32 852879335, i32 1133234376, i32 1500395319, i32 -1210421907, i32 -1946055283, i32 1689376213, i32 -761508274, i32 -532043351, i32 -1260884884, i32 -89369002, i32 133428468, i32 634383082, i32 -1345690267, i32 -1896580486, i32 -381178194, i32 403703816, i32 -714097990, i32 -1997506440, i32 1867130149, i32 1918643758, i32 607656988, i32 -245913946, i32 -948718412, i32 1368901318, i32 600565992, i32 2090982877, i32 -1662487436, i32 557719327, i32 -577352885, i32 -597574211, i32 -2045932661, i32 -2062579062, i32 -1864339344, i32 1115438654, i32 -999180875, i32 -1429445018, i32 -661632952, i32 84280067, i32 33027830, i32 303828494, i32 -1547542175, i32 1600795957, i32 -106014889, i32 -798377543, i32 -1860729210, i32 1486471617, i32 658119965, i32 -1188585826, i32 953803233, i32 334231800, i32 -1288988520, i32 857870609, i32 -1143838359, i32 1890179545, i32 -1995993458, i32 -1489791852, i32 -1238525029, i32 574365214, i32 -1844082809, i32 550103529, i32 1233637070, i32 -5614251, i32 2018519080, i32 2057691103, i32 -1895592820, i32 -128343647, i32 -2146858615, i32 387583245, i32 -630865985, i32 836232934, i32 -964410814, i32 -1194301336, i32 -1014873791, i32 -1339450983, i32 2002398509, i32 287182607, i32 -881086288, i32 -56077228, i32 -697451589, i32 975967766], align 16
@Te2 = internal global [256 x i32] [i32 1671808611, i32 2089089148, i32 2006576759, i32 2072901243, i32 -233963534, i32 1807603307, i32 1873927791, i32 -984313403, i32 810573872, i32 16974337, i32 1739181671, i32 729634347, i32 -31856642, i32 -681396777, i32 -1410970197, i32 1989864566, i32 -901410870, i32 -2103631998, i32 -918517303, i32 2106063485, i32 -99225606, i32 1508618841, i32 1204391495, i32 -267650064, i32 -1377025619, i32 -731401260, i32 -1560453214, i32 -1343601233, i32 -1665195108, i32 -1527295068, i32 1922491506, i32 -1067738176, i32 -1211992649, i32 -48438787, i32 -1817297517, i32 644500518, i32 911895606, i32 1061256767, i32 -150800905, i32 -867204148, i32 878471220, i32 -1510714971, i32 -449523227, i32 -251069967, i32 1905517169, i32 -663508008, i32 827548209, i32 356461077, i32 67897348, i32 -950889017, i32 593839651, i32 -1017209405, i32 405286936, i32 -1767819370, i32 84871685, i32 -1699401830, i32 118033927, i32 305538066, i32 -2137318528, i32 -499261470, i32 -349778453, i32 661212711, i32 -1295155278, i32 1973414517, i32 152769033, i32 -2086789757, i32 745822252, i32 439235610, i32 455947803, i32 1857215598, i32 1525593178, i32 -1594139744, i32 1391895634, i32 994932283, i32 -698239018, i32 -1278313037, i32 695947817, i32 -482419229, i32 795958831, i32 -2070473852, i32 1408607827, i32 -781665839, i32 0, i32 -315833875, i32 543178784, i32 -65018884, i32 -1312261711, i32 1542305371, i32 1790891114, i32 -884568629, i32 -1093048386, i32 961245753, i32 1256100938, i32 1289001036, i32 1491644504, i32 -817199665, i32 -798245936, i32 -282409489, i32 -1427812438, i32 -82383365, i32 1137018435, i32 1305975373, i32 861234739, i32 -2053893755, i32 1171229253, i32 -116332039, i32 33948674, i32 2139225727, i32 1357946960, i32 1011120188, i32 -1615190625, i32 -1461498968, i32 1374921297, i32 -1543610973, i32 1086357568, i32 -1886780017, i32 -1834139758, i32 -1648615011, i32 944271416, i32 -184225291, i32 -1126210628, i32 -1228834890, i32 -629821478, i32 560153121, i32 271589392, i32 -15014401, i32 -217121293, i32 -764559406, i32 -850624051, i32 202643468, i32 322250259, i32 -332413972, i32 1608629855, i32 -1750977129, i32 1154254916, i32 389623319, i32 -1000893500, i32 -1477290585, i32 2122513534, i32 1028094525, i32 1689045092, i32 1575467613, i32 422261273, i32 1939203699, i32 1621147744, i32 -2120738431, i32 1339137615, i32 -595614756, i32 577127458, i32 712922154, i32 -1867826288, i32 -2004677752, i32 1187679302, i32 -299251730, i32 -1194103880, i32 339486740, i32 -562452514, i32 1591917662, i32 186455563, i32 -612979237, i32 -532948000, i32 844522546, i32 978220090, i32 169743370, i32 1239126601, i32 101321734, i32 611076132, i32 1558493276, i32 -1034051646, i32 -747717165, i32 -1393605716, i32 1655096418, i32 -1851246191, i32 -1784401515, i32 -466103324, i32 2039214713, i32 -416098841, i32 -935097400, i32 928607799, i32 1840765549, i32 -1920204403, i32 -714821163, i32 1322425422, i32 -1444918871, i32 1823791212, i32 1459268694, i32 -200805388, i32 -366620694, i32 1706019429, i32 2056189050, i32 -1360443474, i32 135794696, i32 -1160417350, i32 2022240376, i32 628050469, i32 779246638, i32 472135708, i32 -1494132826, i32 -1261997132, i32 -967731258, i32 -400307224, i32 -579034659, i32 1956440180, i32 522272287, i32 1272813131, i32 -1109630531, i32 -1954148981, i32 -1970991222, i32 1888542832, i32 1044544574, i32 -1245417035, i32 1722469478, i32 1222152264, i32 50660867, i32 -167643146, i32 236067854, i32 1638122081, i32 895445557, i32 1475980887, i32 -1177523783, i32 -2037311610, i32 -1051158079, i32 489110045, i32 -1632032866, i32 -516367903, i32 -132912136, i32 -1733088360, i32 288563729, i32 1773916777, i32 -646927911, i32 -1903622258, i32 -1800981612, i32 -1682559589, i32 505560094, i32 -2020469369, i32 -383727127, i32 -834041906, i32 1442818645, i32 678973480, i32 -545610273, i32 -1936784500, i32 -1577559647, i32 -1988097655, i32 219617805, i32 -1076206145, i32 -432941082, i32 1120306242, i32 1756942440, i32 1103331905, i32 -1716508263, i32 762796589, i32 252780047, i32 -1328841808, i32 1425844308, i32 -1143575109, i32 372911126], align 16
@Te3 = internal global [256 x i32] [i32 1667474886, i32 2088535288, i32 2004326894, i32 2071694838, i32 -219017729, i32 1802223062, i32 1869591006, i32 -976923503, i32 808472672, i32 16843522, i32 1734846926, i32 724270422, i32 -16901657, i32 -673750347, i32 -1414797747, i32 1987484396, i32 -892713585, i32 -2105369313, i32 -909557623, i32 2105378810, i32 -84273681, i32 1499065266, i32 1195886990, i32 -252703749, i32 -1381110719, i32 -724277325, i32 -1566376609, i32 -1347425723, i32 -1667449053, i32 -1532692653, i32 1920112356, i32 -1061135461, i32 -1212693899, i32 -33743647, i32 -1819038147, i32 640051788, i32 909531756, i32 1061110142, i32 -134806795, i32 -859025533, i32 875846760, i32 -1515850671, i32 -437963567, i32 -235861767, i32 1903268834, i32 -656903253, i32 825316194, i32 353713962, i32 67374088, i32 -943238507, i32 589522246, i32 -1010606435, i32 404236336, i32 -1768513225, i32 84217610, i32 -1701137105, i32 117901582, i32 303183396, i32 -2139055333, i32 -488489505, i32 -336910643, i32 656894286, i32 -1296904833, i32 1970642922, i32 151591698, i32 -2088526307, i32 741110872, i32 437923380, i32 454765878, i32 1852748508, i32 1515908788, i32 -1600062629, i32 1381168804, i32 993742198, i32 -690593353, i32 -1280061827, i32 690584402, i32 -471646499, i32 791638366, i32 -2071685357, i32 1398011302, i32 -774805319, i32 0, i32 -303223615, i32 538992704, i32 -50585629, i32 -1313748871, i32 1532751286, i32 1785380564, i32 -875870579, i32 -1094788761, i32 960056178, i32 1246420628, i32 1280103576, i32 1482221744, i32 -808498555, i32 -791647301, i32 -269538619, i32 -1431640753, i32 -67430675, i32 1128514950, i32 1296947098, i32 859002214, i32 -2054843375, i32 1162203018, i32 -101117719, i32 33687044, i32 2139062782, i32 1347481760, i32 1010582648, i32 -1616922075, i32 -1465326773, i32 1364325282, i32 -1549533603, i32 1077985408, i32 -1886418427, i32 -1835881153, i32 -1650607071, i32 943212656, i32 -168491791, i32 -1128472733, i32 -1229536905, i32 -623217233, i32 555836226, i32 269496352, i32 -58651, i32 -202174723, i32 -757961281, i32 -842183551, i32 202118168, i32 320025894, i32 -320065597, i32 1600119230, i32 -1751670219, i32 1145359496, i32 387397934, i32 -993765485, i32 -1482165675, i32 2122220284, i32 1027426170, i32 1684319432, i32 1566435258, i32 421079858, i32 1936954854, i32 1616945344, i32 -2122213351, i32 1330631070, i32 -589529181, i32 572679748, i32 707427924, i32 -1869567173, i32 -2004319477, i32 1179044492, i32 -286381625, i32 -1195846805, i32 336870440, i32 -555845209, i32 1583276732, i32 185277718, i32 -606374227, i32 -522175525, i32 842159716, i32 976899700, i32 168435220, i32 1229577106, i32 101059084, i32 606366792, i32 1549591736, i32 -1027449441, i32 -741118275, i32 -1397952701, i32 1650632388, i32 -1852725191, i32 -1785355215, i32 -454805549, i32 2038008818, i32 -404278571, i32 -926399605, i32 926374254, i32 1835907034, i32 -1920103423, i32 -707435343, i32 1313788572, i32 -1448484791, i32 1819063512, i32 1448540844, i32 -185333773, i32 -353753649, i32 1701162954, i32 2054852340, i32 -1364268729, i32 134748176, i32 -1162160785, i32 2021165296, i32 623210314, i32 774795868, i32 471606328, i32 -1499008681, i32 -1263220877, i32 -960081513, i32 -387439669, i32 -572687199, i32 1953799400, i32 522133822, i32 1263263126, i32 -1111630751, i32 -1953790451, i32 -1970633457, i32 1886425312, i32 1044267644, i32 -1246378895, i32 1718004428, i32 1212733584, i32 50529542, i32 -151649801, i32 235803164, i32 1633788866, i32 892690282, i32 1465383342, i32 -1179004823, i32 -2038001385, i32 -1044293479, i32 488449850, i32 -1633765081, i32 -505333543, i32 -117959701, i32 -1734823125, i32 286339874, i32 1768537042, i32 -640061271, i32 -1903261433, i32 -1802197197, i32 -1684294099, i32 505291324, i32 -2021158379, i32 -370597687, i32 -825341561, i32 1431699370, i32 673740880, i32 -539002203, i32 -1936945405, i32 -1583220647, i32 -1987477495, i32 218961690, i32 -1077945755, i32 -421121577, i32 1111672452, i32 1751693520, i32 1094828930, i32 -1717981143, i32 757954394, i32 252645662, i32 -1330590853, i32 1414855848, i32 -1145317779, i32 370555436], align 16
@Td4 = internal constant [256 x i32] [i32 1381126738, i32 151587081, i32 1785358954, i32 -707406379, i32 808464432, i32 909522486, i32 -1515870811, i32 943208504, i32 -1077952577, i32 1077952576, i32 -1549556829, i32 -1633771874, i32 -2122219135, i32 -202116109, i32 -673720361, i32 -67372037, i32 2088533116, i32 -471604253, i32 960051513, i32 -2105376126, i32 -1684300901, i32 791621423, i32 -1, i32 -2021161081, i32 875836468, i32 -1903260018, i32 1128481603, i32 1145324612, i32 -993737532, i32 -555819298, i32 -370546199, i32 -875836469, i32 1414812756, i32 2071690107, i32 -1802201964, i32 842150450, i32 -1499027802, i32 -1027423550, i32 589505315, i32 1027423549, i32 -286331154, i32 1280068684, i32 -1785358955, i32 185273099, i32 1111638594, i32 -84215046, i32 -1010580541, i32 1313754702, i32 134744072, i32 774778414, i32 -1583242847, i32 1717986918, i32 673720360, i32 -640034343, i32 606348324, i32 -1296911694, i32 1987475062, i32 1532713819, i32 -1566399838, i32 1229539657, i32 1835887981, i32 -1953789045, i32 -774778415, i32 623191333, i32 1920103026, i32 -117901064, i32 -151587082, i32 1684300900, i32 -2038004090, i32 1751672936, i32 -1734829928, i32 370546198, i32 -724249388, i32 -1532713820, i32 1549556828, i32 -858993460, i32 1566399837, i32 1701143909, i32 -1229539658, i32 -1835887982, i32 1819044972, i32 1886417008, i32 1212696648, i32 1347440720, i32 -33686019, i32 -303174163, i32 -1179010631, i32 -623191334, i32 1583242846, i32 353703189, i32 1179010630, i32 1465341783, i32 -1482184793, i32 -1920103027, i32 -1650614883, i32 -2071690108, i32 -1869574000, i32 -656877352, i32 -1414812757, i32 0, i32 -1936946036, i32 -1128481604, i32 -741092397, i32 168430090, i32 -134744073, i32 -454761244, i32 1482184792, i32 84215045, i32 -1195853640, i32 -1280068685, i32 1162167621, i32 101058054, i32 -791621424, i32 741092396, i32 505290270, i32 -1886417009, i32 -892679478, i32 1061109567, i32 252645135, i32 33686018, i32 -1044266559, i32 -1347440721, i32 -1111638595, i32 50529027, i32 16843009, i32 320017171, i32 -1970632054, i32 1802201963, i32 976894522, i32 -1852730991, i32 286331153, i32 1094795585, i32 1330597711, i32 1734829927, i32 -589505316, i32 -353703190, i32 -1751672937, i32 -218959118, i32 -808464433, i32 -825307442, i32 -252645136, i32 -1263225676, i32 -421075226, i32 1936946035, i32 -1768515946, i32 -1397969748, i32 1953789044, i32 572662306, i32 -404232217, i32 -1381126739, i32 892679477, i32 -2054847099, i32 -488447262, i32 -101058055, i32 926365495, i32 -387389208, i32 471604252, i32 1970632053, i32 -538976289, i32 1852730990, i32 1195853639, i32 -235802127, i32 437918234, i32 1903260017, i32 488447261, i32 690563369, i32 -976894523, i32 -1987475063, i32 1869573999, i32 -1212696649, i32 1650614882, i32 235802126, i32 -1431655766, i32 404232216, i32 -1094795586, i32 454761243, i32 -50529028, i32 1448498774, i32 1044266558, i32 1263225675, i32 -960051514, i32 -757935406, i32 2038004089, i32 538976288, i32 -1701143910, i32 -606348325, i32 -1061109568, i32 -16843010, i32 2021161080, i32 -842150451, i32 1515870810, i32 -185273100, i32 522133279, i32 -572662307, i32 -1465341784, i32 858993459, i32 -2004318072, i32 117901063, i32 -943208505, i32 825307441, i32 -1313754703, i32 303174162, i32 269488144, i32 1499027801, i32 656877351, i32 -2139062144, i32 -320017172, i32 1600085855, i32 1616928864, i32 1364283729, i32 2139062143, i32 -1448498775, i32 421075225, i32 -1246382667, i32 1246382666, i32 218959117, i32 757935405, i32 -437918235, i32 2054847098, i32 -1616928865, i32 -1819044973, i32 -909522487, i32 -1667457892, i32 -269488145, i32 -1600085856, i32 -522133280, i32 993737531, i32 1296911693, i32 -1364283730, i32 707406378, i32 -168430091, i32 -1330597712, i32 -926365496, i32 -336860181, i32 -1145324613, i32 1010580540, i32 -2088533117, i32 1397969747, i32 -1717986919, i32 1633771873, i32 387389207, i32 724249387, i32 67372036, i32 2122219134, i32 -1162167622, i32 2004318071, i32 -690563370, i32 640034342, i32 -505290271, i32 1768515945, i32 336860180, i32 1667457891, i32 1431655765, i32 555819297, i32 202116108, i32 2105376125], align 16
@.str.11 = private unnamed_addr constant [10 x i8] c"xlen >= 0\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"dudect-examples/aes32/sources/random.c\00", align 1
@__PRETTY_FUNCTION__.randombytes = private unnamed_addr constant [36 x i8] c"void randombytes(uint8_t *, size_t)\00", align 1
@randombytes.fd = internal global i32 -1, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [16 x i8], align 16
  store i32 0, i32* %1, align 4
  call void @init_dut()
  %3 = bitcast [16 x i8]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 16 getelementptr inbounds ([16 x i8], [16 x i8]* @__const.main.input_data, i32 0, i32 0), i64 16, i1 false)
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i64 0, i64 0
  %5 = sext i8 16 to i64
  %6 = call i8 @do_one_computation(i8* %4, i64 %5, i32 13)
  %7 = zext i8 %6 to i32
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %7)
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare i32 @printf(i8*, ...) #2

define i8 @do_one_computation(i8* %0, i64 %N, i32 %1) {
  %3 = alloca [16 x i8], align 16
  %4 = alloca [16 x i8], align 16
  %5 = bitcast [16 x i8]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %5, i8 0, i64 16, i1 false)
  %6 = bitcast [16 x i8]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 16, i1 false)
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 1 %0, i64 16, i1 false)
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %10 = sext i32 44 to i64
  %11 = sext i8 16 to i64
  %12 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %10, i32 %1, i8* %8, i64 %11, i8* %9, i64 %12)
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %13, i8* align 16 %14, i64 16, i1 false)
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %17 = sext i32 44 to i64
  %18 = sext i8 16 to i64
  %19 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %17, i32 %1, i8* %15, i64 %18, i8* %16, i64 %19)
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %20, i8* align 16 %21, i64 16, i1 false)
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %24 = sext i32 44 to i64
  %25 = sext i8 16 to i64
  %26 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %24, i32 %1, i8* %22, i64 %25, i8* %23, i64 %26)
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %27, i8* align 16 %28, i64 16, i1 false)
  %29 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %31 = sext i32 44 to i64
  %32 = sext i8 16 to i64
  %33 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %31, i32 %1, i8* %29, i64 %32, i8* %30, i64 %33)
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %35 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %34, i8* align 16 %35, i64 16, i1 false)
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %38 = sext i32 44 to i64
  %39 = sext i8 16 to i64
  %40 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %38, i32 %1, i8* %36, i64 %39, i8* %37, i64 %40)
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %41, i8* align 16 %42, i64 16, i1 false)
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %45 = sext i32 44 to i64
  %46 = sext i8 16 to i64
  %47 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %45, i32 %1, i8* %43, i64 %46, i8* %44, i64 %47)
  %48 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %48, i8* align 16 %49, i64 16, i1 false)
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %51 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %52 = sext i32 44 to i64
  %53 = sext i8 16 to i64
  %54 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %52, i32 %1, i8* %50, i64 %53, i8* %51, i64 %54)
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %56 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %55, i8* align 16 %56, i64 16, i1 false)
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %58 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %59 = sext i32 44 to i64
  %60 = sext i8 16 to i64
  %61 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %59, i32 %1, i8* %57, i64 %60, i8* %58, i64 %61)
  %62 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %62, i8* align 16 %63, i64 16, i1 false)
  %64 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %65 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %66 = sext i32 44 to i64
  %67 = sext i8 16 to i64
  %68 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %66, i32 %1, i8* %64, i64 %67, i8* %65, i64 %68)
  %69 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %70 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %69, i8* align 16 %70, i64 16, i1 false)
  %71 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %72 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %73 = sext i32 44 to i64
  %74 = sext i8 16 to i64
  %75 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %73, i32 %1, i8* %71, i64 %74, i8* %72, i64 %75)
  %76 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %76, i8* align 16 %77, i64 16, i1 false)
  %78 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %79 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %80 = sext i32 44 to i64
  %81 = sext i8 16 to i64
  %82 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %80, i32 %1, i8* %78, i64 %81, i8* %79, i64 %82)
  %83 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %84 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %83, i8* align 16 %84, i64 16, i1 false)
  %85 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %86 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %87 = sext i32 44 to i64
  %88 = sext i8 16 to i64
  %89 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %87, i32 %1, i8* %85, i64 %88, i8* %86, i64 %89)
  %90 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %91 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 16 %91, i64 16, i1 false)
  %92 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %93 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %94 = sext i32 44 to i64
  %95 = sext i8 16 to i64
  %96 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %94, i32 %1, i8* %92, i64 %95, i8* %93, i64 %96)
  %97 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %98 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %97, i8* align 16 %98, i64 16, i1 false)
  %99 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %100 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %101 = sext i32 44 to i64
  %102 = sext i8 16 to i64
  %103 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %101, i32 %1, i8* %99, i64 %102, i8* %100, i64 %103)
  %104 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %105 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %104, i8* align 16 %105, i64 16, i1 false)
  %106 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %108 = sext i32 44 to i64
  %109 = sext i8 16 to i64
  %110 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %108, i32 %1, i8* %106, i64 %109, i8* %107, i64 %110)
  %111 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %112 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %111, i8* align 16 %112, i64 16, i1 false)
  %113 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %114 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %115 = sext i32 44 to i64
  %116 = sext i8 16 to i64
  %117 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %115, i32 %1, i8* %113, i64 %116, i8* %114, i64 %117)
  %118 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %119 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %118, i8* align 16 %119, i64 16, i1 false)
  %120 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %121 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %122 = sext i32 44 to i64
  %123 = sext i8 16 to i64
  %124 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %122, i32 %1, i8* %120, i64 %123, i8* %121, i64 %124)
  %125 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %126 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %125, i8* align 16 %126, i64 16, i1 false)
  %127 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %128 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %129 = sext i32 44 to i64
  %130 = sext i8 16 to i64
  %131 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %129, i32 %1, i8* %127, i64 %130, i8* %128, i64 %131)
  %132 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %133 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %132, i8* align 16 %133, i64 16, i1 false)
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %135 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %136 = sext i32 44 to i64
  %137 = sext i8 16 to i64
  %138 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %136, i32 %1, i8* %134, i64 %137, i8* %135, i64 %138)
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %140 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %139, i8* align 16 %140, i64 16, i1 false)
  %141 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %143 = sext i32 44 to i64
  %144 = sext i8 16 to i64
  %145 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %143, i32 %1, i8* %141, i64 %144, i8* %142, i64 %145)
  %146 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %147 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %146, i8* align 16 %147, i64 16, i1 false)
  %148 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %149 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %150 = sext i32 44 to i64
  %151 = sext i8 16 to i64
  %152 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %150, i32 %1, i8* %148, i64 %151, i8* %149, i64 %152)
  %153 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %154 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %153, i8* align 16 %154, i64 16, i1 false)
  %155 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %156 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %157 = sext i32 44 to i64
  %158 = sext i8 16 to i64
  %159 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %157, i32 %1, i8* %155, i64 %158, i8* %156, i64 %159)
  %160 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %161 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %160, i8* align 16 %161, i64 16, i1 false)
  %162 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %163 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %164 = sext i32 44 to i64
  %165 = sext i8 16 to i64
  %166 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %164, i32 %1, i8* %162, i64 %165, i8* %163, i64 %166)
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %168 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %167, i8* align 16 %168, i64 16, i1 false)
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %170 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %171 = sext i32 44 to i64
  %172 = sext i8 16 to i64
  %173 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %171, i32 %1, i8* %169, i64 %172, i8* %170, i64 %173)
  %174 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %175 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %174, i8* align 16 %175, i64 16, i1 false)
  %176 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %177 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %178 = sext i32 44 to i64
  %179 = sext i8 16 to i64
  %180 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %178, i32 %1, i8* %176, i64 %179, i8* %177, i64 %180)
  %181 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %182 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %181, i8* align 16 %182, i64 16, i1 false)
  %183 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %184 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %185 = sext i32 44 to i64
  %186 = sext i8 16 to i64
  %187 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %185, i32 %1, i8* %183, i64 %186, i8* %184, i64 %187)
  %188 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %189 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %188, i8* align 16 %189, i64 16, i1 false)
  %190 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %191 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %192 = sext i32 44 to i64
  %193 = sext i8 16 to i64
  %194 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %192, i32 %1, i8* %190, i64 %193, i8* %191, i64 %194)
  %195 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %196 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %195, i8* align 16 %196, i64 16, i1 false)
  %197 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %198 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %199 = sext i32 44 to i64
  %200 = sext i8 16 to i64
  %201 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %199, i32 %1, i8* %197, i64 %200, i8* %198, i64 %201)
  %202 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %203 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %202, i8* align 16 %203, i64 16, i1 false)
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %205 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %206 = sext i32 44 to i64
  %207 = sext i8 16 to i64
  %208 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %206, i32 %1, i8* %204, i64 %207, i8* %205, i64 %208)
  %209 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %210 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %209, i8* align 16 %210, i64 16, i1 false)
  %211 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %213 = sext i32 44 to i64
  %214 = sext i8 16 to i64
  %215 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %213, i32 %1, i8* %211, i64 %214, i8* %212, i64 %215)
  %216 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %217 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %216, i8* align 16 %217, i64 16, i1 false)
  %218 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %219 = load i8, i8* %218, align 16
  %220 = zext i8 %219 to i32
  ret i8 %219
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @init_dut() #0 {
  %1 = alloca [16 x i8], align 16
  %2 = bitcast [16 x i8]* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %2, i8 0, i64 16, i1 false)
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %4 = sext i32 44 to i64
  %5 = sext i8 16 to i64
  %6 = call i32 @rijndaelKeySetupEnc(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %4, i8* %3, i64 %5, i32 128)
  ret void
}

define void @prepare_inputs(i8* %0, i64 %N, i8* %1, i64 %N1) {
  call void @randombytes(i8* %0, i64 %N, i64 16)
  %3 = call zeroext i8 @randombit()
  store i8 %3, i8* %1, align 1
  %4 = load i8, i8* %1, align 1
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 16, i1 false)
  br label %8

8:                                                ; preds = %7, %2
  ret void
}

define i32 @rijndaelKeySetupEnc(i32* %0, i64 %N, i8* %1, i64 %N1, i32 %2) {
.preheader8:
  %out. = alloca i1
  store i1 true, i1* %out.
  %out.1 = alloca i1
  %out.2 = alloca i1
  %out.3 = alloca i1
  %out.4 = alloca i1
  %out.5 = alloca i1
  %out.6 = alloca i1
  %3 = getelementptr inbounds i8, i8* %1, i64 0
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = shl i32 %5, 24
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl i32 %9, 16
  %11 = xor i32 %6, %10
  %12 = getelementptr inbounds i8, i8* %1, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl i32 %14, 8
  %16 = xor i32 %11, %15
  %17 = getelementptr inbounds i8, i8* %1, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = xor i32 %16, %19
  %21 = getelementptr inbounds i32, i32* %0, i64 0
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %1, i64 4
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl i32 %25, 24
  %27 = getelementptr inbounds i8, i8* %1, i64 4
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl i32 %30, 16
  %32 = xor i32 %26, %31
  %33 = getelementptr inbounds i8, i8* %1, i64 4
  %34 = getelementptr inbounds i8, i8* %33, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl i32 %36, 8
  %38 = xor i32 %32, %37
  %39 = getelementptr inbounds i8, i8* %1, i64 4
  %40 = getelementptr inbounds i8, i8* %39, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = xor i32 %38, %42
  %44 = getelementptr inbounds i32, i32* %0, i64 1
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %1, i64 8
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl i32 %48, 24
  %50 = getelementptr inbounds i8, i8* %1, i64 8
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl i32 %53, 16
  %55 = xor i32 %49, %54
  %56 = getelementptr inbounds i8, i8* %1, i64 8
  %57 = getelementptr inbounds i8, i8* %56, i64 2
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = shl i32 %59, 8
  %61 = xor i32 %55, %60
  %62 = getelementptr inbounds i8, i8* %1, i64 8
  %63 = getelementptr inbounds i8, i8* %62, i64 3
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = xor i32 %61, %65
  %67 = getelementptr inbounds i32, i32* %0, i64 2
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %1, i64 12
  %69 = getelementptr inbounds i8, i8* %68, i64 0
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl i32 %71, 24
  %73 = getelementptr inbounds i8, i8* %1, i64 12
  %74 = getelementptr inbounds i8, i8* %73, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = shl i32 %76, 16
  %78 = xor i32 %72, %77
  %79 = getelementptr inbounds i8, i8* %1, i64 12
  %80 = getelementptr inbounds i8, i8* %79, i64 2
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl i32 %82, 8
  %84 = xor i32 %78, %83
  %85 = getelementptr inbounds i8, i8* %1, i64 12
  %86 = getelementptr inbounds i8, i8* %85, i64 3
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = xor i32 %84, %88
  %90 = getelementptr inbounds i32, i32* %0, i64 3
  store i32 %89, i32* %90, align 4
  %91 = icmp eq i32 %2, 128
  %shadow = alloca i64
  %92 = load i1, i1* %out.
  %93 = xor i1 %91, true
  %in.7 = and i1 %92, %93
  store i1 %in.7, i1* %out.2
  %94 = getelementptr inbounds i8, i8* %1, i64 16
  %95 = getelementptr inbounds i8, i8* %94, i64 0
  %96 = load i1, i1* %out.2
  %97 = icmp slt i64 0, %N1
  %98 = bitcast i64* %shadow to i8*
  %safe.357 = or i1 %96, %97
  %select.ptr.358 = select i1 %safe.357, i8* %95, i8* %98
  %99 = load i8, i8* %select.ptr.358, align 1
  %100 = zext i8 %99 to i32
  %101 = shl i32 %100, 24
  %102 = getelementptr inbounds i8, i8* %1, i64 16
  %103 = getelementptr inbounds i8, i8* %102, i64 1
  %104 = load i1, i1* %out.2
  %105 = icmp slt i64 1, %N1
  %106 = bitcast i64* %shadow to i8*
  %safe.359 = or i1 %104, %105
  %select.ptr.360 = select i1 %safe.359, i8* %103, i8* %106
  %107 = load i8, i8* %select.ptr.360, align 1
  %108 = zext i8 %107 to i32
  %109 = shl i32 %108, 16
  %110 = xor i32 %101, %109
  %111 = getelementptr inbounds i8, i8* %1, i64 16
  %112 = getelementptr inbounds i8, i8* %111, i64 2
  %113 = load i1, i1* %out.2
  %114 = icmp slt i64 2, %N1
  %115 = bitcast i64* %shadow to i8*
  %safe.361 = or i1 %113, %114
  %select.ptr.362 = select i1 %safe.361, i8* %112, i8* %115
  %116 = load i8, i8* %select.ptr.362, align 1
  %117 = zext i8 %116 to i32
  %118 = shl i32 %117, 8
  %119 = xor i32 %110, %118
  %120 = getelementptr inbounds i8, i8* %1, i64 16
  %121 = getelementptr inbounds i8, i8* %120, i64 3
  %122 = load i1, i1* %out.2
  %123 = icmp slt i64 3, %N1
  %124 = bitcast i64* %shadow to i8*
  %safe.363 = or i1 %122, %123
  %select.ptr.364 = select i1 %safe.363, i8* %121, i8* %124
  %125 = load i8, i8* %select.ptr.364, align 1
  %126 = zext i8 %125 to i32
  %127 = xor i32 %119, %126
  %128 = getelementptr inbounds i32, i32* %0, i64 4
  %129 = load i1, i1* %out.2
  %130 = icmp slt i64 4, %N
  %131 = bitcast i64* %shadow to i32*
  %safe.365 = or i1 %129, %130
  %select.ptr.366 = select i1 %safe.365, i32* %128, i32* %131
  %132 = load i32, i32* %128
  %select.val.367 = select i1 %129, i32 %127, i32 %132
  store i32 %select.val.367, i32* %select.ptr.366, align 4
  %133 = getelementptr inbounds i8, i8* %1, i64 20
  %134 = getelementptr inbounds i8, i8* %133, i64 0
  %135 = load i1, i1* %out.2
  %136 = icmp slt i64 0, %N1
  %137 = bitcast i64* %shadow to i8*
  %safe.368 = or i1 %135, %136
  %select.ptr.369 = select i1 %safe.368, i8* %134, i8* %137
  %138 = load i8, i8* %select.ptr.369, align 1
  %139 = zext i8 %138 to i32
  %140 = shl i32 %139, 24
  %141 = getelementptr inbounds i8, i8* %1, i64 20
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  %143 = load i1, i1* %out.2
  %144 = icmp slt i64 1, %N1
  %145 = bitcast i64* %shadow to i8*
  %safe.370 = or i1 %143, %144
  %select.ptr.371 = select i1 %safe.370, i8* %142, i8* %145
  %146 = load i8, i8* %select.ptr.371, align 1
  %147 = zext i8 %146 to i32
  %148 = shl i32 %147, 16
  %149 = xor i32 %140, %148
  %150 = getelementptr inbounds i8, i8* %1, i64 20
  %151 = getelementptr inbounds i8, i8* %150, i64 2
  %152 = load i1, i1* %out.2
  %153 = icmp slt i64 2, %N1
  %154 = bitcast i64* %shadow to i8*
  %safe.372 = or i1 %152, %153
  %select.ptr.373 = select i1 %safe.372, i8* %151, i8* %154
  %155 = load i8, i8* %select.ptr.373, align 1
  %156 = zext i8 %155 to i32
  %157 = shl i32 %156, 8
  %158 = xor i32 %149, %157
  %159 = getelementptr inbounds i8, i8* %1, i64 20
  %160 = getelementptr inbounds i8, i8* %159, i64 3
  %161 = load i1, i1* %out.2
  %162 = icmp slt i64 3, %N1
  %163 = bitcast i64* %shadow to i8*
  %safe.374 = or i1 %161, %162
  %select.ptr.375 = select i1 %safe.374, i8* %160, i8* %163
  %164 = load i8, i8* %select.ptr.375, align 1
  %165 = zext i8 %164 to i32
  %166 = xor i32 %158, %165
  %167 = getelementptr inbounds i32, i32* %0, i64 5
  %168 = load i1, i1* %out.2
  %169 = icmp slt i64 5, %N
  %170 = bitcast i64* %shadow to i32*
  %safe.376 = or i1 %168, %169
  %select.ptr.377 = select i1 %safe.376, i32* %167, i32* %170
  %171 = load i32, i32* %167
  %select.val.378 = select i1 %168, i32 %166, i32 %171
  store i32 %select.val.378, i32* %select.ptr.377, align 4
  %172 = icmp eq i32 %2, 192
  %173 = load i1, i1* %out.2
  %174 = xor i1 %172, true
  %in.9 = and i1 %173, %174
  store i1 %in.9, i1* %out.4
  %175 = getelementptr inbounds i8, i8* %1, i64 24
  %176 = getelementptr inbounds i8, i8* %175, i64 0
  %177 = load i1, i1* %out.4
  %178 = icmp slt i64 0, %N1
  %179 = bitcast i64* %shadow to i8*
  %safe.763 = or i1 %177, %178
  %select.ptr.764 = select i1 %safe.763, i8* %176, i8* %179
  %180 = load i8, i8* %select.ptr.764, align 1
  %181 = zext i8 %180 to i32
  %182 = shl i32 %181, 24
  %183 = getelementptr inbounds i8, i8* %1, i64 24
  %184 = getelementptr inbounds i8, i8* %183, i64 1
  %185 = load i1, i1* %out.4
  %186 = icmp slt i64 1, %N1
  %187 = bitcast i64* %shadow to i8*
  %safe.765 = or i1 %185, %186
  %select.ptr.766 = select i1 %safe.765, i8* %184, i8* %187
  %188 = load i8, i8* %select.ptr.766, align 1
  %189 = zext i8 %188 to i32
  %190 = shl i32 %189, 16
  %191 = xor i32 %182, %190
  %192 = getelementptr inbounds i8, i8* %1, i64 24
  %193 = getelementptr inbounds i8, i8* %192, i64 2
  %194 = load i1, i1* %out.4
  %195 = icmp slt i64 2, %N1
  %196 = bitcast i64* %shadow to i8*
  %safe.767 = or i1 %194, %195
  %select.ptr.768 = select i1 %safe.767, i8* %193, i8* %196
  %197 = load i8, i8* %select.ptr.768, align 1
  %198 = zext i8 %197 to i32
  %199 = shl i32 %198, 8
  %200 = xor i32 %191, %199
  %201 = getelementptr inbounds i8, i8* %1, i64 24
  %202 = getelementptr inbounds i8, i8* %201, i64 3
  %203 = load i1, i1* %out.4
  %204 = icmp slt i64 3, %N1
  %205 = bitcast i64* %shadow to i8*
  %safe.769 = or i1 %203, %204
  %select.ptr.770 = select i1 %safe.769, i8* %202, i8* %205
  %206 = load i8, i8* %select.ptr.770, align 1
  %207 = zext i8 %206 to i32
  %208 = xor i32 %200, %207
  %209 = getelementptr inbounds i32, i32* %0, i64 6
  %210 = load i1, i1* %out.4
  %211 = icmp slt i64 6, %N
  %212 = bitcast i64* %shadow to i32*
  %safe.771 = or i1 %210, %211
  %select.ptr.772 = select i1 %safe.771, i32* %209, i32* %212
  %213 = load i32, i32* %209
  %select.val.773 = select i1 %210, i32 %208, i32 %213
  store i32 %select.val.773, i32* %select.ptr.772, align 4
  %214 = getelementptr inbounds i8, i8* %1, i64 28
  %215 = getelementptr inbounds i8, i8* %214, i64 0
  %216 = load i1, i1* %out.4
  %217 = icmp slt i64 0, %N1
  %218 = bitcast i64* %shadow to i8*
  %safe.774 = or i1 %216, %217
  %select.ptr.775 = select i1 %safe.774, i8* %215, i8* %218
  %219 = load i8, i8* %select.ptr.775, align 1
  %220 = zext i8 %219 to i32
  %221 = shl i32 %220, 24
  %222 = getelementptr inbounds i8, i8* %1, i64 28
  %223 = getelementptr inbounds i8, i8* %222, i64 1
  %224 = load i1, i1* %out.4
  %225 = icmp slt i64 1, %N1
  %226 = bitcast i64* %shadow to i8*
  %safe.776 = or i1 %224, %225
  %select.ptr.777 = select i1 %safe.776, i8* %223, i8* %226
  %227 = load i8, i8* %select.ptr.777, align 1
  %228 = zext i8 %227 to i32
  %229 = shl i32 %228, 16
  %230 = xor i32 %221, %229
  %231 = getelementptr inbounds i8, i8* %1, i64 28
  %232 = getelementptr inbounds i8, i8* %231, i64 2
  %233 = load i1, i1* %out.4
  %234 = icmp slt i64 2, %N1
  %235 = bitcast i64* %shadow to i8*
  %safe.778 = or i1 %233, %234
  %select.ptr.779 = select i1 %safe.778, i8* %232, i8* %235
  %236 = load i8, i8* %select.ptr.779, align 1
  %237 = zext i8 %236 to i32
  %238 = shl i32 %237, 8
  %239 = xor i32 %230, %238
  %240 = getelementptr inbounds i8, i8* %1, i64 28
  %241 = getelementptr inbounds i8, i8* %240, i64 3
  %242 = load i1, i1* %out.4
  %243 = icmp slt i64 3, %N1
  %244 = bitcast i64* %shadow to i8*
  %safe.780 = or i1 %242, %243
  %select.ptr.781 = select i1 %safe.780, i8* %241, i8* %244
  %245 = load i8, i8* %select.ptr.781, align 1
  %246 = zext i8 %245 to i32
  %247 = xor i32 %239, %246
  %248 = getelementptr inbounds i32, i32* %0, i64 7
  %249 = load i1, i1* %out.4
  %250 = icmp slt i64 7, %N
  %251 = bitcast i64* %shadow to i32*
  %safe.782 = or i1 %249, %250
  %select.ptr.783 = select i1 %safe.782, i32* %248, i32* %251
  %252 = load i32, i32* %248
  %select.val.784 = select i1 %249, i32 %247, i32 %252
  store i32 %select.val.784, i32* %select.ptr.783, align 4
  %253 = icmp eq i32 %2, 256
  %254 = load i1, i1* %out.4
  %in.10 = and i1 %254, %253
  store i1 %in.10, i1* %out.5
  %255 = getelementptr inbounds i32, i32* %0, i64 7
  %256 = load i1, i1* %out.5
  %257 = icmp slt i64 7, %N
  %258 = bitcast i64* %shadow to i32*
  %safe.785 = or i1 %256, %257
  %select.ptr.786 = select i1 %safe.785, i32* %255, i32* %258
  %259 = load i32, i32* %select.ptr.786, align 4
  %260 = load i1, i1* %out.5
  %261 = load i32, i32* %0, align 4
  %262 = lshr i32 %259, 16
  %263 = and i32 %262, 255
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %264
  %266 = load i1, i1* %out.5
  %267 = sext i32 256 to i64
  %268 = icmp slt i64 %264, %267
  %269 = bitcast i64* %shadow to i32*
  %safe.787 = or i1 %266, %268
  %select.ptr.788 = select i1 %safe.787, i32* %265, i32* %269
  %270 = load i32, i32* %select.ptr.788, align 4
  %271 = and i32 %270, -16777216
  %272 = xor i32 %261, %271
  %273 = lshr i32 %259, 8
  %274 = and i32 %273, 255
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %275
  %277 = load i1, i1* %out.5
  %278 = sext i32 256 to i64
  %279 = icmp slt i64 %275, %278
  %280 = bitcast i64* %shadow to i32*
  %safe.789 = or i1 %277, %279
  %select.ptr.790 = select i1 %safe.789, i32* %276, i32* %280
  %281 = load i32, i32* %select.ptr.790, align 4
  %282 = and i32 %281, 16711680
  %283 = xor i32 %272, %282
  %284 = and i32 %259, 255
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %285
  %287 = load i1, i1* %out.5
  %288 = sext i32 256 to i64
  %289 = icmp slt i64 %285, %288
  %290 = bitcast i64* %shadow to i32*
  %safe.791 = or i1 %287, %289
  %select.ptr.792 = select i1 %safe.791, i32* %286, i32* %290
  %291 = load i32, i32* %select.ptr.792, align 4
  %292 = and i32 %291, 65280
  %293 = xor i32 %283, %292
  %294 = lshr i32 %259, 24
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %295
  %297 = load i1, i1* %out.5
  %298 = sext i32 256 to i64
  %299 = icmp slt i64 %295, %298
  %300 = bitcast i64* %shadow to i32*
  %safe.793 = or i1 %297, %299
  %select.ptr.794 = select i1 %safe.793, i32* %296, i32* %300
  %301 = load i32, i32* %select.ptr.794, align 4
  %302 = and i32 %301, 255
  %303 = xor i32 %293, %302
  %304 = xor i32 %303, 16777216
  %305 = getelementptr inbounds i32, i32* %0, i64 8
  %306 = load i1, i1* %out.5
  %307 = icmp slt i64 8, %N
  %308 = bitcast i64* %shadow to i32*
  %safe.795 = or i1 %306, %307
  %select.ptr.796 = select i1 %safe.795, i32* %305, i32* %308
  %309 = load i32, i32* %305
  %select.val.797 = select i1 %306, i32 %304, i32 %309
  store i32 %select.val.797, i32* %select.ptr.796, align 4
  %310 = getelementptr inbounds i32, i32* %0, i64 1
  %311 = load i1, i1* %out.5
  %312 = icmp slt i64 1, %N
  %313 = bitcast i64* %shadow to i32*
  %safe.798 = or i1 %311, %312
  %select.ptr.799 = select i1 %safe.798, i32* %310, i32* %313
  %314 = load i32, i32* %select.ptr.799, align 4
  %315 = getelementptr inbounds i32, i32* %0, i64 8
  %316 = load i1, i1* %out.5
  %317 = icmp slt i64 8, %N
  %318 = bitcast i64* %shadow to i32*
  %safe.800 = or i1 %316, %317
  %select.ptr.801 = select i1 %safe.800, i32* %315, i32* %318
  %319 = load i32, i32* %select.ptr.801, align 4
  %320 = xor i32 %314, %319
  %321 = getelementptr inbounds i32, i32* %0, i64 9
  %322 = load i1, i1* %out.5
  %323 = icmp slt i64 9, %N
  %324 = bitcast i64* %shadow to i32*
  %safe.802 = or i1 %322, %323
  %select.ptr.803 = select i1 %safe.802, i32* %321, i32* %324
  %325 = load i32, i32* %321
  %select.val.804 = select i1 %322, i32 %320, i32 %325
  store i32 %select.val.804, i32* %select.ptr.803, align 4
  %326 = getelementptr inbounds i32, i32* %0, i64 2
  %327 = load i1, i1* %out.5
  %328 = icmp slt i64 2, %N
  %329 = bitcast i64* %shadow to i32*
  %safe.805 = or i1 %327, %328
  %select.ptr.806 = select i1 %safe.805, i32* %326, i32* %329
  %330 = load i32, i32* %select.ptr.806, align 4
  %331 = getelementptr inbounds i32, i32* %0, i64 9
  %332 = load i1, i1* %out.5
  %333 = icmp slt i64 9, %N
  %334 = bitcast i64* %shadow to i32*
  %safe.807 = or i1 %332, %333
  %select.ptr.808 = select i1 %safe.807, i32* %331, i32* %334
  %335 = load i32, i32* %select.ptr.808, align 4
  %336 = xor i32 %330, %335
  %337 = getelementptr inbounds i32, i32* %0, i64 10
  %338 = load i1, i1* %out.5
  %339 = icmp slt i64 10, %N
  %340 = bitcast i64* %shadow to i32*
  %safe.809 = or i1 %338, %339
  %select.ptr.810 = select i1 %safe.809, i32* %337, i32* %340
  %341 = load i32, i32* %337
  %select.val.811 = select i1 %338, i32 %336, i32 %341
  store i32 %select.val.811, i32* %select.ptr.810, align 4
  %342 = getelementptr inbounds i32, i32* %0, i64 3
  %343 = load i1, i1* %out.5
  %344 = icmp slt i64 3, %N
  %345 = bitcast i64* %shadow to i32*
  %safe.812 = or i1 %343, %344
  %select.ptr.813 = select i1 %safe.812, i32* %342, i32* %345
  %346 = load i32, i32* %select.ptr.813, align 4
  %347 = getelementptr inbounds i32, i32* %0, i64 10
  %348 = load i1, i1* %out.5
  %349 = icmp slt i64 10, %N
  %350 = bitcast i64* %shadow to i32*
  %safe.814 = or i1 %348, %349
  %select.ptr.815 = select i1 %safe.814, i32* %347, i32* %350
  %351 = load i32, i32* %select.ptr.815, align 4
  %352 = xor i32 %346, %351
  %353 = getelementptr inbounds i32, i32* %0, i64 11
  %354 = load i1, i1* %out.5
  %355 = icmp slt i64 11, %N
  %356 = bitcast i64* %shadow to i32*
  %safe.816 = or i1 %354, %355
  %select.ptr.817 = select i1 %safe.816, i32* %353, i32* %356
  %357 = load i32, i32* %353
  %select.val.818 = select i1 %354, i32 %352, i32 %357
  store i32 %select.val.818, i32* %select.ptr.817, align 4
  %358 = getelementptr inbounds i32, i32* %0, i64 11
  %359 = load i1, i1* %out.5
  %360 = icmp slt i64 11, %N
  %361 = bitcast i64* %shadow to i32*
  %safe.819 = or i1 %359, %360
  %select.ptr.820 = select i1 %safe.819, i32* %358, i32* %361
  %362 = load i32, i32* %select.ptr.820, align 4
  %363 = getelementptr inbounds i32, i32* %0, i64 4
  %364 = load i1, i1* %out.5
  %365 = icmp slt i64 4, %N
  %366 = bitcast i64* %shadow to i32*
  %safe.821 = or i1 %364, %365
  %select.ptr.822 = select i1 %safe.821, i32* %363, i32* %366
  %367 = load i32, i32* %select.ptr.822, align 4
  %368 = lshr i32 %362, 24
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %369
  %371 = load i1, i1* %out.5
  %372 = sext i32 256 to i64
  %373 = icmp slt i64 %369, %372
  %374 = bitcast i64* %shadow to i32*
  %safe.823 = or i1 %371, %373
  %select.ptr.824 = select i1 %safe.823, i32* %370, i32* %374
  %375 = load i32, i32* %select.ptr.824, align 4
  %376 = and i32 %375, -16777216
  %377 = xor i32 %367, %376
  %378 = lshr i32 %362, 16
  %379 = and i32 %378, 255
  %380 = zext i32 %379 to i64
  %381 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %380
  %382 = load i1, i1* %out.5
  %383 = sext i32 256 to i64
  %384 = icmp slt i64 %380, %383
  %385 = bitcast i64* %shadow to i32*
  %safe.825 = or i1 %382, %384
  %select.ptr.826 = select i1 %safe.825, i32* %381, i32* %385
  %386 = load i32, i32* %select.ptr.826, align 4
  %387 = and i32 %386, 16711680
  %388 = xor i32 %377, %387
  %389 = lshr i32 %362, 8
  %390 = and i32 %389, 255
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %391
  %393 = load i1, i1* %out.5
  %394 = sext i32 256 to i64
  %395 = icmp slt i64 %391, %394
  %396 = bitcast i64* %shadow to i32*
  %safe.827 = or i1 %393, %395
  %select.ptr.828 = select i1 %safe.827, i32* %392, i32* %396
  %397 = load i32, i32* %select.ptr.828, align 4
  %398 = and i32 %397, 65280
  %399 = xor i32 %388, %398
  %400 = and i32 %362, 255
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %401
  %403 = load i1, i1* %out.5
  %404 = sext i32 256 to i64
  %405 = icmp slt i64 %401, %404
  %406 = bitcast i64* %shadow to i32*
  %safe.829 = or i1 %403, %405
  %select.ptr.830 = select i1 %safe.829, i32* %402, i32* %406
  %407 = load i32, i32* %select.ptr.830, align 4
  %408 = and i32 %407, 255
  %409 = xor i32 %399, %408
  %410 = getelementptr inbounds i32, i32* %0, i64 12
  %411 = load i1, i1* %out.5
  %412 = icmp slt i64 12, %N
  %413 = bitcast i64* %shadow to i32*
  %safe.831 = or i1 %411, %412
  %select.ptr.832 = select i1 %safe.831, i32* %410, i32* %413
  %414 = load i32, i32* %410
  %select.val.833 = select i1 %411, i32 %409, i32 %414
  store i32 %select.val.833, i32* %select.ptr.832, align 4
  %415 = getelementptr inbounds i32, i32* %0, i64 5
  %416 = load i1, i1* %out.5
  %417 = icmp slt i64 5, %N
  %418 = bitcast i64* %shadow to i32*
  %safe.834 = or i1 %416, %417
  %select.ptr.835 = select i1 %safe.834, i32* %415, i32* %418
  %419 = load i32, i32* %select.ptr.835, align 4
  %420 = getelementptr inbounds i32, i32* %0, i64 12
  %421 = load i1, i1* %out.5
  %422 = icmp slt i64 12, %N
  %423 = bitcast i64* %shadow to i32*
  %safe.836 = or i1 %421, %422
  %select.ptr.837 = select i1 %safe.836, i32* %420, i32* %423
  %424 = load i32, i32* %select.ptr.837, align 4
  %425 = xor i32 %419, %424
  %426 = getelementptr inbounds i32, i32* %0, i64 13
  %427 = load i1, i1* %out.5
  %428 = icmp slt i64 13, %N
  %429 = bitcast i64* %shadow to i32*
  %safe.838 = or i1 %427, %428
  %select.ptr.839 = select i1 %safe.838, i32* %426, i32* %429
  %430 = load i32, i32* %426
  %select.val.840 = select i1 %427, i32 %425, i32 %430
  store i32 %select.val.840, i32* %select.ptr.839, align 4
  %431 = getelementptr inbounds i32, i32* %0, i64 6
  %432 = load i1, i1* %out.5
  %433 = icmp slt i64 6, %N
  %434 = bitcast i64* %shadow to i32*
  %safe.841 = or i1 %432, %433
  %select.ptr.842 = select i1 %safe.841, i32* %431, i32* %434
  %435 = load i32, i32* %select.ptr.842, align 4
  %436 = getelementptr inbounds i32, i32* %0, i64 13
  %437 = load i1, i1* %out.5
  %438 = icmp slt i64 13, %N
  %439 = bitcast i64* %shadow to i32*
  %safe.843 = or i1 %437, %438
  %select.ptr.844 = select i1 %safe.843, i32* %436, i32* %439
  %440 = load i32, i32* %select.ptr.844, align 4
  %441 = xor i32 %435, %440
  %442 = getelementptr inbounds i32, i32* %0, i64 14
  %443 = load i1, i1* %out.5
  %444 = icmp slt i64 14, %N
  %445 = bitcast i64* %shadow to i32*
  %safe.845 = or i1 %443, %444
  %select.ptr.846 = select i1 %safe.845, i32* %442, i32* %445
  %446 = load i32, i32* %442
  %select.val.847 = select i1 %443, i32 %441, i32 %446
  store i32 %select.val.847, i32* %select.ptr.846, align 4
  %447 = getelementptr inbounds i32, i32* %0, i64 7
  %448 = load i1, i1* %out.5
  %449 = icmp slt i64 7, %N
  %450 = bitcast i64* %shadow to i32*
  %safe.848 = or i1 %448, %449
  %select.ptr.849 = select i1 %safe.848, i32* %447, i32* %450
  %451 = load i32, i32* %select.ptr.849, align 4
  %452 = getelementptr inbounds i32, i32* %0, i64 14
  %453 = load i1, i1* %out.5
  %454 = icmp slt i64 14, %N
  %455 = bitcast i64* %shadow to i32*
  %safe.850 = or i1 %453, %454
  %select.ptr.851 = select i1 %safe.850, i32* %452, i32* %455
  %456 = load i32, i32* %select.ptr.851, align 4
  %457 = xor i32 %451, %456
  %458 = getelementptr inbounds i32, i32* %0, i64 15
  %459 = load i1, i1* %out.5
  %460 = icmp slt i64 15, %N
  %461 = bitcast i64* %shadow to i32*
  %safe.852 = or i1 %459, %460
  %select.ptr.853 = select i1 %safe.852, i32* %458, i32* %461
  %462 = load i32, i32* %458
  %select.val.854 = select i1 %459, i32 %457, i32 %462
  store i32 %select.val.854, i32* %select.ptr.853, align 4
  %463 = getelementptr inbounds i32, i32* %0, i64 8
  %464 = getelementptr inbounds i32, i32* %463, i64 7
  %465 = load i1, i1* %out.5
  %466 = icmp slt i64 7, %N
  %467 = bitcast i64* %shadow to i32*
  %safe.855 = or i1 %465, %466
  %select.ptr.856 = select i1 %safe.855, i32* %464, i32* %467
  %468 = load i32, i32* %select.ptr.856, align 4
  %469 = load i1, i1* %out.5
  %470 = icmp slt i64 8, %N
  %471 = bitcast i64* %shadow to i32*
  %safe.857 = or i1 %469, %470
  %select.ptr.858 = select i1 %safe.857, i32* %463, i32* %471
  %472 = load i32, i32* %select.ptr.858, align 4
  %473 = lshr i32 %468, 16
  %474 = and i32 %473, 255
  %475 = zext i32 %474 to i64
  %476 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %475
  %477 = load i1, i1* %out.5
  %478 = sext i32 256 to i64
  %479 = icmp slt i64 %475, %478
  %480 = bitcast i64* %shadow to i32*
  %safe.859 = or i1 %477, %479
  %select.ptr.860 = select i1 %safe.859, i32* %476, i32* %480
  %481 = load i32, i32* %select.ptr.860, align 4
  %482 = and i32 %481, -16777216
  %483 = xor i32 %472, %482
  %484 = lshr i32 %468, 8
  %485 = and i32 %484, 255
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %486
  %488 = load i1, i1* %out.5
  %489 = sext i32 256 to i64
  %490 = icmp slt i64 %486, %489
  %491 = bitcast i64* %shadow to i32*
  %safe.861 = or i1 %488, %490
  %select.ptr.862 = select i1 %safe.861, i32* %487, i32* %491
  %492 = load i32, i32* %select.ptr.862, align 4
  %493 = and i32 %492, 16711680
  %494 = xor i32 %483, %493
  %495 = and i32 %468, 255
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %496
  %498 = load i1, i1* %out.5
  %499 = sext i32 256 to i64
  %500 = icmp slt i64 %496, %499
  %501 = bitcast i64* %shadow to i32*
  %safe.863 = or i1 %498, %500
  %select.ptr.864 = select i1 %safe.863, i32* %497, i32* %501
  %502 = load i32, i32* %select.ptr.864, align 4
  %503 = and i32 %502, 65280
  %504 = xor i32 %494, %503
  %505 = lshr i32 %468, 24
  %506 = zext i32 %505 to i64
  %507 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %506
  %508 = load i1, i1* %out.5
  %509 = sext i32 256 to i64
  %510 = icmp slt i64 %506, %509
  %511 = bitcast i64* %shadow to i32*
  %safe.865 = or i1 %508, %510
  %select.ptr.866 = select i1 %safe.865, i32* %507, i32* %511
  %512 = load i32, i32* %select.ptr.866, align 4
  %513 = and i32 %512, 255
  %514 = xor i32 %504, %513
  %515 = xor i32 %514, 33554432
  %516 = getelementptr inbounds i32, i32* %463, i64 8
  %517 = load i1, i1* %out.5
  %518 = icmp slt i64 8, %N
  %519 = bitcast i64* %shadow to i32*
  %safe.867 = or i1 %517, %518
  %select.ptr.868 = select i1 %safe.867, i32* %516, i32* %519
  %520 = load i32, i32* %516
  %select.val.869 = select i1 %517, i32 %515, i32 %520
  store i32 %select.val.869, i32* %select.ptr.868, align 4
  %521 = getelementptr inbounds i32, i32* %463, i64 1
  %522 = load i1, i1* %out.5
  %523 = icmp slt i64 1, %N
  %524 = bitcast i64* %shadow to i32*
  %safe.870 = or i1 %522, %523
  %select.ptr.871 = select i1 %safe.870, i32* %521, i32* %524
  %525 = load i32, i32* %select.ptr.871, align 4
  %526 = getelementptr inbounds i32, i32* %463, i64 8
  %527 = load i1, i1* %out.5
  %528 = icmp slt i64 8, %N
  %529 = bitcast i64* %shadow to i32*
  %safe.872 = or i1 %527, %528
  %select.ptr.873 = select i1 %safe.872, i32* %526, i32* %529
  %530 = load i32, i32* %select.ptr.873, align 4
  %531 = xor i32 %525, %530
  %532 = getelementptr inbounds i32, i32* %463, i64 9
  %533 = load i1, i1* %out.5
  %534 = icmp slt i64 9, %N
  %535 = bitcast i64* %shadow to i32*
  %safe.874 = or i1 %533, %534
  %select.ptr.875 = select i1 %safe.874, i32* %532, i32* %535
  %536 = load i32, i32* %532
  %select.val.876 = select i1 %533, i32 %531, i32 %536
  store i32 %select.val.876, i32* %select.ptr.875, align 4
  %537 = getelementptr inbounds i32, i32* %463, i64 2
  %538 = load i1, i1* %out.5
  %539 = icmp slt i64 2, %N
  %540 = bitcast i64* %shadow to i32*
  %safe.877 = or i1 %538, %539
  %select.ptr.878 = select i1 %safe.877, i32* %537, i32* %540
  %541 = load i32, i32* %select.ptr.878, align 4
  %542 = getelementptr inbounds i32, i32* %463, i64 9
  %543 = load i1, i1* %out.5
  %544 = icmp slt i64 9, %N
  %545 = bitcast i64* %shadow to i32*
  %safe.879 = or i1 %543, %544
  %select.ptr.880 = select i1 %safe.879, i32* %542, i32* %545
  %546 = load i32, i32* %select.ptr.880, align 4
  %547 = xor i32 %541, %546
  %548 = getelementptr inbounds i32, i32* %463, i64 10
  %549 = load i1, i1* %out.5
  %550 = icmp slt i64 10, %N
  %551 = bitcast i64* %shadow to i32*
  %safe.881 = or i1 %549, %550
  %select.ptr.882 = select i1 %safe.881, i32* %548, i32* %551
  %552 = load i32, i32* %548
  %select.val.883 = select i1 %549, i32 %547, i32 %552
  store i32 %select.val.883, i32* %select.ptr.882, align 4
  %553 = getelementptr inbounds i32, i32* %463, i64 3
  %554 = load i1, i1* %out.5
  %555 = icmp slt i64 3, %N
  %556 = bitcast i64* %shadow to i32*
  %safe.884 = or i1 %554, %555
  %select.ptr.885 = select i1 %safe.884, i32* %553, i32* %556
  %557 = load i32, i32* %select.ptr.885, align 4
  %558 = getelementptr inbounds i32, i32* %463, i64 10
  %559 = load i1, i1* %out.5
  %560 = icmp slt i64 10, %N
  %561 = bitcast i64* %shadow to i32*
  %safe.886 = or i1 %559, %560
  %select.ptr.887 = select i1 %safe.886, i32* %558, i32* %561
  %562 = load i32, i32* %select.ptr.887, align 4
  %563 = xor i32 %557, %562
  %564 = getelementptr inbounds i32, i32* %463, i64 11
  %565 = load i1, i1* %out.5
  %566 = icmp slt i64 11, %N
  %567 = bitcast i64* %shadow to i32*
  %safe.888 = or i1 %565, %566
  %select.ptr.889 = select i1 %safe.888, i32* %564, i32* %567
  %568 = load i32, i32* %564
  %select.val.890 = select i1 %565, i32 %563, i32 %568
  store i32 %select.val.890, i32* %select.ptr.889, align 4
  %569 = getelementptr inbounds i32, i32* %463, i64 11
  %570 = load i1, i1* %out.5
  %571 = icmp slt i64 11, %N
  %572 = bitcast i64* %shadow to i32*
  %safe.891 = or i1 %570, %571
  %select.ptr.892 = select i1 %safe.891, i32* %569, i32* %572
  %573 = load i32, i32* %select.ptr.892, align 4
  %574 = getelementptr inbounds i32, i32* %463, i64 4
  %575 = load i1, i1* %out.5
  %576 = icmp slt i64 4, %N
  %577 = bitcast i64* %shadow to i32*
  %safe.893 = or i1 %575, %576
  %select.ptr.894 = select i1 %safe.893, i32* %574, i32* %577
  %578 = load i32, i32* %select.ptr.894, align 4
  %579 = lshr i32 %573, 24
  %580 = zext i32 %579 to i64
  %581 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %580
  %582 = load i1, i1* %out.5
  %583 = sext i32 256 to i64
  %584 = icmp slt i64 %580, %583
  %585 = bitcast i64* %shadow to i32*
  %safe.895 = or i1 %582, %584
  %select.ptr.896 = select i1 %safe.895, i32* %581, i32* %585
  %586 = load i32, i32* %select.ptr.896, align 4
  %587 = and i32 %586, -16777216
  %588 = xor i32 %578, %587
  %589 = lshr i32 %573, 16
  %590 = and i32 %589, 255
  %591 = zext i32 %590 to i64
  %592 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %591
  %593 = load i1, i1* %out.5
  %594 = sext i32 256 to i64
  %595 = icmp slt i64 %591, %594
  %596 = bitcast i64* %shadow to i32*
  %safe.897 = or i1 %593, %595
  %select.ptr.898 = select i1 %safe.897, i32* %592, i32* %596
  %597 = load i32, i32* %select.ptr.898, align 4
  %598 = and i32 %597, 16711680
  %599 = xor i32 %588, %598
  %600 = lshr i32 %573, 8
  %601 = and i32 %600, 255
  %602 = zext i32 %601 to i64
  %603 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %602
  %604 = load i1, i1* %out.5
  %605 = sext i32 256 to i64
  %606 = icmp slt i64 %602, %605
  %607 = bitcast i64* %shadow to i32*
  %safe.899 = or i1 %604, %606
  %select.ptr.900 = select i1 %safe.899, i32* %603, i32* %607
  %608 = load i32, i32* %select.ptr.900, align 4
  %609 = and i32 %608, 65280
  %610 = xor i32 %599, %609
  %611 = and i32 %573, 255
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %612
  %614 = load i1, i1* %out.5
  %615 = sext i32 256 to i64
  %616 = icmp slt i64 %612, %615
  %617 = bitcast i64* %shadow to i32*
  %safe.901 = or i1 %614, %616
  %select.ptr.902 = select i1 %safe.901, i32* %613, i32* %617
  %618 = load i32, i32* %select.ptr.902, align 4
  %619 = and i32 %618, 255
  %620 = xor i32 %610, %619
  %621 = getelementptr inbounds i32, i32* %463, i64 12
  %622 = load i1, i1* %out.5
  %623 = icmp slt i64 12, %N
  %624 = bitcast i64* %shadow to i32*
  %safe.903 = or i1 %622, %623
  %select.ptr.904 = select i1 %safe.903, i32* %621, i32* %624
  %625 = load i32, i32* %621
  %select.val.905 = select i1 %622, i32 %620, i32 %625
  store i32 %select.val.905, i32* %select.ptr.904, align 4
  %626 = getelementptr inbounds i32, i32* %463, i64 5
  %627 = load i1, i1* %out.5
  %628 = icmp slt i64 5, %N
  %629 = bitcast i64* %shadow to i32*
  %safe.906 = or i1 %627, %628
  %select.ptr.907 = select i1 %safe.906, i32* %626, i32* %629
  %630 = load i32, i32* %select.ptr.907, align 4
  %631 = getelementptr inbounds i32, i32* %463, i64 12
  %632 = load i1, i1* %out.5
  %633 = icmp slt i64 12, %N
  %634 = bitcast i64* %shadow to i32*
  %safe.908 = or i1 %632, %633
  %select.ptr.909 = select i1 %safe.908, i32* %631, i32* %634
  %635 = load i32, i32* %select.ptr.909, align 4
  %636 = xor i32 %630, %635
  %637 = getelementptr inbounds i32, i32* %463, i64 13
  %638 = load i1, i1* %out.5
  %639 = icmp slt i64 13, %N
  %640 = bitcast i64* %shadow to i32*
  %safe.910 = or i1 %638, %639
  %select.ptr.911 = select i1 %safe.910, i32* %637, i32* %640
  %641 = load i32, i32* %637
  %select.val.912 = select i1 %638, i32 %636, i32 %641
  store i32 %select.val.912, i32* %select.ptr.911, align 4
  %642 = getelementptr inbounds i32, i32* %463, i64 6
  %643 = load i1, i1* %out.5
  %644 = icmp slt i64 6, %N
  %645 = bitcast i64* %shadow to i32*
  %safe.913 = or i1 %643, %644
  %select.ptr.914 = select i1 %safe.913, i32* %642, i32* %645
  %646 = load i32, i32* %select.ptr.914, align 4
  %647 = getelementptr inbounds i32, i32* %463, i64 13
  %648 = load i1, i1* %out.5
  %649 = icmp slt i64 13, %N
  %650 = bitcast i64* %shadow to i32*
  %safe.915 = or i1 %648, %649
  %select.ptr.916 = select i1 %safe.915, i32* %647, i32* %650
  %651 = load i32, i32* %select.ptr.916, align 4
  %652 = xor i32 %646, %651
  %653 = getelementptr inbounds i32, i32* %463, i64 14
  %654 = load i1, i1* %out.5
  %655 = icmp slt i64 14, %N
  %656 = bitcast i64* %shadow to i32*
  %safe.917 = or i1 %654, %655
  %select.ptr.918 = select i1 %safe.917, i32* %653, i32* %656
  %657 = load i32, i32* %653
  %select.val.919 = select i1 %654, i32 %652, i32 %657
  store i32 %select.val.919, i32* %select.ptr.918, align 4
  %658 = getelementptr inbounds i32, i32* %463, i64 7
  %659 = load i1, i1* %out.5
  %660 = icmp slt i64 7, %N
  %661 = bitcast i64* %shadow to i32*
  %safe.920 = or i1 %659, %660
  %select.ptr.921 = select i1 %safe.920, i32* %658, i32* %661
  %662 = load i32, i32* %select.ptr.921, align 4
  %663 = getelementptr inbounds i32, i32* %463, i64 14
  %664 = load i1, i1* %out.5
  %665 = icmp slt i64 14, %N
  %666 = bitcast i64* %shadow to i32*
  %safe.922 = or i1 %664, %665
  %select.ptr.923 = select i1 %safe.922, i32* %663, i32* %666
  %667 = load i32, i32* %select.ptr.923, align 4
  %668 = xor i32 %662, %667
  %669 = getelementptr inbounds i32, i32* %463, i64 15
  %670 = load i1, i1* %out.5
  %671 = icmp slt i64 15, %N
  %672 = bitcast i64* %shadow to i32*
  %safe.924 = or i1 %670, %671
  %select.ptr.925 = select i1 %safe.924, i32* %669, i32* %672
  %673 = load i32, i32* %669
  %select.val.926 = select i1 %670, i32 %668, i32 %673
  store i32 %select.val.926, i32* %select.ptr.925, align 4
  %674 = getelementptr inbounds i32, i32* %463, i64 8
  %675 = getelementptr inbounds i32, i32* %674, i64 7
  %676 = load i1, i1* %out.5
  %677 = icmp slt i64 7, %N
  %678 = bitcast i64* %shadow to i32*
  %safe.927 = or i1 %676, %677
  %select.ptr.928 = select i1 %safe.927, i32* %675, i32* %678
  %679 = load i32, i32* %select.ptr.928, align 4
  %680 = load i1, i1* %out.5
  %681 = icmp slt i64 8, %N
  %682 = bitcast i64* %shadow to i32*
  %safe.929 = or i1 %680, %681
  %select.ptr.930 = select i1 %safe.929, i32* %674, i32* %682
  %683 = load i32, i32* %select.ptr.930, align 4
  %684 = lshr i32 %679, 16
  %685 = and i32 %684, 255
  %686 = zext i32 %685 to i64
  %687 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %686
  %688 = load i1, i1* %out.5
  %689 = sext i32 256 to i64
  %690 = icmp slt i64 %686, %689
  %691 = bitcast i64* %shadow to i32*
  %safe.931 = or i1 %688, %690
  %select.ptr.932 = select i1 %safe.931, i32* %687, i32* %691
  %692 = load i32, i32* %select.ptr.932, align 4
  %693 = and i32 %692, -16777216
  %694 = xor i32 %683, %693
  %695 = lshr i32 %679, 8
  %696 = and i32 %695, 255
  %697 = zext i32 %696 to i64
  %698 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %697
  %699 = load i1, i1* %out.5
  %700 = sext i32 256 to i64
  %701 = icmp slt i64 %697, %700
  %702 = bitcast i64* %shadow to i32*
  %safe.933 = or i1 %699, %701
  %select.ptr.934 = select i1 %safe.933, i32* %698, i32* %702
  %703 = load i32, i32* %select.ptr.934, align 4
  %704 = and i32 %703, 16711680
  %705 = xor i32 %694, %704
  %706 = and i32 %679, 255
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %707
  %709 = load i1, i1* %out.5
  %710 = sext i32 256 to i64
  %711 = icmp slt i64 %707, %710
  %712 = bitcast i64* %shadow to i32*
  %safe.935 = or i1 %709, %711
  %select.ptr.936 = select i1 %safe.935, i32* %708, i32* %712
  %713 = load i32, i32* %select.ptr.936, align 4
  %714 = and i32 %713, 65280
  %715 = xor i32 %705, %714
  %716 = lshr i32 %679, 24
  %717 = zext i32 %716 to i64
  %718 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %717
  %719 = load i1, i1* %out.5
  %720 = sext i32 256 to i64
  %721 = icmp slt i64 %717, %720
  %722 = bitcast i64* %shadow to i32*
  %safe.937 = or i1 %719, %721
  %select.ptr.938 = select i1 %safe.937, i32* %718, i32* %722
  %723 = load i32, i32* %select.ptr.938, align 4
  %724 = and i32 %723, 255
  %725 = xor i32 %715, %724
  %726 = xor i32 %725, 67108864
  %727 = getelementptr inbounds i32, i32* %674, i64 8
  %728 = load i1, i1* %out.5
  %729 = icmp slt i64 8, %N
  %730 = bitcast i64* %shadow to i32*
  %safe.939 = or i1 %728, %729
  %select.ptr.940 = select i1 %safe.939, i32* %727, i32* %730
  %731 = load i32, i32* %727
  %select.val.941 = select i1 %728, i32 %726, i32 %731
  store i32 %select.val.941, i32* %select.ptr.940, align 4
  %732 = getelementptr inbounds i32, i32* %674, i64 1
  %733 = load i1, i1* %out.5
  %734 = icmp slt i64 1, %N
  %735 = bitcast i64* %shadow to i32*
  %safe.942 = or i1 %733, %734
  %select.ptr.943 = select i1 %safe.942, i32* %732, i32* %735
  %736 = load i32, i32* %select.ptr.943, align 4
  %737 = getelementptr inbounds i32, i32* %674, i64 8
  %738 = load i1, i1* %out.5
  %739 = icmp slt i64 8, %N
  %740 = bitcast i64* %shadow to i32*
  %safe.944 = or i1 %738, %739
  %select.ptr.945 = select i1 %safe.944, i32* %737, i32* %740
  %741 = load i32, i32* %select.ptr.945, align 4
  %742 = xor i32 %736, %741
  %743 = getelementptr inbounds i32, i32* %674, i64 9
  %744 = load i1, i1* %out.5
  %745 = icmp slt i64 9, %N
  %746 = bitcast i64* %shadow to i32*
  %safe.946 = or i1 %744, %745
  %select.ptr.947 = select i1 %safe.946, i32* %743, i32* %746
  %747 = load i32, i32* %743
  %select.val.948 = select i1 %744, i32 %742, i32 %747
  store i32 %select.val.948, i32* %select.ptr.947, align 4
  %748 = getelementptr inbounds i32, i32* %674, i64 2
  %749 = load i1, i1* %out.5
  %750 = icmp slt i64 2, %N
  %751 = bitcast i64* %shadow to i32*
  %safe.949 = or i1 %749, %750
  %select.ptr.950 = select i1 %safe.949, i32* %748, i32* %751
  %752 = load i32, i32* %select.ptr.950, align 4
  %753 = getelementptr inbounds i32, i32* %674, i64 9
  %754 = load i1, i1* %out.5
  %755 = icmp slt i64 9, %N
  %756 = bitcast i64* %shadow to i32*
  %safe.951 = or i1 %754, %755
  %select.ptr.952 = select i1 %safe.951, i32* %753, i32* %756
  %757 = load i32, i32* %select.ptr.952, align 4
  %758 = xor i32 %752, %757
  %759 = getelementptr inbounds i32, i32* %674, i64 10
  %760 = load i1, i1* %out.5
  %761 = icmp slt i64 10, %N
  %762 = bitcast i64* %shadow to i32*
  %safe.953 = or i1 %760, %761
  %select.ptr.954 = select i1 %safe.953, i32* %759, i32* %762
  %763 = load i32, i32* %759
  %select.val.955 = select i1 %760, i32 %758, i32 %763
  store i32 %select.val.955, i32* %select.ptr.954, align 4
  %764 = getelementptr inbounds i32, i32* %674, i64 3
  %765 = load i1, i1* %out.5
  %766 = icmp slt i64 3, %N
  %767 = bitcast i64* %shadow to i32*
  %safe.956 = or i1 %765, %766
  %select.ptr.957 = select i1 %safe.956, i32* %764, i32* %767
  %768 = load i32, i32* %select.ptr.957, align 4
  %769 = getelementptr inbounds i32, i32* %674, i64 10
  %770 = load i1, i1* %out.5
  %771 = icmp slt i64 10, %N
  %772 = bitcast i64* %shadow to i32*
  %safe.958 = or i1 %770, %771
  %select.ptr.959 = select i1 %safe.958, i32* %769, i32* %772
  %773 = load i32, i32* %select.ptr.959, align 4
  %774 = xor i32 %768, %773
  %775 = getelementptr inbounds i32, i32* %674, i64 11
  %776 = load i1, i1* %out.5
  %777 = icmp slt i64 11, %N
  %778 = bitcast i64* %shadow to i32*
  %safe.960 = or i1 %776, %777
  %select.ptr.961 = select i1 %safe.960, i32* %775, i32* %778
  %779 = load i32, i32* %775
  %select.val.962 = select i1 %776, i32 %774, i32 %779
  store i32 %select.val.962, i32* %select.ptr.961, align 4
  %780 = getelementptr inbounds i32, i32* %674, i64 11
  %781 = load i1, i1* %out.5
  %782 = icmp slt i64 11, %N
  %783 = bitcast i64* %shadow to i32*
  %safe.963 = or i1 %781, %782
  %select.ptr.964 = select i1 %safe.963, i32* %780, i32* %783
  %784 = load i32, i32* %select.ptr.964, align 4
  %785 = getelementptr inbounds i32, i32* %674, i64 4
  %786 = load i1, i1* %out.5
  %787 = icmp slt i64 4, %N
  %788 = bitcast i64* %shadow to i32*
  %safe.965 = or i1 %786, %787
  %select.ptr.966 = select i1 %safe.965, i32* %785, i32* %788
  %789 = load i32, i32* %select.ptr.966, align 4
  %790 = lshr i32 %784, 24
  %791 = zext i32 %790 to i64
  %792 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %791
  %793 = load i1, i1* %out.5
  %794 = sext i32 256 to i64
  %795 = icmp slt i64 %791, %794
  %796 = bitcast i64* %shadow to i32*
  %safe.967 = or i1 %793, %795
  %select.ptr.968 = select i1 %safe.967, i32* %792, i32* %796
  %797 = load i32, i32* %select.ptr.968, align 4
  %798 = and i32 %797, -16777216
  %799 = xor i32 %789, %798
  %800 = lshr i32 %784, 16
  %801 = and i32 %800, 255
  %802 = zext i32 %801 to i64
  %803 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %802
  %804 = load i1, i1* %out.5
  %805 = sext i32 256 to i64
  %806 = icmp slt i64 %802, %805
  %807 = bitcast i64* %shadow to i32*
  %safe.969 = or i1 %804, %806
  %select.ptr.970 = select i1 %safe.969, i32* %803, i32* %807
  %808 = load i32, i32* %select.ptr.970, align 4
  %809 = and i32 %808, 16711680
  %810 = xor i32 %799, %809
  %811 = lshr i32 %784, 8
  %812 = and i32 %811, 255
  %813 = zext i32 %812 to i64
  %814 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %813
  %815 = load i1, i1* %out.5
  %816 = sext i32 256 to i64
  %817 = icmp slt i64 %813, %816
  %818 = bitcast i64* %shadow to i32*
  %safe.971 = or i1 %815, %817
  %select.ptr.972 = select i1 %safe.971, i32* %814, i32* %818
  %819 = load i32, i32* %select.ptr.972, align 4
  %820 = and i32 %819, 65280
  %821 = xor i32 %810, %820
  %822 = and i32 %784, 255
  %823 = zext i32 %822 to i64
  %824 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %823
  %825 = load i1, i1* %out.5
  %826 = sext i32 256 to i64
  %827 = icmp slt i64 %823, %826
  %828 = bitcast i64* %shadow to i32*
  %safe.973 = or i1 %825, %827
  %select.ptr.974 = select i1 %safe.973, i32* %824, i32* %828
  %829 = load i32, i32* %select.ptr.974, align 4
  %830 = and i32 %829, 255
  %831 = xor i32 %821, %830
  %832 = getelementptr inbounds i32, i32* %674, i64 12
  %833 = load i1, i1* %out.5
  %834 = icmp slt i64 12, %N
  %835 = bitcast i64* %shadow to i32*
  %safe.975 = or i1 %833, %834
  %select.ptr.976 = select i1 %safe.975, i32* %832, i32* %835
  %836 = load i32, i32* %832
  %select.val.977 = select i1 %833, i32 %831, i32 %836
  store i32 %select.val.977, i32* %select.ptr.976, align 4
  %837 = getelementptr inbounds i32, i32* %674, i64 5
  %838 = load i1, i1* %out.5
  %839 = icmp slt i64 5, %N
  %840 = bitcast i64* %shadow to i32*
  %safe.978 = or i1 %838, %839
  %select.ptr.979 = select i1 %safe.978, i32* %837, i32* %840
  %841 = load i32, i32* %select.ptr.979, align 4
  %842 = getelementptr inbounds i32, i32* %674, i64 12
  %843 = load i1, i1* %out.5
  %844 = icmp slt i64 12, %N
  %845 = bitcast i64* %shadow to i32*
  %safe.980 = or i1 %843, %844
  %select.ptr.981 = select i1 %safe.980, i32* %842, i32* %845
  %846 = load i32, i32* %select.ptr.981, align 4
  %847 = xor i32 %841, %846
  %848 = getelementptr inbounds i32, i32* %674, i64 13
  %849 = load i1, i1* %out.5
  %850 = icmp slt i64 13, %N
  %851 = bitcast i64* %shadow to i32*
  %safe.982 = or i1 %849, %850
  %select.ptr.983 = select i1 %safe.982, i32* %848, i32* %851
  %852 = load i32, i32* %848
  %select.val.984 = select i1 %849, i32 %847, i32 %852
  store i32 %select.val.984, i32* %select.ptr.983, align 4
  %853 = getelementptr inbounds i32, i32* %674, i64 6
  %854 = load i1, i1* %out.5
  %855 = icmp slt i64 6, %N
  %856 = bitcast i64* %shadow to i32*
  %safe.985 = or i1 %854, %855
  %select.ptr.986 = select i1 %safe.985, i32* %853, i32* %856
  %857 = load i32, i32* %select.ptr.986, align 4
  %858 = getelementptr inbounds i32, i32* %674, i64 13
  %859 = load i1, i1* %out.5
  %860 = icmp slt i64 13, %N
  %861 = bitcast i64* %shadow to i32*
  %safe.987 = or i1 %859, %860
  %select.ptr.988 = select i1 %safe.987, i32* %858, i32* %861
  %862 = load i32, i32* %select.ptr.988, align 4
  %863 = xor i32 %857, %862
  %864 = getelementptr inbounds i32, i32* %674, i64 14
  %865 = load i1, i1* %out.5
  %866 = icmp slt i64 14, %N
  %867 = bitcast i64* %shadow to i32*
  %safe.989 = or i1 %865, %866
  %select.ptr.990 = select i1 %safe.989, i32* %864, i32* %867
  %868 = load i32, i32* %864
  %select.val.991 = select i1 %865, i32 %863, i32 %868
  store i32 %select.val.991, i32* %select.ptr.990, align 4
  %869 = getelementptr inbounds i32, i32* %674, i64 7
  %870 = load i1, i1* %out.5
  %871 = icmp slt i64 7, %N
  %872 = bitcast i64* %shadow to i32*
  %safe.992 = or i1 %870, %871
  %select.ptr.993 = select i1 %safe.992, i32* %869, i32* %872
  %873 = load i32, i32* %select.ptr.993, align 4
  %874 = getelementptr inbounds i32, i32* %674, i64 14
  %875 = load i1, i1* %out.5
  %876 = icmp slt i64 14, %N
  %877 = bitcast i64* %shadow to i32*
  %safe.994 = or i1 %875, %876
  %select.ptr.995 = select i1 %safe.994, i32* %874, i32* %877
  %878 = load i32, i32* %select.ptr.995, align 4
  %879 = xor i32 %873, %878
  %880 = getelementptr inbounds i32, i32* %674, i64 15
  %881 = load i1, i1* %out.5
  %882 = icmp slt i64 15, %N
  %883 = bitcast i64* %shadow to i32*
  %safe.996 = or i1 %881, %882
  %select.ptr.997 = select i1 %safe.996, i32* %880, i32* %883
  %884 = load i32, i32* %880
  %select.val.998 = select i1 %881, i32 %879, i32 %884
  store i32 %select.val.998, i32* %select.ptr.997, align 4
  %885 = getelementptr inbounds i32, i32* %674, i64 8
  %886 = getelementptr inbounds i32, i32* %885, i64 7
  %887 = load i1, i1* %out.5
  %888 = icmp slt i64 7, %N
  %889 = bitcast i64* %shadow to i32*
  %safe.999 = or i1 %887, %888
  %select.ptr.1000 = select i1 %safe.999, i32* %886, i32* %889
  %890 = load i32, i32* %select.ptr.1000, align 4
  %891 = load i1, i1* %out.5
  %892 = icmp slt i64 8, %N
  %893 = bitcast i64* %shadow to i32*
  %safe.1001 = or i1 %891, %892
  %select.ptr.1002 = select i1 %safe.1001, i32* %885, i32* %893
  %894 = load i32, i32* %select.ptr.1002, align 4
  %895 = lshr i32 %890, 16
  %896 = and i32 %895, 255
  %897 = zext i32 %896 to i64
  %898 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %897
  %899 = load i1, i1* %out.5
  %900 = sext i32 256 to i64
  %901 = icmp slt i64 %897, %900
  %902 = bitcast i64* %shadow to i32*
  %safe.1003 = or i1 %899, %901
  %select.ptr.1004 = select i1 %safe.1003, i32* %898, i32* %902
  %903 = load i32, i32* %select.ptr.1004, align 4
  %904 = and i32 %903, -16777216
  %905 = xor i32 %894, %904
  %906 = lshr i32 %890, 8
  %907 = and i32 %906, 255
  %908 = zext i32 %907 to i64
  %909 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %908
  %910 = load i1, i1* %out.5
  %911 = sext i32 256 to i64
  %912 = icmp slt i64 %908, %911
  %913 = bitcast i64* %shadow to i32*
  %safe.1005 = or i1 %910, %912
  %select.ptr.1006 = select i1 %safe.1005, i32* %909, i32* %913
  %914 = load i32, i32* %select.ptr.1006, align 4
  %915 = and i32 %914, 16711680
  %916 = xor i32 %905, %915
  %917 = and i32 %890, 255
  %918 = zext i32 %917 to i64
  %919 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %918
  %920 = load i1, i1* %out.5
  %921 = sext i32 256 to i64
  %922 = icmp slt i64 %918, %921
  %923 = bitcast i64* %shadow to i32*
  %safe.1007 = or i1 %920, %922
  %select.ptr.1008 = select i1 %safe.1007, i32* %919, i32* %923
  %924 = load i32, i32* %select.ptr.1008, align 4
  %925 = and i32 %924, 65280
  %926 = xor i32 %916, %925
  %927 = lshr i32 %890, 24
  %928 = zext i32 %927 to i64
  %929 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %928
  %930 = load i1, i1* %out.5
  %931 = sext i32 256 to i64
  %932 = icmp slt i64 %928, %931
  %933 = bitcast i64* %shadow to i32*
  %safe.1009 = or i1 %930, %932
  %select.ptr.1010 = select i1 %safe.1009, i32* %929, i32* %933
  %934 = load i32, i32* %select.ptr.1010, align 4
  %935 = and i32 %934, 255
  %936 = xor i32 %926, %935
  %937 = xor i32 %936, 134217728
  %938 = getelementptr inbounds i32, i32* %885, i64 8
  %939 = load i1, i1* %out.5
  %940 = icmp slt i64 8, %N
  %941 = bitcast i64* %shadow to i32*
  %safe.1011 = or i1 %939, %940
  %select.ptr.1012 = select i1 %safe.1011, i32* %938, i32* %941
  %942 = load i32, i32* %938
  %select.val.1013 = select i1 %939, i32 %937, i32 %942
  store i32 %select.val.1013, i32* %select.ptr.1012, align 4
  %943 = getelementptr inbounds i32, i32* %885, i64 1
  %944 = load i1, i1* %out.5
  %945 = icmp slt i64 1, %N
  %946 = bitcast i64* %shadow to i32*
  %safe.1014 = or i1 %944, %945
  %select.ptr.1015 = select i1 %safe.1014, i32* %943, i32* %946
  %947 = load i32, i32* %select.ptr.1015, align 4
  %948 = getelementptr inbounds i32, i32* %885, i64 8
  %949 = load i1, i1* %out.5
  %950 = icmp slt i64 8, %N
  %951 = bitcast i64* %shadow to i32*
  %safe.1016 = or i1 %949, %950
  %select.ptr.1017 = select i1 %safe.1016, i32* %948, i32* %951
  %952 = load i32, i32* %select.ptr.1017, align 4
  %953 = xor i32 %947, %952
  %954 = getelementptr inbounds i32, i32* %885, i64 9
  %955 = load i1, i1* %out.5
  %956 = icmp slt i64 9, %N
  %957 = bitcast i64* %shadow to i32*
  %safe.1018 = or i1 %955, %956
  %select.ptr.1019 = select i1 %safe.1018, i32* %954, i32* %957
  %958 = load i32, i32* %954
  %select.val.1020 = select i1 %955, i32 %953, i32 %958
  store i32 %select.val.1020, i32* %select.ptr.1019, align 4
  %959 = getelementptr inbounds i32, i32* %885, i64 2
  %960 = load i1, i1* %out.5
  %961 = icmp slt i64 2, %N
  %962 = bitcast i64* %shadow to i32*
  %safe.1021 = or i1 %960, %961
  %select.ptr.1022 = select i1 %safe.1021, i32* %959, i32* %962
  %963 = load i32, i32* %select.ptr.1022, align 4
  %964 = getelementptr inbounds i32, i32* %885, i64 9
  %965 = load i1, i1* %out.5
  %966 = icmp slt i64 9, %N
  %967 = bitcast i64* %shadow to i32*
  %safe.1023 = or i1 %965, %966
  %select.ptr.1024 = select i1 %safe.1023, i32* %964, i32* %967
  %968 = load i32, i32* %select.ptr.1024, align 4
  %969 = xor i32 %963, %968
  %970 = getelementptr inbounds i32, i32* %885, i64 10
  %971 = load i1, i1* %out.5
  %972 = icmp slt i64 10, %N
  %973 = bitcast i64* %shadow to i32*
  %safe.1025 = or i1 %971, %972
  %select.ptr.1026 = select i1 %safe.1025, i32* %970, i32* %973
  %974 = load i32, i32* %970
  %select.val.1027 = select i1 %971, i32 %969, i32 %974
  store i32 %select.val.1027, i32* %select.ptr.1026, align 4
  %975 = getelementptr inbounds i32, i32* %885, i64 3
  %976 = load i1, i1* %out.5
  %977 = icmp slt i64 3, %N
  %978 = bitcast i64* %shadow to i32*
  %safe.1028 = or i1 %976, %977
  %select.ptr.1029 = select i1 %safe.1028, i32* %975, i32* %978
  %979 = load i32, i32* %select.ptr.1029, align 4
  %980 = getelementptr inbounds i32, i32* %885, i64 10
  %981 = load i1, i1* %out.5
  %982 = icmp slt i64 10, %N
  %983 = bitcast i64* %shadow to i32*
  %safe.1030 = or i1 %981, %982
  %select.ptr.1031 = select i1 %safe.1030, i32* %980, i32* %983
  %984 = load i32, i32* %select.ptr.1031, align 4
  %985 = xor i32 %979, %984
  %986 = getelementptr inbounds i32, i32* %885, i64 11
  %987 = load i1, i1* %out.5
  %988 = icmp slt i64 11, %N
  %989 = bitcast i64* %shadow to i32*
  %safe.1032 = or i1 %987, %988
  %select.ptr.1033 = select i1 %safe.1032, i32* %986, i32* %989
  %990 = load i32, i32* %986
  %select.val.1034 = select i1 %987, i32 %985, i32 %990
  store i32 %select.val.1034, i32* %select.ptr.1033, align 4
  %991 = getelementptr inbounds i32, i32* %885, i64 11
  %992 = load i1, i1* %out.5
  %993 = icmp slt i64 11, %N
  %994 = bitcast i64* %shadow to i32*
  %safe.1035 = or i1 %992, %993
  %select.ptr.1036 = select i1 %safe.1035, i32* %991, i32* %994
  %995 = load i32, i32* %select.ptr.1036, align 4
  %996 = getelementptr inbounds i32, i32* %885, i64 4
  %997 = load i1, i1* %out.5
  %998 = icmp slt i64 4, %N
  %999 = bitcast i64* %shadow to i32*
  %safe.1037 = or i1 %997, %998
  %select.ptr.1038 = select i1 %safe.1037, i32* %996, i32* %999
  %1000 = load i32, i32* %select.ptr.1038, align 4
  %1001 = lshr i32 %995, 24
  %1002 = zext i32 %1001 to i64
  %1003 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1002
  %1004 = load i1, i1* %out.5
  %1005 = sext i32 256 to i64
  %1006 = icmp slt i64 %1002, %1005
  %1007 = bitcast i64* %shadow to i32*
  %safe.1039 = or i1 %1004, %1006
  %select.ptr.1040 = select i1 %safe.1039, i32* %1003, i32* %1007
  %1008 = load i32, i32* %select.ptr.1040, align 4
  %1009 = and i32 %1008, -16777216
  %1010 = xor i32 %1000, %1009
  %1011 = lshr i32 %995, 16
  %1012 = and i32 %1011, 255
  %1013 = zext i32 %1012 to i64
  %1014 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1013
  %1015 = load i1, i1* %out.5
  %1016 = sext i32 256 to i64
  %1017 = icmp slt i64 %1013, %1016
  %1018 = bitcast i64* %shadow to i32*
  %safe.1041 = or i1 %1015, %1017
  %select.ptr.1042 = select i1 %safe.1041, i32* %1014, i32* %1018
  %1019 = load i32, i32* %select.ptr.1042, align 4
  %1020 = and i32 %1019, 16711680
  %1021 = xor i32 %1010, %1020
  %1022 = lshr i32 %995, 8
  %1023 = and i32 %1022, 255
  %1024 = zext i32 %1023 to i64
  %1025 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1024
  %1026 = load i1, i1* %out.5
  %1027 = sext i32 256 to i64
  %1028 = icmp slt i64 %1024, %1027
  %1029 = bitcast i64* %shadow to i32*
  %safe.1043 = or i1 %1026, %1028
  %select.ptr.1044 = select i1 %safe.1043, i32* %1025, i32* %1029
  %1030 = load i32, i32* %select.ptr.1044, align 4
  %1031 = and i32 %1030, 65280
  %1032 = xor i32 %1021, %1031
  %1033 = and i32 %995, 255
  %1034 = zext i32 %1033 to i64
  %1035 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1034
  %1036 = load i1, i1* %out.5
  %1037 = sext i32 256 to i64
  %1038 = icmp slt i64 %1034, %1037
  %1039 = bitcast i64* %shadow to i32*
  %safe.1045 = or i1 %1036, %1038
  %select.ptr.1046 = select i1 %safe.1045, i32* %1035, i32* %1039
  %1040 = load i32, i32* %select.ptr.1046, align 4
  %1041 = and i32 %1040, 255
  %1042 = xor i32 %1032, %1041
  %1043 = getelementptr inbounds i32, i32* %885, i64 12
  %1044 = load i1, i1* %out.5
  %1045 = icmp slt i64 12, %N
  %1046 = bitcast i64* %shadow to i32*
  %safe.1047 = or i1 %1044, %1045
  %select.ptr.1048 = select i1 %safe.1047, i32* %1043, i32* %1046
  %1047 = load i32, i32* %1043
  %select.val.1049 = select i1 %1044, i32 %1042, i32 %1047
  store i32 %select.val.1049, i32* %select.ptr.1048, align 4
  %1048 = getelementptr inbounds i32, i32* %885, i64 5
  %1049 = load i1, i1* %out.5
  %1050 = icmp slt i64 5, %N
  %1051 = bitcast i64* %shadow to i32*
  %safe.1050 = or i1 %1049, %1050
  %select.ptr.1051 = select i1 %safe.1050, i32* %1048, i32* %1051
  %1052 = load i32, i32* %select.ptr.1051, align 4
  %1053 = getelementptr inbounds i32, i32* %885, i64 12
  %1054 = load i1, i1* %out.5
  %1055 = icmp slt i64 12, %N
  %1056 = bitcast i64* %shadow to i32*
  %safe.1052 = or i1 %1054, %1055
  %select.ptr.1053 = select i1 %safe.1052, i32* %1053, i32* %1056
  %1057 = load i32, i32* %select.ptr.1053, align 4
  %1058 = xor i32 %1052, %1057
  %1059 = getelementptr inbounds i32, i32* %885, i64 13
  %1060 = load i1, i1* %out.5
  %1061 = icmp slt i64 13, %N
  %1062 = bitcast i64* %shadow to i32*
  %safe.1054 = or i1 %1060, %1061
  %select.ptr.1055 = select i1 %safe.1054, i32* %1059, i32* %1062
  %1063 = load i32, i32* %1059
  %select.val.1056 = select i1 %1060, i32 %1058, i32 %1063
  store i32 %select.val.1056, i32* %select.ptr.1055, align 4
  %1064 = getelementptr inbounds i32, i32* %885, i64 6
  %1065 = load i1, i1* %out.5
  %1066 = icmp slt i64 6, %N
  %1067 = bitcast i64* %shadow to i32*
  %safe.1057 = or i1 %1065, %1066
  %select.ptr.1058 = select i1 %safe.1057, i32* %1064, i32* %1067
  %1068 = load i32, i32* %select.ptr.1058, align 4
  %1069 = getelementptr inbounds i32, i32* %885, i64 13
  %1070 = load i1, i1* %out.5
  %1071 = icmp slt i64 13, %N
  %1072 = bitcast i64* %shadow to i32*
  %safe.1059 = or i1 %1070, %1071
  %select.ptr.1060 = select i1 %safe.1059, i32* %1069, i32* %1072
  %1073 = load i32, i32* %select.ptr.1060, align 4
  %1074 = xor i32 %1068, %1073
  %1075 = getelementptr inbounds i32, i32* %885, i64 14
  %1076 = load i1, i1* %out.5
  %1077 = icmp slt i64 14, %N
  %1078 = bitcast i64* %shadow to i32*
  %safe.1061 = or i1 %1076, %1077
  %select.ptr.1062 = select i1 %safe.1061, i32* %1075, i32* %1078
  %1079 = load i32, i32* %1075
  %select.val.1063 = select i1 %1076, i32 %1074, i32 %1079
  store i32 %select.val.1063, i32* %select.ptr.1062, align 4
  %1080 = getelementptr inbounds i32, i32* %885, i64 7
  %1081 = load i1, i1* %out.5
  %1082 = icmp slt i64 7, %N
  %1083 = bitcast i64* %shadow to i32*
  %safe.1064 = or i1 %1081, %1082
  %select.ptr.1065 = select i1 %safe.1064, i32* %1080, i32* %1083
  %1084 = load i32, i32* %select.ptr.1065, align 4
  %1085 = getelementptr inbounds i32, i32* %885, i64 14
  %1086 = load i1, i1* %out.5
  %1087 = icmp slt i64 14, %N
  %1088 = bitcast i64* %shadow to i32*
  %safe.1066 = or i1 %1086, %1087
  %select.ptr.1067 = select i1 %safe.1066, i32* %1085, i32* %1088
  %1089 = load i32, i32* %select.ptr.1067, align 4
  %1090 = xor i32 %1084, %1089
  %1091 = getelementptr inbounds i32, i32* %885, i64 15
  %1092 = load i1, i1* %out.5
  %1093 = icmp slt i64 15, %N
  %1094 = bitcast i64* %shadow to i32*
  %safe.1068 = or i1 %1092, %1093
  %select.ptr.1069 = select i1 %safe.1068, i32* %1091, i32* %1094
  %1095 = load i32, i32* %1091
  %select.val.1070 = select i1 %1092, i32 %1090, i32 %1095
  store i32 %select.val.1070, i32* %select.ptr.1069, align 4
  %1096 = getelementptr inbounds i32, i32* %885, i64 8
  %1097 = getelementptr inbounds i32, i32* %1096, i64 7
  %1098 = load i1, i1* %out.5
  %1099 = icmp slt i64 7, %N
  %1100 = bitcast i64* %shadow to i32*
  %safe.1071 = or i1 %1098, %1099
  %select.ptr.1072 = select i1 %safe.1071, i32* %1097, i32* %1100
  %1101 = load i32, i32* %select.ptr.1072, align 4
  %1102 = load i1, i1* %out.5
  %1103 = icmp slt i64 8, %N
  %1104 = bitcast i64* %shadow to i32*
  %safe.1073 = or i1 %1102, %1103
  %select.ptr.1074 = select i1 %safe.1073, i32* %1096, i32* %1104
  %1105 = load i32, i32* %select.ptr.1074, align 4
  %1106 = lshr i32 %1101, 16
  %1107 = and i32 %1106, 255
  %1108 = zext i32 %1107 to i64
  %1109 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1108
  %1110 = load i1, i1* %out.5
  %1111 = sext i32 256 to i64
  %1112 = icmp slt i64 %1108, %1111
  %1113 = bitcast i64* %shadow to i32*
  %safe.1075 = or i1 %1110, %1112
  %select.ptr.1076 = select i1 %safe.1075, i32* %1109, i32* %1113
  %1114 = load i32, i32* %select.ptr.1076, align 4
  %1115 = and i32 %1114, -16777216
  %1116 = xor i32 %1105, %1115
  %1117 = lshr i32 %1101, 8
  %1118 = and i32 %1117, 255
  %1119 = zext i32 %1118 to i64
  %1120 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1119
  %1121 = load i1, i1* %out.5
  %1122 = sext i32 256 to i64
  %1123 = icmp slt i64 %1119, %1122
  %1124 = bitcast i64* %shadow to i32*
  %safe.1077 = or i1 %1121, %1123
  %select.ptr.1078 = select i1 %safe.1077, i32* %1120, i32* %1124
  %1125 = load i32, i32* %select.ptr.1078, align 4
  %1126 = and i32 %1125, 16711680
  %1127 = xor i32 %1116, %1126
  %1128 = and i32 %1101, 255
  %1129 = zext i32 %1128 to i64
  %1130 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1129
  %1131 = load i1, i1* %out.5
  %1132 = sext i32 256 to i64
  %1133 = icmp slt i64 %1129, %1132
  %1134 = bitcast i64* %shadow to i32*
  %safe.1079 = or i1 %1131, %1133
  %select.ptr.1080 = select i1 %safe.1079, i32* %1130, i32* %1134
  %1135 = load i32, i32* %select.ptr.1080, align 4
  %1136 = and i32 %1135, 65280
  %1137 = xor i32 %1127, %1136
  %1138 = lshr i32 %1101, 24
  %1139 = zext i32 %1138 to i64
  %1140 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1139
  %1141 = load i1, i1* %out.5
  %1142 = sext i32 256 to i64
  %1143 = icmp slt i64 %1139, %1142
  %1144 = bitcast i64* %shadow to i32*
  %safe.1081 = or i1 %1141, %1143
  %select.ptr.1082 = select i1 %safe.1081, i32* %1140, i32* %1144
  %1145 = load i32, i32* %select.ptr.1082, align 4
  %1146 = and i32 %1145, 255
  %1147 = xor i32 %1137, %1146
  %1148 = xor i32 %1147, 268435456
  %1149 = getelementptr inbounds i32, i32* %1096, i64 8
  %1150 = load i1, i1* %out.5
  %1151 = icmp slt i64 8, %N
  %1152 = bitcast i64* %shadow to i32*
  %safe.1083 = or i1 %1150, %1151
  %select.ptr.1084 = select i1 %safe.1083, i32* %1149, i32* %1152
  %1153 = load i32, i32* %1149
  %select.val.1085 = select i1 %1150, i32 %1148, i32 %1153
  store i32 %select.val.1085, i32* %select.ptr.1084, align 4
  %1154 = getelementptr inbounds i32, i32* %1096, i64 1
  %1155 = load i1, i1* %out.5
  %1156 = icmp slt i64 1, %N
  %1157 = bitcast i64* %shadow to i32*
  %safe.1086 = or i1 %1155, %1156
  %select.ptr.1087 = select i1 %safe.1086, i32* %1154, i32* %1157
  %1158 = load i32, i32* %select.ptr.1087, align 4
  %1159 = getelementptr inbounds i32, i32* %1096, i64 8
  %1160 = load i1, i1* %out.5
  %1161 = icmp slt i64 8, %N
  %1162 = bitcast i64* %shadow to i32*
  %safe.1088 = or i1 %1160, %1161
  %select.ptr.1089 = select i1 %safe.1088, i32* %1159, i32* %1162
  %1163 = load i32, i32* %select.ptr.1089, align 4
  %1164 = xor i32 %1158, %1163
  %1165 = getelementptr inbounds i32, i32* %1096, i64 9
  %1166 = load i1, i1* %out.5
  %1167 = icmp slt i64 9, %N
  %1168 = bitcast i64* %shadow to i32*
  %safe.1090 = or i1 %1166, %1167
  %select.ptr.1091 = select i1 %safe.1090, i32* %1165, i32* %1168
  %1169 = load i32, i32* %1165
  %select.val.1092 = select i1 %1166, i32 %1164, i32 %1169
  store i32 %select.val.1092, i32* %select.ptr.1091, align 4
  %1170 = getelementptr inbounds i32, i32* %1096, i64 2
  %1171 = load i1, i1* %out.5
  %1172 = icmp slt i64 2, %N
  %1173 = bitcast i64* %shadow to i32*
  %safe.1093 = or i1 %1171, %1172
  %select.ptr.1094 = select i1 %safe.1093, i32* %1170, i32* %1173
  %1174 = load i32, i32* %select.ptr.1094, align 4
  %1175 = getelementptr inbounds i32, i32* %1096, i64 9
  %1176 = load i1, i1* %out.5
  %1177 = icmp slt i64 9, %N
  %1178 = bitcast i64* %shadow to i32*
  %safe.1095 = or i1 %1176, %1177
  %select.ptr.1096 = select i1 %safe.1095, i32* %1175, i32* %1178
  %1179 = load i32, i32* %select.ptr.1096, align 4
  %1180 = xor i32 %1174, %1179
  %1181 = getelementptr inbounds i32, i32* %1096, i64 10
  %1182 = load i1, i1* %out.5
  %1183 = icmp slt i64 10, %N
  %1184 = bitcast i64* %shadow to i32*
  %safe.1097 = or i1 %1182, %1183
  %select.ptr.1098 = select i1 %safe.1097, i32* %1181, i32* %1184
  %1185 = load i32, i32* %1181
  %select.val.1099 = select i1 %1182, i32 %1180, i32 %1185
  store i32 %select.val.1099, i32* %select.ptr.1098, align 4
  %1186 = getelementptr inbounds i32, i32* %1096, i64 3
  %1187 = load i1, i1* %out.5
  %1188 = icmp slt i64 3, %N
  %1189 = bitcast i64* %shadow to i32*
  %safe.1100 = or i1 %1187, %1188
  %select.ptr.1101 = select i1 %safe.1100, i32* %1186, i32* %1189
  %1190 = load i32, i32* %select.ptr.1101, align 4
  %1191 = getelementptr inbounds i32, i32* %1096, i64 10
  %1192 = load i1, i1* %out.5
  %1193 = icmp slt i64 10, %N
  %1194 = bitcast i64* %shadow to i32*
  %safe.1102 = or i1 %1192, %1193
  %select.ptr.1103 = select i1 %safe.1102, i32* %1191, i32* %1194
  %1195 = load i32, i32* %select.ptr.1103, align 4
  %1196 = xor i32 %1190, %1195
  %1197 = getelementptr inbounds i32, i32* %1096, i64 11
  %1198 = load i1, i1* %out.5
  %1199 = icmp slt i64 11, %N
  %1200 = bitcast i64* %shadow to i32*
  %safe.1104 = or i1 %1198, %1199
  %select.ptr.1105 = select i1 %safe.1104, i32* %1197, i32* %1200
  %1201 = load i32, i32* %1197
  %select.val.1106 = select i1 %1198, i32 %1196, i32 %1201
  store i32 %select.val.1106, i32* %select.ptr.1105, align 4
  %1202 = getelementptr inbounds i32, i32* %1096, i64 11
  %1203 = load i1, i1* %out.5
  %1204 = icmp slt i64 11, %N
  %1205 = bitcast i64* %shadow to i32*
  %safe.1107 = or i1 %1203, %1204
  %select.ptr.1108 = select i1 %safe.1107, i32* %1202, i32* %1205
  %1206 = load i32, i32* %select.ptr.1108, align 4
  %1207 = getelementptr inbounds i32, i32* %1096, i64 4
  %1208 = load i1, i1* %out.5
  %1209 = icmp slt i64 4, %N
  %1210 = bitcast i64* %shadow to i32*
  %safe.1109 = or i1 %1208, %1209
  %select.ptr.1110 = select i1 %safe.1109, i32* %1207, i32* %1210
  %1211 = load i32, i32* %select.ptr.1110, align 4
  %1212 = lshr i32 %1206, 24
  %1213 = zext i32 %1212 to i64
  %1214 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1213
  %1215 = load i1, i1* %out.5
  %1216 = sext i32 256 to i64
  %1217 = icmp slt i64 %1213, %1216
  %1218 = bitcast i64* %shadow to i32*
  %safe.1111 = or i1 %1215, %1217
  %select.ptr.1112 = select i1 %safe.1111, i32* %1214, i32* %1218
  %1219 = load i32, i32* %select.ptr.1112, align 4
  %1220 = and i32 %1219, -16777216
  %1221 = xor i32 %1211, %1220
  %1222 = lshr i32 %1206, 16
  %1223 = and i32 %1222, 255
  %1224 = zext i32 %1223 to i64
  %1225 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1224
  %1226 = load i1, i1* %out.5
  %1227 = sext i32 256 to i64
  %1228 = icmp slt i64 %1224, %1227
  %1229 = bitcast i64* %shadow to i32*
  %safe.1113 = or i1 %1226, %1228
  %select.ptr.1114 = select i1 %safe.1113, i32* %1225, i32* %1229
  %1230 = load i32, i32* %select.ptr.1114, align 4
  %1231 = and i32 %1230, 16711680
  %1232 = xor i32 %1221, %1231
  %1233 = lshr i32 %1206, 8
  %1234 = and i32 %1233, 255
  %1235 = zext i32 %1234 to i64
  %1236 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1235
  %1237 = load i1, i1* %out.5
  %1238 = sext i32 256 to i64
  %1239 = icmp slt i64 %1235, %1238
  %1240 = bitcast i64* %shadow to i32*
  %safe.1115 = or i1 %1237, %1239
  %select.ptr.1116 = select i1 %safe.1115, i32* %1236, i32* %1240
  %1241 = load i32, i32* %select.ptr.1116, align 4
  %1242 = and i32 %1241, 65280
  %1243 = xor i32 %1232, %1242
  %1244 = and i32 %1206, 255
  %1245 = zext i32 %1244 to i64
  %1246 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1245
  %1247 = load i1, i1* %out.5
  %1248 = sext i32 256 to i64
  %1249 = icmp slt i64 %1245, %1248
  %1250 = bitcast i64* %shadow to i32*
  %safe.1117 = or i1 %1247, %1249
  %select.ptr.1118 = select i1 %safe.1117, i32* %1246, i32* %1250
  %1251 = load i32, i32* %select.ptr.1118, align 4
  %1252 = and i32 %1251, 255
  %1253 = xor i32 %1243, %1252
  %1254 = getelementptr inbounds i32, i32* %1096, i64 12
  %1255 = load i1, i1* %out.5
  %1256 = icmp slt i64 12, %N
  %1257 = bitcast i64* %shadow to i32*
  %safe.1119 = or i1 %1255, %1256
  %select.ptr.1120 = select i1 %safe.1119, i32* %1254, i32* %1257
  %1258 = load i32, i32* %1254
  %select.val.1121 = select i1 %1255, i32 %1253, i32 %1258
  store i32 %select.val.1121, i32* %select.ptr.1120, align 4
  %1259 = getelementptr inbounds i32, i32* %1096, i64 5
  %1260 = load i1, i1* %out.5
  %1261 = icmp slt i64 5, %N
  %1262 = bitcast i64* %shadow to i32*
  %safe.1122 = or i1 %1260, %1261
  %select.ptr.1123 = select i1 %safe.1122, i32* %1259, i32* %1262
  %1263 = load i32, i32* %select.ptr.1123, align 4
  %1264 = getelementptr inbounds i32, i32* %1096, i64 12
  %1265 = load i1, i1* %out.5
  %1266 = icmp slt i64 12, %N
  %1267 = bitcast i64* %shadow to i32*
  %safe.1124 = or i1 %1265, %1266
  %select.ptr.1125 = select i1 %safe.1124, i32* %1264, i32* %1267
  %1268 = load i32, i32* %select.ptr.1125, align 4
  %1269 = xor i32 %1263, %1268
  %1270 = getelementptr inbounds i32, i32* %1096, i64 13
  %1271 = load i1, i1* %out.5
  %1272 = icmp slt i64 13, %N
  %1273 = bitcast i64* %shadow to i32*
  %safe.1126 = or i1 %1271, %1272
  %select.ptr.1127 = select i1 %safe.1126, i32* %1270, i32* %1273
  %1274 = load i32, i32* %1270
  %select.val.1128 = select i1 %1271, i32 %1269, i32 %1274
  store i32 %select.val.1128, i32* %select.ptr.1127, align 4
  %1275 = getelementptr inbounds i32, i32* %1096, i64 6
  %1276 = load i1, i1* %out.5
  %1277 = icmp slt i64 6, %N
  %1278 = bitcast i64* %shadow to i32*
  %safe.1129 = or i1 %1276, %1277
  %select.ptr.1130 = select i1 %safe.1129, i32* %1275, i32* %1278
  %1279 = load i32, i32* %select.ptr.1130, align 4
  %1280 = getelementptr inbounds i32, i32* %1096, i64 13
  %1281 = load i1, i1* %out.5
  %1282 = icmp slt i64 13, %N
  %1283 = bitcast i64* %shadow to i32*
  %safe.1131 = or i1 %1281, %1282
  %select.ptr.1132 = select i1 %safe.1131, i32* %1280, i32* %1283
  %1284 = load i32, i32* %select.ptr.1132, align 4
  %1285 = xor i32 %1279, %1284
  %1286 = getelementptr inbounds i32, i32* %1096, i64 14
  %1287 = load i1, i1* %out.5
  %1288 = icmp slt i64 14, %N
  %1289 = bitcast i64* %shadow to i32*
  %safe.1133 = or i1 %1287, %1288
  %select.ptr.1134 = select i1 %safe.1133, i32* %1286, i32* %1289
  %1290 = load i32, i32* %1286
  %select.val.1135 = select i1 %1287, i32 %1285, i32 %1290
  store i32 %select.val.1135, i32* %select.ptr.1134, align 4
  %1291 = getelementptr inbounds i32, i32* %1096, i64 7
  %1292 = load i1, i1* %out.5
  %1293 = icmp slt i64 7, %N
  %1294 = bitcast i64* %shadow to i32*
  %safe.1136 = or i1 %1292, %1293
  %select.ptr.1137 = select i1 %safe.1136, i32* %1291, i32* %1294
  %1295 = load i32, i32* %select.ptr.1137, align 4
  %1296 = getelementptr inbounds i32, i32* %1096, i64 14
  %1297 = load i1, i1* %out.5
  %1298 = icmp slt i64 14, %N
  %1299 = bitcast i64* %shadow to i32*
  %safe.1138 = or i1 %1297, %1298
  %select.ptr.1139 = select i1 %safe.1138, i32* %1296, i32* %1299
  %1300 = load i32, i32* %select.ptr.1139, align 4
  %1301 = xor i32 %1295, %1300
  %1302 = getelementptr inbounds i32, i32* %1096, i64 15
  %1303 = load i1, i1* %out.5
  %1304 = icmp slt i64 15, %N
  %1305 = bitcast i64* %shadow to i32*
  %safe.1140 = or i1 %1303, %1304
  %select.ptr.1141 = select i1 %safe.1140, i32* %1302, i32* %1305
  %1306 = load i32, i32* %1302
  %select.val.1142 = select i1 %1303, i32 %1301, i32 %1306
  store i32 %select.val.1142, i32* %select.ptr.1141, align 4
  %1307 = getelementptr inbounds i32, i32* %1096, i64 8
  %1308 = getelementptr inbounds i32, i32* %1307, i64 7
  %1309 = load i1, i1* %out.5
  %1310 = icmp slt i64 7, %N
  %1311 = bitcast i64* %shadow to i32*
  %safe.1143 = or i1 %1309, %1310
  %select.ptr.1144 = select i1 %safe.1143, i32* %1308, i32* %1311
  %1312 = load i32, i32* %select.ptr.1144, align 4
  %1313 = load i1, i1* %out.5
  %1314 = icmp slt i64 8, %N
  %1315 = bitcast i64* %shadow to i32*
  %safe.1145 = or i1 %1313, %1314
  %select.ptr.1146 = select i1 %safe.1145, i32* %1307, i32* %1315
  %1316 = load i32, i32* %select.ptr.1146, align 4
  %1317 = lshr i32 %1312, 16
  %1318 = and i32 %1317, 255
  %1319 = zext i32 %1318 to i64
  %1320 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1319
  %1321 = load i1, i1* %out.5
  %1322 = sext i32 256 to i64
  %1323 = icmp slt i64 %1319, %1322
  %1324 = bitcast i64* %shadow to i32*
  %safe.1147 = or i1 %1321, %1323
  %select.ptr.1148 = select i1 %safe.1147, i32* %1320, i32* %1324
  %1325 = load i32, i32* %select.ptr.1148, align 4
  %1326 = and i32 %1325, -16777216
  %1327 = xor i32 %1316, %1326
  %1328 = lshr i32 %1312, 8
  %1329 = and i32 %1328, 255
  %1330 = zext i32 %1329 to i64
  %1331 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1330
  %1332 = load i1, i1* %out.5
  %1333 = sext i32 256 to i64
  %1334 = icmp slt i64 %1330, %1333
  %1335 = bitcast i64* %shadow to i32*
  %safe.1149 = or i1 %1332, %1334
  %select.ptr.1150 = select i1 %safe.1149, i32* %1331, i32* %1335
  %1336 = load i32, i32* %select.ptr.1150, align 4
  %1337 = and i32 %1336, 16711680
  %1338 = xor i32 %1327, %1337
  %1339 = and i32 %1312, 255
  %1340 = zext i32 %1339 to i64
  %1341 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1340
  %1342 = load i1, i1* %out.5
  %1343 = sext i32 256 to i64
  %1344 = icmp slt i64 %1340, %1343
  %1345 = bitcast i64* %shadow to i32*
  %safe.1151 = or i1 %1342, %1344
  %select.ptr.1152 = select i1 %safe.1151, i32* %1341, i32* %1345
  %1346 = load i32, i32* %select.ptr.1152, align 4
  %1347 = and i32 %1346, 65280
  %1348 = xor i32 %1338, %1347
  %1349 = lshr i32 %1312, 24
  %1350 = zext i32 %1349 to i64
  %1351 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1350
  %1352 = load i1, i1* %out.5
  %1353 = sext i32 256 to i64
  %1354 = icmp slt i64 %1350, %1353
  %1355 = bitcast i64* %shadow to i32*
  %safe.1153 = or i1 %1352, %1354
  %select.ptr.1154 = select i1 %safe.1153, i32* %1351, i32* %1355
  %1356 = load i32, i32* %select.ptr.1154, align 4
  %1357 = and i32 %1356, 255
  %1358 = xor i32 %1348, %1357
  %1359 = xor i32 %1358, 536870912
  %1360 = getelementptr inbounds i32, i32* %1307, i64 8
  %1361 = load i1, i1* %out.5
  %1362 = icmp slt i64 8, %N
  %1363 = bitcast i64* %shadow to i32*
  %safe.1155 = or i1 %1361, %1362
  %select.ptr.1156 = select i1 %safe.1155, i32* %1360, i32* %1363
  %1364 = load i32, i32* %1360
  %select.val.1157 = select i1 %1361, i32 %1359, i32 %1364
  store i32 %select.val.1157, i32* %select.ptr.1156, align 4
  %1365 = getelementptr inbounds i32, i32* %1307, i64 1
  %1366 = load i1, i1* %out.5
  %1367 = icmp slt i64 1, %N
  %1368 = bitcast i64* %shadow to i32*
  %safe.1158 = or i1 %1366, %1367
  %select.ptr.1159 = select i1 %safe.1158, i32* %1365, i32* %1368
  %1369 = load i32, i32* %select.ptr.1159, align 4
  %1370 = getelementptr inbounds i32, i32* %1307, i64 8
  %1371 = load i1, i1* %out.5
  %1372 = icmp slt i64 8, %N
  %1373 = bitcast i64* %shadow to i32*
  %safe.1160 = or i1 %1371, %1372
  %select.ptr.1161 = select i1 %safe.1160, i32* %1370, i32* %1373
  %1374 = load i32, i32* %select.ptr.1161, align 4
  %1375 = xor i32 %1369, %1374
  %1376 = getelementptr inbounds i32, i32* %1307, i64 9
  %1377 = load i1, i1* %out.5
  %1378 = icmp slt i64 9, %N
  %1379 = bitcast i64* %shadow to i32*
  %safe.1162 = or i1 %1377, %1378
  %select.ptr.1163 = select i1 %safe.1162, i32* %1376, i32* %1379
  %1380 = load i32, i32* %1376
  %select.val.1164 = select i1 %1377, i32 %1375, i32 %1380
  store i32 %select.val.1164, i32* %select.ptr.1163, align 4
  %1381 = getelementptr inbounds i32, i32* %1307, i64 2
  %1382 = load i1, i1* %out.5
  %1383 = icmp slt i64 2, %N
  %1384 = bitcast i64* %shadow to i32*
  %safe.1165 = or i1 %1382, %1383
  %select.ptr.1166 = select i1 %safe.1165, i32* %1381, i32* %1384
  %1385 = load i32, i32* %select.ptr.1166, align 4
  %1386 = getelementptr inbounds i32, i32* %1307, i64 9
  %1387 = load i1, i1* %out.5
  %1388 = icmp slt i64 9, %N
  %1389 = bitcast i64* %shadow to i32*
  %safe.1167 = or i1 %1387, %1388
  %select.ptr.1168 = select i1 %safe.1167, i32* %1386, i32* %1389
  %1390 = load i32, i32* %select.ptr.1168, align 4
  %1391 = xor i32 %1385, %1390
  %1392 = getelementptr inbounds i32, i32* %1307, i64 10
  %1393 = load i1, i1* %out.5
  %1394 = icmp slt i64 10, %N
  %1395 = bitcast i64* %shadow to i32*
  %safe.1169 = or i1 %1393, %1394
  %select.ptr.1170 = select i1 %safe.1169, i32* %1392, i32* %1395
  %1396 = load i32, i32* %1392
  %select.val.1171 = select i1 %1393, i32 %1391, i32 %1396
  store i32 %select.val.1171, i32* %select.ptr.1170, align 4
  %1397 = getelementptr inbounds i32, i32* %1307, i64 3
  %1398 = load i1, i1* %out.5
  %1399 = icmp slt i64 3, %N
  %1400 = bitcast i64* %shadow to i32*
  %safe.1172 = or i1 %1398, %1399
  %select.ptr.1173 = select i1 %safe.1172, i32* %1397, i32* %1400
  %1401 = load i32, i32* %select.ptr.1173, align 4
  %1402 = getelementptr inbounds i32, i32* %1307, i64 10
  %1403 = load i1, i1* %out.5
  %1404 = icmp slt i64 10, %N
  %1405 = bitcast i64* %shadow to i32*
  %safe.1174 = or i1 %1403, %1404
  %select.ptr.1175 = select i1 %safe.1174, i32* %1402, i32* %1405
  %1406 = load i32, i32* %select.ptr.1175, align 4
  %1407 = xor i32 %1401, %1406
  %1408 = getelementptr inbounds i32, i32* %1307, i64 11
  %1409 = load i1, i1* %out.5
  %1410 = icmp slt i64 11, %N
  %1411 = bitcast i64* %shadow to i32*
  %safe.1176 = or i1 %1409, %1410
  %select.ptr.1177 = select i1 %safe.1176, i32* %1408, i32* %1411
  %1412 = load i32, i32* %1408
  %select.val.1178 = select i1 %1409, i32 %1407, i32 %1412
  store i32 %select.val.1178, i32* %select.ptr.1177, align 4
  %1413 = getelementptr inbounds i32, i32* %1307, i64 11
  %1414 = load i1, i1* %out.5
  %1415 = icmp slt i64 11, %N
  %1416 = bitcast i64* %shadow to i32*
  %safe.1179 = or i1 %1414, %1415
  %select.ptr.1180 = select i1 %safe.1179, i32* %1413, i32* %1416
  %1417 = load i32, i32* %select.ptr.1180, align 4
  %1418 = getelementptr inbounds i32, i32* %1307, i64 4
  %1419 = load i1, i1* %out.5
  %1420 = icmp slt i64 4, %N
  %1421 = bitcast i64* %shadow to i32*
  %safe.1181 = or i1 %1419, %1420
  %select.ptr.1182 = select i1 %safe.1181, i32* %1418, i32* %1421
  %1422 = load i32, i32* %select.ptr.1182, align 4
  %1423 = lshr i32 %1417, 24
  %1424 = zext i32 %1423 to i64
  %1425 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1424
  %1426 = load i1, i1* %out.5
  %1427 = sext i32 256 to i64
  %1428 = icmp slt i64 %1424, %1427
  %1429 = bitcast i64* %shadow to i32*
  %safe.1183 = or i1 %1426, %1428
  %select.ptr.1184 = select i1 %safe.1183, i32* %1425, i32* %1429
  %1430 = load i32, i32* %select.ptr.1184, align 4
  %1431 = and i32 %1430, -16777216
  %1432 = xor i32 %1422, %1431
  %1433 = lshr i32 %1417, 16
  %1434 = and i32 %1433, 255
  %1435 = zext i32 %1434 to i64
  %1436 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1435
  %1437 = load i1, i1* %out.5
  %1438 = sext i32 256 to i64
  %1439 = icmp slt i64 %1435, %1438
  %1440 = bitcast i64* %shadow to i32*
  %safe.1185 = or i1 %1437, %1439
  %select.ptr.1186 = select i1 %safe.1185, i32* %1436, i32* %1440
  %1441 = load i32, i32* %select.ptr.1186, align 4
  %1442 = and i32 %1441, 16711680
  %1443 = xor i32 %1432, %1442
  %1444 = lshr i32 %1417, 8
  %1445 = and i32 %1444, 255
  %1446 = zext i32 %1445 to i64
  %1447 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1446
  %1448 = load i1, i1* %out.5
  %1449 = sext i32 256 to i64
  %1450 = icmp slt i64 %1446, %1449
  %1451 = bitcast i64* %shadow to i32*
  %safe.1187 = or i1 %1448, %1450
  %select.ptr.1188 = select i1 %safe.1187, i32* %1447, i32* %1451
  %1452 = load i32, i32* %select.ptr.1188, align 4
  %1453 = and i32 %1452, 65280
  %1454 = xor i32 %1443, %1453
  %1455 = and i32 %1417, 255
  %1456 = zext i32 %1455 to i64
  %1457 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1456
  %1458 = load i1, i1* %out.5
  %1459 = sext i32 256 to i64
  %1460 = icmp slt i64 %1456, %1459
  %1461 = bitcast i64* %shadow to i32*
  %safe.1189 = or i1 %1458, %1460
  %select.ptr.1190 = select i1 %safe.1189, i32* %1457, i32* %1461
  %1462 = load i32, i32* %select.ptr.1190, align 4
  %1463 = and i32 %1462, 255
  %1464 = xor i32 %1454, %1463
  %1465 = getelementptr inbounds i32, i32* %1307, i64 12
  %1466 = load i1, i1* %out.5
  %1467 = icmp slt i64 12, %N
  %1468 = bitcast i64* %shadow to i32*
  %safe.1191 = or i1 %1466, %1467
  %select.ptr.1192 = select i1 %safe.1191, i32* %1465, i32* %1468
  %1469 = load i32, i32* %1465
  %select.val.1193 = select i1 %1466, i32 %1464, i32 %1469
  store i32 %select.val.1193, i32* %select.ptr.1192, align 4
  %1470 = getelementptr inbounds i32, i32* %1307, i64 5
  %1471 = load i1, i1* %out.5
  %1472 = icmp slt i64 5, %N
  %1473 = bitcast i64* %shadow to i32*
  %safe.1194 = or i1 %1471, %1472
  %select.ptr.1195 = select i1 %safe.1194, i32* %1470, i32* %1473
  %1474 = load i32, i32* %select.ptr.1195, align 4
  %1475 = getelementptr inbounds i32, i32* %1307, i64 12
  %1476 = load i1, i1* %out.5
  %1477 = icmp slt i64 12, %N
  %1478 = bitcast i64* %shadow to i32*
  %safe.1196 = or i1 %1476, %1477
  %select.ptr.1197 = select i1 %safe.1196, i32* %1475, i32* %1478
  %1479 = load i32, i32* %select.ptr.1197, align 4
  %1480 = xor i32 %1474, %1479
  %1481 = getelementptr inbounds i32, i32* %1307, i64 13
  %1482 = load i1, i1* %out.5
  %1483 = icmp slt i64 13, %N
  %1484 = bitcast i64* %shadow to i32*
  %safe.1198 = or i1 %1482, %1483
  %select.ptr.1199 = select i1 %safe.1198, i32* %1481, i32* %1484
  %1485 = load i32, i32* %1481
  %select.val.1200 = select i1 %1482, i32 %1480, i32 %1485
  store i32 %select.val.1200, i32* %select.ptr.1199, align 4
  %1486 = getelementptr inbounds i32, i32* %1307, i64 6
  %1487 = load i1, i1* %out.5
  %1488 = icmp slt i64 6, %N
  %1489 = bitcast i64* %shadow to i32*
  %safe.1201 = or i1 %1487, %1488
  %select.ptr.1202 = select i1 %safe.1201, i32* %1486, i32* %1489
  %1490 = load i32, i32* %select.ptr.1202, align 4
  %1491 = getelementptr inbounds i32, i32* %1307, i64 13
  %1492 = load i1, i1* %out.5
  %1493 = icmp slt i64 13, %N
  %1494 = bitcast i64* %shadow to i32*
  %safe.1203 = or i1 %1492, %1493
  %select.ptr.1204 = select i1 %safe.1203, i32* %1491, i32* %1494
  %1495 = load i32, i32* %select.ptr.1204, align 4
  %1496 = xor i32 %1490, %1495
  %1497 = getelementptr inbounds i32, i32* %1307, i64 14
  %1498 = load i1, i1* %out.5
  %1499 = icmp slt i64 14, %N
  %1500 = bitcast i64* %shadow to i32*
  %safe.1205 = or i1 %1498, %1499
  %select.ptr.1206 = select i1 %safe.1205, i32* %1497, i32* %1500
  %1501 = load i32, i32* %1497
  %select.val.1207 = select i1 %1498, i32 %1496, i32 %1501
  store i32 %select.val.1207, i32* %select.ptr.1206, align 4
  %1502 = getelementptr inbounds i32, i32* %1307, i64 7
  %1503 = load i1, i1* %out.5
  %1504 = icmp slt i64 7, %N
  %1505 = bitcast i64* %shadow to i32*
  %safe.1208 = or i1 %1503, %1504
  %select.ptr.1209 = select i1 %safe.1208, i32* %1502, i32* %1505
  %1506 = load i32, i32* %select.ptr.1209, align 4
  %1507 = getelementptr inbounds i32, i32* %1307, i64 14
  %1508 = load i1, i1* %out.5
  %1509 = icmp slt i64 14, %N
  %1510 = bitcast i64* %shadow to i32*
  %safe.1210 = or i1 %1508, %1509
  %select.ptr.1211 = select i1 %safe.1210, i32* %1507, i32* %1510
  %1511 = load i32, i32* %select.ptr.1211, align 4
  %1512 = xor i32 %1506, %1511
  %1513 = getelementptr inbounds i32, i32* %1307, i64 15
  %1514 = load i1, i1* %out.5
  %1515 = icmp slt i64 15, %N
  %1516 = bitcast i64* %shadow to i32*
  %safe.1212 = or i1 %1514, %1515
  %select.ptr.1213 = select i1 %safe.1212, i32* %1513, i32* %1516
  %1517 = load i32, i32* %1513
  %select.val.1214 = select i1 %1514, i32 %1512, i32 %1517
  store i32 %select.val.1214, i32* %select.ptr.1213, align 4
  %1518 = getelementptr inbounds i32, i32* %1307, i64 8
  %1519 = getelementptr inbounds i32, i32* %1518, i64 7
  %1520 = load i1, i1* %out.5
  %1521 = icmp slt i64 7, %N
  %1522 = bitcast i64* %shadow to i32*
  %safe.1215 = or i1 %1520, %1521
  %select.ptr.1216 = select i1 %safe.1215, i32* %1519, i32* %1522
  %1523 = load i32, i32* %select.ptr.1216, align 4
  %1524 = load i1, i1* %out.5
  %1525 = icmp slt i64 8, %N
  %1526 = bitcast i64* %shadow to i32*
  %safe.1217 = or i1 %1524, %1525
  %select.ptr.1218 = select i1 %safe.1217, i32* %1518, i32* %1526
  %1527 = load i32, i32* %select.ptr.1218, align 4
  %1528 = lshr i32 %1523, 16
  %1529 = and i32 %1528, 255
  %1530 = zext i32 %1529 to i64
  %1531 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1530
  %1532 = load i1, i1* %out.5
  %1533 = sext i32 256 to i64
  %1534 = icmp slt i64 %1530, %1533
  %1535 = bitcast i64* %shadow to i32*
  %safe.1219 = or i1 %1532, %1534
  %select.ptr.1220 = select i1 %safe.1219, i32* %1531, i32* %1535
  %1536 = load i32, i32* %select.ptr.1220, align 4
  %1537 = and i32 %1536, -16777216
  %1538 = xor i32 %1527, %1537
  %1539 = lshr i32 %1523, 8
  %1540 = and i32 %1539, 255
  %1541 = zext i32 %1540 to i64
  %1542 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1541
  %1543 = load i1, i1* %out.5
  %1544 = sext i32 256 to i64
  %1545 = icmp slt i64 %1541, %1544
  %1546 = bitcast i64* %shadow to i32*
  %safe.1221 = or i1 %1543, %1545
  %select.ptr.1222 = select i1 %safe.1221, i32* %1542, i32* %1546
  %1547 = load i32, i32* %select.ptr.1222, align 4
  %1548 = and i32 %1547, 16711680
  %1549 = xor i32 %1538, %1548
  %1550 = and i32 %1523, 255
  %1551 = zext i32 %1550 to i64
  %1552 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1551
  %1553 = load i1, i1* %out.5
  %1554 = sext i32 256 to i64
  %1555 = icmp slt i64 %1551, %1554
  %1556 = bitcast i64* %shadow to i32*
  %safe.1223 = or i1 %1553, %1555
  %select.ptr.1224 = select i1 %safe.1223, i32* %1552, i32* %1556
  %1557 = load i32, i32* %select.ptr.1224, align 4
  %1558 = and i32 %1557, 65280
  %1559 = xor i32 %1549, %1558
  %1560 = lshr i32 %1523, 24
  %1561 = zext i32 %1560 to i64
  %1562 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1561
  %1563 = load i1, i1* %out.5
  %1564 = sext i32 256 to i64
  %1565 = icmp slt i64 %1561, %1564
  %1566 = bitcast i64* %shadow to i32*
  %safe.1225 = or i1 %1563, %1565
  %select.ptr.1226 = select i1 %safe.1225, i32* %1562, i32* %1566
  %1567 = load i32, i32* %select.ptr.1226, align 4
  %1568 = and i32 %1567, 255
  %1569 = xor i32 %1559, %1568
  %1570 = xor i32 %1569, 1073741824
  %1571 = getelementptr inbounds i32, i32* %1518, i64 8
  %1572 = load i1, i1* %out.5
  %1573 = icmp slt i64 8, %N
  %1574 = bitcast i64* %shadow to i32*
  %safe.1227 = or i1 %1572, %1573
  %select.ptr.1228 = select i1 %safe.1227, i32* %1571, i32* %1574
  %1575 = load i32, i32* %1571
  %select.val.1229 = select i1 %1572, i32 %1570, i32 %1575
  store i32 %select.val.1229, i32* %select.ptr.1228, align 4
  %1576 = getelementptr inbounds i32, i32* %1518, i64 1
  %1577 = load i1, i1* %out.5
  %1578 = icmp slt i64 1, %N
  %1579 = bitcast i64* %shadow to i32*
  %safe.1230 = or i1 %1577, %1578
  %select.ptr.1231 = select i1 %safe.1230, i32* %1576, i32* %1579
  %1580 = load i32, i32* %select.ptr.1231, align 4
  %1581 = getelementptr inbounds i32, i32* %1518, i64 8
  %1582 = load i1, i1* %out.5
  %1583 = icmp slt i64 8, %N
  %1584 = bitcast i64* %shadow to i32*
  %safe.1232 = or i1 %1582, %1583
  %select.ptr.1233 = select i1 %safe.1232, i32* %1581, i32* %1584
  %1585 = load i32, i32* %select.ptr.1233, align 4
  %1586 = xor i32 %1580, %1585
  %1587 = getelementptr inbounds i32, i32* %1518, i64 9
  %1588 = load i1, i1* %out.5
  %1589 = icmp slt i64 9, %N
  %1590 = bitcast i64* %shadow to i32*
  %safe.1234 = or i1 %1588, %1589
  %select.ptr.1235 = select i1 %safe.1234, i32* %1587, i32* %1590
  %1591 = load i32, i32* %1587
  %select.val.1236 = select i1 %1588, i32 %1586, i32 %1591
  store i32 %select.val.1236, i32* %select.ptr.1235, align 4
  %1592 = getelementptr inbounds i32, i32* %1518, i64 2
  %1593 = load i1, i1* %out.5
  %1594 = icmp slt i64 2, %N
  %1595 = bitcast i64* %shadow to i32*
  %safe.1237 = or i1 %1593, %1594
  %select.ptr.1238 = select i1 %safe.1237, i32* %1592, i32* %1595
  %1596 = load i32, i32* %select.ptr.1238, align 4
  %1597 = getelementptr inbounds i32, i32* %1518, i64 9
  %1598 = load i1, i1* %out.5
  %1599 = icmp slt i64 9, %N
  %1600 = bitcast i64* %shadow to i32*
  %safe.1239 = or i1 %1598, %1599
  %select.ptr.1240 = select i1 %safe.1239, i32* %1597, i32* %1600
  %1601 = load i32, i32* %select.ptr.1240, align 4
  %1602 = xor i32 %1596, %1601
  %1603 = getelementptr inbounds i32, i32* %1518, i64 10
  %1604 = load i1, i1* %out.5
  %1605 = icmp slt i64 10, %N
  %1606 = bitcast i64* %shadow to i32*
  %safe.1241 = or i1 %1604, %1605
  %select.ptr.1242 = select i1 %safe.1241, i32* %1603, i32* %1606
  %1607 = load i32, i32* %1603
  %select.val.1243 = select i1 %1604, i32 %1602, i32 %1607
  store i32 %select.val.1243, i32* %select.ptr.1242, align 4
  %1608 = getelementptr inbounds i32, i32* %1518, i64 3
  %1609 = load i1, i1* %out.5
  %1610 = icmp slt i64 3, %N
  %1611 = bitcast i64* %shadow to i32*
  %safe.1244 = or i1 %1609, %1610
  %select.ptr.1245 = select i1 %safe.1244, i32* %1608, i32* %1611
  %1612 = load i32, i32* %select.ptr.1245, align 4
  %1613 = getelementptr inbounds i32, i32* %1518, i64 10
  %1614 = load i1, i1* %out.5
  %1615 = icmp slt i64 10, %N
  %1616 = bitcast i64* %shadow to i32*
  %safe.1246 = or i1 %1614, %1615
  %select.ptr.1247 = select i1 %safe.1246, i32* %1613, i32* %1616
  %1617 = load i32, i32* %select.ptr.1247, align 4
  %1618 = xor i32 %1612, %1617
  %1619 = getelementptr inbounds i32, i32* %1518, i64 11
  %1620 = load i1, i1* %out.5
  %1621 = icmp slt i64 11, %N
  %1622 = bitcast i64* %shadow to i32*
  %safe.1248 = or i1 %1620, %1621
  %select.ptr.1249 = select i1 %safe.1248, i32* %1619, i32* %1622
  %1623 = load i32, i32* %1619
  %select.val.1250 = select i1 %1620, i32 %1618, i32 %1623
  store i32 %select.val.1250, i32* %select.ptr.1249, align 4
  %1624 = load i1, i1* %out.2
  %in.8 = and i1 %1624, %172
  store i1 %in.8, i1* %out.3
  %1625 = getelementptr inbounds i32, i32* %0, i64 5
  %1626 = load i1, i1* %out.3
  %1627 = icmp slt i64 5, %N
  %1628 = bitcast i64* %shadow to i32*
  %safe.379 = or i1 %1626, %1627
  %select.ptr.380 = select i1 %safe.379, i32* %1625, i32* %1628
  %1629 = load i32, i32* %select.ptr.380, align 4
  %1630 = load i1, i1* %out.3
  %1631 = load i32, i32* %0, align 4
  %1632 = lshr i32 %1629, 16
  %1633 = and i32 %1632, 255
  %1634 = zext i32 %1633 to i64
  %1635 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1634
  %1636 = load i1, i1* %out.3
  %1637 = sext i32 256 to i64
  %1638 = icmp slt i64 %1634, %1637
  %1639 = bitcast i64* %shadow to i32*
  %safe.381 = or i1 %1636, %1638
  %select.ptr.382 = select i1 %safe.381, i32* %1635, i32* %1639
  %1640 = load i32, i32* %select.ptr.382, align 4
  %1641 = and i32 %1640, -16777216
  %1642 = xor i32 %1631, %1641
  %1643 = lshr i32 %1629, 8
  %1644 = and i32 %1643, 255
  %1645 = zext i32 %1644 to i64
  %1646 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1645
  %1647 = load i1, i1* %out.3
  %1648 = sext i32 256 to i64
  %1649 = icmp slt i64 %1645, %1648
  %1650 = bitcast i64* %shadow to i32*
  %safe.383 = or i1 %1647, %1649
  %select.ptr.384 = select i1 %safe.383, i32* %1646, i32* %1650
  %1651 = load i32, i32* %select.ptr.384, align 4
  %1652 = and i32 %1651, 16711680
  %1653 = xor i32 %1642, %1652
  %1654 = and i32 %1629, 255
  %1655 = zext i32 %1654 to i64
  %1656 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1655
  %1657 = load i1, i1* %out.3
  %1658 = sext i32 256 to i64
  %1659 = icmp slt i64 %1655, %1658
  %1660 = bitcast i64* %shadow to i32*
  %safe.385 = or i1 %1657, %1659
  %select.ptr.386 = select i1 %safe.385, i32* %1656, i32* %1660
  %1661 = load i32, i32* %select.ptr.386, align 4
  %1662 = and i32 %1661, 65280
  %1663 = xor i32 %1653, %1662
  %1664 = lshr i32 %1629, 24
  %1665 = zext i32 %1664 to i64
  %1666 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1665
  %1667 = load i1, i1* %out.3
  %1668 = sext i32 256 to i64
  %1669 = icmp slt i64 %1665, %1668
  %1670 = bitcast i64* %shadow to i32*
  %safe.387 = or i1 %1667, %1669
  %select.ptr.388 = select i1 %safe.387, i32* %1666, i32* %1670
  %1671 = load i32, i32* %select.ptr.388, align 4
  %1672 = and i32 %1671, 255
  %1673 = xor i32 %1663, %1672
  %1674 = xor i32 %1673, 16777216
  %1675 = getelementptr inbounds i32, i32* %0, i64 6
  %1676 = load i1, i1* %out.3
  %1677 = icmp slt i64 6, %N
  %1678 = bitcast i64* %shadow to i32*
  %safe.389 = or i1 %1676, %1677
  %select.ptr.390 = select i1 %safe.389, i32* %1675, i32* %1678
  %1679 = load i32, i32* %1675
  %select.val.391 = select i1 %1676, i32 %1674, i32 %1679
  store i32 %select.val.391, i32* %select.ptr.390, align 4
  %1680 = getelementptr inbounds i32, i32* %0, i64 1
  %1681 = load i1, i1* %out.3
  %1682 = icmp slt i64 1, %N
  %1683 = bitcast i64* %shadow to i32*
  %safe.392 = or i1 %1681, %1682
  %select.ptr.393 = select i1 %safe.392, i32* %1680, i32* %1683
  %1684 = load i32, i32* %select.ptr.393, align 4
  %1685 = getelementptr inbounds i32, i32* %0, i64 6
  %1686 = load i1, i1* %out.3
  %1687 = icmp slt i64 6, %N
  %1688 = bitcast i64* %shadow to i32*
  %safe.394 = or i1 %1686, %1687
  %select.ptr.395 = select i1 %safe.394, i32* %1685, i32* %1688
  %1689 = load i32, i32* %select.ptr.395, align 4
  %1690 = xor i32 %1684, %1689
  %1691 = getelementptr inbounds i32, i32* %0, i64 7
  %1692 = load i1, i1* %out.3
  %1693 = icmp slt i64 7, %N
  %1694 = bitcast i64* %shadow to i32*
  %safe.396 = or i1 %1692, %1693
  %select.ptr.397 = select i1 %safe.396, i32* %1691, i32* %1694
  %1695 = load i32, i32* %1691
  %select.val.398 = select i1 %1692, i32 %1690, i32 %1695
  store i32 %select.val.398, i32* %select.ptr.397, align 4
  %1696 = getelementptr inbounds i32, i32* %0, i64 2
  %1697 = load i1, i1* %out.3
  %1698 = icmp slt i64 2, %N
  %1699 = bitcast i64* %shadow to i32*
  %safe.399 = or i1 %1697, %1698
  %select.ptr.400 = select i1 %safe.399, i32* %1696, i32* %1699
  %1700 = load i32, i32* %select.ptr.400, align 4
  %1701 = getelementptr inbounds i32, i32* %0, i64 7
  %1702 = load i1, i1* %out.3
  %1703 = icmp slt i64 7, %N
  %1704 = bitcast i64* %shadow to i32*
  %safe.401 = or i1 %1702, %1703
  %select.ptr.402 = select i1 %safe.401, i32* %1701, i32* %1704
  %1705 = load i32, i32* %select.ptr.402, align 4
  %1706 = xor i32 %1700, %1705
  %1707 = getelementptr inbounds i32, i32* %0, i64 8
  %1708 = load i1, i1* %out.3
  %1709 = icmp slt i64 8, %N
  %1710 = bitcast i64* %shadow to i32*
  %safe.403 = or i1 %1708, %1709
  %select.ptr.404 = select i1 %safe.403, i32* %1707, i32* %1710
  %1711 = load i32, i32* %1707
  %select.val.405 = select i1 %1708, i32 %1706, i32 %1711
  store i32 %select.val.405, i32* %select.ptr.404, align 4
  %1712 = getelementptr inbounds i32, i32* %0, i64 3
  %1713 = load i1, i1* %out.3
  %1714 = icmp slt i64 3, %N
  %1715 = bitcast i64* %shadow to i32*
  %safe.406 = or i1 %1713, %1714
  %select.ptr.407 = select i1 %safe.406, i32* %1712, i32* %1715
  %1716 = load i32, i32* %select.ptr.407, align 4
  %1717 = getelementptr inbounds i32, i32* %0, i64 8
  %1718 = load i1, i1* %out.3
  %1719 = icmp slt i64 8, %N
  %1720 = bitcast i64* %shadow to i32*
  %safe.408 = or i1 %1718, %1719
  %select.ptr.409 = select i1 %safe.408, i32* %1717, i32* %1720
  %1721 = load i32, i32* %select.ptr.409, align 4
  %1722 = xor i32 %1716, %1721
  %1723 = getelementptr inbounds i32, i32* %0, i64 9
  %1724 = load i1, i1* %out.3
  %1725 = icmp slt i64 9, %N
  %1726 = bitcast i64* %shadow to i32*
  %safe.410 = or i1 %1724, %1725
  %select.ptr.411 = select i1 %safe.410, i32* %1723, i32* %1726
  %1727 = load i32, i32* %1723
  %select.val.412 = select i1 %1724, i32 %1722, i32 %1727
  store i32 %select.val.412, i32* %select.ptr.411, align 4
  %1728 = getelementptr inbounds i32, i32* %0, i64 4
  %1729 = load i1, i1* %out.3
  %1730 = icmp slt i64 4, %N
  %1731 = bitcast i64* %shadow to i32*
  %safe.413 = or i1 %1729, %1730
  %select.ptr.414 = select i1 %safe.413, i32* %1728, i32* %1731
  %1732 = load i32, i32* %select.ptr.414, align 4
  %1733 = getelementptr inbounds i32, i32* %0, i64 9
  %1734 = load i1, i1* %out.3
  %1735 = icmp slt i64 9, %N
  %1736 = bitcast i64* %shadow to i32*
  %safe.415 = or i1 %1734, %1735
  %select.ptr.416 = select i1 %safe.415, i32* %1733, i32* %1736
  %1737 = load i32, i32* %select.ptr.416, align 4
  %1738 = xor i32 %1732, %1737
  %1739 = getelementptr inbounds i32, i32* %0, i64 10
  %1740 = load i1, i1* %out.3
  %1741 = icmp slt i64 10, %N
  %1742 = bitcast i64* %shadow to i32*
  %safe.417 = or i1 %1740, %1741
  %select.ptr.418 = select i1 %safe.417, i32* %1739, i32* %1742
  %1743 = load i32, i32* %1739
  %select.val.419 = select i1 %1740, i32 %1738, i32 %1743
  store i32 %select.val.419, i32* %select.ptr.418, align 4
  %1744 = getelementptr inbounds i32, i32* %0, i64 5
  %1745 = load i1, i1* %out.3
  %1746 = icmp slt i64 5, %N
  %1747 = bitcast i64* %shadow to i32*
  %safe.420 = or i1 %1745, %1746
  %select.ptr.421 = select i1 %safe.420, i32* %1744, i32* %1747
  %1748 = load i32, i32* %select.ptr.421, align 4
  %1749 = getelementptr inbounds i32, i32* %0, i64 10
  %1750 = load i1, i1* %out.3
  %1751 = icmp slt i64 10, %N
  %1752 = bitcast i64* %shadow to i32*
  %safe.422 = or i1 %1750, %1751
  %select.ptr.423 = select i1 %safe.422, i32* %1749, i32* %1752
  %1753 = load i32, i32* %select.ptr.423, align 4
  %1754 = xor i32 %1748, %1753
  %1755 = getelementptr inbounds i32, i32* %0, i64 11
  %1756 = load i1, i1* %out.3
  %1757 = icmp slt i64 11, %N
  %1758 = bitcast i64* %shadow to i32*
  %safe.424 = or i1 %1756, %1757
  %select.ptr.425 = select i1 %safe.424, i32* %1755, i32* %1758
  %1759 = load i32, i32* %1755
  %select.val.426 = select i1 %1756, i32 %1754, i32 %1759
  store i32 %select.val.426, i32* %select.ptr.425, align 4
  %1760 = getelementptr inbounds i32, i32* %0, i64 6
  %1761 = getelementptr inbounds i32, i32* %1760, i64 5
  %1762 = load i1, i1* %out.3
  %1763 = icmp slt i64 5, %N
  %1764 = bitcast i64* %shadow to i32*
  %safe.427 = or i1 %1762, %1763
  %select.ptr.428 = select i1 %safe.427, i32* %1761, i32* %1764
  %1765 = load i32, i32* %select.ptr.428, align 4
  %1766 = load i1, i1* %out.3
  %1767 = icmp slt i64 6, %N
  %1768 = bitcast i64* %shadow to i32*
  %safe.429 = or i1 %1766, %1767
  %select.ptr.430 = select i1 %safe.429, i32* %1760, i32* %1768
  %1769 = load i32, i32* %select.ptr.430, align 4
  %1770 = lshr i32 %1765, 16
  %1771 = and i32 %1770, 255
  %1772 = zext i32 %1771 to i64
  %1773 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1772
  %1774 = load i1, i1* %out.3
  %1775 = sext i32 256 to i64
  %1776 = icmp slt i64 %1772, %1775
  %1777 = bitcast i64* %shadow to i32*
  %safe.431 = or i1 %1774, %1776
  %select.ptr.432 = select i1 %safe.431, i32* %1773, i32* %1777
  %1778 = load i32, i32* %select.ptr.432, align 4
  %1779 = and i32 %1778, -16777216
  %1780 = xor i32 %1769, %1779
  %1781 = lshr i32 %1765, 8
  %1782 = and i32 %1781, 255
  %1783 = zext i32 %1782 to i64
  %1784 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1783
  %1785 = load i1, i1* %out.3
  %1786 = sext i32 256 to i64
  %1787 = icmp slt i64 %1783, %1786
  %1788 = bitcast i64* %shadow to i32*
  %safe.433 = or i1 %1785, %1787
  %select.ptr.434 = select i1 %safe.433, i32* %1784, i32* %1788
  %1789 = load i32, i32* %select.ptr.434, align 4
  %1790 = and i32 %1789, 16711680
  %1791 = xor i32 %1780, %1790
  %1792 = and i32 %1765, 255
  %1793 = zext i32 %1792 to i64
  %1794 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1793
  %1795 = load i1, i1* %out.3
  %1796 = sext i32 256 to i64
  %1797 = icmp slt i64 %1793, %1796
  %1798 = bitcast i64* %shadow to i32*
  %safe.435 = or i1 %1795, %1797
  %select.ptr.436 = select i1 %safe.435, i32* %1794, i32* %1798
  %1799 = load i32, i32* %select.ptr.436, align 4
  %1800 = and i32 %1799, 65280
  %1801 = xor i32 %1791, %1800
  %1802 = lshr i32 %1765, 24
  %1803 = zext i32 %1802 to i64
  %1804 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1803
  %1805 = load i1, i1* %out.3
  %1806 = sext i32 256 to i64
  %1807 = icmp slt i64 %1803, %1806
  %1808 = bitcast i64* %shadow to i32*
  %safe.437 = or i1 %1805, %1807
  %select.ptr.438 = select i1 %safe.437, i32* %1804, i32* %1808
  %1809 = load i32, i32* %select.ptr.438, align 4
  %1810 = and i32 %1809, 255
  %1811 = xor i32 %1801, %1810
  %1812 = xor i32 %1811, 33554432
  %1813 = getelementptr inbounds i32, i32* %1760, i64 6
  %1814 = load i1, i1* %out.3
  %1815 = icmp slt i64 6, %N
  %1816 = bitcast i64* %shadow to i32*
  %safe.439 = or i1 %1814, %1815
  %select.ptr.440 = select i1 %safe.439, i32* %1813, i32* %1816
  %1817 = load i32, i32* %1813
  %select.val.441 = select i1 %1814, i32 %1812, i32 %1817
  store i32 %select.val.441, i32* %select.ptr.440, align 4
  %1818 = getelementptr inbounds i32, i32* %1760, i64 1
  %1819 = load i1, i1* %out.3
  %1820 = icmp slt i64 1, %N
  %1821 = bitcast i64* %shadow to i32*
  %safe.442 = or i1 %1819, %1820
  %select.ptr.443 = select i1 %safe.442, i32* %1818, i32* %1821
  %1822 = load i32, i32* %select.ptr.443, align 4
  %1823 = getelementptr inbounds i32, i32* %1760, i64 6
  %1824 = load i1, i1* %out.3
  %1825 = icmp slt i64 6, %N
  %1826 = bitcast i64* %shadow to i32*
  %safe.444 = or i1 %1824, %1825
  %select.ptr.445 = select i1 %safe.444, i32* %1823, i32* %1826
  %1827 = load i32, i32* %select.ptr.445, align 4
  %1828 = xor i32 %1822, %1827
  %1829 = getelementptr inbounds i32, i32* %1760, i64 7
  %1830 = load i1, i1* %out.3
  %1831 = icmp slt i64 7, %N
  %1832 = bitcast i64* %shadow to i32*
  %safe.446 = or i1 %1830, %1831
  %select.ptr.447 = select i1 %safe.446, i32* %1829, i32* %1832
  %1833 = load i32, i32* %1829
  %select.val.448 = select i1 %1830, i32 %1828, i32 %1833
  store i32 %select.val.448, i32* %select.ptr.447, align 4
  %1834 = getelementptr inbounds i32, i32* %1760, i64 2
  %1835 = load i1, i1* %out.3
  %1836 = icmp slt i64 2, %N
  %1837 = bitcast i64* %shadow to i32*
  %safe.449 = or i1 %1835, %1836
  %select.ptr.450 = select i1 %safe.449, i32* %1834, i32* %1837
  %1838 = load i32, i32* %select.ptr.450, align 4
  %1839 = getelementptr inbounds i32, i32* %1760, i64 7
  %1840 = load i1, i1* %out.3
  %1841 = icmp slt i64 7, %N
  %1842 = bitcast i64* %shadow to i32*
  %safe.451 = or i1 %1840, %1841
  %select.ptr.452 = select i1 %safe.451, i32* %1839, i32* %1842
  %1843 = load i32, i32* %select.ptr.452, align 4
  %1844 = xor i32 %1838, %1843
  %1845 = getelementptr inbounds i32, i32* %1760, i64 8
  %1846 = load i1, i1* %out.3
  %1847 = icmp slt i64 8, %N
  %1848 = bitcast i64* %shadow to i32*
  %safe.453 = or i1 %1846, %1847
  %select.ptr.454 = select i1 %safe.453, i32* %1845, i32* %1848
  %1849 = load i32, i32* %1845
  %select.val.455 = select i1 %1846, i32 %1844, i32 %1849
  store i32 %select.val.455, i32* %select.ptr.454, align 4
  %1850 = getelementptr inbounds i32, i32* %1760, i64 3
  %1851 = load i1, i1* %out.3
  %1852 = icmp slt i64 3, %N
  %1853 = bitcast i64* %shadow to i32*
  %safe.456 = or i1 %1851, %1852
  %select.ptr.457 = select i1 %safe.456, i32* %1850, i32* %1853
  %1854 = load i32, i32* %select.ptr.457, align 4
  %1855 = getelementptr inbounds i32, i32* %1760, i64 8
  %1856 = load i1, i1* %out.3
  %1857 = icmp slt i64 8, %N
  %1858 = bitcast i64* %shadow to i32*
  %safe.458 = or i1 %1856, %1857
  %select.ptr.459 = select i1 %safe.458, i32* %1855, i32* %1858
  %1859 = load i32, i32* %select.ptr.459, align 4
  %1860 = xor i32 %1854, %1859
  %1861 = getelementptr inbounds i32, i32* %1760, i64 9
  %1862 = load i1, i1* %out.3
  %1863 = icmp slt i64 9, %N
  %1864 = bitcast i64* %shadow to i32*
  %safe.460 = or i1 %1862, %1863
  %select.ptr.461 = select i1 %safe.460, i32* %1861, i32* %1864
  %1865 = load i32, i32* %1861
  %select.val.462 = select i1 %1862, i32 %1860, i32 %1865
  store i32 %select.val.462, i32* %select.ptr.461, align 4
  %1866 = getelementptr inbounds i32, i32* %1760, i64 4
  %1867 = load i1, i1* %out.3
  %1868 = icmp slt i64 4, %N
  %1869 = bitcast i64* %shadow to i32*
  %safe.463 = or i1 %1867, %1868
  %select.ptr.464 = select i1 %safe.463, i32* %1866, i32* %1869
  %1870 = load i32, i32* %select.ptr.464, align 4
  %1871 = getelementptr inbounds i32, i32* %1760, i64 9
  %1872 = load i1, i1* %out.3
  %1873 = icmp slt i64 9, %N
  %1874 = bitcast i64* %shadow to i32*
  %safe.465 = or i1 %1872, %1873
  %select.ptr.466 = select i1 %safe.465, i32* %1871, i32* %1874
  %1875 = load i32, i32* %select.ptr.466, align 4
  %1876 = xor i32 %1870, %1875
  %1877 = getelementptr inbounds i32, i32* %1760, i64 10
  %1878 = load i1, i1* %out.3
  %1879 = icmp slt i64 10, %N
  %1880 = bitcast i64* %shadow to i32*
  %safe.467 = or i1 %1878, %1879
  %select.ptr.468 = select i1 %safe.467, i32* %1877, i32* %1880
  %1881 = load i32, i32* %1877
  %select.val.469 = select i1 %1878, i32 %1876, i32 %1881
  store i32 %select.val.469, i32* %select.ptr.468, align 4
  %1882 = getelementptr inbounds i32, i32* %1760, i64 5
  %1883 = load i1, i1* %out.3
  %1884 = icmp slt i64 5, %N
  %1885 = bitcast i64* %shadow to i32*
  %safe.470 = or i1 %1883, %1884
  %select.ptr.471 = select i1 %safe.470, i32* %1882, i32* %1885
  %1886 = load i32, i32* %select.ptr.471, align 4
  %1887 = getelementptr inbounds i32, i32* %1760, i64 10
  %1888 = load i1, i1* %out.3
  %1889 = icmp slt i64 10, %N
  %1890 = bitcast i64* %shadow to i32*
  %safe.472 = or i1 %1888, %1889
  %select.ptr.473 = select i1 %safe.472, i32* %1887, i32* %1890
  %1891 = load i32, i32* %select.ptr.473, align 4
  %1892 = xor i32 %1886, %1891
  %1893 = getelementptr inbounds i32, i32* %1760, i64 11
  %1894 = load i1, i1* %out.3
  %1895 = icmp slt i64 11, %N
  %1896 = bitcast i64* %shadow to i32*
  %safe.474 = or i1 %1894, %1895
  %select.ptr.475 = select i1 %safe.474, i32* %1893, i32* %1896
  %1897 = load i32, i32* %1893
  %select.val.476 = select i1 %1894, i32 %1892, i32 %1897
  store i32 %select.val.476, i32* %select.ptr.475, align 4
  %1898 = getelementptr inbounds i32, i32* %1760, i64 6
  %1899 = getelementptr inbounds i32, i32* %1898, i64 5
  %1900 = load i1, i1* %out.3
  %1901 = icmp slt i64 5, %N
  %1902 = bitcast i64* %shadow to i32*
  %safe.477 = or i1 %1900, %1901
  %select.ptr.478 = select i1 %safe.477, i32* %1899, i32* %1902
  %1903 = load i32, i32* %select.ptr.478, align 4
  %1904 = load i1, i1* %out.3
  %1905 = icmp slt i64 6, %N
  %1906 = bitcast i64* %shadow to i32*
  %safe.479 = or i1 %1904, %1905
  %select.ptr.480 = select i1 %safe.479, i32* %1898, i32* %1906
  %1907 = load i32, i32* %select.ptr.480, align 4
  %1908 = lshr i32 %1903, 16
  %1909 = and i32 %1908, 255
  %1910 = zext i32 %1909 to i64
  %1911 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1910
  %1912 = load i1, i1* %out.3
  %1913 = sext i32 256 to i64
  %1914 = icmp slt i64 %1910, %1913
  %1915 = bitcast i64* %shadow to i32*
  %safe.481 = or i1 %1912, %1914
  %select.ptr.482 = select i1 %safe.481, i32* %1911, i32* %1915
  %1916 = load i32, i32* %select.ptr.482, align 4
  %1917 = and i32 %1916, -16777216
  %1918 = xor i32 %1907, %1917
  %1919 = lshr i32 %1903, 8
  %1920 = and i32 %1919, 255
  %1921 = zext i32 %1920 to i64
  %1922 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1921
  %1923 = load i1, i1* %out.3
  %1924 = sext i32 256 to i64
  %1925 = icmp slt i64 %1921, %1924
  %1926 = bitcast i64* %shadow to i32*
  %safe.483 = or i1 %1923, %1925
  %select.ptr.484 = select i1 %safe.483, i32* %1922, i32* %1926
  %1927 = load i32, i32* %select.ptr.484, align 4
  %1928 = and i32 %1927, 16711680
  %1929 = xor i32 %1918, %1928
  %1930 = and i32 %1903, 255
  %1931 = zext i32 %1930 to i64
  %1932 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1931
  %1933 = load i1, i1* %out.3
  %1934 = sext i32 256 to i64
  %1935 = icmp slt i64 %1931, %1934
  %1936 = bitcast i64* %shadow to i32*
  %safe.485 = or i1 %1933, %1935
  %select.ptr.486 = select i1 %safe.485, i32* %1932, i32* %1936
  %1937 = load i32, i32* %select.ptr.486, align 4
  %1938 = and i32 %1937, 65280
  %1939 = xor i32 %1929, %1938
  %1940 = lshr i32 %1903, 24
  %1941 = zext i32 %1940 to i64
  %1942 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1941
  %1943 = load i1, i1* %out.3
  %1944 = sext i32 256 to i64
  %1945 = icmp slt i64 %1941, %1944
  %1946 = bitcast i64* %shadow to i32*
  %safe.487 = or i1 %1943, %1945
  %select.ptr.488 = select i1 %safe.487, i32* %1942, i32* %1946
  %1947 = load i32, i32* %select.ptr.488, align 4
  %1948 = and i32 %1947, 255
  %1949 = xor i32 %1939, %1948
  %1950 = xor i32 %1949, 67108864
  %1951 = getelementptr inbounds i32, i32* %1898, i64 6
  %1952 = load i1, i1* %out.3
  %1953 = icmp slt i64 6, %N
  %1954 = bitcast i64* %shadow to i32*
  %safe.489 = or i1 %1952, %1953
  %select.ptr.490 = select i1 %safe.489, i32* %1951, i32* %1954
  %1955 = load i32, i32* %1951
  %select.val.491 = select i1 %1952, i32 %1950, i32 %1955
  store i32 %select.val.491, i32* %select.ptr.490, align 4
  %1956 = getelementptr inbounds i32, i32* %1898, i64 1
  %1957 = load i1, i1* %out.3
  %1958 = icmp slt i64 1, %N
  %1959 = bitcast i64* %shadow to i32*
  %safe.492 = or i1 %1957, %1958
  %select.ptr.493 = select i1 %safe.492, i32* %1956, i32* %1959
  %1960 = load i32, i32* %select.ptr.493, align 4
  %1961 = getelementptr inbounds i32, i32* %1898, i64 6
  %1962 = load i1, i1* %out.3
  %1963 = icmp slt i64 6, %N
  %1964 = bitcast i64* %shadow to i32*
  %safe.494 = or i1 %1962, %1963
  %select.ptr.495 = select i1 %safe.494, i32* %1961, i32* %1964
  %1965 = load i32, i32* %select.ptr.495, align 4
  %1966 = xor i32 %1960, %1965
  %1967 = getelementptr inbounds i32, i32* %1898, i64 7
  %1968 = load i1, i1* %out.3
  %1969 = icmp slt i64 7, %N
  %1970 = bitcast i64* %shadow to i32*
  %safe.496 = or i1 %1968, %1969
  %select.ptr.497 = select i1 %safe.496, i32* %1967, i32* %1970
  %1971 = load i32, i32* %1967
  %select.val.498 = select i1 %1968, i32 %1966, i32 %1971
  store i32 %select.val.498, i32* %select.ptr.497, align 4
  %1972 = getelementptr inbounds i32, i32* %1898, i64 2
  %1973 = load i1, i1* %out.3
  %1974 = icmp slt i64 2, %N
  %1975 = bitcast i64* %shadow to i32*
  %safe.499 = or i1 %1973, %1974
  %select.ptr.500 = select i1 %safe.499, i32* %1972, i32* %1975
  %1976 = load i32, i32* %select.ptr.500, align 4
  %1977 = getelementptr inbounds i32, i32* %1898, i64 7
  %1978 = load i1, i1* %out.3
  %1979 = icmp slt i64 7, %N
  %1980 = bitcast i64* %shadow to i32*
  %safe.501 = or i1 %1978, %1979
  %select.ptr.502 = select i1 %safe.501, i32* %1977, i32* %1980
  %1981 = load i32, i32* %select.ptr.502, align 4
  %1982 = xor i32 %1976, %1981
  %1983 = getelementptr inbounds i32, i32* %1898, i64 8
  %1984 = load i1, i1* %out.3
  %1985 = icmp slt i64 8, %N
  %1986 = bitcast i64* %shadow to i32*
  %safe.503 = or i1 %1984, %1985
  %select.ptr.504 = select i1 %safe.503, i32* %1983, i32* %1986
  %1987 = load i32, i32* %1983
  %select.val.505 = select i1 %1984, i32 %1982, i32 %1987
  store i32 %select.val.505, i32* %select.ptr.504, align 4
  %1988 = getelementptr inbounds i32, i32* %1898, i64 3
  %1989 = load i1, i1* %out.3
  %1990 = icmp slt i64 3, %N
  %1991 = bitcast i64* %shadow to i32*
  %safe.506 = or i1 %1989, %1990
  %select.ptr.507 = select i1 %safe.506, i32* %1988, i32* %1991
  %1992 = load i32, i32* %select.ptr.507, align 4
  %1993 = getelementptr inbounds i32, i32* %1898, i64 8
  %1994 = load i1, i1* %out.3
  %1995 = icmp slt i64 8, %N
  %1996 = bitcast i64* %shadow to i32*
  %safe.508 = or i1 %1994, %1995
  %select.ptr.509 = select i1 %safe.508, i32* %1993, i32* %1996
  %1997 = load i32, i32* %select.ptr.509, align 4
  %1998 = xor i32 %1992, %1997
  %1999 = getelementptr inbounds i32, i32* %1898, i64 9
  %2000 = load i1, i1* %out.3
  %2001 = icmp slt i64 9, %N
  %2002 = bitcast i64* %shadow to i32*
  %safe.510 = or i1 %2000, %2001
  %select.ptr.511 = select i1 %safe.510, i32* %1999, i32* %2002
  %2003 = load i32, i32* %1999
  %select.val.512 = select i1 %2000, i32 %1998, i32 %2003
  store i32 %select.val.512, i32* %select.ptr.511, align 4
  %2004 = getelementptr inbounds i32, i32* %1898, i64 4
  %2005 = load i1, i1* %out.3
  %2006 = icmp slt i64 4, %N
  %2007 = bitcast i64* %shadow to i32*
  %safe.513 = or i1 %2005, %2006
  %select.ptr.514 = select i1 %safe.513, i32* %2004, i32* %2007
  %2008 = load i32, i32* %select.ptr.514, align 4
  %2009 = getelementptr inbounds i32, i32* %1898, i64 9
  %2010 = load i1, i1* %out.3
  %2011 = icmp slt i64 9, %N
  %2012 = bitcast i64* %shadow to i32*
  %safe.515 = or i1 %2010, %2011
  %select.ptr.516 = select i1 %safe.515, i32* %2009, i32* %2012
  %2013 = load i32, i32* %select.ptr.516, align 4
  %2014 = xor i32 %2008, %2013
  %2015 = getelementptr inbounds i32, i32* %1898, i64 10
  %2016 = load i1, i1* %out.3
  %2017 = icmp slt i64 10, %N
  %2018 = bitcast i64* %shadow to i32*
  %safe.517 = or i1 %2016, %2017
  %select.ptr.518 = select i1 %safe.517, i32* %2015, i32* %2018
  %2019 = load i32, i32* %2015
  %select.val.519 = select i1 %2016, i32 %2014, i32 %2019
  store i32 %select.val.519, i32* %select.ptr.518, align 4
  %2020 = getelementptr inbounds i32, i32* %1898, i64 5
  %2021 = load i1, i1* %out.3
  %2022 = icmp slt i64 5, %N
  %2023 = bitcast i64* %shadow to i32*
  %safe.520 = or i1 %2021, %2022
  %select.ptr.521 = select i1 %safe.520, i32* %2020, i32* %2023
  %2024 = load i32, i32* %select.ptr.521, align 4
  %2025 = getelementptr inbounds i32, i32* %1898, i64 10
  %2026 = load i1, i1* %out.3
  %2027 = icmp slt i64 10, %N
  %2028 = bitcast i64* %shadow to i32*
  %safe.522 = or i1 %2026, %2027
  %select.ptr.523 = select i1 %safe.522, i32* %2025, i32* %2028
  %2029 = load i32, i32* %select.ptr.523, align 4
  %2030 = xor i32 %2024, %2029
  %2031 = getelementptr inbounds i32, i32* %1898, i64 11
  %2032 = load i1, i1* %out.3
  %2033 = icmp slt i64 11, %N
  %2034 = bitcast i64* %shadow to i32*
  %safe.524 = or i1 %2032, %2033
  %select.ptr.525 = select i1 %safe.524, i32* %2031, i32* %2034
  %2035 = load i32, i32* %2031
  %select.val.526 = select i1 %2032, i32 %2030, i32 %2035
  store i32 %select.val.526, i32* %select.ptr.525, align 4
  %2036 = getelementptr inbounds i32, i32* %1898, i64 6
  %2037 = getelementptr inbounds i32, i32* %2036, i64 5
  %2038 = load i1, i1* %out.3
  %2039 = icmp slt i64 5, %N
  %2040 = bitcast i64* %shadow to i32*
  %safe.527 = or i1 %2038, %2039
  %select.ptr.528 = select i1 %safe.527, i32* %2037, i32* %2040
  %2041 = load i32, i32* %select.ptr.528, align 4
  %2042 = load i1, i1* %out.3
  %2043 = icmp slt i64 6, %N
  %2044 = bitcast i64* %shadow to i32*
  %safe.529 = or i1 %2042, %2043
  %select.ptr.530 = select i1 %safe.529, i32* %2036, i32* %2044
  %2045 = load i32, i32* %select.ptr.530, align 4
  %2046 = lshr i32 %2041, 16
  %2047 = and i32 %2046, 255
  %2048 = zext i32 %2047 to i64
  %2049 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2048
  %2050 = load i1, i1* %out.3
  %2051 = sext i32 256 to i64
  %2052 = icmp slt i64 %2048, %2051
  %2053 = bitcast i64* %shadow to i32*
  %safe.531 = or i1 %2050, %2052
  %select.ptr.532 = select i1 %safe.531, i32* %2049, i32* %2053
  %2054 = load i32, i32* %select.ptr.532, align 4
  %2055 = and i32 %2054, -16777216
  %2056 = xor i32 %2045, %2055
  %2057 = lshr i32 %2041, 8
  %2058 = and i32 %2057, 255
  %2059 = zext i32 %2058 to i64
  %2060 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2059
  %2061 = load i1, i1* %out.3
  %2062 = sext i32 256 to i64
  %2063 = icmp slt i64 %2059, %2062
  %2064 = bitcast i64* %shadow to i32*
  %safe.533 = or i1 %2061, %2063
  %select.ptr.534 = select i1 %safe.533, i32* %2060, i32* %2064
  %2065 = load i32, i32* %select.ptr.534, align 4
  %2066 = and i32 %2065, 16711680
  %2067 = xor i32 %2056, %2066
  %2068 = and i32 %2041, 255
  %2069 = zext i32 %2068 to i64
  %2070 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2069
  %2071 = load i1, i1* %out.3
  %2072 = sext i32 256 to i64
  %2073 = icmp slt i64 %2069, %2072
  %2074 = bitcast i64* %shadow to i32*
  %safe.535 = or i1 %2071, %2073
  %select.ptr.536 = select i1 %safe.535, i32* %2070, i32* %2074
  %2075 = load i32, i32* %select.ptr.536, align 4
  %2076 = and i32 %2075, 65280
  %2077 = xor i32 %2067, %2076
  %2078 = lshr i32 %2041, 24
  %2079 = zext i32 %2078 to i64
  %2080 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2079
  %2081 = load i1, i1* %out.3
  %2082 = sext i32 256 to i64
  %2083 = icmp slt i64 %2079, %2082
  %2084 = bitcast i64* %shadow to i32*
  %safe.537 = or i1 %2081, %2083
  %select.ptr.538 = select i1 %safe.537, i32* %2080, i32* %2084
  %2085 = load i32, i32* %select.ptr.538, align 4
  %2086 = and i32 %2085, 255
  %2087 = xor i32 %2077, %2086
  %2088 = xor i32 %2087, 134217728
  %2089 = getelementptr inbounds i32, i32* %2036, i64 6
  %2090 = load i1, i1* %out.3
  %2091 = icmp slt i64 6, %N
  %2092 = bitcast i64* %shadow to i32*
  %safe.539 = or i1 %2090, %2091
  %select.ptr.540 = select i1 %safe.539, i32* %2089, i32* %2092
  %2093 = load i32, i32* %2089
  %select.val.541 = select i1 %2090, i32 %2088, i32 %2093
  store i32 %select.val.541, i32* %select.ptr.540, align 4
  %2094 = getelementptr inbounds i32, i32* %2036, i64 1
  %2095 = load i1, i1* %out.3
  %2096 = icmp slt i64 1, %N
  %2097 = bitcast i64* %shadow to i32*
  %safe.542 = or i1 %2095, %2096
  %select.ptr.543 = select i1 %safe.542, i32* %2094, i32* %2097
  %2098 = load i32, i32* %select.ptr.543, align 4
  %2099 = getelementptr inbounds i32, i32* %2036, i64 6
  %2100 = load i1, i1* %out.3
  %2101 = icmp slt i64 6, %N
  %2102 = bitcast i64* %shadow to i32*
  %safe.544 = or i1 %2100, %2101
  %select.ptr.545 = select i1 %safe.544, i32* %2099, i32* %2102
  %2103 = load i32, i32* %select.ptr.545, align 4
  %2104 = xor i32 %2098, %2103
  %2105 = getelementptr inbounds i32, i32* %2036, i64 7
  %2106 = load i1, i1* %out.3
  %2107 = icmp slt i64 7, %N
  %2108 = bitcast i64* %shadow to i32*
  %safe.546 = or i1 %2106, %2107
  %select.ptr.547 = select i1 %safe.546, i32* %2105, i32* %2108
  %2109 = load i32, i32* %2105
  %select.val.548 = select i1 %2106, i32 %2104, i32 %2109
  store i32 %select.val.548, i32* %select.ptr.547, align 4
  %2110 = getelementptr inbounds i32, i32* %2036, i64 2
  %2111 = load i1, i1* %out.3
  %2112 = icmp slt i64 2, %N
  %2113 = bitcast i64* %shadow to i32*
  %safe.549 = or i1 %2111, %2112
  %select.ptr.550 = select i1 %safe.549, i32* %2110, i32* %2113
  %2114 = load i32, i32* %select.ptr.550, align 4
  %2115 = getelementptr inbounds i32, i32* %2036, i64 7
  %2116 = load i1, i1* %out.3
  %2117 = icmp slt i64 7, %N
  %2118 = bitcast i64* %shadow to i32*
  %safe.551 = or i1 %2116, %2117
  %select.ptr.552 = select i1 %safe.551, i32* %2115, i32* %2118
  %2119 = load i32, i32* %select.ptr.552, align 4
  %2120 = xor i32 %2114, %2119
  %2121 = getelementptr inbounds i32, i32* %2036, i64 8
  %2122 = load i1, i1* %out.3
  %2123 = icmp slt i64 8, %N
  %2124 = bitcast i64* %shadow to i32*
  %safe.553 = or i1 %2122, %2123
  %select.ptr.554 = select i1 %safe.553, i32* %2121, i32* %2124
  %2125 = load i32, i32* %2121
  %select.val.555 = select i1 %2122, i32 %2120, i32 %2125
  store i32 %select.val.555, i32* %select.ptr.554, align 4
  %2126 = getelementptr inbounds i32, i32* %2036, i64 3
  %2127 = load i1, i1* %out.3
  %2128 = icmp slt i64 3, %N
  %2129 = bitcast i64* %shadow to i32*
  %safe.556 = or i1 %2127, %2128
  %select.ptr.557 = select i1 %safe.556, i32* %2126, i32* %2129
  %2130 = load i32, i32* %select.ptr.557, align 4
  %2131 = getelementptr inbounds i32, i32* %2036, i64 8
  %2132 = load i1, i1* %out.3
  %2133 = icmp slt i64 8, %N
  %2134 = bitcast i64* %shadow to i32*
  %safe.558 = or i1 %2132, %2133
  %select.ptr.559 = select i1 %safe.558, i32* %2131, i32* %2134
  %2135 = load i32, i32* %select.ptr.559, align 4
  %2136 = xor i32 %2130, %2135
  %2137 = getelementptr inbounds i32, i32* %2036, i64 9
  %2138 = load i1, i1* %out.3
  %2139 = icmp slt i64 9, %N
  %2140 = bitcast i64* %shadow to i32*
  %safe.560 = or i1 %2138, %2139
  %select.ptr.561 = select i1 %safe.560, i32* %2137, i32* %2140
  %2141 = load i32, i32* %2137
  %select.val.562 = select i1 %2138, i32 %2136, i32 %2141
  store i32 %select.val.562, i32* %select.ptr.561, align 4
  %2142 = getelementptr inbounds i32, i32* %2036, i64 4
  %2143 = load i1, i1* %out.3
  %2144 = icmp slt i64 4, %N
  %2145 = bitcast i64* %shadow to i32*
  %safe.563 = or i1 %2143, %2144
  %select.ptr.564 = select i1 %safe.563, i32* %2142, i32* %2145
  %2146 = load i32, i32* %select.ptr.564, align 4
  %2147 = getelementptr inbounds i32, i32* %2036, i64 9
  %2148 = load i1, i1* %out.3
  %2149 = icmp slt i64 9, %N
  %2150 = bitcast i64* %shadow to i32*
  %safe.565 = or i1 %2148, %2149
  %select.ptr.566 = select i1 %safe.565, i32* %2147, i32* %2150
  %2151 = load i32, i32* %select.ptr.566, align 4
  %2152 = xor i32 %2146, %2151
  %2153 = getelementptr inbounds i32, i32* %2036, i64 10
  %2154 = load i1, i1* %out.3
  %2155 = icmp slt i64 10, %N
  %2156 = bitcast i64* %shadow to i32*
  %safe.567 = or i1 %2154, %2155
  %select.ptr.568 = select i1 %safe.567, i32* %2153, i32* %2156
  %2157 = load i32, i32* %2153
  %select.val.569 = select i1 %2154, i32 %2152, i32 %2157
  store i32 %select.val.569, i32* %select.ptr.568, align 4
  %2158 = getelementptr inbounds i32, i32* %2036, i64 5
  %2159 = load i1, i1* %out.3
  %2160 = icmp slt i64 5, %N
  %2161 = bitcast i64* %shadow to i32*
  %safe.570 = or i1 %2159, %2160
  %select.ptr.571 = select i1 %safe.570, i32* %2158, i32* %2161
  %2162 = load i32, i32* %select.ptr.571, align 4
  %2163 = getelementptr inbounds i32, i32* %2036, i64 10
  %2164 = load i1, i1* %out.3
  %2165 = icmp slt i64 10, %N
  %2166 = bitcast i64* %shadow to i32*
  %safe.572 = or i1 %2164, %2165
  %select.ptr.573 = select i1 %safe.572, i32* %2163, i32* %2166
  %2167 = load i32, i32* %select.ptr.573, align 4
  %2168 = xor i32 %2162, %2167
  %2169 = getelementptr inbounds i32, i32* %2036, i64 11
  %2170 = load i1, i1* %out.3
  %2171 = icmp slt i64 11, %N
  %2172 = bitcast i64* %shadow to i32*
  %safe.574 = or i1 %2170, %2171
  %select.ptr.575 = select i1 %safe.574, i32* %2169, i32* %2172
  %2173 = load i32, i32* %2169
  %select.val.576 = select i1 %2170, i32 %2168, i32 %2173
  store i32 %select.val.576, i32* %select.ptr.575, align 4
  %2174 = getelementptr inbounds i32, i32* %2036, i64 6
  %2175 = getelementptr inbounds i32, i32* %2174, i64 5
  %2176 = load i1, i1* %out.3
  %2177 = icmp slt i64 5, %N
  %2178 = bitcast i64* %shadow to i32*
  %safe.577 = or i1 %2176, %2177
  %select.ptr.578 = select i1 %safe.577, i32* %2175, i32* %2178
  %2179 = load i32, i32* %select.ptr.578, align 4
  %2180 = load i1, i1* %out.3
  %2181 = icmp slt i64 6, %N
  %2182 = bitcast i64* %shadow to i32*
  %safe.579 = or i1 %2180, %2181
  %select.ptr.580 = select i1 %safe.579, i32* %2174, i32* %2182
  %2183 = load i32, i32* %select.ptr.580, align 4
  %2184 = lshr i32 %2179, 16
  %2185 = and i32 %2184, 255
  %2186 = zext i32 %2185 to i64
  %2187 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2186
  %2188 = load i1, i1* %out.3
  %2189 = sext i32 256 to i64
  %2190 = icmp slt i64 %2186, %2189
  %2191 = bitcast i64* %shadow to i32*
  %safe.581 = or i1 %2188, %2190
  %select.ptr.582 = select i1 %safe.581, i32* %2187, i32* %2191
  %2192 = load i32, i32* %select.ptr.582, align 4
  %2193 = and i32 %2192, -16777216
  %2194 = xor i32 %2183, %2193
  %2195 = lshr i32 %2179, 8
  %2196 = and i32 %2195, 255
  %2197 = zext i32 %2196 to i64
  %2198 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2197
  %2199 = load i1, i1* %out.3
  %2200 = sext i32 256 to i64
  %2201 = icmp slt i64 %2197, %2200
  %2202 = bitcast i64* %shadow to i32*
  %safe.583 = or i1 %2199, %2201
  %select.ptr.584 = select i1 %safe.583, i32* %2198, i32* %2202
  %2203 = load i32, i32* %select.ptr.584, align 4
  %2204 = and i32 %2203, 16711680
  %2205 = xor i32 %2194, %2204
  %2206 = and i32 %2179, 255
  %2207 = zext i32 %2206 to i64
  %2208 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2207
  %2209 = load i1, i1* %out.3
  %2210 = sext i32 256 to i64
  %2211 = icmp slt i64 %2207, %2210
  %2212 = bitcast i64* %shadow to i32*
  %safe.585 = or i1 %2209, %2211
  %select.ptr.586 = select i1 %safe.585, i32* %2208, i32* %2212
  %2213 = load i32, i32* %select.ptr.586, align 4
  %2214 = and i32 %2213, 65280
  %2215 = xor i32 %2205, %2214
  %2216 = lshr i32 %2179, 24
  %2217 = zext i32 %2216 to i64
  %2218 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2217
  %2219 = load i1, i1* %out.3
  %2220 = sext i32 256 to i64
  %2221 = icmp slt i64 %2217, %2220
  %2222 = bitcast i64* %shadow to i32*
  %safe.587 = or i1 %2219, %2221
  %select.ptr.588 = select i1 %safe.587, i32* %2218, i32* %2222
  %2223 = load i32, i32* %select.ptr.588, align 4
  %2224 = and i32 %2223, 255
  %2225 = xor i32 %2215, %2224
  %2226 = xor i32 %2225, 268435456
  %2227 = getelementptr inbounds i32, i32* %2174, i64 6
  %2228 = load i1, i1* %out.3
  %2229 = icmp slt i64 6, %N
  %2230 = bitcast i64* %shadow to i32*
  %safe.589 = or i1 %2228, %2229
  %select.ptr.590 = select i1 %safe.589, i32* %2227, i32* %2230
  %2231 = load i32, i32* %2227
  %select.val.591 = select i1 %2228, i32 %2226, i32 %2231
  store i32 %select.val.591, i32* %select.ptr.590, align 4
  %2232 = getelementptr inbounds i32, i32* %2174, i64 1
  %2233 = load i1, i1* %out.3
  %2234 = icmp slt i64 1, %N
  %2235 = bitcast i64* %shadow to i32*
  %safe.592 = or i1 %2233, %2234
  %select.ptr.593 = select i1 %safe.592, i32* %2232, i32* %2235
  %2236 = load i32, i32* %select.ptr.593, align 4
  %2237 = getelementptr inbounds i32, i32* %2174, i64 6
  %2238 = load i1, i1* %out.3
  %2239 = icmp slt i64 6, %N
  %2240 = bitcast i64* %shadow to i32*
  %safe.594 = or i1 %2238, %2239
  %select.ptr.595 = select i1 %safe.594, i32* %2237, i32* %2240
  %2241 = load i32, i32* %select.ptr.595, align 4
  %2242 = xor i32 %2236, %2241
  %2243 = getelementptr inbounds i32, i32* %2174, i64 7
  %2244 = load i1, i1* %out.3
  %2245 = icmp slt i64 7, %N
  %2246 = bitcast i64* %shadow to i32*
  %safe.596 = or i1 %2244, %2245
  %select.ptr.597 = select i1 %safe.596, i32* %2243, i32* %2246
  %2247 = load i32, i32* %2243
  %select.val.598 = select i1 %2244, i32 %2242, i32 %2247
  store i32 %select.val.598, i32* %select.ptr.597, align 4
  %2248 = getelementptr inbounds i32, i32* %2174, i64 2
  %2249 = load i1, i1* %out.3
  %2250 = icmp slt i64 2, %N
  %2251 = bitcast i64* %shadow to i32*
  %safe.599 = or i1 %2249, %2250
  %select.ptr.600 = select i1 %safe.599, i32* %2248, i32* %2251
  %2252 = load i32, i32* %select.ptr.600, align 4
  %2253 = getelementptr inbounds i32, i32* %2174, i64 7
  %2254 = load i1, i1* %out.3
  %2255 = icmp slt i64 7, %N
  %2256 = bitcast i64* %shadow to i32*
  %safe.601 = or i1 %2254, %2255
  %select.ptr.602 = select i1 %safe.601, i32* %2253, i32* %2256
  %2257 = load i32, i32* %select.ptr.602, align 4
  %2258 = xor i32 %2252, %2257
  %2259 = getelementptr inbounds i32, i32* %2174, i64 8
  %2260 = load i1, i1* %out.3
  %2261 = icmp slt i64 8, %N
  %2262 = bitcast i64* %shadow to i32*
  %safe.603 = or i1 %2260, %2261
  %select.ptr.604 = select i1 %safe.603, i32* %2259, i32* %2262
  %2263 = load i32, i32* %2259
  %select.val.605 = select i1 %2260, i32 %2258, i32 %2263
  store i32 %select.val.605, i32* %select.ptr.604, align 4
  %2264 = getelementptr inbounds i32, i32* %2174, i64 3
  %2265 = load i1, i1* %out.3
  %2266 = icmp slt i64 3, %N
  %2267 = bitcast i64* %shadow to i32*
  %safe.606 = or i1 %2265, %2266
  %select.ptr.607 = select i1 %safe.606, i32* %2264, i32* %2267
  %2268 = load i32, i32* %select.ptr.607, align 4
  %2269 = getelementptr inbounds i32, i32* %2174, i64 8
  %2270 = load i1, i1* %out.3
  %2271 = icmp slt i64 8, %N
  %2272 = bitcast i64* %shadow to i32*
  %safe.608 = or i1 %2270, %2271
  %select.ptr.609 = select i1 %safe.608, i32* %2269, i32* %2272
  %2273 = load i32, i32* %select.ptr.609, align 4
  %2274 = xor i32 %2268, %2273
  %2275 = getelementptr inbounds i32, i32* %2174, i64 9
  %2276 = load i1, i1* %out.3
  %2277 = icmp slt i64 9, %N
  %2278 = bitcast i64* %shadow to i32*
  %safe.610 = or i1 %2276, %2277
  %select.ptr.611 = select i1 %safe.610, i32* %2275, i32* %2278
  %2279 = load i32, i32* %2275
  %select.val.612 = select i1 %2276, i32 %2274, i32 %2279
  store i32 %select.val.612, i32* %select.ptr.611, align 4
  %2280 = getelementptr inbounds i32, i32* %2174, i64 4
  %2281 = load i1, i1* %out.3
  %2282 = icmp slt i64 4, %N
  %2283 = bitcast i64* %shadow to i32*
  %safe.613 = or i1 %2281, %2282
  %select.ptr.614 = select i1 %safe.613, i32* %2280, i32* %2283
  %2284 = load i32, i32* %select.ptr.614, align 4
  %2285 = getelementptr inbounds i32, i32* %2174, i64 9
  %2286 = load i1, i1* %out.3
  %2287 = icmp slt i64 9, %N
  %2288 = bitcast i64* %shadow to i32*
  %safe.615 = or i1 %2286, %2287
  %select.ptr.616 = select i1 %safe.615, i32* %2285, i32* %2288
  %2289 = load i32, i32* %select.ptr.616, align 4
  %2290 = xor i32 %2284, %2289
  %2291 = getelementptr inbounds i32, i32* %2174, i64 10
  %2292 = load i1, i1* %out.3
  %2293 = icmp slt i64 10, %N
  %2294 = bitcast i64* %shadow to i32*
  %safe.617 = or i1 %2292, %2293
  %select.ptr.618 = select i1 %safe.617, i32* %2291, i32* %2294
  %2295 = load i32, i32* %2291
  %select.val.619 = select i1 %2292, i32 %2290, i32 %2295
  store i32 %select.val.619, i32* %select.ptr.618, align 4
  %2296 = getelementptr inbounds i32, i32* %2174, i64 5
  %2297 = load i1, i1* %out.3
  %2298 = icmp slt i64 5, %N
  %2299 = bitcast i64* %shadow to i32*
  %safe.620 = or i1 %2297, %2298
  %select.ptr.621 = select i1 %safe.620, i32* %2296, i32* %2299
  %2300 = load i32, i32* %select.ptr.621, align 4
  %2301 = getelementptr inbounds i32, i32* %2174, i64 10
  %2302 = load i1, i1* %out.3
  %2303 = icmp slt i64 10, %N
  %2304 = bitcast i64* %shadow to i32*
  %safe.622 = or i1 %2302, %2303
  %select.ptr.623 = select i1 %safe.622, i32* %2301, i32* %2304
  %2305 = load i32, i32* %select.ptr.623, align 4
  %2306 = xor i32 %2300, %2305
  %2307 = getelementptr inbounds i32, i32* %2174, i64 11
  %2308 = load i1, i1* %out.3
  %2309 = icmp slt i64 11, %N
  %2310 = bitcast i64* %shadow to i32*
  %safe.624 = or i1 %2308, %2309
  %select.ptr.625 = select i1 %safe.624, i32* %2307, i32* %2310
  %2311 = load i32, i32* %2307
  %select.val.626 = select i1 %2308, i32 %2306, i32 %2311
  store i32 %select.val.626, i32* %select.ptr.625, align 4
  %2312 = getelementptr inbounds i32, i32* %2174, i64 6
  %2313 = getelementptr inbounds i32, i32* %2312, i64 5
  %2314 = load i1, i1* %out.3
  %2315 = icmp slt i64 5, %N
  %2316 = bitcast i64* %shadow to i32*
  %safe.627 = or i1 %2314, %2315
  %select.ptr.628 = select i1 %safe.627, i32* %2313, i32* %2316
  %2317 = load i32, i32* %select.ptr.628, align 4
  %2318 = load i1, i1* %out.3
  %2319 = icmp slt i64 6, %N
  %2320 = bitcast i64* %shadow to i32*
  %safe.629 = or i1 %2318, %2319
  %select.ptr.630 = select i1 %safe.629, i32* %2312, i32* %2320
  %2321 = load i32, i32* %select.ptr.630, align 4
  %2322 = lshr i32 %2317, 16
  %2323 = and i32 %2322, 255
  %2324 = zext i32 %2323 to i64
  %2325 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2324
  %2326 = load i1, i1* %out.3
  %2327 = sext i32 256 to i64
  %2328 = icmp slt i64 %2324, %2327
  %2329 = bitcast i64* %shadow to i32*
  %safe.631 = or i1 %2326, %2328
  %select.ptr.632 = select i1 %safe.631, i32* %2325, i32* %2329
  %2330 = load i32, i32* %select.ptr.632, align 4
  %2331 = and i32 %2330, -16777216
  %2332 = xor i32 %2321, %2331
  %2333 = lshr i32 %2317, 8
  %2334 = and i32 %2333, 255
  %2335 = zext i32 %2334 to i64
  %2336 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2335
  %2337 = load i1, i1* %out.3
  %2338 = sext i32 256 to i64
  %2339 = icmp slt i64 %2335, %2338
  %2340 = bitcast i64* %shadow to i32*
  %safe.633 = or i1 %2337, %2339
  %select.ptr.634 = select i1 %safe.633, i32* %2336, i32* %2340
  %2341 = load i32, i32* %select.ptr.634, align 4
  %2342 = and i32 %2341, 16711680
  %2343 = xor i32 %2332, %2342
  %2344 = and i32 %2317, 255
  %2345 = zext i32 %2344 to i64
  %2346 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2345
  %2347 = load i1, i1* %out.3
  %2348 = sext i32 256 to i64
  %2349 = icmp slt i64 %2345, %2348
  %2350 = bitcast i64* %shadow to i32*
  %safe.635 = or i1 %2347, %2349
  %select.ptr.636 = select i1 %safe.635, i32* %2346, i32* %2350
  %2351 = load i32, i32* %select.ptr.636, align 4
  %2352 = and i32 %2351, 65280
  %2353 = xor i32 %2343, %2352
  %2354 = lshr i32 %2317, 24
  %2355 = zext i32 %2354 to i64
  %2356 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2355
  %2357 = load i1, i1* %out.3
  %2358 = sext i32 256 to i64
  %2359 = icmp slt i64 %2355, %2358
  %2360 = bitcast i64* %shadow to i32*
  %safe.637 = or i1 %2357, %2359
  %select.ptr.638 = select i1 %safe.637, i32* %2356, i32* %2360
  %2361 = load i32, i32* %select.ptr.638, align 4
  %2362 = and i32 %2361, 255
  %2363 = xor i32 %2353, %2362
  %2364 = xor i32 %2363, 536870912
  %2365 = getelementptr inbounds i32, i32* %2312, i64 6
  %2366 = load i1, i1* %out.3
  %2367 = icmp slt i64 6, %N
  %2368 = bitcast i64* %shadow to i32*
  %safe.639 = or i1 %2366, %2367
  %select.ptr.640 = select i1 %safe.639, i32* %2365, i32* %2368
  %2369 = load i32, i32* %2365
  %select.val.641 = select i1 %2366, i32 %2364, i32 %2369
  store i32 %select.val.641, i32* %select.ptr.640, align 4
  %2370 = getelementptr inbounds i32, i32* %2312, i64 1
  %2371 = load i1, i1* %out.3
  %2372 = icmp slt i64 1, %N
  %2373 = bitcast i64* %shadow to i32*
  %safe.642 = or i1 %2371, %2372
  %select.ptr.643 = select i1 %safe.642, i32* %2370, i32* %2373
  %2374 = load i32, i32* %select.ptr.643, align 4
  %2375 = getelementptr inbounds i32, i32* %2312, i64 6
  %2376 = load i1, i1* %out.3
  %2377 = icmp slt i64 6, %N
  %2378 = bitcast i64* %shadow to i32*
  %safe.644 = or i1 %2376, %2377
  %select.ptr.645 = select i1 %safe.644, i32* %2375, i32* %2378
  %2379 = load i32, i32* %select.ptr.645, align 4
  %2380 = xor i32 %2374, %2379
  %2381 = getelementptr inbounds i32, i32* %2312, i64 7
  %2382 = load i1, i1* %out.3
  %2383 = icmp slt i64 7, %N
  %2384 = bitcast i64* %shadow to i32*
  %safe.646 = or i1 %2382, %2383
  %select.ptr.647 = select i1 %safe.646, i32* %2381, i32* %2384
  %2385 = load i32, i32* %2381
  %select.val.648 = select i1 %2382, i32 %2380, i32 %2385
  store i32 %select.val.648, i32* %select.ptr.647, align 4
  %2386 = getelementptr inbounds i32, i32* %2312, i64 2
  %2387 = load i1, i1* %out.3
  %2388 = icmp slt i64 2, %N
  %2389 = bitcast i64* %shadow to i32*
  %safe.649 = or i1 %2387, %2388
  %select.ptr.650 = select i1 %safe.649, i32* %2386, i32* %2389
  %2390 = load i32, i32* %select.ptr.650, align 4
  %2391 = getelementptr inbounds i32, i32* %2312, i64 7
  %2392 = load i1, i1* %out.3
  %2393 = icmp slt i64 7, %N
  %2394 = bitcast i64* %shadow to i32*
  %safe.651 = or i1 %2392, %2393
  %select.ptr.652 = select i1 %safe.651, i32* %2391, i32* %2394
  %2395 = load i32, i32* %select.ptr.652, align 4
  %2396 = xor i32 %2390, %2395
  %2397 = getelementptr inbounds i32, i32* %2312, i64 8
  %2398 = load i1, i1* %out.3
  %2399 = icmp slt i64 8, %N
  %2400 = bitcast i64* %shadow to i32*
  %safe.653 = or i1 %2398, %2399
  %select.ptr.654 = select i1 %safe.653, i32* %2397, i32* %2400
  %2401 = load i32, i32* %2397
  %select.val.655 = select i1 %2398, i32 %2396, i32 %2401
  store i32 %select.val.655, i32* %select.ptr.654, align 4
  %2402 = getelementptr inbounds i32, i32* %2312, i64 3
  %2403 = load i1, i1* %out.3
  %2404 = icmp slt i64 3, %N
  %2405 = bitcast i64* %shadow to i32*
  %safe.656 = or i1 %2403, %2404
  %select.ptr.657 = select i1 %safe.656, i32* %2402, i32* %2405
  %2406 = load i32, i32* %select.ptr.657, align 4
  %2407 = getelementptr inbounds i32, i32* %2312, i64 8
  %2408 = load i1, i1* %out.3
  %2409 = icmp slt i64 8, %N
  %2410 = bitcast i64* %shadow to i32*
  %safe.658 = or i1 %2408, %2409
  %select.ptr.659 = select i1 %safe.658, i32* %2407, i32* %2410
  %2411 = load i32, i32* %select.ptr.659, align 4
  %2412 = xor i32 %2406, %2411
  %2413 = getelementptr inbounds i32, i32* %2312, i64 9
  %2414 = load i1, i1* %out.3
  %2415 = icmp slt i64 9, %N
  %2416 = bitcast i64* %shadow to i32*
  %safe.660 = or i1 %2414, %2415
  %select.ptr.661 = select i1 %safe.660, i32* %2413, i32* %2416
  %2417 = load i32, i32* %2413
  %select.val.662 = select i1 %2414, i32 %2412, i32 %2417
  store i32 %select.val.662, i32* %select.ptr.661, align 4
  %2418 = getelementptr inbounds i32, i32* %2312, i64 4
  %2419 = load i1, i1* %out.3
  %2420 = icmp slt i64 4, %N
  %2421 = bitcast i64* %shadow to i32*
  %safe.663 = or i1 %2419, %2420
  %select.ptr.664 = select i1 %safe.663, i32* %2418, i32* %2421
  %2422 = load i32, i32* %select.ptr.664, align 4
  %2423 = getelementptr inbounds i32, i32* %2312, i64 9
  %2424 = load i1, i1* %out.3
  %2425 = icmp slt i64 9, %N
  %2426 = bitcast i64* %shadow to i32*
  %safe.665 = or i1 %2424, %2425
  %select.ptr.666 = select i1 %safe.665, i32* %2423, i32* %2426
  %2427 = load i32, i32* %select.ptr.666, align 4
  %2428 = xor i32 %2422, %2427
  %2429 = getelementptr inbounds i32, i32* %2312, i64 10
  %2430 = load i1, i1* %out.3
  %2431 = icmp slt i64 10, %N
  %2432 = bitcast i64* %shadow to i32*
  %safe.667 = or i1 %2430, %2431
  %select.ptr.668 = select i1 %safe.667, i32* %2429, i32* %2432
  %2433 = load i32, i32* %2429
  %select.val.669 = select i1 %2430, i32 %2428, i32 %2433
  store i32 %select.val.669, i32* %select.ptr.668, align 4
  %2434 = getelementptr inbounds i32, i32* %2312, i64 5
  %2435 = load i1, i1* %out.3
  %2436 = icmp slt i64 5, %N
  %2437 = bitcast i64* %shadow to i32*
  %safe.670 = or i1 %2435, %2436
  %select.ptr.671 = select i1 %safe.670, i32* %2434, i32* %2437
  %2438 = load i32, i32* %select.ptr.671, align 4
  %2439 = getelementptr inbounds i32, i32* %2312, i64 10
  %2440 = load i1, i1* %out.3
  %2441 = icmp slt i64 10, %N
  %2442 = bitcast i64* %shadow to i32*
  %safe.672 = or i1 %2440, %2441
  %select.ptr.673 = select i1 %safe.672, i32* %2439, i32* %2442
  %2443 = load i32, i32* %select.ptr.673, align 4
  %2444 = xor i32 %2438, %2443
  %2445 = getelementptr inbounds i32, i32* %2312, i64 11
  %2446 = load i1, i1* %out.3
  %2447 = icmp slt i64 11, %N
  %2448 = bitcast i64* %shadow to i32*
  %safe.674 = or i1 %2446, %2447
  %select.ptr.675 = select i1 %safe.674, i32* %2445, i32* %2448
  %2449 = load i32, i32* %2445
  %select.val.676 = select i1 %2446, i32 %2444, i32 %2449
  store i32 %select.val.676, i32* %select.ptr.675, align 4
  %2450 = getelementptr inbounds i32, i32* %2312, i64 6
  %2451 = getelementptr inbounds i32, i32* %2450, i64 5
  %2452 = load i1, i1* %out.3
  %2453 = icmp slt i64 5, %N
  %2454 = bitcast i64* %shadow to i32*
  %safe.677 = or i1 %2452, %2453
  %select.ptr.678 = select i1 %safe.677, i32* %2451, i32* %2454
  %2455 = load i32, i32* %select.ptr.678, align 4
  %2456 = load i1, i1* %out.3
  %2457 = icmp slt i64 6, %N
  %2458 = bitcast i64* %shadow to i32*
  %safe.679 = or i1 %2456, %2457
  %select.ptr.680 = select i1 %safe.679, i32* %2450, i32* %2458
  %2459 = load i32, i32* %select.ptr.680, align 4
  %2460 = lshr i32 %2455, 16
  %2461 = and i32 %2460, 255
  %2462 = zext i32 %2461 to i64
  %2463 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2462
  %2464 = load i1, i1* %out.3
  %2465 = sext i32 256 to i64
  %2466 = icmp slt i64 %2462, %2465
  %2467 = bitcast i64* %shadow to i32*
  %safe.681 = or i1 %2464, %2466
  %select.ptr.682 = select i1 %safe.681, i32* %2463, i32* %2467
  %2468 = load i32, i32* %select.ptr.682, align 4
  %2469 = and i32 %2468, -16777216
  %2470 = xor i32 %2459, %2469
  %2471 = lshr i32 %2455, 8
  %2472 = and i32 %2471, 255
  %2473 = zext i32 %2472 to i64
  %2474 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2473
  %2475 = load i1, i1* %out.3
  %2476 = sext i32 256 to i64
  %2477 = icmp slt i64 %2473, %2476
  %2478 = bitcast i64* %shadow to i32*
  %safe.683 = or i1 %2475, %2477
  %select.ptr.684 = select i1 %safe.683, i32* %2474, i32* %2478
  %2479 = load i32, i32* %select.ptr.684, align 4
  %2480 = and i32 %2479, 16711680
  %2481 = xor i32 %2470, %2480
  %2482 = and i32 %2455, 255
  %2483 = zext i32 %2482 to i64
  %2484 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2483
  %2485 = load i1, i1* %out.3
  %2486 = sext i32 256 to i64
  %2487 = icmp slt i64 %2483, %2486
  %2488 = bitcast i64* %shadow to i32*
  %safe.685 = or i1 %2485, %2487
  %select.ptr.686 = select i1 %safe.685, i32* %2484, i32* %2488
  %2489 = load i32, i32* %select.ptr.686, align 4
  %2490 = and i32 %2489, 65280
  %2491 = xor i32 %2481, %2490
  %2492 = lshr i32 %2455, 24
  %2493 = zext i32 %2492 to i64
  %2494 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2493
  %2495 = load i1, i1* %out.3
  %2496 = sext i32 256 to i64
  %2497 = icmp slt i64 %2493, %2496
  %2498 = bitcast i64* %shadow to i32*
  %safe.687 = or i1 %2495, %2497
  %select.ptr.688 = select i1 %safe.687, i32* %2494, i32* %2498
  %2499 = load i32, i32* %select.ptr.688, align 4
  %2500 = and i32 %2499, 255
  %2501 = xor i32 %2491, %2500
  %2502 = xor i32 %2501, 1073741824
  %2503 = getelementptr inbounds i32, i32* %2450, i64 6
  %2504 = load i1, i1* %out.3
  %2505 = icmp slt i64 6, %N
  %2506 = bitcast i64* %shadow to i32*
  %safe.689 = or i1 %2504, %2505
  %select.ptr.690 = select i1 %safe.689, i32* %2503, i32* %2506
  %2507 = load i32, i32* %2503
  %select.val.691 = select i1 %2504, i32 %2502, i32 %2507
  store i32 %select.val.691, i32* %select.ptr.690, align 4
  %2508 = getelementptr inbounds i32, i32* %2450, i64 1
  %2509 = load i1, i1* %out.3
  %2510 = icmp slt i64 1, %N
  %2511 = bitcast i64* %shadow to i32*
  %safe.692 = or i1 %2509, %2510
  %select.ptr.693 = select i1 %safe.692, i32* %2508, i32* %2511
  %2512 = load i32, i32* %select.ptr.693, align 4
  %2513 = getelementptr inbounds i32, i32* %2450, i64 6
  %2514 = load i1, i1* %out.3
  %2515 = icmp slt i64 6, %N
  %2516 = bitcast i64* %shadow to i32*
  %safe.694 = or i1 %2514, %2515
  %select.ptr.695 = select i1 %safe.694, i32* %2513, i32* %2516
  %2517 = load i32, i32* %select.ptr.695, align 4
  %2518 = xor i32 %2512, %2517
  %2519 = getelementptr inbounds i32, i32* %2450, i64 7
  %2520 = load i1, i1* %out.3
  %2521 = icmp slt i64 7, %N
  %2522 = bitcast i64* %shadow to i32*
  %safe.696 = or i1 %2520, %2521
  %select.ptr.697 = select i1 %safe.696, i32* %2519, i32* %2522
  %2523 = load i32, i32* %2519
  %select.val.698 = select i1 %2520, i32 %2518, i32 %2523
  store i32 %select.val.698, i32* %select.ptr.697, align 4
  %2524 = getelementptr inbounds i32, i32* %2450, i64 2
  %2525 = load i1, i1* %out.3
  %2526 = icmp slt i64 2, %N
  %2527 = bitcast i64* %shadow to i32*
  %safe.699 = or i1 %2525, %2526
  %select.ptr.700 = select i1 %safe.699, i32* %2524, i32* %2527
  %2528 = load i32, i32* %select.ptr.700, align 4
  %2529 = getelementptr inbounds i32, i32* %2450, i64 7
  %2530 = load i1, i1* %out.3
  %2531 = icmp slt i64 7, %N
  %2532 = bitcast i64* %shadow to i32*
  %safe.701 = or i1 %2530, %2531
  %select.ptr.702 = select i1 %safe.701, i32* %2529, i32* %2532
  %2533 = load i32, i32* %select.ptr.702, align 4
  %2534 = xor i32 %2528, %2533
  %2535 = getelementptr inbounds i32, i32* %2450, i64 8
  %2536 = load i1, i1* %out.3
  %2537 = icmp slt i64 8, %N
  %2538 = bitcast i64* %shadow to i32*
  %safe.703 = or i1 %2536, %2537
  %select.ptr.704 = select i1 %safe.703, i32* %2535, i32* %2538
  %2539 = load i32, i32* %2535
  %select.val.705 = select i1 %2536, i32 %2534, i32 %2539
  store i32 %select.val.705, i32* %select.ptr.704, align 4
  %2540 = getelementptr inbounds i32, i32* %2450, i64 3
  %2541 = load i1, i1* %out.3
  %2542 = icmp slt i64 3, %N
  %2543 = bitcast i64* %shadow to i32*
  %safe.706 = or i1 %2541, %2542
  %select.ptr.707 = select i1 %safe.706, i32* %2540, i32* %2543
  %2544 = load i32, i32* %select.ptr.707, align 4
  %2545 = getelementptr inbounds i32, i32* %2450, i64 8
  %2546 = load i1, i1* %out.3
  %2547 = icmp slt i64 8, %N
  %2548 = bitcast i64* %shadow to i32*
  %safe.708 = or i1 %2546, %2547
  %select.ptr.709 = select i1 %safe.708, i32* %2545, i32* %2548
  %2549 = load i32, i32* %select.ptr.709, align 4
  %2550 = xor i32 %2544, %2549
  %2551 = getelementptr inbounds i32, i32* %2450, i64 9
  %2552 = load i1, i1* %out.3
  %2553 = icmp slt i64 9, %N
  %2554 = bitcast i64* %shadow to i32*
  %safe.710 = or i1 %2552, %2553
  %select.ptr.711 = select i1 %safe.710, i32* %2551, i32* %2554
  %2555 = load i32, i32* %2551
  %select.val.712 = select i1 %2552, i32 %2550, i32 %2555
  store i32 %select.val.712, i32* %select.ptr.711, align 4
  %2556 = getelementptr inbounds i32, i32* %2450, i64 4
  %2557 = load i1, i1* %out.3
  %2558 = icmp slt i64 4, %N
  %2559 = bitcast i64* %shadow to i32*
  %safe.713 = or i1 %2557, %2558
  %select.ptr.714 = select i1 %safe.713, i32* %2556, i32* %2559
  %2560 = load i32, i32* %select.ptr.714, align 4
  %2561 = getelementptr inbounds i32, i32* %2450, i64 9
  %2562 = load i1, i1* %out.3
  %2563 = icmp slt i64 9, %N
  %2564 = bitcast i64* %shadow to i32*
  %safe.715 = or i1 %2562, %2563
  %select.ptr.716 = select i1 %safe.715, i32* %2561, i32* %2564
  %2565 = load i32, i32* %select.ptr.716, align 4
  %2566 = xor i32 %2560, %2565
  %2567 = getelementptr inbounds i32, i32* %2450, i64 10
  %2568 = load i1, i1* %out.3
  %2569 = icmp slt i64 10, %N
  %2570 = bitcast i64* %shadow to i32*
  %safe.717 = or i1 %2568, %2569
  %select.ptr.718 = select i1 %safe.717, i32* %2567, i32* %2570
  %2571 = load i32, i32* %2567
  %select.val.719 = select i1 %2568, i32 %2566, i32 %2571
  store i32 %select.val.719, i32* %select.ptr.718, align 4
  %2572 = getelementptr inbounds i32, i32* %2450, i64 5
  %2573 = load i1, i1* %out.3
  %2574 = icmp slt i64 5, %N
  %2575 = bitcast i64* %shadow to i32*
  %safe.720 = or i1 %2573, %2574
  %select.ptr.721 = select i1 %safe.720, i32* %2572, i32* %2575
  %2576 = load i32, i32* %select.ptr.721, align 4
  %2577 = getelementptr inbounds i32, i32* %2450, i64 10
  %2578 = load i1, i1* %out.3
  %2579 = icmp slt i64 10, %N
  %2580 = bitcast i64* %shadow to i32*
  %safe.722 = or i1 %2578, %2579
  %select.ptr.723 = select i1 %safe.722, i32* %2577, i32* %2580
  %2581 = load i32, i32* %select.ptr.723, align 4
  %2582 = xor i32 %2576, %2581
  %2583 = getelementptr inbounds i32, i32* %2450, i64 11
  %2584 = load i1, i1* %out.3
  %2585 = icmp slt i64 11, %N
  %2586 = bitcast i64* %shadow to i32*
  %safe.724 = or i1 %2584, %2585
  %select.ptr.725 = select i1 %safe.724, i32* %2583, i32* %2586
  %2587 = load i32, i32* %2583
  %select.val.726 = select i1 %2584, i32 %2582, i32 %2587
  store i32 %select.val.726, i32* %select.ptr.725, align 4
  %2588 = getelementptr inbounds i32, i32* %2450, i64 6
  %2589 = getelementptr inbounds i32, i32* %2588, i64 5
  %2590 = load i1, i1* %out.3
  %2591 = icmp slt i64 5, %N
  %2592 = bitcast i64* %shadow to i32*
  %safe.727 = or i1 %2590, %2591
  %select.ptr.728 = select i1 %safe.727, i32* %2589, i32* %2592
  %2593 = load i32, i32* %select.ptr.728, align 4
  %2594 = load i1, i1* %out.3
  %2595 = icmp slt i64 6, %N
  %2596 = bitcast i64* %shadow to i32*
  %safe.729 = or i1 %2594, %2595
  %select.ptr.730 = select i1 %safe.729, i32* %2588, i32* %2596
  %2597 = load i32, i32* %select.ptr.730, align 4
  %2598 = lshr i32 %2593, 16
  %2599 = and i32 %2598, 255
  %2600 = zext i32 %2599 to i64
  %2601 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2600
  %2602 = load i1, i1* %out.3
  %2603 = sext i32 256 to i64
  %2604 = icmp slt i64 %2600, %2603
  %2605 = bitcast i64* %shadow to i32*
  %safe.731 = or i1 %2602, %2604
  %select.ptr.732 = select i1 %safe.731, i32* %2601, i32* %2605
  %2606 = load i32, i32* %select.ptr.732, align 4
  %2607 = and i32 %2606, -16777216
  %2608 = xor i32 %2597, %2607
  %2609 = lshr i32 %2593, 8
  %2610 = and i32 %2609, 255
  %2611 = zext i32 %2610 to i64
  %2612 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2611
  %2613 = load i1, i1* %out.3
  %2614 = sext i32 256 to i64
  %2615 = icmp slt i64 %2611, %2614
  %2616 = bitcast i64* %shadow to i32*
  %safe.733 = or i1 %2613, %2615
  %select.ptr.734 = select i1 %safe.733, i32* %2612, i32* %2616
  %2617 = load i32, i32* %select.ptr.734, align 4
  %2618 = and i32 %2617, 16711680
  %2619 = xor i32 %2608, %2618
  %2620 = and i32 %2593, 255
  %2621 = zext i32 %2620 to i64
  %2622 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2621
  %2623 = load i1, i1* %out.3
  %2624 = sext i32 256 to i64
  %2625 = icmp slt i64 %2621, %2624
  %2626 = bitcast i64* %shadow to i32*
  %safe.735 = or i1 %2623, %2625
  %select.ptr.736 = select i1 %safe.735, i32* %2622, i32* %2626
  %2627 = load i32, i32* %select.ptr.736, align 4
  %2628 = and i32 %2627, 65280
  %2629 = xor i32 %2619, %2628
  %2630 = lshr i32 %2593, 24
  %2631 = zext i32 %2630 to i64
  %2632 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2631
  %2633 = load i1, i1* %out.3
  %2634 = sext i32 256 to i64
  %2635 = icmp slt i64 %2631, %2634
  %2636 = bitcast i64* %shadow to i32*
  %safe.737 = or i1 %2633, %2635
  %select.ptr.738 = select i1 %safe.737, i32* %2632, i32* %2636
  %2637 = load i32, i32* %select.ptr.738, align 4
  %2638 = and i32 %2637, 255
  %2639 = xor i32 %2629, %2638
  %2640 = xor i32 %2639, -2147483648
  %2641 = getelementptr inbounds i32, i32* %2588, i64 6
  %2642 = load i1, i1* %out.3
  %2643 = icmp slt i64 6, %N
  %2644 = bitcast i64* %shadow to i32*
  %safe.739 = or i1 %2642, %2643
  %select.ptr.740 = select i1 %safe.739, i32* %2641, i32* %2644
  %2645 = load i32, i32* %2641
  %select.val.741 = select i1 %2642, i32 %2640, i32 %2645
  store i32 %select.val.741, i32* %select.ptr.740, align 4
  %2646 = getelementptr inbounds i32, i32* %2588, i64 1
  %2647 = load i1, i1* %out.3
  %2648 = icmp slt i64 1, %N
  %2649 = bitcast i64* %shadow to i32*
  %safe.742 = or i1 %2647, %2648
  %select.ptr.743 = select i1 %safe.742, i32* %2646, i32* %2649
  %2650 = load i32, i32* %select.ptr.743, align 4
  %2651 = getelementptr inbounds i32, i32* %2588, i64 6
  %2652 = load i1, i1* %out.3
  %2653 = icmp slt i64 6, %N
  %2654 = bitcast i64* %shadow to i32*
  %safe.744 = or i1 %2652, %2653
  %select.ptr.745 = select i1 %safe.744, i32* %2651, i32* %2654
  %2655 = load i32, i32* %select.ptr.745, align 4
  %2656 = xor i32 %2650, %2655
  %2657 = getelementptr inbounds i32, i32* %2588, i64 7
  %2658 = load i1, i1* %out.3
  %2659 = icmp slt i64 7, %N
  %2660 = bitcast i64* %shadow to i32*
  %safe.746 = or i1 %2658, %2659
  %select.ptr.747 = select i1 %safe.746, i32* %2657, i32* %2660
  %2661 = load i32, i32* %2657
  %select.val.748 = select i1 %2658, i32 %2656, i32 %2661
  store i32 %select.val.748, i32* %select.ptr.747, align 4
  %2662 = getelementptr inbounds i32, i32* %2588, i64 2
  %2663 = load i1, i1* %out.3
  %2664 = icmp slt i64 2, %N
  %2665 = bitcast i64* %shadow to i32*
  %safe.749 = or i1 %2663, %2664
  %select.ptr.750 = select i1 %safe.749, i32* %2662, i32* %2665
  %2666 = load i32, i32* %select.ptr.750, align 4
  %2667 = getelementptr inbounds i32, i32* %2588, i64 7
  %2668 = load i1, i1* %out.3
  %2669 = icmp slt i64 7, %N
  %2670 = bitcast i64* %shadow to i32*
  %safe.751 = or i1 %2668, %2669
  %select.ptr.752 = select i1 %safe.751, i32* %2667, i32* %2670
  %2671 = load i32, i32* %select.ptr.752, align 4
  %2672 = xor i32 %2666, %2671
  %2673 = getelementptr inbounds i32, i32* %2588, i64 8
  %2674 = load i1, i1* %out.3
  %2675 = icmp slt i64 8, %N
  %2676 = bitcast i64* %shadow to i32*
  %safe.753 = or i1 %2674, %2675
  %select.ptr.754 = select i1 %safe.753, i32* %2673, i32* %2676
  %2677 = load i32, i32* %2673
  %select.val.755 = select i1 %2674, i32 %2672, i32 %2677
  store i32 %select.val.755, i32* %select.ptr.754, align 4
  %2678 = getelementptr inbounds i32, i32* %2588, i64 3
  %2679 = load i1, i1* %out.3
  %2680 = icmp slt i64 3, %N
  %2681 = bitcast i64* %shadow to i32*
  %safe.756 = or i1 %2679, %2680
  %select.ptr.757 = select i1 %safe.756, i32* %2678, i32* %2681
  %2682 = load i32, i32* %select.ptr.757, align 4
  %2683 = getelementptr inbounds i32, i32* %2588, i64 8
  %2684 = load i1, i1* %out.3
  %2685 = icmp slt i64 8, %N
  %2686 = bitcast i64* %shadow to i32*
  %safe.758 = or i1 %2684, %2685
  %select.ptr.759 = select i1 %safe.758, i32* %2683, i32* %2686
  %2687 = load i32, i32* %select.ptr.759, align 4
  %2688 = xor i32 %2682, %2687
  %2689 = getelementptr inbounds i32, i32* %2588, i64 9
  %2690 = load i1, i1* %out.3
  %2691 = icmp slt i64 9, %N
  %2692 = bitcast i64* %shadow to i32*
  %safe.760 = or i1 %2690, %2691
  %select.ptr.761 = select i1 %safe.760, i32* %2689, i32* %2692
  %2693 = load i32, i32* %2689
  %select.val.762 = select i1 %2690, i32 %2688, i32 %2693
  store i32 %select.val.762, i32* %select.ptr.761, align 4
  %2694 = load i1, i1* %out.
  %in. = and i1 %2694, %91
  store i1 %in., i1* %out.1
  %2695 = getelementptr inbounds i32, i32* %0, i64 3
  %2696 = load i1, i1* %out.1
  %2697 = icmp slt i64 3, %N
  %2698 = bitcast i64* %shadow to i32*
  %safe. = or i1 %2696, %2697
  %select.ptr. = select i1 %safe., i32* %2695, i32* %2698
  %2699 = load i32, i32* %select.ptr., align 4
  %2700 = load i1, i1* %out.1
  %2701 = load i32, i32* %0, align 4
  %2702 = lshr i32 %2699, 16
  %2703 = and i32 %2702, 255
  %2704 = zext i32 %2703 to i64
  %2705 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2704
  %2706 = load i1, i1* %out.1
  %2707 = sext i32 256 to i64
  %2708 = icmp slt i64 %2704, %2707
  %2709 = bitcast i64* %shadow to i32*
  %safe.2 = or i1 %2706, %2708
  %select.ptr.3 = select i1 %safe.2, i32* %2705, i32* %2709
  %2710 = load i32, i32* %select.ptr.3, align 4
  %2711 = and i32 %2710, -16777216
  %2712 = xor i32 %2701, %2711
  %2713 = lshr i32 %2699, 8
  %2714 = and i32 %2713, 255
  %2715 = zext i32 %2714 to i64
  %2716 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2715
  %2717 = load i1, i1* %out.1
  %2718 = sext i32 256 to i64
  %2719 = icmp slt i64 %2715, %2718
  %2720 = bitcast i64* %shadow to i32*
  %safe.4 = or i1 %2717, %2719
  %select.ptr.5 = select i1 %safe.4, i32* %2716, i32* %2720
  %2721 = load i32, i32* %select.ptr.5, align 4
  %2722 = and i32 %2721, 16711680
  %2723 = xor i32 %2712, %2722
  %2724 = and i32 %2699, 255
  %2725 = zext i32 %2724 to i64
  %2726 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2725
  %2727 = load i1, i1* %out.1
  %2728 = sext i32 256 to i64
  %2729 = icmp slt i64 %2725, %2728
  %2730 = bitcast i64* %shadow to i32*
  %safe.6 = or i1 %2727, %2729
  %select.ptr.7 = select i1 %safe.6, i32* %2726, i32* %2730
  %2731 = load i32, i32* %select.ptr.7, align 4
  %2732 = and i32 %2731, 65280
  %2733 = xor i32 %2723, %2732
  %2734 = lshr i32 %2699, 24
  %2735 = zext i32 %2734 to i64
  %2736 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2735
  %2737 = load i1, i1* %out.1
  %2738 = sext i32 256 to i64
  %2739 = icmp slt i64 %2735, %2738
  %2740 = bitcast i64* %shadow to i32*
  %safe.8 = or i1 %2737, %2739
  %select.ptr.9 = select i1 %safe.8, i32* %2736, i32* %2740
  %2741 = load i32, i32* %select.ptr.9, align 4
  %2742 = and i32 %2741, 255
  %2743 = xor i32 %2733, %2742
  %2744 = xor i32 %2743, 16777216
  %2745 = getelementptr inbounds i32, i32* %0, i64 4
  %2746 = load i1, i1* %out.1
  %2747 = icmp slt i64 4, %N
  %2748 = bitcast i64* %shadow to i32*
  %safe.10 = or i1 %2746, %2747
  %select.ptr.11 = select i1 %safe.10, i32* %2745, i32* %2748
  %2749 = load i32, i32* %2745
  %select.val. = select i1 %2746, i32 %2744, i32 %2749
  store i32 %select.val., i32* %select.ptr.11, align 4
  %2750 = getelementptr inbounds i32, i32* %0, i64 1
  %2751 = load i1, i1* %out.1
  %2752 = icmp slt i64 1, %N
  %2753 = bitcast i64* %shadow to i32*
  %safe.12 = or i1 %2751, %2752
  %select.ptr.13 = select i1 %safe.12, i32* %2750, i32* %2753
  %2754 = load i32, i32* %select.ptr.13, align 4
  %2755 = getelementptr inbounds i32, i32* %0, i64 4
  %2756 = load i1, i1* %out.1
  %2757 = icmp slt i64 4, %N
  %2758 = bitcast i64* %shadow to i32*
  %safe.14 = or i1 %2756, %2757
  %select.ptr.15 = select i1 %safe.14, i32* %2755, i32* %2758
  %2759 = load i32, i32* %select.ptr.15, align 4
  %2760 = xor i32 %2754, %2759
  %2761 = getelementptr inbounds i32, i32* %0, i64 5
  %2762 = load i1, i1* %out.1
  %2763 = icmp slt i64 5, %N
  %2764 = bitcast i64* %shadow to i32*
  %safe.16 = or i1 %2762, %2763
  %select.ptr.17 = select i1 %safe.16, i32* %2761, i32* %2764
  %2765 = load i32, i32* %2761
  %select.val.18 = select i1 %2762, i32 %2760, i32 %2765
  store i32 %select.val.18, i32* %select.ptr.17, align 4
  %2766 = getelementptr inbounds i32, i32* %0, i64 2
  %2767 = load i1, i1* %out.1
  %2768 = icmp slt i64 2, %N
  %2769 = bitcast i64* %shadow to i32*
  %safe.19 = or i1 %2767, %2768
  %select.ptr.20 = select i1 %safe.19, i32* %2766, i32* %2769
  %2770 = load i32, i32* %select.ptr.20, align 4
  %2771 = getelementptr inbounds i32, i32* %0, i64 5
  %2772 = load i1, i1* %out.1
  %2773 = icmp slt i64 5, %N
  %2774 = bitcast i64* %shadow to i32*
  %safe.21 = or i1 %2772, %2773
  %select.ptr.22 = select i1 %safe.21, i32* %2771, i32* %2774
  %2775 = load i32, i32* %select.ptr.22, align 4
  %2776 = xor i32 %2770, %2775
  %2777 = getelementptr inbounds i32, i32* %0, i64 6
  %2778 = load i1, i1* %out.1
  %2779 = icmp slt i64 6, %N
  %2780 = bitcast i64* %shadow to i32*
  %safe.23 = or i1 %2778, %2779
  %select.ptr.24 = select i1 %safe.23, i32* %2777, i32* %2780
  %2781 = load i32, i32* %2777
  %select.val.25 = select i1 %2778, i32 %2776, i32 %2781
  store i32 %select.val.25, i32* %select.ptr.24, align 4
  %2782 = getelementptr inbounds i32, i32* %0, i64 3
  %2783 = load i1, i1* %out.1
  %2784 = icmp slt i64 3, %N
  %2785 = bitcast i64* %shadow to i32*
  %safe.26 = or i1 %2783, %2784
  %select.ptr.27 = select i1 %safe.26, i32* %2782, i32* %2785
  %2786 = load i32, i32* %select.ptr.27, align 4
  %2787 = getelementptr inbounds i32, i32* %0, i64 6
  %2788 = load i1, i1* %out.1
  %2789 = icmp slt i64 6, %N
  %2790 = bitcast i64* %shadow to i32*
  %safe.28 = or i1 %2788, %2789
  %select.ptr.29 = select i1 %safe.28, i32* %2787, i32* %2790
  %2791 = load i32, i32* %select.ptr.29, align 4
  %2792 = xor i32 %2786, %2791
  %2793 = getelementptr inbounds i32, i32* %0, i64 7
  %2794 = load i1, i1* %out.1
  %2795 = icmp slt i64 7, %N
  %2796 = bitcast i64* %shadow to i32*
  %safe.30 = or i1 %2794, %2795
  %select.ptr.31 = select i1 %safe.30, i32* %2793, i32* %2796
  %2797 = load i32, i32* %2793
  %select.val.32 = select i1 %2794, i32 %2792, i32 %2797
  store i32 %select.val.32, i32* %select.ptr.31, align 4
  %2798 = getelementptr inbounds i32, i32* %0, i64 4
  %2799 = getelementptr inbounds i32, i32* %2798, i64 3
  %2800 = load i1, i1* %out.1
  %2801 = icmp slt i64 3, %N
  %2802 = bitcast i64* %shadow to i32*
  %safe.33 = or i1 %2800, %2801
  %select.ptr.34 = select i1 %safe.33, i32* %2799, i32* %2802
  %2803 = load i32, i32* %select.ptr.34, align 4
  %2804 = load i1, i1* %out.1
  %2805 = icmp slt i64 4, %N
  %2806 = bitcast i64* %shadow to i32*
  %safe.35 = or i1 %2804, %2805
  %select.ptr.36 = select i1 %safe.35, i32* %2798, i32* %2806
  %2807 = load i32, i32* %select.ptr.36, align 4
  %2808 = lshr i32 %2803, 16
  %2809 = and i32 %2808, 255
  %2810 = zext i32 %2809 to i64
  %2811 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2810
  %2812 = load i1, i1* %out.1
  %2813 = sext i32 256 to i64
  %2814 = icmp slt i64 %2810, %2813
  %2815 = bitcast i64* %shadow to i32*
  %safe.37 = or i1 %2812, %2814
  %select.ptr.38 = select i1 %safe.37, i32* %2811, i32* %2815
  %2816 = load i32, i32* %select.ptr.38, align 4
  %2817 = and i32 %2816, -16777216
  %2818 = xor i32 %2807, %2817
  %2819 = lshr i32 %2803, 8
  %2820 = and i32 %2819, 255
  %2821 = zext i32 %2820 to i64
  %2822 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2821
  %2823 = load i1, i1* %out.1
  %2824 = sext i32 256 to i64
  %2825 = icmp slt i64 %2821, %2824
  %2826 = bitcast i64* %shadow to i32*
  %safe.39 = or i1 %2823, %2825
  %select.ptr.40 = select i1 %safe.39, i32* %2822, i32* %2826
  %2827 = load i32, i32* %select.ptr.40, align 4
  %2828 = and i32 %2827, 16711680
  %2829 = xor i32 %2818, %2828
  %2830 = and i32 %2803, 255
  %2831 = zext i32 %2830 to i64
  %2832 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2831
  %2833 = load i1, i1* %out.1
  %2834 = sext i32 256 to i64
  %2835 = icmp slt i64 %2831, %2834
  %2836 = bitcast i64* %shadow to i32*
  %safe.41 = or i1 %2833, %2835
  %select.ptr.42 = select i1 %safe.41, i32* %2832, i32* %2836
  %2837 = load i32, i32* %select.ptr.42, align 4
  %2838 = and i32 %2837, 65280
  %2839 = xor i32 %2829, %2838
  %2840 = lshr i32 %2803, 24
  %2841 = zext i32 %2840 to i64
  %2842 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2841
  %2843 = load i1, i1* %out.1
  %2844 = sext i32 256 to i64
  %2845 = icmp slt i64 %2841, %2844
  %2846 = bitcast i64* %shadow to i32*
  %safe.43 = or i1 %2843, %2845
  %select.ptr.44 = select i1 %safe.43, i32* %2842, i32* %2846
  %2847 = load i32, i32* %select.ptr.44, align 4
  %2848 = and i32 %2847, 255
  %2849 = xor i32 %2839, %2848
  %2850 = xor i32 %2849, 33554432
  %2851 = getelementptr inbounds i32, i32* %2798, i64 4
  %2852 = load i1, i1* %out.1
  %2853 = icmp slt i64 4, %N
  %2854 = bitcast i64* %shadow to i32*
  %safe.45 = or i1 %2852, %2853
  %select.ptr.46 = select i1 %safe.45, i32* %2851, i32* %2854
  %2855 = load i32, i32* %2851
  %select.val.47 = select i1 %2852, i32 %2850, i32 %2855
  store i32 %select.val.47, i32* %select.ptr.46, align 4
  %2856 = getelementptr inbounds i32, i32* %2798, i64 1
  %2857 = load i1, i1* %out.1
  %2858 = icmp slt i64 1, %N
  %2859 = bitcast i64* %shadow to i32*
  %safe.48 = or i1 %2857, %2858
  %select.ptr.49 = select i1 %safe.48, i32* %2856, i32* %2859
  %2860 = load i32, i32* %select.ptr.49, align 4
  %2861 = getelementptr inbounds i32, i32* %2798, i64 4
  %2862 = load i1, i1* %out.1
  %2863 = icmp slt i64 4, %N
  %2864 = bitcast i64* %shadow to i32*
  %safe.50 = or i1 %2862, %2863
  %select.ptr.51 = select i1 %safe.50, i32* %2861, i32* %2864
  %2865 = load i32, i32* %select.ptr.51, align 4
  %2866 = xor i32 %2860, %2865
  %2867 = getelementptr inbounds i32, i32* %2798, i64 5
  %2868 = load i1, i1* %out.1
  %2869 = icmp slt i64 5, %N
  %2870 = bitcast i64* %shadow to i32*
  %safe.52 = or i1 %2868, %2869
  %select.ptr.53 = select i1 %safe.52, i32* %2867, i32* %2870
  %2871 = load i32, i32* %2867
  %select.val.54 = select i1 %2868, i32 %2866, i32 %2871
  store i32 %select.val.54, i32* %select.ptr.53, align 4
  %2872 = getelementptr inbounds i32, i32* %2798, i64 2
  %2873 = load i1, i1* %out.1
  %2874 = icmp slt i64 2, %N
  %2875 = bitcast i64* %shadow to i32*
  %safe.55 = or i1 %2873, %2874
  %select.ptr.56 = select i1 %safe.55, i32* %2872, i32* %2875
  %2876 = load i32, i32* %select.ptr.56, align 4
  %2877 = getelementptr inbounds i32, i32* %2798, i64 5
  %2878 = load i1, i1* %out.1
  %2879 = icmp slt i64 5, %N
  %2880 = bitcast i64* %shadow to i32*
  %safe.57 = or i1 %2878, %2879
  %select.ptr.58 = select i1 %safe.57, i32* %2877, i32* %2880
  %2881 = load i32, i32* %select.ptr.58, align 4
  %2882 = xor i32 %2876, %2881
  %2883 = getelementptr inbounds i32, i32* %2798, i64 6
  %2884 = load i1, i1* %out.1
  %2885 = icmp slt i64 6, %N
  %2886 = bitcast i64* %shadow to i32*
  %safe.59 = or i1 %2884, %2885
  %select.ptr.60 = select i1 %safe.59, i32* %2883, i32* %2886
  %2887 = load i32, i32* %2883
  %select.val.61 = select i1 %2884, i32 %2882, i32 %2887
  store i32 %select.val.61, i32* %select.ptr.60, align 4
  %2888 = getelementptr inbounds i32, i32* %2798, i64 3
  %2889 = load i1, i1* %out.1
  %2890 = icmp slt i64 3, %N
  %2891 = bitcast i64* %shadow to i32*
  %safe.62 = or i1 %2889, %2890
  %select.ptr.63 = select i1 %safe.62, i32* %2888, i32* %2891
  %2892 = load i32, i32* %select.ptr.63, align 4
  %2893 = getelementptr inbounds i32, i32* %2798, i64 6
  %2894 = load i1, i1* %out.1
  %2895 = icmp slt i64 6, %N
  %2896 = bitcast i64* %shadow to i32*
  %safe.64 = or i1 %2894, %2895
  %select.ptr.65 = select i1 %safe.64, i32* %2893, i32* %2896
  %2897 = load i32, i32* %select.ptr.65, align 4
  %2898 = xor i32 %2892, %2897
  %2899 = getelementptr inbounds i32, i32* %2798, i64 7
  %2900 = load i1, i1* %out.1
  %2901 = icmp slt i64 7, %N
  %2902 = bitcast i64* %shadow to i32*
  %safe.66 = or i1 %2900, %2901
  %select.ptr.67 = select i1 %safe.66, i32* %2899, i32* %2902
  %2903 = load i32, i32* %2899
  %select.val.68 = select i1 %2900, i32 %2898, i32 %2903
  store i32 %select.val.68, i32* %select.ptr.67, align 4
  %2904 = getelementptr inbounds i32, i32* %2798, i64 4
  %2905 = getelementptr inbounds i32, i32* %2904, i64 3
  %2906 = load i1, i1* %out.1
  %2907 = icmp slt i64 3, %N
  %2908 = bitcast i64* %shadow to i32*
  %safe.69 = or i1 %2906, %2907
  %select.ptr.70 = select i1 %safe.69, i32* %2905, i32* %2908
  %2909 = load i32, i32* %select.ptr.70, align 4
  %2910 = load i1, i1* %out.1
  %2911 = icmp slt i64 4, %N
  %2912 = bitcast i64* %shadow to i32*
  %safe.71 = or i1 %2910, %2911
  %select.ptr.72 = select i1 %safe.71, i32* %2904, i32* %2912
  %2913 = load i32, i32* %select.ptr.72, align 4
  %2914 = lshr i32 %2909, 16
  %2915 = and i32 %2914, 255
  %2916 = zext i32 %2915 to i64
  %2917 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2916
  %2918 = load i1, i1* %out.1
  %2919 = sext i32 256 to i64
  %2920 = icmp slt i64 %2916, %2919
  %2921 = bitcast i64* %shadow to i32*
  %safe.73 = or i1 %2918, %2920
  %select.ptr.74 = select i1 %safe.73, i32* %2917, i32* %2921
  %2922 = load i32, i32* %select.ptr.74, align 4
  %2923 = and i32 %2922, -16777216
  %2924 = xor i32 %2913, %2923
  %2925 = lshr i32 %2909, 8
  %2926 = and i32 %2925, 255
  %2927 = zext i32 %2926 to i64
  %2928 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2927
  %2929 = load i1, i1* %out.1
  %2930 = sext i32 256 to i64
  %2931 = icmp slt i64 %2927, %2930
  %2932 = bitcast i64* %shadow to i32*
  %safe.75 = or i1 %2929, %2931
  %select.ptr.76 = select i1 %safe.75, i32* %2928, i32* %2932
  %2933 = load i32, i32* %select.ptr.76, align 4
  %2934 = and i32 %2933, 16711680
  %2935 = xor i32 %2924, %2934
  %2936 = and i32 %2909, 255
  %2937 = zext i32 %2936 to i64
  %2938 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2937
  %2939 = load i1, i1* %out.1
  %2940 = sext i32 256 to i64
  %2941 = icmp slt i64 %2937, %2940
  %2942 = bitcast i64* %shadow to i32*
  %safe.77 = or i1 %2939, %2941
  %select.ptr.78 = select i1 %safe.77, i32* %2938, i32* %2942
  %2943 = load i32, i32* %select.ptr.78, align 4
  %2944 = and i32 %2943, 65280
  %2945 = xor i32 %2935, %2944
  %2946 = lshr i32 %2909, 24
  %2947 = zext i32 %2946 to i64
  %2948 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2947
  %2949 = load i1, i1* %out.1
  %2950 = sext i32 256 to i64
  %2951 = icmp slt i64 %2947, %2950
  %2952 = bitcast i64* %shadow to i32*
  %safe.79 = or i1 %2949, %2951
  %select.ptr.80 = select i1 %safe.79, i32* %2948, i32* %2952
  %2953 = load i32, i32* %select.ptr.80, align 4
  %2954 = and i32 %2953, 255
  %2955 = xor i32 %2945, %2954
  %2956 = xor i32 %2955, 67108864
  %2957 = getelementptr inbounds i32, i32* %2904, i64 4
  %2958 = load i1, i1* %out.1
  %2959 = icmp slt i64 4, %N
  %2960 = bitcast i64* %shadow to i32*
  %safe.81 = or i1 %2958, %2959
  %select.ptr.82 = select i1 %safe.81, i32* %2957, i32* %2960
  %2961 = load i32, i32* %2957
  %select.val.83 = select i1 %2958, i32 %2956, i32 %2961
  store i32 %select.val.83, i32* %select.ptr.82, align 4
  %2962 = getelementptr inbounds i32, i32* %2904, i64 1
  %2963 = load i1, i1* %out.1
  %2964 = icmp slt i64 1, %N
  %2965 = bitcast i64* %shadow to i32*
  %safe.84 = or i1 %2963, %2964
  %select.ptr.85 = select i1 %safe.84, i32* %2962, i32* %2965
  %2966 = load i32, i32* %select.ptr.85, align 4
  %2967 = getelementptr inbounds i32, i32* %2904, i64 4
  %2968 = load i1, i1* %out.1
  %2969 = icmp slt i64 4, %N
  %2970 = bitcast i64* %shadow to i32*
  %safe.86 = or i1 %2968, %2969
  %select.ptr.87 = select i1 %safe.86, i32* %2967, i32* %2970
  %2971 = load i32, i32* %select.ptr.87, align 4
  %2972 = xor i32 %2966, %2971
  %2973 = getelementptr inbounds i32, i32* %2904, i64 5
  %2974 = load i1, i1* %out.1
  %2975 = icmp slt i64 5, %N
  %2976 = bitcast i64* %shadow to i32*
  %safe.88 = or i1 %2974, %2975
  %select.ptr.89 = select i1 %safe.88, i32* %2973, i32* %2976
  %2977 = load i32, i32* %2973
  %select.val.90 = select i1 %2974, i32 %2972, i32 %2977
  store i32 %select.val.90, i32* %select.ptr.89, align 4
  %2978 = getelementptr inbounds i32, i32* %2904, i64 2
  %2979 = load i1, i1* %out.1
  %2980 = icmp slt i64 2, %N
  %2981 = bitcast i64* %shadow to i32*
  %safe.91 = or i1 %2979, %2980
  %select.ptr.92 = select i1 %safe.91, i32* %2978, i32* %2981
  %2982 = load i32, i32* %select.ptr.92, align 4
  %2983 = getelementptr inbounds i32, i32* %2904, i64 5
  %2984 = load i1, i1* %out.1
  %2985 = icmp slt i64 5, %N
  %2986 = bitcast i64* %shadow to i32*
  %safe.93 = or i1 %2984, %2985
  %select.ptr.94 = select i1 %safe.93, i32* %2983, i32* %2986
  %2987 = load i32, i32* %select.ptr.94, align 4
  %2988 = xor i32 %2982, %2987
  %2989 = getelementptr inbounds i32, i32* %2904, i64 6
  %2990 = load i1, i1* %out.1
  %2991 = icmp slt i64 6, %N
  %2992 = bitcast i64* %shadow to i32*
  %safe.95 = or i1 %2990, %2991
  %select.ptr.96 = select i1 %safe.95, i32* %2989, i32* %2992
  %2993 = load i32, i32* %2989
  %select.val.97 = select i1 %2990, i32 %2988, i32 %2993
  store i32 %select.val.97, i32* %select.ptr.96, align 4
  %2994 = getelementptr inbounds i32, i32* %2904, i64 3
  %2995 = load i1, i1* %out.1
  %2996 = icmp slt i64 3, %N
  %2997 = bitcast i64* %shadow to i32*
  %safe.98 = or i1 %2995, %2996
  %select.ptr.99 = select i1 %safe.98, i32* %2994, i32* %2997
  %2998 = load i32, i32* %select.ptr.99, align 4
  %2999 = getelementptr inbounds i32, i32* %2904, i64 6
  %3000 = load i1, i1* %out.1
  %3001 = icmp slt i64 6, %N
  %3002 = bitcast i64* %shadow to i32*
  %safe.100 = or i1 %3000, %3001
  %select.ptr.101 = select i1 %safe.100, i32* %2999, i32* %3002
  %3003 = load i32, i32* %select.ptr.101, align 4
  %3004 = xor i32 %2998, %3003
  %3005 = getelementptr inbounds i32, i32* %2904, i64 7
  %3006 = load i1, i1* %out.1
  %3007 = icmp slt i64 7, %N
  %3008 = bitcast i64* %shadow to i32*
  %safe.102 = or i1 %3006, %3007
  %select.ptr.103 = select i1 %safe.102, i32* %3005, i32* %3008
  %3009 = load i32, i32* %3005
  %select.val.104 = select i1 %3006, i32 %3004, i32 %3009
  store i32 %select.val.104, i32* %select.ptr.103, align 4
  %3010 = getelementptr inbounds i32, i32* %2904, i64 4
  %3011 = getelementptr inbounds i32, i32* %3010, i64 3
  %3012 = load i1, i1* %out.1
  %3013 = icmp slt i64 3, %N
  %3014 = bitcast i64* %shadow to i32*
  %safe.105 = or i1 %3012, %3013
  %select.ptr.106 = select i1 %safe.105, i32* %3011, i32* %3014
  %3015 = load i32, i32* %select.ptr.106, align 4
  %3016 = load i1, i1* %out.1
  %3017 = icmp slt i64 4, %N
  %3018 = bitcast i64* %shadow to i32*
  %safe.107 = or i1 %3016, %3017
  %select.ptr.108 = select i1 %safe.107, i32* %3010, i32* %3018
  %3019 = load i32, i32* %select.ptr.108, align 4
  %3020 = lshr i32 %3015, 16
  %3021 = and i32 %3020, 255
  %3022 = zext i32 %3021 to i64
  %3023 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3022
  %3024 = load i1, i1* %out.1
  %3025 = sext i32 256 to i64
  %3026 = icmp slt i64 %3022, %3025
  %3027 = bitcast i64* %shadow to i32*
  %safe.109 = or i1 %3024, %3026
  %select.ptr.110 = select i1 %safe.109, i32* %3023, i32* %3027
  %3028 = load i32, i32* %select.ptr.110, align 4
  %3029 = and i32 %3028, -16777216
  %3030 = xor i32 %3019, %3029
  %3031 = lshr i32 %3015, 8
  %3032 = and i32 %3031, 255
  %3033 = zext i32 %3032 to i64
  %3034 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3033
  %3035 = load i1, i1* %out.1
  %3036 = sext i32 256 to i64
  %3037 = icmp slt i64 %3033, %3036
  %3038 = bitcast i64* %shadow to i32*
  %safe.111 = or i1 %3035, %3037
  %select.ptr.112 = select i1 %safe.111, i32* %3034, i32* %3038
  %3039 = load i32, i32* %select.ptr.112, align 4
  %3040 = and i32 %3039, 16711680
  %3041 = xor i32 %3030, %3040
  %3042 = and i32 %3015, 255
  %3043 = zext i32 %3042 to i64
  %3044 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3043
  %3045 = load i1, i1* %out.1
  %3046 = sext i32 256 to i64
  %3047 = icmp slt i64 %3043, %3046
  %3048 = bitcast i64* %shadow to i32*
  %safe.113 = or i1 %3045, %3047
  %select.ptr.114 = select i1 %safe.113, i32* %3044, i32* %3048
  %3049 = load i32, i32* %select.ptr.114, align 4
  %3050 = and i32 %3049, 65280
  %3051 = xor i32 %3041, %3050
  %3052 = lshr i32 %3015, 24
  %3053 = zext i32 %3052 to i64
  %3054 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3053
  %3055 = load i1, i1* %out.1
  %3056 = sext i32 256 to i64
  %3057 = icmp slt i64 %3053, %3056
  %3058 = bitcast i64* %shadow to i32*
  %safe.115 = or i1 %3055, %3057
  %select.ptr.116 = select i1 %safe.115, i32* %3054, i32* %3058
  %3059 = load i32, i32* %select.ptr.116, align 4
  %3060 = and i32 %3059, 255
  %3061 = xor i32 %3051, %3060
  %3062 = xor i32 %3061, 134217728
  %3063 = getelementptr inbounds i32, i32* %3010, i64 4
  %3064 = load i1, i1* %out.1
  %3065 = icmp slt i64 4, %N
  %3066 = bitcast i64* %shadow to i32*
  %safe.117 = or i1 %3064, %3065
  %select.ptr.118 = select i1 %safe.117, i32* %3063, i32* %3066
  %3067 = load i32, i32* %3063
  %select.val.119 = select i1 %3064, i32 %3062, i32 %3067
  store i32 %select.val.119, i32* %select.ptr.118, align 4
  %3068 = getelementptr inbounds i32, i32* %3010, i64 1
  %3069 = load i1, i1* %out.1
  %3070 = icmp slt i64 1, %N
  %3071 = bitcast i64* %shadow to i32*
  %safe.120 = or i1 %3069, %3070
  %select.ptr.121 = select i1 %safe.120, i32* %3068, i32* %3071
  %3072 = load i32, i32* %select.ptr.121, align 4
  %3073 = getelementptr inbounds i32, i32* %3010, i64 4
  %3074 = load i1, i1* %out.1
  %3075 = icmp slt i64 4, %N
  %3076 = bitcast i64* %shadow to i32*
  %safe.122 = or i1 %3074, %3075
  %select.ptr.123 = select i1 %safe.122, i32* %3073, i32* %3076
  %3077 = load i32, i32* %select.ptr.123, align 4
  %3078 = xor i32 %3072, %3077
  %3079 = getelementptr inbounds i32, i32* %3010, i64 5
  %3080 = load i1, i1* %out.1
  %3081 = icmp slt i64 5, %N
  %3082 = bitcast i64* %shadow to i32*
  %safe.124 = or i1 %3080, %3081
  %select.ptr.125 = select i1 %safe.124, i32* %3079, i32* %3082
  %3083 = load i32, i32* %3079
  %select.val.126 = select i1 %3080, i32 %3078, i32 %3083
  store i32 %select.val.126, i32* %select.ptr.125, align 4
  %3084 = getelementptr inbounds i32, i32* %3010, i64 2
  %3085 = load i1, i1* %out.1
  %3086 = icmp slt i64 2, %N
  %3087 = bitcast i64* %shadow to i32*
  %safe.127 = or i1 %3085, %3086
  %select.ptr.128 = select i1 %safe.127, i32* %3084, i32* %3087
  %3088 = load i32, i32* %select.ptr.128, align 4
  %3089 = getelementptr inbounds i32, i32* %3010, i64 5
  %3090 = load i1, i1* %out.1
  %3091 = icmp slt i64 5, %N
  %3092 = bitcast i64* %shadow to i32*
  %safe.129 = or i1 %3090, %3091
  %select.ptr.130 = select i1 %safe.129, i32* %3089, i32* %3092
  %3093 = load i32, i32* %select.ptr.130, align 4
  %3094 = xor i32 %3088, %3093
  %3095 = getelementptr inbounds i32, i32* %3010, i64 6
  %3096 = load i1, i1* %out.1
  %3097 = icmp slt i64 6, %N
  %3098 = bitcast i64* %shadow to i32*
  %safe.131 = or i1 %3096, %3097
  %select.ptr.132 = select i1 %safe.131, i32* %3095, i32* %3098
  %3099 = load i32, i32* %3095
  %select.val.133 = select i1 %3096, i32 %3094, i32 %3099
  store i32 %select.val.133, i32* %select.ptr.132, align 4
  %3100 = getelementptr inbounds i32, i32* %3010, i64 3
  %3101 = load i1, i1* %out.1
  %3102 = icmp slt i64 3, %N
  %3103 = bitcast i64* %shadow to i32*
  %safe.134 = or i1 %3101, %3102
  %select.ptr.135 = select i1 %safe.134, i32* %3100, i32* %3103
  %3104 = load i32, i32* %select.ptr.135, align 4
  %3105 = getelementptr inbounds i32, i32* %3010, i64 6
  %3106 = load i1, i1* %out.1
  %3107 = icmp slt i64 6, %N
  %3108 = bitcast i64* %shadow to i32*
  %safe.136 = or i1 %3106, %3107
  %select.ptr.137 = select i1 %safe.136, i32* %3105, i32* %3108
  %3109 = load i32, i32* %select.ptr.137, align 4
  %3110 = xor i32 %3104, %3109
  %3111 = getelementptr inbounds i32, i32* %3010, i64 7
  %3112 = load i1, i1* %out.1
  %3113 = icmp slt i64 7, %N
  %3114 = bitcast i64* %shadow to i32*
  %safe.138 = or i1 %3112, %3113
  %select.ptr.139 = select i1 %safe.138, i32* %3111, i32* %3114
  %3115 = load i32, i32* %3111
  %select.val.140 = select i1 %3112, i32 %3110, i32 %3115
  store i32 %select.val.140, i32* %select.ptr.139, align 4
  %3116 = getelementptr inbounds i32, i32* %3010, i64 4
  %3117 = getelementptr inbounds i32, i32* %3116, i64 3
  %3118 = load i1, i1* %out.1
  %3119 = icmp slt i64 3, %N
  %3120 = bitcast i64* %shadow to i32*
  %safe.141 = or i1 %3118, %3119
  %select.ptr.142 = select i1 %safe.141, i32* %3117, i32* %3120
  %3121 = load i32, i32* %select.ptr.142, align 4
  %3122 = load i1, i1* %out.1
  %3123 = icmp slt i64 4, %N
  %3124 = bitcast i64* %shadow to i32*
  %safe.143 = or i1 %3122, %3123
  %select.ptr.144 = select i1 %safe.143, i32* %3116, i32* %3124
  %3125 = load i32, i32* %select.ptr.144, align 4
  %3126 = lshr i32 %3121, 16
  %3127 = and i32 %3126, 255
  %3128 = zext i32 %3127 to i64
  %3129 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3128
  %3130 = load i1, i1* %out.1
  %3131 = sext i32 256 to i64
  %3132 = icmp slt i64 %3128, %3131
  %3133 = bitcast i64* %shadow to i32*
  %safe.145 = or i1 %3130, %3132
  %select.ptr.146 = select i1 %safe.145, i32* %3129, i32* %3133
  %3134 = load i32, i32* %select.ptr.146, align 4
  %3135 = and i32 %3134, -16777216
  %3136 = xor i32 %3125, %3135
  %3137 = lshr i32 %3121, 8
  %3138 = and i32 %3137, 255
  %3139 = zext i32 %3138 to i64
  %3140 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3139
  %3141 = load i1, i1* %out.1
  %3142 = sext i32 256 to i64
  %3143 = icmp slt i64 %3139, %3142
  %3144 = bitcast i64* %shadow to i32*
  %safe.147 = or i1 %3141, %3143
  %select.ptr.148 = select i1 %safe.147, i32* %3140, i32* %3144
  %3145 = load i32, i32* %select.ptr.148, align 4
  %3146 = and i32 %3145, 16711680
  %3147 = xor i32 %3136, %3146
  %3148 = and i32 %3121, 255
  %3149 = zext i32 %3148 to i64
  %3150 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3149
  %3151 = load i1, i1* %out.1
  %3152 = sext i32 256 to i64
  %3153 = icmp slt i64 %3149, %3152
  %3154 = bitcast i64* %shadow to i32*
  %safe.149 = or i1 %3151, %3153
  %select.ptr.150 = select i1 %safe.149, i32* %3150, i32* %3154
  %3155 = load i32, i32* %select.ptr.150, align 4
  %3156 = and i32 %3155, 65280
  %3157 = xor i32 %3147, %3156
  %3158 = lshr i32 %3121, 24
  %3159 = zext i32 %3158 to i64
  %3160 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3159
  %3161 = load i1, i1* %out.1
  %3162 = sext i32 256 to i64
  %3163 = icmp slt i64 %3159, %3162
  %3164 = bitcast i64* %shadow to i32*
  %safe.151 = or i1 %3161, %3163
  %select.ptr.152 = select i1 %safe.151, i32* %3160, i32* %3164
  %3165 = load i32, i32* %select.ptr.152, align 4
  %3166 = and i32 %3165, 255
  %3167 = xor i32 %3157, %3166
  %3168 = xor i32 %3167, 268435456
  %3169 = getelementptr inbounds i32, i32* %3116, i64 4
  %3170 = load i1, i1* %out.1
  %3171 = icmp slt i64 4, %N
  %3172 = bitcast i64* %shadow to i32*
  %safe.153 = or i1 %3170, %3171
  %select.ptr.154 = select i1 %safe.153, i32* %3169, i32* %3172
  %3173 = load i32, i32* %3169
  %select.val.155 = select i1 %3170, i32 %3168, i32 %3173
  store i32 %select.val.155, i32* %select.ptr.154, align 4
  %3174 = getelementptr inbounds i32, i32* %3116, i64 1
  %3175 = load i1, i1* %out.1
  %3176 = icmp slt i64 1, %N
  %3177 = bitcast i64* %shadow to i32*
  %safe.156 = or i1 %3175, %3176
  %select.ptr.157 = select i1 %safe.156, i32* %3174, i32* %3177
  %3178 = load i32, i32* %select.ptr.157, align 4
  %3179 = getelementptr inbounds i32, i32* %3116, i64 4
  %3180 = load i1, i1* %out.1
  %3181 = icmp slt i64 4, %N
  %3182 = bitcast i64* %shadow to i32*
  %safe.158 = or i1 %3180, %3181
  %select.ptr.159 = select i1 %safe.158, i32* %3179, i32* %3182
  %3183 = load i32, i32* %select.ptr.159, align 4
  %3184 = xor i32 %3178, %3183
  %3185 = getelementptr inbounds i32, i32* %3116, i64 5
  %3186 = load i1, i1* %out.1
  %3187 = icmp slt i64 5, %N
  %3188 = bitcast i64* %shadow to i32*
  %safe.160 = or i1 %3186, %3187
  %select.ptr.161 = select i1 %safe.160, i32* %3185, i32* %3188
  %3189 = load i32, i32* %3185
  %select.val.162 = select i1 %3186, i32 %3184, i32 %3189
  store i32 %select.val.162, i32* %select.ptr.161, align 4
  %3190 = getelementptr inbounds i32, i32* %3116, i64 2
  %3191 = load i1, i1* %out.1
  %3192 = icmp slt i64 2, %N
  %3193 = bitcast i64* %shadow to i32*
  %safe.163 = or i1 %3191, %3192
  %select.ptr.164 = select i1 %safe.163, i32* %3190, i32* %3193
  %3194 = load i32, i32* %select.ptr.164, align 4
  %3195 = getelementptr inbounds i32, i32* %3116, i64 5
  %3196 = load i1, i1* %out.1
  %3197 = icmp slt i64 5, %N
  %3198 = bitcast i64* %shadow to i32*
  %safe.165 = or i1 %3196, %3197
  %select.ptr.166 = select i1 %safe.165, i32* %3195, i32* %3198
  %3199 = load i32, i32* %select.ptr.166, align 4
  %3200 = xor i32 %3194, %3199
  %3201 = getelementptr inbounds i32, i32* %3116, i64 6
  %3202 = load i1, i1* %out.1
  %3203 = icmp slt i64 6, %N
  %3204 = bitcast i64* %shadow to i32*
  %safe.167 = or i1 %3202, %3203
  %select.ptr.168 = select i1 %safe.167, i32* %3201, i32* %3204
  %3205 = load i32, i32* %3201
  %select.val.169 = select i1 %3202, i32 %3200, i32 %3205
  store i32 %select.val.169, i32* %select.ptr.168, align 4
  %3206 = getelementptr inbounds i32, i32* %3116, i64 3
  %3207 = load i1, i1* %out.1
  %3208 = icmp slt i64 3, %N
  %3209 = bitcast i64* %shadow to i32*
  %safe.170 = or i1 %3207, %3208
  %select.ptr.171 = select i1 %safe.170, i32* %3206, i32* %3209
  %3210 = load i32, i32* %select.ptr.171, align 4
  %3211 = getelementptr inbounds i32, i32* %3116, i64 6
  %3212 = load i1, i1* %out.1
  %3213 = icmp slt i64 6, %N
  %3214 = bitcast i64* %shadow to i32*
  %safe.172 = or i1 %3212, %3213
  %select.ptr.173 = select i1 %safe.172, i32* %3211, i32* %3214
  %3215 = load i32, i32* %select.ptr.173, align 4
  %3216 = xor i32 %3210, %3215
  %3217 = getelementptr inbounds i32, i32* %3116, i64 7
  %3218 = load i1, i1* %out.1
  %3219 = icmp slt i64 7, %N
  %3220 = bitcast i64* %shadow to i32*
  %safe.174 = or i1 %3218, %3219
  %select.ptr.175 = select i1 %safe.174, i32* %3217, i32* %3220
  %3221 = load i32, i32* %3217
  %select.val.176 = select i1 %3218, i32 %3216, i32 %3221
  store i32 %select.val.176, i32* %select.ptr.175, align 4
  %3222 = getelementptr inbounds i32, i32* %3116, i64 4
  %3223 = getelementptr inbounds i32, i32* %3222, i64 3
  %3224 = load i1, i1* %out.1
  %3225 = icmp slt i64 3, %N
  %3226 = bitcast i64* %shadow to i32*
  %safe.177 = or i1 %3224, %3225
  %select.ptr.178 = select i1 %safe.177, i32* %3223, i32* %3226
  %3227 = load i32, i32* %select.ptr.178, align 4
  %3228 = load i1, i1* %out.1
  %3229 = icmp slt i64 4, %N
  %3230 = bitcast i64* %shadow to i32*
  %safe.179 = or i1 %3228, %3229
  %select.ptr.180 = select i1 %safe.179, i32* %3222, i32* %3230
  %3231 = load i32, i32* %select.ptr.180, align 4
  %3232 = lshr i32 %3227, 16
  %3233 = and i32 %3232, 255
  %3234 = zext i32 %3233 to i64
  %3235 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3234
  %3236 = load i1, i1* %out.1
  %3237 = sext i32 256 to i64
  %3238 = icmp slt i64 %3234, %3237
  %3239 = bitcast i64* %shadow to i32*
  %safe.181 = or i1 %3236, %3238
  %select.ptr.182 = select i1 %safe.181, i32* %3235, i32* %3239
  %3240 = load i32, i32* %select.ptr.182, align 4
  %3241 = and i32 %3240, -16777216
  %3242 = xor i32 %3231, %3241
  %3243 = lshr i32 %3227, 8
  %3244 = and i32 %3243, 255
  %3245 = zext i32 %3244 to i64
  %3246 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3245
  %3247 = load i1, i1* %out.1
  %3248 = sext i32 256 to i64
  %3249 = icmp slt i64 %3245, %3248
  %3250 = bitcast i64* %shadow to i32*
  %safe.183 = or i1 %3247, %3249
  %select.ptr.184 = select i1 %safe.183, i32* %3246, i32* %3250
  %3251 = load i32, i32* %select.ptr.184, align 4
  %3252 = and i32 %3251, 16711680
  %3253 = xor i32 %3242, %3252
  %3254 = and i32 %3227, 255
  %3255 = zext i32 %3254 to i64
  %3256 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3255
  %3257 = load i1, i1* %out.1
  %3258 = sext i32 256 to i64
  %3259 = icmp slt i64 %3255, %3258
  %3260 = bitcast i64* %shadow to i32*
  %safe.185 = or i1 %3257, %3259
  %select.ptr.186 = select i1 %safe.185, i32* %3256, i32* %3260
  %3261 = load i32, i32* %select.ptr.186, align 4
  %3262 = and i32 %3261, 65280
  %3263 = xor i32 %3253, %3262
  %3264 = lshr i32 %3227, 24
  %3265 = zext i32 %3264 to i64
  %3266 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3265
  %3267 = load i1, i1* %out.1
  %3268 = sext i32 256 to i64
  %3269 = icmp slt i64 %3265, %3268
  %3270 = bitcast i64* %shadow to i32*
  %safe.187 = or i1 %3267, %3269
  %select.ptr.188 = select i1 %safe.187, i32* %3266, i32* %3270
  %3271 = load i32, i32* %select.ptr.188, align 4
  %3272 = and i32 %3271, 255
  %3273 = xor i32 %3263, %3272
  %3274 = xor i32 %3273, 536870912
  %3275 = getelementptr inbounds i32, i32* %3222, i64 4
  %3276 = load i1, i1* %out.1
  %3277 = icmp slt i64 4, %N
  %3278 = bitcast i64* %shadow to i32*
  %safe.189 = or i1 %3276, %3277
  %select.ptr.190 = select i1 %safe.189, i32* %3275, i32* %3278
  %3279 = load i32, i32* %3275
  %select.val.191 = select i1 %3276, i32 %3274, i32 %3279
  store i32 %select.val.191, i32* %select.ptr.190, align 4
  %3280 = getelementptr inbounds i32, i32* %3222, i64 1
  %3281 = load i1, i1* %out.1
  %3282 = icmp slt i64 1, %N
  %3283 = bitcast i64* %shadow to i32*
  %safe.192 = or i1 %3281, %3282
  %select.ptr.193 = select i1 %safe.192, i32* %3280, i32* %3283
  %3284 = load i32, i32* %select.ptr.193, align 4
  %3285 = getelementptr inbounds i32, i32* %3222, i64 4
  %3286 = load i1, i1* %out.1
  %3287 = icmp slt i64 4, %N
  %3288 = bitcast i64* %shadow to i32*
  %safe.194 = or i1 %3286, %3287
  %select.ptr.195 = select i1 %safe.194, i32* %3285, i32* %3288
  %3289 = load i32, i32* %select.ptr.195, align 4
  %3290 = xor i32 %3284, %3289
  %3291 = getelementptr inbounds i32, i32* %3222, i64 5
  %3292 = load i1, i1* %out.1
  %3293 = icmp slt i64 5, %N
  %3294 = bitcast i64* %shadow to i32*
  %safe.196 = or i1 %3292, %3293
  %select.ptr.197 = select i1 %safe.196, i32* %3291, i32* %3294
  %3295 = load i32, i32* %3291
  %select.val.198 = select i1 %3292, i32 %3290, i32 %3295
  store i32 %select.val.198, i32* %select.ptr.197, align 4
  %3296 = getelementptr inbounds i32, i32* %3222, i64 2
  %3297 = load i1, i1* %out.1
  %3298 = icmp slt i64 2, %N
  %3299 = bitcast i64* %shadow to i32*
  %safe.199 = or i1 %3297, %3298
  %select.ptr.200 = select i1 %safe.199, i32* %3296, i32* %3299
  %3300 = load i32, i32* %select.ptr.200, align 4
  %3301 = getelementptr inbounds i32, i32* %3222, i64 5
  %3302 = load i1, i1* %out.1
  %3303 = icmp slt i64 5, %N
  %3304 = bitcast i64* %shadow to i32*
  %safe.201 = or i1 %3302, %3303
  %select.ptr.202 = select i1 %safe.201, i32* %3301, i32* %3304
  %3305 = load i32, i32* %select.ptr.202, align 4
  %3306 = xor i32 %3300, %3305
  %3307 = getelementptr inbounds i32, i32* %3222, i64 6
  %3308 = load i1, i1* %out.1
  %3309 = icmp slt i64 6, %N
  %3310 = bitcast i64* %shadow to i32*
  %safe.203 = or i1 %3308, %3309
  %select.ptr.204 = select i1 %safe.203, i32* %3307, i32* %3310
  %3311 = load i32, i32* %3307
  %select.val.205 = select i1 %3308, i32 %3306, i32 %3311
  store i32 %select.val.205, i32* %select.ptr.204, align 4
  %3312 = getelementptr inbounds i32, i32* %3222, i64 3
  %3313 = load i1, i1* %out.1
  %3314 = icmp slt i64 3, %N
  %3315 = bitcast i64* %shadow to i32*
  %safe.206 = or i1 %3313, %3314
  %select.ptr.207 = select i1 %safe.206, i32* %3312, i32* %3315
  %3316 = load i32, i32* %select.ptr.207, align 4
  %3317 = getelementptr inbounds i32, i32* %3222, i64 6
  %3318 = load i1, i1* %out.1
  %3319 = icmp slt i64 6, %N
  %3320 = bitcast i64* %shadow to i32*
  %safe.208 = or i1 %3318, %3319
  %select.ptr.209 = select i1 %safe.208, i32* %3317, i32* %3320
  %3321 = load i32, i32* %select.ptr.209, align 4
  %3322 = xor i32 %3316, %3321
  %3323 = getelementptr inbounds i32, i32* %3222, i64 7
  %3324 = load i1, i1* %out.1
  %3325 = icmp slt i64 7, %N
  %3326 = bitcast i64* %shadow to i32*
  %safe.210 = or i1 %3324, %3325
  %select.ptr.211 = select i1 %safe.210, i32* %3323, i32* %3326
  %3327 = load i32, i32* %3323
  %select.val.212 = select i1 %3324, i32 %3322, i32 %3327
  store i32 %select.val.212, i32* %select.ptr.211, align 4
  %3328 = getelementptr inbounds i32, i32* %3222, i64 4
  %3329 = getelementptr inbounds i32, i32* %3328, i64 3
  %3330 = load i1, i1* %out.1
  %3331 = icmp slt i64 3, %N
  %3332 = bitcast i64* %shadow to i32*
  %safe.213 = or i1 %3330, %3331
  %select.ptr.214 = select i1 %safe.213, i32* %3329, i32* %3332
  %3333 = load i32, i32* %select.ptr.214, align 4
  %3334 = load i1, i1* %out.1
  %3335 = icmp slt i64 4, %N
  %3336 = bitcast i64* %shadow to i32*
  %safe.215 = or i1 %3334, %3335
  %select.ptr.216 = select i1 %safe.215, i32* %3328, i32* %3336
  %3337 = load i32, i32* %select.ptr.216, align 4
  %3338 = lshr i32 %3333, 16
  %3339 = and i32 %3338, 255
  %3340 = zext i32 %3339 to i64
  %3341 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3340
  %3342 = load i1, i1* %out.1
  %3343 = sext i32 256 to i64
  %3344 = icmp slt i64 %3340, %3343
  %3345 = bitcast i64* %shadow to i32*
  %safe.217 = or i1 %3342, %3344
  %select.ptr.218 = select i1 %safe.217, i32* %3341, i32* %3345
  %3346 = load i32, i32* %select.ptr.218, align 4
  %3347 = and i32 %3346, -16777216
  %3348 = xor i32 %3337, %3347
  %3349 = lshr i32 %3333, 8
  %3350 = and i32 %3349, 255
  %3351 = zext i32 %3350 to i64
  %3352 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3351
  %3353 = load i1, i1* %out.1
  %3354 = sext i32 256 to i64
  %3355 = icmp slt i64 %3351, %3354
  %3356 = bitcast i64* %shadow to i32*
  %safe.219 = or i1 %3353, %3355
  %select.ptr.220 = select i1 %safe.219, i32* %3352, i32* %3356
  %3357 = load i32, i32* %select.ptr.220, align 4
  %3358 = and i32 %3357, 16711680
  %3359 = xor i32 %3348, %3358
  %3360 = and i32 %3333, 255
  %3361 = zext i32 %3360 to i64
  %3362 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3361
  %3363 = load i1, i1* %out.1
  %3364 = sext i32 256 to i64
  %3365 = icmp slt i64 %3361, %3364
  %3366 = bitcast i64* %shadow to i32*
  %safe.221 = or i1 %3363, %3365
  %select.ptr.222 = select i1 %safe.221, i32* %3362, i32* %3366
  %3367 = load i32, i32* %select.ptr.222, align 4
  %3368 = and i32 %3367, 65280
  %3369 = xor i32 %3359, %3368
  %3370 = lshr i32 %3333, 24
  %3371 = zext i32 %3370 to i64
  %3372 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3371
  %3373 = load i1, i1* %out.1
  %3374 = sext i32 256 to i64
  %3375 = icmp slt i64 %3371, %3374
  %3376 = bitcast i64* %shadow to i32*
  %safe.223 = or i1 %3373, %3375
  %select.ptr.224 = select i1 %safe.223, i32* %3372, i32* %3376
  %3377 = load i32, i32* %select.ptr.224, align 4
  %3378 = and i32 %3377, 255
  %3379 = xor i32 %3369, %3378
  %3380 = xor i32 %3379, 1073741824
  %3381 = getelementptr inbounds i32, i32* %3328, i64 4
  %3382 = load i1, i1* %out.1
  %3383 = icmp slt i64 4, %N
  %3384 = bitcast i64* %shadow to i32*
  %safe.225 = or i1 %3382, %3383
  %select.ptr.226 = select i1 %safe.225, i32* %3381, i32* %3384
  %3385 = load i32, i32* %3381
  %select.val.227 = select i1 %3382, i32 %3380, i32 %3385
  store i32 %select.val.227, i32* %select.ptr.226, align 4
  %3386 = getelementptr inbounds i32, i32* %3328, i64 1
  %3387 = load i1, i1* %out.1
  %3388 = icmp slt i64 1, %N
  %3389 = bitcast i64* %shadow to i32*
  %safe.228 = or i1 %3387, %3388
  %select.ptr.229 = select i1 %safe.228, i32* %3386, i32* %3389
  %3390 = load i32, i32* %select.ptr.229, align 4
  %3391 = getelementptr inbounds i32, i32* %3328, i64 4
  %3392 = load i1, i1* %out.1
  %3393 = icmp slt i64 4, %N
  %3394 = bitcast i64* %shadow to i32*
  %safe.230 = or i1 %3392, %3393
  %select.ptr.231 = select i1 %safe.230, i32* %3391, i32* %3394
  %3395 = load i32, i32* %select.ptr.231, align 4
  %3396 = xor i32 %3390, %3395
  %3397 = getelementptr inbounds i32, i32* %3328, i64 5
  %3398 = load i1, i1* %out.1
  %3399 = icmp slt i64 5, %N
  %3400 = bitcast i64* %shadow to i32*
  %safe.232 = or i1 %3398, %3399
  %select.ptr.233 = select i1 %safe.232, i32* %3397, i32* %3400
  %3401 = load i32, i32* %3397
  %select.val.234 = select i1 %3398, i32 %3396, i32 %3401
  store i32 %select.val.234, i32* %select.ptr.233, align 4
  %3402 = getelementptr inbounds i32, i32* %3328, i64 2
  %3403 = load i1, i1* %out.1
  %3404 = icmp slt i64 2, %N
  %3405 = bitcast i64* %shadow to i32*
  %safe.235 = or i1 %3403, %3404
  %select.ptr.236 = select i1 %safe.235, i32* %3402, i32* %3405
  %3406 = load i32, i32* %select.ptr.236, align 4
  %3407 = getelementptr inbounds i32, i32* %3328, i64 5
  %3408 = load i1, i1* %out.1
  %3409 = icmp slt i64 5, %N
  %3410 = bitcast i64* %shadow to i32*
  %safe.237 = or i1 %3408, %3409
  %select.ptr.238 = select i1 %safe.237, i32* %3407, i32* %3410
  %3411 = load i32, i32* %select.ptr.238, align 4
  %3412 = xor i32 %3406, %3411
  %3413 = getelementptr inbounds i32, i32* %3328, i64 6
  %3414 = load i1, i1* %out.1
  %3415 = icmp slt i64 6, %N
  %3416 = bitcast i64* %shadow to i32*
  %safe.239 = or i1 %3414, %3415
  %select.ptr.240 = select i1 %safe.239, i32* %3413, i32* %3416
  %3417 = load i32, i32* %3413
  %select.val.241 = select i1 %3414, i32 %3412, i32 %3417
  store i32 %select.val.241, i32* %select.ptr.240, align 4
  %3418 = getelementptr inbounds i32, i32* %3328, i64 3
  %3419 = load i1, i1* %out.1
  %3420 = icmp slt i64 3, %N
  %3421 = bitcast i64* %shadow to i32*
  %safe.242 = or i1 %3419, %3420
  %select.ptr.243 = select i1 %safe.242, i32* %3418, i32* %3421
  %3422 = load i32, i32* %select.ptr.243, align 4
  %3423 = getelementptr inbounds i32, i32* %3328, i64 6
  %3424 = load i1, i1* %out.1
  %3425 = icmp slt i64 6, %N
  %3426 = bitcast i64* %shadow to i32*
  %safe.244 = or i1 %3424, %3425
  %select.ptr.245 = select i1 %safe.244, i32* %3423, i32* %3426
  %3427 = load i32, i32* %select.ptr.245, align 4
  %3428 = xor i32 %3422, %3427
  %3429 = getelementptr inbounds i32, i32* %3328, i64 7
  %3430 = load i1, i1* %out.1
  %3431 = icmp slt i64 7, %N
  %3432 = bitcast i64* %shadow to i32*
  %safe.246 = or i1 %3430, %3431
  %select.ptr.247 = select i1 %safe.246, i32* %3429, i32* %3432
  %3433 = load i32, i32* %3429
  %select.val.248 = select i1 %3430, i32 %3428, i32 %3433
  store i32 %select.val.248, i32* %select.ptr.247, align 4
  %3434 = getelementptr inbounds i32, i32* %3328, i64 4
  %3435 = getelementptr inbounds i32, i32* %3434, i64 3
  %3436 = load i1, i1* %out.1
  %3437 = icmp slt i64 3, %N
  %3438 = bitcast i64* %shadow to i32*
  %safe.249 = or i1 %3436, %3437
  %select.ptr.250 = select i1 %safe.249, i32* %3435, i32* %3438
  %3439 = load i32, i32* %select.ptr.250, align 4
  %3440 = load i1, i1* %out.1
  %3441 = icmp slt i64 4, %N
  %3442 = bitcast i64* %shadow to i32*
  %safe.251 = or i1 %3440, %3441
  %select.ptr.252 = select i1 %safe.251, i32* %3434, i32* %3442
  %3443 = load i32, i32* %select.ptr.252, align 4
  %3444 = lshr i32 %3439, 16
  %3445 = and i32 %3444, 255
  %3446 = zext i32 %3445 to i64
  %3447 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3446
  %3448 = load i1, i1* %out.1
  %3449 = sext i32 256 to i64
  %3450 = icmp slt i64 %3446, %3449
  %3451 = bitcast i64* %shadow to i32*
  %safe.253 = or i1 %3448, %3450
  %select.ptr.254 = select i1 %safe.253, i32* %3447, i32* %3451
  %3452 = load i32, i32* %select.ptr.254, align 4
  %3453 = and i32 %3452, -16777216
  %3454 = xor i32 %3443, %3453
  %3455 = lshr i32 %3439, 8
  %3456 = and i32 %3455, 255
  %3457 = zext i32 %3456 to i64
  %3458 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3457
  %3459 = load i1, i1* %out.1
  %3460 = sext i32 256 to i64
  %3461 = icmp slt i64 %3457, %3460
  %3462 = bitcast i64* %shadow to i32*
  %safe.255 = or i1 %3459, %3461
  %select.ptr.256 = select i1 %safe.255, i32* %3458, i32* %3462
  %3463 = load i32, i32* %select.ptr.256, align 4
  %3464 = and i32 %3463, 16711680
  %3465 = xor i32 %3454, %3464
  %3466 = and i32 %3439, 255
  %3467 = zext i32 %3466 to i64
  %3468 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3467
  %3469 = load i1, i1* %out.1
  %3470 = sext i32 256 to i64
  %3471 = icmp slt i64 %3467, %3470
  %3472 = bitcast i64* %shadow to i32*
  %safe.257 = or i1 %3469, %3471
  %select.ptr.258 = select i1 %safe.257, i32* %3468, i32* %3472
  %3473 = load i32, i32* %select.ptr.258, align 4
  %3474 = and i32 %3473, 65280
  %3475 = xor i32 %3465, %3474
  %3476 = lshr i32 %3439, 24
  %3477 = zext i32 %3476 to i64
  %3478 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3477
  %3479 = load i1, i1* %out.1
  %3480 = sext i32 256 to i64
  %3481 = icmp slt i64 %3477, %3480
  %3482 = bitcast i64* %shadow to i32*
  %safe.259 = or i1 %3479, %3481
  %select.ptr.260 = select i1 %safe.259, i32* %3478, i32* %3482
  %3483 = load i32, i32* %select.ptr.260, align 4
  %3484 = and i32 %3483, 255
  %3485 = xor i32 %3475, %3484
  %3486 = xor i32 %3485, -2147483648
  %3487 = getelementptr inbounds i32, i32* %3434, i64 4
  %3488 = load i1, i1* %out.1
  %3489 = icmp slt i64 4, %N
  %3490 = bitcast i64* %shadow to i32*
  %safe.261 = or i1 %3488, %3489
  %select.ptr.262 = select i1 %safe.261, i32* %3487, i32* %3490
  %3491 = load i32, i32* %3487
  %select.val.263 = select i1 %3488, i32 %3486, i32 %3491
  store i32 %select.val.263, i32* %select.ptr.262, align 4
  %3492 = getelementptr inbounds i32, i32* %3434, i64 1
  %3493 = load i1, i1* %out.1
  %3494 = icmp slt i64 1, %N
  %3495 = bitcast i64* %shadow to i32*
  %safe.264 = or i1 %3493, %3494
  %select.ptr.265 = select i1 %safe.264, i32* %3492, i32* %3495
  %3496 = load i32, i32* %select.ptr.265, align 4
  %3497 = getelementptr inbounds i32, i32* %3434, i64 4
  %3498 = load i1, i1* %out.1
  %3499 = icmp slt i64 4, %N
  %3500 = bitcast i64* %shadow to i32*
  %safe.266 = or i1 %3498, %3499
  %select.ptr.267 = select i1 %safe.266, i32* %3497, i32* %3500
  %3501 = load i32, i32* %select.ptr.267, align 4
  %3502 = xor i32 %3496, %3501
  %3503 = getelementptr inbounds i32, i32* %3434, i64 5
  %3504 = load i1, i1* %out.1
  %3505 = icmp slt i64 5, %N
  %3506 = bitcast i64* %shadow to i32*
  %safe.268 = or i1 %3504, %3505
  %select.ptr.269 = select i1 %safe.268, i32* %3503, i32* %3506
  %3507 = load i32, i32* %3503
  %select.val.270 = select i1 %3504, i32 %3502, i32 %3507
  store i32 %select.val.270, i32* %select.ptr.269, align 4
  %3508 = getelementptr inbounds i32, i32* %3434, i64 2
  %3509 = load i1, i1* %out.1
  %3510 = icmp slt i64 2, %N
  %3511 = bitcast i64* %shadow to i32*
  %safe.271 = or i1 %3509, %3510
  %select.ptr.272 = select i1 %safe.271, i32* %3508, i32* %3511
  %3512 = load i32, i32* %select.ptr.272, align 4
  %3513 = getelementptr inbounds i32, i32* %3434, i64 5
  %3514 = load i1, i1* %out.1
  %3515 = icmp slt i64 5, %N
  %3516 = bitcast i64* %shadow to i32*
  %safe.273 = or i1 %3514, %3515
  %select.ptr.274 = select i1 %safe.273, i32* %3513, i32* %3516
  %3517 = load i32, i32* %select.ptr.274, align 4
  %3518 = xor i32 %3512, %3517
  %3519 = getelementptr inbounds i32, i32* %3434, i64 6
  %3520 = load i1, i1* %out.1
  %3521 = icmp slt i64 6, %N
  %3522 = bitcast i64* %shadow to i32*
  %safe.275 = or i1 %3520, %3521
  %select.ptr.276 = select i1 %safe.275, i32* %3519, i32* %3522
  %3523 = load i32, i32* %3519
  %select.val.277 = select i1 %3520, i32 %3518, i32 %3523
  store i32 %select.val.277, i32* %select.ptr.276, align 4
  %3524 = getelementptr inbounds i32, i32* %3434, i64 3
  %3525 = load i1, i1* %out.1
  %3526 = icmp slt i64 3, %N
  %3527 = bitcast i64* %shadow to i32*
  %safe.278 = or i1 %3525, %3526
  %select.ptr.279 = select i1 %safe.278, i32* %3524, i32* %3527
  %3528 = load i32, i32* %select.ptr.279, align 4
  %3529 = getelementptr inbounds i32, i32* %3434, i64 6
  %3530 = load i1, i1* %out.1
  %3531 = icmp slt i64 6, %N
  %3532 = bitcast i64* %shadow to i32*
  %safe.280 = or i1 %3530, %3531
  %select.ptr.281 = select i1 %safe.280, i32* %3529, i32* %3532
  %3533 = load i32, i32* %select.ptr.281, align 4
  %3534 = xor i32 %3528, %3533
  %3535 = getelementptr inbounds i32, i32* %3434, i64 7
  %3536 = load i1, i1* %out.1
  %3537 = icmp slt i64 7, %N
  %3538 = bitcast i64* %shadow to i32*
  %safe.282 = or i1 %3536, %3537
  %select.ptr.283 = select i1 %safe.282, i32* %3535, i32* %3538
  %3539 = load i32, i32* %3535
  %select.val.284 = select i1 %3536, i32 %3534, i32 %3539
  store i32 %select.val.284, i32* %select.ptr.283, align 4
  %3540 = getelementptr inbounds i32, i32* %3434, i64 4
  %3541 = getelementptr inbounds i32, i32* %3540, i64 3
  %3542 = load i1, i1* %out.1
  %3543 = icmp slt i64 3, %N
  %3544 = bitcast i64* %shadow to i32*
  %safe.285 = or i1 %3542, %3543
  %select.ptr.286 = select i1 %safe.285, i32* %3541, i32* %3544
  %3545 = load i32, i32* %select.ptr.286, align 4
  %3546 = load i1, i1* %out.1
  %3547 = icmp slt i64 4, %N
  %3548 = bitcast i64* %shadow to i32*
  %safe.287 = or i1 %3546, %3547
  %select.ptr.288 = select i1 %safe.287, i32* %3540, i32* %3548
  %3549 = load i32, i32* %select.ptr.288, align 4
  %3550 = lshr i32 %3545, 16
  %3551 = and i32 %3550, 255
  %3552 = zext i32 %3551 to i64
  %3553 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3552
  %3554 = load i1, i1* %out.1
  %3555 = sext i32 256 to i64
  %3556 = icmp slt i64 %3552, %3555
  %3557 = bitcast i64* %shadow to i32*
  %safe.289 = or i1 %3554, %3556
  %select.ptr.290 = select i1 %safe.289, i32* %3553, i32* %3557
  %3558 = load i32, i32* %select.ptr.290, align 4
  %3559 = and i32 %3558, -16777216
  %3560 = xor i32 %3549, %3559
  %3561 = lshr i32 %3545, 8
  %3562 = and i32 %3561, 255
  %3563 = zext i32 %3562 to i64
  %3564 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3563
  %3565 = load i1, i1* %out.1
  %3566 = sext i32 256 to i64
  %3567 = icmp slt i64 %3563, %3566
  %3568 = bitcast i64* %shadow to i32*
  %safe.291 = or i1 %3565, %3567
  %select.ptr.292 = select i1 %safe.291, i32* %3564, i32* %3568
  %3569 = load i32, i32* %select.ptr.292, align 4
  %3570 = and i32 %3569, 16711680
  %3571 = xor i32 %3560, %3570
  %3572 = and i32 %3545, 255
  %3573 = zext i32 %3572 to i64
  %3574 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3573
  %3575 = load i1, i1* %out.1
  %3576 = sext i32 256 to i64
  %3577 = icmp slt i64 %3573, %3576
  %3578 = bitcast i64* %shadow to i32*
  %safe.293 = or i1 %3575, %3577
  %select.ptr.294 = select i1 %safe.293, i32* %3574, i32* %3578
  %3579 = load i32, i32* %select.ptr.294, align 4
  %3580 = and i32 %3579, 65280
  %3581 = xor i32 %3571, %3580
  %3582 = lshr i32 %3545, 24
  %3583 = zext i32 %3582 to i64
  %3584 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3583
  %3585 = load i1, i1* %out.1
  %3586 = sext i32 256 to i64
  %3587 = icmp slt i64 %3583, %3586
  %3588 = bitcast i64* %shadow to i32*
  %safe.295 = or i1 %3585, %3587
  %select.ptr.296 = select i1 %safe.295, i32* %3584, i32* %3588
  %3589 = load i32, i32* %select.ptr.296, align 4
  %3590 = and i32 %3589, 255
  %3591 = xor i32 %3581, %3590
  %3592 = xor i32 %3591, 452984832
  %3593 = getelementptr inbounds i32, i32* %3540, i64 4
  %3594 = load i1, i1* %out.1
  %3595 = icmp slt i64 4, %N
  %3596 = bitcast i64* %shadow to i32*
  %safe.297 = or i1 %3594, %3595
  %select.ptr.298 = select i1 %safe.297, i32* %3593, i32* %3596
  %3597 = load i32, i32* %3593
  %select.val.299 = select i1 %3594, i32 %3592, i32 %3597
  store i32 %select.val.299, i32* %select.ptr.298, align 4
  %3598 = getelementptr inbounds i32, i32* %3540, i64 1
  %3599 = load i1, i1* %out.1
  %3600 = icmp slt i64 1, %N
  %3601 = bitcast i64* %shadow to i32*
  %safe.300 = or i1 %3599, %3600
  %select.ptr.301 = select i1 %safe.300, i32* %3598, i32* %3601
  %3602 = load i32, i32* %select.ptr.301, align 4
  %3603 = getelementptr inbounds i32, i32* %3540, i64 4
  %3604 = load i1, i1* %out.1
  %3605 = icmp slt i64 4, %N
  %3606 = bitcast i64* %shadow to i32*
  %safe.302 = or i1 %3604, %3605
  %select.ptr.303 = select i1 %safe.302, i32* %3603, i32* %3606
  %3607 = load i32, i32* %select.ptr.303, align 4
  %3608 = xor i32 %3602, %3607
  %3609 = getelementptr inbounds i32, i32* %3540, i64 5
  %3610 = load i1, i1* %out.1
  %3611 = icmp slt i64 5, %N
  %3612 = bitcast i64* %shadow to i32*
  %safe.304 = or i1 %3610, %3611
  %select.ptr.305 = select i1 %safe.304, i32* %3609, i32* %3612
  %3613 = load i32, i32* %3609
  %select.val.306 = select i1 %3610, i32 %3608, i32 %3613
  store i32 %select.val.306, i32* %select.ptr.305, align 4
  %3614 = getelementptr inbounds i32, i32* %3540, i64 2
  %3615 = load i1, i1* %out.1
  %3616 = icmp slt i64 2, %N
  %3617 = bitcast i64* %shadow to i32*
  %safe.307 = or i1 %3615, %3616
  %select.ptr.308 = select i1 %safe.307, i32* %3614, i32* %3617
  %3618 = load i32, i32* %select.ptr.308, align 4
  %3619 = getelementptr inbounds i32, i32* %3540, i64 5
  %3620 = load i1, i1* %out.1
  %3621 = icmp slt i64 5, %N
  %3622 = bitcast i64* %shadow to i32*
  %safe.309 = or i1 %3620, %3621
  %select.ptr.310 = select i1 %safe.309, i32* %3619, i32* %3622
  %3623 = load i32, i32* %select.ptr.310, align 4
  %3624 = xor i32 %3618, %3623
  %3625 = getelementptr inbounds i32, i32* %3540, i64 6
  %3626 = load i1, i1* %out.1
  %3627 = icmp slt i64 6, %N
  %3628 = bitcast i64* %shadow to i32*
  %safe.311 = or i1 %3626, %3627
  %select.ptr.312 = select i1 %safe.311, i32* %3625, i32* %3628
  %3629 = load i32, i32* %3625
  %select.val.313 = select i1 %3626, i32 %3624, i32 %3629
  store i32 %select.val.313, i32* %select.ptr.312, align 4
  %3630 = getelementptr inbounds i32, i32* %3540, i64 3
  %3631 = load i1, i1* %out.1
  %3632 = icmp slt i64 3, %N
  %3633 = bitcast i64* %shadow to i32*
  %safe.314 = or i1 %3631, %3632
  %select.ptr.315 = select i1 %safe.314, i32* %3630, i32* %3633
  %3634 = load i32, i32* %select.ptr.315, align 4
  %3635 = getelementptr inbounds i32, i32* %3540, i64 6
  %3636 = load i1, i1* %out.1
  %3637 = icmp slt i64 6, %N
  %3638 = bitcast i64* %shadow to i32*
  %safe.316 = or i1 %3636, %3637
  %select.ptr.317 = select i1 %safe.316, i32* %3635, i32* %3638
  %3639 = load i32, i32* %select.ptr.317, align 4
  %3640 = xor i32 %3634, %3639
  %3641 = getelementptr inbounds i32, i32* %3540, i64 7
  %3642 = load i1, i1* %out.1
  %3643 = icmp slt i64 7, %N
  %3644 = bitcast i64* %shadow to i32*
  %safe.318 = or i1 %3642, %3643
  %select.ptr.319 = select i1 %safe.318, i32* %3641, i32* %3644
  %3645 = load i32, i32* %3641
  %select.val.320 = select i1 %3642, i32 %3640, i32 %3645
  store i32 %select.val.320, i32* %select.ptr.319, align 4
  %3646 = getelementptr inbounds i32, i32* %3540, i64 4
  %3647 = getelementptr inbounds i32, i32* %3646, i64 3
  %3648 = load i1, i1* %out.1
  %3649 = icmp slt i64 3, %N
  %3650 = bitcast i64* %shadow to i32*
  %safe.321 = or i1 %3648, %3649
  %select.ptr.322 = select i1 %safe.321, i32* %3647, i32* %3650
  %3651 = load i32, i32* %select.ptr.322, align 4
  %3652 = load i1, i1* %out.1
  %3653 = icmp slt i64 4, %N
  %3654 = bitcast i64* %shadow to i32*
  %safe.323 = or i1 %3652, %3653
  %select.ptr.324 = select i1 %safe.323, i32* %3646, i32* %3654
  %3655 = load i32, i32* %select.ptr.324, align 4
  %3656 = lshr i32 %3651, 16
  %3657 = and i32 %3656, 255
  %3658 = zext i32 %3657 to i64
  %3659 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3658
  %3660 = load i1, i1* %out.1
  %3661 = sext i32 256 to i64
  %3662 = icmp slt i64 %3658, %3661
  %3663 = bitcast i64* %shadow to i32*
  %safe.325 = or i1 %3660, %3662
  %select.ptr.326 = select i1 %safe.325, i32* %3659, i32* %3663
  %3664 = load i32, i32* %select.ptr.326, align 4
  %3665 = and i32 %3664, -16777216
  %3666 = xor i32 %3655, %3665
  %3667 = lshr i32 %3651, 8
  %3668 = and i32 %3667, 255
  %3669 = zext i32 %3668 to i64
  %3670 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3669
  %3671 = load i1, i1* %out.1
  %3672 = sext i32 256 to i64
  %3673 = icmp slt i64 %3669, %3672
  %3674 = bitcast i64* %shadow to i32*
  %safe.327 = or i1 %3671, %3673
  %select.ptr.328 = select i1 %safe.327, i32* %3670, i32* %3674
  %3675 = load i32, i32* %select.ptr.328, align 4
  %3676 = and i32 %3675, 16711680
  %3677 = xor i32 %3666, %3676
  %3678 = and i32 %3651, 255
  %3679 = zext i32 %3678 to i64
  %3680 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3679
  %3681 = load i1, i1* %out.1
  %3682 = sext i32 256 to i64
  %3683 = icmp slt i64 %3679, %3682
  %3684 = bitcast i64* %shadow to i32*
  %safe.329 = or i1 %3681, %3683
  %select.ptr.330 = select i1 %safe.329, i32* %3680, i32* %3684
  %3685 = load i32, i32* %select.ptr.330, align 4
  %3686 = and i32 %3685, 65280
  %3687 = xor i32 %3677, %3686
  %3688 = lshr i32 %3651, 24
  %3689 = zext i32 %3688 to i64
  %3690 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3689
  %3691 = load i1, i1* %out.1
  %3692 = sext i32 256 to i64
  %3693 = icmp slt i64 %3689, %3692
  %3694 = bitcast i64* %shadow to i32*
  %safe.331 = or i1 %3691, %3693
  %select.ptr.332 = select i1 %safe.331, i32* %3690, i32* %3694
  %3695 = load i32, i32* %select.ptr.332, align 4
  %3696 = and i32 %3695, 255
  %3697 = xor i32 %3687, %3696
  %3698 = xor i32 %3697, 905969664
  %3699 = getelementptr inbounds i32, i32* %3646, i64 4
  %3700 = load i1, i1* %out.1
  %3701 = icmp slt i64 4, %N
  %3702 = bitcast i64* %shadow to i32*
  %safe.333 = or i1 %3700, %3701
  %select.ptr.334 = select i1 %safe.333, i32* %3699, i32* %3702
  %3703 = load i32, i32* %3699
  %select.val.335 = select i1 %3700, i32 %3698, i32 %3703
  store i32 %select.val.335, i32* %select.ptr.334, align 4
  %3704 = getelementptr inbounds i32, i32* %3646, i64 1
  %3705 = load i1, i1* %out.1
  %3706 = icmp slt i64 1, %N
  %3707 = bitcast i64* %shadow to i32*
  %safe.336 = or i1 %3705, %3706
  %select.ptr.337 = select i1 %safe.336, i32* %3704, i32* %3707
  %3708 = load i32, i32* %select.ptr.337, align 4
  %3709 = getelementptr inbounds i32, i32* %3646, i64 4
  %3710 = load i1, i1* %out.1
  %3711 = icmp slt i64 4, %N
  %3712 = bitcast i64* %shadow to i32*
  %safe.338 = or i1 %3710, %3711
  %select.ptr.339 = select i1 %safe.338, i32* %3709, i32* %3712
  %3713 = load i32, i32* %select.ptr.339, align 4
  %3714 = xor i32 %3708, %3713
  %3715 = getelementptr inbounds i32, i32* %3646, i64 5
  %3716 = load i1, i1* %out.1
  %3717 = icmp slt i64 5, %N
  %3718 = bitcast i64* %shadow to i32*
  %safe.340 = or i1 %3716, %3717
  %select.ptr.341 = select i1 %safe.340, i32* %3715, i32* %3718
  %3719 = load i32, i32* %3715
  %select.val.342 = select i1 %3716, i32 %3714, i32 %3719
  store i32 %select.val.342, i32* %select.ptr.341, align 4
  %3720 = getelementptr inbounds i32, i32* %3646, i64 2
  %3721 = load i1, i1* %out.1
  %3722 = icmp slt i64 2, %N
  %3723 = bitcast i64* %shadow to i32*
  %safe.343 = or i1 %3721, %3722
  %select.ptr.344 = select i1 %safe.343, i32* %3720, i32* %3723
  %3724 = load i32, i32* %select.ptr.344, align 4
  %3725 = getelementptr inbounds i32, i32* %3646, i64 5
  %3726 = load i1, i1* %out.1
  %3727 = icmp slt i64 5, %N
  %3728 = bitcast i64* %shadow to i32*
  %safe.345 = or i1 %3726, %3727
  %select.ptr.346 = select i1 %safe.345, i32* %3725, i32* %3728
  %3729 = load i32, i32* %select.ptr.346, align 4
  %3730 = xor i32 %3724, %3729
  %3731 = getelementptr inbounds i32, i32* %3646, i64 6
  %3732 = load i1, i1* %out.1
  %3733 = icmp slt i64 6, %N
  %3734 = bitcast i64* %shadow to i32*
  %safe.347 = or i1 %3732, %3733
  %select.ptr.348 = select i1 %safe.347, i32* %3731, i32* %3734
  %3735 = load i32, i32* %3731
  %select.val.349 = select i1 %3732, i32 %3730, i32 %3735
  store i32 %select.val.349, i32* %select.ptr.348, align 4
  %3736 = getelementptr inbounds i32, i32* %3646, i64 3
  %3737 = load i1, i1* %out.1
  %3738 = icmp slt i64 3, %N
  %3739 = bitcast i64* %shadow to i32*
  %safe.350 = or i1 %3737, %3738
  %select.ptr.351 = select i1 %safe.350, i32* %3736, i32* %3739
  %3740 = load i32, i32* %select.ptr.351, align 4
  %3741 = getelementptr inbounds i32, i32* %3646, i64 6
  %3742 = load i1, i1* %out.1
  %3743 = icmp slt i64 6, %N
  %3744 = bitcast i64* %shadow to i32*
  %safe.352 = or i1 %3742, %3743
  %select.ptr.353 = select i1 %safe.352, i32* %3741, i32* %3744
  %3745 = load i32, i32* %select.ptr.353, align 4
  %3746 = xor i32 %3740, %3745
  %3747 = getelementptr inbounds i32, i32* %3646, i64 7
  %3748 = load i1, i1* %out.1
  %3749 = icmp slt i64 7, %N
  %3750 = bitcast i64* %shadow to i32*
  %safe.354 = or i1 %3748, %3749
  %select.ptr.355 = select i1 %safe.354, i32* %3747, i32* %3750
  %3751 = load i32, i32* %3747
  %select.val.356 = select i1 %3748, i32 %3746, i32 %3751
  store i32 %select.val.356, i32* %select.ptr.355, align 4
  %3752 = load i1, i1* %out.1
  %3753 = load i1, i1* %out.3
  %3754 = load i1, i1* %out.4
  %3755 = xor i1 %253, true
  %in.11 = and i1 %3754, %3755
  %3756 = load i1, i1* %out.5
  %3757 = select i1 %in.11, i32 0, i32 14
  %3758 = select i1 %3753, i32 12, i32 %3757
  %select.phi. = select i1 %3752, i32 10, i32 %3758
  %3759 = or i1 %3752, %3753
  %3760 = or i1 %3759, %in.11
  %3761 = or i1 %3760, %3756
  store i1 %3761, i1* %out.6
  ret i32 %select.phi.
}

define i32 @rijndaelKeySetupDec(i32* %0, i64 %N, i8* %1, i64 %N1, i32 %2) {
  %4 = call i32 @rijndaelKeySetupEnc(i32* %0, i64 %N, i8* %1, i64 %N1, i32 %2)
  %5 = mul nsw i32 4, %4
  %6 = icmp slt i32 0, %5
  br i1 %6, label %.lr.ph8, label %.preheader

.lr.ph8:                                          ; preds = %3
  %7 = shl i32 %4, 2
  %8 = sext i32 %7 to i64
  br label %10

.preheader.loopexit:                              ; preds = %10
  %.1.ph.ph = phi i32 [ 1, %10 ]
  %.0.ph.ph = phi i32* [ %0, %10 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.loopexit, %3
  %.1.ph = phi i32 [ 1, %3 ], [ %.1.ph.ph, %.preheader.loopexit ]
  %.0.ph = phi i32* [ %0, %3 ], [ %.0.ph.ph, %.preheader.loopexit ]
  %9 = icmp slt i32 %.1.ph, %4
  br i1 %9, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

10:                                               ; preds = %10, %.lr.ph8
  %indvars.iv10 = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next11, %10 ]
  %indvars.iv = phi i64 [ %8, %.lr.ph8 ], [ %indvars.iv.next, %10 ]
  %11 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  store i32 %12, i32* %16, align 4
  %17 = add nuw nsw i64 %indvars.iv10, 1
  %18 = getelementptr inbounds i32, i32* %0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i64 %indvars.iv, 1
  %21 = getelementptr inbounds i32, i32* %0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = add nuw nsw i64 %indvars.iv10, 1
  %24 = getelementptr inbounds i32, i32* %0, i64 %23
  store i32 %22, i32* %24, align 4
  %25 = add nsw i64 %indvars.iv, 1
  %26 = getelementptr inbounds i32, i32* %0, i64 %25
  store i32 %19, i32* %26, align 4
  %27 = add nuw nsw i64 %indvars.iv10, 2
  %28 = getelementptr inbounds i32, i32* %0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i64 %indvars.iv, 2
  %31 = getelementptr inbounds i32, i32* %0, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = add nuw nsw i64 %indvars.iv10, 2
  %34 = getelementptr inbounds i32, i32* %0, i64 %33
  store i32 %32, i32* %34, align 4
  %35 = add nsw i64 %indvars.iv, 2
  %36 = getelementptr inbounds i32, i32* %0, i64 %35
  store i32 %29, i32* %36, align 4
  %37 = add nuw nsw i64 %indvars.iv10, 3
  %38 = getelementptr inbounds i32, i32* %0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i64 %indvars.iv, 3
  %41 = getelementptr inbounds i32, i32* %0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = add nuw nsw i64 %indvars.iv10, 3
  %44 = getelementptr inbounds i32, i32* %0, i64 %43
  store i32 %42, i32* %44, align 4
  %45 = add nsw i64 %indvars.iv, 3
  %46 = getelementptr inbounds i32, i32* %0, i64 %45
  store i32 %39, i32* %46, align 4
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 4
  %indvars.iv.next = add nsw i64 %indvars.iv, -4
  %47 = icmp slt i64 %indvars.iv.next11, %indvars.iv.next
  br i1 %47, label %10, label %.preheader.loopexit

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.04 = phi i32* [ %49, %.lr.ph ], [ %.0.ph, %.lr.ph.preheader ]
  %48 = phi i64 [ %N, %.lr.ph.preheader ], [ %N, %.lr.ph ]
  %.13 = phi i32 [ %229, %.lr.ph ], [ %.1.ph, %.lr.ph.preheader ]
  %49 = getelementptr inbounds i32, i32* %.04, i64 4
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 24
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 255
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %49, align 4
  %60 = lshr i32 %59, 16
  %61 = and i32 %60, 255
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 255
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = xor i32 %58, %68
  %70 = load i32, i32* %49, align 4
  %71 = lshr i32 %70, 8
  %72 = and i32 %71, 255
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 255
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = xor i32 %69, %79
  %81 = load i32, i32* %49, align 4
  %82 = and i32 %81, 255
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 255
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = xor i32 %80, %89
  store i32 %90, i32* %49, align 4
  %91 = getelementptr inbounds i32, i32* %49, i64 1
  %92 = load i32, i32* %91, align 4
  %93 = lshr i32 %92, 24
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 255
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds i32, i32* %49, i64 1
  %102 = load i32, i32* %101, align 4
  %103 = lshr i32 %102, 16
  %104 = and i32 %103, 255
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 255
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = xor i32 %100, %111
  %113 = getelementptr inbounds i32, i32* %49, i64 1
  %114 = load i32, i32* %113, align 4
  %115 = lshr i32 %114, 8
  %116 = and i32 %115, 255
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, 255
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = xor i32 %112, %123
  %125 = getelementptr inbounds i32, i32* %49, i64 1
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 255
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 255
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = xor i32 %124, %134
  %136 = getelementptr inbounds i32, i32* %49, i64 1
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds i32, i32* %49, i64 2
  %138 = load i32, i32* %137, align 4
  %139 = lshr i32 %138, 24
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 255
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds i32, i32* %49, i64 2
  %148 = load i32, i32* %147, align 4
  %149 = lshr i32 %148, 16
  %150 = and i32 %149, 255
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = and i32 %153, 255
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = xor i32 %146, %157
  %159 = getelementptr inbounds i32, i32* %49, i64 2
  %160 = load i32, i32* %159, align 4
  %161 = lshr i32 %160, 8
  %162 = and i32 %161, 255
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 255
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = xor i32 %158, %169
  %171 = getelementptr inbounds i32, i32* %49, i64 2
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 255
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, 255
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = xor i32 %170, %180
  %182 = getelementptr inbounds i32, i32* %49, i64 2
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds i32, i32* %49, i64 3
  %184 = load i32, i32* %183, align 4
  %185 = lshr i32 %184, 24
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = and i32 %188, 255
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds i32, i32* %49, i64 3
  %194 = load i32, i32* %193, align 4
  %195 = lshr i32 %194, 16
  %196 = and i32 %195, 255
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = and i32 %199, 255
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = xor i32 %192, %203
  %205 = getelementptr inbounds i32, i32* %49, i64 3
  %206 = load i32, i32* %205, align 4
  %207 = lshr i32 %206, 8
  %208 = and i32 %207, 255
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %209
  %211 = load i32, i32* %210, align 4
  %212 = and i32 %211, 255
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = xor i32 %204, %215
  %217 = getelementptr inbounds i32, i32* %49, i64 3
  %218 = load i32, i32* %217, align 4
  %219 = and i32 %218, 255
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = and i32 %222, 255
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = xor i32 %216, %226
  %228 = getelementptr inbounds i32, i32* %49, i64 3
  store i32 %227, i32* %228, align 4
  %229 = add nuw nsw i32 %.13, 1
  %exitcond = icmp ne i32 %229, %4
  br i1 %exitcond, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  ret i32 %4
}

define void @rijndaelEncrypt(i32* %0, i64 %N, i32 %1, i8* %2, i64 %N1, i8* %3, i64 %N2) {
.preheader12:
  %out. = alloca i1
  store i1 true, i1* %out.
  %out.1 = alloca i1
  %out.2 = alloca i1
  %out.3 = alloca i1
  %out.4 = alloca i1
  %out.5 = alloca i1
  %out.6 = alloca i1
  %out.7 = alloca i1
  %out.8 = alloca i1
  %out.9 = alloca i1
  %out.10 = alloca i1
  %out.11 = alloca i1
  %4 = getelementptr inbounds i8, i8* %2, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl i32 %6, 24
  %8 = getelementptr inbounds i8, i8* %2, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl i32 %10, 16
  %12 = xor i32 %7, %11
  %13 = getelementptr inbounds i8, i8* %2, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl i32 %15, 8
  %17 = xor i32 %12, %16
  %18 = getelementptr inbounds i8, i8* %2, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = xor i32 %17, %20
  %22 = getelementptr inbounds i32, i32* %0, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = xor i32 %21, %23
  %25 = getelementptr inbounds i8, i8* %2, i64 4
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %2, i64 4
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl i32 %32, 16
  %34 = getelementptr inbounds i8, i8* %2, i64 4
  %35 = getelementptr inbounds i8, i8* %34, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl i32 %37, 8
  %39 = getelementptr inbounds i8, i8* %2, i64 4
  %40 = getelementptr inbounds i8, i8* %39, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i32, i32* %0, i64 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds i8, i8* %2, i64 8
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds i8, i8* %2, i64 8
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl i32 %52, 16
  %54 = getelementptr inbounds i8, i8* %2, i64 8
  %55 = getelementptr inbounds i8, i8* %54, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl i32 %57, 8
  %59 = getelementptr inbounds i8, i8* %2, i64 8
  %60 = getelementptr inbounds i8, i8* %59, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = getelementptr inbounds i32, i32* %0, i64 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds i8, i8* %2, i64 12
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = getelementptr inbounds i8, i8* %2, i64 12
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl i32 %72, 16
  %74 = getelementptr inbounds i8, i8* %2, i64 12
  %75 = getelementptr inbounds i8, i8* %74, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl i32 %77, 8
  %79 = getelementptr inbounds i8, i8* %2, i64 12
  %80 = getelementptr inbounds i8, i8* %79, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = getelementptr inbounds i32, i32* %0, i64 3
  %84 = load i32, i32* %83, align 4
  %85 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @Te0, i64 0, i64 0), align 4
  %86 = lshr i32 %24, 24
  %87 = zext i32 %86 to i64
  %88 = icmp eq i64 0, %87
  %shadow = alloca i64
  %89 = load i1, i1* %out.
  %90 = xor i1 %88, true
  %in. = and i1 %89, %90
  store i1 %in., i1* %out.1
  %91 = zext i32 %86 to i64
  %92 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %91
  %93 = load i1, i1* %out.1
  %94 = sext i32 256 to i64
  %95 = icmp slt i64 %91, %94
  %96 = bitcast i64* %shadow to i32*
  %safe. = or i1 %93, %95
  %select.ptr. = select i1 %safe., i32* %92, i32* %96
  %97 = load i32, i32* %select.ptr., align 4
  %98 = load i1, i1* %out.
  %in.12 = and i1 %98, %88
  %99 = load i1, i1* %out.1
  %select.phi. = select i1 %in.12, i32 %85, i32 %97
  %100 = or i1 %in.12, %99
  store i1 %100, i1* %out.2
  %101 = shl i32 %28, 24
  %102 = xor i32 %101, %33
  %103 = xor i32 %102, %38
  %104 = xor i32 %103, %42
  %105 = xor i32 %104, %44
  %106 = shl i32 %48, 24
  %107 = xor i32 %106, %53
  %108 = xor i32 %107, %58
  %109 = xor i32 %108, %62
  %110 = xor i32 %109, %64
  %111 = shl i32 %68, 24
  %112 = xor i32 %111, %73
  %113 = xor i32 %112, %78
  %114 = xor i32 %113, %82
  %115 = xor i32 %114, %84
  %116 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 0
  %117 = load i1, i1* %out.2
  %118 = sext i32 256 to i64
  %119 = icmp slt i64 0, %118
  %120 = bitcast i64* %shadow to i32*
  %safe.3 = or i1 %117, %119
  %select.ptr.4 = select i1 %safe.3, i32* %116, i32* %120
  %121 = load i32, i32* %select.ptr.4, align 4
  %122 = lshr i32 %105, 16
  %123 = and i32 %122, 255
  %124 = zext i32 %123 to i64
  %125 = icmp eq i64 0, %124
  %126 = load i1, i1* %out.2
  %127 = xor i1 %125, true
  %in.13 = and i1 %126, %127
  store i1 %in.13, i1* %out.3
  %128 = zext i32 %123 to i64
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %128
  %130 = load i1, i1* %out.3
  %131 = sext i32 256 to i64
  %132 = icmp slt i64 %128, %131
  %133 = bitcast i64* %shadow to i32*
  %safe.5 = or i1 %130, %132
  %select.ptr.6 = select i1 %safe.5, i32* %129, i32* %133
  %134 = load i32, i32* %select.ptr.6, align 4
  %135 = load i1, i1* %out.2
  %in.14 = and i1 %135, %125
  %136 = load i1, i1* %out.3
  %select.phi.9 = select i1 %in.14, i32 %121, i32 %134
  %137 = or i1 %in.14, %136
  store i1 %137, i1* %out.4
  %138 = xor i32 %select.phi., %select.phi.9
  %139 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 0
  %140 = load i1, i1* %out.4
  %141 = sext i32 256 to i64
  %142 = icmp slt i64 0, %141
  %143 = bitcast i64* %shadow to i32*
  %safe.7 = or i1 %140, %142
  %select.ptr.8 = select i1 %safe.7, i32* %139, i32* %143
  %144 = load i32, i32* %select.ptr.8, align 4
  %145 = lshr i32 %110, 8
  %146 = and i32 %145, 255
  %147 = zext i32 %146 to i64
  %148 = icmp eq i64 0, %147
  %149 = load i1, i1* %out.4
  %150 = xor i1 %148, true
  %in.15 = and i1 %149, %150
  store i1 %in.15, i1* %out.5
  %151 = zext i32 %146 to i64
  %152 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %151
  %153 = load i1, i1* %out.5
  %154 = sext i32 256 to i64
  %155 = icmp slt i64 %151, %154
  %156 = bitcast i64* %shadow to i32*
  %safe.10 = or i1 %153, %155
  %select.ptr.11 = select i1 %safe.10, i32* %152, i32* %156
  %157 = load i32, i32* %select.ptr.11, align 4
  %158 = load i1, i1* %out.4
  %in.16 = and i1 %158, %148
  %159 = load i1, i1* %out.5
  %select.phi.14 = select i1 %in.16, i32 %144, i32 %157
  %160 = or i1 %in.16, %159
  store i1 %160, i1* %out.6
  %161 = xor i32 %138, %select.phi.14
  %162 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 0
  %163 = load i1, i1* %out.6
  %164 = sext i32 256 to i64
  %165 = icmp slt i64 0, %164
  %166 = bitcast i64* %shadow to i32*
  %safe.12 = or i1 %163, %165
  %select.ptr.13 = select i1 %safe.12, i32* %162, i32* %166
  %167 = load i32, i32* %select.ptr.13, align 4
  %168 = and i32 %115, 255
  %169 = zext i32 %168 to i64
  %170 = icmp eq i64 0, %169
  %171 = load i1, i1* %out.6
  %172 = xor i1 %170, true
  %in.17 = and i1 %171, %172
  store i1 %in.17, i1* %out.7
  %173 = zext i32 %168 to i64
  %174 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %173
  %175 = load i1, i1* %out.7
  %176 = sext i32 256 to i64
  %177 = icmp slt i64 %173, %176
  %178 = bitcast i64* %shadow to i32*
  %safe.15 = or i1 %175, %177
  %select.ptr.16 = select i1 %safe.15, i32* %174, i32* %178
  %179 = load i32, i32* %select.ptr.16, align 4
  %180 = load i1, i1* %out.6
  %in.18 = and i1 %180, %170
  %181 = load i1, i1* %out.7
  %select.phi.369 = select i1 %in.18, i32 %167, i32 %179
  %182 = or i1 %in.18, %181
  store i1 %182, i1* %out.8
  %183 = xor i32 %161, %select.phi.369
  %184 = getelementptr inbounds i32, i32* %0, i64 4
  %185 = load i1, i1* %out.8
  %186 = icmp slt i64 4, %N
  %187 = bitcast i64* %shadow to i32*
  %safe.17 = or i1 %185, %186
  %select.ptr.18 = select i1 %safe.17, i32* %184, i32* %187
  %188 = load i32, i32* %select.ptr.18, align 4
  %189 = xor i32 %183, %188
  %190 = lshr i32 %105, 24
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %191
  %193 = load i1, i1* %out.8
  %194 = sext i32 256 to i64
  %195 = icmp slt i64 %191, %194
  %196 = bitcast i64* %shadow to i32*
  %safe.19 = or i1 %193, %195
  %select.ptr.20 = select i1 %safe.19, i32* %192, i32* %196
  %197 = load i32, i32* %select.ptr.20, align 4
  %198 = lshr i32 %110, 16
  %199 = and i32 %198, 255
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %200
  %202 = load i1, i1* %out.8
  %203 = sext i32 256 to i64
  %204 = icmp slt i64 %200, %203
  %205 = bitcast i64* %shadow to i32*
  %safe.21 = or i1 %202, %204
  %select.ptr.22 = select i1 %safe.21, i32* %201, i32* %205
  %206 = load i32, i32* %select.ptr.22, align 4
  %207 = xor i32 %197, %206
  %208 = lshr i32 %115, 8
  %209 = and i32 %208, 255
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %210
  %212 = load i1, i1* %out.8
  %213 = sext i32 256 to i64
  %214 = icmp slt i64 %210, %213
  %215 = bitcast i64* %shadow to i32*
  %safe.23 = or i1 %212, %214
  %select.ptr.24 = select i1 %safe.23, i32* %211, i32* %215
  %216 = load i32, i32* %select.ptr.24, align 4
  %217 = xor i32 %207, %216
  %218 = and i32 %24, 255
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %219
  %221 = load i1, i1* %out.8
  %222 = sext i32 256 to i64
  %223 = icmp slt i64 %219, %222
  %224 = bitcast i64* %shadow to i32*
  %safe.25 = or i1 %221, %223
  %select.ptr.26 = select i1 %safe.25, i32* %220, i32* %224
  %225 = load i32, i32* %select.ptr.26, align 4
  %226 = xor i32 %217, %225
  %227 = getelementptr inbounds i32, i32* %0, i64 5
  %228 = load i1, i1* %out.8
  %229 = icmp slt i64 5, %N
  %230 = bitcast i64* %shadow to i32*
  %safe.27 = or i1 %228, %229
  %select.ptr.28 = select i1 %safe.27, i32* %227, i32* %230
  %231 = load i32, i32* %select.ptr.28, align 4
  %232 = xor i32 %226, %231
  %233 = lshr i32 %110, 24
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %234
  %236 = load i1, i1* %out.8
  %237 = sext i32 256 to i64
  %238 = icmp slt i64 %234, %237
  %239 = bitcast i64* %shadow to i32*
  %safe.29 = or i1 %236, %238
  %select.ptr.30 = select i1 %safe.29, i32* %235, i32* %239
  %240 = load i32, i32* %select.ptr.30, align 4
  %241 = lshr i32 %115, 16
  %242 = and i32 %241, 255
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %243
  %245 = load i1, i1* %out.8
  %246 = sext i32 256 to i64
  %247 = icmp slt i64 %243, %246
  %248 = bitcast i64* %shadow to i32*
  %safe.31 = or i1 %245, %247
  %select.ptr.32 = select i1 %safe.31, i32* %244, i32* %248
  %249 = load i32, i32* %select.ptr.32, align 4
  %250 = xor i32 %240, %249
  %251 = lshr i32 %24, 8
  %252 = and i32 %251, 255
  %253 = zext i32 %252 to i64
  %254 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %253
  %255 = load i1, i1* %out.8
  %256 = sext i32 256 to i64
  %257 = icmp slt i64 %253, %256
  %258 = bitcast i64* %shadow to i32*
  %safe.33 = or i1 %255, %257
  %select.ptr.34 = select i1 %safe.33, i32* %254, i32* %258
  %259 = load i32, i32* %select.ptr.34, align 4
  %260 = xor i32 %250, %259
  %261 = and i32 %105, 255
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %262
  %264 = load i1, i1* %out.8
  %265 = sext i32 256 to i64
  %266 = icmp slt i64 %262, %265
  %267 = bitcast i64* %shadow to i32*
  %safe.35 = or i1 %264, %266
  %select.ptr.36 = select i1 %safe.35, i32* %263, i32* %267
  %268 = load i32, i32* %select.ptr.36, align 4
  %269 = xor i32 %260, %268
  %270 = getelementptr inbounds i32, i32* %0, i64 6
  %271 = load i1, i1* %out.8
  %272 = icmp slt i64 6, %N
  %273 = bitcast i64* %shadow to i32*
  %safe.37 = or i1 %271, %272
  %select.ptr.38 = select i1 %safe.37, i32* %270, i32* %273
  %274 = load i32, i32* %select.ptr.38, align 4
  %275 = xor i32 %269, %274
  %276 = lshr i32 %115, 24
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %277
  %279 = load i1, i1* %out.8
  %280 = sext i32 256 to i64
  %281 = icmp slt i64 %277, %280
  %282 = bitcast i64* %shadow to i32*
  %safe.39 = or i1 %279, %281
  %select.ptr.40 = select i1 %safe.39, i32* %278, i32* %282
  %283 = load i32, i32* %select.ptr.40, align 4
  %284 = lshr i32 %24, 16
  %285 = and i32 %284, 255
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %286
  %288 = load i1, i1* %out.8
  %289 = sext i32 256 to i64
  %290 = icmp slt i64 %286, %289
  %291 = bitcast i64* %shadow to i32*
  %safe.41 = or i1 %288, %290
  %select.ptr.42 = select i1 %safe.41, i32* %287, i32* %291
  %292 = load i32, i32* %select.ptr.42, align 4
  %293 = xor i32 %283, %292
  %294 = lshr i32 %105, 8
  %295 = and i32 %294, 255
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %296
  %298 = load i1, i1* %out.8
  %299 = sext i32 256 to i64
  %300 = icmp slt i64 %296, %299
  %301 = bitcast i64* %shadow to i32*
  %safe.43 = or i1 %298, %300
  %select.ptr.44 = select i1 %safe.43, i32* %297, i32* %301
  %302 = load i32, i32* %select.ptr.44, align 4
  %303 = xor i32 %293, %302
  %304 = and i32 %110, 255
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %305
  %307 = load i1, i1* %out.8
  %308 = sext i32 256 to i64
  %309 = icmp slt i64 %305, %308
  %310 = bitcast i64* %shadow to i32*
  %safe.45 = or i1 %307, %309
  %select.ptr.46 = select i1 %safe.45, i32* %306, i32* %310
  %311 = load i32, i32* %select.ptr.46, align 4
  %312 = xor i32 %303, %311
  %313 = getelementptr inbounds i32, i32* %0, i64 7
  %314 = load i1, i1* %out.8
  %315 = icmp slt i64 7, %N
  %316 = bitcast i64* %shadow to i32*
  %safe.47 = or i1 %314, %315
  %select.ptr.48 = select i1 %safe.47, i32* %313, i32* %316
  %317 = load i32, i32* %select.ptr.48, align 4
  %318 = xor i32 %312, %317
  %319 = lshr i32 %189, 24
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %320
  %322 = load i1, i1* %out.8
  %323 = sext i32 256 to i64
  %324 = icmp slt i64 %320, %323
  %325 = bitcast i64* %shadow to i32*
  %safe.49 = or i1 %322, %324
  %select.ptr.50 = select i1 %safe.49, i32* %321, i32* %325
  %326 = load i32, i32* %select.ptr.50, align 4
  %327 = lshr i32 %232, 16
  %328 = and i32 %327, 255
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %329
  %331 = load i1, i1* %out.8
  %332 = sext i32 256 to i64
  %333 = icmp slt i64 %329, %332
  %334 = bitcast i64* %shadow to i32*
  %safe.51 = or i1 %331, %333
  %select.ptr.52 = select i1 %safe.51, i32* %330, i32* %334
  %335 = load i32, i32* %select.ptr.52, align 4
  %336 = xor i32 %326, %335
  %337 = lshr i32 %275, 8
  %338 = and i32 %337, 255
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %339
  %341 = load i1, i1* %out.8
  %342 = sext i32 256 to i64
  %343 = icmp slt i64 %339, %342
  %344 = bitcast i64* %shadow to i32*
  %safe.53 = or i1 %341, %343
  %select.ptr.54 = select i1 %safe.53, i32* %340, i32* %344
  %345 = load i32, i32* %select.ptr.54, align 4
  %346 = xor i32 %336, %345
  %347 = and i32 %318, 255
  %348 = zext i32 %347 to i64
  %349 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %348
  %350 = load i1, i1* %out.8
  %351 = sext i32 256 to i64
  %352 = icmp slt i64 %348, %351
  %353 = bitcast i64* %shadow to i32*
  %safe.55 = or i1 %350, %352
  %select.ptr.56 = select i1 %safe.55, i32* %349, i32* %353
  %354 = load i32, i32* %select.ptr.56, align 4
  %355 = xor i32 %346, %354
  %356 = getelementptr inbounds i32, i32* %0, i64 8
  %357 = load i1, i1* %out.8
  %358 = icmp slt i64 8, %N
  %359 = bitcast i64* %shadow to i32*
  %safe.57 = or i1 %357, %358
  %select.ptr.58 = select i1 %safe.57, i32* %356, i32* %359
  %360 = load i32, i32* %select.ptr.58, align 4
  %361 = xor i32 %355, %360
  %362 = lshr i32 %232, 24
  %363 = zext i32 %362 to i64
  %364 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %363
  %365 = load i1, i1* %out.8
  %366 = sext i32 256 to i64
  %367 = icmp slt i64 %363, %366
  %368 = bitcast i64* %shadow to i32*
  %safe.59 = or i1 %365, %367
  %select.ptr.60 = select i1 %safe.59, i32* %364, i32* %368
  %369 = load i32, i32* %select.ptr.60, align 4
  %370 = lshr i32 %275, 16
  %371 = and i32 %370, 255
  %372 = zext i32 %371 to i64
  %373 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %372
  %374 = load i1, i1* %out.8
  %375 = sext i32 256 to i64
  %376 = icmp slt i64 %372, %375
  %377 = bitcast i64* %shadow to i32*
  %safe.61 = or i1 %374, %376
  %select.ptr.62 = select i1 %safe.61, i32* %373, i32* %377
  %378 = load i32, i32* %select.ptr.62, align 4
  %379 = xor i32 %369, %378
  %380 = lshr i32 %318, 8
  %381 = and i32 %380, 255
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %382
  %384 = load i1, i1* %out.8
  %385 = sext i32 256 to i64
  %386 = icmp slt i64 %382, %385
  %387 = bitcast i64* %shadow to i32*
  %safe.63 = or i1 %384, %386
  %select.ptr.64 = select i1 %safe.63, i32* %383, i32* %387
  %388 = load i32, i32* %select.ptr.64, align 4
  %389 = xor i32 %379, %388
  %390 = and i32 %189, 255
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %391
  %393 = load i1, i1* %out.8
  %394 = sext i32 256 to i64
  %395 = icmp slt i64 %391, %394
  %396 = bitcast i64* %shadow to i32*
  %safe.65 = or i1 %393, %395
  %select.ptr.66 = select i1 %safe.65, i32* %392, i32* %396
  %397 = load i32, i32* %select.ptr.66, align 4
  %398 = xor i32 %389, %397
  %399 = getelementptr inbounds i32, i32* %0, i64 9
  %400 = load i1, i1* %out.8
  %401 = icmp slt i64 9, %N
  %402 = bitcast i64* %shadow to i32*
  %safe.67 = or i1 %400, %401
  %select.ptr.68 = select i1 %safe.67, i32* %399, i32* %402
  %403 = load i32, i32* %select.ptr.68, align 4
  %404 = xor i32 %398, %403
  %405 = lshr i32 %275, 24
  %406 = zext i32 %405 to i64
  %407 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %406
  %408 = load i1, i1* %out.8
  %409 = sext i32 256 to i64
  %410 = icmp slt i64 %406, %409
  %411 = bitcast i64* %shadow to i32*
  %safe.69 = or i1 %408, %410
  %select.ptr.70 = select i1 %safe.69, i32* %407, i32* %411
  %412 = load i32, i32* %select.ptr.70, align 4
  %413 = lshr i32 %318, 16
  %414 = and i32 %413, 255
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %415
  %417 = load i1, i1* %out.8
  %418 = sext i32 256 to i64
  %419 = icmp slt i64 %415, %418
  %420 = bitcast i64* %shadow to i32*
  %safe.71 = or i1 %417, %419
  %select.ptr.72 = select i1 %safe.71, i32* %416, i32* %420
  %421 = load i32, i32* %select.ptr.72, align 4
  %422 = xor i32 %412, %421
  %423 = lshr i32 %189, 8
  %424 = and i32 %423, 255
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %425
  %427 = load i1, i1* %out.8
  %428 = sext i32 256 to i64
  %429 = icmp slt i64 %425, %428
  %430 = bitcast i64* %shadow to i32*
  %safe.73 = or i1 %427, %429
  %select.ptr.74 = select i1 %safe.73, i32* %426, i32* %430
  %431 = load i32, i32* %select.ptr.74, align 4
  %432 = xor i32 %422, %431
  %433 = and i32 %232, 255
  %434 = zext i32 %433 to i64
  %435 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %434
  %436 = load i1, i1* %out.8
  %437 = sext i32 256 to i64
  %438 = icmp slt i64 %434, %437
  %439 = bitcast i64* %shadow to i32*
  %safe.75 = or i1 %436, %438
  %select.ptr.76 = select i1 %safe.75, i32* %435, i32* %439
  %440 = load i32, i32* %select.ptr.76, align 4
  %441 = xor i32 %432, %440
  %442 = getelementptr inbounds i32, i32* %0, i64 10
  %443 = load i1, i1* %out.8
  %444 = icmp slt i64 10, %N
  %445 = bitcast i64* %shadow to i32*
  %safe.77 = or i1 %443, %444
  %select.ptr.78 = select i1 %safe.77, i32* %442, i32* %445
  %446 = load i32, i32* %select.ptr.78, align 4
  %447 = xor i32 %441, %446
  %448 = lshr i32 %318, 24
  %449 = zext i32 %448 to i64
  %450 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %449
  %451 = load i1, i1* %out.8
  %452 = sext i32 256 to i64
  %453 = icmp slt i64 %449, %452
  %454 = bitcast i64* %shadow to i32*
  %safe.79 = or i1 %451, %453
  %select.ptr.80 = select i1 %safe.79, i32* %450, i32* %454
  %455 = load i32, i32* %select.ptr.80, align 4
  %456 = lshr i32 %189, 16
  %457 = and i32 %456, 255
  %458 = zext i32 %457 to i64
  %459 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %458
  %460 = load i1, i1* %out.8
  %461 = sext i32 256 to i64
  %462 = icmp slt i64 %458, %461
  %463 = bitcast i64* %shadow to i32*
  %safe.81 = or i1 %460, %462
  %select.ptr.82 = select i1 %safe.81, i32* %459, i32* %463
  %464 = load i32, i32* %select.ptr.82, align 4
  %465 = xor i32 %455, %464
  %466 = lshr i32 %232, 8
  %467 = and i32 %466, 255
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %468
  %470 = load i1, i1* %out.8
  %471 = sext i32 256 to i64
  %472 = icmp slt i64 %468, %471
  %473 = bitcast i64* %shadow to i32*
  %safe.83 = or i1 %470, %472
  %select.ptr.84 = select i1 %safe.83, i32* %469, i32* %473
  %474 = load i32, i32* %select.ptr.84, align 4
  %475 = xor i32 %465, %474
  %476 = and i32 %275, 255
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %477
  %479 = load i1, i1* %out.8
  %480 = sext i32 256 to i64
  %481 = icmp slt i64 %477, %480
  %482 = bitcast i64* %shadow to i32*
  %safe.85 = or i1 %479, %481
  %select.ptr.86 = select i1 %safe.85, i32* %478, i32* %482
  %483 = load i32, i32* %select.ptr.86, align 4
  %484 = xor i32 %475, %483
  %485 = getelementptr inbounds i32, i32* %0, i64 11
  %486 = load i1, i1* %out.8
  %487 = icmp slt i64 11, %N
  %488 = bitcast i64* %shadow to i32*
  %safe.87 = or i1 %486, %487
  %select.ptr.88 = select i1 %safe.87, i32* %485, i32* %488
  %489 = load i32, i32* %select.ptr.88, align 4
  %490 = xor i32 %484, %489
  %491 = lshr i32 %361, 24
  %492 = zext i32 %491 to i64
  %493 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %492
  %494 = load i1, i1* %out.8
  %495 = sext i32 256 to i64
  %496 = icmp slt i64 %492, %495
  %497 = bitcast i64* %shadow to i32*
  %safe.89 = or i1 %494, %496
  %select.ptr.90 = select i1 %safe.89, i32* %493, i32* %497
  %498 = load i32, i32* %select.ptr.90, align 4
  %499 = lshr i32 %404, 16
  %500 = and i32 %499, 255
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %501
  %503 = load i1, i1* %out.8
  %504 = sext i32 256 to i64
  %505 = icmp slt i64 %501, %504
  %506 = bitcast i64* %shadow to i32*
  %safe.91 = or i1 %503, %505
  %select.ptr.92 = select i1 %safe.91, i32* %502, i32* %506
  %507 = load i32, i32* %select.ptr.92, align 4
  %508 = xor i32 %498, %507
  %509 = lshr i32 %447, 8
  %510 = and i32 %509, 255
  %511 = zext i32 %510 to i64
  %512 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %511
  %513 = load i1, i1* %out.8
  %514 = sext i32 256 to i64
  %515 = icmp slt i64 %511, %514
  %516 = bitcast i64* %shadow to i32*
  %safe.93 = or i1 %513, %515
  %select.ptr.94 = select i1 %safe.93, i32* %512, i32* %516
  %517 = load i32, i32* %select.ptr.94, align 4
  %518 = xor i32 %508, %517
  %519 = and i32 %490, 255
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %520
  %522 = load i1, i1* %out.8
  %523 = sext i32 256 to i64
  %524 = icmp slt i64 %520, %523
  %525 = bitcast i64* %shadow to i32*
  %safe.95 = or i1 %522, %524
  %select.ptr.96 = select i1 %safe.95, i32* %521, i32* %525
  %526 = load i32, i32* %select.ptr.96, align 4
  %527 = xor i32 %518, %526
  %528 = getelementptr inbounds i32, i32* %0, i64 12
  %529 = load i1, i1* %out.8
  %530 = icmp slt i64 12, %N
  %531 = bitcast i64* %shadow to i32*
  %safe.97 = or i1 %529, %530
  %select.ptr.98 = select i1 %safe.97, i32* %528, i32* %531
  %532 = load i32, i32* %select.ptr.98, align 4
  %533 = xor i32 %527, %532
  %534 = lshr i32 %404, 24
  %535 = zext i32 %534 to i64
  %536 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %535
  %537 = load i1, i1* %out.8
  %538 = sext i32 256 to i64
  %539 = icmp slt i64 %535, %538
  %540 = bitcast i64* %shadow to i32*
  %safe.99 = or i1 %537, %539
  %select.ptr.100 = select i1 %safe.99, i32* %536, i32* %540
  %541 = load i32, i32* %select.ptr.100, align 4
  %542 = lshr i32 %447, 16
  %543 = and i32 %542, 255
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %544
  %546 = load i1, i1* %out.8
  %547 = sext i32 256 to i64
  %548 = icmp slt i64 %544, %547
  %549 = bitcast i64* %shadow to i32*
  %safe.101 = or i1 %546, %548
  %select.ptr.102 = select i1 %safe.101, i32* %545, i32* %549
  %550 = load i32, i32* %select.ptr.102, align 4
  %551 = xor i32 %541, %550
  %552 = lshr i32 %490, 8
  %553 = and i32 %552, 255
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %554
  %556 = load i1, i1* %out.8
  %557 = sext i32 256 to i64
  %558 = icmp slt i64 %554, %557
  %559 = bitcast i64* %shadow to i32*
  %safe.103 = or i1 %556, %558
  %select.ptr.104 = select i1 %safe.103, i32* %555, i32* %559
  %560 = load i32, i32* %select.ptr.104, align 4
  %561 = xor i32 %551, %560
  %562 = and i32 %361, 255
  %563 = zext i32 %562 to i64
  %564 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %563
  %565 = load i1, i1* %out.8
  %566 = sext i32 256 to i64
  %567 = icmp slt i64 %563, %566
  %568 = bitcast i64* %shadow to i32*
  %safe.105 = or i1 %565, %567
  %select.ptr.106 = select i1 %safe.105, i32* %564, i32* %568
  %569 = load i32, i32* %select.ptr.106, align 4
  %570 = xor i32 %561, %569
  %571 = getelementptr inbounds i32, i32* %0, i64 13
  %572 = load i1, i1* %out.8
  %573 = icmp slt i64 13, %N
  %574 = bitcast i64* %shadow to i32*
  %safe.107 = or i1 %572, %573
  %select.ptr.108 = select i1 %safe.107, i32* %571, i32* %574
  %575 = load i32, i32* %select.ptr.108, align 4
  %576 = xor i32 %570, %575
  %577 = lshr i32 %447, 24
  %578 = zext i32 %577 to i64
  %579 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %578
  %580 = load i1, i1* %out.8
  %581 = sext i32 256 to i64
  %582 = icmp slt i64 %578, %581
  %583 = bitcast i64* %shadow to i32*
  %safe.109 = or i1 %580, %582
  %select.ptr.110 = select i1 %safe.109, i32* %579, i32* %583
  %584 = load i32, i32* %select.ptr.110, align 4
  %585 = lshr i32 %490, 16
  %586 = and i32 %585, 255
  %587 = zext i32 %586 to i64
  %588 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %587
  %589 = load i1, i1* %out.8
  %590 = sext i32 256 to i64
  %591 = icmp slt i64 %587, %590
  %592 = bitcast i64* %shadow to i32*
  %safe.111 = or i1 %589, %591
  %select.ptr.112 = select i1 %safe.111, i32* %588, i32* %592
  %593 = load i32, i32* %select.ptr.112, align 4
  %594 = xor i32 %584, %593
  %595 = lshr i32 %361, 8
  %596 = and i32 %595, 255
  %597 = zext i32 %596 to i64
  %598 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %597
  %599 = load i1, i1* %out.8
  %600 = sext i32 256 to i64
  %601 = icmp slt i64 %597, %600
  %602 = bitcast i64* %shadow to i32*
  %safe.113 = or i1 %599, %601
  %select.ptr.114 = select i1 %safe.113, i32* %598, i32* %602
  %603 = load i32, i32* %select.ptr.114, align 4
  %604 = xor i32 %594, %603
  %605 = and i32 %404, 255
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %606
  %608 = load i1, i1* %out.8
  %609 = sext i32 256 to i64
  %610 = icmp slt i64 %606, %609
  %611 = bitcast i64* %shadow to i32*
  %safe.115 = or i1 %608, %610
  %select.ptr.116 = select i1 %safe.115, i32* %607, i32* %611
  %612 = load i32, i32* %select.ptr.116, align 4
  %613 = xor i32 %604, %612
  %614 = getelementptr inbounds i32, i32* %0, i64 14
  %615 = load i1, i1* %out.8
  %616 = icmp slt i64 14, %N
  %617 = bitcast i64* %shadow to i32*
  %safe.117 = or i1 %615, %616
  %select.ptr.118 = select i1 %safe.117, i32* %614, i32* %617
  %618 = load i32, i32* %select.ptr.118, align 4
  %619 = xor i32 %613, %618
  %620 = lshr i32 %490, 24
  %621 = zext i32 %620 to i64
  %622 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %621
  %623 = load i1, i1* %out.8
  %624 = sext i32 256 to i64
  %625 = icmp slt i64 %621, %624
  %626 = bitcast i64* %shadow to i32*
  %safe.119 = or i1 %623, %625
  %select.ptr.120 = select i1 %safe.119, i32* %622, i32* %626
  %627 = load i32, i32* %select.ptr.120, align 4
  %628 = lshr i32 %361, 16
  %629 = and i32 %628, 255
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %630
  %632 = load i1, i1* %out.8
  %633 = sext i32 256 to i64
  %634 = icmp slt i64 %630, %633
  %635 = bitcast i64* %shadow to i32*
  %safe.121 = or i1 %632, %634
  %select.ptr.122 = select i1 %safe.121, i32* %631, i32* %635
  %636 = load i32, i32* %select.ptr.122, align 4
  %637 = xor i32 %627, %636
  %638 = lshr i32 %404, 8
  %639 = and i32 %638, 255
  %640 = zext i32 %639 to i64
  %641 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %640
  %642 = load i1, i1* %out.8
  %643 = sext i32 256 to i64
  %644 = icmp slt i64 %640, %643
  %645 = bitcast i64* %shadow to i32*
  %safe.123 = or i1 %642, %644
  %select.ptr.124 = select i1 %safe.123, i32* %641, i32* %645
  %646 = load i32, i32* %select.ptr.124, align 4
  %647 = xor i32 %637, %646
  %648 = and i32 %447, 255
  %649 = zext i32 %648 to i64
  %650 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %649
  %651 = load i1, i1* %out.8
  %652 = sext i32 256 to i64
  %653 = icmp slt i64 %649, %652
  %654 = bitcast i64* %shadow to i32*
  %safe.125 = or i1 %651, %653
  %select.ptr.126 = select i1 %safe.125, i32* %650, i32* %654
  %655 = load i32, i32* %select.ptr.126, align 4
  %656 = xor i32 %647, %655
  %657 = getelementptr inbounds i32, i32* %0, i64 15
  %658 = load i1, i1* %out.8
  %659 = icmp slt i64 15, %N
  %660 = bitcast i64* %shadow to i32*
  %safe.127 = or i1 %658, %659
  %select.ptr.128 = select i1 %safe.127, i32* %657, i32* %660
  %661 = load i32, i32* %select.ptr.128, align 4
  %662 = xor i32 %656, %661
  %663 = lshr i32 %533, 24
  %664 = zext i32 %663 to i64
  %665 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %664
  %666 = load i1, i1* %out.8
  %667 = sext i32 256 to i64
  %668 = icmp slt i64 %664, %667
  %669 = bitcast i64* %shadow to i32*
  %safe.129 = or i1 %666, %668
  %select.ptr.130 = select i1 %safe.129, i32* %665, i32* %669
  %670 = load i32, i32* %select.ptr.130, align 4
  %671 = lshr i32 %576, 16
  %672 = and i32 %671, 255
  %673 = zext i32 %672 to i64
  %674 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %673
  %675 = load i1, i1* %out.8
  %676 = sext i32 256 to i64
  %677 = icmp slt i64 %673, %676
  %678 = bitcast i64* %shadow to i32*
  %safe.131 = or i1 %675, %677
  %select.ptr.132 = select i1 %safe.131, i32* %674, i32* %678
  %679 = load i32, i32* %select.ptr.132, align 4
  %680 = xor i32 %670, %679
  %681 = lshr i32 %619, 8
  %682 = and i32 %681, 255
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %683
  %685 = load i1, i1* %out.8
  %686 = sext i32 256 to i64
  %687 = icmp slt i64 %683, %686
  %688 = bitcast i64* %shadow to i32*
  %safe.133 = or i1 %685, %687
  %select.ptr.134 = select i1 %safe.133, i32* %684, i32* %688
  %689 = load i32, i32* %select.ptr.134, align 4
  %690 = xor i32 %680, %689
  %691 = and i32 %662, 255
  %692 = zext i32 %691 to i64
  %693 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %692
  %694 = load i1, i1* %out.8
  %695 = sext i32 256 to i64
  %696 = icmp slt i64 %692, %695
  %697 = bitcast i64* %shadow to i32*
  %safe.135 = or i1 %694, %696
  %select.ptr.136 = select i1 %safe.135, i32* %693, i32* %697
  %698 = load i32, i32* %select.ptr.136, align 4
  %699 = xor i32 %690, %698
  %700 = getelementptr inbounds i32, i32* %0, i64 16
  %701 = load i1, i1* %out.8
  %702 = icmp slt i64 16, %N
  %703 = bitcast i64* %shadow to i32*
  %safe.137 = or i1 %701, %702
  %select.ptr.138 = select i1 %safe.137, i32* %700, i32* %703
  %704 = load i32, i32* %select.ptr.138, align 4
  %705 = xor i32 %699, %704
  %706 = lshr i32 %576, 24
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %707
  %709 = load i1, i1* %out.8
  %710 = sext i32 256 to i64
  %711 = icmp slt i64 %707, %710
  %712 = bitcast i64* %shadow to i32*
  %safe.139 = or i1 %709, %711
  %select.ptr.140 = select i1 %safe.139, i32* %708, i32* %712
  %713 = load i32, i32* %select.ptr.140, align 4
  %714 = lshr i32 %619, 16
  %715 = and i32 %714, 255
  %716 = zext i32 %715 to i64
  %717 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %716
  %718 = load i1, i1* %out.8
  %719 = sext i32 256 to i64
  %720 = icmp slt i64 %716, %719
  %721 = bitcast i64* %shadow to i32*
  %safe.141 = or i1 %718, %720
  %select.ptr.142 = select i1 %safe.141, i32* %717, i32* %721
  %722 = load i32, i32* %select.ptr.142, align 4
  %723 = xor i32 %713, %722
  %724 = lshr i32 %662, 8
  %725 = and i32 %724, 255
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %726
  %728 = load i1, i1* %out.8
  %729 = sext i32 256 to i64
  %730 = icmp slt i64 %726, %729
  %731 = bitcast i64* %shadow to i32*
  %safe.143 = or i1 %728, %730
  %select.ptr.144 = select i1 %safe.143, i32* %727, i32* %731
  %732 = load i32, i32* %select.ptr.144, align 4
  %733 = xor i32 %723, %732
  %734 = and i32 %533, 255
  %735 = zext i32 %734 to i64
  %736 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %735
  %737 = load i1, i1* %out.8
  %738 = sext i32 256 to i64
  %739 = icmp slt i64 %735, %738
  %740 = bitcast i64* %shadow to i32*
  %safe.145 = or i1 %737, %739
  %select.ptr.146 = select i1 %safe.145, i32* %736, i32* %740
  %741 = load i32, i32* %select.ptr.146, align 4
  %742 = xor i32 %733, %741
  %743 = getelementptr inbounds i32, i32* %0, i64 17
  %744 = load i1, i1* %out.8
  %745 = icmp slt i64 17, %N
  %746 = bitcast i64* %shadow to i32*
  %safe.147 = or i1 %744, %745
  %select.ptr.148 = select i1 %safe.147, i32* %743, i32* %746
  %747 = load i32, i32* %select.ptr.148, align 4
  %748 = xor i32 %742, %747
  %749 = lshr i32 %619, 24
  %750 = zext i32 %749 to i64
  %751 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %750
  %752 = load i1, i1* %out.8
  %753 = sext i32 256 to i64
  %754 = icmp slt i64 %750, %753
  %755 = bitcast i64* %shadow to i32*
  %safe.149 = or i1 %752, %754
  %select.ptr.150 = select i1 %safe.149, i32* %751, i32* %755
  %756 = load i32, i32* %select.ptr.150, align 4
  %757 = lshr i32 %662, 16
  %758 = and i32 %757, 255
  %759 = zext i32 %758 to i64
  %760 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %759
  %761 = load i1, i1* %out.8
  %762 = sext i32 256 to i64
  %763 = icmp slt i64 %759, %762
  %764 = bitcast i64* %shadow to i32*
  %safe.151 = or i1 %761, %763
  %select.ptr.152 = select i1 %safe.151, i32* %760, i32* %764
  %765 = load i32, i32* %select.ptr.152, align 4
  %766 = xor i32 %756, %765
  %767 = lshr i32 %533, 8
  %768 = and i32 %767, 255
  %769 = zext i32 %768 to i64
  %770 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %769
  %771 = load i1, i1* %out.8
  %772 = sext i32 256 to i64
  %773 = icmp slt i64 %769, %772
  %774 = bitcast i64* %shadow to i32*
  %safe.153 = or i1 %771, %773
  %select.ptr.154 = select i1 %safe.153, i32* %770, i32* %774
  %775 = load i32, i32* %select.ptr.154, align 4
  %776 = xor i32 %766, %775
  %777 = and i32 %576, 255
  %778 = zext i32 %777 to i64
  %779 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %778
  %780 = load i1, i1* %out.8
  %781 = sext i32 256 to i64
  %782 = icmp slt i64 %778, %781
  %783 = bitcast i64* %shadow to i32*
  %safe.155 = or i1 %780, %782
  %select.ptr.156 = select i1 %safe.155, i32* %779, i32* %783
  %784 = load i32, i32* %select.ptr.156, align 4
  %785 = xor i32 %776, %784
  %786 = getelementptr inbounds i32, i32* %0, i64 18
  %787 = load i1, i1* %out.8
  %788 = icmp slt i64 18, %N
  %789 = bitcast i64* %shadow to i32*
  %safe.157 = or i1 %787, %788
  %select.ptr.158 = select i1 %safe.157, i32* %786, i32* %789
  %790 = load i32, i32* %select.ptr.158, align 4
  %791 = xor i32 %785, %790
  %792 = lshr i32 %662, 24
  %793 = zext i32 %792 to i64
  %794 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %793
  %795 = load i1, i1* %out.8
  %796 = sext i32 256 to i64
  %797 = icmp slt i64 %793, %796
  %798 = bitcast i64* %shadow to i32*
  %safe.159 = or i1 %795, %797
  %select.ptr.160 = select i1 %safe.159, i32* %794, i32* %798
  %799 = load i32, i32* %select.ptr.160, align 4
  %800 = lshr i32 %533, 16
  %801 = and i32 %800, 255
  %802 = zext i32 %801 to i64
  %803 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %802
  %804 = load i1, i1* %out.8
  %805 = sext i32 256 to i64
  %806 = icmp slt i64 %802, %805
  %807 = bitcast i64* %shadow to i32*
  %safe.161 = or i1 %804, %806
  %select.ptr.162 = select i1 %safe.161, i32* %803, i32* %807
  %808 = load i32, i32* %select.ptr.162, align 4
  %809 = xor i32 %799, %808
  %810 = lshr i32 %576, 8
  %811 = and i32 %810, 255
  %812 = zext i32 %811 to i64
  %813 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %812
  %814 = load i1, i1* %out.8
  %815 = sext i32 256 to i64
  %816 = icmp slt i64 %812, %815
  %817 = bitcast i64* %shadow to i32*
  %safe.163 = or i1 %814, %816
  %select.ptr.164 = select i1 %safe.163, i32* %813, i32* %817
  %818 = load i32, i32* %select.ptr.164, align 4
  %819 = xor i32 %809, %818
  %820 = and i32 %619, 255
  %821 = zext i32 %820 to i64
  %822 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %821
  %823 = load i1, i1* %out.8
  %824 = sext i32 256 to i64
  %825 = icmp slt i64 %821, %824
  %826 = bitcast i64* %shadow to i32*
  %safe.165 = or i1 %823, %825
  %select.ptr.166 = select i1 %safe.165, i32* %822, i32* %826
  %827 = load i32, i32* %select.ptr.166, align 4
  %828 = xor i32 %819, %827
  %829 = getelementptr inbounds i32, i32* %0, i64 19
  %830 = load i1, i1* %out.8
  %831 = icmp slt i64 19, %N
  %832 = bitcast i64* %shadow to i32*
  %safe.167 = or i1 %830, %831
  %select.ptr.168 = select i1 %safe.167, i32* %829, i32* %832
  %833 = load i32, i32* %select.ptr.168, align 4
  %834 = xor i32 %828, %833
  %835 = lshr i32 %705, 24
  %836 = zext i32 %835 to i64
  %837 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %836
  %838 = load i1, i1* %out.8
  %839 = sext i32 256 to i64
  %840 = icmp slt i64 %836, %839
  %841 = bitcast i64* %shadow to i32*
  %safe.169 = or i1 %838, %840
  %select.ptr.170 = select i1 %safe.169, i32* %837, i32* %841
  %842 = load i32, i32* %select.ptr.170, align 4
  %843 = lshr i32 %748, 16
  %844 = and i32 %843, 255
  %845 = zext i32 %844 to i64
  %846 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %845
  %847 = load i1, i1* %out.8
  %848 = sext i32 256 to i64
  %849 = icmp slt i64 %845, %848
  %850 = bitcast i64* %shadow to i32*
  %safe.171 = or i1 %847, %849
  %select.ptr.172 = select i1 %safe.171, i32* %846, i32* %850
  %851 = load i32, i32* %select.ptr.172, align 4
  %852 = xor i32 %842, %851
  %853 = lshr i32 %791, 8
  %854 = and i32 %853, 255
  %855 = zext i32 %854 to i64
  %856 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %855
  %857 = load i1, i1* %out.8
  %858 = sext i32 256 to i64
  %859 = icmp slt i64 %855, %858
  %860 = bitcast i64* %shadow to i32*
  %safe.173 = or i1 %857, %859
  %select.ptr.174 = select i1 %safe.173, i32* %856, i32* %860
  %861 = load i32, i32* %select.ptr.174, align 4
  %862 = xor i32 %852, %861
  %863 = and i32 %834, 255
  %864 = zext i32 %863 to i64
  %865 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %864
  %866 = load i1, i1* %out.8
  %867 = sext i32 256 to i64
  %868 = icmp slt i64 %864, %867
  %869 = bitcast i64* %shadow to i32*
  %safe.175 = or i1 %866, %868
  %select.ptr.176 = select i1 %safe.175, i32* %865, i32* %869
  %870 = load i32, i32* %select.ptr.176, align 4
  %871 = xor i32 %862, %870
  %872 = getelementptr inbounds i32, i32* %0, i64 20
  %873 = load i1, i1* %out.8
  %874 = icmp slt i64 20, %N
  %875 = bitcast i64* %shadow to i32*
  %safe.177 = or i1 %873, %874
  %select.ptr.178 = select i1 %safe.177, i32* %872, i32* %875
  %876 = load i32, i32* %select.ptr.178, align 4
  %877 = xor i32 %871, %876
  %878 = lshr i32 %748, 24
  %879 = zext i32 %878 to i64
  %880 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %879
  %881 = load i1, i1* %out.8
  %882 = sext i32 256 to i64
  %883 = icmp slt i64 %879, %882
  %884 = bitcast i64* %shadow to i32*
  %safe.179 = or i1 %881, %883
  %select.ptr.180 = select i1 %safe.179, i32* %880, i32* %884
  %885 = load i32, i32* %select.ptr.180, align 4
  %886 = lshr i32 %791, 16
  %887 = and i32 %886, 255
  %888 = zext i32 %887 to i64
  %889 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %888
  %890 = load i1, i1* %out.8
  %891 = sext i32 256 to i64
  %892 = icmp slt i64 %888, %891
  %893 = bitcast i64* %shadow to i32*
  %safe.181 = or i1 %890, %892
  %select.ptr.182 = select i1 %safe.181, i32* %889, i32* %893
  %894 = load i32, i32* %select.ptr.182, align 4
  %895 = xor i32 %885, %894
  %896 = lshr i32 %834, 8
  %897 = and i32 %896, 255
  %898 = zext i32 %897 to i64
  %899 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %898
  %900 = load i1, i1* %out.8
  %901 = sext i32 256 to i64
  %902 = icmp slt i64 %898, %901
  %903 = bitcast i64* %shadow to i32*
  %safe.183 = or i1 %900, %902
  %select.ptr.184 = select i1 %safe.183, i32* %899, i32* %903
  %904 = load i32, i32* %select.ptr.184, align 4
  %905 = xor i32 %895, %904
  %906 = and i32 %705, 255
  %907 = zext i32 %906 to i64
  %908 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %907
  %909 = load i1, i1* %out.8
  %910 = sext i32 256 to i64
  %911 = icmp slt i64 %907, %910
  %912 = bitcast i64* %shadow to i32*
  %safe.185 = or i1 %909, %911
  %select.ptr.186 = select i1 %safe.185, i32* %908, i32* %912
  %913 = load i32, i32* %select.ptr.186, align 4
  %914 = xor i32 %905, %913
  %915 = getelementptr inbounds i32, i32* %0, i64 21
  %916 = load i1, i1* %out.8
  %917 = icmp slt i64 21, %N
  %918 = bitcast i64* %shadow to i32*
  %safe.187 = or i1 %916, %917
  %select.ptr.188 = select i1 %safe.187, i32* %915, i32* %918
  %919 = load i32, i32* %select.ptr.188, align 4
  %920 = xor i32 %914, %919
  %921 = lshr i32 %791, 24
  %922 = zext i32 %921 to i64
  %923 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %922
  %924 = load i1, i1* %out.8
  %925 = sext i32 256 to i64
  %926 = icmp slt i64 %922, %925
  %927 = bitcast i64* %shadow to i32*
  %safe.189 = or i1 %924, %926
  %select.ptr.190 = select i1 %safe.189, i32* %923, i32* %927
  %928 = load i32, i32* %select.ptr.190, align 4
  %929 = lshr i32 %834, 16
  %930 = and i32 %929, 255
  %931 = zext i32 %930 to i64
  %932 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %931
  %933 = load i1, i1* %out.8
  %934 = sext i32 256 to i64
  %935 = icmp slt i64 %931, %934
  %936 = bitcast i64* %shadow to i32*
  %safe.191 = or i1 %933, %935
  %select.ptr.192 = select i1 %safe.191, i32* %932, i32* %936
  %937 = load i32, i32* %select.ptr.192, align 4
  %938 = xor i32 %928, %937
  %939 = lshr i32 %705, 8
  %940 = and i32 %939, 255
  %941 = zext i32 %940 to i64
  %942 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %941
  %943 = load i1, i1* %out.8
  %944 = sext i32 256 to i64
  %945 = icmp slt i64 %941, %944
  %946 = bitcast i64* %shadow to i32*
  %safe.193 = or i1 %943, %945
  %select.ptr.194 = select i1 %safe.193, i32* %942, i32* %946
  %947 = load i32, i32* %select.ptr.194, align 4
  %948 = xor i32 %938, %947
  %949 = and i32 %748, 255
  %950 = zext i32 %949 to i64
  %951 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %950
  %952 = load i1, i1* %out.8
  %953 = sext i32 256 to i64
  %954 = icmp slt i64 %950, %953
  %955 = bitcast i64* %shadow to i32*
  %safe.195 = or i1 %952, %954
  %select.ptr.196 = select i1 %safe.195, i32* %951, i32* %955
  %956 = load i32, i32* %select.ptr.196, align 4
  %957 = xor i32 %948, %956
  %958 = getelementptr inbounds i32, i32* %0, i64 22
  %959 = load i1, i1* %out.8
  %960 = icmp slt i64 22, %N
  %961 = bitcast i64* %shadow to i32*
  %safe.197 = or i1 %959, %960
  %select.ptr.198 = select i1 %safe.197, i32* %958, i32* %961
  %962 = load i32, i32* %select.ptr.198, align 4
  %963 = xor i32 %957, %962
  %964 = lshr i32 %834, 24
  %965 = zext i32 %964 to i64
  %966 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %965
  %967 = load i1, i1* %out.8
  %968 = sext i32 256 to i64
  %969 = icmp slt i64 %965, %968
  %970 = bitcast i64* %shadow to i32*
  %safe.199 = or i1 %967, %969
  %select.ptr.200 = select i1 %safe.199, i32* %966, i32* %970
  %971 = load i32, i32* %select.ptr.200, align 4
  %972 = lshr i32 %705, 16
  %973 = and i32 %972, 255
  %974 = zext i32 %973 to i64
  %975 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %974
  %976 = load i1, i1* %out.8
  %977 = sext i32 256 to i64
  %978 = icmp slt i64 %974, %977
  %979 = bitcast i64* %shadow to i32*
  %safe.201 = or i1 %976, %978
  %select.ptr.202 = select i1 %safe.201, i32* %975, i32* %979
  %980 = load i32, i32* %select.ptr.202, align 4
  %981 = xor i32 %971, %980
  %982 = lshr i32 %748, 8
  %983 = and i32 %982, 255
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %984
  %986 = load i1, i1* %out.8
  %987 = sext i32 256 to i64
  %988 = icmp slt i64 %984, %987
  %989 = bitcast i64* %shadow to i32*
  %safe.203 = or i1 %986, %988
  %select.ptr.204 = select i1 %safe.203, i32* %985, i32* %989
  %990 = load i32, i32* %select.ptr.204, align 4
  %991 = xor i32 %981, %990
  %992 = and i32 %791, 255
  %993 = zext i32 %992 to i64
  %994 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %993
  %995 = load i1, i1* %out.8
  %996 = sext i32 256 to i64
  %997 = icmp slt i64 %993, %996
  %998 = bitcast i64* %shadow to i32*
  %safe.205 = or i1 %995, %997
  %select.ptr.206 = select i1 %safe.205, i32* %994, i32* %998
  %999 = load i32, i32* %select.ptr.206, align 4
  %1000 = xor i32 %991, %999
  %1001 = getelementptr inbounds i32, i32* %0, i64 23
  %1002 = load i1, i1* %out.8
  %1003 = icmp slt i64 23, %N
  %1004 = bitcast i64* %shadow to i32*
  %safe.207 = or i1 %1002, %1003
  %select.ptr.208 = select i1 %safe.207, i32* %1001, i32* %1004
  %1005 = load i32, i32* %select.ptr.208, align 4
  %1006 = xor i32 %1000, %1005
  %1007 = lshr i32 %877, 24
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1008
  %1010 = load i1, i1* %out.8
  %1011 = sext i32 256 to i64
  %1012 = icmp slt i64 %1008, %1011
  %1013 = bitcast i64* %shadow to i32*
  %safe.209 = or i1 %1010, %1012
  %select.ptr.210 = select i1 %safe.209, i32* %1009, i32* %1013
  %1014 = load i32, i32* %select.ptr.210, align 4
  %1015 = lshr i32 %920, 16
  %1016 = and i32 %1015, 255
  %1017 = zext i32 %1016 to i64
  %1018 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1017
  %1019 = load i1, i1* %out.8
  %1020 = sext i32 256 to i64
  %1021 = icmp slt i64 %1017, %1020
  %1022 = bitcast i64* %shadow to i32*
  %safe.211 = or i1 %1019, %1021
  %select.ptr.212 = select i1 %safe.211, i32* %1018, i32* %1022
  %1023 = load i32, i32* %select.ptr.212, align 4
  %1024 = xor i32 %1014, %1023
  %1025 = lshr i32 %963, 8
  %1026 = and i32 %1025, 255
  %1027 = zext i32 %1026 to i64
  %1028 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1027
  %1029 = load i1, i1* %out.8
  %1030 = sext i32 256 to i64
  %1031 = icmp slt i64 %1027, %1030
  %1032 = bitcast i64* %shadow to i32*
  %safe.213 = or i1 %1029, %1031
  %select.ptr.214 = select i1 %safe.213, i32* %1028, i32* %1032
  %1033 = load i32, i32* %select.ptr.214, align 4
  %1034 = xor i32 %1024, %1033
  %1035 = and i32 %1006, 255
  %1036 = zext i32 %1035 to i64
  %1037 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1036
  %1038 = load i1, i1* %out.8
  %1039 = sext i32 256 to i64
  %1040 = icmp slt i64 %1036, %1039
  %1041 = bitcast i64* %shadow to i32*
  %safe.215 = or i1 %1038, %1040
  %select.ptr.216 = select i1 %safe.215, i32* %1037, i32* %1041
  %1042 = load i32, i32* %select.ptr.216, align 4
  %1043 = xor i32 %1034, %1042
  %1044 = getelementptr inbounds i32, i32* %0, i64 24
  %1045 = load i1, i1* %out.8
  %1046 = icmp slt i64 24, %N
  %1047 = bitcast i64* %shadow to i32*
  %safe.217 = or i1 %1045, %1046
  %select.ptr.218 = select i1 %safe.217, i32* %1044, i32* %1047
  %1048 = load i32, i32* %select.ptr.218, align 4
  %1049 = xor i32 %1043, %1048
  %1050 = lshr i32 %920, 24
  %1051 = zext i32 %1050 to i64
  %1052 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1051
  %1053 = load i1, i1* %out.8
  %1054 = sext i32 256 to i64
  %1055 = icmp slt i64 %1051, %1054
  %1056 = bitcast i64* %shadow to i32*
  %safe.219 = or i1 %1053, %1055
  %select.ptr.220 = select i1 %safe.219, i32* %1052, i32* %1056
  %1057 = load i32, i32* %select.ptr.220, align 4
  %1058 = lshr i32 %963, 16
  %1059 = and i32 %1058, 255
  %1060 = zext i32 %1059 to i64
  %1061 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1060
  %1062 = load i1, i1* %out.8
  %1063 = sext i32 256 to i64
  %1064 = icmp slt i64 %1060, %1063
  %1065 = bitcast i64* %shadow to i32*
  %safe.221 = or i1 %1062, %1064
  %select.ptr.222 = select i1 %safe.221, i32* %1061, i32* %1065
  %1066 = load i32, i32* %select.ptr.222, align 4
  %1067 = xor i32 %1057, %1066
  %1068 = lshr i32 %1006, 8
  %1069 = and i32 %1068, 255
  %1070 = zext i32 %1069 to i64
  %1071 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1070
  %1072 = load i1, i1* %out.8
  %1073 = sext i32 256 to i64
  %1074 = icmp slt i64 %1070, %1073
  %1075 = bitcast i64* %shadow to i32*
  %safe.223 = or i1 %1072, %1074
  %select.ptr.224 = select i1 %safe.223, i32* %1071, i32* %1075
  %1076 = load i32, i32* %select.ptr.224, align 4
  %1077 = xor i32 %1067, %1076
  %1078 = and i32 %877, 255
  %1079 = zext i32 %1078 to i64
  %1080 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1079
  %1081 = load i1, i1* %out.8
  %1082 = sext i32 256 to i64
  %1083 = icmp slt i64 %1079, %1082
  %1084 = bitcast i64* %shadow to i32*
  %safe.225 = or i1 %1081, %1083
  %select.ptr.226 = select i1 %safe.225, i32* %1080, i32* %1084
  %1085 = load i32, i32* %select.ptr.226, align 4
  %1086 = xor i32 %1077, %1085
  %1087 = getelementptr inbounds i32, i32* %0, i64 25
  %1088 = load i1, i1* %out.8
  %1089 = icmp slt i64 25, %N
  %1090 = bitcast i64* %shadow to i32*
  %safe.227 = or i1 %1088, %1089
  %select.ptr.228 = select i1 %safe.227, i32* %1087, i32* %1090
  %1091 = load i32, i32* %select.ptr.228, align 4
  %1092 = xor i32 %1086, %1091
  %1093 = lshr i32 %963, 24
  %1094 = zext i32 %1093 to i64
  %1095 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1094
  %1096 = load i1, i1* %out.8
  %1097 = sext i32 256 to i64
  %1098 = icmp slt i64 %1094, %1097
  %1099 = bitcast i64* %shadow to i32*
  %safe.229 = or i1 %1096, %1098
  %select.ptr.230 = select i1 %safe.229, i32* %1095, i32* %1099
  %1100 = load i32, i32* %select.ptr.230, align 4
  %1101 = lshr i32 %1006, 16
  %1102 = and i32 %1101, 255
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1103
  %1105 = load i1, i1* %out.8
  %1106 = sext i32 256 to i64
  %1107 = icmp slt i64 %1103, %1106
  %1108 = bitcast i64* %shadow to i32*
  %safe.231 = or i1 %1105, %1107
  %select.ptr.232 = select i1 %safe.231, i32* %1104, i32* %1108
  %1109 = load i32, i32* %select.ptr.232, align 4
  %1110 = xor i32 %1100, %1109
  %1111 = lshr i32 %877, 8
  %1112 = and i32 %1111, 255
  %1113 = zext i32 %1112 to i64
  %1114 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1113
  %1115 = load i1, i1* %out.8
  %1116 = sext i32 256 to i64
  %1117 = icmp slt i64 %1113, %1116
  %1118 = bitcast i64* %shadow to i32*
  %safe.233 = or i1 %1115, %1117
  %select.ptr.234 = select i1 %safe.233, i32* %1114, i32* %1118
  %1119 = load i32, i32* %select.ptr.234, align 4
  %1120 = xor i32 %1110, %1119
  %1121 = and i32 %920, 255
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1122
  %1124 = load i1, i1* %out.8
  %1125 = sext i32 256 to i64
  %1126 = icmp slt i64 %1122, %1125
  %1127 = bitcast i64* %shadow to i32*
  %safe.235 = or i1 %1124, %1126
  %select.ptr.236 = select i1 %safe.235, i32* %1123, i32* %1127
  %1128 = load i32, i32* %select.ptr.236, align 4
  %1129 = xor i32 %1120, %1128
  %1130 = getelementptr inbounds i32, i32* %0, i64 26
  %1131 = load i1, i1* %out.8
  %1132 = icmp slt i64 26, %N
  %1133 = bitcast i64* %shadow to i32*
  %safe.237 = or i1 %1131, %1132
  %select.ptr.238 = select i1 %safe.237, i32* %1130, i32* %1133
  %1134 = load i32, i32* %select.ptr.238, align 4
  %1135 = xor i32 %1129, %1134
  %1136 = lshr i32 %1006, 24
  %1137 = zext i32 %1136 to i64
  %1138 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1137
  %1139 = load i1, i1* %out.8
  %1140 = sext i32 256 to i64
  %1141 = icmp slt i64 %1137, %1140
  %1142 = bitcast i64* %shadow to i32*
  %safe.239 = or i1 %1139, %1141
  %select.ptr.240 = select i1 %safe.239, i32* %1138, i32* %1142
  %1143 = load i32, i32* %select.ptr.240, align 4
  %1144 = lshr i32 %877, 16
  %1145 = and i32 %1144, 255
  %1146 = zext i32 %1145 to i64
  %1147 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1146
  %1148 = load i1, i1* %out.8
  %1149 = sext i32 256 to i64
  %1150 = icmp slt i64 %1146, %1149
  %1151 = bitcast i64* %shadow to i32*
  %safe.241 = or i1 %1148, %1150
  %select.ptr.242 = select i1 %safe.241, i32* %1147, i32* %1151
  %1152 = load i32, i32* %select.ptr.242, align 4
  %1153 = xor i32 %1143, %1152
  %1154 = lshr i32 %920, 8
  %1155 = and i32 %1154, 255
  %1156 = zext i32 %1155 to i64
  %1157 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1156
  %1158 = load i1, i1* %out.8
  %1159 = sext i32 256 to i64
  %1160 = icmp slt i64 %1156, %1159
  %1161 = bitcast i64* %shadow to i32*
  %safe.243 = or i1 %1158, %1160
  %select.ptr.244 = select i1 %safe.243, i32* %1157, i32* %1161
  %1162 = load i32, i32* %select.ptr.244, align 4
  %1163 = xor i32 %1153, %1162
  %1164 = and i32 %963, 255
  %1165 = zext i32 %1164 to i64
  %1166 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1165
  %1167 = load i1, i1* %out.8
  %1168 = sext i32 256 to i64
  %1169 = icmp slt i64 %1165, %1168
  %1170 = bitcast i64* %shadow to i32*
  %safe.245 = or i1 %1167, %1169
  %select.ptr.246 = select i1 %safe.245, i32* %1166, i32* %1170
  %1171 = load i32, i32* %select.ptr.246, align 4
  %1172 = xor i32 %1163, %1171
  %1173 = getelementptr inbounds i32, i32* %0, i64 27
  %1174 = load i1, i1* %out.8
  %1175 = icmp slt i64 27, %N
  %1176 = bitcast i64* %shadow to i32*
  %safe.247 = or i1 %1174, %1175
  %select.ptr.248 = select i1 %safe.247, i32* %1173, i32* %1176
  %1177 = load i32, i32* %select.ptr.248, align 4
  %1178 = xor i32 %1172, %1177
  %1179 = lshr i32 %1049, 24
  %1180 = zext i32 %1179 to i64
  %1181 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1180
  %1182 = load i1, i1* %out.8
  %1183 = sext i32 256 to i64
  %1184 = icmp slt i64 %1180, %1183
  %1185 = bitcast i64* %shadow to i32*
  %safe.249 = or i1 %1182, %1184
  %select.ptr.250 = select i1 %safe.249, i32* %1181, i32* %1185
  %1186 = load i32, i32* %select.ptr.250, align 4
  %1187 = lshr i32 %1092, 16
  %1188 = and i32 %1187, 255
  %1189 = zext i32 %1188 to i64
  %1190 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1189
  %1191 = load i1, i1* %out.8
  %1192 = sext i32 256 to i64
  %1193 = icmp slt i64 %1189, %1192
  %1194 = bitcast i64* %shadow to i32*
  %safe.251 = or i1 %1191, %1193
  %select.ptr.252 = select i1 %safe.251, i32* %1190, i32* %1194
  %1195 = load i32, i32* %select.ptr.252, align 4
  %1196 = xor i32 %1186, %1195
  %1197 = lshr i32 %1135, 8
  %1198 = and i32 %1197, 255
  %1199 = zext i32 %1198 to i64
  %1200 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1199
  %1201 = load i1, i1* %out.8
  %1202 = sext i32 256 to i64
  %1203 = icmp slt i64 %1199, %1202
  %1204 = bitcast i64* %shadow to i32*
  %safe.253 = or i1 %1201, %1203
  %select.ptr.254 = select i1 %safe.253, i32* %1200, i32* %1204
  %1205 = load i32, i32* %select.ptr.254, align 4
  %1206 = xor i32 %1196, %1205
  %1207 = and i32 %1178, 255
  %1208 = zext i32 %1207 to i64
  %1209 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1208
  %1210 = load i1, i1* %out.8
  %1211 = sext i32 256 to i64
  %1212 = icmp slt i64 %1208, %1211
  %1213 = bitcast i64* %shadow to i32*
  %safe.255 = or i1 %1210, %1212
  %select.ptr.256 = select i1 %safe.255, i32* %1209, i32* %1213
  %1214 = load i32, i32* %select.ptr.256, align 4
  %1215 = xor i32 %1206, %1214
  %1216 = getelementptr inbounds i32, i32* %0, i64 28
  %1217 = load i1, i1* %out.8
  %1218 = icmp slt i64 28, %N
  %1219 = bitcast i64* %shadow to i32*
  %safe.257 = or i1 %1217, %1218
  %select.ptr.258 = select i1 %safe.257, i32* %1216, i32* %1219
  %1220 = load i32, i32* %select.ptr.258, align 4
  %1221 = xor i32 %1215, %1220
  %1222 = lshr i32 %1092, 24
  %1223 = zext i32 %1222 to i64
  %1224 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1223
  %1225 = load i1, i1* %out.8
  %1226 = sext i32 256 to i64
  %1227 = icmp slt i64 %1223, %1226
  %1228 = bitcast i64* %shadow to i32*
  %safe.259 = or i1 %1225, %1227
  %select.ptr.260 = select i1 %safe.259, i32* %1224, i32* %1228
  %1229 = load i32, i32* %select.ptr.260, align 4
  %1230 = lshr i32 %1135, 16
  %1231 = and i32 %1230, 255
  %1232 = zext i32 %1231 to i64
  %1233 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1232
  %1234 = load i1, i1* %out.8
  %1235 = sext i32 256 to i64
  %1236 = icmp slt i64 %1232, %1235
  %1237 = bitcast i64* %shadow to i32*
  %safe.261 = or i1 %1234, %1236
  %select.ptr.262 = select i1 %safe.261, i32* %1233, i32* %1237
  %1238 = load i32, i32* %select.ptr.262, align 4
  %1239 = xor i32 %1229, %1238
  %1240 = lshr i32 %1178, 8
  %1241 = and i32 %1240, 255
  %1242 = zext i32 %1241 to i64
  %1243 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1242
  %1244 = load i1, i1* %out.8
  %1245 = sext i32 256 to i64
  %1246 = icmp slt i64 %1242, %1245
  %1247 = bitcast i64* %shadow to i32*
  %safe.263 = or i1 %1244, %1246
  %select.ptr.264 = select i1 %safe.263, i32* %1243, i32* %1247
  %1248 = load i32, i32* %select.ptr.264, align 4
  %1249 = xor i32 %1239, %1248
  %1250 = and i32 %1049, 255
  %1251 = zext i32 %1250 to i64
  %1252 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1251
  %1253 = load i1, i1* %out.8
  %1254 = sext i32 256 to i64
  %1255 = icmp slt i64 %1251, %1254
  %1256 = bitcast i64* %shadow to i32*
  %safe.265 = or i1 %1253, %1255
  %select.ptr.266 = select i1 %safe.265, i32* %1252, i32* %1256
  %1257 = load i32, i32* %select.ptr.266, align 4
  %1258 = xor i32 %1249, %1257
  %1259 = getelementptr inbounds i32, i32* %0, i64 29
  %1260 = load i1, i1* %out.8
  %1261 = icmp slt i64 29, %N
  %1262 = bitcast i64* %shadow to i32*
  %safe.267 = or i1 %1260, %1261
  %select.ptr.268 = select i1 %safe.267, i32* %1259, i32* %1262
  %1263 = load i32, i32* %select.ptr.268, align 4
  %1264 = xor i32 %1258, %1263
  %1265 = lshr i32 %1135, 24
  %1266 = zext i32 %1265 to i64
  %1267 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1266
  %1268 = load i1, i1* %out.8
  %1269 = sext i32 256 to i64
  %1270 = icmp slt i64 %1266, %1269
  %1271 = bitcast i64* %shadow to i32*
  %safe.269 = or i1 %1268, %1270
  %select.ptr.270 = select i1 %safe.269, i32* %1267, i32* %1271
  %1272 = load i32, i32* %select.ptr.270, align 4
  %1273 = lshr i32 %1178, 16
  %1274 = and i32 %1273, 255
  %1275 = zext i32 %1274 to i64
  %1276 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1275
  %1277 = load i1, i1* %out.8
  %1278 = sext i32 256 to i64
  %1279 = icmp slt i64 %1275, %1278
  %1280 = bitcast i64* %shadow to i32*
  %safe.271 = or i1 %1277, %1279
  %select.ptr.272 = select i1 %safe.271, i32* %1276, i32* %1280
  %1281 = load i32, i32* %select.ptr.272, align 4
  %1282 = xor i32 %1272, %1281
  %1283 = lshr i32 %1049, 8
  %1284 = and i32 %1283, 255
  %1285 = zext i32 %1284 to i64
  %1286 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1285
  %1287 = load i1, i1* %out.8
  %1288 = sext i32 256 to i64
  %1289 = icmp slt i64 %1285, %1288
  %1290 = bitcast i64* %shadow to i32*
  %safe.273 = or i1 %1287, %1289
  %select.ptr.274 = select i1 %safe.273, i32* %1286, i32* %1290
  %1291 = load i32, i32* %select.ptr.274, align 4
  %1292 = xor i32 %1282, %1291
  %1293 = and i32 %1092, 255
  %1294 = zext i32 %1293 to i64
  %1295 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1294
  %1296 = load i1, i1* %out.8
  %1297 = sext i32 256 to i64
  %1298 = icmp slt i64 %1294, %1297
  %1299 = bitcast i64* %shadow to i32*
  %safe.275 = or i1 %1296, %1298
  %select.ptr.276 = select i1 %safe.275, i32* %1295, i32* %1299
  %1300 = load i32, i32* %select.ptr.276, align 4
  %1301 = xor i32 %1292, %1300
  %1302 = getelementptr inbounds i32, i32* %0, i64 30
  %1303 = load i1, i1* %out.8
  %1304 = icmp slt i64 30, %N
  %1305 = bitcast i64* %shadow to i32*
  %safe.277 = or i1 %1303, %1304
  %select.ptr.278 = select i1 %safe.277, i32* %1302, i32* %1305
  %1306 = load i32, i32* %select.ptr.278, align 4
  %1307 = xor i32 %1301, %1306
  %1308 = lshr i32 %1178, 24
  %1309 = zext i32 %1308 to i64
  %1310 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1309
  %1311 = load i1, i1* %out.8
  %1312 = sext i32 256 to i64
  %1313 = icmp slt i64 %1309, %1312
  %1314 = bitcast i64* %shadow to i32*
  %safe.279 = or i1 %1311, %1313
  %select.ptr.280 = select i1 %safe.279, i32* %1310, i32* %1314
  %1315 = load i32, i32* %select.ptr.280, align 4
  %1316 = lshr i32 %1049, 16
  %1317 = and i32 %1316, 255
  %1318 = zext i32 %1317 to i64
  %1319 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1318
  %1320 = load i1, i1* %out.8
  %1321 = sext i32 256 to i64
  %1322 = icmp slt i64 %1318, %1321
  %1323 = bitcast i64* %shadow to i32*
  %safe.281 = or i1 %1320, %1322
  %select.ptr.282 = select i1 %safe.281, i32* %1319, i32* %1323
  %1324 = load i32, i32* %select.ptr.282, align 4
  %1325 = xor i32 %1315, %1324
  %1326 = lshr i32 %1092, 8
  %1327 = and i32 %1326, 255
  %1328 = zext i32 %1327 to i64
  %1329 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1328
  %1330 = load i1, i1* %out.8
  %1331 = sext i32 256 to i64
  %1332 = icmp slt i64 %1328, %1331
  %1333 = bitcast i64* %shadow to i32*
  %safe.283 = or i1 %1330, %1332
  %select.ptr.284 = select i1 %safe.283, i32* %1329, i32* %1333
  %1334 = load i32, i32* %select.ptr.284, align 4
  %1335 = xor i32 %1325, %1334
  %1336 = and i32 %1135, 255
  %1337 = zext i32 %1336 to i64
  %1338 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1337
  %1339 = load i1, i1* %out.8
  %1340 = sext i32 256 to i64
  %1341 = icmp slt i64 %1337, %1340
  %1342 = bitcast i64* %shadow to i32*
  %safe.285 = or i1 %1339, %1341
  %select.ptr.286 = select i1 %safe.285, i32* %1338, i32* %1342
  %1343 = load i32, i32* %select.ptr.286, align 4
  %1344 = xor i32 %1335, %1343
  %1345 = getelementptr inbounds i32, i32* %0, i64 31
  %1346 = load i1, i1* %out.8
  %1347 = icmp slt i64 31, %N
  %1348 = bitcast i64* %shadow to i32*
  %safe.287 = or i1 %1346, %1347
  %select.ptr.288 = select i1 %safe.287, i32* %1345, i32* %1348
  %1349 = load i32, i32* %select.ptr.288, align 4
  %1350 = xor i32 %1344, %1349
  %1351 = lshr i32 %1221, 24
  %1352 = zext i32 %1351 to i64
  %1353 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1352
  %1354 = load i1, i1* %out.8
  %1355 = sext i32 256 to i64
  %1356 = icmp slt i64 %1352, %1355
  %1357 = bitcast i64* %shadow to i32*
  %safe.289 = or i1 %1354, %1356
  %select.ptr.290 = select i1 %safe.289, i32* %1353, i32* %1357
  %1358 = load i32, i32* %select.ptr.290, align 4
  %1359 = lshr i32 %1264, 16
  %1360 = and i32 %1359, 255
  %1361 = zext i32 %1360 to i64
  %1362 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1361
  %1363 = load i1, i1* %out.8
  %1364 = sext i32 256 to i64
  %1365 = icmp slt i64 %1361, %1364
  %1366 = bitcast i64* %shadow to i32*
  %safe.291 = or i1 %1363, %1365
  %select.ptr.292 = select i1 %safe.291, i32* %1362, i32* %1366
  %1367 = load i32, i32* %select.ptr.292, align 4
  %1368 = xor i32 %1358, %1367
  %1369 = lshr i32 %1307, 8
  %1370 = and i32 %1369, 255
  %1371 = zext i32 %1370 to i64
  %1372 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1371
  %1373 = load i1, i1* %out.8
  %1374 = sext i32 256 to i64
  %1375 = icmp slt i64 %1371, %1374
  %1376 = bitcast i64* %shadow to i32*
  %safe.293 = or i1 %1373, %1375
  %select.ptr.294 = select i1 %safe.293, i32* %1372, i32* %1376
  %1377 = load i32, i32* %select.ptr.294, align 4
  %1378 = xor i32 %1368, %1377
  %1379 = and i32 %1350, 255
  %1380 = zext i32 %1379 to i64
  %1381 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1380
  %1382 = load i1, i1* %out.8
  %1383 = sext i32 256 to i64
  %1384 = icmp slt i64 %1380, %1383
  %1385 = bitcast i64* %shadow to i32*
  %safe.295 = or i1 %1382, %1384
  %select.ptr.296 = select i1 %safe.295, i32* %1381, i32* %1385
  %1386 = load i32, i32* %select.ptr.296, align 4
  %1387 = xor i32 %1378, %1386
  %1388 = getelementptr inbounds i32, i32* %0, i64 32
  %1389 = load i1, i1* %out.8
  %1390 = icmp slt i64 32, %N
  %1391 = bitcast i64* %shadow to i32*
  %safe.297 = or i1 %1389, %1390
  %select.ptr.298 = select i1 %safe.297, i32* %1388, i32* %1391
  %1392 = load i32, i32* %select.ptr.298, align 4
  %1393 = xor i32 %1387, %1392
  %1394 = lshr i32 %1264, 24
  %1395 = zext i32 %1394 to i64
  %1396 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1395
  %1397 = load i1, i1* %out.8
  %1398 = sext i32 256 to i64
  %1399 = icmp slt i64 %1395, %1398
  %1400 = bitcast i64* %shadow to i32*
  %safe.299 = or i1 %1397, %1399
  %select.ptr.300 = select i1 %safe.299, i32* %1396, i32* %1400
  %1401 = load i32, i32* %select.ptr.300, align 4
  %1402 = lshr i32 %1307, 16
  %1403 = and i32 %1402, 255
  %1404 = zext i32 %1403 to i64
  %1405 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1404
  %1406 = load i1, i1* %out.8
  %1407 = sext i32 256 to i64
  %1408 = icmp slt i64 %1404, %1407
  %1409 = bitcast i64* %shadow to i32*
  %safe.301 = or i1 %1406, %1408
  %select.ptr.302 = select i1 %safe.301, i32* %1405, i32* %1409
  %1410 = load i32, i32* %select.ptr.302, align 4
  %1411 = xor i32 %1401, %1410
  %1412 = lshr i32 %1350, 8
  %1413 = and i32 %1412, 255
  %1414 = zext i32 %1413 to i64
  %1415 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1414
  %1416 = load i1, i1* %out.8
  %1417 = sext i32 256 to i64
  %1418 = icmp slt i64 %1414, %1417
  %1419 = bitcast i64* %shadow to i32*
  %safe.303 = or i1 %1416, %1418
  %select.ptr.304 = select i1 %safe.303, i32* %1415, i32* %1419
  %1420 = load i32, i32* %select.ptr.304, align 4
  %1421 = xor i32 %1411, %1420
  %1422 = and i32 %1221, 255
  %1423 = zext i32 %1422 to i64
  %1424 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1423
  %1425 = load i1, i1* %out.8
  %1426 = sext i32 256 to i64
  %1427 = icmp slt i64 %1423, %1426
  %1428 = bitcast i64* %shadow to i32*
  %safe.305 = or i1 %1425, %1427
  %select.ptr.306 = select i1 %safe.305, i32* %1424, i32* %1428
  %1429 = load i32, i32* %select.ptr.306, align 4
  %1430 = xor i32 %1421, %1429
  %1431 = getelementptr inbounds i32, i32* %0, i64 33
  %1432 = load i1, i1* %out.8
  %1433 = icmp slt i64 33, %N
  %1434 = bitcast i64* %shadow to i32*
  %safe.307 = or i1 %1432, %1433
  %select.ptr.308 = select i1 %safe.307, i32* %1431, i32* %1434
  %1435 = load i32, i32* %select.ptr.308, align 4
  %1436 = xor i32 %1430, %1435
  %1437 = lshr i32 %1307, 24
  %1438 = zext i32 %1437 to i64
  %1439 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1438
  %1440 = load i1, i1* %out.8
  %1441 = sext i32 256 to i64
  %1442 = icmp slt i64 %1438, %1441
  %1443 = bitcast i64* %shadow to i32*
  %safe.309 = or i1 %1440, %1442
  %select.ptr.310 = select i1 %safe.309, i32* %1439, i32* %1443
  %1444 = load i32, i32* %select.ptr.310, align 4
  %1445 = lshr i32 %1350, 16
  %1446 = and i32 %1445, 255
  %1447 = zext i32 %1446 to i64
  %1448 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1447
  %1449 = load i1, i1* %out.8
  %1450 = sext i32 256 to i64
  %1451 = icmp slt i64 %1447, %1450
  %1452 = bitcast i64* %shadow to i32*
  %safe.311 = or i1 %1449, %1451
  %select.ptr.312 = select i1 %safe.311, i32* %1448, i32* %1452
  %1453 = load i32, i32* %select.ptr.312, align 4
  %1454 = xor i32 %1444, %1453
  %1455 = lshr i32 %1221, 8
  %1456 = and i32 %1455, 255
  %1457 = zext i32 %1456 to i64
  %1458 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1457
  %1459 = load i1, i1* %out.8
  %1460 = sext i32 256 to i64
  %1461 = icmp slt i64 %1457, %1460
  %1462 = bitcast i64* %shadow to i32*
  %safe.313 = or i1 %1459, %1461
  %select.ptr.314 = select i1 %safe.313, i32* %1458, i32* %1462
  %1463 = load i32, i32* %select.ptr.314, align 4
  %1464 = xor i32 %1454, %1463
  %1465 = and i32 %1264, 255
  %1466 = zext i32 %1465 to i64
  %1467 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1466
  %1468 = load i1, i1* %out.8
  %1469 = sext i32 256 to i64
  %1470 = icmp slt i64 %1466, %1469
  %1471 = bitcast i64* %shadow to i32*
  %safe.315 = or i1 %1468, %1470
  %select.ptr.316 = select i1 %safe.315, i32* %1467, i32* %1471
  %1472 = load i32, i32* %select.ptr.316, align 4
  %1473 = xor i32 %1464, %1472
  %1474 = getelementptr inbounds i32, i32* %0, i64 34
  %1475 = load i1, i1* %out.8
  %1476 = icmp slt i64 34, %N
  %1477 = bitcast i64* %shadow to i32*
  %safe.317 = or i1 %1475, %1476
  %select.ptr.318 = select i1 %safe.317, i32* %1474, i32* %1477
  %1478 = load i32, i32* %select.ptr.318, align 4
  %1479 = xor i32 %1473, %1478
  %1480 = lshr i32 %1350, 24
  %1481 = zext i32 %1480 to i64
  %1482 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1481
  %1483 = load i1, i1* %out.8
  %1484 = sext i32 256 to i64
  %1485 = icmp slt i64 %1481, %1484
  %1486 = bitcast i64* %shadow to i32*
  %safe.319 = or i1 %1483, %1485
  %select.ptr.320 = select i1 %safe.319, i32* %1482, i32* %1486
  %1487 = load i32, i32* %select.ptr.320, align 4
  %1488 = lshr i32 %1221, 16
  %1489 = and i32 %1488, 255
  %1490 = zext i32 %1489 to i64
  %1491 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1490
  %1492 = load i1, i1* %out.8
  %1493 = sext i32 256 to i64
  %1494 = icmp slt i64 %1490, %1493
  %1495 = bitcast i64* %shadow to i32*
  %safe.321 = or i1 %1492, %1494
  %select.ptr.322 = select i1 %safe.321, i32* %1491, i32* %1495
  %1496 = load i32, i32* %select.ptr.322, align 4
  %1497 = xor i32 %1487, %1496
  %1498 = lshr i32 %1264, 8
  %1499 = and i32 %1498, 255
  %1500 = zext i32 %1499 to i64
  %1501 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1500
  %1502 = load i1, i1* %out.8
  %1503 = sext i32 256 to i64
  %1504 = icmp slt i64 %1500, %1503
  %1505 = bitcast i64* %shadow to i32*
  %safe.323 = or i1 %1502, %1504
  %select.ptr.324 = select i1 %safe.323, i32* %1501, i32* %1505
  %1506 = load i32, i32* %select.ptr.324, align 4
  %1507 = xor i32 %1497, %1506
  %1508 = and i32 %1307, 255
  %1509 = zext i32 %1508 to i64
  %1510 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1509
  %1511 = load i1, i1* %out.8
  %1512 = sext i32 256 to i64
  %1513 = icmp slt i64 %1509, %1512
  %1514 = bitcast i64* %shadow to i32*
  %safe.325 = or i1 %1511, %1513
  %select.ptr.326 = select i1 %safe.325, i32* %1510, i32* %1514
  %1515 = load i32, i32* %select.ptr.326, align 4
  %1516 = xor i32 %1507, %1515
  %1517 = getelementptr inbounds i32, i32* %0, i64 35
  %1518 = load i1, i1* %out.8
  %1519 = icmp slt i64 35, %N
  %1520 = bitcast i64* %shadow to i32*
  %safe.327 = or i1 %1518, %1519
  %select.ptr.328 = select i1 %safe.327, i32* %1517, i32* %1520
  %1521 = load i32, i32* %select.ptr.328, align 4
  %1522 = xor i32 %1516, %1521
  %1523 = lshr i32 %1393, 24
  %1524 = zext i32 %1523 to i64
  %1525 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1524
  %1526 = load i1, i1* %out.8
  %1527 = sext i32 256 to i64
  %1528 = icmp slt i64 %1524, %1527
  %1529 = bitcast i64* %shadow to i32*
  %safe.329 = or i1 %1526, %1528
  %select.ptr.330 = select i1 %safe.329, i32* %1525, i32* %1529
  %1530 = load i32, i32* %select.ptr.330, align 4
  %1531 = lshr i32 %1436, 16
  %1532 = and i32 %1531, 255
  %1533 = zext i32 %1532 to i64
  %1534 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1533
  %1535 = load i1, i1* %out.8
  %1536 = sext i32 256 to i64
  %1537 = icmp slt i64 %1533, %1536
  %1538 = bitcast i64* %shadow to i32*
  %safe.331 = or i1 %1535, %1537
  %select.ptr.332 = select i1 %safe.331, i32* %1534, i32* %1538
  %1539 = load i32, i32* %select.ptr.332, align 4
  %1540 = xor i32 %1530, %1539
  %1541 = lshr i32 %1479, 8
  %1542 = and i32 %1541, 255
  %1543 = zext i32 %1542 to i64
  %1544 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1543
  %1545 = load i1, i1* %out.8
  %1546 = sext i32 256 to i64
  %1547 = icmp slt i64 %1543, %1546
  %1548 = bitcast i64* %shadow to i32*
  %safe.333 = or i1 %1545, %1547
  %select.ptr.334 = select i1 %safe.333, i32* %1544, i32* %1548
  %1549 = load i32, i32* %select.ptr.334, align 4
  %1550 = xor i32 %1540, %1549
  %1551 = and i32 %1522, 255
  %1552 = zext i32 %1551 to i64
  %1553 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1552
  %1554 = load i1, i1* %out.8
  %1555 = sext i32 256 to i64
  %1556 = icmp slt i64 %1552, %1555
  %1557 = bitcast i64* %shadow to i32*
  %safe.335 = or i1 %1554, %1556
  %select.ptr.336 = select i1 %safe.335, i32* %1553, i32* %1557
  %1558 = load i32, i32* %select.ptr.336, align 4
  %1559 = xor i32 %1550, %1558
  %1560 = getelementptr inbounds i32, i32* %0, i64 36
  %1561 = load i1, i1* %out.8
  %1562 = icmp slt i64 36, %N
  %1563 = bitcast i64* %shadow to i32*
  %safe.337 = or i1 %1561, %1562
  %select.ptr.338 = select i1 %safe.337, i32* %1560, i32* %1563
  %1564 = load i32, i32* %select.ptr.338, align 4
  %1565 = xor i32 %1559, %1564
  %1566 = lshr i32 %1436, 24
  %1567 = zext i32 %1566 to i64
  %1568 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1567
  %1569 = load i1, i1* %out.8
  %1570 = sext i32 256 to i64
  %1571 = icmp slt i64 %1567, %1570
  %1572 = bitcast i64* %shadow to i32*
  %safe.339 = or i1 %1569, %1571
  %select.ptr.340 = select i1 %safe.339, i32* %1568, i32* %1572
  %1573 = load i32, i32* %select.ptr.340, align 4
  %1574 = lshr i32 %1479, 16
  %1575 = and i32 %1574, 255
  %1576 = zext i32 %1575 to i64
  %1577 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1576
  %1578 = load i1, i1* %out.8
  %1579 = sext i32 256 to i64
  %1580 = icmp slt i64 %1576, %1579
  %1581 = bitcast i64* %shadow to i32*
  %safe.341 = or i1 %1578, %1580
  %select.ptr.342 = select i1 %safe.341, i32* %1577, i32* %1581
  %1582 = load i32, i32* %select.ptr.342, align 4
  %1583 = xor i32 %1573, %1582
  %1584 = lshr i32 %1522, 8
  %1585 = and i32 %1584, 255
  %1586 = zext i32 %1585 to i64
  %1587 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1586
  %1588 = load i1, i1* %out.8
  %1589 = sext i32 256 to i64
  %1590 = icmp slt i64 %1586, %1589
  %1591 = bitcast i64* %shadow to i32*
  %safe.343 = or i1 %1588, %1590
  %select.ptr.344 = select i1 %safe.343, i32* %1587, i32* %1591
  %1592 = load i32, i32* %select.ptr.344, align 4
  %1593 = xor i32 %1583, %1592
  %1594 = and i32 %1393, 255
  %1595 = zext i32 %1594 to i64
  %1596 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1595
  %1597 = load i1, i1* %out.8
  %1598 = sext i32 256 to i64
  %1599 = icmp slt i64 %1595, %1598
  %1600 = bitcast i64* %shadow to i32*
  %safe.345 = or i1 %1597, %1599
  %select.ptr.346 = select i1 %safe.345, i32* %1596, i32* %1600
  %1601 = load i32, i32* %select.ptr.346, align 4
  %1602 = xor i32 %1593, %1601
  %1603 = getelementptr inbounds i32, i32* %0, i64 37
  %1604 = load i1, i1* %out.8
  %1605 = icmp slt i64 37, %N
  %1606 = bitcast i64* %shadow to i32*
  %safe.347 = or i1 %1604, %1605
  %select.ptr.348 = select i1 %safe.347, i32* %1603, i32* %1606
  %1607 = load i32, i32* %select.ptr.348, align 4
  %1608 = xor i32 %1602, %1607
  %1609 = lshr i32 %1479, 24
  %1610 = zext i32 %1609 to i64
  %1611 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1610
  %1612 = load i1, i1* %out.8
  %1613 = sext i32 256 to i64
  %1614 = icmp slt i64 %1610, %1613
  %1615 = bitcast i64* %shadow to i32*
  %safe.349 = or i1 %1612, %1614
  %select.ptr.350 = select i1 %safe.349, i32* %1611, i32* %1615
  %1616 = load i32, i32* %select.ptr.350, align 4
  %1617 = lshr i32 %1522, 16
  %1618 = and i32 %1617, 255
  %1619 = zext i32 %1618 to i64
  %1620 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1619
  %1621 = load i1, i1* %out.8
  %1622 = sext i32 256 to i64
  %1623 = icmp slt i64 %1619, %1622
  %1624 = bitcast i64* %shadow to i32*
  %safe.351 = or i1 %1621, %1623
  %select.ptr.352 = select i1 %safe.351, i32* %1620, i32* %1624
  %1625 = load i32, i32* %select.ptr.352, align 4
  %1626 = xor i32 %1616, %1625
  %1627 = lshr i32 %1393, 8
  %1628 = and i32 %1627, 255
  %1629 = zext i32 %1628 to i64
  %1630 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1629
  %1631 = load i1, i1* %out.8
  %1632 = sext i32 256 to i64
  %1633 = icmp slt i64 %1629, %1632
  %1634 = bitcast i64* %shadow to i32*
  %safe.353 = or i1 %1631, %1633
  %select.ptr.354 = select i1 %safe.353, i32* %1630, i32* %1634
  %1635 = load i32, i32* %select.ptr.354, align 4
  %1636 = xor i32 %1626, %1635
  %1637 = and i32 %1436, 255
  %1638 = zext i32 %1637 to i64
  %1639 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1638
  %1640 = load i1, i1* %out.8
  %1641 = sext i32 256 to i64
  %1642 = icmp slt i64 %1638, %1641
  %1643 = bitcast i64* %shadow to i32*
  %safe.355 = or i1 %1640, %1642
  %select.ptr.356 = select i1 %safe.355, i32* %1639, i32* %1643
  %1644 = load i32, i32* %select.ptr.356, align 4
  %1645 = xor i32 %1636, %1644
  %1646 = getelementptr inbounds i32, i32* %0, i64 38
  %1647 = load i1, i1* %out.8
  %1648 = icmp slt i64 38, %N
  %1649 = bitcast i64* %shadow to i32*
  %safe.357 = or i1 %1647, %1648
  %select.ptr.358 = select i1 %safe.357, i32* %1646, i32* %1649
  %1650 = load i32, i32* %select.ptr.358, align 4
  %1651 = xor i32 %1645, %1650
  %1652 = lshr i32 %1522, 24
  %1653 = zext i32 %1652 to i64
  %1654 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1653
  %1655 = load i1, i1* %out.8
  %1656 = sext i32 256 to i64
  %1657 = icmp slt i64 %1653, %1656
  %1658 = bitcast i64* %shadow to i32*
  %safe.359 = or i1 %1655, %1657
  %select.ptr.360 = select i1 %safe.359, i32* %1654, i32* %1658
  %1659 = load i32, i32* %select.ptr.360, align 4
  %1660 = lshr i32 %1393, 16
  %1661 = and i32 %1660, 255
  %1662 = zext i32 %1661 to i64
  %1663 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1662
  %1664 = load i1, i1* %out.8
  %1665 = sext i32 256 to i64
  %1666 = icmp slt i64 %1662, %1665
  %1667 = bitcast i64* %shadow to i32*
  %safe.361 = or i1 %1664, %1666
  %select.ptr.362 = select i1 %safe.361, i32* %1663, i32* %1667
  %1668 = load i32, i32* %select.ptr.362, align 4
  %1669 = xor i32 %1659, %1668
  %1670 = lshr i32 %1436, 8
  %1671 = and i32 %1670, 255
  %1672 = zext i32 %1671 to i64
  %1673 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1672
  %1674 = load i1, i1* %out.8
  %1675 = sext i32 256 to i64
  %1676 = icmp slt i64 %1672, %1675
  %1677 = bitcast i64* %shadow to i32*
  %safe.363 = or i1 %1674, %1676
  %select.ptr.364 = select i1 %safe.363, i32* %1673, i32* %1677
  %1678 = load i32, i32* %select.ptr.364, align 4
  %1679 = xor i32 %1669, %1678
  %1680 = and i32 %1479, 255
  %1681 = zext i32 %1680 to i64
  %1682 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1681
  %1683 = load i1, i1* %out.8
  %1684 = sext i32 256 to i64
  %1685 = icmp slt i64 %1681, %1684
  %1686 = bitcast i64* %shadow to i32*
  %safe.365 = or i1 %1683, %1685
  %select.ptr.366 = select i1 %safe.365, i32* %1682, i32* %1686
  %1687 = load i32, i32* %select.ptr.366, align 4
  %1688 = xor i32 %1679, %1687
  %1689 = getelementptr inbounds i32, i32* %0, i64 39
  %1690 = load i1, i1* %out.8
  %1691 = icmp slt i64 39, %N
  %1692 = bitcast i64* %shadow to i32*
  %safe.367 = or i1 %1690, %1691
  %select.ptr.368 = select i1 %safe.367, i32* %1689, i32* %1692
  %1693 = load i32, i32* %select.ptr.368, align 4
  %1694 = xor i32 %1688, %1693
  %1695 = icmp sgt i32 %1, 10
  %1696 = load i1, i1* %out.8
  %in.19 = and i1 %1696, %1695
  store i1 %in.19, i1* %out.9
  %1697 = lshr i32 %1565, 24
  %1698 = zext i32 %1697 to i64
  %1699 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1698
  %1700 = load i1, i1* %out.9
  %1701 = sext i32 256 to i64
  %1702 = icmp slt i64 %1698, %1701
  %1703 = bitcast i64* %shadow to i32*
  %safe.370 = or i1 %1700, %1702
  %select.ptr.371 = select i1 %safe.370, i32* %1699, i32* %1703
  %1704 = load i32, i32* %select.ptr.371, align 4
  %1705 = lshr i32 %1608, 16
  %1706 = and i32 %1705, 255
  %1707 = zext i32 %1706 to i64
  %1708 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1707
  %1709 = load i1, i1* %out.9
  %1710 = sext i32 256 to i64
  %1711 = icmp slt i64 %1707, %1710
  %1712 = bitcast i64* %shadow to i32*
  %safe.372 = or i1 %1709, %1711
  %select.ptr.373 = select i1 %safe.372, i32* %1708, i32* %1712
  %1713 = load i32, i32* %select.ptr.373, align 4
  %1714 = xor i32 %1704, %1713
  %1715 = lshr i32 %1651, 8
  %1716 = and i32 %1715, 255
  %1717 = zext i32 %1716 to i64
  %1718 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1717
  %1719 = load i1, i1* %out.9
  %1720 = sext i32 256 to i64
  %1721 = icmp slt i64 %1717, %1720
  %1722 = bitcast i64* %shadow to i32*
  %safe.374 = or i1 %1719, %1721
  %select.ptr.375 = select i1 %safe.374, i32* %1718, i32* %1722
  %1723 = load i32, i32* %select.ptr.375, align 4
  %1724 = xor i32 %1714, %1723
  %1725 = and i32 %1694, 255
  %1726 = zext i32 %1725 to i64
  %1727 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1726
  %1728 = load i1, i1* %out.9
  %1729 = sext i32 256 to i64
  %1730 = icmp slt i64 %1726, %1729
  %1731 = bitcast i64* %shadow to i32*
  %safe.376 = or i1 %1728, %1730
  %select.ptr.377 = select i1 %safe.376, i32* %1727, i32* %1731
  %1732 = load i32, i32* %select.ptr.377, align 4
  %1733 = xor i32 %1724, %1732
  %1734 = getelementptr inbounds i32, i32* %0, i64 40
  %1735 = load i1, i1* %out.9
  %1736 = icmp slt i64 40, %N
  %1737 = bitcast i64* %shadow to i32*
  %safe.378 = or i1 %1735, %1736
  %select.ptr.379 = select i1 %safe.378, i32* %1734, i32* %1737
  %1738 = load i32, i32* %select.ptr.379, align 4
  %1739 = xor i32 %1733, %1738
  %1740 = lshr i32 %1608, 24
  %1741 = zext i32 %1740 to i64
  %1742 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1741
  %1743 = load i1, i1* %out.9
  %1744 = sext i32 256 to i64
  %1745 = icmp slt i64 %1741, %1744
  %1746 = bitcast i64* %shadow to i32*
  %safe.380 = or i1 %1743, %1745
  %select.ptr.381 = select i1 %safe.380, i32* %1742, i32* %1746
  %1747 = load i32, i32* %select.ptr.381, align 4
  %1748 = lshr i32 %1651, 16
  %1749 = and i32 %1748, 255
  %1750 = zext i32 %1749 to i64
  %1751 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1750
  %1752 = load i1, i1* %out.9
  %1753 = sext i32 256 to i64
  %1754 = icmp slt i64 %1750, %1753
  %1755 = bitcast i64* %shadow to i32*
  %safe.382 = or i1 %1752, %1754
  %select.ptr.383 = select i1 %safe.382, i32* %1751, i32* %1755
  %1756 = load i32, i32* %select.ptr.383, align 4
  %1757 = xor i32 %1747, %1756
  %1758 = lshr i32 %1694, 8
  %1759 = and i32 %1758, 255
  %1760 = zext i32 %1759 to i64
  %1761 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1760
  %1762 = load i1, i1* %out.9
  %1763 = sext i32 256 to i64
  %1764 = icmp slt i64 %1760, %1763
  %1765 = bitcast i64* %shadow to i32*
  %safe.384 = or i1 %1762, %1764
  %select.ptr.385 = select i1 %safe.384, i32* %1761, i32* %1765
  %1766 = load i32, i32* %select.ptr.385, align 4
  %1767 = xor i32 %1757, %1766
  %1768 = and i32 %1565, 255
  %1769 = zext i32 %1768 to i64
  %1770 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1769
  %1771 = load i1, i1* %out.9
  %1772 = sext i32 256 to i64
  %1773 = icmp slt i64 %1769, %1772
  %1774 = bitcast i64* %shadow to i32*
  %safe.386 = or i1 %1771, %1773
  %select.ptr.387 = select i1 %safe.386, i32* %1770, i32* %1774
  %1775 = load i32, i32* %select.ptr.387, align 4
  %1776 = xor i32 %1767, %1775
  %1777 = getelementptr inbounds i32, i32* %0, i64 41
  %1778 = load i1, i1* %out.9
  %1779 = icmp slt i64 41, %N
  %1780 = bitcast i64* %shadow to i32*
  %safe.388 = or i1 %1778, %1779
  %select.ptr.389 = select i1 %safe.388, i32* %1777, i32* %1780
  %1781 = load i32, i32* %select.ptr.389, align 4
  %1782 = xor i32 %1776, %1781
  %1783 = lshr i32 %1651, 24
  %1784 = zext i32 %1783 to i64
  %1785 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1784
  %1786 = load i1, i1* %out.9
  %1787 = sext i32 256 to i64
  %1788 = icmp slt i64 %1784, %1787
  %1789 = bitcast i64* %shadow to i32*
  %safe.390 = or i1 %1786, %1788
  %select.ptr.391 = select i1 %safe.390, i32* %1785, i32* %1789
  %1790 = load i32, i32* %select.ptr.391, align 4
  %1791 = lshr i32 %1694, 16
  %1792 = and i32 %1791, 255
  %1793 = zext i32 %1792 to i64
  %1794 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1793
  %1795 = load i1, i1* %out.9
  %1796 = sext i32 256 to i64
  %1797 = icmp slt i64 %1793, %1796
  %1798 = bitcast i64* %shadow to i32*
  %safe.392 = or i1 %1795, %1797
  %select.ptr.393 = select i1 %safe.392, i32* %1794, i32* %1798
  %1799 = load i32, i32* %select.ptr.393, align 4
  %1800 = xor i32 %1790, %1799
  %1801 = lshr i32 %1565, 8
  %1802 = and i32 %1801, 255
  %1803 = zext i32 %1802 to i64
  %1804 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1803
  %1805 = load i1, i1* %out.9
  %1806 = sext i32 256 to i64
  %1807 = icmp slt i64 %1803, %1806
  %1808 = bitcast i64* %shadow to i32*
  %safe.394 = or i1 %1805, %1807
  %select.ptr.395 = select i1 %safe.394, i32* %1804, i32* %1808
  %1809 = load i32, i32* %select.ptr.395, align 4
  %1810 = xor i32 %1800, %1809
  %1811 = and i32 %1608, 255
  %1812 = zext i32 %1811 to i64
  %1813 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1812
  %1814 = load i1, i1* %out.9
  %1815 = sext i32 256 to i64
  %1816 = icmp slt i64 %1812, %1815
  %1817 = bitcast i64* %shadow to i32*
  %safe.396 = or i1 %1814, %1816
  %select.ptr.397 = select i1 %safe.396, i32* %1813, i32* %1817
  %1818 = load i32, i32* %select.ptr.397, align 4
  %1819 = xor i32 %1810, %1818
  %1820 = getelementptr inbounds i32, i32* %0, i64 42
  %1821 = load i1, i1* %out.9
  %1822 = icmp slt i64 42, %N
  %1823 = bitcast i64* %shadow to i32*
  %safe.398 = or i1 %1821, %1822
  %select.ptr.399 = select i1 %safe.398, i32* %1820, i32* %1823
  %1824 = load i32, i32* %select.ptr.399, align 4
  %1825 = xor i32 %1819, %1824
  %1826 = lshr i32 %1694, 24
  %1827 = zext i32 %1826 to i64
  %1828 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1827
  %1829 = load i1, i1* %out.9
  %1830 = sext i32 256 to i64
  %1831 = icmp slt i64 %1827, %1830
  %1832 = bitcast i64* %shadow to i32*
  %safe.400 = or i1 %1829, %1831
  %select.ptr.401 = select i1 %safe.400, i32* %1828, i32* %1832
  %1833 = load i32, i32* %select.ptr.401, align 4
  %1834 = lshr i32 %1565, 16
  %1835 = and i32 %1834, 255
  %1836 = zext i32 %1835 to i64
  %1837 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1836
  %1838 = load i1, i1* %out.9
  %1839 = sext i32 256 to i64
  %1840 = icmp slt i64 %1836, %1839
  %1841 = bitcast i64* %shadow to i32*
  %safe.402 = or i1 %1838, %1840
  %select.ptr.403 = select i1 %safe.402, i32* %1837, i32* %1841
  %1842 = load i32, i32* %select.ptr.403, align 4
  %1843 = xor i32 %1833, %1842
  %1844 = lshr i32 %1608, 8
  %1845 = and i32 %1844, 255
  %1846 = zext i32 %1845 to i64
  %1847 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1846
  %1848 = load i1, i1* %out.9
  %1849 = sext i32 256 to i64
  %1850 = icmp slt i64 %1846, %1849
  %1851 = bitcast i64* %shadow to i32*
  %safe.404 = or i1 %1848, %1850
  %select.ptr.405 = select i1 %safe.404, i32* %1847, i32* %1851
  %1852 = load i32, i32* %select.ptr.405, align 4
  %1853 = xor i32 %1843, %1852
  %1854 = and i32 %1651, 255
  %1855 = zext i32 %1854 to i64
  %1856 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1855
  %1857 = load i1, i1* %out.9
  %1858 = sext i32 256 to i64
  %1859 = icmp slt i64 %1855, %1858
  %1860 = bitcast i64* %shadow to i32*
  %safe.406 = or i1 %1857, %1859
  %select.ptr.407 = select i1 %safe.406, i32* %1856, i32* %1860
  %1861 = load i32, i32* %select.ptr.407, align 4
  %1862 = xor i32 %1853, %1861
  %1863 = getelementptr inbounds i32, i32* %0, i64 43
  %1864 = load i1, i1* %out.9
  %1865 = icmp slt i64 43, %N
  %1866 = bitcast i64* %shadow to i32*
  %safe.408 = or i1 %1864, %1865
  %select.ptr.409 = select i1 %safe.408, i32* %1863, i32* %1866
  %1867 = load i32, i32* %select.ptr.409, align 4
  %1868 = xor i32 %1862, %1867
  %1869 = lshr i32 %1739, 24
  %1870 = zext i32 %1869 to i64
  %1871 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1870
  %1872 = load i1, i1* %out.9
  %1873 = sext i32 256 to i64
  %1874 = icmp slt i64 %1870, %1873
  %1875 = bitcast i64* %shadow to i32*
  %safe.410 = or i1 %1872, %1874
  %select.ptr.411 = select i1 %safe.410, i32* %1871, i32* %1875
  %1876 = load i32, i32* %select.ptr.411, align 4
  %1877 = lshr i32 %1782, 16
  %1878 = and i32 %1877, 255
  %1879 = zext i32 %1878 to i64
  %1880 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1879
  %1881 = load i1, i1* %out.9
  %1882 = sext i32 256 to i64
  %1883 = icmp slt i64 %1879, %1882
  %1884 = bitcast i64* %shadow to i32*
  %safe.412 = or i1 %1881, %1883
  %select.ptr.413 = select i1 %safe.412, i32* %1880, i32* %1884
  %1885 = load i32, i32* %select.ptr.413, align 4
  %1886 = xor i32 %1876, %1885
  %1887 = lshr i32 %1825, 8
  %1888 = and i32 %1887, 255
  %1889 = zext i32 %1888 to i64
  %1890 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1889
  %1891 = load i1, i1* %out.9
  %1892 = sext i32 256 to i64
  %1893 = icmp slt i64 %1889, %1892
  %1894 = bitcast i64* %shadow to i32*
  %safe.414 = or i1 %1891, %1893
  %select.ptr.415 = select i1 %safe.414, i32* %1890, i32* %1894
  %1895 = load i32, i32* %select.ptr.415, align 4
  %1896 = xor i32 %1886, %1895
  %1897 = and i32 %1868, 255
  %1898 = zext i32 %1897 to i64
  %1899 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1898
  %1900 = load i1, i1* %out.9
  %1901 = sext i32 256 to i64
  %1902 = icmp slt i64 %1898, %1901
  %1903 = bitcast i64* %shadow to i32*
  %safe.416 = or i1 %1900, %1902
  %select.ptr.417 = select i1 %safe.416, i32* %1899, i32* %1903
  %1904 = load i32, i32* %select.ptr.417, align 4
  %1905 = xor i32 %1896, %1904
  %1906 = getelementptr inbounds i32, i32* %0, i64 44
  %1907 = load i1, i1* %out.9
  %1908 = icmp slt i64 44, %N
  %1909 = bitcast i64* %shadow to i32*
  %safe.418 = or i1 %1907, %1908
  %select.ptr.419 = select i1 %safe.418, i32* %1906, i32* %1909
  %1910 = load i32, i32* %select.ptr.419, align 4
  %1911 = xor i32 %1905, %1910
  %1912 = lshr i32 %1782, 24
  %1913 = zext i32 %1912 to i64
  %1914 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1913
  %1915 = load i1, i1* %out.9
  %1916 = sext i32 256 to i64
  %1917 = icmp slt i64 %1913, %1916
  %1918 = bitcast i64* %shadow to i32*
  %safe.420 = or i1 %1915, %1917
  %select.ptr.421 = select i1 %safe.420, i32* %1914, i32* %1918
  %1919 = load i32, i32* %select.ptr.421, align 4
  %1920 = lshr i32 %1825, 16
  %1921 = and i32 %1920, 255
  %1922 = zext i32 %1921 to i64
  %1923 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1922
  %1924 = load i1, i1* %out.9
  %1925 = sext i32 256 to i64
  %1926 = icmp slt i64 %1922, %1925
  %1927 = bitcast i64* %shadow to i32*
  %safe.422 = or i1 %1924, %1926
  %select.ptr.423 = select i1 %safe.422, i32* %1923, i32* %1927
  %1928 = load i32, i32* %select.ptr.423, align 4
  %1929 = xor i32 %1919, %1928
  %1930 = lshr i32 %1868, 8
  %1931 = and i32 %1930, 255
  %1932 = zext i32 %1931 to i64
  %1933 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1932
  %1934 = load i1, i1* %out.9
  %1935 = sext i32 256 to i64
  %1936 = icmp slt i64 %1932, %1935
  %1937 = bitcast i64* %shadow to i32*
  %safe.424 = or i1 %1934, %1936
  %select.ptr.425 = select i1 %safe.424, i32* %1933, i32* %1937
  %1938 = load i32, i32* %select.ptr.425, align 4
  %1939 = xor i32 %1929, %1938
  %1940 = and i32 %1739, 255
  %1941 = zext i32 %1940 to i64
  %1942 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1941
  %1943 = load i1, i1* %out.9
  %1944 = sext i32 256 to i64
  %1945 = icmp slt i64 %1941, %1944
  %1946 = bitcast i64* %shadow to i32*
  %safe.426 = or i1 %1943, %1945
  %select.ptr.427 = select i1 %safe.426, i32* %1942, i32* %1946
  %1947 = load i32, i32* %select.ptr.427, align 4
  %1948 = xor i32 %1939, %1947
  %1949 = getelementptr inbounds i32, i32* %0, i64 45
  %1950 = load i1, i1* %out.9
  %1951 = icmp slt i64 45, %N
  %1952 = bitcast i64* %shadow to i32*
  %safe.428 = or i1 %1950, %1951
  %select.ptr.429 = select i1 %safe.428, i32* %1949, i32* %1952
  %1953 = load i32, i32* %select.ptr.429, align 4
  %1954 = xor i32 %1948, %1953
  %1955 = lshr i32 %1825, 24
  %1956 = zext i32 %1955 to i64
  %1957 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1956
  %1958 = load i1, i1* %out.9
  %1959 = sext i32 256 to i64
  %1960 = icmp slt i64 %1956, %1959
  %1961 = bitcast i64* %shadow to i32*
  %safe.430 = or i1 %1958, %1960
  %select.ptr.431 = select i1 %safe.430, i32* %1957, i32* %1961
  %1962 = load i32, i32* %select.ptr.431, align 4
  %1963 = lshr i32 %1868, 16
  %1964 = and i32 %1963, 255
  %1965 = zext i32 %1964 to i64
  %1966 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1965
  %1967 = load i1, i1* %out.9
  %1968 = sext i32 256 to i64
  %1969 = icmp slt i64 %1965, %1968
  %1970 = bitcast i64* %shadow to i32*
  %safe.432 = or i1 %1967, %1969
  %select.ptr.433 = select i1 %safe.432, i32* %1966, i32* %1970
  %1971 = load i32, i32* %select.ptr.433, align 4
  %1972 = xor i32 %1962, %1971
  %1973 = lshr i32 %1739, 8
  %1974 = and i32 %1973, 255
  %1975 = zext i32 %1974 to i64
  %1976 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1975
  %1977 = load i1, i1* %out.9
  %1978 = sext i32 256 to i64
  %1979 = icmp slt i64 %1975, %1978
  %1980 = bitcast i64* %shadow to i32*
  %safe.434 = or i1 %1977, %1979
  %select.ptr.435 = select i1 %safe.434, i32* %1976, i32* %1980
  %1981 = load i32, i32* %select.ptr.435, align 4
  %1982 = xor i32 %1972, %1981
  %1983 = and i32 %1782, 255
  %1984 = zext i32 %1983 to i64
  %1985 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1984
  %1986 = load i1, i1* %out.9
  %1987 = sext i32 256 to i64
  %1988 = icmp slt i64 %1984, %1987
  %1989 = bitcast i64* %shadow to i32*
  %safe.436 = or i1 %1986, %1988
  %select.ptr.437 = select i1 %safe.436, i32* %1985, i32* %1989
  %1990 = load i32, i32* %select.ptr.437, align 4
  %1991 = xor i32 %1982, %1990
  %1992 = getelementptr inbounds i32, i32* %0, i64 46
  %1993 = load i1, i1* %out.9
  %1994 = icmp slt i64 46, %N
  %1995 = bitcast i64* %shadow to i32*
  %safe.438 = or i1 %1993, %1994
  %select.ptr.439 = select i1 %safe.438, i32* %1992, i32* %1995
  %1996 = load i32, i32* %select.ptr.439, align 4
  %1997 = xor i32 %1991, %1996
  %1998 = lshr i32 %1868, 24
  %1999 = zext i32 %1998 to i64
  %2000 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1999
  %2001 = load i1, i1* %out.9
  %2002 = sext i32 256 to i64
  %2003 = icmp slt i64 %1999, %2002
  %2004 = bitcast i64* %shadow to i32*
  %safe.440 = or i1 %2001, %2003
  %select.ptr.441 = select i1 %safe.440, i32* %2000, i32* %2004
  %2005 = load i32, i32* %select.ptr.441, align 4
  %2006 = lshr i32 %1739, 16
  %2007 = and i32 %2006, 255
  %2008 = zext i32 %2007 to i64
  %2009 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2008
  %2010 = load i1, i1* %out.9
  %2011 = sext i32 256 to i64
  %2012 = icmp slt i64 %2008, %2011
  %2013 = bitcast i64* %shadow to i32*
  %safe.442 = or i1 %2010, %2012
  %select.ptr.443 = select i1 %safe.442, i32* %2009, i32* %2013
  %2014 = load i32, i32* %select.ptr.443, align 4
  %2015 = xor i32 %2005, %2014
  %2016 = lshr i32 %1782, 8
  %2017 = and i32 %2016, 255
  %2018 = zext i32 %2017 to i64
  %2019 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2018
  %2020 = load i1, i1* %out.9
  %2021 = sext i32 256 to i64
  %2022 = icmp slt i64 %2018, %2021
  %2023 = bitcast i64* %shadow to i32*
  %safe.444 = or i1 %2020, %2022
  %select.ptr.445 = select i1 %safe.444, i32* %2019, i32* %2023
  %2024 = load i32, i32* %select.ptr.445, align 4
  %2025 = xor i32 %2015, %2024
  %2026 = and i32 %1825, 255
  %2027 = zext i32 %2026 to i64
  %2028 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2027
  %2029 = load i1, i1* %out.9
  %2030 = sext i32 256 to i64
  %2031 = icmp slt i64 %2027, %2030
  %2032 = bitcast i64* %shadow to i32*
  %safe.446 = or i1 %2029, %2031
  %select.ptr.447 = select i1 %safe.446, i32* %2028, i32* %2032
  %2033 = load i32, i32* %select.ptr.447, align 4
  %2034 = xor i32 %2025, %2033
  %2035 = getelementptr inbounds i32, i32* %0, i64 47
  %2036 = load i1, i1* %out.9
  %2037 = icmp slt i64 47, %N
  %2038 = bitcast i64* %shadow to i32*
  %safe.448 = or i1 %2036, %2037
  %select.ptr.449 = select i1 %safe.448, i32* %2035, i32* %2038
  %2039 = load i32, i32* %select.ptr.449, align 4
  %2040 = xor i32 %2034, %2039
  %2041 = icmp sgt i32 %1, 12
  %2042 = load i1, i1* %out.9
  %in.20 = and i1 %2042, %2041
  store i1 %in.20, i1* %out.10
  %2043 = lshr i32 %1911, 24
  %2044 = zext i32 %2043 to i64
  %2045 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2044
  %2046 = load i1, i1* %out.10
  %2047 = sext i32 256 to i64
  %2048 = icmp slt i64 %2044, %2047
  %2049 = bitcast i64* %shadow to i32*
  %safe.450 = or i1 %2046, %2048
  %select.ptr.451 = select i1 %safe.450, i32* %2045, i32* %2049
  %2050 = load i32, i32* %select.ptr.451, align 4
  %2051 = lshr i32 %1954, 16
  %2052 = and i32 %2051, 255
  %2053 = zext i32 %2052 to i64
  %2054 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2053
  %2055 = load i1, i1* %out.10
  %2056 = sext i32 256 to i64
  %2057 = icmp slt i64 %2053, %2056
  %2058 = bitcast i64* %shadow to i32*
  %safe.452 = or i1 %2055, %2057
  %select.ptr.453 = select i1 %safe.452, i32* %2054, i32* %2058
  %2059 = load i32, i32* %select.ptr.453, align 4
  %2060 = xor i32 %2050, %2059
  %2061 = lshr i32 %1997, 8
  %2062 = and i32 %2061, 255
  %2063 = zext i32 %2062 to i64
  %2064 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2063
  %2065 = load i1, i1* %out.10
  %2066 = sext i32 256 to i64
  %2067 = icmp slt i64 %2063, %2066
  %2068 = bitcast i64* %shadow to i32*
  %safe.454 = or i1 %2065, %2067
  %select.ptr.455 = select i1 %safe.454, i32* %2064, i32* %2068
  %2069 = load i32, i32* %select.ptr.455, align 4
  %2070 = xor i32 %2060, %2069
  %2071 = and i32 %2040, 255
  %2072 = zext i32 %2071 to i64
  %2073 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2072
  %2074 = load i1, i1* %out.10
  %2075 = sext i32 256 to i64
  %2076 = icmp slt i64 %2072, %2075
  %2077 = bitcast i64* %shadow to i32*
  %safe.456 = or i1 %2074, %2076
  %select.ptr.457 = select i1 %safe.456, i32* %2073, i32* %2077
  %2078 = load i32, i32* %select.ptr.457, align 4
  %2079 = xor i32 %2070, %2078
  %2080 = getelementptr inbounds i32, i32* %0, i64 48
  %2081 = load i1, i1* %out.10
  %2082 = icmp slt i64 48, %N
  %2083 = bitcast i64* %shadow to i32*
  %safe.458 = or i1 %2081, %2082
  %select.ptr.459 = select i1 %safe.458, i32* %2080, i32* %2083
  %2084 = load i32, i32* %select.ptr.459, align 4
  %2085 = xor i32 %2079, %2084
  %2086 = lshr i32 %1954, 24
  %2087 = zext i32 %2086 to i64
  %2088 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2087
  %2089 = load i1, i1* %out.10
  %2090 = sext i32 256 to i64
  %2091 = icmp slt i64 %2087, %2090
  %2092 = bitcast i64* %shadow to i32*
  %safe.460 = or i1 %2089, %2091
  %select.ptr.461 = select i1 %safe.460, i32* %2088, i32* %2092
  %2093 = load i32, i32* %select.ptr.461, align 4
  %2094 = lshr i32 %1997, 16
  %2095 = and i32 %2094, 255
  %2096 = zext i32 %2095 to i64
  %2097 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2096
  %2098 = load i1, i1* %out.10
  %2099 = sext i32 256 to i64
  %2100 = icmp slt i64 %2096, %2099
  %2101 = bitcast i64* %shadow to i32*
  %safe.462 = or i1 %2098, %2100
  %select.ptr.463 = select i1 %safe.462, i32* %2097, i32* %2101
  %2102 = load i32, i32* %select.ptr.463, align 4
  %2103 = xor i32 %2093, %2102
  %2104 = lshr i32 %2040, 8
  %2105 = and i32 %2104, 255
  %2106 = zext i32 %2105 to i64
  %2107 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2106
  %2108 = load i1, i1* %out.10
  %2109 = sext i32 256 to i64
  %2110 = icmp slt i64 %2106, %2109
  %2111 = bitcast i64* %shadow to i32*
  %safe.464 = or i1 %2108, %2110
  %select.ptr.465 = select i1 %safe.464, i32* %2107, i32* %2111
  %2112 = load i32, i32* %select.ptr.465, align 4
  %2113 = xor i32 %2103, %2112
  %2114 = and i32 %1911, 255
  %2115 = zext i32 %2114 to i64
  %2116 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2115
  %2117 = load i1, i1* %out.10
  %2118 = sext i32 256 to i64
  %2119 = icmp slt i64 %2115, %2118
  %2120 = bitcast i64* %shadow to i32*
  %safe.466 = or i1 %2117, %2119
  %select.ptr.467 = select i1 %safe.466, i32* %2116, i32* %2120
  %2121 = load i32, i32* %select.ptr.467, align 4
  %2122 = xor i32 %2113, %2121
  %2123 = getelementptr inbounds i32, i32* %0, i64 49
  %2124 = load i1, i1* %out.10
  %2125 = icmp slt i64 49, %N
  %2126 = bitcast i64* %shadow to i32*
  %safe.468 = or i1 %2124, %2125
  %select.ptr.469 = select i1 %safe.468, i32* %2123, i32* %2126
  %2127 = load i32, i32* %select.ptr.469, align 4
  %2128 = xor i32 %2122, %2127
  %2129 = lshr i32 %1997, 24
  %2130 = zext i32 %2129 to i64
  %2131 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2130
  %2132 = load i1, i1* %out.10
  %2133 = sext i32 256 to i64
  %2134 = icmp slt i64 %2130, %2133
  %2135 = bitcast i64* %shadow to i32*
  %safe.470 = or i1 %2132, %2134
  %select.ptr.471 = select i1 %safe.470, i32* %2131, i32* %2135
  %2136 = load i32, i32* %select.ptr.471, align 4
  %2137 = lshr i32 %2040, 16
  %2138 = and i32 %2137, 255
  %2139 = zext i32 %2138 to i64
  %2140 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2139
  %2141 = load i1, i1* %out.10
  %2142 = sext i32 256 to i64
  %2143 = icmp slt i64 %2139, %2142
  %2144 = bitcast i64* %shadow to i32*
  %safe.472 = or i1 %2141, %2143
  %select.ptr.473 = select i1 %safe.472, i32* %2140, i32* %2144
  %2145 = load i32, i32* %select.ptr.473, align 4
  %2146 = xor i32 %2136, %2145
  %2147 = lshr i32 %1911, 8
  %2148 = and i32 %2147, 255
  %2149 = zext i32 %2148 to i64
  %2150 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2149
  %2151 = load i1, i1* %out.10
  %2152 = sext i32 256 to i64
  %2153 = icmp slt i64 %2149, %2152
  %2154 = bitcast i64* %shadow to i32*
  %safe.474 = or i1 %2151, %2153
  %select.ptr.475 = select i1 %safe.474, i32* %2150, i32* %2154
  %2155 = load i32, i32* %select.ptr.475, align 4
  %2156 = xor i32 %2146, %2155
  %2157 = and i32 %1954, 255
  %2158 = zext i32 %2157 to i64
  %2159 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2158
  %2160 = load i1, i1* %out.10
  %2161 = sext i32 256 to i64
  %2162 = icmp slt i64 %2158, %2161
  %2163 = bitcast i64* %shadow to i32*
  %safe.476 = or i1 %2160, %2162
  %select.ptr.477 = select i1 %safe.476, i32* %2159, i32* %2163
  %2164 = load i32, i32* %select.ptr.477, align 4
  %2165 = xor i32 %2156, %2164
  %2166 = getelementptr inbounds i32, i32* %0, i64 50
  %2167 = load i1, i1* %out.10
  %2168 = icmp slt i64 50, %N
  %2169 = bitcast i64* %shadow to i32*
  %safe.478 = or i1 %2167, %2168
  %select.ptr.479 = select i1 %safe.478, i32* %2166, i32* %2169
  %2170 = load i32, i32* %select.ptr.479, align 4
  %2171 = xor i32 %2165, %2170
  %2172 = lshr i32 %2040, 24
  %2173 = zext i32 %2172 to i64
  %2174 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2173
  %2175 = load i1, i1* %out.10
  %2176 = sext i32 256 to i64
  %2177 = icmp slt i64 %2173, %2176
  %2178 = bitcast i64* %shadow to i32*
  %safe.480 = or i1 %2175, %2177
  %select.ptr.481 = select i1 %safe.480, i32* %2174, i32* %2178
  %2179 = load i32, i32* %select.ptr.481, align 4
  %2180 = lshr i32 %1911, 16
  %2181 = and i32 %2180, 255
  %2182 = zext i32 %2181 to i64
  %2183 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2182
  %2184 = load i1, i1* %out.10
  %2185 = sext i32 256 to i64
  %2186 = icmp slt i64 %2182, %2185
  %2187 = bitcast i64* %shadow to i32*
  %safe.482 = or i1 %2184, %2186
  %select.ptr.483 = select i1 %safe.482, i32* %2183, i32* %2187
  %2188 = load i32, i32* %select.ptr.483, align 4
  %2189 = xor i32 %2179, %2188
  %2190 = lshr i32 %1954, 8
  %2191 = and i32 %2190, 255
  %2192 = zext i32 %2191 to i64
  %2193 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2192
  %2194 = load i1, i1* %out.10
  %2195 = sext i32 256 to i64
  %2196 = icmp slt i64 %2192, %2195
  %2197 = bitcast i64* %shadow to i32*
  %safe.484 = or i1 %2194, %2196
  %select.ptr.485 = select i1 %safe.484, i32* %2193, i32* %2197
  %2198 = load i32, i32* %select.ptr.485, align 4
  %2199 = xor i32 %2189, %2198
  %2200 = and i32 %1997, 255
  %2201 = zext i32 %2200 to i64
  %2202 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2201
  %2203 = load i1, i1* %out.10
  %2204 = sext i32 256 to i64
  %2205 = icmp slt i64 %2201, %2204
  %2206 = bitcast i64* %shadow to i32*
  %safe.486 = or i1 %2203, %2205
  %select.ptr.487 = select i1 %safe.486, i32* %2202, i32* %2206
  %2207 = load i32, i32* %select.ptr.487, align 4
  %2208 = xor i32 %2199, %2207
  %2209 = getelementptr inbounds i32, i32* %0, i64 51
  %2210 = load i1, i1* %out.10
  %2211 = icmp slt i64 51, %N
  %2212 = bitcast i64* %shadow to i32*
  %safe.488 = or i1 %2210, %2211
  %select.ptr.489 = select i1 %safe.488, i32* %2209, i32* %2212
  %2213 = load i32, i32* %select.ptr.489, align 4
  %2214 = xor i32 %2208, %2213
  %2215 = lshr i32 %2085, 24
  %2216 = zext i32 %2215 to i64
  %2217 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2216
  %2218 = load i1, i1* %out.10
  %2219 = sext i32 256 to i64
  %2220 = icmp slt i64 %2216, %2219
  %2221 = bitcast i64* %shadow to i32*
  %safe.490 = or i1 %2218, %2220
  %select.ptr.491 = select i1 %safe.490, i32* %2217, i32* %2221
  %2222 = load i32, i32* %select.ptr.491, align 4
  %2223 = lshr i32 %2128, 16
  %2224 = and i32 %2223, 255
  %2225 = zext i32 %2224 to i64
  %2226 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2225
  %2227 = load i1, i1* %out.10
  %2228 = sext i32 256 to i64
  %2229 = icmp slt i64 %2225, %2228
  %2230 = bitcast i64* %shadow to i32*
  %safe.492 = or i1 %2227, %2229
  %select.ptr.493 = select i1 %safe.492, i32* %2226, i32* %2230
  %2231 = load i32, i32* %select.ptr.493, align 4
  %2232 = xor i32 %2222, %2231
  %2233 = lshr i32 %2171, 8
  %2234 = and i32 %2233, 255
  %2235 = zext i32 %2234 to i64
  %2236 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2235
  %2237 = load i1, i1* %out.10
  %2238 = sext i32 256 to i64
  %2239 = icmp slt i64 %2235, %2238
  %2240 = bitcast i64* %shadow to i32*
  %safe.494 = or i1 %2237, %2239
  %select.ptr.495 = select i1 %safe.494, i32* %2236, i32* %2240
  %2241 = load i32, i32* %select.ptr.495, align 4
  %2242 = xor i32 %2232, %2241
  %2243 = and i32 %2214, 255
  %2244 = zext i32 %2243 to i64
  %2245 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2244
  %2246 = load i1, i1* %out.10
  %2247 = sext i32 256 to i64
  %2248 = icmp slt i64 %2244, %2247
  %2249 = bitcast i64* %shadow to i32*
  %safe.496 = or i1 %2246, %2248
  %select.ptr.497 = select i1 %safe.496, i32* %2245, i32* %2249
  %2250 = load i32, i32* %select.ptr.497, align 4
  %2251 = xor i32 %2242, %2250
  %2252 = getelementptr inbounds i32, i32* %0, i64 52
  %2253 = load i1, i1* %out.10
  %2254 = icmp slt i64 52, %N
  %2255 = bitcast i64* %shadow to i32*
  %safe.498 = or i1 %2253, %2254
  %select.ptr.499 = select i1 %safe.498, i32* %2252, i32* %2255
  %2256 = load i32, i32* %select.ptr.499, align 4
  %2257 = xor i32 %2251, %2256
  %2258 = lshr i32 %2128, 24
  %2259 = zext i32 %2258 to i64
  %2260 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2259
  %2261 = load i1, i1* %out.10
  %2262 = sext i32 256 to i64
  %2263 = icmp slt i64 %2259, %2262
  %2264 = bitcast i64* %shadow to i32*
  %safe.500 = or i1 %2261, %2263
  %select.ptr.501 = select i1 %safe.500, i32* %2260, i32* %2264
  %2265 = load i32, i32* %select.ptr.501, align 4
  %2266 = lshr i32 %2171, 16
  %2267 = and i32 %2266, 255
  %2268 = zext i32 %2267 to i64
  %2269 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2268
  %2270 = load i1, i1* %out.10
  %2271 = sext i32 256 to i64
  %2272 = icmp slt i64 %2268, %2271
  %2273 = bitcast i64* %shadow to i32*
  %safe.502 = or i1 %2270, %2272
  %select.ptr.503 = select i1 %safe.502, i32* %2269, i32* %2273
  %2274 = load i32, i32* %select.ptr.503, align 4
  %2275 = xor i32 %2265, %2274
  %2276 = lshr i32 %2214, 8
  %2277 = and i32 %2276, 255
  %2278 = zext i32 %2277 to i64
  %2279 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2278
  %2280 = load i1, i1* %out.10
  %2281 = sext i32 256 to i64
  %2282 = icmp slt i64 %2278, %2281
  %2283 = bitcast i64* %shadow to i32*
  %safe.504 = or i1 %2280, %2282
  %select.ptr.505 = select i1 %safe.504, i32* %2279, i32* %2283
  %2284 = load i32, i32* %select.ptr.505, align 4
  %2285 = xor i32 %2275, %2284
  %2286 = and i32 %2085, 255
  %2287 = zext i32 %2286 to i64
  %2288 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2287
  %2289 = load i1, i1* %out.10
  %2290 = sext i32 256 to i64
  %2291 = icmp slt i64 %2287, %2290
  %2292 = bitcast i64* %shadow to i32*
  %safe.506 = or i1 %2289, %2291
  %select.ptr.507 = select i1 %safe.506, i32* %2288, i32* %2292
  %2293 = load i32, i32* %select.ptr.507, align 4
  %2294 = xor i32 %2285, %2293
  %2295 = getelementptr inbounds i32, i32* %0, i64 53
  %2296 = load i1, i1* %out.10
  %2297 = icmp slt i64 53, %N
  %2298 = bitcast i64* %shadow to i32*
  %safe.508 = or i1 %2296, %2297
  %select.ptr.509 = select i1 %safe.508, i32* %2295, i32* %2298
  %2299 = load i32, i32* %select.ptr.509, align 4
  %2300 = xor i32 %2294, %2299
  %2301 = lshr i32 %2171, 24
  %2302 = zext i32 %2301 to i64
  %2303 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2302
  %2304 = load i1, i1* %out.10
  %2305 = sext i32 256 to i64
  %2306 = icmp slt i64 %2302, %2305
  %2307 = bitcast i64* %shadow to i32*
  %safe.510 = or i1 %2304, %2306
  %select.ptr.511 = select i1 %safe.510, i32* %2303, i32* %2307
  %2308 = load i32, i32* %select.ptr.511, align 4
  %2309 = lshr i32 %2214, 16
  %2310 = and i32 %2309, 255
  %2311 = zext i32 %2310 to i64
  %2312 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2311
  %2313 = load i1, i1* %out.10
  %2314 = sext i32 256 to i64
  %2315 = icmp slt i64 %2311, %2314
  %2316 = bitcast i64* %shadow to i32*
  %safe.512 = or i1 %2313, %2315
  %select.ptr.513 = select i1 %safe.512, i32* %2312, i32* %2316
  %2317 = load i32, i32* %select.ptr.513, align 4
  %2318 = xor i32 %2308, %2317
  %2319 = lshr i32 %2085, 8
  %2320 = and i32 %2319, 255
  %2321 = zext i32 %2320 to i64
  %2322 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2321
  %2323 = load i1, i1* %out.10
  %2324 = sext i32 256 to i64
  %2325 = icmp slt i64 %2321, %2324
  %2326 = bitcast i64* %shadow to i32*
  %safe.514 = or i1 %2323, %2325
  %select.ptr.515 = select i1 %safe.514, i32* %2322, i32* %2326
  %2327 = load i32, i32* %select.ptr.515, align 4
  %2328 = xor i32 %2318, %2327
  %2329 = and i32 %2128, 255
  %2330 = zext i32 %2329 to i64
  %2331 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2330
  %2332 = load i1, i1* %out.10
  %2333 = sext i32 256 to i64
  %2334 = icmp slt i64 %2330, %2333
  %2335 = bitcast i64* %shadow to i32*
  %safe.516 = or i1 %2332, %2334
  %select.ptr.517 = select i1 %safe.516, i32* %2331, i32* %2335
  %2336 = load i32, i32* %select.ptr.517, align 4
  %2337 = xor i32 %2328, %2336
  %2338 = getelementptr inbounds i32, i32* %0, i64 54
  %2339 = load i1, i1* %out.10
  %2340 = icmp slt i64 54, %N
  %2341 = bitcast i64* %shadow to i32*
  %safe.518 = or i1 %2339, %2340
  %select.ptr.519 = select i1 %safe.518, i32* %2338, i32* %2341
  %2342 = load i32, i32* %select.ptr.519, align 4
  %2343 = xor i32 %2337, %2342
  %2344 = lshr i32 %2214, 24
  %2345 = zext i32 %2344 to i64
  %2346 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2345
  %2347 = load i1, i1* %out.10
  %2348 = sext i32 256 to i64
  %2349 = icmp slt i64 %2345, %2348
  %2350 = bitcast i64* %shadow to i32*
  %safe.520 = or i1 %2347, %2349
  %select.ptr.521 = select i1 %safe.520, i32* %2346, i32* %2350
  %2351 = load i32, i32* %select.ptr.521, align 4
  %2352 = lshr i32 %2085, 16
  %2353 = and i32 %2352, 255
  %2354 = zext i32 %2353 to i64
  %2355 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2354
  %2356 = load i1, i1* %out.10
  %2357 = sext i32 256 to i64
  %2358 = icmp slt i64 %2354, %2357
  %2359 = bitcast i64* %shadow to i32*
  %safe.522 = or i1 %2356, %2358
  %select.ptr.523 = select i1 %safe.522, i32* %2355, i32* %2359
  %2360 = load i32, i32* %select.ptr.523, align 4
  %2361 = xor i32 %2351, %2360
  %2362 = lshr i32 %2128, 8
  %2363 = and i32 %2362, 255
  %2364 = zext i32 %2363 to i64
  %2365 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2364
  %2366 = load i1, i1* %out.10
  %2367 = sext i32 256 to i64
  %2368 = icmp slt i64 %2364, %2367
  %2369 = bitcast i64* %shadow to i32*
  %safe.524 = or i1 %2366, %2368
  %select.ptr.525 = select i1 %safe.524, i32* %2365, i32* %2369
  %2370 = load i32, i32* %select.ptr.525, align 4
  %2371 = xor i32 %2361, %2370
  %2372 = and i32 %2171, 255
  %2373 = zext i32 %2372 to i64
  %2374 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2373
  %2375 = load i1, i1* %out.10
  %2376 = sext i32 256 to i64
  %2377 = icmp slt i64 %2373, %2376
  %2378 = bitcast i64* %shadow to i32*
  %safe.526 = or i1 %2375, %2377
  %select.ptr.527 = select i1 %safe.526, i32* %2374, i32* %2378
  %2379 = load i32, i32* %select.ptr.527, align 4
  %2380 = xor i32 %2371, %2379
  %2381 = getelementptr inbounds i32, i32* %0, i64 55
  %2382 = load i1, i1* %out.10
  %2383 = icmp slt i64 55, %N
  %2384 = bitcast i64* %shadow to i32*
  %safe.528 = or i1 %2382, %2383
  %select.ptr.529 = select i1 %safe.528, i32* %2381, i32* %2384
  %2385 = load i32, i32* %select.ptr.529, align 4
  %2386 = xor i32 %2380, %2385
  %2387 = load i1, i1* %out.8
  %2388 = xor i1 %1695, true
  %in.22 = and i1 %2387, %2388
  %2389 = load i1, i1* %out.9
  %2390 = xor i1 %2041, true
  %in.21 = and i1 %2389, %2390
  %2391 = load i1, i1* %out.10
  %2392 = select i1 %in.21, i32 %1911, i32 %2257
  %select.phi.620 = select i1 %in.22, i32 %1565, i32 %2392
  %2393 = select i1 %in.21, i32 %1954, i32 %2300
  %select.phi.619 = select i1 %in.22, i32 %1608, i32 %2393
  %2394 = select i1 %in.21, i32 %1997, i32 %2343
  %select.phi.618 = select i1 %in.22, i32 %1651, i32 %2394
  %2395 = select i1 %in.21, i32 %2040, i32 %2386
  %select.phi.617 = select i1 %in.22, i32 %1694, i32 %2395
  %2396 = or i1 %in.22, %in.21
  %2397 = or i1 %2396, %2391
  store i1 %2397, i1* %out.11
  %2398 = shl i32 %1, 2
  %2399 = sext i32 %2398 to i64
  %2400 = getelementptr inbounds i32, i32* %0, i64 %2399
  %2401 = lshr i32 %select.phi.620, 24
  %2402 = zext i32 %2401 to i64
  %2403 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2402
  %2404 = load i1, i1* %out.11
  %2405 = sext i32 256 to i64
  %2406 = icmp slt i64 %2402, %2405
  %2407 = bitcast i64* %shadow to i32*
  %safe.530 = or i1 %2404, %2406
  %select.ptr.531 = select i1 %safe.530, i32* %2403, i32* %2407
  %2408 = load i32, i32* %select.ptr.531, align 4
  %2409 = and i32 %2408, -16777216
  %2410 = lshr i32 %select.phi.619, 16
  %2411 = and i32 %2410, 255
  %2412 = zext i32 %2411 to i64
  %2413 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2412
  %2414 = load i1, i1* %out.11
  %2415 = sext i32 256 to i64
  %2416 = icmp slt i64 %2412, %2415
  %2417 = bitcast i64* %shadow to i32*
  %safe.532 = or i1 %2414, %2416
  %select.ptr.533 = select i1 %safe.532, i32* %2413, i32* %2417
  %2418 = load i32, i32* %select.ptr.533, align 4
  %2419 = and i32 %2418, 16711680
  %2420 = xor i32 %2409, %2419
  %2421 = lshr i32 %select.phi.618, 8
  %2422 = and i32 %2421, 255
  %2423 = zext i32 %2422 to i64
  %2424 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2423
  %2425 = load i1, i1* %out.11
  %2426 = sext i32 256 to i64
  %2427 = icmp slt i64 %2423, %2426
  %2428 = bitcast i64* %shadow to i32*
  %safe.534 = or i1 %2425, %2427
  %select.ptr.535 = select i1 %safe.534, i32* %2424, i32* %2428
  %2429 = load i32, i32* %select.ptr.535, align 4
  %2430 = and i32 %2429, 65280
  %2431 = xor i32 %2420, %2430
  %2432 = and i32 %select.phi.617, 255
  %2433 = zext i32 %2432 to i64
  %2434 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2433
  %2435 = load i1, i1* %out.11
  %2436 = sext i32 256 to i64
  %2437 = icmp slt i64 %2433, %2436
  %2438 = bitcast i64* %shadow to i32*
  %safe.536 = or i1 %2435, %2437
  %select.ptr.537 = select i1 %safe.536, i32* %2434, i32* %2438
  %2439 = load i32, i32* %select.ptr.537, align 4
  %2440 = and i32 %2439, 255
  %2441 = xor i32 %2431, %2440
  %2442 = getelementptr inbounds i32, i32* %2400, i64 0
  %2443 = load i1, i1* %out.11
  %2444 = icmp slt i64 0, %N
  %2445 = bitcast i64* %shadow to i32*
  %safe.538 = or i1 %2443, %2444
  %select.ptr.539 = select i1 %safe.538, i32* %2442, i32* %2445
  %2446 = load i32, i32* %select.ptr.539, align 4
  %2447 = xor i32 %2441, %2446
  %2448 = lshr i32 %2447, 24
  %2449 = trunc i32 %2448 to i8
  %2450 = getelementptr inbounds i8, i8* %3, i64 0
  %2451 = load i1, i1* %out.11
  %2452 = icmp slt i64 0, %N2
  %2453 = bitcast i64* %shadow to i8*
  %safe.540 = or i1 %2451, %2452
  %select.ptr.541 = select i1 %safe.540, i8* %2450, i8* %2453
  %2454 = load i8, i8* %2450
  %select.val. = select i1 %2451, i8 %2449, i8 %2454
  store i8 %select.val., i8* %select.ptr.541, align 1
  %2455 = lshr i32 %2447, 16
  %2456 = trunc i32 %2455 to i8
  %2457 = getelementptr inbounds i8, i8* %3, i64 1
  %2458 = load i1, i1* %out.11
  %2459 = icmp slt i64 1, %N2
  %2460 = bitcast i64* %shadow to i8*
  %safe.542 = or i1 %2458, %2459
  %select.ptr.543 = select i1 %safe.542, i8* %2457, i8* %2460
  %2461 = load i8, i8* %2457
  %select.val.544 = select i1 %2458, i8 %2456, i8 %2461
  store i8 %select.val.544, i8* %select.ptr.543, align 1
  %2462 = lshr i32 %2447, 8
  %2463 = trunc i32 %2462 to i8
  %2464 = getelementptr inbounds i8, i8* %3, i64 2
  %2465 = load i1, i1* %out.11
  %2466 = icmp slt i64 2, %N2
  %2467 = bitcast i64* %shadow to i8*
  %safe.545 = or i1 %2465, %2466
  %select.ptr.546 = select i1 %safe.545, i8* %2464, i8* %2467
  %2468 = load i8, i8* %2464
  %select.val.547 = select i1 %2465, i8 %2463, i8 %2468
  store i8 %select.val.547, i8* %select.ptr.546, align 1
  %2469 = trunc i32 %2447 to i8
  %2470 = getelementptr inbounds i8, i8* %3, i64 3
  %2471 = load i1, i1* %out.11
  %2472 = icmp slt i64 3, %N2
  %2473 = bitcast i64* %shadow to i8*
  %safe.548 = or i1 %2471, %2472
  %select.ptr.549 = select i1 %safe.548, i8* %2470, i8* %2473
  %2474 = load i8, i8* %2470
  %select.val.550 = select i1 %2471, i8 %2469, i8 %2474
  store i8 %select.val.550, i8* %select.ptr.549, align 1
  %2475 = lshr i32 %select.phi.619, 24
  %2476 = zext i32 %2475 to i64
  %2477 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2476
  %2478 = load i1, i1* %out.11
  %2479 = sext i32 256 to i64
  %2480 = icmp slt i64 %2476, %2479
  %2481 = bitcast i64* %shadow to i32*
  %safe.551 = or i1 %2478, %2480
  %select.ptr.552 = select i1 %safe.551, i32* %2477, i32* %2481
  %2482 = load i32, i32* %select.ptr.552, align 4
  %2483 = and i32 %2482, -16777216
  %2484 = lshr i32 %select.phi.618, 16
  %2485 = and i32 %2484, 255
  %2486 = zext i32 %2485 to i64
  %2487 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2486
  %2488 = load i1, i1* %out.11
  %2489 = sext i32 256 to i64
  %2490 = icmp slt i64 %2486, %2489
  %2491 = bitcast i64* %shadow to i32*
  %safe.553 = or i1 %2488, %2490
  %select.ptr.554 = select i1 %safe.553, i32* %2487, i32* %2491
  %2492 = load i32, i32* %select.ptr.554, align 4
  %2493 = and i32 %2492, 16711680
  %2494 = xor i32 %2483, %2493
  %2495 = lshr i32 %select.phi.617, 8
  %2496 = and i32 %2495, 255
  %2497 = zext i32 %2496 to i64
  %2498 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2497
  %2499 = load i1, i1* %out.11
  %2500 = sext i32 256 to i64
  %2501 = icmp slt i64 %2497, %2500
  %2502 = bitcast i64* %shadow to i32*
  %safe.555 = or i1 %2499, %2501
  %select.ptr.556 = select i1 %safe.555, i32* %2498, i32* %2502
  %2503 = load i32, i32* %select.ptr.556, align 4
  %2504 = and i32 %2503, 65280
  %2505 = xor i32 %2494, %2504
  %2506 = and i32 %select.phi.620, 255
  %2507 = zext i32 %2506 to i64
  %2508 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2507
  %2509 = load i1, i1* %out.11
  %2510 = sext i32 256 to i64
  %2511 = icmp slt i64 %2507, %2510
  %2512 = bitcast i64* %shadow to i32*
  %safe.557 = or i1 %2509, %2511
  %select.ptr.558 = select i1 %safe.557, i32* %2508, i32* %2512
  %2513 = load i32, i32* %select.ptr.558, align 4
  %2514 = and i32 %2513, 255
  %2515 = xor i32 %2505, %2514
  %2516 = getelementptr inbounds i32, i32* %2400, i64 1
  %2517 = load i1, i1* %out.11
  %2518 = icmp slt i64 1, %N
  %2519 = bitcast i64* %shadow to i32*
  %safe.559 = or i1 %2517, %2518
  %select.ptr.560 = select i1 %safe.559, i32* %2516, i32* %2519
  %2520 = load i32, i32* %select.ptr.560, align 4
  %2521 = xor i32 %2515, %2520
  %2522 = lshr i32 %2521, 24
  %2523 = trunc i32 %2522 to i8
  %2524 = getelementptr inbounds i8, i8* %3, i64 4
  %2525 = getelementptr inbounds i8, i8* %2524, i64 0
  %2526 = load i1, i1* %out.11
  %2527 = icmp slt i64 0, %N2
  %2528 = bitcast i64* %shadow to i8*
  %safe.561 = or i1 %2526, %2527
  %select.ptr.562 = select i1 %safe.561, i8* %2525, i8* %2528
  %2529 = load i8, i8* %2525
  %select.val.563 = select i1 %2526, i8 %2523, i8 %2529
  store i8 %select.val.563, i8* %select.ptr.562, align 1
  %2530 = lshr i32 %2521, 16
  %2531 = trunc i32 %2530 to i8
  %2532 = getelementptr inbounds i8, i8* %3, i64 4
  %2533 = getelementptr inbounds i8, i8* %2532, i64 1
  %2534 = load i1, i1* %out.11
  %2535 = icmp slt i64 1, %N2
  %2536 = bitcast i64* %shadow to i8*
  %safe.564 = or i1 %2534, %2535
  %select.ptr.565 = select i1 %safe.564, i8* %2533, i8* %2536
  %2537 = load i8, i8* %2533
  %select.val.566 = select i1 %2534, i8 %2531, i8 %2537
  store i8 %select.val.566, i8* %select.ptr.565, align 1
  %2538 = lshr i32 %2521, 8
  %2539 = trunc i32 %2538 to i8
  %2540 = getelementptr inbounds i8, i8* %3, i64 4
  %2541 = getelementptr inbounds i8, i8* %2540, i64 2
  %2542 = load i1, i1* %out.11
  %2543 = icmp slt i64 2, %N2
  %2544 = bitcast i64* %shadow to i8*
  %safe.567 = or i1 %2542, %2543
  %select.ptr.568 = select i1 %safe.567, i8* %2541, i8* %2544
  %2545 = load i8, i8* %2541
  %select.val.569 = select i1 %2542, i8 %2539, i8 %2545
  store i8 %select.val.569, i8* %select.ptr.568, align 1
  %2546 = trunc i32 %2521 to i8
  %2547 = getelementptr inbounds i8, i8* %3, i64 4
  %2548 = getelementptr inbounds i8, i8* %2547, i64 3
  %2549 = load i1, i1* %out.11
  %2550 = icmp slt i64 3, %N2
  %2551 = bitcast i64* %shadow to i8*
  %safe.570 = or i1 %2549, %2550
  %select.ptr.571 = select i1 %safe.570, i8* %2548, i8* %2551
  %2552 = load i8, i8* %2548
  %select.val.572 = select i1 %2549, i8 %2546, i8 %2552
  store i8 %select.val.572, i8* %select.ptr.571, align 1
  %2553 = lshr i32 %select.phi.618, 24
  %2554 = zext i32 %2553 to i64
  %2555 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2554
  %2556 = load i1, i1* %out.11
  %2557 = sext i32 256 to i64
  %2558 = icmp slt i64 %2554, %2557
  %2559 = bitcast i64* %shadow to i32*
  %safe.573 = or i1 %2556, %2558
  %select.ptr.574 = select i1 %safe.573, i32* %2555, i32* %2559
  %2560 = load i32, i32* %select.ptr.574, align 4
  %2561 = and i32 %2560, -16777216
  %2562 = lshr i32 %select.phi.617, 16
  %2563 = and i32 %2562, 255
  %2564 = zext i32 %2563 to i64
  %2565 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2564
  %2566 = load i1, i1* %out.11
  %2567 = sext i32 256 to i64
  %2568 = icmp slt i64 %2564, %2567
  %2569 = bitcast i64* %shadow to i32*
  %safe.575 = or i1 %2566, %2568
  %select.ptr.576 = select i1 %safe.575, i32* %2565, i32* %2569
  %2570 = load i32, i32* %select.ptr.576, align 4
  %2571 = and i32 %2570, 16711680
  %2572 = xor i32 %2561, %2571
  %2573 = lshr i32 %select.phi.620, 8
  %2574 = and i32 %2573, 255
  %2575 = zext i32 %2574 to i64
  %2576 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2575
  %2577 = load i1, i1* %out.11
  %2578 = sext i32 256 to i64
  %2579 = icmp slt i64 %2575, %2578
  %2580 = bitcast i64* %shadow to i32*
  %safe.577 = or i1 %2577, %2579
  %select.ptr.578 = select i1 %safe.577, i32* %2576, i32* %2580
  %2581 = load i32, i32* %select.ptr.578, align 4
  %2582 = and i32 %2581, 65280
  %2583 = xor i32 %2572, %2582
  %2584 = and i32 %select.phi.619, 255
  %2585 = zext i32 %2584 to i64
  %2586 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2585
  %2587 = load i1, i1* %out.11
  %2588 = sext i32 256 to i64
  %2589 = icmp slt i64 %2585, %2588
  %2590 = bitcast i64* %shadow to i32*
  %safe.579 = or i1 %2587, %2589
  %select.ptr.580 = select i1 %safe.579, i32* %2586, i32* %2590
  %2591 = load i32, i32* %select.ptr.580, align 4
  %2592 = and i32 %2591, 255
  %2593 = xor i32 %2583, %2592
  %2594 = getelementptr inbounds i32, i32* %2400, i64 2
  %2595 = load i1, i1* %out.11
  %2596 = icmp slt i64 2, %N
  %2597 = bitcast i64* %shadow to i32*
  %safe.581 = or i1 %2595, %2596
  %select.ptr.582 = select i1 %safe.581, i32* %2594, i32* %2597
  %2598 = load i32, i32* %select.ptr.582, align 4
  %2599 = xor i32 %2593, %2598
  %2600 = lshr i32 %2599, 24
  %2601 = trunc i32 %2600 to i8
  %2602 = getelementptr inbounds i8, i8* %3, i64 8
  %2603 = getelementptr inbounds i8, i8* %2602, i64 0
  %2604 = load i1, i1* %out.11
  %2605 = icmp slt i64 0, %N2
  %2606 = bitcast i64* %shadow to i8*
  %safe.583 = or i1 %2604, %2605
  %select.ptr.584 = select i1 %safe.583, i8* %2603, i8* %2606
  %2607 = load i8, i8* %2603
  %select.val.585 = select i1 %2604, i8 %2601, i8 %2607
  store i8 %select.val.585, i8* %select.ptr.584, align 1
  %2608 = lshr i32 %2599, 16
  %2609 = trunc i32 %2608 to i8
  %2610 = getelementptr inbounds i8, i8* %3, i64 8
  %2611 = getelementptr inbounds i8, i8* %2610, i64 1
  %2612 = load i1, i1* %out.11
  %2613 = icmp slt i64 1, %N2
  %2614 = bitcast i64* %shadow to i8*
  %safe.586 = or i1 %2612, %2613
  %select.ptr.587 = select i1 %safe.586, i8* %2611, i8* %2614
  %2615 = load i8, i8* %2611
  %select.val.588 = select i1 %2612, i8 %2609, i8 %2615
  store i8 %select.val.588, i8* %select.ptr.587, align 1
  %2616 = lshr i32 %2599, 8
  %2617 = trunc i32 %2616 to i8
  %2618 = getelementptr inbounds i8, i8* %3, i64 8
  %2619 = getelementptr inbounds i8, i8* %2618, i64 2
  %2620 = load i1, i1* %out.11
  %2621 = icmp slt i64 2, %N2
  %2622 = bitcast i64* %shadow to i8*
  %safe.589 = or i1 %2620, %2621
  %select.ptr.590 = select i1 %safe.589, i8* %2619, i8* %2622
  %2623 = load i8, i8* %2619
  %select.val.591 = select i1 %2620, i8 %2617, i8 %2623
  store i8 %select.val.591, i8* %select.ptr.590, align 1
  %2624 = trunc i32 %2599 to i8
  %2625 = getelementptr inbounds i8, i8* %3, i64 8
  %2626 = getelementptr inbounds i8, i8* %2625, i64 3
  %2627 = load i1, i1* %out.11
  %2628 = icmp slt i64 3, %N2
  %2629 = bitcast i64* %shadow to i8*
  %safe.592 = or i1 %2627, %2628
  %select.ptr.593 = select i1 %safe.592, i8* %2626, i8* %2629
  %2630 = load i8, i8* %2626
  %select.val.594 = select i1 %2627, i8 %2624, i8 %2630
  store i8 %select.val.594, i8* %select.ptr.593, align 1
  %2631 = lshr i32 %select.phi.617, 24
  %2632 = zext i32 %2631 to i64
  %2633 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2632
  %2634 = load i1, i1* %out.11
  %2635 = sext i32 256 to i64
  %2636 = icmp slt i64 %2632, %2635
  %2637 = bitcast i64* %shadow to i32*
  %safe.595 = or i1 %2634, %2636
  %select.ptr.596 = select i1 %safe.595, i32* %2633, i32* %2637
  %2638 = load i32, i32* %select.ptr.596, align 4
  %2639 = and i32 %2638, -16777216
  %2640 = lshr i32 %select.phi.620, 16
  %2641 = and i32 %2640, 255
  %2642 = zext i32 %2641 to i64
  %2643 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2642
  %2644 = load i1, i1* %out.11
  %2645 = sext i32 256 to i64
  %2646 = icmp slt i64 %2642, %2645
  %2647 = bitcast i64* %shadow to i32*
  %safe.597 = or i1 %2644, %2646
  %select.ptr.598 = select i1 %safe.597, i32* %2643, i32* %2647
  %2648 = load i32, i32* %select.ptr.598, align 4
  %2649 = and i32 %2648, 16711680
  %2650 = xor i32 %2639, %2649
  %2651 = lshr i32 %select.phi.619, 8
  %2652 = and i32 %2651, 255
  %2653 = zext i32 %2652 to i64
  %2654 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2653
  %2655 = load i1, i1* %out.11
  %2656 = sext i32 256 to i64
  %2657 = icmp slt i64 %2653, %2656
  %2658 = bitcast i64* %shadow to i32*
  %safe.599 = or i1 %2655, %2657
  %select.ptr.600 = select i1 %safe.599, i32* %2654, i32* %2658
  %2659 = load i32, i32* %select.ptr.600, align 4
  %2660 = and i32 %2659, 65280
  %2661 = xor i32 %2650, %2660
  %2662 = and i32 %select.phi.618, 255
  %2663 = zext i32 %2662 to i64
  %2664 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2663
  %2665 = load i1, i1* %out.11
  %2666 = sext i32 256 to i64
  %2667 = icmp slt i64 %2663, %2666
  %2668 = bitcast i64* %shadow to i32*
  %safe.601 = or i1 %2665, %2667
  %select.ptr.602 = select i1 %safe.601, i32* %2664, i32* %2668
  %2669 = load i32, i32* %select.ptr.602, align 4
  %2670 = and i32 %2669, 255
  %2671 = xor i32 %2661, %2670
  %2672 = getelementptr inbounds i32, i32* %2400, i64 3
  %2673 = load i1, i1* %out.11
  %2674 = icmp slt i64 3, %N
  %2675 = bitcast i64* %shadow to i32*
  %safe.603 = or i1 %2673, %2674
  %select.ptr.604 = select i1 %safe.603, i32* %2672, i32* %2675
  %2676 = load i32, i32* %select.ptr.604, align 4
  %2677 = xor i32 %2671, %2676
  %2678 = lshr i32 %2677, 24
  %2679 = trunc i32 %2678 to i8
  %2680 = getelementptr inbounds i8, i8* %3, i64 12
  %2681 = getelementptr inbounds i8, i8* %2680, i64 0
  %2682 = load i1, i1* %out.11
  %2683 = icmp slt i64 0, %N2
  %2684 = bitcast i64* %shadow to i8*
  %safe.605 = or i1 %2682, %2683
  %select.ptr.606 = select i1 %safe.605, i8* %2681, i8* %2684
  %2685 = load i8, i8* %2681
  %select.val.607 = select i1 %2682, i8 %2679, i8 %2685
  store i8 %select.val.607, i8* %select.ptr.606, align 1
  %2686 = lshr i32 %2677, 16
  %2687 = trunc i32 %2686 to i8
  %2688 = getelementptr inbounds i8, i8* %3, i64 12
  %2689 = getelementptr inbounds i8, i8* %2688, i64 1
  %2690 = load i1, i1* %out.11
  %2691 = icmp slt i64 1, %N2
  %2692 = bitcast i64* %shadow to i8*
  %safe.608 = or i1 %2690, %2691
  %select.ptr.609 = select i1 %safe.608, i8* %2689, i8* %2692
  %2693 = load i8, i8* %2689
  %select.val.610 = select i1 %2690, i8 %2687, i8 %2693
  store i8 %select.val.610, i8* %select.ptr.609, align 1
  %2694 = lshr i32 %2677, 8
  %2695 = trunc i32 %2694 to i8
  %2696 = getelementptr inbounds i8, i8* %3, i64 12
  %2697 = getelementptr inbounds i8, i8* %2696, i64 2
  %2698 = load i1, i1* %out.11
  %2699 = icmp slt i64 2, %N2
  %2700 = bitcast i64* %shadow to i8*
  %safe.611 = or i1 %2698, %2699
  %select.ptr.612 = select i1 %safe.611, i8* %2697, i8* %2700
  %2701 = load i8, i8* %2697
  %select.val.613 = select i1 %2698, i8 %2695, i8 %2701
  store i8 %select.val.613, i8* %select.ptr.612, align 1
  %2702 = trunc i32 %2677 to i8
  %2703 = getelementptr inbounds i8, i8* %3, i64 12
  %2704 = getelementptr inbounds i8, i8* %2703, i64 3
  %2705 = load i1, i1* %out.11
  %2706 = icmp slt i64 3, %N2
  %2707 = bitcast i64* %shadow to i8*
  %safe.614 = or i1 %2705, %2706
  %select.ptr.615 = select i1 %safe.614, i8* %2704, i8* %2707
  %2708 = load i8, i8* %2704
  %select.val.616 = select i1 %2705, i8 %2702, i8 %2708
  store i8 %select.val.616, i8* %select.ptr.615, align 1
  ret void
}

define void @rijndaelDecrypt(i32* %0, i64 %N, i32 %1, i8* %2, i64 %N1, i8* %3, i64 %N2) {
  %5 = getelementptr inbounds i8, i8* %2, i64 0
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl i32 %7, 24
  %9 = getelementptr inbounds i8, i8* %2, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl i32 %11, 16
  %13 = xor i32 %8, %12
  %14 = getelementptr inbounds i8, i8* %2, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl i32 %16, 8
  %18 = xor i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %2, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = xor i32 %18, %21
  %23 = getelementptr inbounds i32, i32* %0, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = xor i32 %22, %24
  %26 = getelementptr inbounds i8, i8* %2, i64 4
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl i32 %29, 24
  %31 = getelementptr inbounds i8, i8* %2, i64 4
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl i32 %34, 16
  %36 = xor i32 %30, %35
  %37 = getelementptr inbounds i8, i8* %2, i64 4
  %38 = getelementptr inbounds i8, i8* %37, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl i32 %40, 8
  %42 = xor i32 %36, %41
  %43 = getelementptr inbounds i8, i8* %2, i64 4
  %44 = getelementptr inbounds i8, i8* %43, i64 3
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = xor i32 %42, %46
  %48 = getelementptr inbounds i32, i32* %0, i64 1
  %49 = load i32, i32* %48, align 4
  %50 = xor i32 %47, %49
  %51 = getelementptr inbounds i8, i8* %2, i64 8
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl i32 %54, 24
  %56 = getelementptr inbounds i8, i8* %2, i64 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = shl i32 %59, 16
  %61 = xor i32 %55, %60
  %62 = getelementptr inbounds i8, i8* %2, i64 8
  %63 = getelementptr inbounds i8, i8* %62, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl i32 %65, 8
  %67 = xor i32 %61, %66
  %68 = getelementptr inbounds i8, i8* %2, i64 8
  %69 = getelementptr inbounds i8, i8* %68, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = xor i32 %67, %71
  %73 = getelementptr inbounds i32, i32* %0, i64 2
  %74 = load i32, i32* %73, align 4
  %75 = xor i32 %72, %74
  %76 = getelementptr inbounds i8, i8* %2, i64 12
  %77 = getelementptr inbounds i8, i8* %76, i64 0
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl i32 %79, 24
  %81 = getelementptr inbounds i8, i8* %2, i64 12
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl i32 %84, 16
  %86 = xor i32 %80, %85
  %87 = getelementptr inbounds i8, i8* %2, i64 12
  %88 = getelementptr inbounds i8, i8* %87, i64 2
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl i32 %90, 8
  %92 = xor i32 %86, %91
  %93 = getelementptr inbounds i8, i8* %2, i64 12
  %94 = getelementptr inbounds i8, i8* %93, i64 3
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = xor i32 %92, %96
  %98 = getelementptr inbounds i32, i32* %0, i64 3
  %99 = load i32, i32* %98, align 4
  %100 = xor i32 %97, %99
  %101 = lshr i32 %25, 24
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = lshr i32 %100, 16
  %106 = and i32 %105, 255
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = xor i32 %104, %109
  %111 = lshr i32 %75, 8
  %112 = and i32 %111, 255
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = xor i32 %110, %115
  %117 = and i32 %50, 255
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = xor i32 %116, %120
  %122 = getelementptr inbounds i32, i32* %0, i64 4
  %123 = load i32, i32* %122, align 4
  %124 = xor i32 %121, %123
  %125 = lshr i32 %50, 24
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = lshr i32 %25, 16
  %130 = and i32 %129, 255
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = xor i32 %128, %133
  %135 = lshr i32 %100, 8
  %136 = and i32 %135, 255
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = xor i32 %134, %139
  %141 = and i32 %75, 255
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = xor i32 %140, %144
  %146 = getelementptr inbounds i32, i32* %0, i64 5
  %147 = load i32, i32* %146, align 4
  %148 = xor i32 %145, %147
  %149 = lshr i32 %75, 24
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = lshr i32 %50, 16
  %154 = and i32 %153, 255
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = xor i32 %152, %157
  %159 = lshr i32 %25, 8
  %160 = and i32 %159, 255
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = xor i32 %158, %163
  %165 = and i32 %100, 255
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = xor i32 %164, %168
  %170 = getelementptr inbounds i32, i32* %0, i64 6
  %171 = load i32, i32* %170, align 4
  %172 = xor i32 %169, %171
  %173 = lshr i32 %100, 24
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = lshr i32 %75, 16
  %178 = and i32 %177, 255
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = xor i32 %176, %181
  %183 = lshr i32 %50, 8
  %184 = and i32 %183, 255
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = xor i32 %182, %187
  %189 = and i32 %25, 255
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = xor i32 %188, %192
  %194 = getelementptr inbounds i32, i32* %0, i64 7
  %195 = load i32, i32* %194, align 4
  %196 = xor i32 %193, %195
  %197 = lshr i32 %124, 24
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = lshr i32 %196, 16
  %202 = and i32 %201, 255
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = xor i32 %200, %205
  %207 = lshr i32 %172, 8
  %208 = and i32 %207, 255
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %209
  %211 = load i32, i32* %210, align 4
  %212 = xor i32 %206, %211
  %213 = and i32 %148, 255
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %214
  %216 = load i32, i32* %215, align 4
  %217 = xor i32 %212, %216
  %218 = getelementptr inbounds i32, i32* %0, i64 8
  %219 = load i32, i32* %218, align 4
  %220 = xor i32 %217, %219
  %221 = lshr i32 %148, 24
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = lshr i32 %124, 16
  %226 = and i32 %225, 255
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = xor i32 %224, %229
  %231 = lshr i32 %196, 8
  %232 = and i32 %231, 255
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = xor i32 %230, %235
  %237 = and i32 %172, 255
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = xor i32 %236, %240
  %242 = getelementptr inbounds i32, i32* %0, i64 9
  %243 = load i32, i32* %242, align 4
  %244 = xor i32 %241, %243
  %245 = lshr i32 %172, 24
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = lshr i32 %148, 16
  %250 = and i32 %249, 255
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = xor i32 %248, %253
  %255 = lshr i32 %124, 8
  %256 = and i32 %255, 255
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = xor i32 %254, %259
  %261 = and i32 %196, 255
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %262
  %264 = load i32, i32* %263, align 4
  %265 = xor i32 %260, %264
  %266 = getelementptr inbounds i32, i32* %0, i64 10
  %267 = load i32, i32* %266, align 4
  %268 = xor i32 %265, %267
  %269 = lshr i32 %196, 24
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = lshr i32 %172, 16
  %274 = and i32 %273, 255
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = xor i32 %272, %277
  %279 = lshr i32 %148, 8
  %280 = and i32 %279, 255
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %281
  %283 = load i32, i32* %282, align 4
  %284 = xor i32 %278, %283
  %285 = and i32 %124, 255
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = xor i32 %284, %288
  %290 = getelementptr inbounds i32, i32* %0, i64 11
  %291 = load i32, i32* %290, align 4
  %292 = xor i32 %289, %291
  %293 = lshr i32 %220, 24
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = lshr i32 %292, 16
  %298 = and i32 %297, 255
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = xor i32 %296, %301
  %303 = lshr i32 %268, 8
  %304 = and i32 %303, 255
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = xor i32 %302, %307
  %309 = and i32 %244, 255
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = xor i32 %308, %312
  %314 = getelementptr inbounds i32, i32* %0, i64 12
  %315 = load i32, i32* %314, align 4
  %316 = xor i32 %313, %315
  %317 = lshr i32 %244, 24
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %318
  %320 = load i32, i32* %319, align 4
  %321 = lshr i32 %220, 16
  %322 = and i32 %321, 255
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = xor i32 %320, %325
  %327 = lshr i32 %292, 8
  %328 = and i32 %327, 255
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = xor i32 %326, %331
  %333 = and i32 %268, 255
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %334
  %336 = load i32, i32* %335, align 4
  %337 = xor i32 %332, %336
  %338 = getelementptr inbounds i32, i32* %0, i64 13
  %339 = load i32, i32* %338, align 4
  %340 = xor i32 %337, %339
  %341 = lshr i32 %268, 24
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = lshr i32 %244, 16
  %346 = and i32 %345, 255
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = xor i32 %344, %349
  %351 = lshr i32 %220, 8
  %352 = and i32 %351, 255
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = xor i32 %350, %355
  %357 = and i32 %292, 255
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = xor i32 %356, %360
  %362 = getelementptr inbounds i32, i32* %0, i64 14
  %363 = load i32, i32* %362, align 4
  %364 = xor i32 %361, %363
  %365 = lshr i32 %292, 24
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %366
  %368 = load i32, i32* %367, align 4
  %369 = lshr i32 %268, 16
  %370 = and i32 %369, 255
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = xor i32 %368, %373
  %375 = lshr i32 %244, 8
  %376 = and i32 %375, 255
  %377 = zext i32 %376 to i64
  %378 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %377
  %379 = load i32, i32* %378, align 4
  %380 = xor i32 %374, %379
  %381 = and i32 %220, 255
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = xor i32 %380, %384
  %386 = getelementptr inbounds i32, i32* %0, i64 15
  %387 = load i32, i32* %386, align 4
  %388 = xor i32 %385, %387
  %389 = lshr i32 %316, 24
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %390
  %392 = load i32, i32* %391, align 4
  %393 = lshr i32 %388, 16
  %394 = and i32 %393, 255
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %395
  %397 = load i32, i32* %396, align 4
  %398 = xor i32 %392, %397
  %399 = lshr i32 %364, 8
  %400 = and i32 %399, 255
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = xor i32 %398, %403
  %405 = and i32 %340, 255
  %406 = zext i32 %405 to i64
  %407 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %406
  %408 = load i32, i32* %407, align 4
  %409 = xor i32 %404, %408
  %410 = getelementptr inbounds i32, i32* %0, i64 16
  %411 = load i32, i32* %410, align 4
  %412 = xor i32 %409, %411
  %413 = lshr i32 %340, 24
  %414 = zext i32 %413 to i64
  %415 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %414
  %416 = load i32, i32* %415, align 4
  %417 = lshr i32 %316, 16
  %418 = and i32 %417, 255
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %419
  %421 = load i32, i32* %420, align 4
  %422 = xor i32 %416, %421
  %423 = lshr i32 %388, 8
  %424 = and i32 %423, 255
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %425
  %427 = load i32, i32* %426, align 4
  %428 = xor i32 %422, %427
  %429 = and i32 %364, 255
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %430
  %432 = load i32, i32* %431, align 4
  %433 = xor i32 %428, %432
  %434 = getelementptr inbounds i32, i32* %0, i64 17
  %435 = load i32, i32* %434, align 4
  %436 = xor i32 %433, %435
  %437 = lshr i32 %364, 24
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %438
  %440 = load i32, i32* %439, align 4
  %441 = lshr i32 %340, 16
  %442 = and i32 %441, 255
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %443
  %445 = load i32, i32* %444, align 4
  %446 = xor i32 %440, %445
  %447 = lshr i32 %316, 8
  %448 = and i32 %447, 255
  %449 = zext i32 %448 to i64
  %450 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %449
  %451 = load i32, i32* %450, align 4
  %452 = xor i32 %446, %451
  %453 = and i32 %388, 255
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %454
  %456 = load i32, i32* %455, align 4
  %457 = xor i32 %452, %456
  %458 = getelementptr inbounds i32, i32* %0, i64 18
  %459 = load i32, i32* %458, align 4
  %460 = xor i32 %457, %459
  %461 = lshr i32 %388, 24
  %462 = zext i32 %461 to i64
  %463 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %462
  %464 = load i32, i32* %463, align 4
  %465 = lshr i32 %364, 16
  %466 = and i32 %465, 255
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %467
  %469 = load i32, i32* %468, align 4
  %470 = xor i32 %464, %469
  %471 = lshr i32 %340, 8
  %472 = and i32 %471, 255
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %473
  %475 = load i32, i32* %474, align 4
  %476 = xor i32 %470, %475
  %477 = and i32 %316, 255
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = xor i32 %476, %480
  %482 = getelementptr inbounds i32, i32* %0, i64 19
  %483 = load i32, i32* %482, align 4
  %484 = xor i32 %481, %483
  %485 = lshr i32 %412, 24
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = lshr i32 %484, 16
  %490 = and i32 %489, 255
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %491
  %493 = load i32, i32* %492, align 4
  %494 = xor i32 %488, %493
  %495 = lshr i32 %460, 8
  %496 = and i32 %495, 255
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %497
  %499 = load i32, i32* %498, align 4
  %500 = xor i32 %494, %499
  %501 = and i32 %436, 255
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %502
  %504 = load i32, i32* %503, align 4
  %505 = xor i32 %500, %504
  %506 = getelementptr inbounds i32, i32* %0, i64 20
  %507 = load i32, i32* %506, align 4
  %508 = xor i32 %505, %507
  %509 = lshr i32 %436, 24
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %510
  %512 = load i32, i32* %511, align 4
  %513 = lshr i32 %412, 16
  %514 = and i32 %513, 255
  %515 = zext i32 %514 to i64
  %516 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %515
  %517 = load i32, i32* %516, align 4
  %518 = xor i32 %512, %517
  %519 = lshr i32 %484, 8
  %520 = and i32 %519, 255
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %521
  %523 = load i32, i32* %522, align 4
  %524 = xor i32 %518, %523
  %525 = and i32 %460, 255
  %526 = zext i32 %525 to i64
  %527 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %526
  %528 = load i32, i32* %527, align 4
  %529 = xor i32 %524, %528
  %530 = getelementptr inbounds i32, i32* %0, i64 21
  %531 = load i32, i32* %530, align 4
  %532 = xor i32 %529, %531
  %533 = lshr i32 %460, 24
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = lshr i32 %436, 16
  %538 = and i32 %537, 255
  %539 = zext i32 %538 to i64
  %540 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = xor i32 %536, %541
  %543 = lshr i32 %412, 8
  %544 = and i32 %543, 255
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %545
  %547 = load i32, i32* %546, align 4
  %548 = xor i32 %542, %547
  %549 = and i32 %484, 255
  %550 = zext i32 %549 to i64
  %551 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = xor i32 %548, %552
  %554 = getelementptr inbounds i32, i32* %0, i64 22
  %555 = load i32, i32* %554, align 4
  %556 = xor i32 %553, %555
  %557 = lshr i32 %484, 24
  %558 = zext i32 %557 to i64
  %559 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = lshr i32 %460, 16
  %562 = and i32 %561, 255
  %563 = zext i32 %562 to i64
  %564 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %563
  %565 = load i32, i32* %564, align 4
  %566 = xor i32 %560, %565
  %567 = lshr i32 %436, 8
  %568 = and i32 %567, 255
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %569
  %571 = load i32, i32* %570, align 4
  %572 = xor i32 %566, %571
  %573 = and i32 %412, 255
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = xor i32 %572, %576
  %578 = getelementptr inbounds i32, i32* %0, i64 23
  %579 = load i32, i32* %578, align 4
  %580 = xor i32 %577, %579
  %581 = lshr i32 %508, 24
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %582
  %584 = load i32, i32* %583, align 4
  %585 = lshr i32 %580, 16
  %586 = and i32 %585, 255
  %587 = zext i32 %586 to i64
  %588 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %587
  %589 = load i32, i32* %588, align 4
  %590 = xor i32 %584, %589
  %591 = lshr i32 %556, 8
  %592 = and i32 %591, 255
  %593 = zext i32 %592 to i64
  %594 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %593
  %595 = load i32, i32* %594, align 4
  %596 = xor i32 %590, %595
  %597 = and i32 %532, 255
  %598 = zext i32 %597 to i64
  %599 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %598
  %600 = load i32, i32* %599, align 4
  %601 = xor i32 %596, %600
  %602 = getelementptr inbounds i32, i32* %0, i64 24
  %603 = load i32, i32* %602, align 4
  %604 = xor i32 %601, %603
  %605 = lshr i32 %532, 24
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %606
  %608 = load i32, i32* %607, align 4
  %609 = lshr i32 %508, 16
  %610 = and i32 %609, 255
  %611 = zext i32 %610 to i64
  %612 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %611
  %613 = load i32, i32* %612, align 4
  %614 = xor i32 %608, %613
  %615 = lshr i32 %580, 8
  %616 = and i32 %615, 255
  %617 = zext i32 %616 to i64
  %618 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %617
  %619 = load i32, i32* %618, align 4
  %620 = xor i32 %614, %619
  %621 = and i32 %556, 255
  %622 = zext i32 %621 to i64
  %623 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %622
  %624 = load i32, i32* %623, align 4
  %625 = xor i32 %620, %624
  %626 = getelementptr inbounds i32, i32* %0, i64 25
  %627 = load i32, i32* %626, align 4
  %628 = xor i32 %625, %627
  %629 = lshr i32 %556, 24
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %630
  %632 = load i32, i32* %631, align 4
  %633 = lshr i32 %532, 16
  %634 = and i32 %633, 255
  %635 = zext i32 %634 to i64
  %636 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %635
  %637 = load i32, i32* %636, align 4
  %638 = xor i32 %632, %637
  %639 = lshr i32 %508, 8
  %640 = and i32 %639, 255
  %641 = zext i32 %640 to i64
  %642 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %641
  %643 = load i32, i32* %642, align 4
  %644 = xor i32 %638, %643
  %645 = and i32 %580, 255
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %646
  %648 = load i32, i32* %647, align 4
  %649 = xor i32 %644, %648
  %650 = getelementptr inbounds i32, i32* %0, i64 26
  %651 = load i32, i32* %650, align 4
  %652 = xor i32 %649, %651
  %653 = lshr i32 %580, 24
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %654
  %656 = load i32, i32* %655, align 4
  %657 = lshr i32 %556, 16
  %658 = and i32 %657, 255
  %659 = zext i32 %658 to i64
  %660 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %659
  %661 = load i32, i32* %660, align 4
  %662 = xor i32 %656, %661
  %663 = lshr i32 %532, 8
  %664 = and i32 %663, 255
  %665 = zext i32 %664 to i64
  %666 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %665
  %667 = load i32, i32* %666, align 4
  %668 = xor i32 %662, %667
  %669 = and i32 %508, 255
  %670 = zext i32 %669 to i64
  %671 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %670
  %672 = load i32, i32* %671, align 4
  %673 = xor i32 %668, %672
  %674 = getelementptr inbounds i32, i32* %0, i64 27
  %675 = load i32, i32* %674, align 4
  %676 = xor i32 %673, %675
  %677 = lshr i32 %604, 24
  %678 = zext i32 %677 to i64
  %679 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %678
  %680 = load i32, i32* %679, align 4
  %681 = lshr i32 %676, 16
  %682 = and i32 %681, 255
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %683
  %685 = load i32, i32* %684, align 4
  %686 = xor i32 %680, %685
  %687 = lshr i32 %652, 8
  %688 = and i32 %687, 255
  %689 = zext i32 %688 to i64
  %690 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %689
  %691 = load i32, i32* %690, align 4
  %692 = xor i32 %686, %691
  %693 = and i32 %628, 255
  %694 = zext i32 %693 to i64
  %695 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %694
  %696 = load i32, i32* %695, align 4
  %697 = xor i32 %692, %696
  %698 = getelementptr inbounds i32, i32* %0, i64 28
  %699 = load i32, i32* %698, align 4
  %700 = xor i32 %697, %699
  %701 = lshr i32 %628, 24
  %702 = zext i32 %701 to i64
  %703 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %702
  %704 = load i32, i32* %703, align 4
  %705 = lshr i32 %604, 16
  %706 = and i32 %705, 255
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %707
  %709 = load i32, i32* %708, align 4
  %710 = xor i32 %704, %709
  %711 = lshr i32 %676, 8
  %712 = and i32 %711, 255
  %713 = zext i32 %712 to i64
  %714 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %713
  %715 = load i32, i32* %714, align 4
  %716 = xor i32 %710, %715
  %717 = and i32 %652, 255
  %718 = zext i32 %717 to i64
  %719 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %718
  %720 = load i32, i32* %719, align 4
  %721 = xor i32 %716, %720
  %722 = getelementptr inbounds i32, i32* %0, i64 29
  %723 = load i32, i32* %722, align 4
  %724 = xor i32 %721, %723
  %725 = lshr i32 %652, 24
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %726
  %728 = load i32, i32* %727, align 4
  %729 = lshr i32 %628, 16
  %730 = and i32 %729, 255
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %731
  %733 = load i32, i32* %732, align 4
  %734 = xor i32 %728, %733
  %735 = lshr i32 %604, 8
  %736 = and i32 %735, 255
  %737 = zext i32 %736 to i64
  %738 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %737
  %739 = load i32, i32* %738, align 4
  %740 = xor i32 %734, %739
  %741 = and i32 %676, 255
  %742 = zext i32 %741 to i64
  %743 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %742
  %744 = load i32, i32* %743, align 4
  %745 = xor i32 %740, %744
  %746 = getelementptr inbounds i32, i32* %0, i64 30
  %747 = load i32, i32* %746, align 4
  %748 = xor i32 %745, %747
  %749 = lshr i32 %676, 24
  %750 = zext i32 %749 to i64
  %751 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %750
  %752 = load i32, i32* %751, align 4
  %753 = lshr i32 %652, 16
  %754 = and i32 %753, 255
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %755
  %757 = load i32, i32* %756, align 4
  %758 = xor i32 %752, %757
  %759 = lshr i32 %628, 8
  %760 = and i32 %759, 255
  %761 = zext i32 %760 to i64
  %762 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %761
  %763 = load i32, i32* %762, align 4
  %764 = xor i32 %758, %763
  %765 = and i32 %604, 255
  %766 = zext i32 %765 to i64
  %767 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %766
  %768 = load i32, i32* %767, align 4
  %769 = xor i32 %764, %768
  %770 = getelementptr inbounds i32, i32* %0, i64 31
  %771 = load i32, i32* %770, align 4
  %772 = xor i32 %769, %771
  %773 = lshr i32 %700, 24
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %774
  %776 = load i32, i32* %775, align 4
  %777 = lshr i32 %772, 16
  %778 = and i32 %777, 255
  %779 = zext i32 %778 to i64
  %780 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %779
  %781 = load i32, i32* %780, align 4
  %782 = xor i32 %776, %781
  %783 = lshr i32 %748, 8
  %784 = and i32 %783, 255
  %785 = zext i32 %784 to i64
  %786 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %785
  %787 = load i32, i32* %786, align 4
  %788 = xor i32 %782, %787
  %789 = and i32 %724, 255
  %790 = zext i32 %789 to i64
  %791 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %790
  %792 = load i32, i32* %791, align 4
  %793 = xor i32 %788, %792
  %794 = getelementptr inbounds i32, i32* %0, i64 32
  %795 = load i32, i32* %794, align 4
  %796 = xor i32 %793, %795
  %797 = lshr i32 %724, 24
  %798 = zext i32 %797 to i64
  %799 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %798
  %800 = load i32, i32* %799, align 4
  %801 = lshr i32 %700, 16
  %802 = and i32 %801, 255
  %803 = zext i32 %802 to i64
  %804 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %803
  %805 = load i32, i32* %804, align 4
  %806 = xor i32 %800, %805
  %807 = lshr i32 %772, 8
  %808 = and i32 %807, 255
  %809 = zext i32 %808 to i64
  %810 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %809
  %811 = load i32, i32* %810, align 4
  %812 = xor i32 %806, %811
  %813 = and i32 %748, 255
  %814 = zext i32 %813 to i64
  %815 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %814
  %816 = load i32, i32* %815, align 4
  %817 = xor i32 %812, %816
  %818 = getelementptr inbounds i32, i32* %0, i64 33
  %819 = load i32, i32* %818, align 4
  %820 = xor i32 %817, %819
  %821 = lshr i32 %748, 24
  %822 = zext i32 %821 to i64
  %823 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %822
  %824 = load i32, i32* %823, align 4
  %825 = lshr i32 %724, 16
  %826 = and i32 %825, 255
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %827
  %829 = load i32, i32* %828, align 4
  %830 = xor i32 %824, %829
  %831 = lshr i32 %700, 8
  %832 = and i32 %831, 255
  %833 = zext i32 %832 to i64
  %834 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %833
  %835 = load i32, i32* %834, align 4
  %836 = xor i32 %830, %835
  %837 = and i32 %772, 255
  %838 = zext i32 %837 to i64
  %839 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %838
  %840 = load i32, i32* %839, align 4
  %841 = xor i32 %836, %840
  %842 = getelementptr inbounds i32, i32* %0, i64 34
  %843 = load i32, i32* %842, align 4
  %844 = xor i32 %841, %843
  %845 = lshr i32 %772, 24
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %846
  %848 = load i32, i32* %847, align 4
  %849 = lshr i32 %748, 16
  %850 = and i32 %849, 255
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %851
  %853 = load i32, i32* %852, align 4
  %854 = xor i32 %848, %853
  %855 = lshr i32 %724, 8
  %856 = and i32 %855, 255
  %857 = zext i32 %856 to i64
  %858 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %857
  %859 = load i32, i32* %858, align 4
  %860 = xor i32 %854, %859
  %861 = and i32 %700, 255
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %862
  %864 = load i32, i32* %863, align 4
  %865 = xor i32 %860, %864
  %866 = getelementptr inbounds i32, i32* %0, i64 35
  %867 = load i32, i32* %866, align 4
  %868 = xor i32 %865, %867
  %869 = lshr i32 %796, 24
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %870
  %872 = load i32, i32* %871, align 4
  %873 = lshr i32 %868, 16
  %874 = and i32 %873, 255
  %875 = zext i32 %874 to i64
  %876 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %875
  %877 = load i32, i32* %876, align 4
  %878 = xor i32 %872, %877
  %879 = lshr i32 %844, 8
  %880 = and i32 %879, 255
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %881
  %883 = load i32, i32* %882, align 4
  %884 = xor i32 %878, %883
  %885 = and i32 %820, 255
  %886 = zext i32 %885 to i64
  %887 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %886
  %888 = load i32, i32* %887, align 4
  %889 = xor i32 %884, %888
  %890 = getelementptr inbounds i32, i32* %0, i64 36
  %891 = load i32, i32* %890, align 4
  %892 = xor i32 %889, %891
  %893 = lshr i32 %820, 24
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %894
  %896 = load i32, i32* %895, align 4
  %897 = lshr i32 %796, 16
  %898 = and i32 %897, 255
  %899 = zext i32 %898 to i64
  %900 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %899
  %901 = load i32, i32* %900, align 4
  %902 = xor i32 %896, %901
  %903 = lshr i32 %868, 8
  %904 = and i32 %903, 255
  %905 = zext i32 %904 to i64
  %906 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %905
  %907 = load i32, i32* %906, align 4
  %908 = xor i32 %902, %907
  %909 = and i32 %844, 255
  %910 = zext i32 %909 to i64
  %911 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %910
  %912 = load i32, i32* %911, align 4
  %913 = xor i32 %908, %912
  %914 = getelementptr inbounds i32, i32* %0, i64 37
  %915 = load i32, i32* %914, align 4
  %916 = xor i32 %913, %915
  %917 = lshr i32 %844, 24
  %918 = zext i32 %917 to i64
  %919 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %918
  %920 = load i32, i32* %919, align 4
  %921 = lshr i32 %820, 16
  %922 = and i32 %921, 255
  %923 = zext i32 %922 to i64
  %924 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %923
  %925 = load i32, i32* %924, align 4
  %926 = xor i32 %920, %925
  %927 = lshr i32 %796, 8
  %928 = and i32 %927, 255
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %929
  %931 = load i32, i32* %930, align 4
  %932 = xor i32 %926, %931
  %933 = and i32 %868, 255
  %934 = zext i32 %933 to i64
  %935 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %934
  %936 = load i32, i32* %935, align 4
  %937 = xor i32 %932, %936
  %938 = getelementptr inbounds i32, i32* %0, i64 38
  %939 = load i32, i32* %938, align 4
  %940 = xor i32 %937, %939
  %941 = lshr i32 %868, 24
  %942 = zext i32 %941 to i64
  %943 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %942
  %944 = load i32, i32* %943, align 4
  %945 = lshr i32 %844, 16
  %946 = and i32 %945, 255
  %947 = zext i32 %946 to i64
  %948 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %947
  %949 = load i32, i32* %948, align 4
  %950 = xor i32 %944, %949
  %951 = lshr i32 %820, 8
  %952 = and i32 %951, 255
  %953 = zext i32 %952 to i64
  %954 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %953
  %955 = load i32, i32* %954, align 4
  %956 = xor i32 %950, %955
  %957 = and i32 %796, 255
  %958 = zext i32 %957 to i64
  %959 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %958
  %960 = load i32, i32* %959, align 4
  %961 = xor i32 %956, %960
  %962 = getelementptr inbounds i32, i32* %0, i64 39
  %963 = load i32, i32* %962, align 4
  %964 = xor i32 %961, %963
  %965 = icmp sgt i32 %1, 10
  br i1 %965, label %966, label %1353

966:                                              ; preds = %4
  %967 = lshr i32 %892, 24
  %968 = zext i32 %967 to i64
  %969 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %968
  %970 = load i32, i32* %969, align 4
  %971 = lshr i32 %964, 16
  %972 = and i32 %971, 255
  %973 = zext i32 %972 to i64
  %974 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %973
  %975 = load i32, i32* %974, align 4
  %976 = xor i32 %970, %975
  %977 = lshr i32 %940, 8
  %978 = and i32 %977, 255
  %979 = zext i32 %978 to i64
  %980 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %979
  %981 = load i32, i32* %980, align 4
  %982 = xor i32 %976, %981
  %983 = and i32 %916, 255
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %984
  %986 = load i32, i32* %985, align 4
  %987 = xor i32 %982, %986
  %988 = getelementptr inbounds i32, i32* %0, i64 40
  %989 = load i32, i32* %988, align 4
  %990 = xor i32 %987, %989
  %991 = lshr i32 %916, 24
  %992 = zext i32 %991 to i64
  %993 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %992
  %994 = load i32, i32* %993, align 4
  %995 = lshr i32 %892, 16
  %996 = and i32 %995, 255
  %997 = zext i32 %996 to i64
  %998 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %997
  %999 = load i32, i32* %998, align 4
  %1000 = xor i32 %994, %999
  %1001 = lshr i32 %964, 8
  %1002 = and i32 %1001, 255
  %1003 = zext i32 %1002 to i64
  %1004 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1003
  %1005 = load i32, i32* %1004, align 4
  %1006 = xor i32 %1000, %1005
  %1007 = and i32 %940, 255
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1008
  %1010 = load i32, i32* %1009, align 4
  %1011 = xor i32 %1006, %1010
  %1012 = getelementptr inbounds i32, i32* %0, i64 41
  %1013 = load i32, i32* %1012, align 4
  %1014 = xor i32 %1011, %1013
  %1015 = lshr i32 %940, 24
  %1016 = zext i32 %1015 to i64
  %1017 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1016
  %1018 = load i32, i32* %1017, align 4
  %1019 = lshr i32 %916, 16
  %1020 = and i32 %1019, 255
  %1021 = zext i32 %1020 to i64
  %1022 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1021
  %1023 = load i32, i32* %1022, align 4
  %1024 = xor i32 %1018, %1023
  %1025 = lshr i32 %892, 8
  %1026 = and i32 %1025, 255
  %1027 = zext i32 %1026 to i64
  %1028 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1027
  %1029 = load i32, i32* %1028, align 4
  %1030 = xor i32 %1024, %1029
  %1031 = and i32 %964, 255
  %1032 = zext i32 %1031 to i64
  %1033 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1032
  %1034 = load i32, i32* %1033, align 4
  %1035 = xor i32 %1030, %1034
  %1036 = getelementptr inbounds i32, i32* %0, i64 42
  %1037 = load i32, i32* %1036, align 4
  %1038 = xor i32 %1035, %1037
  %1039 = lshr i32 %964, 24
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1040
  %1042 = load i32, i32* %1041, align 4
  %1043 = lshr i32 %940, 16
  %1044 = and i32 %1043, 255
  %1045 = zext i32 %1044 to i64
  %1046 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1045
  %1047 = load i32, i32* %1046, align 4
  %1048 = xor i32 %1042, %1047
  %1049 = lshr i32 %916, 8
  %1050 = and i32 %1049, 255
  %1051 = zext i32 %1050 to i64
  %1052 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1051
  %1053 = load i32, i32* %1052, align 4
  %1054 = xor i32 %1048, %1053
  %1055 = and i32 %892, 255
  %1056 = zext i32 %1055 to i64
  %1057 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1056
  %1058 = load i32, i32* %1057, align 4
  %1059 = xor i32 %1054, %1058
  %1060 = getelementptr inbounds i32, i32* %0, i64 43
  %1061 = load i32, i32* %1060, align 4
  %1062 = xor i32 %1059, %1061
  %1063 = lshr i32 %990, 24
  %1064 = zext i32 %1063 to i64
  %1065 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1064
  %1066 = load i32, i32* %1065, align 4
  %1067 = lshr i32 %1062, 16
  %1068 = and i32 %1067, 255
  %1069 = zext i32 %1068 to i64
  %1070 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1069
  %1071 = load i32, i32* %1070, align 4
  %1072 = xor i32 %1066, %1071
  %1073 = lshr i32 %1038, 8
  %1074 = and i32 %1073, 255
  %1075 = zext i32 %1074 to i64
  %1076 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1075
  %1077 = load i32, i32* %1076, align 4
  %1078 = xor i32 %1072, %1077
  %1079 = and i32 %1014, 255
  %1080 = zext i32 %1079 to i64
  %1081 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1080
  %1082 = load i32, i32* %1081, align 4
  %1083 = xor i32 %1078, %1082
  %1084 = getelementptr inbounds i32, i32* %0, i64 44
  %1085 = load i32, i32* %1084, align 4
  %1086 = xor i32 %1083, %1085
  %1087 = lshr i32 %1014, 24
  %1088 = zext i32 %1087 to i64
  %1089 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1088
  %1090 = load i32, i32* %1089, align 4
  %1091 = lshr i32 %990, 16
  %1092 = and i32 %1091, 255
  %1093 = zext i32 %1092 to i64
  %1094 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1093
  %1095 = load i32, i32* %1094, align 4
  %1096 = xor i32 %1090, %1095
  %1097 = lshr i32 %1062, 8
  %1098 = and i32 %1097, 255
  %1099 = zext i32 %1098 to i64
  %1100 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1099
  %1101 = load i32, i32* %1100, align 4
  %1102 = xor i32 %1096, %1101
  %1103 = and i32 %1038, 255
  %1104 = zext i32 %1103 to i64
  %1105 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1104
  %1106 = load i32, i32* %1105, align 4
  %1107 = xor i32 %1102, %1106
  %1108 = getelementptr inbounds i32, i32* %0, i64 45
  %1109 = load i32, i32* %1108, align 4
  %1110 = xor i32 %1107, %1109
  %1111 = lshr i32 %1038, 24
  %1112 = zext i32 %1111 to i64
  %1113 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1112
  %1114 = load i32, i32* %1113, align 4
  %1115 = lshr i32 %1014, 16
  %1116 = and i32 %1115, 255
  %1117 = zext i32 %1116 to i64
  %1118 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1117
  %1119 = load i32, i32* %1118, align 4
  %1120 = xor i32 %1114, %1119
  %1121 = lshr i32 %990, 8
  %1122 = and i32 %1121, 255
  %1123 = zext i32 %1122 to i64
  %1124 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1123
  %1125 = load i32, i32* %1124, align 4
  %1126 = xor i32 %1120, %1125
  %1127 = and i32 %1062, 255
  %1128 = zext i32 %1127 to i64
  %1129 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1128
  %1130 = load i32, i32* %1129, align 4
  %1131 = xor i32 %1126, %1130
  %1132 = getelementptr inbounds i32, i32* %0, i64 46
  %1133 = load i32, i32* %1132, align 4
  %1134 = xor i32 %1131, %1133
  %1135 = lshr i32 %1062, 24
  %1136 = zext i32 %1135 to i64
  %1137 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1136
  %1138 = load i32, i32* %1137, align 4
  %1139 = lshr i32 %1038, 16
  %1140 = and i32 %1139, 255
  %1141 = zext i32 %1140 to i64
  %1142 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1141
  %1143 = load i32, i32* %1142, align 4
  %1144 = xor i32 %1138, %1143
  %1145 = lshr i32 %1014, 8
  %1146 = and i32 %1145, 255
  %1147 = zext i32 %1146 to i64
  %1148 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1147
  %1149 = load i32, i32* %1148, align 4
  %1150 = xor i32 %1144, %1149
  %1151 = and i32 %990, 255
  %1152 = zext i32 %1151 to i64
  %1153 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1152
  %1154 = load i32, i32* %1153, align 4
  %1155 = xor i32 %1150, %1154
  %1156 = getelementptr inbounds i32, i32* %0, i64 47
  %1157 = load i32, i32* %1156, align 4
  %1158 = xor i32 %1155, %1157
  %1159 = icmp sgt i32 %1, 12
  br i1 %1159, label %1160, label %1353

1160:                                             ; preds = %966
  %1161 = lshr i32 %1086, 24
  %1162 = zext i32 %1161 to i64
  %1163 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1162
  %1164 = load i32, i32* %1163, align 4
  %1165 = lshr i32 %1158, 16
  %1166 = and i32 %1165, 255
  %1167 = zext i32 %1166 to i64
  %1168 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1167
  %1169 = load i32, i32* %1168, align 4
  %1170 = xor i32 %1164, %1169
  %1171 = lshr i32 %1134, 8
  %1172 = and i32 %1171, 255
  %1173 = zext i32 %1172 to i64
  %1174 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1173
  %1175 = load i32, i32* %1174, align 4
  %1176 = xor i32 %1170, %1175
  %1177 = and i32 %1110, 255
  %1178 = zext i32 %1177 to i64
  %1179 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1178
  %1180 = load i32, i32* %1179, align 4
  %1181 = xor i32 %1176, %1180
  %1182 = getelementptr inbounds i32, i32* %0, i64 48
  %1183 = load i32, i32* %1182, align 4
  %1184 = xor i32 %1181, %1183
  %1185 = lshr i32 %1110, 24
  %1186 = zext i32 %1185 to i64
  %1187 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1186
  %1188 = load i32, i32* %1187, align 4
  %1189 = lshr i32 %1086, 16
  %1190 = and i32 %1189, 255
  %1191 = zext i32 %1190 to i64
  %1192 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1191
  %1193 = load i32, i32* %1192, align 4
  %1194 = xor i32 %1188, %1193
  %1195 = lshr i32 %1158, 8
  %1196 = and i32 %1195, 255
  %1197 = zext i32 %1196 to i64
  %1198 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1197
  %1199 = load i32, i32* %1198, align 4
  %1200 = xor i32 %1194, %1199
  %1201 = and i32 %1134, 255
  %1202 = zext i32 %1201 to i64
  %1203 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1202
  %1204 = load i32, i32* %1203, align 4
  %1205 = xor i32 %1200, %1204
  %1206 = getelementptr inbounds i32, i32* %0, i64 49
  %1207 = load i32, i32* %1206, align 4
  %1208 = xor i32 %1205, %1207
  %1209 = lshr i32 %1134, 24
  %1210 = zext i32 %1209 to i64
  %1211 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1210
  %1212 = load i32, i32* %1211, align 4
  %1213 = lshr i32 %1110, 16
  %1214 = and i32 %1213, 255
  %1215 = zext i32 %1214 to i64
  %1216 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1215
  %1217 = load i32, i32* %1216, align 4
  %1218 = xor i32 %1212, %1217
  %1219 = lshr i32 %1086, 8
  %1220 = and i32 %1219, 255
  %1221 = zext i32 %1220 to i64
  %1222 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1221
  %1223 = load i32, i32* %1222, align 4
  %1224 = xor i32 %1218, %1223
  %1225 = and i32 %1158, 255
  %1226 = zext i32 %1225 to i64
  %1227 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1226
  %1228 = load i32, i32* %1227, align 4
  %1229 = xor i32 %1224, %1228
  %1230 = getelementptr inbounds i32, i32* %0, i64 50
  %1231 = load i32, i32* %1230, align 4
  %1232 = xor i32 %1229, %1231
  %1233 = lshr i32 %1158, 24
  %1234 = zext i32 %1233 to i64
  %1235 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1234
  %1236 = load i32, i32* %1235, align 4
  %1237 = lshr i32 %1134, 16
  %1238 = and i32 %1237, 255
  %1239 = zext i32 %1238 to i64
  %1240 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1239
  %1241 = load i32, i32* %1240, align 4
  %1242 = xor i32 %1236, %1241
  %1243 = lshr i32 %1110, 8
  %1244 = and i32 %1243, 255
  %1245 = zext i32 %1244 to i64
  %1246 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1245
  %1247 = load i32, i32* %1246, align 4
  %1248 = xor i32 %1242, %1247
  %1249 = and i32 %1086, 255
  %1250 = zext i32 %1249 to i64
  %1251 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1250
  %1252 = load i32, i32* %1251, align 4
  %1253 = xor i32 %1248, %1252
  %1254 = getelementptr inbounds i32, i32* %0, i64 51
  %1255 = load i32, i32* %1254, align 4
  %1256 = xor i32 %1253, %1255
  %1257 = lshr i32 %1184, 24
  %1258 = zext i32 %1257 to i64
  %1259 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1258
  %1260 = load i32, i32* %1259, align 4
  %1261 = lshr i32 %1256, 16
  %1262 = and i32 %1261, 255
  %1263 = zext i32 %1262 to i64
  %1264 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1263
  %1265 = load i32, i32* %1264, align 4
  %1266 = xor i32 %1260, %1265
  %1267 = lshr i32 %1232, 8
  %1268 = and i32 %1267, 255
  %1269 = zext i32 %1268 to i64
  %1270 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1269
  %1271 = load i32, i32* %1270, align 4
  %1272 = xor i32 %1266, %1271
  %1273 = and i32 %1208, 255
  %1274 = zext i32 %1273 to i64
  %1275 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1274
  %1276 = load i32, i32* %1275, align 4
  %1277 = xor i32 %1272, %1276
  %1278 = getelementptr inbounds i32, i32* %0, i64 52
  %1279 = load i32, i32* %1278, align 4
  %1280 = xor i32 %1277, %1279
  %1281 = lshr i32 %1208, 24
  %1282 = zext i32 %1281 to i64
  %1283 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1282
  %1284 = load i32, i32* %1283, align 4
  %1285 = lshr i32 %1184, 16
  %1286 = and i32 %1285, 255
  %1287 = zext i32 %1286 to i64
  %1288 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1287
  %1289 = load i32, i32* %1288, align 4
  %1290 = xor i32 %1284, %1289
  %1291 = lshr i32 %1256, 8
  %1292 = and i32 %1291, 255
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1293
  %1295 = load i32, i32* %1294, align 4
  %1296 = xor i32 %1290, %1295
  %1297 = and i32 %1232, 255
  %1298 = zext i32 %1297 to i64
  %1299 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1298
  %1300 = load i32, i32* %1299, align 4
  %1301 = xor i32 %1296, %1300
  %1302 = getelementptr inbounds i32, i32* %0, i64 53
  %1303 = load i32, i32* %1302, align 4
  %1304 = xor i32 %1301, %1303
  %1305 = lshr i32 %1232, 24
  %1306 = zext i32 %1305 to i64
  %1307 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1306
  %1308 = load i32, i32* %1307, align 4
  %1309 = lshr i32 %1208, 16
  %1310 = and i32 %1309, 255
  %1311 = zext i32 %1310 to i64
  %1312 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1311
  %1313 = load i32, i32* %1312, align 4
  %1314 = xor i32 %1308, %1313
  %1315 = lshr i32 %1184, 8
  %1316 = and i32 %1315, 255
  %1317 = zext i32 %1316 to i64
  %1318 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1317
  %1319 = load i32, i32* %1318, align 4
  %1320 = xor i32 %1314, %1319
  %1321 = and i32 %1256, 255
  %1322 = zext i32 %1321 to i64
  %1323 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1322
  %1324 = load i32, i32* %1323, align 4
  %1325 = xor i32 %1320, %1324
  %1326 = getelementptr inbounds i32, i32* %0, i64 54
  %1327 = load i32, i32* %1326, align 4
  %1328 = xor i32 %1325, %1327
  %1329 = lshr i32 %1256, 24
  %1330 = zext i32 %1329 to i64
  %1331 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1330
  %1332 = load i32, i32* %1331, align 4
  %1333 = lshr i32 %1232, 16
  %1334 = and i32 %1333, 255
  %1335 = zext i32 %1334 to i64
  %1336 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1335
  %1337 = load i32, i32* %1336, align 4
  %1338 = xor i32 %1332, %1337
  %1339 = lshr i32 %1208, 8
  %1340 = and i32 %1339, 255
  %1341 = zext i32 %1340 to i64
  %1342 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1341
  %1343 = load i32, i32* %1342, align 4
  %1344 = xor i32 %1338, %1343
  %1345 = and i32 %1184, 255
  %1346 = zext i32 %1345 to i64
  %1347 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1346
  %1348 = load i32, i32* %1347, align 4
  %1349 = xor i32 %1344, %1348
  %1350 = getelementptr inbounds i32, i32* %0, i64 55
  %1351 = load i32, i32* %1350, align 4
  %1352 = xor i32 %1349, %1351
  br label %1353

1353:                                             ; preds = %1160, %966, %4
  %.16 = phi i32 [ %892, %4 ], [ %1280, %1160 ], [ %1086, %966 ]
  %.14 = phi i32 [ %916, %4 ], [ %1304, %1160 ], [ %1110, %966 ]
  %.12 = phi i32 [ %940, %4 ], [ %1328, %1160 ], [ %1134, %966 ]
  %.1 = phi i32 [ %964, %4 ], [ %1352, %1160 ], [ %1158, %966 ]
  %1354 = shl i32 %1, 2
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds i32, i32* %0, i64 %1355
  %1357 = lshr i32 %.16, 24
  %1358 = zext i32 %1357 to i64
  %1359 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1358
  %1360 = load i32, i32* %1359, align 4
  %1361 = and i32 %1360, -16777216
  %1362 = lshr i32 %.1, 16
  %1363 = and i32 %1362, 255
  %1364 = zext i32 %1363 to i64
  %1365 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1364
  %1366 = load i32, i32* %1365, align 4
  %1367 = and i32 %1366, 16711680
  %1368 = xor i32 %1361, %1367
  %1369 = lshr i32 %.12, 8
  %1370 = and i32 %1369, 255
  %1371 = zext i32 %1370 to i64
  %1372 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1371
  %1373 = load i32, i32* %1372, align 4
  %1374 = and i32 %1373, 65280
  %1375 = xor i32 %1368, %1374
  %1376 = and i32 %.14, 255
  %1377 = zext i32 %1376 to i64
  %1378 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1377
  %1379 = load i32, i32* %1378, align 4
  %1380 = and i32 %1379, 255
  %1381 = xor i32 %1375, %1380
  %1382 = getelementptr inbounds i32, i32* %1356, i64 0
  %1383 = load i32, i32* %1382, align 4
  %1384 = xor i32 %1381, %1383
  %1385 = lshr i32 %1384, 24
  %1386 = trunc i32 %1385 to i8
  %1387 = getelementptr inbounds i8, i8* %3, i64 0
  store i8 %1386, i8* %1387, align 1
  %1388 = lshr i32 %1384, 16
  %1389 = trunc i32 %1388 to i8
  %1390 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %1389, i8* %1390, align 1
  %1391 = lshr i32 %1384, 8
  %1392 = trunc i32 %1391 to i8
  %1393 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %1392, i8* %1393, align 1
  %1394 = trunc i32 %1384 to i8
  %1395 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %1394, i8* %1395, align 1
  %1396 = lshr i32 %.14, 24
  %1397 = zext i32 %1396 to i64
  %1398 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1397
  %1399 = load i32, i32* %1398, align 4
  %1400 = and i32 %1399, -16777216
  %1401 = lshr i32 %.16, 16
  %1402 = and i32 %1401, 255
  %1403 = zext i32 %1402 to i64
  %1404 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1403
  %1405 = load i32, i32* %1404, align 4
  %1406 = and i32 %1405, 16711680
  %1407 = xor i32 %1400, %1406
  %1408 = lshr i32 %.1, 8
  %1409 = and i32 %1408, 255
  %1410 = zext i32 %1409 to i64
  %1411 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1410
  %1412 = load i32, i32* %1411, align 4
  %1413 = and i32 %1412, 65280
  %1414 = xor i32 %1407, %1413
  %1415 = and i32 %.12, 255
  %1416 = zext i32 %1415 to i64
  %1417 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1416
  %1418 = load i32, i32* %1417, align 4
  %1419 = and i32 %1418, 255
  %1420 = xor i32 %1414, %1419
  %1421 = getelementptr inbounds i32, i32* %1356, i64 1
  %1422 = load i32, i32* %1421, align 4
  %1423 = xor i32 %1420, %1422
  %1424 = lshr i32 %1423, 24
  %1425 = trunc i32 %1424 to i8
  %1426 = getelementptr inbounds i8, i8* %3, i64 4
  %1427 = getelementptr inbounds i8, i8* %1426, i64 0
  store i8 %1425, i8* %1427, align 1
  %1428 = lshr i32 %1423, 16
  %1429 = trunc i32 %1428 to i8
  %1430 = getelementptr inbounds i8, i8* %3, i64 4
  %1431 = getelementptr inbounds i8, i8* %1430, i64 1
  store i8 %1429, i8* %1431, align 1
  %1432 = lshr i32 %1423, 8
  %1433 = trunc i32 %1432 to i8
  %1434 = getelementptr inbounds i8, i8* %3, i64 4
  %1435 = getelementptr inbounds i8, i8* %1434, i64 2
  store i8 %1433, i8* %1435, align 1
  %1436 = trunc i32 %1423 to i8
  %1437 = getelementptr inbounds i8, i8* %3, i64 4
  %1438 = getelementptr inbounds i8, i8* %1437, i64 3
  store i8 %1436, i8* %1438, align 1
  %1439 = lshr i32 %.12, 24
  %1440 = zext i32 %1439 to i64
  %1441 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1440
  %1442 = load i32, i32* %1441, align 4
  %1443 = and i32 %1442, -16777216
  %1444 = lshr i32 %.14, 16
  %1445 = and i32 %1444, 255
  %1446 = zext i32 %1445 to i64
  %1447 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1446
  %1448 = load i32, i32* %1447, align 4
  %1449 = and i32 %1448, 16711680
  %1450 = xor i32 %1443, %1449
  %1451 = lshr i32 %.16, 8
  %1452 = and i32 %1451, 255
  %1453 = zext i32 %1452 to i64
  %1454 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1453
  %1455 = load i32, i32* %1454, align 4
  %1456 = and i32 %1455, 65280
  %1457 = xor i32 %1450, %1456
  %1458 = and i32 %.1, 255
  %1459 = zext i32 %1458 to i64
  %1460 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1459
  %1461 = load i32, i32* %1460, align 4
  %1462 = and i32 %1461, 255
  %1463 = xor i32 %1457, %1462
  %1464 = getelementptr inbounds i32, i32* %1356, i64 2
  %1465 = load i32, i32* %1464, align 4
  %1466 = xor i32 %1463, %1465
  %1467 = lshr i32 %1466, 24
  %1468 = trunc i32 %1467 to i8
  %1469 = getelementptr inbounds i8, i8* %3, i64 8
  %1470 = getelementptr inbounds i8, i8* %1469, i64 0
  store i8 %1468, i8* %1470, align 1
  %1471 = lshr i32 %1466, 16
  %1472 = trunc i32 %1471 to i8
  %1473 = getelementptr inbounds i8, i8* %3, i64 8
  %1474 = getelementptr inbounds i8, i8* %1473, i64 1
  store i8 %1472, i8* %1474, align 1
  %1475 = lshr i32 %1466, 8
  %1476 = trunc i32 %1475 to i8
  %1477 = getelementptr inbounds i8, i8* %3, i64 8
  %1478 = getelementptr inbounds i8, i8* %1477, i64 2
  store i8 %1476, i8* %1478, align 1
  %1479 = trunc i32 %1466 to i8
  %1480 = getelementptr inbounds i8, i8* %3, i64 8
  %1481 = getelementptr inbounds i8, i8* %1480, i64 3
  store i8 %1479, i8* %1481, align 1
  %1482 = lshr i32 %.1, 24
  %1483 = zext i32 %1482 to i64
  %1484 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1483
  %1485 = load i32, i32* %1484, align 4
  %1486 = and i32 %1485, -16777216
  %1487 = lshr i32 %.12, 16
  %1488 = and i32 %1487, 255
  %1489 = zext i32 %1488 to i64
  %1490 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1489
  %1491 = load i32, i32* %1490, align 4
  %1492 = and i32 %1491, 16711680
  %1493 = xor i32 %1486, %1492
  %1494 = lshr i32 %.14, 8
  %1495 = and i32 %1494, 255
  %1496 = zext i32 %1495 to i64
  %1497 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1496
  %1498 = load i32, i32* %1497, align 4
  %1499 = and i32 %1498, 65280
  %1500 = xor i32 %1493, %1499
  %1501 = and i32 %.16, 255
  %1502 = zext i32 %1501 to i64
  %1503 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1502
  %1504 = load i32, i32* %1503, align 4
  %1505 = and i32 %1504, 255
  %1506 = xor i32 %1500, %1505
  %1507 = getelementptr inbounds i32, i32* %1356, i64 3
  %1508 = load i32, i32* %1507, align 4
  %1509 = xor i32 %1506, %1508
  %1510 = lshr i32 %1509, 24
  %1511 = trunc i32 %1510 to i8
  %1512 = getelementptr inbounds i8, i8* %3, i64 12
  %1513 = getelementptr inbounds i8, i8* %1512, i64 0
  store i8 %1511, i8* %1513, align 1
  %1514 = lshr i32 %1509, 16
  %1515 = trunc i32 %1514 to i8
  %1516 = getelementptr inbounds i8, i8* %3, i64 12
  %1517 = getelementptr inbounds i8, i8* %1516, i64 1
  store i8 %1515, i8* %1517, align 1
  %1518 = lshr i32 %1509, 8
  %1519 = trunc i32 %1518 to i8
  %1520 = getelementptr inbounds i8, i8* %3, i64 12
  %1521 = getelementptr inbounds i8, i8* %1520, i64 2
  store i8 %1519, i8* %1521, align 1
  %1522 = trunc i32 %1509 to i8
  %1523 = getelementptr inbounds i8, i8* %3, i64 12
  %1524 = getelementptr inbounds i8, i8* %1523, i64 3
  store i8 %1522, i8* %1524, align 1
  ret void
}

define void @randombytes(i8* %0, i64 %N, i64 %1) {
  %3 = icmp sge i64 %1, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.randombytes, i64 0, i64 0)) #4
  unreachable

5:                                                ; preds = %2
  %6 = load i32, i32* @randombytes.fd, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %5
  %8 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %8, i32* @randombytes.fd, align 4
  %9 = load i32, i32* @randombytes.fd, align 4
  %10 = icmp ne i32 %9, -1
  br i1 %10, label %.loopexit, label %.lr.ph7.preheader

.lr.ph7.preheader:                                ; preds = %.preheader
  br label %.lr.ph7

.lr.ph7:                                          ; preds = %106, %.lr.ph7.preheader
  %11 = call i32 @sleep(i32 1)
  %12 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %12, i32* @randombytes.fd, align 4
  %13 = load i32, i32* @randombytes.fd, align 4
  %14 = icmp ne i32 %13, -1
  br i1 %14, label %.loopexit.loopexit, label %76

.loopexit.loopexit:                               ; preds = %106, %101, %96, %91, %86, %81, %76, %.lr.ph7
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.preheader, %5
  %15 = icmp sgt i64 %1, 0
  br i1 %15, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %.loopexit
  br label %.lr.ph

.lr.ph:                                           ; preds = %.outer, %.lr.ph.preheader
  %16 = phi i1 [ %26, %.outer ], [ %15, %.lr.ph.preheader ]
  %.0.ph6 = phi i8* [ %24, %.outer ], [ %0, %.lr.ph.preheader ]
  %.01.ph5 = phi i64 [ %25, %.outer ], [ %1, %.lr.ph.preheader ]
  br label %17

17:                                               ; preds = %74, %.lr.ph
  %18 = icmp slt i64 %.01.ph5, 1048576
  %.01. = select i1 %18, i64 %.01.ph5, i64 1048576
  %19 = load i32, i32* @randombytes.fd, align 4
  %20 = call i64 @read(i32 %19, i8* %.0.ph6, i64 %.01.)
  %21 = icmp slt i64 %20, 1
  br i1 %21, label %22, label %.outer

22:                                               ; preds = %17
  %23 = call i32 @sleep(i32 1)
  br i1 %16, label %27, label %.outer._crit_edge.loopexit

.outer:                                           ; preds = %69, %62, %55, %48, %41, %34, %27, %17
  %.lcssa = phi i64 [ %20, %17 ], [ %30, %27 ], [ %37, %34 ], [ %44, %41 ], [ %51, %48 ], [ %58, %55 ], [ %65, %62 ], [ %72, %69 ]
  %24 = getelementptr inbounds i8, i8* %.0.ph6, i64 %.lcssa
  %25 = sub nsw i64 %.01.ph5, %.lcssa
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %.lr.ph, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit:                       ; preds = %74, %67, %60, %53, %46, %39, %32, %22
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %.loopexit
  ret void

27:                                               ; preds = %22
  %28 = icmp slt i64 %.01.ph5, 1048576
  %.01..1 = select i1 %28, i64 %.01.ph5, i64 1048576
  %29 = load i32, i32* @randombytes.fd, align 4
  %30 = call i64 @read(i32 %29, i8* %.0.ph6, i64 %.01..1)
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %32, label %.outer

32:                                               ; preds = %27
  %33 = call i32 @sleep(i32 1)
  br i1 %16, label %34, label %.outer._crit_edge.loopexit

34:                                               ; preds = %32
  %35 = icmp slt i64 %.01.ph5, 1048576
  %.01..2 = select i1 %35, i64 %.01.ph5, i64 1048576
  %36 = load i32, i32* @randombytes.fd, align 4
  %37 = call i64 @read(i32 %36, i8* %.0.ph6, i64 %.01..2)
  %38 = icmp slt i64 %37, 1
  br i1 %38, label %39, label %.outer

39:                                               ; preds = %34
  %40 = call i32 @sleep(i32 1)
  br i1 %16, label %41, label %.outer._crit_edge.loopexit

41:                                               ; preds = %39
  %42 = icmp slt i64 %.01.ph5, 1048576
  %.01..3 = select i1 %42, i64 %.01.ph5, i64 1048576
  %43 = load i32, i32* @randombytes.fd, align 4
  %44 = call i64 @read(i32 %43, i8* %.0.ph6, i64 %.01..3)
  %45 = icmp slt i64 %44, 1
  br i1 %45, label %46, label %.outer

46:                                               ; preds = %41
  %47 = call i32 @sleep(i32 1)
  br i1 %16, label %48, label %.outer._crit_edge.loopexit

48:                                               ; preds = %46
  %49 = icmp slt i64 %.01.ph5, 1048576
  %.01..4 = select i1 %49, i64 %.01.ph5, i64 1048576
  %50 = load i32, i32* @randombytes.fd, align 4
  %51 = call i64 @read(i32 %50, i8* %.0.ph6, i64 %.01..4)
  %52 = icmp slt i64 %51, 1
  br i1 %52, label %53, label %.outer

53:                                               ; preds = %48
  %54 = call i32 @sleep(i32 1)
  br i1 %16, label %55, label %.outer._crit_edge.loopexit

55:                                               ; preds = %53
  %56 = icmp slt i64 %.01.ph5, 1048576
  %.01..5 = select i1 %56, i64 %.01.ph5, i64 1048576
  %57 = load i32, i32* @randombytes.fd, align 4
  %58 = call i64 @read(i32 %57, i8* %.0.ph6, i64 %.01..5)
  %59 = icmp slt i64 %58, 1
  br i1 %59, label %60, label %.outer

60:                                               ; preds = %55
  %61 = call i32 @sleep(i32 1)
  br i1 %16, label %62, label %.outer._crit_edge.loopexit

62:                                               ; preds = %60
  %63 = icmp slt i64 %.01.ph5, 1048576
  %.01..6 = select i1 %63, i64 %.01.ph5, i64 1048576
  %64 = load i32, i32* @randombytes.fd, align 4
  %65 = call i64 @read(i32 %64, i8* %.0.ph6, i64 %.01..6)
  %66 = icmp slt i64 %65, 1
  br i1 %66, label %67, label %.outer

67:                                               ; preds = %62
  %68 = call i32 @sleep(i32 1)
  br i1 %16, label %69, label %.outer._crit_edge.loopexit

69:                                               ; preds = %67
  %70 = icmp slt i64 %.01.ph5, 1048576
  %.01..7 = select i1 %70, i64 %.01.ph5, i64 1048576
  %71 = load i32, i32* @randombytes.fd, align 4
  %72 = call i64 @read(i32 %71, i8* %.0.ph6, i64 %.01..7)
  %73 = icmp slt i64 %72, 1
  br i1 %73, label %74, label %.outer

74:                                               ; preds = %69
  %75 = call i32 @sleep(i32 1)
  br i1 %16, label %17, label %.outer._crit_edge.loopexit, !llvm.loop !4

76:                                               ; preds = %.lr.ph7
  %77 = call i32 @sleep(i32 1)
  %78 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %78, i32* @randombytes.fd, align 4
  %79 = load i32, i32* @randombytes.fd, align 4
  %80 = icmp ne i32 %79, -1
  br i1 %80, label %.loopexit.loopexit, label %81

81:                                               ; preds = %76
  %82 = call i32 @sleep(i32 1)
  %83 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %83, i32* @randombytes.fd, align 4
  %84 = load i32, i32* @randombytes.fd, align 4
  %85 = icmp ne i32 %84, -1
  br i1 %85, label %.loopexit.loopexit, label %86

86:                                               ; preds = %81
  %87 = call i32 @sleep(i32 1)
  %88 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %88, i32* @randombytes.fd, align 4
  %89 = load i32, i32* @randombytes.fd, align 4
  %90 = icmp ne i32 %89, -1
  br i1 %90, label %.loopexit.loopexit, label %91

91:                                               ; preds = %86
  %92 = call i32 @sleep(i32 1)
  %93 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %93, i32* @randombytes.fd, align 4
  %94 = load i32, i32* @randombytes.fd, align 4
  %95 = icmp ne i32 %94, -1
  br i1 %95, label %.loopexit.loopexit, label %96

96:                                               ; preds = %91
  %97 = call i32 @sleep(i32 1)
  %98 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %98, i32* @randombytes.fd, align 4
  %99 = load i32, i32* @randombytes.fd, align 4
  %100 = icmp ne i32 %99, -1
  br i1 %100, label %.loopexit.loopexit, label %101

101:                                              ; preds = %96
  %102 = call i32 @sleep(i32 1)
  %103 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %103, i32* @randombytes.fd, align 4
  %104 = load i32, i32* @randombytes.fd, align 4
  %105 = icmp ne i32 %104, -1
  br i1 %105, label %.loopexit.loopexit, label %106

106:                                              ; preds = %101
  %107 = call i32 @sleep(i32 1)
  %108 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %108, i32* @randombytes.fd, align 4
  %109 = load i32, i32* @randombytes.fd, align 4
  %110 = icmp ne i32 %109, -1
  br i1 %110, label %.loopexit.loopexit, label %.lr.ph7, !llvm.loop !6
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #3

declare i32 @open(i8*, i32, ...) #2

declare i32 @sleep(i32) #2

declare i64 @read(i32, i8*, i64) #2

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local zeroext i8 @randombit() #0 {
  %1 = alloca i8, align 1
  store i8 0, i8* %1, align 1
  %2 = sext i32 1 to i64
  call void @randombytes(i8* %1, i64 %2, i64 1)
  %3 = load i8, i8* %1, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 1
  %6 = trunc i32 %5 to i8
  ret i8 %6
}

attributes #0 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind }

!llvm.ident = !{!0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
