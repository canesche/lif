; ModuleID = 'dudect-examples/aes32/llvm-ir/main2.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.input_data = private unnamed_addr constant [16 x i8] c".\B1\C9!#S\97\FA\E2\19\9Ee\99\F6d\C5", align 16
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@chunk_size = dso_local local_unnamed_addr constant i64 16, align 8
@number_measurements = dso_local local_unnamed_addr constant i64 1, align 8
@rk = internal global [44 x i32] zeroinitializer, align 16
@Te4 = internal unnamed_addr constant [256 x i32] [i32 1667457891, i32 2088533116, i32 2004318071, i32 2071690107, i32 -218959118, i32 1802201963, i32 1869573999, i32 -976894523, i32 808464432, i32 16843009, i32 1734829927, i32 724249387, i32 -16843010, i32 -673720361, i32 -1414812757, i32 1987475062, i32 -892679478, i32 -2105376126, i32 -909522487, i32 2105376125, i32 -84215046, i32 1499027801, i32 1195853639, i32 -252645136, i32 -1381126739, i32 -724249388, i32 -1566399838, i32 -1347440721, i32 -1667457892, i32 -1532713820, i32 1920103026, i32 -1061109568, i32 -1212696649, i32 -33686019, i32 -1819044973, i32 640034342, i32 909522486, i32 1061109567, i32 -134744073, i32 -858993460, i32 875836468, i32 -1515870811, i32 -437918235, i32 -235802127, i32 1903260017, i32 -656877352, i32 825307441, i32 353703189, i32 67372036, i32 -943208505, i32 589505315, i32 -1010580541, i32 404232216, i32 -1768515946, i32 84215045, i32 -1701143910, i32 117901063, i32 303174162, i32 -2139062144, i32 -488447262, i32 -336860181, i32 656877351, i32 -1296911694, i32 1970632053, i32 151587081, i32 -2088533117, i32 741092396, i32 437918234, i32 454761243, i32 1852730990, i32 1515870810, i32 -1600085856, i32 1381126738, i32 993737531, i32 -690563370, i32 -1280068685, i32 690563369, i32 -471604253, i32 791621423, i32 -2071690108, i32 1397969747, i32 -774778415, i32 0, i32 -303174163, i32 538976288, i32 -50529028, i32 -1313754703, i32 1532713819, i32 1785358954, i32 -875836469, i32 -1094795586, i32 960051513, i32 1246382666, i32 1280068684, i32 1482184792, i32 -808464433, i32 -791621424, i32 -269488145, i32 -1431655766, i32 -67372037, i32 1128481603, i32 1296911693, i32 858993459, i32 -2054847099, i32 1162167621, i32 -101058055, i32 33686018, i32 2139062143, i32 1347440720, i32 1010580540, i32 -1616928865, i32 -1465341784, i32 1364283729, i32 -1549556829, i32 1077952576, i32 -1886417009, i32 -1835887982, i32 -1650614883, i32 943208504, i32 -168430091, i32 -1128481604, i32 -1229539658, i32 -623191334, i32 555819297, i32 269488144, i32 -1, i32 -202116109, i32 -757935406, i32 -842150451, i32 202116108, i32 320017171, i32 -320017172, i32 1600085855, i32 -1751672937, i32 1145324612, i32 387389207, i32 -993737532, i32 -1482184793, i32 2122219134, i32 1027423549, i32 1684300900, i32 1566399837, i32 421075225, i32 1936946035, i32 1616928864, i32 -2122219135, i32 1330597711, i32 -589505316, i32 572662306, i32 707406378, i32 -1869574000, i32 -2004318072, i32 1179010630, i32 -286331154, i32 -1195853640, i32 336860180, i32 -555819298, i32 1583242846, i32 185273099, i32 -606348325, i32 -522133280, i32 842150450, i32 976894522, i32 168430090, i32 1229539657, i32 101058054, i32 606348324, i32 1549556828, i32 -1027423550, i32 -741092397, i32 -1397969748, i32 1650614882, i32 -1852730991, i32 -1785358955, i32 -454761244, i32 2038004089, i32 -404232217, i32 -926365496, i32 926365495, i32 1835887981, i32 -1920103027, i32 -707406379, i32 1313754702, i32 -1448498775, i32 1819044972, i32 1448498774, i32 -185273100, i32 -353703190, i32 1701143909, i32 2054847098, i32 -1364283730, i32 134744072, i32 -1162167622, i32 2021161080, i32 623191333, i32 774778414, i32 471604252, i32 -1499027802, i32 -1263225676, i32 -960051514, i32 -387389208, i32 -572662307, i32 1953789044, i32 522133279, i32 1263225675, i32 -1111638595, i32 -1953789045, i32 -1970632054, i32 1886417008, i32 1044266558, i32 -1246382667, i32 1717986918, i32 1212696648, i32 50529027, i32 -151587082, i32 235802126, i32 1633771873, i32 892679477, i32 1465341783, i32 -1179010631, i32 -2038004090, i32 -1044266559, i32 488447261, i32 -1633771874, i32 -505290271, i32 -117901064, i32 -1734829928, i32 286331153, i32 1768515945, i32 -640034343, i32 -1903260018, i32 -1802201964, i32 -1684300901, i32 505290270, i32 -2021161081, i32 -370546199, i32 -825307442, i32 1431655765, i32 673720360, i32 -538976289, i32 -1936946036, i32 -1583242847, i32 -1987475063, i32 218959117, i32 -1077952577, i32 -421075226, i32 1111638594, i32 1751672936, i32 1094795585, i32 -1717986919, i32 757935405, i32 252645135, i32 -1330597712, i32 1414812756, i32 -1145324613, i32 370546198], align 16
@Td0 = internal unnamed_addr constant [256 x i32] [i32 1374988112, i32 2118214995, i32 437757123, i32 975658646, i32 1001089995, i32 530400753, i32 -1392879445, i32 1273168787, i32 540080725, i32 -1384747530, i32 -1999866223, i32 -184398811, i32 1340463100, i32 -987051049, i32 641025152, i32 -1251826801, i32 -558802359, i32 632953703, i32 1172967064, i32 1576976609, i32 -1020300030, i32 -2125664238, i32 -1924753501, i32 1809054150, i32 59727847, i32 361929877, i32 -1083344149, i32 -1789765158, i32 -725712083, i32 1484005843, i32 1239443753, i32 -1899378620, i32 1975683434, i32 -191989384, i32 -1722270101, i32 666464733, i32 -1092530250, i32 -259478249, i32 -920605594, i32 2110667444, i32 1675577880, i32 -451268222, i32 -1756286112, i32 1649639237, i32 -1318815776, i32 -1150570876, i32 -25059300, i32 -116905068, i32 1883793496, i32 -1891238631, i32 -1797362553, i32 1383856311, i32 -1418472669, i32 1917518562, i32 -484470953, i32 1716890410, i32 -1293211641, i32 800440835, i32 -2033878118, i32 -751368027, i32 807962610, i32 599762354, i32 33778362, i32 -317291940, i32 -1966138325, i32 -1485196142, i32 -217582864, i32 1315562145, i32 1708848333, i32 101039829, i32 -785096161, i32 -995688822, i32 875451293, i32 -1561111136, i32 92987698, i32 -1527321739, i32 193195065, i32 1080094634, i32 1584504582, i32 -1116860335, i32 1042385657, i32 -1763899843, i32 -583137874, i32 1306967366, i32 -1856729675, i32 1908694277, i32 67556463, i32 1615861247, i32 429456164, i32 -692196969, i32 -1992277044, i32 1742315127, i32 -1326955843, i32 126454664, i32 -417768648, i32 2043211483, i32 -1585706425, i32 2084704233, i32 -125559095, i32 0, i32 159417987, i32 841739592, i32 504459436, i32 1817866830, i32 -49348613, i32 260388950, i32 1034867998, i32 908933415, i32 168810852, i32 1750902305, i32 -1688513327, i32 607530554, i32 202008497, i32 -1822955761, i32 -1259432238, i32 463180190, i32 -2134850225, i32 1641816226, i32 1517767529, i32 470948374, i32 -493635062, i32 -1063245083, i32 1008918595, i32 303765277, i32 235474187, i32 -225720403, i32 766945465, i32 337553864, i32 1475418501, i32 -1351284916, i32 -291906117, i32 -1551933187, i32 -150919521, i32 1551037884, i32 1147550661, i32 1543208500, i32 -1958532746, i32 -886847780, i32 -1225917336, i32 -1192955549, i32 -684598070, i32 1113818384, i32 328671808, i32 -2067394272, i32 -2058738563, i32 -759480840, i32 -1359400431, i32 -953573011, i32 496906059, i32 -592301837, i32 226906860, i32 2009195472, i32 733156972, i32 -1452230247, i32 294930682, i32 1206477858, i32 -1459843900, i32 -1594867942, i32 1451044056, i32 573804783, i32 -2025238841, i32 -650587711, i32 -1932877058, i32 -1730933962, i32 -1493859889, i32 -1518674392, i32 -625504730, i32 1068351396, i32 742039012, i32 1350078989, i32 1784663195, i32 1417561698, i32 -158526526, i32 -1864845080, i32 775550814, i32 -2101104651, i32 -1621262146, i32 1775276924, i32 1876241833, i32 -819653965, i32 -928212677, i32 270040487, i32 -392404114, i32 -616842373, i32 -853116919, i32 1851332852, i32 -325404927, i32 -2091935064, i32 -426414491, i32 -1426069890, i32 566021896, i32 -283776794, i32 -1159226407, i32 1248802510, i32 -358676012, i32 699432150, i32 832877231, i32 708780849, i32 -962227152, i32 899835584, i32 1951317047, i32 -58537306, i32 -527380304, i32 866637845, i32 -251357110, i32 1106041591, i32 2144161806, i32 395441711, i32 1984812685, i32 1139781709, i32 -861254316, i32 -459930401, i32 -1630423581, i32 1282050075, i32 -1054072904, i32 1181045119, i32 -1654724092, i32 25965917, i32 -91786125, i32 -83148498, i32 -1285087910, i32 -1831087534, i32 -384805325, i32 1842759443, i32 -1697160820, i32 933301370, i32 1509430414, i32 -351060855, i32 -827774994, i32 -1218328267, i32 -518199827, i32 2051518780, i32 -1663901863, i32 1441952575, i32 404016761, i32 1942435775, i32 1408749034, i32 1610459739, i32 -549621996, i32 2017778566, i32 -894438527, i32 -1184316354, i32 941896748, i32 -1029488545, i32 371049330, i32 -1126030068, i32 675039627, i32 -15887039, i32 967311729, i32 135050206, i32 -659233636, i32 1683407248, i32 2076935265, i32 -718096784, i32 1215061108, i32 -793225406], align 16
@Td1 = internal unnamed_addr constant [256 x i32] [i32 1347548327, i32 1400783205, i32 -1021700188, i32 -1774573730, i32 -885281941, i32 -249586363, i32 -1414727080, i32 -1823743229, i32 1428173050, i32 -156404115, i32 -1853305738, i32 636813900, i32 -61872681, i32 -674944309, i32 -2144979644, i32 -1883938141, i32 1239331162, i32 1730525723, i32 -1740248562, i32 -513933632, i32 46346101, i32 310463728, i32 -1551022441, i32 -966011911, i32 -419197089, i32 -1793748324, i32 -339776134, i32 -627748263, i32 768917123, i32 -749177823, i32 692707433, i32 1150208456, i32 1786102409, i32 2029293177, i32 1805211710, i32 -584599183, i32 -1229004465, i32 401639597, i32 1724457132, i32 -1266823622, i32 409198410, i32 -2098914767, i32 1620529459, i32 1164071807, i32 -525245321, i32 -2068091986, i32 486441376, i32 -1795618773, i32 1483753576, i32 428819965, i32 -2020286868, i32 -1219331080, i32 598438867, i32 -495826174, i32 1474502543, i32 711349675, i32 129166120, i32 53458370, i32 -1702443653, i32 -1512884472, i32 -231724921, i32 -1306280027, i32 -1174273174, i32 1559041666, i32 730517276, i32 -1834518092, i32 -252508174, i32 -1588696606, i32 -848962828, i32 -721025602, i32 533804130, i32 -1966823682, i32 -1657524653, i32 -1599933611, i32 839224033, i32 1973745387, i32 957055980, i32 -1438621457, i32 106852767, i32 1371368976, i32 -113368694, i32 1033297158, i32 -1361232379, i32 1179510461, i32 -1248766835, i32 91341917, i32 1862534868, i32 -10465259, i32 605657339, i32 -1747534359, i32 -863420349, i32 2003294622, i32 -1112479678, i32 -2012771957, i32 954669403, i32 -612775698, i32 1201765386, i32 -377732593, i32 -906460130, i32 0, i32 -2096529274, i32 1211247597, i32 -1407315600, i32 1315723890, i32 -67301633, i32 1443857720, i32 507358933, i32 657861945, i32 1678381017, i32 560487590, i32 -778347692, i32 975451694, i32 -1324610969, i32 261314535, i32 -759894378, i32 -1642357871, i32 1333838021, i32 -1570644960, i32 1767536459, i32 370938394, i32 182621114, i32 -440360918, i32 1128014560, i32 487725847, i32 185469197, i32 -1376613433, i32 -1188186456, i32 -938205527, i32 -2057834215, i32 1286567175, i32 -1141990947, i32 -39616672, i32 -1611202266, i32 -1134791947, i32 -985373125, i32 878443390, i32 1988838185, i32 -590666810, i32 1756818940, i32 1673061617, i32 -891866660, i32 272786309, i32 1075025698, i32 545572369, i32 2105887268, i32 -120407235, i32 296679730, i32 1841768865, i32 1260232239, i32 -203640272, i32 -334657966, i32 -797457949, i32 1814803222, i32 -1716948807, i32 -99511224, i32 575138148, i32 -995558260, i32 446754879, i32 -665420500, i32 -282971248, i32 -947435186, i32 -1042728751, i32 -24327518, i32 915985419, i32 -811141759, i32 681933534, i32 651868046, i32 -1539330625, i32 -466863459, i32 223377554, i32 -1687527476, i32 1649704518, i32 -1024029421, i32 -393160520, i32 1580087799, i32 -175979601, i32 -1096852096, i32 2087309459, i32 -1452288723, i32 -1278270190, i32 1003007129, i32 -1492117379, i32 1860738147, i32 2077965243, i32 164439672, i32 -194094824, i32 32283319, i32 -1467789414, i32 1709610350, i32 2125135846, i32 136428751, i32 -420538904, i32 -642062437, i32 -833982666, i32 -722821367, i32 -701910916, i32 -1355701070, i32 824852259, i32 818324884, i32 -1070226842, i32 930369212, i32 -1493400886, i32 -1327460144, i32 355706840, i32 1257309336, i32 -146674470, i32 243256656, i32 790073846, i32 -1921626666, i32 1296297904, i32 1422699085, i32 -538667516, i32 -476130891, i32 457992840, i32 -1195299809, i32 2135319889, i32 77422314, i32 1560382517, i32 1945798516, i32 788204353, i32 1521706781, i32 1385356242, i32 870912086, i32 325965383, i32 -1936009375, i32 2050466060, i32 -1906706412, i32 -1981082820, i32 -288446169, i32 901210569, i32 -304014107, i32 1014646705, i32 1503449823, i32 1062597235, i32 2031621326, i32 -1082931401, i32 -363595827, i32 1533017514, i32 350174575, i32 -2038938405, i32 -2117423117, i32 1052338372, i32 741876788, i32 1606591296, i32 1914052035, i32 213705253, i32 -1960297399, i32 1107234197, i32 1899603969, i32 -569897805, i32 -1663519516, i32 -1872472383, i32 1635502980, i32 1893020342, i32 1950903388, i32 1120974935], align 16
@Td2 = internal unnamed_addr constant [256 x i32] [i32 -1487908364, i32 1699970625, i32 -1530717673, i32 1586903591, i32 1808481195, i32 1173430173, i32 1487645946, i32 59984867, i32 -95084496, i32 1844882806, i32 1989249228, i32 1277555970, i32 -671330331, i32 -875051734, i32 1149249077, i32 -1550863006, i32 1514790577, i32 459744698, i32 244860394, i32 -1058972162, i32 1963115311, i32 -267222708, i32 -1750889146, i32 -104436781, i32 1608975247, i32 -1667951214, i32 2062270317, i32 1507497298, i32 -2094148418, i32 567498868, i32 1764313568, i32 -935031095, i32 -1989511742, i32 2037970062, i32 1047239000, i32 1910319033, i32 1337376481, i32 -1390940024, i32 -1402549984, i32 984907214, i32 1243112415, i32 830661914, i32 861968209, i32 2135253587, i32 2011214180, i32 -1367032981, i32 -1608712575, i32 731183368, i32 1750626376, i32 -48656571, i32 1820824798, i32 -122203525, i32 -752637069, i32 48394827, i32 -1890065633, i32 -1423284651, i32 671593195, i32 -1039978571, i32 2073724613, i32 145085239, i32 -2014171096, i32 -1515052097, i32 1790575107, i32 -2107839210, i32 472615631, i32 -1265457287, i32 -219090169, i32 -492745111, i32 -187865638, i32 -1093335547, i32 1646252340, i32 -24460122, i32 1402811438, i32 1436590835, i32 -516815478, i32 -344611594, i32 -331805821, i32 -274055072, i32 -1626972559, i32 273792366, i32 -1963377119, i32 104699613, i32 95345982, i32 -1119466010, i32 -1917480620, i32 1560637892, i32 -730921978, i32 369057872, i32 -81520232, i32 -375925059, i32 1137477952, i32 -1636341799, i32 1119727848, i32 -1954019447, i32 1530455833, i32 -287606328, i32 172466556, i32 266959938, i32 516552836, i32 0, i32 -2038232704, i32 -314035669, i32 1890328081, i32 1917742170, i32 -262898, i32 945164165, i32 -719438418, i32 958871085, i32 -647755249, i32 -1507760036, i32 1423022939, i32 775562294, i32 1739656202, i32 -418409641, i32 -1764576018, i32 -1851909221, i32 -984645440, i32 547512796, i32 1265195639, i32 437656594, i32 -1173691757, i32 719700128, i32 -532464606, i32 387781147, i32 218828297, i32 -944901493, i32 -1464259146, i32 -1446505442, i32 428169201, i32 122466165, i32 -574886247, i32 1627235199, i32 648017665, i32 -172204942, i32 1002783846, i32 2117360635, i32 695634755, i32 -958608605, i32 -60246291, i32 -245122844, i32 -590686415, i32 -2062531997, i32 574624663, i32 287343814, i32 612205898, i32 1039717051, i32 840019705, i32 -1586641111, i32 793451934, i32 821288114, i32 1391201670, i32 -472877119, i32 376187827, i32 -1181111952, i32 1224348052, i32 1679968233, i32 -1933268740, i32 1058709744, i32 752375421, i32 -1863376333, i32 1321699145, i32 -775825096, i32 -1560376118, i32 188127444, i32 -2117097739, i32 -567761542, i32 -1910056265, i32 -1079754835, i32 -1645990854, i32 -1844621192, i32 -862229921, i32 1180849278, i32 331544205, i32 -1192718120, i32 -144822727, i32 -1342864701, i32 -2134991011, i32 -1820562992, i32 766078933, i32 313773861, i32 -1724135252, i32 2108100632, i32 1668212892, i32 -1149510853, i32 2013908262, i32 418672217, i32 -1224610662, i32 -1700232369, i32 1852171925, i32 -427906305, i32 -821550660, i32 -387518699, i32 -1680229657, i32 919489135, i32 164948639, i32 2094410160, i32 -1297141340, i32 590424639, i32 -1808742747, i32 1723872674, i32 -1137216434, i32 -895026046, i32 -793714544, i32 -669699161, i32 -1739919100, i32 -621329940, i32 1343127501, i32 -164685935, i32 -695372211, i32 -1337113617, i32 1297403050, i32 81781910, i32 -1243373871, i32 -2011476886, i32 532201772, i32 1367295589, i32 -368796322, i32 895287692, i32 1953757831, i32 1093597963, i32 492483431, i32 -766340389, i32 1446242576, i32 1192455638, i32 1636604631, i32 209336225, i32 344873464, i32 1015671571, i32 669961897, i32 -919226527, i32 -437395172, i32 -1321436601, i32 -547775278, i32 1933530610, i32 -830924780, i32 935293895, i32 -840281097, i32 -1436852227, i32 1863638845, i32 -611944380, i32 -209597777, i32 -1002522264, i32 875313188, i32 1080017571, i32 -1015933411, i32 621591778, i32 1233856572, i32 -1790836979, i32 24197544, i32 -1277294580, i32 -459482956, i32 -1047501738, i32 -2073986101, i32 -1234119374, i32 1551124588, i32 1463996600], align 16
@Td3 = internal unnamed_addr constant [256 x i32] [i32 -190361519, i32 1097159550, i32 396673818, i32 660510266, i32 -1418998981, i32 -1656360673, i32 -94852180, i32 -486304949, i32 821712160, i32 1986918061, i32 -864644728, i32 38544885, i32 -438830001, i32 718002117, i32 893681702, i32 1654886325, i32 -1319482914, i32 -1172609243, i32 -368142267, i32 -20913827, i32 796197571, i32 1290801793, i32 1184342925, i32 -738605461, i32 -1889540349, i32 -1835231979, i32 1836772287, i32 1381620373, i32 -1098699308, i32 1948373848, i32 -529979063, i32 -909622130, i32 -1031181707, i32 -1904641804, i32 1480485785, i32 -1183720153, i32 -514869570, i32 -2001922064, i32 548169417, i32 -835013507, i32 -548792221, i32 439452389, i32 1362321559, i32 1400849762, i32 1685577905, i32 1806599355, i32 -2120213250, i32 137073913, i32 1214797936, i32 1174215055, i32 -563312748, i32 2079897426, i32 1943217067, i32 1258480242, i32 529487843, i32 1437280870, i32 -349698126, i32 -1245576401, i32 -981755258, i32 923313619, i32 679998000, i32 -1079659997, i32 57326082, i32 377642221, i32 -820237430, i32 2041877159, i32 133361907, i32 1776460110, i32 -621490843, i32 96392454, i32 878845905, i32 -1493267772, i32 777231668, i32 -212492126, i32 -1964953083, i32 -152341084, i32 -2081670901, i32 1626319424, i32 1906247262, i32 1846563261, i32 562755902, i32 -586793578, i32 1040559837, i32 -423803315, i32 1418573201, i32 -1000536719, i32 114585348, i32 1343618912, i32 -1728371687, i32 -1108764714, i32 1078185097, i32 -643926169, i32 -398279248, i32 -1987344377, i32 425408743, i32 -923870343, i32 2081048481, i32 1108339068, i32 -2078357000, i32 0, i32 -2138668279, i32 736970802, i32 292596766, i32 1517440620, i32 251657213, i32 -2059905521, i32 -1361764803, i32 758720310, i32 265905162, i32 1554391400, i32 1532285339, i32 908999204, i32 174567692, i32 1474760595, i32 -292105548, i32 -1684955621, i32 -1060810880, i32 -601841055, i32 2001430874, i32 303699484, i32 -1816524062, i32 -1607801408, i32 585122620, i32 454499602, i32 151849742, i32 -1949848078, i32 -1230456531, i32 514443284, i32 -249985705, i32 1963412655, i32 -1713521682, i32 2137062819, i32 19308535, i32 1928707164, i32 1715193156, i32 -75615141, i32 1126790795, i32 600235211, i32 -302225226, i32 -453942344, i32 836553431, i32 1669664834, i32 -1759363053, i32 -971956092, i32 1243905413, i32 -1153566510, i32 -114159186, i32 698445255, i32 -1641067747, i32 -1305414692, i32 -2041385971, i32 -1042034569, i32 -1290376149, i32 1891211689, i32 -1807156719, i32 -379313593, i32 -57883480, i32 -264299872, i32 2100090966, i32 865136418, i32 1229899655, i32 953270745, i32 -895287668, i32 -737462632, i32 -176042074, i32 2061379749, i32 -1215420710, i32 -1379949505, i32 983426092, i32 2022837584, i32 1607244650, i32 2118541908, i32 -1928084746, i32 -658970480, i32 972512814, i32 -1011878526, i32 1568718495, i32 -795640727, i32 -718427793, i32 621982671, i32 -1399243832, i32 410887952, i32 -1671205144, i32 1002142683, i32 645401037, i32 1494807662, i32 -1699282452, i32 1335535747, i32 -1787927066, i32 -1671510, i32 -1127282655, i32 367585007, i32 -409216582, i32 1865862730, i32 -1626745622, i32 -1333995991, i32 -1531793615, i32 1059270954, i32 -1517014842, i32 -1570324427, i32 1320957812, i32 -2100648196, i32 -1865371424, i32 -1479011021, i32 77089521, i32 -321194175, i32 -850391425, i32 -1846137065, i32 1305906550, i32 -273658557, i32 -1437772596, i32 -1778065436, i32 -776608866, i32 1787304780, i32 740276417, i32 1699839814, i32 1592394909, i32 -1942659839, i32 -2022411270, i32 188821243, i32 1729977011, i32 -606973294, i32 274084841, i32 -699985043, i32 -681472870, i32 -1593017801, i32 -132870567, i32 322734571, i32 -1457000754, i32 1640576439, i32 484830689, i32 1202797690, i32 -757114468, i32 -227328171, i32 349075736, i32 -952647821, i32 -137500077, i32 -39167137, i32 1030690015, i32 1155237496, i32 -1342996022, i32 1757691577, i32 607398968, i32 -1556062270, i32 499347990, i32 -500888388, i32 1011452712, i32 227885567, i32 -1476300487, i32 213114376, i32 -1260086056, i32 1455525988, i32 -880516741, i32 850817237, i32 1817998408, i32 -1202240816], align 16
@Te0 = internal unnamed_addr constant [256 x i32] [i32 -966564955, i32 -126059388, i32 -294160487, i32 -159679603, i32 -855539, i32 -697603139, i32 -563122255, i32 -1849309868, i32 1613770832, i32 33620227, i32 -832084055, i32 1445669757, i32 -402719207, i32 -1244145822, i32 1303096294, i32 -327780710, i32 -1882535355, i32 528646813, i32 -1983264448, i32 -92439161, i32 -268764651, i32 -1302767125, i32 -1907931191, i32 -68095989, i32 1101901292, i32 -1277897625, i32 1604494077, i32 1169141738, i32 597466303, i32 1403299063, i32 -462261610, i32 -1681866661, i32 1974974402, i32 -503448292, i32 1033081774, i32 1277568618, i32 1815492186, i32 2118074177, i32 -168298750, i32 -2083730353, i32 1748251740, i32 1369810420, i32 -773462732, i32 -101584632, i32 -495881837, i32 -1411852173, i32 1647391059, i32 706024767, i32 134480908, i32 -1782069422, i32 1176707941, i32 -1648114850, i32 806885416, i32 932615841, i32 168101135, i32 798661301, i32 235341577, i32 605164086, i32 461406363, i32 -538779075, i32 -840176858, i32 1311188841, i32 2142417613, i32 -361400929, i32 302582043, i32 495158174, i32 1479289972, i32 874125870, i32 907746093, i32 -596742478, i32 -1269146898, i32 1537253627, i32 -1538108682, i32 1983593293, i32 -1210657183, i32 2108928974, i32 1378429307, i32 -572267714, i32 1580150641, i32 327451799, i32 -1504488459, i32 -1177431704, i32 0, i32 -1041371860, i32 1075847264, i32 -469959649, i32 2041688520, i32 -1235526675, i32 -731223362, i32 -1916023994, i32 1740553945, i32 1916352843, i32 -1807070498, i32 -1739830060, i32 -1336387352, i32 -2049978550, i32 -1143943061, i32 -974131414, i32 1336584933, i32 -302253290, i32 -2042412091, i32 -1706209833, i32 1714631509, i32 293963156, i32 -1975171633, i32 -369493744, i32 67240454, i32 -25198719, i32 -1605349136, i32 2017213508, i32 631218106, i32 1269344483, i32 -1571728909, i32 1571005438, i32 -2143272768, i32 93294474, i32 1066570413, i32 563977660, i32 1882732616, i32 -235539196, i32 1673313503, i32 2008463041, i32 -1344611723, i32 1109467491, i32 537923632, i32 -436207846, i32 -34344178, i32 -1076702611, i32 -2117218996, i32 403442708, i32 638784309, i32 -1007883217, i32 -1101045791, i32 899127202, i32 -2008791860, i32 773265209, i32 -1815821225, i32 1437050866, i32 -58818942, i32 2050833735, i32 -932944724, i32 -1168286233, i32 840505643, i32 -428641387, i32 -1067425632, i32 427917720, i32 -1638969391, i32 -1545806721, i32 1143087718, i32 1412049534, i32 999329963, i32 193497219, i32 -1941551414, i32 -940642775, i32 1807268051, i32 672404540, i32 -1478566279, i32 -1134666014, i32 369822493, i32 -1378100362, i32 -606019525, i32 1681011286, i32 1949973070, i32 336202270, i32 -1840690725, i32 201721354, i32 1210328172, i32 -1201906460, i32 -1614626211, i32 -1110191250, i32 1135389935, i32 -1000185178, i32 965841320, i32 831886756, i32 -739974089, i32 -226920053, i32 -706222286, i32 -1949775805, i32 104281945, i32 -630362697, i32 26054028, i32 -1311386268, i32 -1672589614, i32 1235855840, i32 -663982924, i32 -1403627782, i32 -202050553, i32 -806688219, i32 -899324497, i32 -193299826, i32 1202630377, i32 268961816, i32 1874508501, i32 -260540280, i32 1243948399, i32 1546530418, i32 941366308, i32 1470539505, i32 1941222599, i32 -1748580783, i32 -873928669, i32 -1579295364, i32 -395021156, i32 1042226977, i32 -1773450275, i32 1639824860, i32 227249030, i32 260737669, i32 -529502064, i32 2084453954, i32 1907733956, i32 -865704278, i32 -1874310952, i32 100860677, i32 -134810111, i32 470683154, i32 -1033805405, i32 1781871967, i32 -1370007559, i32 1773779408, i32 394692241, i32 -1715355304, i32 974986535, i32 664706745, i32 -639508168, i32 -336005101, i32 731420851, i32 571543859, i32 -764843589, i32 -1445340816, i32 126783113, i32 865375399, i32 765172662, i32 1008606754, i32 361203602, i32 -907417312, i32 -2016489911, i32 -1437248001, i32 1344809080, i32 -1512054918, i32 59542671, i32 1503764984, i32 160008576, i32 437062935, i32 1707065306, i32 -672733647, i32 -2076032314, i32 -798463816, i32 -2109652541, i32 697932208, i32 1512910199, i32 504303377, i32 2075177163, i32 -1470868228, i32 1841019862, i32 739644986], align 16
@Te1 = internal unnamed_addr constant [256 x i32] [i32 -1513725085, i32 -2064089988, i32 -1712425097, i32 -1913226373, i32 234877682, i32 -1110021269, i32 -1310822545, i32 1418839493, i32 1348481072, i32 50462977, i32 -1446090905, i32 2102799147, i32 434634494, i32 1656084439, i32 -431117397, i32 -1695779210, i32 1167051466, i32 -1658879358, i32 1082771913, i32 -2013627011, i32 368048890, i32 -340633255, i32 -913422521, i32 201060592, i32 -331240019, i32 1739838676, i32 -44064094, i32 -364531793, i32 -1088185188, i32 -145513308, i32 -1763413390, i32 1536934080, i32 -1032472649, i32 484572669, i32 -1371696237, i32 1783375398, i32 1517041206, i32 1098792767, i32 49674231, i32 1334037708, i32 1550332980, i32 -195975771, i32 886171109, i32 150598129, i32 -1813876367, i32 1940642008, i32 1398944049, i32 1059722517, i32 201851908, i32 1385547719, i32 1699095331, i32 1587397571, i32 674240536, i32 -1590192490, i32 252314885, i32 -1255171430, i32 151914247, i32 908333586, i32 -1692696448, i32 1038082786, i32 651029483, i32 1766729511, i32 -847269198, i32 -1612024459, i32 454166793, i32 -1642232957, i32 1951935532, i32 775166490, i32 758520603, i32 -1294176658, i32 -290170278, i32 -77881184, i32 -157003182, i32 1299594043, i32 1639438038, i32 -830622797, i32 2068982057, i32 1054729187, i32 1901997871, i32 -1760328572, i32 -173649069, i32 1757008337, i32 0, i32 750906861, i32 1614815264, i32 535035132, i32 -931548751, i32 -306816165, i32 -1093375382, i32 1183697867, i32 -647512386, i32 1265776953, i32 -560706998, i32 -728216500, i32 -391096232, i32 1250283471, i32 1807470800, i32 717615087, i32 -447763798, i32 384695291, i32 -981056701, i32 -677753523, i32 1432761139, i32 -1810791035, i32 -813021883, i32 283769337, i32 100925954, i32 -2114027649, i32 -257929136, i32 1148730428, i32 -1171939425, i32 -481580888, i32 -207466159, i32 -27417693, i32 -1065336768, i32 -1979347057, i32 -1388342638, i32 -1138647651, i32 1215313976, i32 82966005, i32 -547111748, i32 -1049119050, i32 1974459098, i32 1665278241, i32 807407632, i32 451280895, i32 251524083, i32 1841287890, i32 1283575245, i32 337120268, i32 891687699, i32 801369324, i32 -507617441, i32 -1573546089, i32 -863484860, i32 959321879, i32 1469301956, i32 -229267545, i32 -2097381762, i32 1199193405, i32 -1396153244, i32 -407216803, i32 724703513, i32 -1780059277, i32 -1598005152, i32 -1743158911, i32 -778154161, i32 2141445340, i32 1715741218, i32 2119445034, i32 -1422159728, i32 -2096396152, i32 -896776634, i32 700968686, i32 -747915080, i32 1009259540, i32 2041044702, i32 -490971554, i32 487983883, i32 1991105499, i32 1004265696, i32 1449407026, i32 1316239930, i32 504629770, i32 -611169975, i32 168560134, i32 1816667172, i32 -457679780, i32 1570751170, i32 1857934291, i32 -280777556, i32 -1497079198, i32 -1472622191, i32 -1540254315, i32 936633572, i32 -1947043463, i32 852879335, i32 1133234376, i32 1500395319, i32 -1210421907, i32 -1946055283, i32 1689376213, i32 -761508274, i32 -532043351, i32 -1260884884, i32 -89369002, i32 133428468, i32 634383082, i32 -1345690267, i32 -1896580486, i32 -381178194, i32 403703816, i32 -714097990, i32 -1997506440, i32 1867130149, i32 1918643758, i32 607656988, i32 -245913946, i32 -948718412, i32 1368901318, i32 600565992, i32 2090982877, i32 -1662487436, i32 557719327, i32 -577352885, i32 -597574211, i32 -2045932661, i32 -2062579062, i32 -1864339344, i32 1115438654, i32 -999180875, i32 -1429445018, i32 -661632952, i32 84280067, i32 33027830, i32 303828494, i32 -1547542175, i32 1600795957, i32 -106014889, i32 -798377543, i32 -1860729210, i32 1486471617, i32 658119965, i32 -1188585826, i32 953803233, i32 334231800, i32 -1288988520, i32 857870609, i32 -1143838359, i32 1890179545, i32 -1995993458, i32 -1489791852, i32 -1238525029, i32 574365214, i32 -1844082809, i32 550103529, i32 1233637070, i32 -5614251, i32 2018519080, i32 2057691103, i32 -1895592820, i32 -128343647, i32 -2146858615, i32 387583245, i32 -630865985, i32 836232934, i32 -964410814, i32 -1194301336, i32 -1014873791, i32 -1339450983, i32 2002398509, i32 287182607, i32 -881086288, i32 -56077228, i32 -697451589, i32 975967766], align 16
@Te2 = internal unnamed_addr constant [256 x i32] [i32 1671808611, i32 2089089148, i32 2006576759, i32 2072901243, i32 -233963534, i32 1807603307, i32 1873927791, i32 -984313403, i32 810573872, i32 16974337, i32 1739181671, i32 729634347, i32 -31856642, i32 -681396777, i32 -1410970197, i32 1989864566, i32 -901410870, i32 -2103631998, i32 -918517303, i32 2106063485, i32 -99225606, i32 1508618841, i32 1204391495, i32 -267650064, i32 -1377025619, i32 -731401260, i32 -1560453214, i32 -1343601233, i32 -1665195108, i32 -1527295068, i32 1922491506, i32 -1067738176, i32 -1211992649, i32 -48438787, i32 -1817297517, i32 644500518, i32 911895606, i32 1061256767, i32 -150800905, i32 -867204148, i32 878471220, i32 -1510714971, i32 -449523227, i32 -251069967, i32 1905517169, i32 -663508008, i32 827548209, i32 356461077, i32 67897348, i32 -950889017, i32 593839651, i32 -1017209405, i32 405286936, i32 -1767819370, i32 84871685, i32 -1699401830, i32 118033927, i32 305538066, i32 -2137318528, i32 -499261470, i32 -349778453, i32 661212711, i32 -1295155278, i32 1973414517, i32 152769033, i32 -2086789757, i32 745822252, i32 439235610, i32 455947803, i32 1857215598, i32 1525593178, i32 -1594139744, i32 1391895634, i32 994932283, i32 -698239018, i32 -1278313037, i32 695947817, i32 -482419229, i32 795958831, i32 -2070473852, i32 1408607827, i32 -781665839, i32 0, i32 -315833875, i32 543178784, i32 -65018884, i32 -1312261711, i32 1542305371, i32 1790891114, i32 -884568629, i32 -1093048386, i32 961245753, i32 1256100938, i32 1289001036, i32 1491644504, i32 -817199665, i32 -798245936, i32 -282409489, i32 -1427812438, i32 -82383365, i32 1137018435, i32 1305975373, i32 861234739, i32 -2053893755, i32 1171229253, i32 -116332039, i32 33948674, i32 2139225727, i32 1357946960, i32 1011120188, i32 -1615190625, i32 -1461498968, i32 1374921297, i32 -1543610973, i32 1086357568, i32 -1886780017, i32 -1834139758, i32 -1648615011, i32 944271416, i32 -184225291, i32 -1126210628, i32 -1228834890, i32 -629821478, i32 560153121, i32 271589392, i32 -15014401, i32 -217121293, i32 -764559406, i32 -850624051, i32 202643468, i32 322250259, i32 -332413972, i32 1608629855, i32 -1750977129, i32 1154254916, i32 389623319, i32 -1000893500, i32 -1477290585, i32 2122513534, i32 1028094525, i32 1689045092, i32 1575467613, i32 422261273, i32 1939203699, i32 1621147744, i32 -2120738431, i32 1339137615, i32 -595614756, i32 577127458, i32 712922154, i32 -1867826288, i32 -2004677752, i32 1187679302, i32 -299251730, i32 -1194103880, i32 339486740, i32 -562452514, i32 1591917662, i32 186455563, i32 -612979237, i32 -532948000, i32 844522546, i32 978220090, i32 169743370, i32 1239126601, i32 101321734, i32 611076132, i32 1558493276, i32 -1034051646, i32 -747717165, i32 -1393605716, i32 1655096418, i32 -1851246191, i32 -1784401515, i32 -466103324, i32 2039214713, i32 -416098841, i32 -935097400, i32 928607799, i32 1840765549, i32 -1920204403, i32 -714821163, i32 1322425422, i32 -1444918871, i32 1823791212, i32 1459268694, i32 -200805388, i32 -366620694, i32 1706019429, i32 2056189050, i32 -1360443474, i32 135794696, i32 -1160417350, i32 2022240376, i32 628050469, i32 779246638, i32 472135708, i32 -1494132826, i32 -1261997132, i32 -967731258, i32 -400307224, i32 -579034659, i32 1956440180, i32 522272287, i32 1272813131, i32 -1109630531, i32 -1954148981, i32 -1970991222, i32 1888542832, i32 1044544574, i32 -1245417035, i32 1722469478, i32 1222152264, i32 50660867, i32 -167643146, i32 236067854, i32 1638122081, i32 895445557, i32 1475980887, i32 -1177523783, i32 -2037311610, i32 -1051158079, i32 489110045, i32 -1632032866, i32 -516367903, i32 -132912136, i32 -1733088360, i32 288563729, i32 1773916777, i32 -646927911, i32 -1903622258, i32 -1800981612, i32 -1682559589, i32 505560094, i32 -2020469369, i32 -383727127, i32 -834041906, i32 1442818645, i32 678973480, i32 -545610273, i32 -1936784500, i32 -1577559647, i32 -1988097655, i32 219617805, i32 -1076206145, i32 -432941082, i32 1120306242, i32 1756942440, i32 1103331905, i32 -1716508263, i32 762796589, i32 252780047, i32 -1328841808, i32 1425844308, i32 -1143575109, i32 372911126], align 16
@Te3 = internal unnamed_addr constant [256 x i32] [i32 1667474886, i32 2088535288, i32 2004326894, i32 2071694838, i32 -219017729, i32 1802223062, i32 1869591006, i32 -976923503, i32 808472672, i32 16843522, i32 1734846926, i32 724270422, i32 -16901657, i32 -673750347, i32 -1414797747, i32 1987484396, i32 -892713585, i32 -2105369313, i32 -909557623, i32 2105378810, i32 -84273681, i32 1499065266, i32 1195886990, i32 -252703749, i32 -1381110719, i32 -724277325, i32 -1566376609, i32 -1347425723, i32 -1667449053, i32 -1532692653, i32 1920112356, i32 -1061135461, i32 -1212693899, i32 -33743647, i32 -1819038147, i32 640051788, i32 909531756, i32 1061110142, i32 -134806795, i32 -859025533, i32 875846760, i32 -1515850671, i32 -437963567, i32 -235861767, i32 1903268834, i32 -656903253, i32 825316194, i32 353713962, i32 67374088, i32 -943238507, i32 589522246, i32 -1010606435, i32 404236336, i32 -1768513225, i32 84217610, i32 -1701137105, i32 117901582, i32 303183396, i32 -2139055333, i32 -488489505, i32 -336910643, i32 656894286, i32 -1296904833, i32 1970642922, i32 151591698, i32 -2088526307, i32 741110872, i32 437923380, i32 454765878, i32 1852748508, i32 1515908788, i32 -1600062629, i32 1381168804, i32 993742198, i32 -690593353, i32 -1280061827, i32 690584402, i32 -471646499, i32 791638366, i32 -2071685357, i32 1398011302, i32 -774805319, i32 0, i32 -303223615, i32 538992704, i32 -50585629, i32 -1313748871, i32 1532751286, i32 1785380564, i32 -875870579, i32 -1094788761, i32 960056178, i32 1246420628, i32 1280103576, i32 1482221744, i32 -808498555, i32 -791647301, i32 -269538619, i32 -1431640753, i32 -67430675, i32 1128514950, i32 1296947098, i32 859002214, i32 -2054843375, i32 1162203018, i32 -101117719, i32 33687044, i32 2139062782, i32 1347481760, i32 1010582648, i32 -1616922075, i32 -1465326773, i32 1364325282, i32 -1549533603, i32 1077985408, i32 -1886418427, i32 -1835881153, i32 -1650607071, i32 943212656, i32 -168491791, i32 -1128472733, i32 -1229536905, i32 -623217233, i32 555836226, i32 269496352, i32 -58651, i32 -202174723, i32 -757961281, i32 -842183551, i32 202118168, i32 320025894, i32 -320065597, i32 1600119230, i32 -1751670219, i32 1145359496, i32 387397934, i32 -993765485, i32 -1482165675, i32 2122220284, i32 1027426170, i32 1684319432, i32 1566435258, i32 421079858, i32 1936954854, i32 1616945344, i32 -2122213351, i32 1330631070, i32 -589529181, i32 572679748, i32 707427924, i32 -1869567173, i32 -2004319477, i32 1179044492, i32 -286381625, i32 -1195846805, i32 336870440, i32 -555845209, i32 1583276732, i32 185277718, i32 -606374227, i32 -522175525, i32 842159716, i32 976899700, i32 168435220, i32 1229577106, i32 101059084, i32 606366792, i32 1549591736, i32 -1027449441, i32 -741118275, i32 -1397952701, i32 1650632388, i32 -1852725191, i32 -1785355215, i32 -454805549, i32 2038008818, i32 -404278571, i32 -926399605, i32 926374254, i32 1835907034, i32 -1920103423, i32 -707435343, i32 1313788572, i32 -1448484791, i32 1819063512, i32 1448540844, i32 -185333773, i32 -353753649, i32 1701162954, i32 2054852340, i32 -1364268729, i32 134748176, i32 -1162160785, i32 2021165296, i32 623210314, i32 774795868, i32 471606328, i32 -1499008681, i32 -1263220877, i32 -960081513, i32 -387439669, i32 -572687199, i32 1953799400, i32 522133822, i32 1263263126, i32 -1111630751, i32 -1953790451, i32 -1970633457, i32 1886425312, i32 1044267644, i32 -1246378895, i32 1718004428, i32 1212733584, i32 50529542, i32 -151649801, i32 235803164, i32 1633788866, i32 892690282, i32 1465383342, i32 -1179004823, i32 -2038001385, i32 -1044293479, i32 488449850, i32 -1633765081, i32 -505333543, i32 -117959701, i32 -1734823125, i32 286339874, i32 1768537042, i32 -640061271, i32 -1903261433, i32 -1802197197, i32 -1684294099, i32 505291324, i32 -2021158379, i32 -370597687, i32 -825341561, i32 1431699370, i32 673740880, i32 -539002203, i32 -1936945405, i32 -1583220647, i32 -1987477495, i32 218961690, i32 -1077945755, i32 -421121577, i32 1111672452, i32 1751693520, i32 1094828930, i32 -1717981143, i32 757954394, i32 252645662, i32 -1330590853, i32 1414855848, i32 -1145317779, i32 370555436], align 16
@Td4 = internal unnamed_addr constant [256 x i32] [i32 1381126738, i32 151587081, i32 1785358954, i32 -707406379, i32 808464432, i32 909522486, i32 -1515870811, i32 943208504, i32 -1077952577, i32 1077952576, i32 -1549556829, i32 -1633771874, i32 -2122219135, i32 -202116109, i32 -673720361, i32 -67372037, i32 2088533116, i32 -471604253, i32 960051513, i32 -2105376126, i32 -1684300901, i32 791621423, i32 -1, i32 -2021161081, i32 875836468, i32 -1903260018, i32 1128481603, i32 1145324612, i32 -993737532, i32 -555819298, i32 -370546199, i32 -875836469, i32 1414812756, i32 2071690107, i32 -1802201964, i32 842150450, i32 -1499027802, i32 -1027423550, i32 589505315, i32 1027423549, i32 -286331154, i32 1280068684, i32 -1785358955, i32 185273099, i32 1111638594, i32 -84215046, i32 -1010580541, i32 1313754702, i32 134744072, i32 774778414, i32 -1583242847, i32 1717986918, i32 673720360, i32 -640034343, i32 606348324, i32 -1296911694, i32 1987475062, i32 1532713819, i32 -1566399838, i32 1229539657, i32 1835887981, i32 -1953789045, i32 -774778415, i32 623191333, i32 1920103026, i32 -117901064, i32 -151587082, i32 1684300900, i32 -2038004090, i32 1751672936, i32 -1734829928, i32 370546198, i32 -724249388, i32 -1532713820, i32 1549556828, i32 -858993460, i32 1566399837, i32 1701143909, i32 -1229539658, i32 -1835887982, i32 1819044972, i32 1886417008, i32 1212696648, i32 1347440720, i32 -33686019, i32 -303174163, i32 -1179010631, i32 -623191334, i32 1583242846, i32 353703189, i32 1179010630, i32 1465341783, i32 -1482184793, i32 -1920103027, i32 -1650614883, i32 -2071690108, i32 -1869574000, i32 -656877352, i32 -1414812757, i32 0, i32 -1936946036, i32 -1128481604, i32 -741092397, i32 168430090, i32 -134744073, i32 -454761244, i32 1482184792, i32 84215045, i32 -1195853640, i32 -1280068685, i32 1162167621, i32 101058054, i32 -791621424, i32 741092396, i32 505290270, i32 -1886417009, i32 -892679478, i32 1061109567, i32 252645135, i32 33686018, i32 -1044266559, i32 -1347440721, i32 -1111638595, i32 50529027, i32 16843009, i32 320017171, i32 -1970632054, i32 1802201963, i32 976894522, i32 -1852730991, i32 286331153, i32 1094795585, i32 1330597711, i32 1734829927, i32 -589505316, i32 -353703190, i32 -1751672937, i32 -218959118, i32 -808464433, i32 -825307442, i32 -252645136, i32 -1263225676, i32 -421075226, i32 1936946035, i32 -1768515946, i32 -1397969748, i32 1953789044, i32 572662306, i32 -404232217, i32 -1381126739, i32 892679477, i32 -2054847099, i32 -488447262, i32 -101058055, i32 926365495, i32 -387389208, i32 471604252, i32 1970632053, i32 -538976289, i32 1852730990, i32 1195853639, i32 -235802127, i32 437918234, i32 1903260017, i32 488447261, i32 690563369, i32 -976894523, i32 -1987475063, i32 1869573999, i32 -1212696649, i32 1650614882, i32 235802126, i32 -1431655766, i32 404232216, i32 -1094795586, i32 454761243, i32 -50529028, i32 1448498774, i32 1044266558, i32 1263225675, i32 -960051514, i32 -757935406, i32 2038004089, i32 538976288, i32 -1701143910, i32 -606348325, i32 -1061109568, i32 -16843010, i32 2021161080, i32 -842150451, i32 1515870810, i32 -185273100, i32 522133279, i32 -572662307, i32 -1465341784, i32 858993459, i32 -2004318072, i32 117901063, i32 -943208505, i32 825307441, i32 -1313754703, i32 303174162, i32 269488144, i32 1499027801, i32 656877351, i32 -2139062144, i32 -320017172, i32 1600085855, i32 1616928864, i32 1364283729, i32 2139062143, i32 -1448498775, i32 421075225, i32 -1246382667, i32 1246382666, i32 218959117, i32 757935405, i32 -437918235, i32 2054847098, i32 -1616928865, i32 -1819044973, i32 -909522487, i32 -1667457892, i32 -269488145, i32 -1600085856, i32 -522133280, i32 993737531, i32 1296911693, i32 -1364283730, i32 707406378, i32 -168430091, i32 -1330597712, i32 -926365496, i32 -336860181, i32 -1145324613, i32 1010580540, i32 -2088533117, i32 1397969747, i32 -1717986919, i32 1633771873, i32 387389207, i32 724249387, i32 67372036, i32 2122219134, i32 -1162167622, i32 2004318071, i32 -690563370, i32 640034342, i32 -505290271, i32 1768515945, i32 336860180, i32 1667457891, i32 1431655765, i32 555819297, i32 202116108, i32 2105376125], align 16
@.str.11 = private unnamed_addr constant [10 x i8] c"xlen >= 0\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"dudect-examples/aes32/sources/random.c\00", align 1
@__PRETTY_FUNCTION__.randombytes = private unnamed_addr constant [36 x i8] c"void randombytes(uint8_t *, size_t)\00", align 1
@randombytes.fd = internal unnamed_addr global i32 -1, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca [16 x i8], align 16
  call void @init_dut()
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %2, i8* nonnull align 16 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.main.input_data, i64 0, i64 0), i64 16, i1 false)
  %3 = call i8 @do_one_computation(i8* nonnull %2, i64 undef, i32 11) #3
  %4 = zext i8 %3 to i32
  %5 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %4)
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind
define i8 @do_one_computation(i8* nocapture readonly %0, i64 %N, i32 %1) local_unnamed_addr #3 {
  %3 = alloca [16 x i8], align 16
  %4 = alloca [16 x i8], align 16
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 1 dereferenceable(16) %0, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i32 %1, i8* nonnull %5, i64 undef, i8* nonnull %6, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %5, i8* nonnull align 16 dereferenceable(16) %6, i64 16, i1 false)
  %7 = load i8, i8* %6, align 16
  ret i8 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @init_dut() local_unnamed_addr #0 {
  %1 = alloca [16 x i8], align 16
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  %3 = call i32 @rijndaelKeySetupEnc(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 44, i8* nonnull %2, i64 16, i32 128) #3
  ret void
}

define void @prepare_inputs(i8* nocapture %0, i64 %N, i8* nocapture %1, i64 %N1) local_unnamed_addr {
  call void @randombytes(i8* %0, i64 undef, i64 16)
  %3 = call zeroext i8 @randombit()
  store i8 %3, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  br label %6

6:                                                ; preds = %5, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind
define i32 @rijndaelKeySetupEnc(i32* %0, i64 %N, i8* readonly %1, i64 %N1, i32 %2) local_unnamed_addr #4 {
.preheader8:
  %3 = load i8, i8* %1, align 1
  %4 = zext i8 %3 to i32
  %5 = shl nuw i32 %4, 24
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = shl nuw nsw i32 %8, 16
  %10 = or i32 %9, %5
  %11 = getelementptr inbounds i8, i8* %1, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = shl nuw nsw i32 %13, 8
  %15 = or i32 %10, %14
  %16 = getelementptr inbounds i8, i8* %1, i64 3
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = or i32 %15, %18
  store i32 %19, i32* %0, align 4
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw i32 %22, 24
  %24 = getelementptr inbounds i8, i8* %1, i64 5
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 16
  %28 = or i32 %27, %23
  %29 = getelementptr inbounds i8, i8* %1, i64 6
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 8
  %33 = or i32 %28, %32
  %34 = getelementptr inbounds i8, i8* %1, i64 7
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = or i32 %33, %36
  %38 = getelementptr inbounds i32, i32* %0, i64 1
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %1, i64 8
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw i32 %41, 24
  %43 = getelementptr inbounds i8, i8* %1, i64 9
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 16
  %47 = or i32 %46, %42
  %48 = getelementptr inbounds i8, i8* %1, i64 10
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %50, 8
  %52 = or i32 %47, %51
  %53 = getelementptr inbounds i8, i8* %1, i64 11
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = or i32 %52, %55
  %57 = getelementptr inbounds i32, i32* %0, i64 2
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %1, i64 12
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw i32 %60, 24
  %62 = getelementptr inbounds i8, i8* %1, i64 13
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl nuw nsw i32 %64, 16
  %66 = or i32 %65, %61
  %67 = getelementptr inbounds i8, i8* %1, i64 14
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl nuw nsw i32 %69, 8
  %71 = or i32 %66, %70
  %72 = getelementptr inbounds i8, i8* %1, i64 15
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = or i32 %71, %74
  %76 = getelementptr inbounds i32, i32* %0, i64 3
  store i32 %75, i32* %76, align 4
  %77 = icmp eq i32 %2, 128
  %shadow.sroa.0 = alloca i32, align 8
  %78 = xor i1 %77, true
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = icmp sgt i64 %N1, 0
  %safe.357 = or i1 %80, %78
  %shadow.sroa.0.0.sroa_cast2053 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.358 = select i1 %safe.357, i8* %79, i8* %shadow.sroa.0.0.sroa_cast2053
  %81 = load i8, i8* %select.ptr.358, align 1
  %82 = zext i8 %81 to i32
  %83 = shl nuw i32 %82, 24
  %84 = getelementptr inbounds i8, i8* %1, i64 17
  %85 = icmp sgt i64 %N1, 1
  %safe.359 = or i1 %85, %78
  %shadow.sroa.0.0.sroa_cast2052 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.360 = select i1 %safe.359, i8* %84, i8* %shadow.sroa.0.0.sroa_cast2052
  %86 = load i8, i8* %select.ptr.360, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 16
  %89 = or i32 %88, %83
  %90 = getelementptr inbounds i8, i8* %1, i64 18
  %91 = icmp sgt i64 %N1, 2
  %safe.361 = or i1 %91, %78
  %shadow.sroa.0.0.sroa_cast2051 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.362 = select i1 %safe.361, i8* %90, i8* %shadow.sroa.0.0.sroa_cast2051
  %92 = load i8, i8* %select.ptr.362, align 1
  %93 = zext i8 %92 to i32
  %94 = shl nuw nsw i32 %93, 8
  %95 = or i32 %89, %94
  %96 = getelementptr inbounds i8, i8* %1, i64 19
  %97 = icmp sgt i64 %N1, 3
  %safe.363 = or i1 %97, %78
  %shadow.sroa.0.0.sroa_cast2050 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.364 = select i1 %safe.363, i8* %96, i8* %shadow.sroa.0.0.sroa_cast2050
  %98 = load i8, i8* %select.ptr.364, align 1
  %99 = zext i8 %98 to i32
  %100 = or i32 %95, %99
  %101 = getelementptr inbounds i32, i32* %0, i64 4
  %102 = icmp sgt i64 %N, 4
  %safe.365 = or i1 %102, %78
  %select.ptr.366 = select i1 %safe.365, i32* %101, i32* %shadow.sroa.0
  %103 = load i32, i32* %101, align 4
  %select.val.367 = select i1 %77, i32 %103, i32 %100
  store i32 %select.val.367, i32* %select.ptr.366, align 4
  %104 = getelementptr inbounds i8, i8* %1, i64 20
  %shadow.sroa.0.0.sroa_cast2049 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.369 = select i1 %safe.357, i8* %104, i8* %shadow.sroa.0.0.sroa_cast2049
  %105 = load i8, i8* %select.ptr.369, align 1
  %106 = zext i8 %105 to i32
  %107 = shl nuw i32 %106, 24
  %108 = getelementptr inbounds i8, i8* %1, i64 21
  %shadow.sroa.0.0.sroa_cast2048 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.371 = select i1 %safe.359, i8* %108, i8* %shadow.sroa.0.0.sroa_cast2048
  %109 = load i8, i8* %select.ptr.371, align 1
  %110 = zext i8 %109 to i32
  %111 = shl nuw nsw i32 %110, 16
  %112 = or i32 %111, %107
  %113 = getelementptr inbounds i8, i8* %1, i64 22
  %shadow.sroa.0.0.sroa_cast2047 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.373 = select i1 %safe.361, i8* %113, i8* %shadow.sroa.0.0.sroa_cast2047
  %114 = load i8, i8* %select.ptr.373, align 1
  %115 = zext i8 %114 to i32
  %116 = shl nuw nsw i32 %115, 8
  %117 = or i32 %112, %116
  %118 = getelementptr inbounds i8, i8* %1, i64 23
  %shadow.sroa.0.0.sroa_cast2054 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.375 = select i1 %safe.363, i8* %118, i8* %shadow.sroa.0.0.sroa_cast2054
  %119 = load i8, i8* %select.ptr.375, align 1
  %120 = zext i8 %119 to i32
  %121 = or i32 %117, %120
  %122 = getelementptr inbounds i32, i32* %0, i64 5
  %123 = icmp sgt i64 %N, 5
  %safe.376 = or i1 %123, %78
  %select.ptr.377 = select i1 %safe.376, i32* %122, i32* %shadow.sroa.0
  %124 = load i32, i32* %122, align 4
  %select.val.378 = select i1 %77, i32 %124, i32 %121
  store i32 %select.val.378, i32* %select.ptr.377, align 4
  %125 = icmp eq i32 %2, 192
  %126 = xor i1 %125, true
  %in.9 = xor i1 %77, %126
  %127 = getelementptr inbounds i8, i8* %1, i64 24
  %safe.763 = or i1 %80, %in.9
  %shadow.sroa.0.0.sroa_cast2046 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.764 = select i1 %safe.763, i8* %127, i8* %shadow.sroa.0.0.sroa_cast2046
  %128 = load i8, i8* %select.ptr.764, align 1
  %129 = zext i8 %128 to i32
  %130 = shl nuw i32 %129, 24
  %131 = getelementptr inbounds i8, i8* %1, i64 25
  %safe.765 = or i1 %85, %in.9
  %shadow.sroa.0.0.sroa_cast2045 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.766 = select i1 %safe.765, i8* %131, i8* %shadow.sroa.0.0.sroa_cast2045
  %132 = load i8, i8* %select.ptr.766, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 16
  %135 = or i32 %134, %130
  %136 = getelementptr inbounds i8, i8* %1, i64 26
  %safe.767 = or i1 %91, %in.9
  %shadow.sroa.0.0.sroa_cast2044 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.768 = select i1 %safe.767, i8* %136, i8* %shadow.sroa.0.0.sroa_cast2044
  %137 = load i8, i8* %select.ptr.768, align 1
  %138 = zext i8 %137 to i32
  %139 = shl nuw nsw i32 %138, 8
  %140 = or i32 %135, %139
  %141 = getelementptr inbounds i8, i8* %1, i64 27
  %safe.769 = or i1 %97, %in.9
  %shadow.sroa.0.0.sroa_cast2043 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.770 = select i1 %safe.769, i8* %141, i8* %shadow.sroa.0.0.sroa_cast2043
  %142 = load i8, i8* %select.ptr.770, align 1
  %143 = zext i8 %142 to i32
  %144 = or i32 %140, %143
  %145 = getelementptr inbounds i32, i32* %0, i64 6
  %146 = icmp sgt i64 %N, 6
  %safe.771 = or i1 %146, %in.9
  %select.ptr.772 = select i1 %safe.771, i32* %145, i32* %shadow.sroa.0
  %147 = load i32, i32* %145, align 4
  %select.val.773 = select i1 %in.9, i32 %144, i32 %147
  store i32 %select.val.773, i32* %select.ptr.772, align 4
  %148 = getelementptr inbounds i8, i8* %1, i64 28
  %shadow.sroa.0.0.sroa_cast2042 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.775 = select i1 %safe.763, i8* %148, i8* %shadow.sroa.0.0.sroa_cast2042
  %149 = load i8, i8* %select.ptr.775, align 1
  %150 = zext i8 %149 to i32
  %151 = shl nuw i32 %150, 24
  %152 = getelementptr inbounds i8, i8* %1, i64 29
  %shadow.sroa.0.0.sroa_cast2041 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.777 = select i1 %safe.765, i8* %152, i8* %shadow.sroa.0.0.sroa_cast2041
  %153 = load i8, i8* %select.ptr.777, align 1
  %154 = zext i8 %153 to i32
  %155 = shl nuw nsw i32 %154, 16
  %156 = or i32 %155, %151
  %157 = getelementptr inbounds i8, i8* %1, i64 30
  %shadow.sroa.0.0.sroa_cast2040 = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.779 = select i1 %safe.767, i8* %157, i8* %shadow.sroa.0.0.sroa_cast2040
  %158 = load i8, i8* %select.ptr.779, align 1
  %159 = zext i8 %158 to i32
  %160 = shl nuw nsw i32 %159, 8
  %161 = or i32 %156, %160
  %162 = getelementptr inbounds i8, i8* %1, i64 31
  %shadow.sroa.0.0.sroa_cast = bitcast i32* %shadow.sroa.0 to i8*
  %select.ptr.781 = select i1 %safe.769, i8* %162, i8* %shadow.sroa.0.0.sroa_cast
  %163 = load i8, i8* %select.ptr.781, align 1
  %164 = zext i8 %163 to i32
  %165 = or i32 %161, %164
  %166 = getelementptr inbounds i32, i32* %0, i64 7
  %167 = icmp sgt i64 %N, 7
  %safe.782 = or i1 %167, %in.9
  %select.ptr.783 = select i1 %safe.782, i32* %166, i32* %shadow.sroa.0
  %168 = load i32, i32* %166, align 4
  %select.val.784 = select i1 %in.9, i32 %165, i32 %168
  store i32 %select.val.784, i32* %select.ptr.783, align 4
  %169 = icmp eq i32 %2, 256
  %safe.785 = or i1 %167, %169
  %select.ptr.786 = select i1 %safe.785, i32* %166, i32* %shadow.sroa.0
  %170 = load i32, i32* %select.ptr.786, align 4
  %171 = load i32, i32* %0, align 4
  %172 = lshr i32 %170, 16
  %173 = and i32 %172, 255
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, -16777216
  %178 = lshr i32 %170, 8
  %179 = and i32 %178, 255
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = and i32 %182, 16711680
  %184 = and i32 %170, 255
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = and i32 %187, 65280
  %189 = lshr i32 %170, 24
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = and i32 %192, 255
  %194 = xor i32 %171, 16777216
  %195 = xor i32 %194, %177
  %196 = xor i32 %195, %183
  %197 = xor i32 %196, %188
  %198 = xor i32 %197, %193
  %199 = getelementptr inbounds i32, i32* %0, i64 8
  %200 = icmp sgt i64 %N, 8
  %safe.795 = or i1 %200, %169
  %select.ptr.796 = select i1 %safe.795, i32* %199, i32* %shadow.sroa.0
  %201 = load i32, i32* %199, align 4
  %select.val.797 = select i1 %169, i32 %198, i32 %201
  store i32 %select.val.797, i32* %select.ptr.796, align 4
  %202 = icmp sgt i64 %N, 1
  %safe.798 = or i1 %202, %169
  %.val = load i32, i32* %38, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val = load i32, i32* %shadow.sroa.0, align 8
  %203 = select i1 %safe.798, i32 %.val, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val
  %204 = xor i32 %203, %198
  %205 = getelementptr inbounds i32, i32* %0, i64 9
  %206 = icmp sgt i64 %N, 9
  %safe.802 = or i1 %206, %169
  %select.ptr.803 = select i1 %safe.802, i32* %205, i32* %shadow.sroa.0
  %207 = load i32, i32* %205, align 4
  %select.val.804 = select i1 %169, i32 %204, i32 %207
  store i32 %select.val.804, i32* %select.ptr.803, align 4
  %208 = icmp sgt i64 %N, 2
  %safe.805 = or i1 %208, %169
  %.val1843 = load i32, i32* %57, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1844 = load i32, i32* %shadow.sroa.0, align 8
  %209 = select i1 %safe.805, i32 %.val1843, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1844
  %210 = xor i32 %209, %204
  %211 = getelementptr inbounds i32, i32* %0, i64 10
  %212 = icmp sgt i64 %N, 10
  %safe.809 = or i1 %212, %169
  %select.ptr.810 = select i1 %safe.809, i32* %211, i32* %shadow.sroa.0
  %213 = load i32, i32* %211, align 4
  %select.val.811 = select i1 %169, i32 %210, i32 %213
  store i32 %select.val.811, i32* %select.ptr.810, align 4
  %214 = icmp sgt i64 %N, 3
  %safe.812 = or i1 %214, %169
  %.val1845 = load i32, i32* %76, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1846 = load i32, i32* %shadow.sroa.0, align 8
  %215 = select i1 %safe.812, i32 %.val1845, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1846
  %216 = xor i32 %215, %210
  %217 = getelementptr inbounds i32, i32* %0, i64 11
  %218 = icmp sgt i64 %N, 11
  %safe.816 = or i1 %218, %169
  %select.ptr.817 = select i1 %safe.816, i32* %217, i32* %shadow.sroa.0
  %219 = load i32, i32* %217, align 4
  %select.val.818 = select i1 %169, i32 %216, i32 %219
  store i32 %select.val.818, i32* %select.ptr.817, align 4
  %safe.821 = or i1 %102, %169
  %.val1847 = load i32, i32* %101, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1848 = load i32, i32* %shadow.sroa.0, align 8
  %220 = select i1 %safe.821, i32 %.val1847, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1848
  %221 = lshr i32 %select.val.818, 24
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = and i32 %224, -16777216
  %226 = xor i32 %225, %220
  %227 = lshr i32 %select.val.818, 16
  %228 = and i32 %227, 255
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = and i32 %231, 16711680
  %233 = xor i32 %226, %232
  %234 = lshr i32 %select.val.818, 8
  %235 = and i32 %234, 255
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %236
  %238 = load i32, i32* %237, align 4
  %239 = and i32 %238, 65280
  %240 = xor i32 %233, %239
  %241 = and i32 %select.val.818, 255
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = and i32 %244, 255
  %246 = xor i32 %240, %245
  %247 = getelementptr inbounds i32, i32* %0, i64 12
  %248 = icmp sgt i64 %N, 12
  %safe.831 = or i1 %248, %169
  %select.ptr.832 = select i1 %safe.831, i32* %247, i32* %shadow.sroa.0
  %249 = load i32, i32* %247, align 4
  %select.val.833 = select i1 %169, i32 %246, i32 %249
  store i32 %select.val.833, i32* %select.ptr.832, align 4
  %safe.834 = or i1 %123, %169
  %.val1849 = load i32, i32* %122, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1850 = load i32, i32* %shadow.sroa.0, align 8
  %250 = select i1 %safe.834, i32 %.val1849, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1850
  %251 = xor i32 %250, %246
  %252 = getelementptr inbounds i32, i32* %0, i64 13
  %253 = icmp sgt i64 %N, 13
  %safe.838 = or i1 %253, %169
  %select.ptr.839 = select i1 %safe.838, i32* %252, i32* %shadow.sroa.0
  %254 = load i32, i32* %252, align 4
  %select.val.840 = select i1 %169, i32 %251, i32 %254
  store i32 %select.val.840, i32* %select.ptr.839, align 4
  %safe.841 = or i1 %146, %169
  %.val1851 = load i32, i32* %145, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1852 = load i32, i32* %shadow.sroa.0, align 8
  %255 = select i1 %safe.841, i32 %.val1851, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1852
  %256 = xor i32 %255, %251
  %257 = getelementptr inbounds i32, i32* %0, i64 14
  %258 = icmp sgt i64 %N, 14
  %safe.845 = or i1 %258, %169
  %select.ptr.846 = select i1 %safe.845, i32* %257, i32* %shadow.sroa.0
  %259 = load i32, i32* %257, align 4
  %select.val.847 = select i1 %169, i32 %256, i32 %259
  store i32 %select.val.847, i32* %select.ptr.846, align 4
  %260 = load i32, i32* %select.ptr.786, align 4
  %261 = xor i32 %260, %256
  %262 = getelementptr inbounds i32, i32* %0, i64 15
  %263 = icmp sgt i64 %N, 15
  %safe.852 = or i1 %263, %169
  %select.ptr.853 = select i1 %safe.852, i32* %262, i32* %shadow.sroa.0
  %264 = load i32, i32* %262, align 4
  %select.val.854 = select i1 %169, i32 %261, i32 %264
  store i32 %select.val.854, i32* %select.ptr.853, align 4
  %select.ptr.856 = select i1 %safe.785, i32* %262, i32* %shadow.sroa.0
  %265 = load i32, i32* %select.ptr.856, align 4
  %266 = load i32, i32* %select.ptr.796, align 4
  %267 = lshr i32 %265, 16
  %268 = and i32 %267, 255
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %269
  %271 = load i32, i32* %270, align 4
  %272 = and i32 %271, -16777216
  %273 = lshr i32 %265, 8
  %274 = and i32 %273, 255
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = and i32 %277, 16711680
  %279 = and i32 %265, 255
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = and i32 %282, 65280
  %284 = lshr i32 %265, 24
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = and i32 %287, 255
  %289 = xor i32 %266, 33554432
  %290 = xor i32 %289, %272
  %291 = xor i32 %290, %278
  %292 = xor i32 %291, %283
  %293 = xor i32 %292, %288
  %294 = getelementptr inbounds i32, i32* %0, i64 16
  %select.ptr.868 = select i1 %safe.795, i32* %294, i32* %shadow.sroa.0
  %295 = load i32, i32* %294, align 4
  %select.val.869 = select i1 %169, i32 %293, i32 %295
  store i32 %select.val.869, i32* %select.ptr.868, align 4
  %.val1853 = load i32, i32* %205, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1854 = load i32, i32* %shadow.sroa.0, align 8
  %296 = select i1 %safe.798, i32 %.val1853, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1854
  %297 = xor i32 %296, %293
  %298 = getelementptr inbounds i32, i32* %0, i64 17
  %select.ptr.875 = select i1 %safe.802, i32* %298, i32* %shadow.sroa.0
  %299 = load i32, i32* %298, align 4
  %select.val.876 = select i1 %169, i32 %297, i32 %299
  store i32 %select.val.876, i32* %select.ptr.875, align 4
  %.val1855 = load i32, i32* %211, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1856 = load i32, i32* %shadow.sroa.0, align 8
  %300 = select i1 %safe.805, i32 %.val1855, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1856
  %301 = xor i32 %300, %297
  %302 = getelementptr inbounds i32, i32* %0, i64 18
  %select.ptr.882 = select i1 %safe.809, i32* %302, i32* %shadow.sroa.0
  %303 = load i32, i32* %302, align 4
  %select.val.883 = select i1 %169, i32 %301, i32 %303
  store i32 %select.val.883, i32* %select.ptr.882, align 4
  %.val1857 = load i32, i32* %217, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1858 = load i32, i32* %shadow.sroa.0, align 8
  %304 = select i1 %safe.812, i32 %.val1857, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1858
  %305 = xor i32 %304, %301
  %306 = getelementptr inbounds i32, i32* %0, i64 19
  %select.ptr.889 = select i1 %safe.816, i32* %306, i32* %shadow.sroa.0
  %307 = load i32, i32* %306, align 4
  %select.val.890 = select i1 %169, i32 %305, i32 %307
  store i32 %select.val.890, i32* %select.ptr.889, align 4
  %.val1859 = load i32, i32* %247, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1860 = load i32, i32* %shadow.sroa.0, align 8
  %308 = select i1 %safe.821, i32 %.val1859, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1860
  %309 = lshr i32 %select.val.890, 24
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = and i32 %312, -16777216
  %314 = xor i32 %313, %308
  %315 = lshr i32 %select.val.890, 16
  %316 = and i32 %315, 255
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = and i32 %319, 16711680
  %321 = xor i32 %314, %320
  %322 = lshr i32 %select.val.890, 8
  %323 = and i32 %322, 255
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = and i32 %326, 65280
  %328 = xor i32 %321, %327
  %329 = and i32 %select.val.890, 255
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %330
  %332 = load i32, i32* %331, align 4
  %333 = and i32 %332, 255
  %334 = xor i32 %328, %333
  %335 = getelementptr inbounds i32, i32* %0, i64 20
  %select.ptr.904 = select i1 %safe.831, i32* %335, i32* %shadow.sroa.0
  %336 = load i32, i32* %335, align 4
  %select.val.905 = select i1 %169, i32 %334, i32 %336
  store i32 %select.val.905, i32* %select.ptr.904, align 4
  %.val1861 = load i32, i32* %252, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1862 = load i32, i32* %shadow.sroa.0, align 8
  %337 = select i1 %safe.834, i32 %.val1861, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1862
  %338 = xor i32 %337, %334
  %339 = getelementptr inbounds i32, i32* %0, i64 21
  %select.ptr.911 = select i1 %safe.838, i32* %339, i32* %shadow.sroa.0
  %340 = load i32, i32* %339, align 4
  %select.val.912 = select i1 %169, i32 %338, i32 %340
  store i32 %select.val.912, i32* %select.ptr.911, align 4
  %.val1863 = load i32, i32* %257, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1864 = load i32, i32* %shadow.sroa.0, align 8
  %341 = select i1 %safe.841, i32 %.val1863, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1864
  %342 = xor i32 %341, %338
  %343 = getelementptr inbounds i32, i32* %0, i64 22
  %select.ptr.918 = select i1 %safe.845, i32* %343, i32* %shadow.sroa.0
  %344 = load i32, i32* %343, align 4
  %select.val.919 = select i1 %169, i32 %342, i32 %344
  store i32 %select.val.919, i32* %select.ptr.918, align 4
  %345 = load i32, i32* %select.ptr.856, align 4
  %346 = xor i32 %345, %342
  %347 = getelementptr inbounds i32, i32* %0, i64 23
  %select.ptr.925 = select i1 %safe.852, i32* %347, i32* %shadow.sroa.0
  %348 = load i32, i32* %347, align 4
  %select.val.926 = select i1 %169, i32 %346, i32 %348
  store i32 %select.val.926, i32* %select.ptr.925, align 4
  %select.ptr.928 = select i1 %safe.785, i32* %347, i32* %shadow.sroa.0
  %349 = load i32, i32* %select.ptr.928, align 4
  %350 = load i32, i32* %select.ptr.868, align 4
  %351 = lshr i32 %349, 16
  %352 = and i32 %351, 255
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = and i32 %355, -16777216
  %357 = lshr i32 %349, 8
  %358 = and i32 %357, 255
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %359
  %361 = load i32, i32* %360, align 4
  %362 = and i32 %361, 16711680
  %363 = and i32 %349, 255
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = and i32 %366, 65280
  %368 = lshr i32 %349, 24
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %369
  %371 = load i32, i32* %370, align 4
  %372 = and i32 %371, 255
  %373 = xor i32 %350, 67108864
  %374 = xor i32 %373, %356
  %375 = xor i32 %374, %362
  %376 = xor i32 %375, %367
  %377 = xor i32 %376, %372
  %378 = getelementptr inbounds i32, i32* %0, i64 24
  %select.ptr.940 = select i1 %safe.795, i32* %378, i32* %shadow.sroa.0
  %379 = load i32, i32* %378, align 4
  %select.val.941 = select i1 %169, i32 %377, i32 %379
  store i32 %select.val.941, i32* %select.ptr.940, align 4
  %.val1865 = load i32, i32* %298, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1866 = load i32, i32* %shadow.sroa.0, align 8
  %380 = select i1 %safe.798, i32 %.val1865, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1866
  %381 = xor i32 %380, %377
  %382 = getelementptr inbounds i32, i32* %0, i64 25
  %select.ptr.947 = select i1 %safe.802, i32* %382, i32* %shadow.sroa.0
  %383 = load i32, i32* %382, align 4
  %select.val.948 = select i1 %169, i32 %381, i32 %383
  store i32 %select.val.948, i32* %select.ptr.947, align 4
  %.val1867 = load i32, i32* %302, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1868 = load i32, i32* %shadow.sroa.0, align 8
  %384 = select i1 %safe.805, i32 %.val1867, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1868
  %385 = xor i32 %384, %381
  %386 = getelementptr inbounds i32, i32* %0, i64 26
  %select.ptr.954 = select i1 %safe.809, i32* %386, i32* %shadow.sroa.0
  %387 = load i32, i32* %386, align 4
  %select.val.955 = select i1 %169, i32 %385, i32 %387
  store i32 %select.val.955, i32* %select.ptr.954, align 4
  %.val1869 = load i32, i32* %306, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1870 = load i32, i32* %shadow.sroa.0, align 8
  %388 = select i1 %safe.812, i32 %.val1869, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1870
  %389 = xor i32 %388, %385
  %390 = getelementptr inbounds i32, i32* %0, i64 27
  %select.ptr.961 = select i1 %safe.816, i32* %390, i32* %shadow.sroa.0
  %391 = load i32, i32* %390, align 4
  %select.val.962 = select i1 %169, i32 %389, i32 %391
  store i32 %select.val.962, i32* %select.ptr.961, align 4
  %.val1871 = load i32, i32* %335, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1872 = load i32, i32* %shadow.sroa.0, align 8
  %392 = select i1 %safe.821, i32 %.val1871, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1872
  %393 = lshr i32 %select.val.962, 24
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %394
  %396 = load i32, i32* %395, align 4
  %397 = and i32 %396, -16777216
  %398 = xor i32 %397, %392
  %399 = lshr i32 %select.val.962, 16
  %400 = and i32 %399, 255
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = and i32 %403, 16711680
  %405 = xor i32 %398, %404
  %406 = lshr i32 %select.val.962, 8
  %407 = and i32 %406, 255
  %408 = zext i32 %407 to i64
  %409 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %408
  %410 = load i32, i32* %409, align 4
  %411 = and i32 %410, 65280
  %412 = xor i32 %405, %411
  %413 = and i32 %select.val.962, 255
  %414 = zext i32 %413 to i64
  %415 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %414
  %416 = load i32, i32* %415, align 4
  %417 = and i32 %416, 255
  %418 = xor i32 %412, %417
  %419 = getelementptr inbounds i32, i32* %0, i64 28
  %select.ptr.976 = select i1 %safe.831, i32* %419, i32* %shadow.sroa.0
  %420 = load i32, i32* %419, align 4
  %select.val.977 = select i1 %169, i32 %418, i32 %420
  store i32 %select.val.977, i32* %select.ptr.976, align 4
  %.val1873 = load i32, i32* %339, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1874 = load i32, i32* %shadow.sroa.0, align 8
  %421 = select i1 %safe.834, i32 %.val1873, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1874
  %422 = xor i32 %421, %418
  %423 = getelementptr inbounds i32, i32* %0, i64 29
  %select.ptr.983 = select i1 %safe.838, i32* %423, i32* %shadow.sroa.0
  %424 = load i32, i32* %423, align 4
  %select.val.984 = select i1 %169, i32 %422, i32 %424
  store i32 %select.val.984, i32* %select.ptr.983, align 4
  %.val1875 = load i32, i32* %343, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1876 = load i32, i32* %shadow.sroa.0, align 8
  %425 = select i1 %safe.841, i32 %.val1875, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1876
  %426 = xor i32 %425, %422
  %427 = getelementptr inbounds i32, i32* %0, i64 30
  %select.ptr.990 = select i1 %safe.845, i32* %427, i32* %shadow.sroa.0
  %428 = load i32, i32* %427, align 4
  %select.val.991 = select i1 %169, i32 %426, i32 %428
  store i32 %select.val.991, i32* %select.ptr.990, align 4
  %429 = load i32, i32* %select.ptr.928, align 4
  %430 = xor i32 %429, %426
  %431 = getelementptr inbounds i32, i32* %0, i64 31
  %select.ptr.997 = select i1 %safe.852, i32* %431, i32* %shadow.sroa.0
  %432 = load i32, i32* %431, align 4
  %select.val.998 = select i1 %169, i32 %430, i32 %432
  store i32 %select.val.998, i32* %select.ptr.997, align 4
  %select.ptr.1000 = select i1 %safe.785, i32* %431, i32* %shadow.sroa.0
  %433 = load i32, i32* %select.ptr.1000, align 4
  %434 = load i32, i32* %select.ptr.940, align 4
  %435 = lshr i32 %433, 16
  %436 = and i32 %435, 255
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %437
  %439 = load i32, i32* %438, align 4
  %440 = and i32 %439, -16777216
  %441 = lshr i32 %433, 8
  %442 = and i32 %441, 255
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %443
  %445 = load i32, i32* %444, align 4
  %446 = and i32 %445, 16711680
  %447 = and i32 %433, 255
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = and i32 %450, 65280
  %452 = lshr i32 %433, 24
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = and i32 %455, 255
  %457 = xor i32 %434, 134217728
  %458 = xor i32 %457, %440
  %459 = xor i32 %458, %446
  %460 = xor i32 %459, %451
  %461 = xor i32 %460, %456
  %462 = getelementptr inbounds i32, i32* %0, i64 32
  %select.ptr.1012 = select i1 %safe.795, i32* %462, i32* %shadow.sroa.0
  %463 = load i32, i32* %462, align 4
  %select.val.1013 = select i1 %169, i32 %461, i32 %463
  store i32 %select.val.1013, i32* %select.ptr.1012, align 4
  %.val1877 = load i32, i32* %382, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1878 = load i32, i32* %shadow.sroa.0, align 8
  %464 = select i1 %safe.798, i32 %.val1877, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1878
  %465 = xor i32 %464, %461
  %466 = getelementptr inbounds i32, i32* %0, i64 33
  %select.ptr.1019 = select i1 %safe.802, i32* %466, i32* %shadow.sroa.0
  %467 = load i32, i32* %466, align 4
  %select.val.1020 = select i1 %169, i32 %465, i32 %467
  store i32 %select.val.1020, i32* %select.ptr.1019, align 4
  %.val1879 = load i32, i32* %386, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1880 = load i32, i32* %shadow.sroa.0, align 8
  %468 = select i1 %safe.805, i32 %.val1879, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1880
  %469 = xor i32 %468, %465
  %470 = getelementptr inbounds i32, i32* %0, i64 34
  %select.ptr.1026 = select i1 %safe.809, i32* %470, i32* %shadow.sroa.0
  %471 = load i32, i32* %470, align 4
  %select.val.1027 = select i1 %169, i32 %469, i32 %471
  store i32 %select.val.1027, i32* %select.ptr.1026, align 4
  %.val1881 = load i32, i32* %390, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1882 = load i32, i32* %shadow.sroa.0, align 8
  %472 = select i1 %safe.812, i32 %.val1881, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1882
  %473 = xor i32 %472, %469
  %474 = getelementptr inbounds i32, i32* %0, i64 35
  %select.ptr.1033 = select i1 %safe.816, i32* %474, i32* %shadow.sroa.0
  %475 = load i32, i32* %474, align 4
  %select.val.1034 = select i1 %169, i32 %473, i32 %475
  store i32 %select.val.1034, i32* %select.ptr.1033, align 4
  %.val1883 = load i32, i32* %419, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1884 = load i32, i32* %shadow.sroa.0, align 8
  %476 = select i1 %safe.821, i32 %.val1883, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1884
  %477 = lshr i32 %select.val.1034, 24
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = and i32 %480, -16777216
  %482 = xor i32 %481, %476
  %483 = lshr i32 %select.val.1034, 16
  %484 = and i32 %483, 255
  %485 = zext i32 %484 to i64
  %486 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %485
  %487 = load i32, i32* %486, align 4
  %488 = and i32 %487, 16711680
  %489 = xor i32 %482, %488
  %490 = lshr i32 %select.val.1034, 8
  %491 = and i32 %490, 255
  %492 = zext i32 %491 to i64
  %493 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %492
  %494 = load i32, i32* %493, align 4
  %495 = and i32 %494, 65280
  %496 = xor i32 %489, %495
  %497 = and i32 %select.val.1034, 255
  %498 = zext i32 %497 to i64
  %499 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %498
  %500 = load i32, i32* %499, align 4
  %501 = and i32 %500, 255
  %502 = xor i32 %496, %501
  %503 = getelementptr inbounds i32, i32* %0, i64 36
  %select.ptr.1048 = select i1 %safe.831, i32* %503, i32* %shadow.sroa.0
  %504 = load i32, i32* %503, align 4
  %select.val.1049 = select i1 %169, i32 %502, i32 %504
  store i32 %select.val.1049, i32* %select.ptr.1048, align 4
  %.val1885 = load i32, i32* %423, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1886 = load i32, i32* %shadow.sroa.0, align 8
  %505 = select i1 %safe.834, i32 %.val1885, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1886
  %506 = xor i32 %505, %502
  %507 = getelementptr inbounds i32, i32* %0, i64 37
  %select.ptr.1055 = select i1 %safe.838, i32* %507, i32* %shadow.sroa.0
  %508 = load i32, i32* %507, align 4
  %select.val.1056 = select i1 %169, i32 %506, i32 %508
  store i32 %select.val.1056, i32* %select.ptr.1055, align 4
  %.val1887 = load i32, i32* %427, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1888 = load i32, i32* %shadow.sroa.0, align 8
  %509 = select i1 %safe.841, i32 %.val1887, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1888
  %510 = xor i32 %509, %506
  %511 = getelementptr inbounds i32, i32* %0, i64 38
  %select.ptr.1062 = select i1 %safe.845, i32* %511, i32* %shadow.sroa.0
  %512 = load i32, i32* %511, align 4
  %select.val.1063 = select i1 %169, i32 %510, i32 %512
  store i32 %select.val.1063, i32* %select.ptr.1062, align 4
  %513 = load i32, i32* %select.ptr.1000, align 4
  %514 = xor i32 %513, %510
  %515 = getelementptr inbounds i32, i32* %0, i64 39
  %select.ptr.1069 = select i1 %safe.852, i32* %515, i32* %shadow.sroa.0
  %516 = load i32, i32* %515, align 4
  %select.val.1070 = select i1 %169, i32 %514, i32 %516
  store i32 %select.val.1070, i32* %select.ptr.1069, align 4
  %select.ptr.1072 = select i1 %safe.785, i32* %515, i32* %shadow.sroa.0
  %517 = load i32, i32* %select.ptr.1072, align 4
  %518 = load i32, i32* %select.ptr.1012, align 4
  %519 = lshr i32 %517, 16
  %520 = and i32 %519, 255
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %521
  %523 = load i32, i32* %522, align 4
  %524 = and i32 %523, -16777216
  %525 = lshr i32 %517, 8
  %526 = and i32 %525, 255
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %527
  %529 = load i32, i32* %528, align 4
  %530 = and i32 %529, 16711680
  %531 = and i32 %517, 255
  %532 = zext i32 %531 to i64
  %533 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %532
  %534 = load i32, i32* %533, align 4
  %535 = and i32 %534, 65280
  %536 = lshr i32 %517, 24
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %537
  %539 = load i32, i32* %538, align 4
  %540 = and i32 %539, 255
  %541 = xor i32 %518, 268435456
  %542 = xor i32 %541, %524
  %543 = xor i32 %542, %530
  %544 = xor i32 %543, %535
  %545 = xor i32 %544, %540
  %546 = getelementptr inbounds i32, i32* %0, i64 40
  %select.ptr.1084 = select i1 %safe.795, i32* %546, i32* %shadow.sroa.0
  %547 = load i32, i32* %546, align 4
  %select.val.1085 = select i1 %169, i32 %545, i32 %547
  store i32 %select.val.1085, i32* %select.ptr.1084, align 4
  %.val1889 = load i32, i32* %466, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1890 = load i32, i32* %shadow.sroa.0, align 8
  %548 = select i1 %safe.798, i32 %.val1889, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1890
  %549 = xor i32 %548, %545
  %550 = getelementptr inbounds i32, i32* %0, i64 41
  %select.ptr.1091 = select i1 %safe.802, i32* %550, i32* %shadow.sroa.0
  %551 = load i32, i32* %550, align 4
  %select.val.1092 = select i1 %169, i32 %549, i32 %551
  store i32 %select.val.1092, i32* %select.ptr.1091, align 4
  %.val1891 = load i32, i32* %470, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1892 = load i32, i32* %shadow.sroa.0, align 8
  %552 = select i1 %safe.805, i32 %.val1891, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1892
  %553 = xor i32 %552, %549
  %554 = getelementptr inbounds i32, i32* %0, i64 42
  %select.ptr.1098 = select i1 %safe.809, i32* %554, i32* %shadow.sroa.0
  %555 = load i32, i32* %554, align 4
  %select.val.1099 = select i1 %169, i32 %553, i32 %555
  store i32 %select.val.1099, i32* %select.ptr.1098, align 4
  %.val1893 = load i32, i32* %474, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1894 = load i32, i32* %shadow.sroa.0, align 8
  %556 = select i1 %safe.812, i32 %.val1893, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1894
  %557 = xor i32 %556, %553
  %558 = getelementptr inbounds i32, i32* %0, i64 43
  %select.ptr.1105 = select i1 %safe.816, i32* %558, i32* %shadow.sroa.0
  %559 = load i32, i32* %558, align 4
  %select.val.1106 = select i1 %169, i32 %557, i32 %559
  store i32 %select.val.1106, i32* %select.ptr.1105, align 4
  %.val1895 = load i32, i32* %503, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1896 = load i32, i32* %shadow.sroa.0, align 8
  %560 = select i1 %safe.821, i32 %.val1895, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1896
  %561 = lshr i32 %select.val.1106, 24
  %562 = zext i32 %561 to i64
  %563 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = and i32 %564, -16777216
  %566 = xor i32 %565, %560
  %567 = lshr i32 %select.val.1106, 16
  %568 = and i32 %567, 255
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %569
  %571 = load i32, i32* %570, align 4
  %572 = and i32 %571, 16711680
  %573 = xor i32 %566, %572
  %574 = lshr i32 %select.val.1106, 8
  %575 = and i32 %574, 255
  %576 = zext i32 %575 to i64
  %577 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %576
  %578 = load i32, i32* %577, align 4
  %579 = and i32 %578, 65280
  %580 = xor i32 %573, %579
  %581 = and i32 %select.val.1106, 255
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %582
  %584 = load i32, i32* %583, align 4
  %585 = and i32 %584, 255
  %586 = xor i32 %580, %585
  %587 = getelementptr inbounds i32, i32* %0, i64 44
  %select.ptr.1120 = select i1 %safe.831, i32* %587, i32* %shadow.sroa.0
  %588 = load i32, i32* %587, align 4
  %select.val.1121 = select i1 %169, i32 %586, i32 %588
  store i32 %select.val.1121, i32* %select.ptr.1120, align 4
  %.val1897 = load i32, i32* %507, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1898 = load i32, i32* %shadow.sroa.0, align 8
  %589 = select i1 %safe.834, i32 %.val1897, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1898
  %590 = xor i32 %589, %586
  %591 = getelementptr inbounds i32, i32* %0, i64 45
  %select.ptr.1127 = select i1 %safe.838, i32* %591, i32* %shadow.sroa.0
  %592 = load i32, i32* %591, align 4
  %select.val.1128 = select i1 %169, i32 %590, i32 %592
  store i32 %select.val.1128, i32* %select.ptr.1127, align 4
  %.val1899 = load i32, i32* %511, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1900 = load i32, i32* %shadow.sroa.0, align 8
  %593 = select i1 %safe.841, i32 %.val1899, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1900
  %594 = xor i32 %593, %590
  %595 = getelementptr inbounds i32, i32* %0, i64 46
  %select.ptr.1134 = select i1 %safe.845, i32* %595, i32* %shadow.sroa.0
  %596 = load i32, i32* %595, align 4
  %select.val.1135 = select i1 %169, i32 %594, i32 %596
  store i32 %select.val.1135, i32* %select.ptr.1134, align 4
  %597 = load i32, i32* %select.ptr.1072, align 4
  %598 = xor i32 %597, %594
  %599 = getelementptr inbounds i32, i32* %0, i64 47
  %select.ptr.1141 = select i1 %safe.852, i32* %599, i32* %shadow.sroa.0
  %600 = load i32, i32* %599, align 4
  %select.val.1142 = select i1 %169, i32 %598, i32 %600
  store i32 %select.val.1142, i32* %select.ptr.1141, align 4
  %select.ptr.1144 = select i1 %safe.785, i32* %599, i32* %shadow.sroa.0
  %601 = load i32, i32* %select.ptr.1144, align 4
  %602 = load i32, i32* %select.ptr.1084, align 4
  %603 = lshr i32 %601, 16
  %604 = and i32 %603, 255
  %605 = zext i32 %604 to i64
  %606 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %605
  %607 = load i32, i32* %606, align 4
  %608 = and i32 %607, -16777216
  %609 = lshr i32 %601, 8
  %610 = and i32 %609, 255
  %611 = zext i32 %610 to i64
  %612 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %611
  %613 = load i32, i32* %612, align 4
  %614 = and i32 %613, 16711680
  %615 = and i32 %601, 255
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %616
  %618 = load i32, i32* %617, align 4
  %619 = and i32 %618, 65280
  %620 = lshr i32 %601, 24
  %621 = zext i32 %620 to i64
  %622 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %621
  %623 = load i32, i32* %622, align 4
  %624 = and i32 %623, 255
  %625 = xor i32 %602, 536870912
  %626 = xor i32 %625, %608
  %627 = xor i32 %626, %614
  %628 = xor i32 %627, %619
  %629 = xor i32 %628, %624
  %630 = getelementptr inbounds i32, i32* %0, i64 48
  %select.ptr.1156 = select i1 %safe.795, i32* %630, i32* %shadow.sroa.0
  %631 = load i32, i32* %630, align 4
  %select.val.1157 = select i1 %169, i32 %629, i32 %631
  store i32 %select.val.1157, i32* %select.ptr.1156, align 4
  %.val1901 = load i32, i32* %550, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1902 = load i32, i32* %shadow.sroa.0, align 8
  %632 = select i1 %safe.798, i32 %.val1901, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1902
  %633 = xor i32 %632, %629
  %634 = getelementptr inbounds i32, i32* %0, i64 49
  %select.ptr.1163 = select i1 %safe.802, i32* %634, i32* %shadow.sroa.0
  %635 = load i32, i32* %634, align 4
  %select.val.1164 = select i1 %169, i32 %633, i32 %635
  store i32 %select.val.1164, i32* %select.ptr.1163, align 4
  %.val1903 = load i32, i32* %554, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1904 = load i32, i32* %shadow.sroa.0, align 8
  %636 = select i1 %safe.805, i32 %.val1903, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1904
  %637 = xor i32 %636, %633
  %638 = getelementptr inbounds i32, i32* %0, i64 50
  %select.ptr.1170 = select i1 %safe.809, i32* %638, i32* %shadow.sroa.0
  %639 = load i32, i32* %638, align 4
  %select.val.1171 = select i1 %169, i32 %637, i32 %639
  store i32 %select.val.1171, i32* %select.ptr.1170, align 4
  %.val1905 = load i32, i32* %558, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1906 = load i32, i32* %shadow.sroa.0, align 8
  %640 = select i1 %safe.812, i32 %.val1905, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1906
  %641 = xor i32 %640, %637
  %642 = getelementptr inbounds i32, i32* %0, i64 51
  %select.ptr.1177 = select i1 %safe.816, i32* %642, i32* %shadow.sroa.0
  %643 = load i32, i32* %642, align 4
  %select.val.1178 = select i1 %169, i32 %641, i32 %643
  store i32 %select.val.1178, i32* %select.ptr.1177, align 4
  %.val1907 = load i32, i32* %587, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1908 = load i32, i32* %shadow.sroa.0, align 8
  %644 = select i1 %safe.821, i32 %.val1907, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1908
  %645 = lshr i32 %select.val.1178, 24
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %646
  %648 = load i32, i32* %647, align 4
  %649 = and i32 %648, -16777216
  %650 = xor i32 %649, %644
  %651 = lshr i32 %select.val.1178, 16
  %652 = and i32 %651, 255
  %653 = zext i32 %652 to i64
  %654 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %653
  %655 = load i32, i32* %654, align 4
  %656 = and i32 %655, 16711680
  %657 = xor i32 %650, %656
  %658 = lshr i32 %select.val.1178, 8
  %659 = and i32 %658, 255
  %660 = zext i32 %659 to i64
  %661 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %660
  %662 = load i32, i32* %661, align 4
  %663 = and i32 %662, 65280
  %664 = xor i32 %657, %663
  %665 = and i32 %select.val.1178, 255
  %666 = zext i32 %665 to i64
  %667 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %666
  %668 = load i32, i32* %667, align 4
  %669 = and i32 %668, 255
  %670 = xor i32 %664, %669
  %671 = getelementptr inbounds i32, i32* %0, i64 52
  %select.ptr.1192 = select i1 %safe.831, i32* %671, i32* %shadow.sroa.0
  %672 = load i32, i32* %671, align 4
  %select.val.1193 = select i1 %169, i32 %670, i32 %672
  store i32 %select.val.1193, i32* %select.ptr.1192, align 4
  %.val1909 = load i32, i32* %591, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1910 = load i32, i32* %shadow.sroa.0, align 8
  %673 = select i1 %safe.834, i32 %.val1909, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1910
  %674 = xor i32 %673, %670
  %675 = getelementptr inbounds i32, i32* %0, i64 53
  %select.ptr.1199 = select i1 %safe.838, i32* %675, i32* %shadow.sroa.0
  %676 = load i32, i32* %675, align 4
  %select.val.1200 = select i1 %169, i32 %674, i32 %676
  store i32 %select.val.1200, i32* %select.ptr.1199, align 4
  %.val1911 = load i32, i32* %595, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1912 = load i32, i32* %shadow.sroa.0, align 8
  %677 = select i1 %safe.841, i32 %.val1911, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1912
  %678 = xor i32 %677, %674
  %679 = getelementptr inbounds i32, i32* %0, i64 54
  %select.ptr.1206 = select i1 %safe.845, i32* %679, i32* %shadow.sroa.0
  %680 = load i32, i32* %679, align 4
  %select.val.1207 = select i1 %169, i32 %678, i32 %680
  store i32 %select.val.1207, i32* %select.ptr.1206, align 4
  %681 = load i32, i32* %select.ptr.1144, align 4
  %682 = xor i32 %681, %678
  %683 = getelementptr inbounds i32, i32* %0, i64 55
  %select.ptr.1213 = select i1 %safe.852, i32* %683, i32* %shadow.sroa.0
  %684 = load i32, i32* %683, align 4
  %select.val.1214 = select i1 %169, i32 %682, i32 %684
  store i32 %select.val.1214, i32* %select.ptr.1213, align 4
  %.val1913 = load i32, i32* %683, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1914 = load i32, i32* %shadow.sroa.0, align 8
  %685 = select i1 %safe.785, i32 %.val1913, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1914
  %686 = load i32, i32* %select.ptr.1156, align 4
  %687 = lshr i32 %685, 16
  %688 = and i32 %687, 255
  %689 = zext i32 %688 to i64
  %690 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %689
  %691 = load i32, i32* %690, align 4
  %692 = and i32 %691, -16777216
  %693 = lshr i32 %685, 8
  %694 = and i32 %693, 255
  %695 = zext i32 %694 to i64
  %696 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %695
  %697 = load i32, i32* %696, align 4
  %698 = and i32 %697, 16711680
  %699 = and i32 %685, 255
  %700 = zext i32 %699 to i64
  %701 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %700
  %702 = load i32, i32* %701, align 4
  %703 = and i32 %702, 65280
  %704 = lshr i32 %685, 24
  %705 = zext i32 %704 to i64
  %706 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %705
  %707 = load i32, i32* %706, align 4
  %708 = and i32 %707, 255
  %709 = xor i32 %686, 1073741824
  %710 = xor i32 %709, %692
  %711 = xor i32 %710, %698
  %712 = xor i32 %711, %703
  %713 = xor i32 %712, %708
  %714 = getelementptr inbounds i32, i32* %0, i64 56
  %select.ptr.1228 = select i1 %safe.795, i32* %714, i32* %shadow.sroa.0
  %715 = load i32, i32* %714, align 4
  %select.val.1229 = select i1 %169, i32 %713, i32 %715
  store i32 %select.val.1229, i32* %select.ptr.1228, align 4
  %.val1915 = load i32, i32* %634, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1916 = load i32, i32* %shadow.sroa.0, align 8
  %716 = select i1 %safe.798, i32 %.val1915, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1916
  %717 = xor i32 %716, %713
  %718 = getelementptr inbounds i32, i32* %0, i64 57
  %select.ptr.1235 = select i1 %safe.802, i32* %718, i32* %shadow.sroa.0
  %719 = load i32, i32* %718, align 4
  %select.val.1236 = select i1 %169, i32 %717, i32 %719
  store i32 %select.val.1236, i32* %select.ptr.1235, align 4
  %.val1917 = load i32, i32* %638, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1918 = load i32, i32* %shadow.sroa.0, align 8
  %720 = select i1 %safe.805, i32 %.val1917, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1918
  %721 = xor i32 %720, %717
  %722 = getelementptr inbounds i32, i32* %0, i64 58
  %select.ptr.1242 = select i1 %safe.809, i32* %722, i32* %shadow.sroa.0
  %723 = load i32, i32* %722, align 4
  %select.val.1243 = select i1 %169, i32 %721, i32 %723
  store i32 %select.val.1243, i32* %select.ptr.1242, align 4
  %.val1919 = load i32, i32* %642, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1920 = load i32, i32* %shadow.sroa.0, align 8
  %724 = select i1 %safe.812, i32 %.val1919, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1920
  %725 = xor i32 %724, %721
  %726 = getelementptr inbounds i32, i32* %0, i64 59
  %select.ptr.1249 = select i1 %safe.816, i32* %726, i32* %shadow.sroa.0
  %727 = load i32, i32* %726, align 4
  %select.val.1250 = select i1 %169, i32 %725, i32 %727
  store i32 %select.val.1250, i32* %select.ptr.1249, align 4
  %safe.379 = or i1 %123, %125
  %select.ptr.380 = select i1 %safe.379, i32* %122, i32* %shadow.sroa.0
  %728 = load i32, i32* %select.ptr.380, align 4
  %729 = load i32, i32* %0, align 4
  %730 = lshr i32 %728, 16
  %731 = and i32 %730, 255
  %732 = zext i32 %731 to i64
  %733 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %732
  %734 = load i32, i32* %733, align 4
  %735 = and i32 %734, -16777216
  %736 = lshr i32 %728, 8
  %737 = and i32 %736, 255
  %738 = zext i32 %737 to i64
  %739 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %738
  %740 = load i32, i32* %739, align 4
  %741 = and i32 %740, 16711680
  %742 = and i32 %728, 255
  %743 = zext i32 %742 to i64
  %744 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %743
  %745 = load i32, i32* %744, align 4
  %746 = and i32 %745, 65280
  %747 = lshr i32 %728, 24
  %748 = zext i32 %747 to i64
  %749 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %748
  %750 = load i32, i32* %749, align 4
  %751 = and i32 %750, 255
  %752 = xor i32 %729, 16777216
  %753 = xor i32 %752, %735
  %754 = xor i32 %753, %741
  %755 = xor i32 %754, %746
  %756 = xor i32 %755, %751
  %safe.389 = or i1 %146, %125
  %select.ptr.390 = select i1 %safe.389, i32* %145, i32* %shadow.sroa.0
  %757 = load i32, i32* %145, align 4
  %select.val.391 = select i1 %125, i32 %756, i32 %757
  store i32 %select.val.391, i32* %select.ptr.390, align 4
  %safe.392 = or i1 %202, %125
  %.val1921 = load i32, i32* %38, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1922 = load i32, i32* %shadow.sroa.0, align 8
  %758 = select i1 %safe.392, i32 %.val1921, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1922
  %759 = xor i32 %758, %756
  %safe.396 = or i1 %167, %125
  %select.ptr.397 = select i1 %safe.396, i32* %166, i32* %shadow.sroa.0
  %760 = load i32, i32* %166, align 4
  %select.val.398 = select i1 %125, i32 %759, i32 %760
  store i32 %select.val.398, i32* %select.ptr.397, align 4
  %safe.399 = or i1 %208, %125
  %.val1923 = load i32, i32* %57, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1924 = load i32, i32* %shadow.sroa.0, align 8
  %761 = select i1 %safe.399, i32 %.val1923, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1924
  %762 = xor i32 %761, %759
  %safe.403 = or i1 %200, %125
  %select.ptr.404 = select i1 %safe.403, i32* %199, i32* %shadow.sroa.0
  %763 = load i32, i32* %199, align 4
  %select.val.405 = select i1 %125, i32 %762, i32 %763
  store i32 %select.val.405, i32* %select.ptr.404, align 4
  %safe.406 = or i1 %214, %125
  %.val1925 = load i32, i32* %76, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1926 = load i32, i32* %shadow.sroa.0, align 8
  %764 = select i1 %safe.406, i32 %.val1925, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1926
  %765 = xor i32 %764, %762
  %safe.410 = or i1 %206, %125
  %select.ptr.411 = select i1 %safe.410, i32* %205, i32* %shadow.sroa.0
  %766 = load i32, i32* %205, align 4
  %select.val.412 = select i1 %125, i32 %765, i32 %766
  store i32 %select.val.412, i32* %select.ptr.411, align 4
  %safe.413 = or i1 %102, %125
  %.val1927 = load i32, i32* %101, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1928 = load i32, i32* %shadow.sroa.0, align 8
  %767 = select i1 %safe.413, i32 %.val1927, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1928
  %768 = xor i32 %767, %765
  %safe.417 = or i1 %212, %125
  %select.ptr.418 = select i1 %safe.417, i32* %211, i32* %shadow.sroa.0
  %769 = load i32, i32* %211, align 4
  %select.val.419 = select i1 %125, i32 %768, i32 %769
  store i32 %select.val.419, i32* %select.ptr.418, align 4
  %770 = load i32, i32* %select.ptr.380, align 4
  %771 = xor i32 %770, %768
  %safe.424 = or i1 %218, %125
  %select.ptr.425 = select i1 %safe.424, i32* %217, i32* %shadow.sroa.0
  %772 = load i32, i32* %217, align 4
  %select.val.426 = select i1 %125, i32 %771, i32 %772
  store i32 %select.val.426, i32* %select.ptr.425, align 4
  %select.ptr.428 = select i1 %safe.379, i32* %217, i32* %shadow.sroa.0
  %773 = load i32, i32* %select.ptr.428, align 4
  %774 = load i32, i32* %select.ptr.390, align 4
  %775 = lshr i32 %773, 16
  %776 = and i32 %775, 255
  %777 = zext i32 %776 to i64
  %778 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %777
  %779 = load i32, i32* %778, align 4
  %780 = and i32 %779, -16777216
  %781 = lshr i32 %773, 8
  %782 = and i32 %781, 255
  %783 = zext i32 %782 to i64
  %784 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %783
  %785 = load i32, i32* %784, align 4
  %786 = and i32 %785, 16711680
  %787 = and i32 %773, 255
  %788 = zext i32 %787 to i64
  %789 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %788
  %790 = load i32, i32* %789, align 4
  %791 = and i32 %790, 65280
  %792 = lshr i32 %773, 24
  %793 = zext i32 %792 to i64
  %794 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %793
  %795 = load i32, i32* %794, align 4
  %796 = and i32 %795, 255
  %797 = xor i32 %774, 33554432
  %798 = xor i32 %797, %780
  %799 = xor i32 %798, %786
  %800 = xor i32 %799, %791
  %801 = xor i32 %800, %796
  %select.ptr.440 = select i1 %safe.389, i32* %247, i32* %shadow.sroa.0
  %802 = load i32, i32* %247, align 4
  %select.val.441 = select i1 %125, i32 %801, i32 %802
  store i32 %select.val.441, i32* %select.ptr.440, align 4
  %.val1929 = load i32, i32* %166, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1930 = load i32, i32* %shadow.sroa.0, align 8
  %803 = select i1 %safe.392, i32 %.val1929, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1930
  %804 = xor i32 %803, %801
  %select.ptr.447 = select i1 %safe.396, i32* %252, i32* %shadow.sroa.0
  %805 = load i32, i32* %252, align 4
  %select.val.448 = select i1 %125, i32 %804, i32 %805
  store i32 %select.val.448, i32* %select.ptr.447, align 4
  %.val1931 = load i32, i32* %199, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1932 = load i32, i32* %shadow.sroa.0, align 8
  %806 = select i1 %safe.399, i32 %.val1931, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1932
  %807 = xor i32 %806, %804
  %select.ptr.454 = select i1 %safe.403, i32* %257, i32* %shadow.sroa.0
  %808 = load i32, i32* %257, align 4
  %select.val.455 = select i1 %125, i32 %807, i32 %808
  store i32 %select.val.455, i32* %select.ptr.454, align 4
  %.val1933 = load i32, i32* %205, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1934 = load i32, i32* %shadow.sroa.0, align 8
  %809 = select i1 %safe.406, i32 %.val1933, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1934
  %810 = xor i32 %809, %807
  %select.ptr.461 = select i1 %safe.410, i32* %262, i32* %shadow.sroa.0
  %811 = load i32, i32* %262, align 4
  %select.val.462 = select i1 %125, i32 %810, i32 %811
  store i32 %select.val.462, i32* %select.ptr.461, align 4
  %.val1935 = load i32, i32* %211, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1936 = load i32, i32* %shadow.sroa.0, align 8
  %812 = select i1 %safe.413, i32 %.val1935, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1936
  %813 = xor i32 %812, %810
  %select.ptr.468 = select i1 %safe.417, i32* %294, i32* %shadow.sroa.0
  %814 = load i32, i32* %294, align 4
  %select.val.469 = select i1 %125, i32 %813, i32 %814
  store i32 %select.val.469, i32* %select.ptr.468, align 4
  %815 = load i32, i32* %select.ptr.428, align 4
  %816 = xor i32 %815, %813
  %select.ptr.475 = select i1 %safe.424, i32* %298, i32* %shadow.sroa.0
  %817 = load i32, i32* %298, align 4
  %select.val.476 = select i1 %125, i32 %816, i32 %817
  store i32 %select.val.476, i32* %select.ptr.475, align 4
  %select.ptr.478 = select i1 %safe.379, i32* %298, i32* %shadow.sroa.0
  %818 = load i32, i32* %select.ptr.478, align 4
  %819 = load i32, i32* %select.ptr.440, align 4
  %820 = lshr i32 %818, 16
  %821 = and i32 %820, 255
  %822 = zext i32 %821 to i64
  %823 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %822
  %824 = load i32, i32* %823, align 4
  %825 = and i32 %824, -16777216
  %826 = lshr i32 %818, 8
  %827 = and i32 %826, 255
  %828 = zext i32 %827 to i64
  %829 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %828
  %830 = load i32, i32* %829, align 4
  %831 = and i32 %830, 16711680
  %832 = and i32 %818, 255
  %833 = zext i32 %832 to i64
  %834 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %833
  %835 = load i32, i32* %834, align 4
  %836 = and i32 %835, 65280
  %837 = lshr i32 %818, 24
  %838 = zext i32 %837 to i64
  %839 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %838
  %840 = load i32, i32* %839, align 4
  %841 = and i32 %840, 255
  %842 = xor i32 %819, 67108864
  %843 = xor i32 %842, %825
  %844 = xor i32 %843, %831
  %845 = xor i32 %844, %836
  %846 = xor i32 %845, %841
  %select.ptr.490 = select i1 %safe.389, i32* %302, i32* %shadow.sroa.0
  %847 = load i32, i32* %302, align 4
  %select.val.491 = select i1 %125, i32 %846, i32 %847
  store i32 %select.val.491, i32* %select.ptr.490, align 4
  %.val1937 = load i32, i32* %252, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1938 = load i32, i32* %shadow.sroa.0, align 8
  %848 = select i1 %safe.392, i32 %.val1937, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1938
  %849 = xor i32 %848, %846
  %select.ptr.497 = select i1 %safe.396, i32* %306, i32* %shadow.sroa.0
  %850 = load i32, i32* %306, align 4
  %select.val.498 = select i1 %125, i32 %849, i32 %850
  store i32 %select.val.498, i32* %select.ptr.497, align 4
  %.val1939 = load i32, i32* %257, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1940 = load i32, i32* %shadow.sroa.0, align 8
  %851 = select i1 %safe.399, i32 %.val1939, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1940
  %852 = xor i32 %851, %849
  %select.ptr.504 = select i1 %safe.403, i32* %335, i32* %shadow.sroa.0
  %853 = load i32, i32* %335, align 4
  %select.val.505 = select i1 %125, i32 %852, i32 %853
  store i32 %select.val.505, i32* %select.ptr.504, align 4
  %.val1941 = load i32, i32* %262, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1942 = load i32, i32* %shadow.sroa.0, align 8
  %854 = select i1 %safe.406, i32 %.val1941, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1942
  %855 = xor i32 %854, %852
  %select.ptr.511 = select i1 %safe.410, i32* %339, i32* %shadow.sroa.0
  %856 = load i32, i32* %339, align 4
  %select.val.512 = select i1 %125, i32 %855, i32 %856
  store i32 %select.val.512, i32* %select.ptr.511, align 4
  %.val1943 = load i32, i32* %294, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1944 = load i32, i32* %shadow.sroa.0, align 8
  %857 = select i1 %safe.413, i32 %.val1943, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1944
  %858 = xor i32 %857, %855
  %select.ptr.518 = select i1 %safe.417, i32* %343, i32* %shadow.sroa.0
  %859 = load i32, i32* %343, align 4
  %select.val.519 = select i1 %125, i32 %858, i32 %859
  store i32 %select.val.519, i32* %select.ptr.518, align 4
  %860 = load i32, i32* %select.ptr.478, align 4
  %861 = xor i32 %860, %858
  %select.ptr.525 = select i1 %safe.424, i32* %347, i32* %shadow.sroa.0
  %862 = load i32, i32* %347, align 4
  %select.val.526 = select i1 %125, i32 %861, i32 %862
  store i32 %select.val.526, i32* %select.ptr.525, align 4
  %select.ptr.528 = select i1 %safe.379, i32* %347, i32* %shadow.sroa.0
  %863 = load i32, i32* %select.ptr.528, align 4
  %864 = load i32, i32* %select.ptr.490, align 4
  %865 = lshr i32 %863, 16
  %866 = and i32 %865, 255
  %867 = zext i32 %866 to i64
  %868 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %867
  %869 = load i32, i32* %868, align 4
  %870 = and i32 %869, -16777216
  %871 = lshr i32 %863, 8
  %872 = and i32 %871, 255
  %873 = zext i32 %872 to i64
  %874 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %873
  %875 = load i32, i32* %874, align 4
  %876 = and i32 %875, 16711680
  %877 = and i32 %863, 255
  %878 = zext i32 %877 to i64
  %879 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %878
  %880 = load i32, i32* %879, align 4
  %881 = and i32 %880, 65280
  %882 = lshr i32 %863, 24
  %883 = zext i32 %882 to i64
  %884 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %883
  %885 = load i32, i32* %884, align 4
  %886 = and i32 %885, 255
  %887 = xor i32 %864, 134217728
  %888 = xor i32 %887, %870
  %889 = xor i32 %888, %876
  %890 = xor i32 %889, %881
  %891 = xor i32 %890, %886
  %select.ptr.540 = select i1 %safe.389, i32* %378, i32* %shadow.sroa.0
  %892 = load i32, i32* %378, align 4
  %select.val.541 = select i1 %125, i32 %891, i32 %892
  store i32 %select.val.541, i32* %select.ptr.540, align 4
  %.val1945 = load i32, i32* %306, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1946 = load i32, i32* %shadow.sroa.0, align 8
  %893 = select i1 %safe.392, i32 %.val1945, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1946
  %894 = xor i32 %893, %891
  %select.ptr.547 = select i1 %safe.396, i32* %382, i32* %shadow.sroa.0
  %895 = load i32, i32* %382, align 4
  %select.val.548 = select i1 %125, i32 %894, i32 %895
  store i32 %select.val.548, i32* %select.ptr.547, align 4
  %.val1947 = load i32, i32* %335, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1948 = load i32, i32* %shadow.sroa.0, align 8
  %896 = select i1 %safe.399, i32 %.val1947, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1948
  %897 = xor i32 %896, %894
  %select.ptr.554 = select i1 %safe.403, i32* %386, i32* %shadow.sroa.0
  %898 = load i32, i32* %386, align 4
  %select.val.555 = select i1 %125, i32 %897, i32 %898
  store i32 %select.val.555, i32* %select.ptr.554, align 4
  %.val1949 = load i32, i32* %339, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1950 = load i32, i32* %shadow.sroa.0, align 8
  %899 = select i1 %safe.406, i32 %.val1949, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1950
  %900 = xor i32 %899, %897
  %select.ptr.561 = select i1 %safe.410, i32* %390, i32* %shadow.sroa.0
  %901 = load i32, i32* %390, align 4
  %select.val.562 = select i1 %125, i32 %900, i32 %901
  store i32 %select.val.562, i32* %select.ptr.561, align 4
  %.val1951 = load i32, i32* %343, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1952 = load i32, i32* %shadow.sroa.0, align 8
  %902 = select i1 %safe.413, i32 %.val1951, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1952
  %903 = xor i32 %902, %900
  %select.ptr.568 = select i1 %safe.417, i32* %419, i32* %shadow.sroa.0
  %904 = load i32, i32* %419, align 4
  %select.val.569 = select i1 %125, i32 %903, i32 %904
  store i32 %select.val.569, i32* %select.ptr.568, align 4
  %905 = load i32, i32* %select.ptr.528, align 4
  %906 = xor i32 %905, %903
  %select.ptr.575 = select i1 %safe.424, i32* %423, i32* %shadow.sroa.0
  %907 = load i32, i32* %423, align 4
  %select.val.576 = select i1 %125, i32 %906, i32 %907
  store i32 %select.val.576, i32* %select.ptr.575, align 4
  %select.ptr.578 = select i1 %safe.379, i32* %423, i32* %shadow.sroa.0
  %908 = load i32, i32* %select.ptr.578, align 4
  %909 = load i32, i32* %select.ptr.540, align 4
  %910 = lshr i32 %908, 16
  %911 = and i32 %910, 255
  %912 = zext i32 %911 to i64
  %913 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %912
  %914 = load i32, i32* %913, align 4
  %915 = and i32 %914, -16777216
  %916 = lshr i32 %908, 8
  %917 = and i32 %916, 255
  %918 = zext i32 %917 to i64
  %919 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %918
  %920 = load i32, i32* %919, align 4
  %921 = and i32 %920, 16711680
  %922 = and i32 %908, 255
  %923 = zext i32 %922 to i64
  %924 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %923
  %925 = load i32, i32* %924, align 4
  %926 = and i32 %925, 65280
  %927 = lshr i32 %908, 24
  %928 = zext i32 %927 to i64
  %929 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %928
  %930 = load i32, i32* %929, align 4
  %931 = and i32 %930, 255
  %932 = xor i32 %909, 268435456
  %933 = xor i32 %932, %915
  %934 = xor i32 %933, %921
  %935 = xor i32 %934, %926
  %936 = xor i32 %935, %931
  %select.ptr.590 = select i1 %safe.389, i32* %427, i32* %shadow.sroa.0
  %937 = load i32, i32* %427, align 4
  %select.val.591 = select i1 %125, i32 %936, i32 %937
  store i32 %select.val.591, i32* %select.ptr.590, align 4
  %.val1953 = load i32, i32* %382, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1954 = load i32, i32* %shadow.sroa.0, align 8
  %938 = select i1 %safe.392, i32 %.val1953, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1954
  %939 = xor i32 %938, %936
  %select.ptr.597 = select i1 %safe.396, i32* %431, i32* %shadow.sroa.0
  %940 = load i32, i32* %431, align 4
  %select.val.598 = select i1 %125, i32 %939, i32 %940
  store i32 %select.val.598, i32* %select.ptr.597, align 4
  %.val1955 = load i32, i32* %386, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1956 = load i32, i32* %shadow.sroa.0, align 8
  %941 = select i1 %safe.399, i32 %.val1955, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1956
  %942 = xor i32 %941, %939
  %select.ptr.604 = select i1 %safe.403, i32* %462, i32* %shadow.sroa.0
  %943 = load i32, i32* %462, align 4
  %select.val.605 = select i1 %125, i32 %942, i32 %943
  store i32 %select.val.605, i32* %select.ptr.604, align 4
  %.val1957 = load i32, i32* %390, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1958 = load i32, i32* %shadow.sroa.0, align 8
  %944 = select i1 %safe.406, i32 %.val1957, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1958
  %945 = xor i32 %944, %942
  %select.ptr.611 = select i1 %safe.410, i32* %466, i32* %shadow.sroa.0
  %946 = load i32, i32* %466, align 4
  %select.val.612 = select i1 %125, i32 %945, i32 %946
  store i32 %select.val.612, i32* %select.ptr.611, align 4
  %.val1959 = load i32, i32* %419, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1960 = load i32, i32* %shadow.sroa.0, align 8
  %947 = select i1 %safe.413, i32 %.val1959, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1960
  %948 = xor i32 %947, %945
  %select.ptr.618 = select i1 %safe.417, i32* %470, i32* %shadow.sroa.0
  %949 = load i32, i32* %470, align 4
  %select.val.619 = select i1 %125, i32 %948, i32 %949
  store i32 %select.val.619, i32* %select.ptr.618, align 4
  %950 = load i32, i32* %select.ptr.578, align 4
  %951 = xor i32 %950, %948
  %select.ptr.625 = select i1 %safe.424, i32* %474, i32* %shadow.sroa.0
  %952 = load i32, i32* %474, align 4
  %select.val.626 = select i1 %125, i32 %951, i32 %952
  store i32 %select.val.626, i32* %select.ptr.625, align 4
  %select.ptr.628 = select i1 %safe.379, i32* %474, i32* %shadow.sroa.0
  %953 = load i32, i32* %select.ptr.628, align 4
  %954 = load i32, i32* %select.ptr.590, align 4
  %955 = lshr i32 %953, 16
  %956 = and i32 %955, 255
  %957 = zext i32 %956 to i64
  %958 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %957
  %959 = load i32, i32* %958, align 4
  %960 = and i32 %959, -16777216
  %961 = lshr i32 %953, 8
  %962 = and i32 %961, 255
  %963 = zext i32 %962 to i64
  %964 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %963
  %965 = load i32, i32* %964, align 4
  %966 = and i32 %965, 16711680
  %967 = and i32 %953, 255
  %968 = zext i32 %967 to i64
  %969 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %968
  %970 = load i32, i32* %969, align 4
  %971 = and i32 %970, 65280
  %972 = lshr i32 %953, 24
  %973 = zext i32 %972 to i64
  %974 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %973
  %975 = load i32, i32* %974, align 4
  %976 = and i32 %975, 255
  %977 = xor i32 %954, 536870912
  %978 = xor i32 %977, %960
  %979 = xor i32 %978, %966
  %980 = xor i32 %979, %971
  %981 = xor i32 %980, %976
  %select.ptr.640 = select i1 %safe.389, i32* %503, i32* %shadow.sroa.0
  %982 = load i32, i32* %503, align 4
  %select.val.641 = select i1 %125, i32 %981, i32 %982
  store i32 %select.val.641, i32* %select.ptr.640, align 4
  %.val1961 = load i32, i32* %431, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1962 = load i32, i32* %shadow.sroa.0, align 8
  %983 = select i1 %safe.392, i32 %.val1961, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1962
  %984 = xor i32 %983, %981
  %select.ptr.647 = select i1 %safe.396, i32* %507, i32* %shadow.sroa.0
  %985 = load i32, i32* %507, align 4
  %select.val.648 = select i1 %125, i32 %984, i32 %985
  store i32 %select.val.648, i32* %select.ptr.647, align 4
  %.val1963 = load i32, i32* %462, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1964 = load i32, i32* %shadow.sroa.0, align 8
  %986 = select i1 %safe.399, i32 %.val1963, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1964
  %987 = xor i32 %986, %984
  %select.ptr.654 = select i1 %safe.403, i32* %511, i32* %shadow.sroa.0
  %988 = load i32, i32* %511, align 4
  %select.val.655 = select i1 %125, i32 %987, i32 %988
  store i32 %select.val.655, i32* %select.ptr.654, align 4
  %.val1965 = load i32, i32* %466, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1966 = load i32, i32* %shadow.sroa.0, align 8
  %989 = select i1 %safe.406, i32 %.val1965, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1966
  %990 = xor i32 %989, %987
  %select.ptr.661 = select i1 %safe.410, i32* %515, i32* %shadow.sroa.0
  %991 = load i32, i32* %515, align 4
  %select.val.662 = select i1 %125, i32 %990, i32 %991
  store i32 %select.val.662, i32* %select.ptr.661, align 4
  %.val1967 = load i32, i32* %470, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1968 = load i32, i32* %shadow.sroa.0, align 8
  %992 = select i1 %safe.413, i32 %.val1967, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1968
  %993 = xor i32 %992, %990
  %select.ptr.668 = select i1 %safe.417, i32* %546, i32* %shadow.sroa.0
  %994 = load i32, i32* %546, align 4
  %select.val.669 = select i1 %125, i32 %993, i32 %994
  store i32 %select.val.669, i32* %select.ptr.668, align 4
  %995 = load i32, i32* %select.ptr.628, align 4
  %996 = xor i32 %995, %993
  %select.ptr.675 = select i1 %safe.424, i32* %550, i32* %shadow.sroa.0
  %997 = load i32, i32* %550, align 4
  %select.val.676 = select i1 %125, i32 %996, i32 %997
  store i32 %select.val.676, i32* %select.ptr.675, align 4
  %select.ptr.678 = select i1 %safe.379, i32* %550, i32* %shadow.sroa.0
  %998 = load i32, i32* %select.ptr.678, align 4
  %999 = load i32, i32* %select.ptr.640, align 4
  %1000 = lshr i32 %998, 16
  %1001 = and i32 %1000, 255
  %1002 = zext i32 %1001 to i64
  %1003 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1002
  %1004 = load i32, i32* %1003, align 4
  %1005 = and i32 %1004, -16777216
  %1006 = lshr i32 %998, 8
  %1007 = and i32 %1006, 255
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1008
  %1010 = load i32, i32* %1009, align 4
  %1011 = and i32 %1010, 16711680
  %1012 = and i32 %998, 255
  %1013 = zext i32 %1012 to i64
  %1014 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1013
  %1015 = load i32, i32* %1014, align 4
  %1016 = and i32 %1015, 65280
  %1017 = lshr i32 %998, 24
  %1018 = zext i32 %1017 to i64
  %1019 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1018
  %1020 = load i32, i32* %1019, align 4
  %1021 = and i32 %1020, 255
  %1022 = xor i32 %999, 1073741824
  %1023 = xor i32 %1022, %1005
  %1024 = xor i32 %1023, %1011
  %1025 = xor i32 %1024, %1016
  %1026 = xor i32 %1025, %1021
  %select.ptr.690 = select i1 %safe.389, i32* %554, i32* %shadow.sroa.0
  %1027 = load i32, i32* %554, align 4
  %select.val.691 = select i1 %125, i32 %1026, i32 %1027
  store i32 %select.val.691, i32* %select.ptr.690, align 4
  %.val1969 = load i32, i32* %507, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1970 = load i32, i32* %shadow.sroa.0, align 8
  %1028 = select i1 %safe.392, i32 %.val1969, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1970
  %1029 = xor i32 %1028, %1026
  %select.ptr.697 = select i1 %safe.396, i32* %558, i32* %shadow.sroa.0
  %1030 = load i32, i32* %558, align 4
  %select.val.698 = select i1 %125, i32 %1029, i32 %1030
  store i32 %select.val.698, i32* %select.ptr.697, align 4
  %.val1971 = load i32, i32* %511, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1972 = load i32, i32* %shadow.sroa.0, align 8
  %1031 = select i1 %safe.399, i32 %.val1971, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1972
  %1032 = xor i32 %1031, %1029
  %select.ptr.704 = select i1 %safe.403, i32* %587, i32* %shadow.sroa.0
  %1033 = load i32, i32* %587, align 4
  %select.val.705 = select i1 %125, i32 %1032, i32 %1033
  store i32 %select.val.705, i32* %select.ptr.704, align 4
  %.val1973 = load i32, i32* %515, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1974 = load i32, i32* %shadow.sroa.0, align 8
  %1034 = select i1 %safe.406, i32 %.val1973, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1974
  %1035 = xor i32 %1034, %1032
  %select.ptr.711 = select i1 %safe.410, i32* %591, i32* %shadow.sroa.0
  %1036 = load i32, i32* %591, align 4
  %select.val.712 = select i1 %125, i32 %1035, i32 %1036
  store i32 %select.val.712, i32* %select.ptr.711, align 4
  %.val1975 = load i32, i32* %546, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1976 = load i32, i32* %shadow.sroa.0, align 8
  %1037 = select i1 %safe.413, i32 %.val1975, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1976
  %1038 = xor i32 %1037, %1035
  %select.ptr.718 = select i1 %safe.417, i32* %595, i32* %shadow.sroa.0
  %1039 = load i32, i32* %595, align 4
  %select.val.719 = select i1 %125, i32 %1038, i32 %1039
  store i32 %select.val.719, i32* %select.ptr.718, align 4
  %1040 = load i32, i32* %select.ptr.678, align 4
  %1041 = xor i32 %1040, %1038
  %select.ptr.725 = select i1 %safe.424, i32* %599, i32* %shadow.sroa.0
  %1042 = load i32, i32* %599, align 4
  %select.val.726 = select i1 %125, i32 %1041, i32 %1042
  store i32 %select.val.726, i32* %select.ptr.725, align 4
  %.val1977 = load i32, i32* %599, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1978 = load i32, i32* %shadow.sroa.0, align 8
  %1043 = select i1 %safe.379, i32 %.val1977, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1978
  %1044 = load i32, i32* %select.ptr.690, align 4
  %1045 = lshr i32 %1043, 16
  %1046 = and i32 %1045, 255
  %1047 = zext i32 %1046 to i64
  %1048 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1047
  %1049 = load i32, i32* %1048, align 4
  %1050 = and i32 %1049, -16777216
  %1051 = lshr i32 %1043, 8
  %1052 = and i32 %1051, 255
  %1053 = zext i32 %1052 to i64
  %1054 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1053
  %1055 = load i32, i32* %1054, align 4
  %1056 = and i32 %1055, 16711680
  %1057 = and i32 %1043, 255
  %1058 = zext i32 %1057 to i64
  %1059 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1058
  %1060 = load i32, i32* %1059, align 4
  %1061 = and i32 %1060, 65280
  %1062 = lshr i32 %1043, 24
  %1063 = zext i32 %1062 to i64
  %1064 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1063
  %1065 = load i32, i32* %1064, align 4
  %1066 = and i32 %1065, 255
  %1067 = xor i32 %1044, -2147483648
  %1068 = xor i32 %1067, %1050
  %1069 = xor i32 %1068, %1056
  %1070 = xor i32 %1069, %1061
  %1071 = xor i32 %1070, %1066
  %select.ptr.740 = select i1 %safe.389, i32* %630, i32* %shadow.sroa.0
  %1072 = load i32, i32* %630, align 4
  %select.val.741 = select i1 %125, i32 %1071, i32 %1072
  store i32 %select.val.741, i32* %select.ptr.740, align 4
  %.val1979 = load i32, i32* %558, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1980 = load i32, i32* %shadow.sroa.0, align 8
  %1073 = select i1 %safe.392, i32 %.val1979, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1980
  %1074 = xor i32 %1073, %1071
  %select.ptr.747 = select i1 %safe.396, i32* %634, i32* %shadow.sroa.0
  %1075 = load i32, i32* %634, align 4
  %select.val.748 = select i1 %125, i32 %1074, i32 %1075
  store i32 %select.val.748, i32* %select.ptr.747, align 4
  %.val1981 = load i32, i32* %587, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1982 = load i32, i32* %shadow.sroa.0, align 8
  %1076 = select i1 %safe.399, i32 %.val1981, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1982
  %1077 = xor i32 %1076, %1074
  %select.ptr.754 = select i1 %safe.403, i32* %638, i32* %shadow.sroa.0
  %1078 = load i32, i32* %638, align 4
  %select.val.755 = select i1 %125, i32 %1077, i32 %1078
  store i32 %select.val.755, i32* %select.ptr.754, align 4
  %.val1983 = load i32, i32* %591, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1984 = load i32, i32* %shadow.sroa.0, align 8
  %1079 = select i1 %safe.406, i32 %.val1983, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1984
  %1080 = xor i32 %1079, %1077
  %select.ptr.761 = select i1 %safe.410, i32* %642, i32* %shadow.sroa.0
  %1081 = load i32, i32* %642, align 4
  %select.val.762 = select i1 %125, i32 %1080, i32 %1081
  store i32 %select.val.762, i32* %select.ptr.761, align 4
  %safe. = or i1 %214, %77
  %select.ptr. = select i1 %safe., i32* %76, i32* %shadow.sroa.0
  %1082 = load i32, i32* %select.ptr., align 4
  %1083 = load i32, i32* %0, align 4
  %1084 = lshr i32 %1082, 16
  %1085 = and i32 %1084, 255
  %1086 = zext i32 %1085 to i64
  %1087 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1086
  %1088 = load i32, i32* %1087, align 4
  %1089 = and i32 %1088, -16777216
  %1090 = lshr i32 %1082, 8
  %1091 = and i32 %1090, 255
  %1092 = zext i32 %1091 to i64
  %1093 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1092
  %1094 = load i32, i32* %1093, align 4
  %1095 = and i32 %1094, 16711680
  %1096 = and i32 %1082, 255
  %1097 = zext i32 %1096 to i64
  %1098 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1097
  %1099 = load i32, i32* %1098, align 4
  %1100 = and i32 %1099, 65280
  %1101 = lshr i32 %1082, 24
  %1102 = zext i32 %1101 to i64
  %1103 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1102
  %1104 = load i32, i32* %1103, align 4
  %1105 = and i32 %1104, 255
  %1106 = xor i32 %1083, 16777216
  %1107 = xor i32 %1106, %1089
  %1108 = xor i32 %1107, %1095
  %1109 = xor i32 %1108, %1100
  %1110 = xor i32 %1109, %1105
  %safe.10 = or i1 %102, %77
  %select.ptr.11 = select i1 %safe.10, i32* %101, i32* %shadow.sroa.0
  %1111 = load i32, i32* %101, align 4
  %select.val. = select i1 %77, i32 %1110, i32 %1111
  store i32 %select.val., i32* %select.ptr.11, align 4
  %safe.12 = or i1 %202, %77
  %.val1985 = load i32, i32* %38, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1986 = load i32, i32* %shadow.sroa.0, align 8
  %1112 = select i1 %safe.12, i32 %.val1985, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1986
  %1113 = xor i32 %1112, %1110
  %safe.16 = or i1 %123, %77
  %select.ptr.17 = select i1 %safe.16, i32* %122, i32* %shadow.sroa.0
  %1114 = load i32, i32* %122, align 4
  %select.val.18 = select i1 %77, i32 %1113, i32 %1114
  store i32 %select.val.18, i32* %select.ptr.17, align 4
  %safe.19 = or i1 %208, %77
  %.val1987 = load i32, i32* %57, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1988 = load i32, i32* %shadow.sroa.0, align 8
  %1115 = select i1 %safe.19, i32 %.val1987, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1988
  %1116 = xor i32 %1115, %1113
  %safe.23 = or i1 %146, %77
  %select.ptr.24 = select i1 %safe.23, i32* %145, i32* %shadow.sroa.0
  %1117 = load i32, i32* %145, align 4
  %select.val.25 = select i1 %77, i32 %1116, i32 %1117
  store i32 %select.val.25, i32* %select.ptr.24, align 4
  %1118 = load i32, i32* %select.ptr., align 4
  %1119 = xor i32 %1118, %1116
  %safe.30 = or i1 %167, %77
  %select.ptr.31 = select i1 %safe.30, i32* %166, i32* %shadow.sroa.0
  %1120 = load i32, i32* %166, align 4
  %select.val.32 = select i1 %77, i32 %1119, i32 %1120
  store i32 %select.val.32, i32* %select.ptr.31, align 4
  %select.ptr.34 = select i1 %safe., i32* %166, i32* %shadow.sroa.0
  %1121 = load i32, i32* %select.ptr.34, align 4
  %1122 = load i32, i32* %select.ptr.11, align 4
  %1123 = lshr i32 %1121, 16
  %1124 = and i32 %1123, 255
  %1125 = zext i32 %1124 to i64
  %1126 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1125
  %1127 = load i32, i32* %1126, align 4
  %1128 = and i32 %1127, -16777216
  %1129 = lshr i32 %1121, 8
  %1130 = and i32 %1129, 255
  %1131 = zext i32 %1130 to i64
  %1132 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1131
  %1133 = load i32, i32* %1132, align 4
  %1134 = and i32 %1133, 16711680
  %1135 = and i32 %1121, 255
  %1136 = zext i32 %1135 to i64
  %1137 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1136
  %1138 = load i32, i32* %1137, align 4
  %1139 = and i32 %1138, 65280
  %1140 = lshr i32 %1121, 24
  %1141 = zext i32 %1140 to i64
  %1142 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1141
  %1143 = load i32, i32* %1142, align 4
  %1144 = and i32 %1143, 255
  %1145 = xor i32 %1122, 33554432
  %1146 = xor i32 %1145, %1128
  %1147 = xor i32 %1146, %1134
  %1148 = xor i32 %1147, %1139
  %1149 = xor i32 %1148, %1144
  %select.ptr.46 = select i1 %safe.10, i32* %199, i32* %shadow.sroa.0
  %1150 = load i32, i32* %199, align 4
  %select.val.47 = select i1 %77, i32 %1149, i32 %1150
  store i32 %select.val.47, i32* %select.ptr.46, align 4
  %.val1989 = load i32, i32* %122, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1990 = load i32, i32* %shadow.sroa.0, align 8
  %1151 = select i1 %safe.12, i32 %.val1989, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1990
  %1152 = xor i32 %1151, %1149
  %select.ptr.53 = select i1 %safe.16, i32* %205, i32* %shadow.sroa.0
  %1153 = load i32, i32* %205, align 4
  %select.val.54 = select i1 %77, i32 %1152, i32 %1153
  store i32 %select.val.54, i32* %select.ptr.53, align 4
  %.val1991 = load i32, i32* %145, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1992 = load i32, i32* %shadow.sroa.0, align 8
  %1154 = select i1 %safe.19, i32 %.val1991, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1992
  %1155 = xor i32 %1154, %1152
  %select.ptr.60 = select i1 %safe.23, i32* %211, i32* %shadow.sroa.0
  %1156 = load i32, i32* %211, align 4
  %select.val.61 = select i1 %77, i32 %1155, i32 %1156
  store i32 %select.val.61, i32* %select.ptr.60, align 4
  %1157 = load i32, i32* %select.ptr.34, align 4
  %1158 = xor i32 %1157, %1155
  %select.ptr.67 = select i1 %safe.30, i32* %217, i32* %shadow.sroa.0
  %1159 = load i32, i32* %217, align 4
  %select.val.68 = select i1 %77, i32 %1158, i32 %1159
  store i32 %select.val.68, i32* %select.ptr.67, align 4
  %select.ptr.70 = select i1 %safe., i32* %217, i32* %shadow.sroa.0
  %1160 = load i32, i32* %select.ptr.70, align 4
  %1161 = load i32, i32* %select.ptr.46, align 4
  %1162 = lshr i32 %1160, 16
  %1163 = and i32 %1162, 255
  %1164 = zext i32 %1163 to i64
  %1165 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1164
  %1166 = load i32, i32* %1165, align 4
  %1167 = and i32 %1166, -16777216
  %1168 = lshr i32 %1160, 8
  %1169 = and i32 %1168, 255
  %1170 = zext i32 %1169 to i64
  %1171 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1170
  %1172 = load i32, i32* %1171, align 4
  %1173 = and i32 %1172, 16711680
  %1174 = and i32 %1160, 255
  %1175 = zext i32 %1174 to i64
  %1176 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1175
  %1177 = load i32, i32* %1176, align 4
  %1178 = and i32 %1177, 65280
  %1179 = lshr i32 %1160, 24
  %1180 = zext i32 %1179 to i64
  %1181 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1180
  %1182 = load i32, i32* %1181, align 4
  %1183 = and i32 %1182, 255
  %1184 = xor i32 %1161, 67108864
  %1185 = xor i32 %1184, %1167
  %1186 = xor i32 %1185, %1173
  %1187 = xor i32 %1186, %1178
  %1188 = xor i32 %1187, %1183
  %select.ptr.82 = select i1 %safe.10, i32* %247, i32* %shadow.sroa.0
  %1189 = load i32, i32* %247, align 4
  %select.val.83 = select i1 %77, i32 %1188, i32 %1189
  store i32 %select.val.83, i32* %select.ptr.82, align 4
  %.val1993 = load i32, i32* %205, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1994 = load i32, i32* %shadow.sroa.0, align 8
  %1190 = select i1 %safe.12, i32 %.val1993, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1994
  %1191 = xor i32 %1190, %1188
  %select.ptr.89 = select i1 %safe.16, i32* %252, i32* %shadow.sroa.0
  %1192 = load i32, i32* %252, align 4
  %select.val.90 = select i1 %77, i32 %1191, i32 %1192
  store i32 %select.val.90, i32* %select.ptr.89, align 4
  %.val1995 = load i32, i32* %211, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1996 = load i32, i32* %shadow.sroa.0, align 8
  %1193 = select i1 %safe.19, i32 %.val1995, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1996
  %1194 = xor i32 %1193, %1191
  %select.ptr.96 = select i1 %safe.23, i32* %257, i32* %shadow.sroa.0
  %1195 = load i32, i32* %257, align 4
  %select.val.97 = select i1 %77, i32 %1194, i32 %1195
  store i32 %select.val.97, i32* %select.ptr.96, align 4
  %1196 = load i32, i32* %select.ptr.70, align 4
  %1197 = xor i32 %1196, %1194
  %select.ptr.103 = select i1 %safe.30, i32* %262, i32* %shadow.sroa.0
  %1198 = load i32, i32* %262, align 4
  %select.val.104 = select i1 %77, i32 %1197, i32 %1198
  store i32 %select.val.104, i32* %select.ptr.103, align 4
  %select.ptr.106 = select i1 %safe., i32* %262, i32* %shadow.sroa.0
  %1199 = load i32, i32* %select.ptr.106, align 4
  %1200 = load i32, i32* %select.ptr.82, align 4
  %1201 = lshr i32 %1199, 16
  %1202 = and i32 %1201, 255
  %1203 = zext i32 %1202 to i64
  %1204 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1203
  %1205 = load i32, i32* %1204, align 4
  %1206 = and i32 %1205, -16777216
  %1207 = lshr i32 %1199, 8
  %1208 = and i32 %1207, 255
  %1209 = zext i32 %1208 to i64
  %1210 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1209
  %1211 = load i32, i32* %1210, align 4
  %1212 = and i32 %1211, 16711680
  %1213 = and i32 %1199, 255
  %1214 = zext i32 %1213 to i64
  %1215 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1214
  %1216 = load i32, i32* %1215, align 4
  %1217 = and i32 %1216, 65280
  %1218 = lshr i32 %1199, 24
  %1219 = zext i32 %1218 to i64
  %1220 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1219
  %1221 = load i32, i32* %1220, align 4
  %1222 = and i32 %1221, 255
  %1223 = xor i32 %1200, 134217728
  %1224 = xor i32 %1223, %1206
  %1225 = xor i32 %1224, %1212
  %1226 = xor i32 %1225, %1217
  %1227 = xor i32 %1226, %1222
  %select.ptr.118 = select i1 %safe.10, i32* %294, i32* %shadow.sroa.0
  %1228 = load i32, i32* %294, align 4
  %select.val.119 = select i1 %77, i32 %1227, i32 %1228
  store i32 %select.val.119, i32* %select.ptr.118, align 4
  %.val1997 = load i32, i32* %252, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1998 = load i32, i32* %shadow.sroa.0, align 8
  %1229 = select i1 %safe.12, i32 %.val1997, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val1998
  %1230 = xor i32 %1229, %1227
  %select.ptr.125 = select i1 %safe.16, i32* %298, i32* %shadow.sroa.0
  %1231 = load i32, i32* %298, align 4
  %select.val.126 = select i1 %77, i32 %1230, i32 %1231
  store i32 %select.val.126, i32* %select.ptr.125, align 4
  %.val1999 = load i32, i32* %257, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2000 = load i32, i32* %shadow.sroa.0, align 8
  %1232 = select i1 %safe.19, i32 %.val1999, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2000
  %1233 = xor i32 %1232, %1230
  %select.ptr.132 = select i1 %safe.23, i32* %302, i32* %shadow.sroa.0
  %1234 = load i32, i32* %302, align 4
  %select.val.133 = select i1 %77, i32 %1233, i32 %1234
  store i32 %select.val.133, i32* %select.ptr.132, align 4
  %1235 = load i32, i32* %select.ptr.106, align 4
  %1236 = xor i32 %1235, %1233
  %select.ptr.139 = select i1 %safe.30, i32* %306, i32* %shadow.sroa.0
  %1237 = load i32, i32* %306, align 4
  %select.val.140 = select i1 %77, i32 %1236, i32 %1237
  store i32 %select.val.140, i32* %select.ptr.139, align 4
  %select.ptr.142 = select i1 %safe., i32* %306, i32* %shadow.sroa.0
  %1238 = load i32, i32* %select.ptr.142, align 4
  %1239 = load i32, i32* %select.ptr.118, align 4
  %1240 = lshr i32 %1238, 16
  %1241 = and i32 %1240, 255
  %1242 = zext i32 %1241 to i64
  %1243 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1242
  %1244 = load i32, i32* %1243, align 4
  %1245 = and i32 %1244, -16777216
  %1246 = lshr i32 %1238, 8
  %1247 = and i32 %1246, 255
  %1248 = zext i32 %1247 to i64
  %1249 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1248
  %1250 = load i32, i32* %1249, align 4
  %1251 = and i32 %1250, 16711680
  %1252 = and i32 %1238, 255
  %1253 = zext i32 %1252 to i64
  %1254 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1253
  %1255 = load i32, i32* %1254, align 4
  %1256 = and i32 %1255, 65280
  %1257 = lshr i32 %1238, 24
  %1258 = zext i32 %1257 to i64
  %1259 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1258
  %1260 = load i32, i32* %1259, align 4
  %1261 = and i32 %1260, 255
  %1262 = xor i32 %1239, 268435456
  %1263 = xor i32 %1262, %1245
  %1264 = xor i32 %1263, %1251
  %1265 = xor i32 %1264, %1256
  %1266 = xor i32 %1265, %1261
  %select.ptr.154 = select i1 %safe.10, i32* %335, i32* %shadow.sroa.0
  %1267 = load i32, i32* %335, align 4
  %select.val.155 = select i1 %77, i32 %1266, i32 %1267
  store i32 %select.val.155, i32* %select.ptr.154, align 4
  %.val2001 = load i32, i32* %298, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2002 = load i32, i32* %shadow.sroa.0, align 8
  %1268 = select i1 %safe.12, i32 %.val2001, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2002
  %1269 = xor i32 %1268, %1266
  %select.ptr.161 = select i1 %safe.16, i32* %339, i32* %shadow.sroa.0
  %1270 = load i32, i32* %339, align 4
  %select.val.162 = select i1 %77, i32 %1269, i32 %1270
  store i32 %select.val.162, i32* %select.ptr.161, align 4
  %.val2003 = load i32, i32* %302, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2004 = load i32, i32* %shadow.sroa.0, align 8
  %1271 = select i1 %safe.19, i32 %.val2003, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2004
  %1272 = xor i32 %1271, %1269
  %select.ptr.168 = select i1 %safe.23, i32* %343, i32* %shadow.sroa.0
  %1273 = load i32, i32* %343, align 4
  %select.val.169 = select i1 %77, i32 %1272, i32 %1273
  store i32 %select.val.169, i32* %select.ptr.168, align 4
  %1274 = load i32, i32* %select.ptr.142, align 4
  %1275 = xor i32 %1274, %1272
  %select.ptr.175 = select i1 %safe.30, i32* %347, i32* %shadow.sroa.0
  %1276 = load i32, i32* %347, align 4
  %select.val.176 = select i1 %77, i32 %1275, i32 %1276
  store i32 %select.val.176, i32* %select.ptr.175, align 4
  %select.ptr.178 = select i1 %safe., i32* %347, i32* %shadow.sroa.0
  %1277 = load i32, i32* %select.ptr.178, align 4
  %1278 = load i32, i32* %select.ptr.154, align 4
  %1279 = lshr i32 %1277, 16
  %1280 = and i32 %1279, 255
  %1281 = zext i32 %1280 to i64
  %1282 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1281
  %1283 = load i32, i32* %1282, align 4
  %1284 = and i32 %1283, -16777216
  %1285 = lshr i32 %1277, 8
  %1286 = and i32 %1285, 255
  %1287 = zext i32 %1286 to i64
  %1288 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1287
  %1289 = load i32, i32* %1288, align 4
  %1290 = and i32 %1289, 16711680
  %1291 = and i32 %1277, 255
  %1292 = zext i32 %1291 to i64
  %1293 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1292
  %1294 = load i32, i32* %1293, align 4
  %1295 = and i32 %1294, 65280
  %1296 = lshr i32 %1277, 24
  %1297 = zext i32 %1296 to i64
  %1298 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1297
  %1299 = load i32, i32* %1298, align 4
  %1300 = and i32 %1299, 255
  %1301 = xor i32 %1278, 536870912
  %1302 = xor i32 %1301, %1284
  %1303 = xor i32 %1302, %1290
  %1304 = xor i32 %1303, %1295
  %1305 = xor i32 %1304, %1300
  %select.ptr.190 = select i1 %safe.10, i32* %378, i32* %shadow.sroa.0
  %1306 = load i32, i32* %378, align 4
  %select.val.191 = select i1 %77, i32 %1305, i32 %1306
  store i32 %select.val.191, i32* %select.ptr.190, align 4
  %.val2005 = load i32, i32* %339, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2006 = load i32, i32* %shadow.sroa.0, align 8
  %1307 = select i1 %safe.12, i32 %.val2005, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2006
  %1308 = xor i32 %1307, %1305
  %select.ptr.197 = select i1 %safe.16, i32* %382, i32* %shadow.sroa.0
  %1309 = load i32, i32* %382, align 4
  %select.val.198 = select i1 %77, i32 %1308, i32 %1309
  store i32 %select.val.198, i32* %select.ptr.197, align 4
  %.val2007 = load i32, i32* %343, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2008 = load i32, i32* %shadow.sroa.0, align 8
  %1310 = select i1 %safe.19, i32 %.val2007, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2008
  %1311 = xor i32 %1310, %1308
  %select.ptr.204 = select i1 %safe.23, i32* %386, i32* %shadow.sroa.0
  %1312 = load i32, i32* %386, align 4
  %select.val.205 = select i1 %77, i32 %1311, i32 %1312
  store i32 %select.val.205, i32* %select.ptr.204, align 4
  %1313 = load i32, i32* %select.ptr.178, align 4
  %1314 = xor i32 %1313, %1311
  %select.ptr.211 = select i1 %safe.30, i32* %390, i32* %shadow.sroa.0
  %1315 = load i32, i32* %390, align 4
  %select.val.212 = select i1 %77, i32 %1314, i32 %1315
  store i32 %select.val.212, i32* %select.ptr.211, align 4
  %select.ptr.214 = select i1 %safe., i32* %390, i32* %shadow.sroa.0
  %1316 = load i32, i32* %select.ptr.214, align 4
  %1317 = load i32, i32* %select.ptr.190, align 4
  %1318 = lshr i32 %1316, 16
  %1319 = and i32 %1318, 255
  %1320 = zext i32 %1319 to i64
  %1321 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1320
  %1322 = load i32, i32* %1321, align 4
  %1323 = and i32 %1322, -16777216
  %1324 = lshr i32 %1316, 8
  %1325 = and i32 %1324, 255
  %1326 = zext i32 %1325 to i64
  %1327 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1326
  %1328 = load i32, i32* %1327, align 4
  %1329 = and i32 %1328, 16711680
  %1330 = and i32 %1316, 255
  %1331 = zext i32 %1330 to i64
  %1332 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1331
  %1333 = load i32, i32* %1332, align 4
  %1334 = and i32 %1333, 65280
  %1335 = lshr i32 %1316, 24
  %1336 = zext i32 %1335 to i64
  %1337 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1336
  %1338 = load i32, i32* %1337, align 4
  %1339 = and i32 %1338, 255
  %1340 = xor i32 %1317, 1073741824
  %1341 = xor i32 %1340, %1323
  %1342 = xor i32 %1341, %1329
  %1343 = xor i32 %1342, %1334
  %1344 = xor i32 %1343, %1339
  %select.ptr.226 = select i1 %safe.10, i32* %419, i32* %shadow.sroa.0
  %1345 = load i32, i32* %419, align 4
  %select.val.227 = select i1 %77, i32 %1344, i32 %1345
  store i32 %select.val.227, i32* %select.ptr.226, align 4
  %.val2009 = load i32, i32* %382, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2010 = load i32, i32* %shadow.sroa.0, align 8
  %1346 = select i1 %safe.12, i32 %.val2009, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2010
  %1347 = xor i32 %1346, %1344
  %select.ptr.233 = select i1 %safe.16, i32* %423, i32* %shadow.sroa.0
  %1348 = load i32, i32* %423, align 4
  %select.val.234 = select i1 %77, i32 %1347, i32 %1348
  store i32 %select.val.234, i32* %select.ptr.233, align 4
  %.val2011 = load i32, i32* %386, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2012 = load i32, i32* %shadow.sroa.0, align 8
  %1349 = select i1 %safe.19, i32 %.val2011, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2012
  %1350 = xor i32 %1349, %1347
  %select.ptr.240 = select i1 %safe.23, i32* %427, i32* %shadow.sroa.0
  %1351 = load i32, i32* %427, align 4
  %select.val.241 = select i1 %77, i32 %1350, i32 %1351
  store i32 %select.val.241, i32* %select.ptr.240, align 4
  %1352 = load i32, i32* %select.ptr.214, align 4
  %1353 = xor i32 %1352, %1350
  %select.ptr.247 = select i1 %safe.30, i32* %431, i32* %shadow.sroa.0
  %1354 = load i32, i32* %431, align 4
  %select.val.248 = select i1 %77, i32 %1353, i32 %1354
  store i32 %select.val.248, i32* %select.ptr.247, align 4
  %select.ptr.250 = select i1 %safe., i32* %431, i32* %shadow.sroa.0
  %1355 = load i32, i32* %select.ptr.250, align 4
  %1356 = load i32, i32* %select.ptr.226, align 4
  %1357 = lshr i32 %1355, 16
  %1358 = and i32 %1357, 255
  %1359 = zext i32 %1358 to i64
  %1360 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1359
  %1361 = load i32, i32* %1360, align 4
  %1362 = and i32 %1361, -16777216
  %1363 = lshr i32 %1355, 8
  %1364 = and i32 %1363, 255
  %1365 = zext i32 %1364 to i64
  %1366 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1365
  %1367 = load i32, i32* %1366, align 4
  %1368 = and i32 %1367, 16711680
  %1369 = and i32 %1355, 255
  %1370 = zext i32 %1369 to i64
  %1371 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1370
  %1372 = load i32, i32* %1371, align 4
  %1373 = and i32 %1372, 65280
  %1374 = lshr i32 %1355, 24
  %1375 = zext i32 %1374 to i64
  %1376 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1375
  %1377 = load i32, i32* %1376, align 4
  %1378 = and i32 %1377, 255
  %1379 = xor i32 %1356, -2147483648
  %1380 = xor i32 %1379, %1362
  %1381 = xor i32 %1380, %1368
  %1382 = xor i32 %1381, %1373
  %1383 = xor i32 %1382, %1378
  %select.ptr.262 = select i1 %safe.10, i32* %462, i32* %shadow.sroa.0
  %1384 = load i32, i32* %462, align 4
  %select.val.263 = select i1 %77, i32 %1383, i32 %1384
  store i32 %select.val.263, i32* %select.ptr.262, align 4
  %.val2013 = load i32, i32* %423, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2014 = load i32, i32* %shadow.sroa.0, align 8
  %1385 = select i1 %safe.12, i32 %.val2013, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2014
  %1386 = xor i32 %1385, %1383
  %select.ptr.269 = select i1 %safe.16, i32* %466, i32* %shadow.sroa.0
  %1387 = load i32, i32* %466, align 4
  %select.val.270 = select i1 %77, i32 %1386, i32 %1387
  store i32 %select.val.270, i32* %select.ptr.269, align 4
  %.val2015 = load i32, i32* %427, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2016 = load i32, i32* %shadow.sroa.0, align 8
  %1388 = select i1 %safe.19, i32 %.val2015, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2016
  %1389 = xor i32 %1388, %1386
  %select.ptr.276 = select i1 %safe.23, i32* %470, i32* %shadow.sroa.0
  %1390 = load i32, i32* %470, align 4
  %select.val.277 = select i1 %77, i32 %1389, i32 %1390
  store i32 %select.val.277, i32* %select.ptr.276, align 4
  %1391 = load i32, i32* %select.ptr.250, align 4
  %1392 = xor i32 %1391, %1389
  %select.ptr.283 = select i1 %safe.30, i32* %474, i32* %shadow.sroa.0
  %1393 = load i32, i32* %474, align 4
  %select.val.284 = select i1 %77, i32 %1392, i32 %1393
  store i32 %select.val.284, i32* %select.ptr.283, align 4
  %select.ptr.286 = select i1 %safe., i32* %474, i32* %shadow.sroa.0
  %1394 = load i32, i32* %select.ptr.286, align 4
  %1395 = load i32, i32* %select.ptr.262, align 4
  %1396 = lshr i32 %1394, 16
  %1397 = and i32 %1396, 255
  %1398 = zext i32 %1397 to i64
  %1399 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1398
  %1400 = load i32, i32* %1399, align 4
  %1401 = and i32 %1400, -16777216
  %1402 = lshr i32 %1394, 8
  %1403 = and i32 %1402, 255
  %1404 = zext i32 %1403 to i64
  %1405 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1404
  %1406 = load i32, i32* %1405, align 4
  %1407 = and i32 %1406, 16711680
  %1408 = and i32 %1394, 255
  %1409 = zext i32 %1408 to i64
  %1410 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1409
  %1411 = load i32, i32* %1410, align 4
  %1412 = and i32 %1411, 65280
  %1413 = lshr i32 %1394, 24
  %1414 = zext i32 %1413 to i64
  %1415 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1414
  %1416 = load i32, i32* %1415, align 4
  %1417 = and i32 %1416, 255
  %1418 = xor i32 %1395, 452984832
  %1419 = xor i32 %1418, %1401
  %1420 = xor i32 %1419, %1407
  %1421 = xor i32 %1420, %1412
  %1422 = xor i32 %1421, %1417
  %select.ptr.298 = select i1 %safe.10, i32* %503, i32* %shadow.sroa.0
  %1423 = load i32, i32* %503, align 4
  %select.val.299 = select i1 %77, i32 %1422, i32 %1423
  store i32 %select.val.299, i32* %select.ptr.298, align 4
  %.val2017 = load i32, i32* %466, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2018 = load i32, i32* %shadow.sroa.0, align 8
  %1424 = select i1 %safe.12, i32 %.val2017, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2018
  %1425 = xor i32 %1424, %1422
  %select.ptr.305 = select i1 %safe.16, i32* %507, i32* %shadow.sroa.0
  %1426 = load i32, i32* %507, align 4
  %select.val.306 = select i1 %77, i32 %1425, i32 %1426
  store i32 %select.val.306, i32* %select.ptr.305, align 4
  %.val2019 = load i32, i32* %470, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2020 = load i32, i32* %shadow.sroa.0, align 8
  %1427 = select i1 %safe.19, i32 %.val2019, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2020
  %1428 = xor i32 %1427, %1425
  %select.ptr.312 = select i1 %safe.23, i32* %511, i32* %shadow.sroa.0
  %1429 = load i32, i32* %511, align 4
  %select.val.313 = select i1 %77, i32 %1428, i32 %1429
  store i32 %select.val.313, i32* %select.ptr.312, align 4
  %1430 = load i32, i32* %select.ptr.286, align 4
  %1431 = xor i32 %1430, %1428
  %select.ptr.319 = select i1 %safe.30, i32* %515, i32* %shadow.sroa.0
  %1432 = load i32, i32* %515, align 4
  %select.val.320 = select i1 %77, i32 %1431, i32 %1432
  store i32 %select.val.320, i32* %select.ptr.319, align 4
  %select.ptr.322 = select i1 %safe., i32* %515, i32* %shadow.sroa.0
  %1433 = load i32, i32* %select.ptr.322, align 4
  %1434 = load i32, i32* %select.ptr.298, align 4
  %1435 = lshr i32 %1433, 16
  %1436 = and i32 %1435, 255
  %1437 = zext i32 %1436 to i64
  %1438 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1437
  %1439 = load i32, i32* %1438, align 4
  %1440 = and i32 %1439, -16777216
  %1441 = lshr i32 %1433, 8
  %1442 = and i32 %1441, 255
  %1443 = zext i32 %1442 to i64
  %1444 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1443
  %1445 = load i32, i32* %1444, align 4
  %1446 = and i32 %1445, 16711680
  %1447 = and i32 %1433, 255
  %1448 = zext i32 %1447 to i64
  %1449 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1448
  %1450 = load i32, i32* %1449, align 4
  %1451 = and i32 %1450, 65280
  %1452 = lshr i32 %1433, 24
  %1453 = zext i32 %1452 to i64
  %1454 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1453
  %1455 = load i32, i32* %1454, align 4
  %1456 = and i32 %1455, 255
  %1457 = xor i32 %1434, 905969664
  %1458 = xor i32 %1457, %1440
  %1459 = xor i32 %1458, %1446
  %1460 = xor i32 %1459, %1451
  %1461 = xor i32 %1460, %1456
  %select.ptr.334 = select i1 %safe.10, i32* %546, i32* %shadow.sroa.0
  %1462 = load i32, i32* %546, align 4
  %select.val.335 = select i1 %77, i32 %1461, i32 %1462
  store i32 %select.val.335, i32* %select.ptr.334, align 4
  %.val2021 = load i32, i32* %507, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2022 = load i32, i32* %shadow.sroa.0, align 8
  %1463 = select i1 %safe.12, i32 %.val2021, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2022
  %1464 = xor i32 %1463, %1461
  %select.ptr.341 = select i1 %safe.16, i32* %550, i32* %shadow.sroa.0
  %1465 = load i32, i32* %550, align 4
  %select.val.342 = select i1 %77, i32 %1464, i32 %1465
  store i32 %select.val.342, i32* %select.ptr.341, align 4
  %.val2023 = load i32, i32* %511, align 4
  %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2024 = load i32, i32* %shadow.sroa.0, align 8
  %1466 = select i1 %safe.19, i32 %.val2023, i32 %shadow.sroa.0.0.shadow.sroa.0.0.shadow.sroa.0.val2024
  %1467 = xor i32 %1466, %1464
  %select.ptr.348 = select i1 %safe.23, i32* %554, i32* %shadow.sroa.0
  %1468 = load i32, i32* %554, align 4
  %select.val.349 = select i1 %77, i32 %1467, i32 %1468
  store i32 %select.val.349, i32* %select.ptr.348, align 4
  %1469 = load i32, i32* %select.ptr.322, align 4
  %1470 = xor i32 %1469, %1467
  %select.ptr.355 = select i1 %safe.30, i32* %558, i32* %shadow.sroa.0
  %1471 = load i32, i32* %558, align 4
  %select.val.356 = select i1 %77, i32 %1470, i32 %1471
  store i32 %select.val.356, i32* %select.ptr.355, align 4
  %in.11 = xor i1 %169, %in.9
  %1472 = select i1 %in.11, i32 0, i32 14
  %1473 = select i1 %125, i32 12, i32 %1472
  %select.phi. = select i1 %77, i32 10, i32 %1473
  ret i32 %select.phi.
}

; Function Attrs: nofree norecurse nounwind
define i32 @rijndaelKeySetupDec(i32* %0, i64 %N, i8* %1, i64 %N1, i32 %2) local_unnamed_addr #4 {
  %4 = call i32 @rijndaelKeySetupEnc(i32* %0, i64 %N, i8* %1, i64 %N1, i32 %2)
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %.lr.ph8, label %.preheader

.lr.ph8:                                          ; preds = %3
  %6 = shl i32 %4, 2
  %7 = sext i32 %6 to i64
  br label %9

.preheader:                                       ; preds = %9, %3
  %8 = icmp sgt i32 %4, 1
  br i1 %8, label %.preheader..lr.ph_crit_edge, label %._crit_edge

.preheader..lr.ph_crit_edge:                      ; preds = %.preheader
  %.1 = add nuw nsw i32 1, 1
  br label %.lr.ph

9:                                                ; preds = %9, %.lr.ph8
  %indvars.iv10 = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next11, %9 ]
  %indvars.iv = phi i64 [ %7, %.lr.ph8 ], [ %indvars.iv.next, %9 ]
  %10 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  store i32 %11, i32* %12, align 4
  %14 = or i64 %indvars.iv10, 1
  %15 = getelementptr inbounds i32, i32* %0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = or i64 %indvars.iv, 1
  %18 = getelementptr inbounds i32, i32* %0, i64 %17
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %15, align 4
  store i32 %16, i32* %18, align 4
  %20 = or i64 %indvars.iv10, 2
  %21 = getelementptr inbounds i32, i32* %0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = or i64 %indvars.iv, 2
  %24 = getelementptr inbounds i32, i32* %0, i64 %23
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %21, align 4
  store i32 %22, i32* %24, align 4
  %26 = or i64 %indvars.iv10, 3
  %27 = getelementptr inbounds i32, i32* %0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = or i64 %indvars.iv, 3
  %30 = getelementptr inbounds i32, i32* %0, i64 %29
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %27, align 4
  store i32 %28, i32* %30, align 4
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 4
  %indvars.iv.next = add nsw i64 %indvars.iv, -4
  %32 = icmp slt i64 %indvars.iv.next11, %indvars.iv.next
  br i1 %32, label %9, label %.preheader

.lr.ph:                                           ; preds = %.preheader..lr.ph_crit_edge, %.lr.ph..lr.ph_crit_edge
  %.04 = phi i32* [ %33, %.lr.ph..lr.ph_crit_edge ], [ %0, %.preheader..lr.ph_crit_edge ]
  %.phi = phi i32 [ %.0, %.lr.ph..lr.ph_crit_edge ], [ %.1, %.preheader..lr.ph_crit_edge ]
  %33 = getelementptr inbounds i32, i32* %.04, i64 4
  %34 = load i32, i32* %33, align 4
  %35 = lshr i32 %34, 24
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 255
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = lshr i32 %34, 16
  %44 = and i32 %43, 255
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 255
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = xor i32 %51, %42
  %53 = lshr i32 %34, 8
  %54 = and i32 %53, 255
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 255
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = xor i32 %52, %61
  %63 = and i32 %34, 255
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 255
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = xor i32 %62, %70
  store i32 %71, i32* %33, align 4
  %72 = getelementptr inbounds i32, i32* %.04, i64 5
  %73 = load i32, i32* %72, align 4
  %74 = lshr i32 %73, 24
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, 255
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = lshr i32 %73, 16
  %83 = and i32 %82, 255
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 255
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = xor i32 %90, %81
  %92 = lshr i32 %73, 8
  %93 = and i32 %92, 255
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 255
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = xor i32 %91, %100
  %102 = and i32 %73, 255
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 255
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = xor i32 %101, %109
  store i32 %110, i32* %72, align 4
  %111 = getelementptr inbounds i32, i32* %.04, i64 6
  %112 = load i32, i32* %111, align 4
  %113 = lshr i32 %112, 24
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 255
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = lshr i32 %112, 16
  %122 = and i32 %121, 255
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, 255
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = xor i32 %129, %120
  %131 = lshr i32 %112, 8
  %132 = and i32 %131, 255
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 255
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = xor i32 %130, %139
  %141 = and i32 %112, 255
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, 255
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = xor i32 %140, %148
  store i32 %149, i32* %111, align 4
  %150 = getelementptr inbounds i32, i32* %.04, i64 7
  %151 = load i32, i32* %150, align 4
  %152 = lshr i32 %151, 24
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, 255
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = lshr i32 %151, 16
  %161 = and i32 %160, 255
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = and i32 %164, 255
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = xor i32 %168, %159
  %170 = lshr i32 %151, 8
  %171 = and i32 %170, 255
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %174, 255
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = xor i32 %169, %178
  %180 = and i32 %151, 255
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, 255
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = xor i32 %179, %187
  store i32 %188, i32* %150, align 4
  %exitcond = icmp eq i32 %.phi, %4
  br i1 %exitcond, label %._crit_edge, label %.lr.ph..lr.ph_crit_edge

.lr.ph..lr.ph_crit_edge:                          ; preds = %.lr.ph
  %.0 = add nuw nsw i32 %.phi, 1
  br label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind
define void @rijndaelEncrypt(i32* readonly %0, i64 %N, i32 %1, i8* nocapture readonly %2, i64 %N1, i8* nocapture %3, i64 %N2) local_unnamed_addr #4 {
.preheader12:
  %4 = load i8, i8* %2, align 1
  %5 = zext i8 %4 to i32
  %6 = shl nuw i32 %5, 24
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 16
  %11 = or i32 %10, %6
  %12 = getelementptr inbounds i8, i8* %2, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  %16 = or i32 %11, %15
  %17 = getelementptr inbounds i8, i8* %2, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = or i32 %16, %19
  %21 = load i32, i32* %0, align 4
  %22 = xor i32 %20, %21
  %23 = getelementptr inbounds i8, i8* %2, i64 4
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %2, i64 5
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 16
  %30 = getelementptr inbounds i8, i8* %2, i64 6
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 8
  %34 = getelementptr inbounds i8, i8* %2, i64 7
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds i32, i32* %0, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i8, i8* %2, i64 8
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds i8, i8* %2, i64 9
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 16
  %46 = getelementptr inbounds i8, i8* %2, i64 10
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = getelementptr inbounds i8, i8* %2, i64 11
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = getelementptr inbounds i32, i32* %0, i64 2
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds i8, i8* %2, i64 12
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = getelementptr inbounds i8, i8* %2, i64 13
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 16
  %62 = getelementptr inbounds i8, i8* %2, i64 14
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl nuw nsw i32 %64, 8
  %66 = getelementptr inbounds i8, i8* %2, i64 15
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = getelementptr inbounds i32, i32* %0, i64 3
  %70 = load i32, i32* %69, align 4
  %71 = lshr i32 %22, 24
  %72 = zext i32 %71 to i64
  %73 = icmp eq i32 %71, 0
  %shadow.sroa.0 = alloca i32, align 8
  %74 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %72
  %75 = load i32, i32* %74, align 4
  %select.phi. = select i1 %73, i32 -966564955, i32 %75
  %76 = shl nuw i32 %25, 24
  %77 = or i32 %29, %76
  %78 = or i32 %77, %33
  %79 = or i32 %78, %36
  %80 = xor i32 %79, %38
  %81 = shl nuw i32 %41, 24
  %82 = or i32 %45, %81
  %83 = or i32 %82, %49
  %84 = or i32 %83, %52
  %85 = xor i32 %84, %54
  %86 = shl nuw i32 %57, 24
  %87 = or i32 %61, %86
  %88 = or i32 %87, %65
  %89 = or i32 %88, %68
  %90 = xor i32 %89, %70
  %91 = lshr i32 %80, 16
  %92 = and i32 %91, 255
  %93 = zext i32 %92 to i64
  %94 = icmp eq i32 %92, 0
  %95 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %93
  %96 = load i32, i32* %95, align 4
  %select.phi.9 = select i1 %94, i32 -1513725085, i32 %96
  %97 = xor i32 %select.phi.9, %select.phi.
  %98 = lshr i32 %85, 8
  %99 = and i32 %98, 255
  %100 = zext i32 %99 to i64
  %101 = icmp eq i32 %99, 0
  %102 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %100
  %103 = load i32, i32* %102, align 4
  %select.phi.14 = select i1 %101, i32 1671808611, i32 %103
  %104 = xor i32 %97, %select.phi.14
  %105 = and i32 %90, 255
  %106 = zext i32 %105 to i64
  %107 = icmp eq i32 %105, 0
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %106
  %109 = load i32, i32* %108, align 4
  %select.phi.369 = select i1 %107, i32 1667474886, i32 %109
  %110 = xor i32 %104, %select.phi.369
  %111 = getelementptr inbounds i32, i32* %0, i64 4
  %112 = load i32, i32* %111, align 4
  %113 = xor i32 %110, %112
  %114 = lshr i32 %80, 24
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = lshr i32 %85, 16
  %119 = and i32 %118, 255
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = xor i32 %122, %117
  %124 = lshr i32 %90, 8
  %125 = and i32 %124, 255
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = xor i32 %123, %128
  %130 = and i32 %22, 255
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = xor i32 %129, %133
  %135 = getelementptr inbounds i32, i32* %0, i64 5
  %136 = load i32, i32* %135, align 4
  %137 = xor i32 %134, %136
  %138 = lshr i32 %85, 24
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = lshr i32 %90, 16
  %143 = and i32 %142, 255
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = xor i32 %146, %141
  %148 = lshr i32 %22, 8
  %149 = and i32 %148, 255
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = xor i32 %147, %152
  %154 = and i32 %80, 255
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = xor i32 %153, %157
  %159 = getelementptr inbounds i32, i32* %0, i64 6
  %160 = load i32, i32* %159, align 4
  %161 = xor i32 %158, %160
  %162 = lshr i32 %90, 24
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = lshr i32 %22, 16
  %167 = and i32 %166, 255
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %168
  %170 = load i32, i32* %169, align 4
  %171 = xor i32 %170, %165
  %172 = lshr i32 %80, 8
  %173 = and i32 %172, 255
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = xor i32 %171, %176
  %178 = and i32 %85, 255
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = xor i32 %177, %181
  %183 = getelementptr inbounds i32, i32* %0, i64 7
  %184 = load i32, i32* %183, align 4
  %185 = xor i32 %182, %184
  %186 = lshr i32 %113, 24
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = lshr i32 %137, 16
  %191 = and i32 %190, 255
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = xor i32 %194, %189
  %196 = lshr i32 %161, 8
  %197 = and i32 %196, 255
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = xor i32 %195, %200
  %202 = and i32 %185, 255
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = xor i32 %201, %205
  %207 = getelementptr inbounds i32, i32* %0, i64 8
  %208 = load i32, i32* %207, align 4
  %209 = xor i32 %206, %208
  %210 = lshr i32 %137, 24
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = lshr i32 %161, 16
  %215 = and i32 %214, 255
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = xor i32 %218, %213
  %220 = lshr i32 %185, 8
  %221 = and i32 %220, 255
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = xor i32 %219, %224
  %226 = and i32 %113, 255
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = xor i32 %225, %229
  %231 = getelementptr inbounds i32, i32* %0, i64 9
  %232 = load i32, i32* %231, align 4
  %233 = xor i32 %230, %232
  %234 = lshr i32 %161, 24
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = lshr i32 %185, 16
  %239 = and i32 %238, 255
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %240
  %242 = load i32, i32* %241, align 4
  %243 = xor i32 %242, %237
  %244 = lshr i32 %113, 8
  %245 = and i32 %244, 255
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = xor i32 %243, %248
  %250 = and i32 %137, 255
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = xor i32 %249, %253
  %255 = getelementptr inbounds i32, i32* %0, i64 10
  %256 = load i32, i32* %255, align 4
  %257 = xor i32 %254, %256
  %258 = lshr i32 %185, 24
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %259
  %261 = load i32, i32* %260, align 4
  %262 = lshr i32 %113, 16
  %263 = and i32 %262, 255
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %264
  %266 = load i32, i32* %265, align 4
  %267 = xor i32 %266, %261
  %268 = lshr i32 %137, 8
  %269 = and i32 %268, 255
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = xor i32 %267, %272
  %274 = and i32 %161, 255
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = xor i32 %273, %277
  %279 = getelementptr inbounds i32, i32* %0, i64 11
  %280 = load i32, i32* %279, align 4
  %281 = xor i32 %278, %280
  %282 = lshr i32 %209, 24
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %283
  %285 = load i32, i32* %284, align 4
  %286 = lshr i32 %233, 16
  %287 = and i32 %286, 255
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %288
  %290 = load i32, i32* %289, align 4
  %291 = xor i32 %290, %285
  %292 = lshr i32 %257, 8
  %293 = and i32 %292, 255
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = xor i32 %291, %296
  %298 = and i32 %281, 255
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = xor i32 %297, %301
  %303 = getelementptr inbounds i32, i32* %0, i64 12
  %304 = load i32, i32* %303, align 4
  %305 = xor i32 %302, %304
  %306 = lshr i32 %233, 24
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %307
  %309 = load i32, i32* %308, align 4
  %310 = lshr i32 %257, 16
  %311 = and i32 %310, 255
  %312 = zext i32 %311 to i64
  %313 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = xor i32 %314, %309
  %316 = lshr i32 %281, 8
  %317 = and i32 %316, 255
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %318
  %320 = load i32, i32* %319, align 4
  %321 = xor i32 %315, %320
  %322 = and i32 %209, 255
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = xor i32 %321, %325
  %327 = getelementptr inbounds i32, i32* %0, i64 13
  %328 = load i32, i32* %327, align 4
  %329 = xor i32 %326, %328
  %330 = lshr i32 %257, 24
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %331
  %333 = load i32, i32* %332, align 4
  %334 = lshr i32 %281, 16
  %335 = and i32 %334, 255
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %336
  %338 = load i32, i32* %337, align 4
  %339 = xor i32 %338, %333
  %340 = lshr i32 %209, 8
  %341 = and i32 %340, 255
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = xor i32 %339, %344
  %346 = and i32 %233, 255
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = xor i32 %345, %349
  %351 = getelementptr inbounds i32, i32* %0, i64 14
  %352 = load i32, i32* %351, align 4
  %353 = xor i32 %350, %352
  %354 = lshr i32 %281, 24
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %355
  %357 = load i32, i32* %356, align 4
  %358 = lshr i32 %209, 16
  %359 = and i32 %358, 255
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %360
  %362 = load i32, i32* %361, align 4
  %363 = xor i32 %362, %357
  %364 = lshr i32 %233, 8
  %365 = and i32 %364, 255
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %366
  %368 = load i32, i32* %367, align 4
  %369 = xor i32 %363, %368
  %370 = and i32 %257, 255
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = xor i32 %369, %373
  %375 = getelementptr inbounds i32, i32* %0, i64 15
  %376 = load i32, i32* %375, align 4
  %377 = xor i32 %374, %376
  %378 = lshr i32 %305, 24
  %379 = zext i32 %378 to i64
  %380 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %379
  %381 = load i32, i32* %380, align 4
  %382 = lshr i32 %329, 16
  %383 = and i32 %382, 255
  %384 = zext i32 %383 to i64
  %385 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %384
  %386 = load i32, i32* %385, align 4
  %387 = xor i32 %386, %381
  %388 = lshr i32 %353, 8
  %389 = and i32 %388, 255
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %390
  %392 = load i32, i32* %391, align 4
  %393 = xor i32 %387, %392
  %394 = and i32 %377, 255
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %395
  %397 = load i32, i32* %396, align 4
  %398 = xor i32 %393, %397
  %399 = getelementptr inbounds i32, i32* %0, i64 16
  %400 = load i32, i32* %399, align 4
  %401 = xor i32 %398, %400
  %402 = lshr i32 %329, 24
  %403 = zext i32 %402 to i64
  %404 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %403
  %405 = load i32, i32* %404, align 4
  %406 = lshr i32 %353, 16
  %407 = and i32 %406, 255
  %408 = zext i32 %407 to i64
  %409 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %408
  %410 = load i32, i32* %409, align 4
  %411 = xor i32 %410, %405
  %412 = lshr i32 %377, 8
  %413 = and i32 %412, 255
  %414 = zext i32 %413 to i64
  %415 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %414
  %416 = load i32, i32* %415, align 4
  %417 = xor i32 %411, %416
  %418 = and i32 %305, 255
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %419
  %421 = load i32, i32* %420, align 4
  %422 = xor i32 %417, %421
  %423 = getelementptr inbounds i32, i32* %0, i64 17
  %424 = load i32, i32* %423, align 4
  %425 = xor i32 %422, %424
  %426 = lshr i32 %353, 24
  %427 = zext i32 %426 to i64
  %428 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %427
  %429 = load i32, i32* %428, align 4
  %430 = lshr i32 %377, 16
  %431 = and i32 %430, 255
  %432 = zext i32 %431 to i64
  %433 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %432
  %434 = load i32, i32* %433, align 4
  %435 = xor i32 %434, %429
  %436 = lshr i32 %305, 8
  %437 = and i32 %436, 255
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %438
  %440 = load i32, i32* %439, align 4
  %441 = xor i32 %435, %440
  %442 = and i32 %329, 255
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %443
  %445 = load i32, i32* %444, align 4
  %446 = xor i32 %441, %445
  %447 = getelementptr inbounds i32, i32* %0, i64 18
  %448 = load i32, i32* %447, align 4
  %449 = xor i32 %446, %448
  %450 = lshr i32 %377, 24
  %451 = zext i32 %450 to i64
  %452 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %451
  %453 = load i32, i32* %452, align 4
  %454 = lshr i32 %305, 16
  %455 = and i32 %454, 255
  %456 = zext i32 %455 to i64
  %457 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %456
  %458 = load i32, i32* %457, align 4
  %459 = xor i32 %458, %453
  %460 = lshr i32 %329, 8
  %461 = and i32 %460, 255
  %462 = zext i32 %461 to i64
  %463 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %462
  %464 = load i32, i32* %463, align 4
  %465 = xor i32 %459, %464
  %466 = and i32 %353, 255
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %467
  %469 = load i32, i32* %468, align 4
  %470 = xor i32 %465, %469
  %471 = getelementptr inbounds i32, i32* %0, i64 19
  %472 = load i32, i32* %471, align 4
  %473 = xor i32 %470, %472
  %474 = lshr i32 %401, 24
  %475 = zext i32 %474 to i64
  %476 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %475
  %477 = load i32, i32* %476, align 4
  %478 = lshr i32 %425, 16
  %479 = and i32 %478, 255
  %480 = zext i32 %479 to i64
  %481 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = xor i32 %482, %477
  %484 = lshr i32 %449, 8
  %485 = and i32 %484, 255
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = xor i32 %483, %488
  %490 = and i32 %473, 255
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %491
  %493 = load i32, i32* %492, align 4
  %494 = xor i32 %489, %493
  %495 = getelementptr inbounds i32, i32* %0, i64 20
  %496 = load i32, i32* %495, align 4
  %497 = xor i32 %494, %496
  %498 = lshr i32 %425, 24
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %499
  %501 = load i32, i32* %500, align 4
  %502 = lshr i32 %449, 16
  %503 = and i32 %502, 255
  %504 = zext i32 %503 to i64
  %505 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %504
  %506 = load i32, i32* %505, align 4
  %507 = xor i32 %506, %501
  %508 = lshr i32 %473, 8
  %509 = and i32 %508, 255
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %510
  %512 = load i32, i32* %511, align 4
  %513 = xor i32 %507, %512
  %514 = and i32 %401, 255
  %515 = zext i32 %514 to i64
  %516 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %515
  %517 = load i32, i32* %516, align 4
  %518 = xor i32 %513, %517
  %519 = getelementptr inbounds i32, i32* %0, i64 21
  %520 = load i32, i32* %519, align 4
  %521 = xor i32 %518, %520
  %522 = lshr i32 %449, 24
  %523 = zext i32 %522 to i64
  %524 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %523
  %525 = load i32, i32* %524, align 4
  %526 = lshr i32 %473, 16
  %527 = and i32 %526, 255
  %528 = zext i32 %527 to i64
  %529 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %528
  %530 = load i32, i32* %529, align 4
  %531 = xor i32 %530, %525
  %532 = lshr i32 %401, 8
  %533 = and i32 %532, 255
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = xor i32 %531, %536
  %538 = and i32 %425, 255
  %539 = zext i32 %538 to i64
  %540 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = xor i32 %537, %541
  %543 = getelementptr inbounds i32, i32* %0, i64 22
  %544 = load i32, i32* %543, align 4
  %545 = xor i32 %542, %544
  %546 = lshr i32 %473, 24
  %547 = zext i32 %546 to i64
  %548 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %547
  %549 = load i32, i32* %548, align 4
  %550 = lshr i32 %401, 16
  %551 = and i32 %550, 255
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %552
  %554 = load i32, i32* %553, align 4
  %555 = xor i32 %554, %549
  %556 = lshr i32 %425, 8
  %557 = and i32 %556, 255
  %558 = zext i32 %557 to i64
  %559 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = xor i32 %555, %560
  %562 = and i32 %449, 255
  %563 = zext i32 %562 to i64
  %564 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %563
  %565 = load i32, i32* %564, align 4
  %566 = xor i32 %561, %565
  %567 = getelementptr inbounds i32, i32* %0, i64 23
  %568 = load i32, i32* %567, align 4
  %569 = xor i32 %566, %568
  %570 = lshr i32 %497, 24
  %571 = zext i32 %570 to i64
  %572 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %571
  %573 = load i32, i32* %572, align 4
  %574 = lshr i32 %521, 16
  %575 = and i32 %574, 255
  %576 = zext i32 %575 to i64
  %577 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %576
  %578 = load i32, i32* %577, align 4
  %579 = xor i32 %578, %573
  %580 = lshr i32 %545, 8
  %581 = and i32 %580, 255
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %582
  %584 = load i32, i32* %583, align 4
  %585 = xor i32 %579, %584
  %586 = and i32 %569, 255
  %587 = zext i32 %586 to i64
  %588 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %587
  %589 = load i32, i32* %588, align 4
  %590 = xor i32 %585, %589
  %591 = getelementptr inbounds i32, i32* %0, i64 24
  %592 = load i32, i32* %591, align 4
  %593 = xor i32 %590, %592
  %594 = lshr i32 %521, 24
  %595 = zext i32 %594 to i64
  %596 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %595
  %597 = load i32, i32* %596, align 4
  %598 = lshr i32 %545, 16
  %599 = and i32 %598, 255
  %600 = zext i32 %599 to i64
  %601 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %600
  %602 = load i32, i32* %601, align 4
  %603 = xor i32 %602, %597
  %604 = lshr i32 %569, 8
  %605 = and i32 %604, 255
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %606
  %608 = load i32, i32* %607, align 4
  %609 = xor i32 %603, %608
  %610 = and i32 %497, 255
  %611 = zext i32 %610 to i64
  %612 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %611
  %613 = load i32, i32* %612, align 4
  %614 = xor i32 %609, %613
  %615 = getelementptr inbounds i32, i32* %0, i64 25
  %616 = load i32, i32* %615, align 4
  %617 = xor i32 %614, %616
  %618 = lshr i32 %545, 24
  %619 = zext i32 %618 to i64
  %620 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %619
  %621 = load i32, i32* %620, align 4
  %622 = lshr i32 %569, 16
  %623 = and i32 %622, 255
  %624 = zext i32 %623 to i64
  %625 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %624
  %626 = load i32, i32* %625, align 4
  %627 = xor i32 %626, %621
  %628 = lshr i32 %497, 8
  %629 = and i32 %628, 255
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %630
  %632 = load i32, i32* %631, align 4
  %633 = xor i32 %627, %632
  %634 = and i32 %521, 255
  %635 = zext i32 %634 to i64
  %636 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %635
  %637 = load i32, i32* %636, align 4
  %638 = xor i32 %633, %637
  %639 = getelementptr inbounds i32, i32* %0, i64 26
  %640 = load i32, i32* %639, align 4
  %641 = xor i32 %638, %640
  %642 = lshr i32 %569, 24
  %643 = zext i32 %642 to i64
  %644 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %643
  %645 = load i32, i32* %644, align 4
  %646 = lshr i32 %497, 16
  %647 = and i32 %646, 255
  %648 = zext i32 %647 to i64
  %649 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %648
  %650 = load i32, i32* %649, align 4
  %651 = xor i32 %650, %645
  %652 = lshr i32 %521, 8
  %653 = and i32 %652, 255
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %654
  %656 = load i32, i32* %655, align 4
  %657 = xor i32 %651, %656
  %658 = and i32 %545, 255
  %659 = zext i32 %658 to i64
  %660 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %659
  %661 = load i32, i32* %660, align 4
  %662 = xor i32 %657, %661
  %663 = getelementptr inbounds i32, i32* %0, i64 27
  %664 = load i32, i32* %663, align 4
  %665 = xor i32 %662, %664
  %666 = lshr i32 %593, 24
  %667 = zext i32 %666 to i64
  %668 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %667
  %669 = load i32, i32* %668, align 4
  %670 = lshr i32 %617, 16
  %671 = and i32 %670, 255
  %672 = zext i32 %671 to i64
  %673 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %672
  %674 = load i32, i32* %673, align 4
  %675 = xor i32 %674, %669
  %676 = lshr i32 %641, 8
  %677 = and i32 %676, 255
  %678 = zext i32 %677 to i64
  %679 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %678
  %680 = load i32, i32* %679, align 4
  %681 = xor i32 %675, %680
  %682 = and i32 %665, 255
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %683
  %685 = load i32, i32* %684, align 4
  %686 = xor i32 %681, %685
  %687 = getelementptr inbounds i32, i32* %0, i64 28
  %688 = load i32, i32* %687, align 4
  %689 = xor i32 %686, %688
  %690 = lshr i32 %617, 24
  %691 = zext i32 %690 to i64
  %692 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %691
  %693 = load i32, i32* %692, align 4
  %694 = lshr i32 %641, 16
  %695 = and i32 %694, 255
  %696 = zext i32 %695 to i64
  %697 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %696
  %698 = load i32, i32* %697, align 4
  %699 = xor i32 %698, %693
  %700 = lshr i32 %665, 8
  %701 = and i32 %700, 255
  %702 = zext i32 %701 to i64
  %703 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %702
  %704 = load i32, i32* %703, align 4
  %705 = xor i32 %699, %704
  %706 = and i32 %593, 255
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %707
  %709 = load i32, i32* %708, align 4
  %710 = xor i32 %705, %709
  %711 = getelementptr inbounds i32, i32* %0, i64 29
  %712 = load i32, i32* %711, align 4
  %713 = xor i32 %710, %712
  %714 = lshr i32 %641, 24
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %715
  %717 = load i32, i32* %716, align 4
  %718 = lshr i32 %665, 16
  %719 = and i32 %718, 255
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %720
  %722 = load i32, i32* %721, align 4
  %723 = xor i32 %722, %717
  %724 = lshr i32 %593, 8
  %725 = and i32 %724, 255
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %726
  %728 = load i32, i32* %727, align 4
  %729 = xor i32 %723, %728
  %730 = and i32 %617, 255
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %731
  %733 = load i32, i32* %732, align 4
  %734 = xor i32 %729, %733
  %735 = getelementptr inbounds i32, i32* %0, i64 30
  %736 = load i32, i32* %735, align 4
  %737 = xor i32 %734, %736
  %738 = lshr i32 %665, 24
  %739 = zext i32 %738 to i64
  %740 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %739
  %741 = load i32, i32* %740, align 4
  %742 = lshr i32 %593, 16
  %743 = and i32 %742, 255
  %744 = zext i32 %743 to i64
  %745 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %744
  %746 = load i32, i32* %745, align 4
  %747 = xor i32 %746, %741
  %748 = lshr i32 %617, 8
  %749 = and i32 %748, 255
  %750 = zext i32 %749 to i64
  %751 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %750
  %752 = load i32, i32* %751, align 4
  %753 = xor i32 %747, %752
  %754 = and i32 %641, 255
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %755
  %757 = load i32, i32* %756, align 4
  %758 = xor i32 %753, %757
  %759 = getelementptr inbounds i32, i32* %0, i64 31
  %760 = load i32, i32* %759, align 4
  %761 = xor i32 %758, %760
  %762 = lshr i32 %689, 24
  %763 = zext i32 %762 to i64
  %764 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %763
  %765 = load i32, i32* %764, align 4
  %766 = lshr i32 %713, 16
  %767 = and i32 %766, 255
  %768 = zext i32 %767 to i64
  %769 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %768
  %770 = load i32, i32* %769, align 4
  %771 = xor i32 %770, %765
  %772 = lshr i32 %737, 8
  %773 = and i32 %772, 255
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %774
  %776 = load i32, i32* %775, align 4
  %777 = xor i32 %771, %776
  %778 = and i32 %761, 255
  %779 = zext i32 %778 to i64
  %780 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %779
  %781 = load i32, i32* %780, align 4
  %782 = xor i32 %777, %781
  %783 = getelementptr inbounds i32, i32* %0, i64 32
  %784 = load i32, i32* %783, align 4
  %785 = xor i32 %782, %784
  %786 = lshr i32 %713, 24
  %787 = zext i32 %786 to i64
  %788 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %787
  %789 = load i32, i32* %788, align 4
  %790 = lshr i32 %737, 16
  %791 = and i32 %790, 255
  %792 = zext i32 %791 to i64
  %793 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %792
  %794 = load i32, i32* %793, align 4
  %795 = xor i32 %794, %789
  %796 = lshr i32 %761, 8
  %797 = and i32 %796, 255
  %798 = zext i32 %797 to i64
  %799 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %798
  %800 = load i32, i32* %799, align 4
  %801 = xor i32 %795, %800
  %802 = and i32 %689, 255
  %803 = zext i32 %802 to i64
  %804 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %803
  %805 = load i32, i32* %804, align 4
  %806 = xor i32 %801, %805
  %807 = getelementptr inbounds i32, i32* %0, i64 33
  %808 = load i32, i32* %807, align 4
  %809 = xor i32 %806, %808
  %810 = lshr i32 %737, 24
  %811 = zext i32 %810 to i64
  %812 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %811
  %813 = load i32, i32* %812, align 4
  %814 = lshr i32 %761, 16
  %815 = and i32 %814, 255
  %816 = zext i32 %815 to i64
  %817 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %816
  %818 = load i32, i32* %817, align 4
  %819 = xor i32 %818, %813
  %820 = lshr i32 %689, 8
  %821 = and i32 %820, 255
  %822 = zext i32 %821 to i64
  %823 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %822
  %824 = load i32, i32* %823, align 4
  %825 = xor i32 %819, %824
  %826 = and i32 %713, 255
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %827
  %829 = load i32, i32* %828, align 4
  %830 = xor i32 %825, %829
  %831 = getelementptr inbounds i32, i32* %0, i64 34
  %832 = load i32, i32* %831, align 4
  %833 = xor i32 %830, %832
  %834 = lshr i32 %761, 24
  %835 = zext i32 %834 to i64
  %836 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %835
  %837 = load i32, i32* %836, align 4
  %838 = lshr i32 %689, 16
  %839 = and i32 %838, 255
  %840 = zext i32 %839 to i64
  %841 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %840
  %842 = load i32, i32* %841, align 4
  %843 = xor i32 %842, %837
  %844 = lshr i32 %713, 8
  %845 = and i32 %844, 255
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %846
  %848 = load i32, i32* %847, align 4
  %849 = xor i32 %843, %848
  %850 = and i32 %737, 255
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %851
  %853 = load i32, i32* %852, align 4
  %854 = xor i32 %849, %853
  %855 = getelementptr inbounds i32, i32* %0, i64 35
  %856 = load i32, i32* %855, align 4
  %857 = xor i32 %854, %856
  %858 = lshr i32 %785, 24
  %859 = zext i32 %858 to i64
  %860 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %859
  %861 = load i32, i32* %860, align 4
  %862 = lshr i32 %809, 16
  %863 = and i32 %862, 255
  %864 = zext i32 %863 to i64
  %865 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %864
  %866 = load i32, i32* %865, align 4
  %867 = xor i32 %866, %861
  %868 = lshr i32 %833, 8
  %869 = and i32 %868, 255
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %870
  %872 = load i32, i32* %871, align 4
  %873 = xor i32 %867, %872
  %874 = and i32 %857, 255
  %875 = zext i32 %874 to i64
  %876 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %875
  %877 = load i32, i32* %876, align 4
  %878 = xor i32 %873, %877
  %879 = getelementptr inbounds i32, i32* %0, i64 36
  %880 = load i32, i32* %879, align 4
  %881 = xor i32 %878, %880
  %882 = lshr i32 %809, 24
  %883 = zext i32 %882 to i64
  %884 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %883
  %885 = load i32, i32* %884, align 4
  %886 = lshr i32 %833, 16
  %887 = and i32 %886, 255
  %888 = zext i32 %887 to i64
  %889 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %888
  %890 = load i32, i32* %889, align 4
  %891 = xor i32 %890, %885
  %892 = lshr i32 %857, 8
  %893 = and i32 %892, 255
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %894
  %896 = load i32, i32* %895, align 4
  %897 = xor i32 %891, %896
  %898 = and i32 %785, 255
  %899 = zext i32 %898 to i64
  %900 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %899
  %901 = load i32, i32* %900, align 4
  %902 = xor i32 %897, %901
  %903 = getelementptr inbounds i32, i32* %0, i64 37
  %904 = load i32, i32* %903, align 4
  %905 = xor i32 %902, %904
  %906 = lshr i32 %833, 24
  %907 = zext i32 %906 to i64
  %908 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %907
  %909 = load i32, i32* %908, align 4
  %910 = lshr i32 %857, 16
  %911 = and i32 %910, 255
  %912 = zext i32 %911 to i64
  %913 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %912
  %914 = load i32, i32* %913, align 4
  %915 = xor i32 %914, %909
  %916 = lshr i32 %785, 8
  %917 = and i32 %916, 255
  %918 = zext i32 %917 to i64
  %919 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %918
  %920 = load i32, i32* %919, align 4
  %921 = xor i32 %915, %920
  %922 = and i32 %809, 255
  %923 = zext i32 %922 to i64
  %924 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %923
  %925 = load i32, i32* %924, align 4
  %926 = xor i32 %921, %925
  %927 = getelementptr inbounds i32, i32* %0, i64 38
  %928 = load i32, i32* %927, align 4
  %929 = xor i32 %926, %928
  %930 = lshr i32 %857, 24
  %931 = zext i32 %930 to i64
  %932 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %931
  %933 = load i32, i32* %932, align 4
  %934 = lshr i32 %785, 16
  %935 = and i32 %934, 255
  %936 = zext i32 %935 to i64
  %937 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %936
  %938 = load i32, i32* %937, align 4
  %939 = xor i32 %938, %933
  %940 = lshr i32 %809, 8
  %941 = and i32 %940, 255
  %942 = zext i32 %941 to i64
  %943 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %942
  %944 = load i32, i32* %943, align 4
  %945 = xor i32 %939, %944
  %946 = and i32 %833, 255
  %947 = zext i32 %946 to i64
  %948 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %947
  %949 = load i32, i32* %948, align 4
  %950 = xor i32 %945, %949
  %951 = getelementptr inbounds i32, i32* %0, i64 39
  %952 = load i32, i32* %951, align 4
  %953 = xor i32 %950, %952
  %954 = icmp sgt i32 %1, 10
  %955 = lshr i32 %881, 24
  %956 = zext i32 %955 to i64
  %957 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %956
  %958 = load i32, i32* %957, align 4
  %959 = lshr i32 %905, 16
  %960 = and i32 %959, 255
  %961 = zext i32 %960 to i64
  %962 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %961
  %963 = load i32, i32* %962, align 4
  %964 = xor i32 %963, %958
  %965 = lshr i32 %929, 8
  %966 = and i32 %965, 255
  %967 = zext i32 %966 to i64
  %968 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %967
  %969 = load i32, i32* %968, align 4
  %970 = xor i32 %964, %969
  %971 = and i32 %953, 255
  %972 = zext i32 %971 to i64
  %973 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %972
  %974 = load i32, i32* %973, align 4
  %975 = xor i32 %970, %974
  %976 = getelementptr inbounds i32, i32* %0, i64 40
  %977 = icmp sgt i64 %N, 40
  %safe.378 = or i1 %977, %954
  %select.ptr.379 = select i1 %safe.378, i32* %976, i32* %shadow.sroa.0
  %978 = load i32, i32* %select.ptr.379, align 4
  %979 = xor i32 %975, %978
  %980 = lshr i32 %905, 24
  %981 = zext i32 %980 to i64
  %982 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %981
  %983 = load i32, i32* %982, align 4
  %984 = lshr i32 %929, 16
  %985 = and i32 %984, 255
  %986 = zext i32 %985 to i64
  %987 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %986
  %988 = load i32, i32* %987, align 4
  %989 = xor i32 %988, %983
  %990 = lshr i32 %953, 8
  %991 = and i32 %990, 255
  %992 = zext i32 %991 to i64
  %993 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %992
  %994 = load i32, i32* %993, align 4
  %995 = xor i32 %989, %994
  %996 = and i32 %881, 255
  %997 = zext i32 %996 to i64
  %998 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %997
  %999 = load i32, i32* %998, align 4
  %1000 = xor i32 %995, %999
  %1001 = getelementptr inbounds i32, i32* %0, i64 41
  %1002 = icmp sgt i64 %N, 41
  %safe.388 = or i1 %1002, %954
  %select.ptr.389 = select i1 %safe.388, i32* %1001, i32* %shadow.sroa.0
  %1003 = load i32, i32* %select.ptr.389, align 4
  %1004 = xor i32 %1000, %1003
  %1005 = lshr i32 %929, 24
  %1006 = zext i32 %1005 to i64
  %1007 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1006
  %1008 = load i32, i32* %1007, align 4
  %1009 = lshr i32 %953, 16
  %1010 = and i32 %1009, 255
  %1011 = zext i32 %1010 to i64
  %1012 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1011
  %1013 = load i32, i32* %1012, align 4
  %1014 = xor i32 %1013, %1008
  %1015 = lshr i32 %881, 8
  %1016 = and i32 %1015, 255
  %1017 = zext i32 %1016 to i64
  %1018 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1017
  %1019 = load i32, i32* %1018, align 4
  %1020 = xor i32 %1014, %1019
  %1021 = and i32 %905, 255
  %1022 = zext i32 %1021 to i64
  %1023 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1022
  %1024 = load i32, i32* %1023, align 4
  %1025 = xor i32 %1020, %1024
  %1026 = getelementptr inbounds i32, i32* %0, i64 42
  %1027 = icmp sgt i64 %N, 42
  %safe.398 = or i1 %1027, %954
  %select.ptr.399 = select i1 %safe.398, i32* %1026, i32* %shadow.sroa.0
  %1028 = load i32, i32* %select.ptr.399, align 4
  %1029 = xor i32 %1025, %1028
  %1030 = lshr i32 %953, 24
  %1031 = zext i32 %1030 to i64
  %1032 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1031
  %1033 = load i32, i32* %1032, align 4
  %1034 = lshr i32 %881, 16
  %1035 = and i32 %1034, 255
  %1036 = zext i32 %1035 to i64
  %1037 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1036
  %1038 = load i32, i32* %1037, align 4
  %1039 = xor i32 %1038, %1033
  %1040 = lshr i32 %905, 8
  %1041 = and i32 %1040, 255
  %1042 = zext i32 %1041 to i64
  %1043 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1042
  %1044 = load i32, i32* %1043, align 4
  %1045 = xor i32 %1039, %1044
  %1046 = and i32 %929, 255
  %1047 = zext i32 %1046 to i64
  %1048 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1047
  %1049 = load i32, i32* %1048, align 4
  %1050 = xor i32 %1045, %1049
  %1051 = getelementptr inbounds i32, i32* %0, i64 43
  %1052 = icmp sgt i64 %N, 43
  %safe.408 = or i1 %1052, %954
  %select.ptr.409 = select i1 %safe.408, i32* %1051, i32* %shadow.sroa.0
  %1053 = load i32, i32* %select.ptr.409, align 4
  %1054 = xor i32 %1050, %1053
  %1055 = lshr i32 %979, 24
  %1056 = zext i32 %1055 to i64
  %1057 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1056
  %1058 = load i32, i32* %1057, align 4
  %1059 = lshr i32 %1004, 16
  %1060 = and i32 %1059, 255
  %1061 = zext i32 %1060 to i64
  %1062 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1061
  %1063 = load i32, i32* %1062, align 4
  %1064 = xor i32 %1063, %1058
  %1065 = lshr i32 %1029, 8
  %1066 = and i32 %1065, 255
  %1067 = zext i32 %1066 to i64
  %1068 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1067
  %1069 = load i32, i32* %1068, align 4
  %1070 = xor i32 %1064, %1069
  %1071 = and i32 %1054, 255
  %1072 = zext i32 %1071 to i64
  %1073 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1072
  %1074 = load i32, i32* %1073, align 4
  %1075 = xor i32 %1070, %1074
  %1076 = getelementptr inbounds i32, i32* %0, i64 44
  %1077 = icmp sgt i64 %N, 44
  %safe.418 = or i1 %1077, %954
  %select.ptr.419 = select i1 %safe.418, i32* %1076, i32* %shadow.sroa.0
  %1078 = load i32, i32* %select.ptr.419, align 4
  %1079 = xor i32 %1075, %1078
  %1080 = lshr i32 %1004, 24
  %1081 = zext i32 %1080 to i64
  %1082 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1081
  %1083 = load i32, i32* %1082, align 4
  %1084 = lshr i32 %1029, 16
  %1085 = and i32 %1084, 255
  %1086 = zext i32 %1085 to i64
  %1087 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1086
  %1088 = load i32, i32* %1087, align 4
  %1089 = xor i32 %1088, %1083
  %1090 = lshr i32 %1054, 8
  %1091 = and i32 %1090, 255
  %1092 = zext i32 %1091 to i64
  %1093 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1092
  %1094 = load i32, i32* %1093, align 4
  %1095 = xor i32 %1089, %1094
  %1096 = and i32 %979, 255
  %1097 = zext i32 %1096 to i64
  %1098 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1097
  %1099 = load i32, i32* %1098, align 4
  %1100 = xor i32 %1095, %1099
  %1101 = getelementptr inbounds i32, i32* %0, i64 45
  %1102 = icmp sgt i64 %N, 45
  %safe.428 = or i1 %1102, %954
  %select.ptr.429 = select i1 %safe.428, i32* %1101, i32* %shadow.sroa.0
  %1103 = load i32, i32* %select.ptr.429, align 4
  %1104 = xor i32 %1100, %1103
  %1105 = lshr i32 %1029, 24
  %1106 = zext i32 %1105 to i64
  %1107 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1106
  %1108 = load i32, i32* %1107, align 4
  %1109 = lshr i32 %1054, 16
  %1110 = and i32 %1109, 255
  %1111 = zext i32 %1110 to i64
  %1112 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1111
  %1113 = load i32, i32* %1112, align 4
  %1114 = xor i32 %1113, %1108
  %1115 = lshr i32 %979, 8
  %1116 = and i32 %1115, 255
  %1117 = zext i32 %1116 to i64
  %1118 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1117
  %1119 = load i32, i32* %1118, align 4
  %1120 = xor i32 %1114, %1119
  %1121 = and i32 %1004, 255
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1122
  %1124 = load i32, i32* %1123, align 4
  %1125 = xor i32 %1120, %1124
  %1126 = getelementptr inbounds i32, i32* %0, i64 46
  %1127 = icmp sgt i64 %N, 46
  %safe.438 = or i1 %1127, %954
  %select.ptr.439 = select i1 %safe.438, i32* %1126, i32* %shadow.sroa.0
  %1128 = load i32, i32* %select.ptr.439, align 4
  %1129 = xor i32 %1125, %1128
  %1130 = lshr i32 %1054, 24
  %1131 = zext i32 %1130 to i64
  %1132 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1131
  %1133 = load i32, i32* %1132, align 4
  %1134 = lshr i32 %979, 16
  %1135 = and i32 %1134, 255
  %1136 = zext i32 %1135 to i64
  %1137 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1136
  %1138 = load i32, i32* %1137, align 4
  %1139 = xor i32 %1138, %1133
  %1140 = lshr i32 %1004, 8
  %1141 = and i32 %1140, 255
  %1142 = zext i32 %1141 to i64
  %1143 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1142
  %1144 = load i32, i32* %1143, align 4
  %1145 = xor i32 %1139, %1144
  %1146 = and i32 %1029, 255
  %1147 = zext i32 %1146 to i64
  %1148 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1147
  %1149 = load i32, i32* %1148, align 4
  %1150 = xor i32 %1145, %1149
  %1151 = getelementptr inbounds i32, i32* %0, i64 47
  %1152 = icmp sgt i64 %N, 47
  %safe.448 = or i1 %1152, %954
  %select.ptr.449 = select i1 %safe.448, i32* %1151, i32* %shadow.sroa.0
  %1153 = load i32, i32* %select.ptr.449, align 4
  %1154 = xor i32 %1150, %1153
  %1155 = icmp sgt i32 %1, 12
  %1156 = lshr i32 %1079, 24
  %1157 = zext i32 %1156 to i64
  %1158 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1157
  %1159 = load i32, i32* %1158, align 4
  %1160 = lshr i32 %1104, 16
  %1161 = and i32 %1160, 255
  %1162 = zext i32 %1161 to i64
  %1163 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1162
  %1164 = load i32, i32* %1163, align 4
  %1165 = xor i32 %1164, %1159
  %1166 = lshr i32 %1129, 8
  %1167 = and i32 %1166, 255
  %1168 = zext i32 %1167 to i64
  %1169 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1168
  %1170 = load i32, i32* %1169, align 4
  %1171 = xor i32 %1165, %1170
  %1172 = and i32 %1154, 255
  %1173 = zext i32 %1172 to i64
  %1174 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1173
  %1175 = load i32, i32* %1174, align 4
  %1176 = xor i32 %1171, %1175
  %1177 = getelementptr inbounds i32, i32* %0, i64 48
  %1178 = icmp sgt i64 %N, 48
  %safe.458 = or i1 %1178, %1155
  %select.ptr.459 = select i1 %safe.458, i32* %1177, i32* %shadow.sroa.0
  %1179 = load i32, i32* %select.ptr.459, align 4
  %1180 = xor i32 %1176, %1179
  %1181 = lshr i32 %1104, 24
  %1182 = zext i32 %1181 to i64
  %1183 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1182
  %1184 = load i32, i32* %1183, align 4
  %1185 = lshr i32 %1129, 16
  %1186 = and i32 %1185, 255
  %1187 = zext i32 %1186 to i64
  %1188 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1187
  %1189 = load i32, i32* %1188, align 4
  %1190 = xor i32 %1189, %1184
  %1191 = lshr i32 %1154, 8
  %1192 = and i32 %1191, 255
  %1193 = zext i32 %1192 to i64
  %1194 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1193
  %1195 = load i32, i32* %1194, align 4
  %1196 = xor i32 %1190, %1195
  %1197 = and i32 %1079, 255
  %1198 = zext i32 %1197 to i64
  %1199 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1198
  %1200 = load i32, i32* %1199, align 4
  %1201 = xor i32 %1196, %1200
  %1202 = getelementptr inbounds i32, i32* %0, i64 49
  %1203 = icmp sgt i64 %N, 49
  %safe.468 = or i1 %1203, %1155
  %select.ptr.469 = select i1 %safe.468, i32* %1202, i32* %shadow.sroa.0
  %1204 = load i32, i32* %select.ptr.469, align 4
  %1205 = xor i32 %1201, %1204
  %1206 = lshr i32 %1129, 24
  %1207 = zext i32 %1206 to i64
  %1208 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1207
  %1209 = load i32, i32* %1208, align 4
  %1210 = lshr i32 %1154, 16
  %1211 = and i32 %1210, 255
  %1212 = zext i32 %1211 to i64
  %1213 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1212
  %1214 = load i32, i32* %1213, align 4
  %1215 = xor i32 %1214, %1209
  %1216 = lshr i32 %1079, 8
  %1217 = and i32 %1216, 255
  %1218 = zext i32 %1217 to i64
  %1219 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1218
  %1220 = load i32, i32* %1219, align 4
  %1221 = xor i32 %1215, %1220
  %1222 = and i32 %1104, 255
  %1223 = zext i32 %1222 to i64
  %1224 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1223
  %1225 = load i32, i32* %1224, align 4
  %1226 = xor i32 %1221, %1225
  %1227 = getelementptr inbounds i32, i32* %0, i64 50
  %1228 = icmp sgt i64 %N, 50
  %safe.478 = or i1 %1228, %1155
  %select.ptr.479 = select i1 %safe.478, i32* %1227, i32* %shadow.sroa.0
  %1229 = load i32, i32* %select.ptr.479, align 4
  %1230 = xor i32 %1226, %1229
  %1231 = lshr i32 %1154, 24
  %1232 = zext i32 %1231 to i64
  %1233 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1232
  %1234 = load i32, i32* %1233, align 4
  %1235 = lshr i32 %1079, 16
  %1236 = and i32 %1235, 255
  %1237 = zext i32 %1236 to i64
  %1238 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1237
  %1239 = load i32, i32* %1238, align 4
  %1240 = xor i32 %1239, %1234
  %1241 = lshr i32 %1104, 8
  %1242 = and i32 %1241, 255
  %1243 = zext i32 %1242 to i64
  %1244 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1243
  %1245 = load i32, i32* %1244, align 4
  %1246 = xor i32 %1240, %1245
  %1247 = and i32 %1129, 255
  %1248 = zext i32 %1247 to i64
  %1249 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1248
  %1250 = load i32, i32* %1249, align 4
  %1251 = xor i32 %1246, %1250
  %1252 = getelementptr inbounds i32, i32* %0, i64 51
  %1253 = icmp sgt i64 %N, 51
  %safe.488 = or i1 %1253, %1155
  %select.ptr.489 = select i1 %safe.488, i32* %1252, i32* %shadow.sroa.0
  %1254 = load i32, i32* %select.ptr.489, align 4
  %1255 = xor i32 %1251, %1254
  %1256 = lshr i32 %1180, 24
  %1257 = zext i32 %1256 to i64
  %1258 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1257
  %1259 = load i32, i32* %1258, align 4
  %1260 = lshr i32 %1205, 16
  %1261 = and i32 %1260, 255
  %1262 = zext i32 %1261 to i64
  %1263 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1262
  %1264 = load i32, i32* %1263, align 4
  %1265 = xor i32 %1264, %1259
  %1266 = lshr i32 %1230, 8
  %1267 = and i32 %1266, 255
  %1268 = zext i32 %1267 to i64
  %1269 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1268
  %1270 = load i32, i32* %1269, align 4
  %1271 = xor i32 %1265, %1270
  %1272 = and i32 %1255, 255
  %1273 = zext i32 %1272 to i64
  %1274 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1273
  %1275 = load i32, i32* %1274, align 4
  %1276 = xor i32 %1271, %1275
  %1277 = getelementptr inbounds i32, i32* %0, i64 52
  %1278 = icmp sgt i64 %N, 52
  %safe.498 = or i1 %1278, %1155
  %select.ptr.499 = select i1 %safe.498, i32* %1277, i32* %shadow.sroa.0
  %1279 = load i32, i32* %select.ptr.499, align 4
  %1280 = xor i32 %1276, %1279
  %1281 = lshr i32 %1205, 24
  %1282 = zext i32 %1281 to i64
  %1283 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1282
  %1284 = load i32, i32* %1283, align 4
  %1285 = lshr i32 %1230, 16
  %1286 = and i32 %1285, 255
  %1287 = zext i32 %1286 to i64
  %1288 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1287
  %1289 = load i32, i32* %1288, align 4
  %1290 = xor i32 %1289, %1284
  %1291 = lshr i32 %1255, 8
  %1292 = and i32 %1291, 255
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1293
  %1295 = load i32, i32* %1294, align 4
  %1296 = xor i32 %1290, %1295
  %1297 = and i32 %1180, 255
  %1298 = zext i32 %1297 to i64
  %1299 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1298
  %1300 = load i32, i32* %1299, align 4
  %1301 = xor i32 %1296, %1300
  %1302 = getelementptr inbounds i32, i32* %0, i64 53
  %1303 = icmp sgt i64 %N, 53
  %safe.508 = or i1 %1303, %1155
  %select.ptr.509 = select i1 %safe.508, i32* %1302, i32* %shadow.sroa.0
  %1304 = load i32, i32* %select.ptr.509, align 4
  %1305 = xor i32 %1301, %1304
  %1306 = lshr i32 %1230, 24
  %1307 = zext i32 %1306 to i64
  %1308 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1307
  %1309 = load i32, i32* %1308, align 4
  %1310 = lshr i32 %1255, 16
  %1311 = and i32 %1310, 255
  %1312 = zext i32 %1311 to i64
  %1313 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1312
  %1314 = load i32, i32* %1313, align 4
  %1315 = xor i32 %1314, %1309
  %1316 = lshr i32 %1180, 8
  %1317 = and i32 %1316, 255
  %1318 = zext i32 %1317 to i64
  %1319 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1318
  %1320 = load i32, i32* %1319, align 4
  %1321 = xor i32 %1315, %1320
  %1322 = and i32 %1205, 255
  %1323 = zext i32 %1322 to i64
  %1324 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1323
  %1325 = load i32, i32* %1324, align 4
  %1326 = xor i32 %1321, %1325
  %1327 = getelementptr inbounds i32, i32* %0, i64 54
  %1328 = icmp sgt i64 %N, 54
  %safe.518 = or i1 %1328, %1155
  %select.ptr.519 = select i1 %safe.518, i32* %1327, i32* %shadow.sroa.0
  %1329 = load i32, i32* %select.ptr.519, align 4
  %1330 = xor i32 %1326, %1329
  %1331 = lshr i32 %1255, 24
  %1332 = zext i32 %1331 to i64
  %1333 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1332
  %1334 = load i32, i32* %1333, align 4
  %1335 = lshr i32 %1180, 16
  %1336 = and i32 %1335, 255
  %1337 = zext i32 %1336 to i64
  %1338 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1337
  %1339 = load i32, i32* %1338, align 4
  %1340 = xor i32 %1339, %1334
  %1341 = lshr i32 %1205, 8
  %1342 = and i32 %1341, 255
  %1343 = zext i32 %1342 to i64
  %1344 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1343
  %1345 = load i32, i32* %1344, align 4
  %1346 = xor i32 %1340, %1345
  %1347 = and i32 %1230, 255
  %1348 = zext i32 %1347 to i64
  %1349 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1348
  %1350 = load i32, i32* %1349, align 4
  %1351 = xor i32 %1346, %1350
  %1352 = getelementptr inbounds i32, i32* %0, i64 55
  %1353 = icmp sgt i64 %N, 55
  %safe.528 = or i1 %1353, %1155
  %select.ptr.529 = select i1 %safe.528, i32* %1352, i32* %shadow.sroa.0
  %1354 = load i32, i32* %select.ptr.529, align 4
  %1355 = xor i32 %1351, %1354
  %in.21 = xor i1 %1155, %954
  %1356 = select i1 %in.21, i32 %1079, i32 %1280
  %select.phi.620 = select i1 %954, i32 %1356, i32 %881
  %1357 = select i1 %in.21, i32 %1104, i32 %1305
  %select.phi.619 = select i1 %954, i32 %1357, i32 %905
  %1358 = select i1 %in.21, i32 %1129, i32 %1330
  %select.phi.618 = select i1 %954, i32 %1358, i32 %929
  %1359 = select i1 %in.21, i32 %1154, i32 %1355
  %select.phi.617 = select i1 %954, i32 %1359, i32 %953
  %1360 = shl i32 %1, 2
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds i32, i32* %0, i64 %1361
  %1363 = lshr i32 %select.phi.620, 24
  %1364 = zext i32 %1363 to i64
  %1365 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1364
  %1366 = load i32, i32* %1365, align 4
  %1367 = and i32 %1366, -16777216
  %1368 = lshr i32 %select.phi.619, 16
  %1369 = and i32 %1368, 255
  %1370 = zext i32 %1369 to i64
  %1371 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1370
  %1372 = load i32, i32* %1371, align 4
  %1373 = and i32 %1372, 16711680
  %1374 = or i32 %1373, %1367
  %1375 = lshr i32 %select.phi.618, 8
  %1376 = and i32 %1375, 255
  %1377 = zext i32 %1376 to i64
  %1378 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1377
  %1379 = load i32, i32* %1378, align 4
  %1380 = and i32 %1379, 65280
  %1381 = or i32 %1374, %1380
  %1382 = and i32 %select.phi.617, 255
  %1383 = zext i32 %1382 to i64
  %1384 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1383
  %1385 = load i32, i32* %1384, align 4
  %1386 = and i32 %1385, 255
  %1387 = or i32 %1381, %1386
  %1388 = load i32, i32* %1362, align 4
  %1389 = xor i32 %1387, %1388
  %1390 = lshr i32 %1389, 24
  %1391 = trunc i32 %1390 to i8
  store i8 %1391, i8* %3, align 1
  %1392 = lshr i32 %1389, 16
  %1393 = trunc i32 %1392 to i8
  %1394 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %1393, i8* %1394, align 1
  %1395 = lshr i32 %1389, 8
  %1396 = trunc i32 %1395 to i8
  %1397 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %1396, i8* %1397, align 1
  %1398 = trunc i32 %1389 to i8
  %1399 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %1398, i8* %1399, align 1
  %1400 = lshr i32 %select.phi.619, 24
  %1401 = zext i32 %1400 to i64
  %1402 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1401
  %1403 = load i32, i32* %1402, align 4
  %1404 = and i32 %1403, -16777216
  %1405 = lshr i32 %select.phi.618, 16
  %1406 = and i32 %1405, 255
  %1407 = zext i32 %1406 to i64
  %1408 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1407
  %1409 = load i32, i32* %1408, align 4
  %1410 = and i32 %1409, 16711680
  %1411 = or i32 %1410, %1404
  %1412 = lshr i32 %select.phi.617, 8
  %1413 = and i32 %1412, 255
  %1414 = zext i32 %1413 to i64
  %1415 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1414
  %1416 = load i32, i32* %1415, align 4
  %1417 = and i32 %1416, 65280
  %1418 = or i32 %1411, %1417
  %1419 = and i32 %select.phi.620, 255
  %1420 = zext i32 %1419 to i64
  %1421 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1420
  %1422 = load i32, i32* %1421, align 4
  %1423 = and i32 %1422, 255
  %1424 = or i32 %1418, %1423
  %1425 = getelementptr inbounds i32, i32* %1362, i64 1
  %1426 = load i32, i32* %1425, align 4
  %1427 = xor i32 %1424, %1426
  %1428 = lshr i32 %1427, 24
  %1429 = trunc i32 %1428 to i8
  %1430 = getelementptr inbounds i8, i8* %3, i64 4
  store i8 %1429, i8* %1430, align 1
  %1431 = lshr i32 %1427, 16
  %1432 = trunc i32 %1431 to i8
  %1433 = getelementptr inbounds i8, i8* %3, i64 5
  store i8 %1432, i8* %1433, align 1
  %1434 = lshr i32 %1427, 8
  %1435 = trunc i32 %1434 to i8
  %1436 = getelementptr inbounds i8, i8* %3, i64 6
  store i8 %1435, i8* %1436, align 1
  %1437 = trunc i32 %1427 to i8
  %1438 = getelementptr inbounds i8, i8* %3, i64 7
  store i8 %1437, i8* %1438, align 1
  %1439 = lshr i32 %select.phi.618, 24
  %1440 = zext i32 %1439 to i64
  %1441 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1440
  %1442 = load i32, i32* %1441, align 4
  %1443 = and i32 %1442, -16777216
  %1444 = lshr i32 %select.phi.617, 16
  %1445 = and i32 %1444, 255
  %1446 = zext i32 %1445 to i64
  %1447 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1446
  %1448 = load i32, i32* %1447, align 4
  %1449 = and i32 %1448, 16711680
  %1450 = or i32 %1449, %1443
  %1451 = lshr i32 %select.phi.620, 8
  %1452 = and i32 %1451, 255
  %1453 = zext i32 %1452 to i64
  %1454 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1453
  %1455 = load i32, i32* %1454, align 4
  %1456 = and i32 %1455, 65280
  %1457 = or i32 %1450, %1456
  %1458 = and i32 %select.phi.619, 255
  %1459 = zext i32 %1458 to i64
  %1460 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1459
  %1461 = load i32, i32* %1460, align 4
  %1462 = and i32 %1461, 255
  %1463 = or i32 %1457, %1462
  %1464 = getelementptr inbounds i32, i32* %1362, i64 2
  %1465 = load i32, i32* %1464, align 4
  %1466 = xor i32 %1463, %1465
  %1467 = lshr i32 %1466, 24
  %1468 = trunc i32 %1467 to i8
  %1469 = getelementptr inbounds i8, i8* %3, i64 8
  store i8 %1468, i8* %1469, align 1
  %1470 = lshr i32 %1466, 16
  %1471 = trunc i32 %1470 to i8
  %1472 = getelementptr inbounds i8, i8* %3, i64 9
  store i8 %1471, i8* %1472, align 1
  %1473 = lshr i32 %1466, 8
  %1474 = trunc i32 %1473 to i8
  %1475 = getelementptr inbounds i8, i8* %3, i64 10
  store i8 %1474, i8* %1475, align 1
  %1476 = trunc i32 %1466 to i8
  %1477 = getelementptr inbounds i8, i8* %3, i64 11
  store i8 %1476, i8* %1477, align 1
  %1478 = lshr i32 %select.phi.617, 24
  %1479 = zext i32 %1478 to i64
  %1480 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1479
  %1481 = load i32, i32* %1480, align 4
  %1482 = and i32 %1481, -16777216
  %1483 = lshr i32 %select.phi.620, 16
  %1484 = and i32 %1483, 255
  %1485 = zext i32 %1484 to i64
  %1486 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1485
  %1487 = load i32, i32* %1486, align 4
  %1488 = and i32 %1487, 16711680
  %1489 = or i32 %1488, %1482
  %1490 = lshr i32 %select.phi.619, 8
  %1491 = and i32 %1490, 255
  %1492 = zext i32 %1491 to i64
  %1493 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1492
  %1494 = load i32, i32* %1493, align 4
  %1495 = and i32 %1494, 65280
  %1496 = or i32 %1489, %1495
  %1497 = and i32 %select.phi.618, 255
  %1498 = zext i32 %1497 to i64
  %1499 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1498
  %1500 = load i32, i32* %1499, align 4
  %1501 = and i32 %1500, 255
  %1502 = or i32 %1496, %1501
  %1503 = getelementptr inbounds i32, i32* %1362, i64 3
  %1504 = load i32, i32* %1503, align 4
  %1505 = xor i32 %1502, %1504
  %1506 = lshr i32 %1505, 24
  %1507 = trunc i32 %1506 to i8
  %1508 = getelementptr inbounds i8, i8* %3, i64 12
  store i8 %1507, i8* %1508, align 1
  %1509 = lshr i32 %1505, 16
  %1510 = trunc i32 %1509 to i8
  %1511 = getelementptr inbounds i8, i8* %3, i64 13
  store i8 %1510, i8* %1511, align 1
  %1512 = lshr i32 %1505, 8
  %1513 = trunc i32 %1512 to i8
  %1514 = getelementptr inbounds i8, i8* %3, i64 14
  store i8 %1513, i8* %1514, align 1
  %1515 = trunc i32 %1505 to i8
  %1516 = getelementptr inbounds i8, i8* %3, i64 15
  store i8 %1515, i8* %1516, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @rijndaelDecrypt(i32* readonly %0, i64 %N, i32 %1, i8* nocapture readonly %2, i64 %N1, i8* nocapture %3, i64 %N2) local_unnamed_addr #4 {
  %5 = load i8, i8* %2, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 %6, 24
  %8 = getelementptr inbounds i8, i8* %2, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = or i32 %11, %7
  %13 = getelementptr inbounds i8, i8* %2, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds i8, i8* %2, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = load i32, i32* %0, align 4
  %23 = xor i32 %21, %22
  %24 = getelementptr inbounds i8, i8* %2, i64 4
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds i8, i8* %2, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds i8, i8* %2, i64 6
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds i8, i8* %2, i64 7
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = getelementptr inbounds i32, i32* %0, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = xor i32 %41, %43
  %45 = getelementptr inbounds i8, i8* %2, i64 8
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw i32 %47, 24
  %49 = getelementptr inbounds i8, i8* %2, i64 9
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 16
  %53 = or i32 %52, %48
  %54 = getelementptr inbounds i8, i8* %2, i64 10
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 8
  %58 = or i32 %53, %57
  %59 = getelementptr inbounds i8, i8* %2, i64 11
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = or i32 %58, %61
  %63 = getelementptr inbounds i32, i32* %0, i64 2
  %64 = load i32, i32* %63, align 4
  %65 = xor i32 %62, %64
  %66 = getelementptr inbounds i8, i8* %2, i64 12
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw i32 %68, 24
  %70 = getelementptr inbounds i8, i8* %2, i64 13
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 16
  %74 = or i32 %73, %69
  %75 = getelementptr inbounds i8, i8* %2, i64 14
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 8
  %79 = or i32 %74, %78
  %80 = getelementptr inbounds i8, i8* %2, i64 15
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %79, %82
  %84 = getelementptr inbounds i32, i32* %0, i64 3
  %85 = load i32, i32* %84, align 4
  %86 = xor i32 %83, %85
  %87 = lshr i32 %23, 24
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = lshr i32 %86, 16
  %92 = and i32 %91, 255
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = xor i32 %95, %90
  %97 = lshr i32 %65, 8
  %98 = and i32 %97, 255
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = xor i32 %96, %101
  %103 = and i32 %44, 255
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = xor i32 %102, %106
  %108 = getelementptr inbounds i32, i32* %0, i64 4
  %109 = load i32, i32* %108, align 4
  %110 = xor i32 %107, %109
  %111 = lshr i32 %44, 24
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = lshr i32 %23, 16
  %116 = and i32 %115, 255
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = xor i32 %119, %114
  %121 = lshr i32 %86, 8
  %122 = and i32 %121, 255
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = xor i32 %120, %125
  %127 = and i32 %65, 255
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = xor i32 %126, %130
  %132 = getelementptr inbounds i32, i32* %0, i64 5
  %133 = load i32, i32* %132, align 4
  %134 = xor i32 %131, %133
  %135 = lshr i32 %65, 24
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = lshr i32 %44, 16
  %140 = and i32 %139, 255
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = xor i32 %143, %138
  %145 = lshr i32 %23, 8
  %146 = and i32 %145, 255
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = xor i32 %144, %149
  %151 = and i32 %86, 255
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = xor i32 %150, %154
  %156 = getelementptr inbounds i32, i32* %0, i64 6
  %157 = load i32, i32* %156, align 4
  %158 = xor i32 %155, %157
  %159 = lshr i32 %86, 24
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = lshr i32 %65, 16
  %164 = and i32 %163, 255
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = xor i32 %167, %162
  %169 = lshr i32 %44, 8
  %170 = and i32 %169, 255
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = xor i32 %168, %173
  %175 = and i32 %23, 255
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = xor i32 %174, %178
  %180 = getelementptr inbounds i32, i32* %0, i64 7
  %181 = load i32, i32* %180, align 4
  %182 = xor i32 %179, %181
  %183 = lshr i32 %110, 24
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = lshr i32 %182, 16
  %188 = and i32 %187, 255
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = xor i32 %191, %186
  %193 = lshr i32 %158, 8
  %194 = and i32 %193, 255
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %195
  %197 = load i32, i32* %196, align 4
  %198 = xor i32 %192, %197
  %199 = and i32 %134, 255
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = xor i32 %198, %202
  %204 = getelementptr inbounds i32, i32* %0, i64 8
  %205 = load i32, i32* %204, align 4
  %206 = xor i32 %203, %205
  %207 = lshr i32 %134, 24
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = lshr i32 %110, 16
  %212 = and i32 %211, 255
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = xor i32 %215, %210
  %217 = lshr i32 %182, 8
  %218 = and i32 %217, 255
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = xor i32 %216, %221
  %223 = and i32 %158, 255
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = xor i32 %222, %226
  %228 = getelementptr inbounds i32, i32* %0, i64 9
  %229 = load i32, i32* %228, align 4
  %230 = xor i32 %227, %229
  %231 = lshr i32 %158, 24
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = lshr i32 %134, 16
  %236 = and i32 %235, 255
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = xor i32 %239, %234
  %241 = lshr i32 %110, 8
  %242 = and i32 %241, 255
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %243
  %245 = load i32, i32* %244, align 4
  %246 = xor i32 %240, %245
  %247 = and i32 %182, 255
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = xor i32 %246, %250
  %252 = getelementptr inbounds i32, i32* %0, i64 10
  %253 = load i32, i32* %252, align 4
  %254 = xor i32 %251, %253
  %255 = lshr i32 %182, 24
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = lshr i32 %158, 16
  %260 = and i32 %259, 255
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = xor i32 %263, %258
  %265 = lshr i32 %134, 8
  %266 = and i32 %265, 255
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = xor i32 %264, %269
  %271 = and i32 %110, 255
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = xor i32 %270, %274
  %276 = getelementptr inbounds i32, i32* %0, i64 11
  %277 = load i32, i32* %276, align 4
  %278 = xor i32 %275, %277
  %279 = lshr i32 %206, 24
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = lshr i32 %278, 16
  %284 = and i32 %283, 255
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = xor i32 %287, %282
  %289 = lshr i32 %254, 8
  %290 = and i32 %289, 255
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = xor i32 %288, %293
  %295 = and i32 %230, 255
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = xor i32 %294, %298
  %300 = getelementptr inbounds i32, i32* %0, i64 12
  %301 = load i32, i32* %300, align 4
  %302 = xor i32 %299, %301
  %303 = lshr i32 %230, 24
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = lshr i32 %206, 16
  %308 = and i32 %307, 255
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = xor i32 %311, %306
  %313 = lshr i32 %278, 8
  %314 = and i32 %313, 255
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %315
  %317 = load i32, i32* %316, align 4
  %318 = xor i32 %312, %317
  %319 = and i32 %254, 255
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = xor i32 %318, %322
  %324 = getelementptr inbounds i32, i32* %0, i64 13
  %325 = load i32, i32* %324, align 4
  %326 = xor i32 %323, %325
  %327 = lshr i32 %254, 24
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %328
  %330 = load i32, i32* %329, align 4
  %331 = lshr i32 %230, 16
  %332 = and i32 %331, 255
  %333 = zext i32 %332 to i64
  %334 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = xor i32 %335, %330
  %337 = lshr i32 %206, 8
  %338 = and i32 %337, 255
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %339
  %341 = load i32, i32* %340, align 4
  %342 = xor i32 %336, %341
  %343 = and i32 %278, 255
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = xor i32 %342, %346
  %348 = getelementptr inbounds i32, i32* %0, i64 14
  %349 = load i32, i32* %348, align 4
  %350 = xor i32 %347, %349
  %351 = lshr i32 %278, 24
  %352 = zext i32 %351 to i64
  %353 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = lshr i32 %254, 16
  %356 = and i32 %355, 255
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %357
  %359 = load i32, i32* %358, align 4
  %360 = xor i32 %359, %354
  %361 = lshr i32 %230, 8
  %362 = and i32 %361, 255
  %363 = zext i32 %362 to i64
  %364 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %363
  %365 = load i32, i32* %364, align 4
  %366 = xor i32 %360, %365
  %367 = and i32 %206, 255
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %368
  %370 = load i32, i32* %369, align 4
  %371 = xor i32 %366, %370
  %372 = getelementptr inbounds i32, i32* %0, i64 15
  %373 = load i32, i32* %372, align 4
  %374 = xor i32 %371, %373
  %375 = lshr i32 %302, 24
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %376
  %378 = load i32, i32* %377, align 4
  %379 = lshr i32 %374, 16
  %380 = and i32 %379, 255
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = xor i32 %383, %378
  %385 = lshr i32 %350, 8
  %386 = and i32 %385, 255
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = xor i32 %384, %389
  %391 = and i32 %326, 255
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %392
  %394 = load i32, i32* %393, align 4
  %395 = xor i32 %390, %394
  %396 = getelementptr inbounds i32, i32* %0, i64 16
  %397 = load i32, i32* %396, align 4
  %398 = xor i32 %395, %397
  %399 = lshr i32 %326, 24
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %400
  %402 = load i32, i32* %401, align 4
  %403 = lshr i32 %302, 16
  %404 = and i32 %403, 255
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = xor i32 %407, %402
  %409 = lshr i32 %374, 8
  %410 = and i32 %409, 255
  %411 = zext i32 %410 to i64
  %412 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %411
  %413 = load i32, i32* %412, align 4
  %414 = xor i32 %408, %413
  %415 = and i32 %350, 255
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %416
  %418 = load i32, i32* %417, align 4
  %419 = xor i32 %414, %418
  %420 = getelementptr inbounds i32, i32* %0, i64 17
  %421 = load i32, i32* %420, align 4
  %422 = xor i32 %419, %421
  %423 = lshr i32 %350, 24
  %424 = zext i32 %423 to i64
  %425 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %424
  %426 = load i32, i32* %425, align 4
  %427 = lshr i32 %326, 16
  %428 = and i32 %427, 255
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = xor i32 %431, %426
  %433 = lshr i32 %302, 8
  %434 = and i32 %433, 255
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = xor i32 %432, %437
  %439 = and i32 %374, 255
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %440
  %442 = load i32, i32* %441, align 4
  %443 = xor i32 %438, %442
  %444 = getelementptr inbounds i32, i32* %0, i64 18
  %445 = load i32, i32* %444, align 4
  %446 = xor i32 %443, %445
  %447 = lshr i32 %374, 24
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = lshr i32 %350, 16
  %452 = and i32 %451, 255
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = xor i32 %455, %450
  %457 = lshr i32 %326, 8
  %458 = and i32 %457, 255
  %459 = zext i32 %458 to i64
  %460 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %459
  %461 = load i32, i32* %460, align 4
  %462 = xor i32 %456, %461
  %463 = and i32 %302, 255
  %464 = zext i32 %463 to i64
  %465 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = xor i32 %462, %466
  %468 = getelementptr inbounds i32, i32* %0, i64 19
  %469 = load i32, i32* %468, align 4
  %470 = xor i32 %467, %469
  %471 = lshr i32 %398, 24
  %472 = zext i32 %471 to i64
  %473 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %472
  %474 = load i32, i32* %473, align 4
  %475 = lshr i32 %470, 16
  %476 = and i32 %475, 255
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %477
  %479 = load i32, i32* %478, align 4
  %480 = xor i32 %479, %474
  %481 = lshr i32 %446, 8
  %482 = and i32 %481, 255
  %483 = zext i32 %482 to i64
  %484 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %483
  %485 = load i32, i32* %484, align 4
  %486 = xor i32 %480, %485
  %487 = and i32 %422, 255
  %488 = zext i32 %487 to i64
  %489 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = xor i32 %486, %490
  %492 = getelementptr inbounds i32, i32* %0, i64 20
  %493 = load i32, i32* %492, align 4
  %494 = xor i32 %491, %493
  %495 = lshr i32 %422, 24
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %496
  %498 = load i32, i32* %497, align 4
  %499 = lshr i32 %398, 16
  %500 = and i32 %499, 255
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %501
  %503 = load i32, i32* %502, align 4
  %504 = xor i32 %503, %498
  %505 = lshr i32 %470, 8
  %506 = and i32 %505, 255
  %507 = zext i32 %506 to i64
  %508 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %507
  %509 = load i32, i32* %508, align 4
  %510 = xor i32 %504, %509
  %511 = and i32 %446, 255
  %512 = zext i32 %511 to i64
  %513 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %512
  %514 = load i32, i32* %513, align 4
  %515 = xor i32 %510, %514
  %516 = getelementptr inbounds i32, i32* %0, i64 21
  %517 = load i32, i32* %516, align 4
  %518 = xor i32 %515, %517
  %519 = lshr i32 %446, 24
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %520
  %522 = load i32, i32* %521, align 4
  %523 = lshr i32 %422, 16
  %524 = and i32 %523, 255
  %525 = zext i32 %524 to i64
  %526 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %525
  %527 = load i32, i32* %526, align 4
  %528 = xor i32 %527, %522
  %529 = lshr i32 %398, 8
  %530 = and i32 %529, 255
  %531 = zext i32 %530 to i64
  %532 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %531
  %533 = load i32, i32* %532, align 4
  %534 = xor i32 %528, %533
  %535 = and i32 %470, 255
  %536 = zext i32 %535 to i64
  %537 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %536
  %538 = load i32, i32* %537, align 4
  %539 = xor i32 %534, %538
  %540 = getelementptr inbounds i32, i32* %0, i64 22
  %541 = load i32, i32* %540, align 4
  %542 = xor i32 %539, %541
  %543 = lshr i32 %470, 24
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %544
  %546 = load i32, i32* %545, align 4
  %547 = lshr i32 %446, 16
  %548 = and i32 %547, 255
  %549 = zext i32 %548 to i64
  %550 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %549
  %551 = load i32, i32* %550, align 4
  %552 = xor i32 %551, %546
  %553 = lshr i32 %422, 8
  %554 = and i32 %553, 255
  %555 = zext i32 %554 to i64
  %556 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %555
  %557 = load i32, i32* %556, align 4
  %558 = xor i32 %552, %557
  %559 = and i32 %398, 255
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %560
  %562 = load i32, i32* %561, align 4
  %563 = xor i32 %558, %562
  %564 = getelementptr inbounds i32, i32* %0, i64 23
  %565 = load i32, i32* %564, align 4
  %566 = xor i32 %563, %565
  %567 = lshr i32 %494, 24
  %568 = zext i32 %567 to i64
  %569 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %568
  %570 = load i32, i32* %569, align 4
  %571 = lshr i32 %566, 16
  %572 = and i32 %571, 255
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %573
  %575 = load i32, i32* %574, align 4
  %576 = xor i32 %575, %570
  %577 = lshr i32 %542, 8
  %578 = and i32 %577, 255
  %579 = zext i32 %578 to i64
  %580 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = xor i32 %576, %581
  %583 = and i32 %518, 255
  %584 = zext i32 %583 to i64
  %585 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %584
  %586 = load i32, i32* %585, align 4
  %587 = xor i32 %582, %586
  %588 = getelementptr inbounds i32, i32* %0, i64 24
  %589 = load i32, i32* %588, align 4
  %590 = xor i32 %587, %589
  %591 = lshr i32 %518, 24
  %592 = zext i32 %591 to i64
  %593 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %592
  %594 = load i32, i32* %593, align 4
  %595 = lshr i32 %494, 16
  %596 = and i32 %595, 255
  %597 = zext i32 %596 to i64
  %598 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %597
  %599 = load i32, i32* %598, align 4
  %600 = xor i32 %599, %594
  %601 = lshr i32 %566, 8
  %602 = and i32 %601, 255
  %603 = zext i32 %602 to i64
  %604 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %603
  %605 = load i32, i32* %604, align 4
  %606 = xor i32 %600, %605
  %607 = and i32 %542, 255
  %608 = zext i32 %607 to i64
  %609 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %608
  %610 = load i32, i32* %609, align 4
  %611 = xor i32 %606, %610
  %612 = getelementptr inbounds i32, i32* %0, i64 25
  %613 = load i32, i32* %612, align 4
  %614 = xor i32 %611, %613
  %615 = lshr i32 %542, 24
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %616
  %618 = load i32, i32* %617, align 4
  %619 = lshr i32 %518, 16
  %620 = and i32 %619, 255
  %621 = zext i32 %620 to i64
  %622 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %621
  %623 = load i32, i32* %622, align 4
  %624 = xor i32 %623, %618
  %625 = lshr i32 %494, 8
  %626 = and i32 %625, 255
  %627 = zext i32 %626 to i64
  %628 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = xor i32 %624, %629
  %631 = and i32 %566, 255
  %632 = zext i32 %631 to i64
  %633 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %632
  %634 = load i32, i32* %633, align 4
  %635 = xor i32 %630, %634
  %636 = getelementptr inbounds i32, i32* %0, i64 26
  %637 = load i32, i32* %636, align 4
  %638 = xor i32 %635, %637
  %639 = lshr i32 %566, 24
  %640 = zext i32 %639 to i64
  %641 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %640
  %642 = load i32, i32* %641, align 4
  %643 = lshr i32 %542, 16
  %644 = and i32 %643, 255
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %645
  %647 = load i32, i32* %646, align 4
  %648 = xor i32 %647, %642
  %649 = lshr i32 %518, 8
  %650 = and i32 %649, 255
  %651 = zext i32 %650 to i64
  %652 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %651
  %653 = load i32, i32* %652, align 4
  %654 = xor i32 %648, %653
  %655 = and i32 %494, 255
  %656 = zext i32 %655 to i64
  %657 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %656
  %658 = load i32, i32* %657, align 4
  %659 = xor i32 %654, %658
  %660 = getelementptr inbounds i32, i32* %0, i64 27
  %661 = load i32, i32* %660, align 4
  %662 = xor i32 %659, %661
  %663 = lshr i32 %590, 24
  %664 = zext i32 %663 to i64
  %665 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %664
  %666 = load i32, i32* %665, align 4
  %667 = lshr i32 %662, 16
  %668 = and i32 %667, 255
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %669
  %671 = load i32, i32* %670, align 4
  %672 = xor i32 %671, %666
  %673 = lshr i32 %638, 8
  %674 = and i32 %673, 255
  %675 = zext i32 %674 to i64
  %676 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %675
  %677 = load i32, i32* %676, align 4
  %678 = xor i32 %672, %677
  %679 = and i32 %614, 255
  %680 = zext i32 %679 to i64
  %681 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %680
  %682 = load i32, i32* %681, align 4
  %683 = xor i32 %678, %682
  %684 = getelementptr inbounds i32, i32* %0, i64 28
  %685 = load i32, i32* %684, align 4
  %686 = xor i32 %683, %685
  %687 = lshr i32 %614, 24
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %688
  %690 = load i32, i32* %689, align 4
  %691 = lshr i32 %590, 16
  %692 = and i32 %691, 255
  %693 = zext i32 %692 to i64
  %694 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %693
  %695 = load i32, i32* %694, align 4
  %696 = xor i32 %695, %690
  %697 = lshr i32 %662, 8
  %698 = and i32 %697, 255
  %699 = zext i32 %698 to i64
  %700 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %699
  %701 = load i32, i32* %700, align 4
  %702 = xor i32 %696, %701
  %703 = and i32 %638, 255
  %704 = zext i32 %703 to i64
  %705 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %704
  %706 = load i32, i32* %705, align 4
  %707 = xor i32 %702, %706
  %708 = getelementptr inbounds i32, i32* %0, i64 29
  %709 = load i32, i32* %708, align 4
  %710 = xor i32 %707, %709
  %711 = lshr i32 %638, 24
  %712 = zext i32 %711 to i64
  %713 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %712
  %714 = load i32, i32* %713, align 4
  %715 = lshr i32 %614, 16
  %716 = and i32 %715, 255
  %717 = zext i32 %716 to i64
  %718 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %717
  %719 = load i32, i32* %718, align 4
  %720 = xor i32 %719, %714
  %721 = lshr i32 %590, 8
  %722 = and i32 %721, 255
  %723 = zext i32 %722 to i64
  %724 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %723
  %725 = load i32, i32* %724, align 4
  %726 = xor i32 %720, %725
  %727 = and i32 %662, 255
  %728 = zext i32 %727 to i64
  %729 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %728
  %730 = load i32, i32* %729, align 4
  %731 = xor i32 %726, %730
  %732 = getelementptr inbounds i32, i32* %0, i64 30
  %733 = load i32, i32* %732, align 4
  %734 = xor i32 %731, %733
  %735 = lshr i32 %662, 24
  %736 = zext i32 %735 to i64
  %737 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %736
  %738 = load i32, i32* %737, align 4
  %739 = lshr i32 %638, 16
  %740 = and i32 %739, 255
  %741 = zext i32 %740 to i64
  %742 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %741
  %743 = load i32, i32* %742, align 4
  %744 = xor i32 %743, %738
  %745 = lshr i32 %614, 8
  %746 = and i32 %745, 255
  %747 = zext i32 %746 to i64
  %748 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %747
  %749 = load i32, i32* %748, align 4
  %750 = xor i32 %744, %749
  %751 = and i32 %590, 255
  %752 = zext i32 %751 to i64
  %753 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %752
  %754 = load i32, i32* %753, align 4
  %755 = xor i32 %750, %754
  %756 = getelementptr inbounds i32, i32* %0, i64 31
  %757 = load i32, i32* %756, align 4
  %758 = xor i32 %755, %757
  %759 = lshr i32 %686, 24
  %760 = zext i32 %759 to i64
  %761 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %760
  %762 = load i32, i32* %761, align 4
  %763 = lshr i32 %758, 16
  %764 = and i32 %763, 255
  %765 = zext i32 %764 to i64
  %766 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %765
  %767 = load i32, i32* %766, align 4
  %768 = xor i32 %767, %762
  %769 = lshr i32 %734, 8
  %770 = and i32 %769, 255
  %771 = zext i32 %770 to i64
  %772 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %771
  %773 = load i32, i32* %772, align 4
  %774 = xor i32 %768, %773
  %775 = and i32 %710, 255
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %776
  %778 = load i32, i32* %777, align 4
  %779 = xor i32 %774, %778
  %780 = getelementptr inbounds i32, i32* %0, i64 32
  %781 = load i32, i32* %780, align 4
  %782 = xor i32 %779, %781
  %783 = lshr i32 %710, 24
  %784 = zext i32 %783 to i64
  %785 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %784
  %786 = load i32, i32* %785, align 4
  %787 = lshr i32 %686, 16
  %788 = and i32 %787, 255
  %789 = zext i32 %788 to i64
  %790 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %789
  %791 = load i32, i32* %790, align 4
  %792 = xor i32 %791, %786
  %793 = lshr i32 %758, 8
  %794 = and i32 %793, 255
  %795 = zext i32 %794 to i64
  %796 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %795
  %797 = load i32, i32* %796, align 4
  %798 = xor i32 %792, %797
  %799 = and i32 %734, 255
  %800 = zext i32 %799 to i64
  %801 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %800
  %802 = load i32, i32* %801, align 4
  %803 = xor i32 %798, %802
  %804 = getelementptr inbounds i32, i32* %0, i64 33
  %805 = load i32, i32* %804, align 4
  %806 = xor i32 %803, %805
  %807 = lshr i32 %734, 24
  %808 = zext i32 %807 to i64
  %809 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %808
  %810 = load i32, i32* %809, align 4
  %811 = lshr i32 %710, 16
  %812 = and i32 %811, 255
  %813 = zext i32 %812 to i64
  %814 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %813
  %815 = load i32, i32* %814, align 4
  %816 = xor i32 %815, %810
  %817 = lshr i32 %686, 8
  %818 = and i32 %817, 255
  %819 = zext i32 %818 to i64
  %820 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %819
  %821 = load i32, i32* %820, align 4
  %822 = xor i32 %816, %821
  %823 = and i32 %758, 255
  %824 = zext i32 %823 to i64
  %825 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %824
  %826 = load i32, i32* %825, align 4
  %827 = xor i32 %822, %826
  %828 = getelementptr inbounds i32, i32* %0, i64 34
  %829 = load i32, i32* %828, align 4
  %830 = xor i32 %827, %829
  %831 = lshr i32 %758, 24
  %832 = zext i32 %831 to i64
  %833 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %832
  %834 = load i32, i32* %833, align 4
  %835 = lshr i32 %734, 16
  %836 = and i32 %835, 255
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %837
  %839 = load i32, i32* %838, align 4
  %840 = xor i32 %839, %834
  %841 = lshr i32 %710, 8
  %842 = and i32 %841, 255
  %843 = zext i32 %842 to i64
  %844 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %843
  %845 = load i32, i32* %844, align 4
  %846 = xor i32 %840, %845
  %847 = and i32 %686, 255
  %848 = zext i32 %847 to i64
  %849 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %848
  %850 = load i32, i32* %849, align 4
  %851 = xor i32 %846, %850
  %852 = getelementptr inbounds i32, i32* %0, i64 35
  %853 = load i32, i32* %852, align 4
  %854 = xor i32 %851, %853
  %855 = lshr i32 %782, 24
  %856 = zext i32 %855 to i64
  %857 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %856
  %858 = load i32, i32* %857, align 4
  %859 = lshr i32 %854, 16
  %860 = and i32 %859, 255
  %861 = zext i32 %860 to i64
  %862 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %861
  %863 = load i32, i32* %862, align 4
  %864 = xor i32 %863, %858
  %865 = lshr i32 %830, 8
  %866 = and i32 %865, 255
  %867 = zext i32 %866 to i64
  %868 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %867
  %869 = load i32, i32* %868, align 4
  %870 = xor i32 %864, %869
  %871 = and i32 %806, 255
  %872 = zext i32 %871 to i64
  %873 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %872
  %874 = load i32, i32* %873, align 4
  %875 = xor i32 %870, %874
  %876 = getelementptr inbounds i32, i32* %0, i64 36
  %877 = load i32, i32* %876, align 4
  %878 = xor i32 %875, %877
  %879 = lshr i32 %806, 24
  %880 = zext i32 %879 to i64
  %881 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %880
  %882 = load i32, i32* %881, align 4
  %883 = lshr i32 %782, 16
  %884 = and i32 %883, 255
  %885 = zext i32 %884 to i64
  %886 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %885
  %887 = load i32, i32* %886, align 4
  %888 = xor i32 %887, %882
  %889 = lshr i32 %854, 8
  %890 = and i32 %889, 255
  %891 = zext i32 %890 to i64
  %892 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %891
  %893 = load i32, i32* %892, align 4
  %894 = xor i32 %888, %893
  %895 = and i32 %830, 255
  %896 = zext i32 %895 to i64
  %897 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %896
  %898 = load i32, i32* %897, align 4
  %899 = xor i32 %894, %898
  %900 = getelementptr inbounds i32, i32* %0, i64 37
  %901 = load i32, i32* %900, align 4
  %902 = xor i32 %899, %901
  %903 = lshr i32 %830, 24
  %904 = zext i32 %903 to i64
  %905 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %904
  %906 = load i32, i32* %905, align 4
  %907 = lshr i32 %806, 16
  %908 = and i32 %907, 255
  %909 = zext i32 %908 to i64
  %910 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %909
  %911 = load i32, i32* %910, align 4
  %912 = xor i32 %911, %906
  %913 = lshr i32 %782, 8
  %914 = and i32 %913, 255
  %915 = zext i32 %914 to i64
  %916 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %915
  %917 = load i32, i32* %916, align 4
  %918 = xor i32 %912, %917
  %919 = and i32 %854, 255
  %920 = zext i32 %919 to i64
  %921 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %920
  %922 = load i32, i32* %921, align 4
  %923 = xor i32 %918, %922
  %924 = getelementptr inbounds i32, i32* %0, i64 38
  %925 = load i32, i32* %924, align 4
  %926 = xor i32 %923, %925
  %927 = lshr i32 %854, 24
  %928 = zext i32 %927 to i64
  %929 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %928
  %930 = load i32, i32* %929, align 4
  %931 = lshr i32 %830, 16
  %932 = and i32 %931, 255
  %933 = zext i32 %932 to i64
  %934 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %933
  %935 = load i32, i32* %934, align 4
  %936 = xor i32 %935, %930
  %937 = lshr i32 %806, 8
  %938 = and i32 %937, 255
  %939 = zext i32 %938 to i64
  %940 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %939
  %941 = load i32, i32* %940, align 4
  %942 = xor i32 %936, %941
  %943 = and i32 %782, 255
  %944 = zext i32 %943 to i64
  %945 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %944
  %946 = load i32, i32* %945, align 4
  %947 = xor i32 %942, %946
  %948 = getelementptr inbounds i32, i32* %0, i64 39
  %949 = load i32, i32* %948, align 4
  %950 = xor i32 %947, %949
  %951 = icmp sgt i32 %1, 10
  br i1 %951, label %952, label %1339

952:                                              ; preds = %4
  %953 = lshr i32 %878, 24
  %954 = zext i32 %953 to i64
  %955 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %954
  %956 = load i32, i32* %955, align 4
  %957 = lshr i32 %950, 16
  %958 = and i32 %957, 255
  %959 = zext i32 %958 to i64
  %960 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %959
  %961 = load i32, i32* %960, align 4
  %962 = xor i32 %961, %956
  %963 = lshr i32 %926, 8
  %964 = and i32 %963, 255
  %965 = zext i32 %964 to i64
  %966 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %965
  %967 = load i32, i32* %966, align 4
  %968 = xor i32 %962, %967
  %969 = and i32 %902, 255
  %970 = zext i32 %969 to i64
  %971 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %970
  %972 = load i32, i32* %971, align 4
  %973 = xor i32 %968, %972
  %974 = getelementptr inbounds i32, i32* %0, i64 40
  %975 = load i32, i32* %974, align 4
  %976 = xor i32 %973, %975
  %977 = lshr i32 %902, 24
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %978
  %980 = load i32, i32* %979, align 4
  %981 = lshr i32 %878, 16
  %982 = and i32 %981, 255
  %983 = zext i32 %982 to i64
  %984 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %983
  %985 = load i32, i32* %984, align 4
  %986 = xor i32 %985, %980
  %987 = lshr i32 %950, 8
  %988 = and i32 %987, 255
  %989 = zext i32 %988 to i64
  %990 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %989
  %991 = load i32, i32* %990, align 4
  %992 = xor i32 %986, %991
  %993 = and i32 %926, 255
  %994 = zext i32 %993 to i64
  %995 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %994
  %996 = load i32, i32* %995, align 4
  %997 = xor i32 %992, %996
  %998 = getelementptr inbounds i32, i32* %0, i64 41
  %999 = load i32, i32* %998, align 4
  %1000 = xor i32 %997, %999
  %1001 = lshr i32 %926, 24
  %1002 = zext i32 %1001 to i64
  %1003 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1002
  %1004 = load i32, i32* %1003, align 4
  %1005 = lshr i32 %902, 16
  %1006 = and i32 %1005, 255
  %1007 = zext i32 %1006 to i64
  %1008 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1007
  %1009 = load i32, i32* %1008, align 4
  %1010 = xor i32 %1009, %1004
  %1011 = lshr i32 %878, 8
  %1012 = and i32 %1011, 255
  %1013 = zext i32 %1012 to i64
  %1014 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1013
  %1015 = load i32, i32* %1014, align 4
  %1016 = xor i32 %1010, %1015
  %1017 = and i32 %950, 255
  %1018 = zext i32 %1017 to i64
  %1019 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1018
  %1020 = load i32, i32* %1019, align 4
  %1021 = xor i32 %1016, %1020
  %1022 = getelementptr inbounds i32, i32* %0, i64 42
  %1023 = load i32, i32* %1022, align 4
  %1024 = xor i32 %1021, %1023
  %1025 = lshr i32 %950, 24
  %1026 = zext i32 %1025 to i64
  %1027 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1026
  %1028 = load i32, i32* %1027, align 4
  %1029 = lshr i32 %926, 16
  %1030 = and i32 %1029, 255
  %1031 = zext i32 %1030 to i64
  %1032 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1031
  %1033 = load i32, i32* %1032, align 4
  %1034 = xor i32 %1033, %1028
  %1035 = lshr i32 %902, 8
  %1036 = and i32 %1035, 255
  %1037 = zext i32 %1036 to i64
  %1038 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1037
  %1039 = load i32, i32* %1038, align 4
  %1040 = xor i32 %1034, %1039
  %1041 = and i32 %878, 255
  %1042 = zext i32 %1041 to i64
  %1043 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1042
  %1044 = load i32, i32* %1043, align 4
  %1045 = xor i32 %1040, %1044
  %1046 = getelementptr inbounds i32, i32* %0, i64 43
  %1047 = load i32, i32* %1046, align 4
  %1048 = xor i32 %1045, %1047
  %1049 = lshr i32 %976, 24
  %1050 = zext i32 %1049 to i64
  %1051 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1050
  %1052 = load i32, i32* %1051, align 4
  %1053 = lshr i32 %1048, 16
  %1054 = and i32 %1053, 255
  %1055 = zext i32 %1054 to i64
  %1056 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1055
  %1057 = load i32, i32* %1056, align 4
  %1058 = xor i32 %1057, %1052
  %1059 = lshr i32 %1024, 8
  %1060 = and i32 %1059, 255
  %1061 = zext i32 %1060 to i64
  %1062 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1061
  %1063 = load i32, i32* %1062, align 4
  %1064 = xor i32 %1058, %1063
  %1065 = and i32 %1000, 255
  %1066 = zext i32 %1065 to i64
  %1067 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1066
  %1068 = load i32, i32* %1067, align 4
  %1069 = xor i32 %1064, %1068
  %1070 = getelementptr inbounds i32, i32* %0, i64 44
  %1071 = load i32, i32* %1070, align 4
  %1072 = xor i32 %1069, %1071
  %1073 = lshr i32 %1000, 24
  %1074 = zext i32 %1073 to i64
  %1075 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1074
  %1076 = load i32, i32* %1075, align 4
  %1077 = lshr i32 %976, 16
  %1078 = and i32 %1077, 255
  %1079 = zext i32 %1078 to i64
  %1080 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1079
  %1081 = load i32, i32* %1080, align 4
  %1082 = xor i32 %1081, %1076
  %1083 = lshr i32 %1048, 8
  %1084 = and i32 %1083, 255
  %1085 = zext i32 %1084 to i64
  %1086 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1085
  %1087 = load i32, i32* %1086, align 4
  %1088 = xor i32 %1082, %1087
  %1089 = and i32 %1024, 255
  %1090 = zext i32 %1089 to i64
  %1091 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1090
  %1092 = load i32, i32* %1091, align 4
  %1093 = xor i32 %1088, %1092
  %1094 = getelementptr inbounds i32, i32* %0, i64 45
  %1095 = load i32, i32* %1094, align 4
  %1096 = xor i32 %1093, %1095
  %1097 = lshr i32 %1024, 24
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1098
  %1100 = load i32, i32* %1099, align 4
  %1101 = lshr i32 %1000, 16
  %1102 = and i32 %1101, 255
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1103
  %1105 = load i32, i32* %1104, align 4
  %1106 = xor i32 %1105, %1100
  %1107 = lshr i32 %976, 8
  %1108 = and i32 %1107, 255
  %1109 = zext i32 %1108 to i64
  %1110 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1109
  %1111 = load i32, i32* %1110, align 4
  %1112 = xor i32 %1106, %1111
  %1113 = and i32 %1048, 255
  %1114 = zext i32 %1113 to i64
  %1115 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1114
  %1116 = load i32, i32* %1115, align 4
  %1117 = xor i32 %1112, %1116
  %1118 = getelementptr inbounds i32, i32* %0, i64 46
  %1119 = load i32, i32* %1118, align 4
  %1120 = xor i32 %1117, %1119
  %1121 = lshr i32 %1048, 24
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1122
  %1124 = load i32, i32* %1123, align 4
  %1125 = lshr i32 %1024, 16
  %1126 = and i32 %1125, 255
  %1127 = zext i32 %1126 to i64
  %1128 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1127
  %1129 = load i32, i32* %1128, align 4
  %1130 = xor i32 %1129, %1124
  %1131 = lshr i32 %1000, 8
  %1132 = and i32 %1131, 255
  %1133 = zext i32 %1132 to i64
  %1134 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1133
  %1135 = load i32, i32* %1134, align 4
  %1136 = xor i32 %1130, %1135
  %1137 = and i32 %976, 255
  %1138 = zext i32 %1137 to i64
  %1139 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1138
  %1140 = load i32, i32* %1139, align 4
  %1141 = xor i32 %1136, %1140
  %1142 = getelementptr inbounds i32, i32* %0, i64 47
  %1143 = load i32, i32* %1142, align 4
  %1144 = xor i32 %1141, %1143
  %1145 = icmp sgt i32 %1, 12
  br i1 %1145, label %1146, label %1339

1146:                                             ; preds = %952
  %1147 = lshr i32 %1072, 24
  %1148 = zext i32 %1147 to i64
  %1149 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1148
  %1150 = load i32, i32* %1149, align 4
  %1151 = lshr i32 %1144, 16
  %1152 = and i32 %1151, 255
  %1153 = zext i32 %1152 to i64
  %1154 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1153
  %1155 = load i32, i32* %1154, align 4
  %1156 = xor i32 %1155, %1150
  %1157 = lshr i32 %1120, 8
  %1158 = and i32 %1157, 255
  %1159 = zext i32 %1158 to i64
  %1160 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1159
  %1161 = load i32, i32* %1160, align 4
  %1162 = xor i32 %1156, %1161
  %1163 = and i32 %1096, 255
  %1164 = zext i32 %1163 to i64
  %1165 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1164
  %1166 = load i32, i32* %1165, align 4
  %1167 = xor i32 %1162, %1166
  %1168 = getelementptr inbounds i32, i32* %0, i64 48
  %1169 = load i32, i32* %1168, align 4
  %1170 = xor i32 %1167, %1169
  %1171 = lshr i32 %1096, 24
  %1172 = zext i32 %1171 to i64
  %1173 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1172
  %1174 = load i32, i32* %1173, align 4
  %1175 = lshr i32 %1072, 16
  %1176 = and i32 %1175, 255
  %1177 = zext i32 %1176 to i64
  %1178 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1177
  %1179 = load i32, i32* %1178, align 4
  %1180 = xor i32 %1179, %1174
  %1181 = lshr i32 %1144, 8
  %1182 = and i32 %1181, 255
  %1183 = zext i32 %1182 to i64
  %1184 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1183
  %1185 = load i32, i32* %1184, align 4
  %1186 = xor i32 %1180, %1185
  %1187 = and i32 %1120, 255
  %1188 = zext i32 %1187 to i64
  %1189 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1188
  %1190 = load i32, i32* %1189, align 4
  %1191 = xor i32 %1186, %1190
  %1192 = getelementptr inbounds i32, i32* %0, i64 49
  %1193 = load i32, i32* %1192, align 4
  %1194 = xor i32 %1191, %1193
  %1195 = lshr i32 %1120, 24
  %1196 = zext i32 %1195 to i64
  %1197 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1196
  %1198 = load i32, i32* %1197, align 4
  %1199 = lshr i32 %1096, 16
  %1200 = and i32 %1199, 255
  %1201 = zext i32 %1200 to i64
  %1202 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1201
  %1203 = load i32, i32* %1202, align 4
  %1204 = xor i32 %1203, %1198
  %1205 = lshr i32 %1072, 8
  %1206 = and i32 %1205, 255
  %1207 = zext i32 %1206 to i64
  %1208 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1207
  %1209 = load i32, i32* %1208, align 4
  %1210 = xor i32 %1204, %1209
  %1211 = and i32 %1144, 255
  %1212 = zext i32 %1211 to i64
  %1213 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1212
  %1214 = load i32, i32* %1213, align 4
  %1215 = xor i32 %1210, %1214
  %1216 = getelementptr inbounds i32, i32* %0, i64 50
  %1217 = load i32, i32* %1216, align 4
  %1218 = xor i32 %1215, %1217
  %1219 = lshr i32 %1144, 24
  %1220 = zext i32 %1219 to i64
  %1221 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1220
  %1222 = load i32, i32* %1221, align 4
  %1223 = lshr i32 %1120, 16
  %1224 = and i32 %1223, 255
  %1225 = zext i32 %1224 to i64
  %1226 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1225
  %1227 = load i32, i32* %1226, align 4
  %1228 = xor i32 %1227, %1222
  %1229 = lshr i32 %1096, 8
  %1230 = and i32 %1229, 255
  %1231 = zext i32 %1230 to i64
  %1232 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1231
  %1233 = load i32, i32* %1232, align 4
  %1234 = xor i32 %1228, %1233
  %1235 = and i32 %1072, 255
  %1236 = zext i32 %1235 to i64
  %1237 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1236
  %1238 = load i32, i32* %1237, align 4
  %1239 = xor i32 %1234, %1238
  %1240 = getelementptr inbounds i32, i32* %0, i64 51
  %1241 = load i32, i32* %1240, align 4
  %1242 = xor i32 %1239, %1241
  %1243 = lshr i32 %1170, 24
  %1244 = zext i32 %1243 to i64
  %1245 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1244
  %1246 = load i32, i32* %1245, align 4
  %1247 = lshr i32 %1242, 16
  %1248 = and i32 %1247, 255
  %1249 = zext i32 %1248 to i64
  %1250 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1249
  %1251 = load i32, i32* %1250, align 4
  %1252 = xor i32 %1251, %1246
  %1253 = lshr i32 %1218, 8
  %1254 = and i32 %1253, 255
  %1255 = zext i32 %1254 to i64
  %1256 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1255
  %1257 = load i32, i32* %1256, align 4
  %1258 = xor i32 %1252, %1257
  %1259 = and i32 %1194, 255
  %1260 = zext i32 %1259 to i64
  %1261 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1260
  %1262 = load i32, i32* %1261, align 4
  %1263 = xor i32 %1258, %1262
  %1264 = getelementptr inbounds i32, i32* %0, i64 52
  %1265 = load i32, i32* %1264, align 4
  %1266 = xor i32 %1263, %1265
  %1267 = lshr i32 %1194, 24
  %1268 = zext i32 %1267 to i64
  %1269 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1268
  %1270 = load i32, i32* %1269, align 4
  %1271 = lshr i32 %1170, 16
  %1272 = and i32 %1271, 255
  %1273 = zext i32 %1272 to i64
  %1274 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1273
  %1275 = load i32, i32* %1274, align 4
  %1276 = xor i32 %1275, %1270
  %1277 = lshr i32 %1242, 8
  %1278 = and i32 %1277, 255
  %1279 = zext i32 %1278 to i64
  %1280 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1279
  %1281 = load i32, i32* %1280, align 4
  %1282 = xor i32 %1276, %1281
  %1283 = and i32 %1218, 255
  %1284 = zext i32 %1283 to i64
  %1285 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1284
  %1286 = load i32, i32* %1285, align 4
  %1287 = xor i32 %1282, %1286
  %1288 = getelementptr inbounds i32, i32* %0, i64 53
  %1289 = load i32, i32* %1288, align 4
  %1290 = xor i32 %1287, %1289
  %1291 = lshr i32 %1218, 24
  %1292 = zext i32 %1291 to i64
  %1293 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1292
  %1294 = load i32, i32* %1293, align 4
  %1295 = lshr i32 %1194, 16
  %1296 = and i32 %1295, 255
  %1297 = zext i32 %1296 to i64
  %1298 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1297
  %1299 = load i32, i32* %1298, align 4
  %1300 = xor i32 %1299, %1294
  %1301 = lshr i32 %1170, 8
  %1302 = and i32 %1301, 255
  %1303 = zext i32 %1302 to i64
  %1304 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1303
  %1305 = load i32, i32* %1304, align 4
  %1306 = xor i32 %1300, %1305
  %1307 = and i32 %1242, 255
  %1308 = zext i32 %1307 to i64
  %1309 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1308
  %1310 = load i32, i32* %1309, align 4
  %1311 = xor i32 %1306, %1310
  %1312 = getelementptr inbounds i32, i32* %0, i64 54
  %1313 = load i32, i32* %1312, align 4
  %1314 = xor i32 %1311, %1313
  %1315 = lshr i32 %1242, 24
  %1316 = zext i32 %1315 to i64
  %1317 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1316
  %1318 = load i32, i32* %1317, align 4
  %1319 = lshr i32 %1218, 16
  %1320 = and i32 %1319, 255
  %1321 = zext i32 %1320 to i64
  %1322 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1321
  %1323 = load i32, i32* %1322, align 4
  %1324 = xor i32 %1323, %1318
  %1325 = lshr i32 %1194, 8
  %1326 = and i32 %1325, 255
  %1327 = zext i32 %1326 to i64
  %1328 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1327
  %1329 = load i32, i32* %1328, align 4
  %1330 = xor i32 %1324, %1329
  %1331 = and i32 %1170, 255
  %1332 = zext i32 %1331 to i64
  %1333 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1332
  %1334 = load i32, i32* %1333, align 4
  %1335 = xor i32 %1330, %1334
  %1336 = getelementptr inbounds i32, i32* %0, i64 55
  %1337 = load i32, i32* %1336, align 4
  %1338 = xor i32 %1335, %1337
  br label %1339

1339:                                             ; preds = %1146, %952, %4
  %.16 = phi i32 [ %878, %4 ], [ %1266, %1146 ], [ %1072, %952 ]
  %.14 = phi i32 [ %902, %4 ], [ %1290, %1146 ], [ %1096, %952 ]
  %.12 = phi i32 [ %926, %4 ], [ %1314, %1146 ], [ %1120, %952 ]
  %.1 = phi i32 [ %950, %4 ], [ %1338, %1146 ], [ %1144, %952 ]
  %1340 = shl i32 %1, 2
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds i32, i32* %0, i64 %1341
  %1343 = lshr i32 %.16, 24
  %1344 = zext i32 %1343 to i64
  %1345 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1344
  %1346 = load i32, i32* %1345, align 4
  %1347 = and i32 %1346, -16777216
  %1348 = lshr i32 %.1, 16
  %1349 = and i32 %1348, 255
  %1350 = zext i32 %1349 to i64
  %1351 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1350
  %1352 = load i32, i32* %1351, align 4
  %1353 = and i32 %1352, 16711680
  %1354 = or i32 %1353, %1347
  %1355 = lshr i32 %.12, 8
  %1356 = and i32 %1355, 255
  %1357 = zext i32 %1356 to i64
  %1358 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1357
  %1359 = load i32, i32* %1358, align 4
  %1360 = and i32 %1359, 65280
  %1361 = or i32 %1354, %1360
  %1362 = and i32 %.14, 255
  %1363 = zext i32 %1362 to i64
  %1364 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1363
  %1365 = load i32, i32* %1364, align 4
  %1366 = and i32 %1365, 255
  %1367 = or i32 %1361, %1366
  %1368 = load i32, i32* %1342, align 4
  %1369 = xor i32 %1367, %1368
  %1370 = lshr i32 %1369, 24
  %1371 = trunc i32 %1370 to i8
  store i8 %1371, i8* %3, align 1
  %1372 = lshr i32 %1369, 16
  %1373 = trunc i32 %1372 to i8
  %1374 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %1373, i8* %1374, align 1
  %1375 = lshr i32 %1369, 8
  %1376 = trunc i32 %1375 to i8
  %1377 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %1376, i8* %1377, align 1
  %1378 = trunc i32 %1369 to i8
  %1379 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %1378, i8* %1379, align 1
  %1380 = lshr i32 %.14, 24
  %1381 = zext i32 %1380 to i64
  %1382 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1381
  %1383 = load i32, i32* %1382, align 4
  %1384 = and i32 %1383, -16777216
  %1385 = lshr i32 %.16, 16
  %1386 = and i32 %1385, 255
  %1387 = zext i32 %1386 to i64
  %1388 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1387
  %1389 = load i32, i32* %1388, align 4
  %1390 = and i32 %1389, 16711680
  %1391 = or i32 %1390, %1384
  %1392 = lshr i32 %.1, 8
  %1393 = and i32 %1392, 255
  %1394 = zext i32 %1393 to i64
  %1395 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1394
  %1396 = load i32, i32* %1395, align 4
  %1397 = and i32 %1396, 65280
  %1398 = or i32 %1391, %1397
  %1399 = and i32 %.12, 255
  %1400 = zext i32 %1399 to i64
  %1401 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1400
  %1402 = load i32, i32* %1401, align 4
  %1403 = and i32 %1402, 255
  %1404 = or i32 %1398, %1403
  %1405 = getelementptr inbounds i32, i32* %1342, i64 1
  %1406 = load i32, i32* %1405, align 4
  %1407 = xor i32 %1404, %1406
  %1408 = lshr i32 %1407, 24
  %1409 = trunc i32 %1408 to i8
  %1410 = getelementptr inbounds i8, i8* %3, i64 4
  store i8 %1409, i8* %1410, align 1
  %1411 = lshr i32 %1407, 16
  %1412 = trunc i32 %1411 to i8
  %1413 = getelementptr inbounds i8, i8* %3, i64 5
  store i8 %1412, i8* %1413, align 1
  %1414 = lshr i32 %1407, 8
  %1415 = trunc i32 %1414 to i8
  %1416 = getelementptr inbounds i8, i8* %3, i64 6
  store i8 %1415, i8* %1416, align 1
  %1417 = trunc i32 %1407 to i8
  %1418 = getelementptr inbounds i8, i8* %3, i64 7
  store i8 %1417, i8* %1418, align 1
  %1419 = lshr i32 %.12, 24
  %1420 = zext i32 %1419 to i64
  %1421 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1420
  %1422 = load i32, i32* %1421, align 4
  %1423 = and i32 %1422, -16777216
  %1424 = lshr i32 %.14, 16
  %1425 = and i32 %1424, 255
  %1426 = zext i32 %1425 to i64
  %1427 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1426
  %1428 = load i32, i32* %1427, align 4
  %1429 = and i32 %1428, 16711680
  %1430 = or i32 %1429, %1423
  %1431 = lshr i32 %.16, 8
  %1432 = and i32 %1431, 255
  %1433 = zext i32 %1432 to i64
  %1434 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1433
  %1435 = load i32, i32* %1434, align 4
  %1436 = and i32 %1435, 65280
  %1437 = or i32 %1430, %1436
  %1438 = and i32 %.1, 255
  %1439 = zext i32 %1438 to i64
  %1440 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1439
  %1441 = load i32, i32* %1440, align 4
  %1442 = and i32 %1441, 255
  %1443 = or i32 %1437, %1442
  %1444 = getelementptr inbounds i32, i32* %1342, i64 2
  %1445 = load i32, i32* %1444, align 4
  %1446 = xor i32 %1443, %1445
  %1447 = lshr i32 %1446, 24
  %1448 = trunc i32 %1447 to i8
  %1449 = getelementptr inbounds i8, i8* %3, i64 8
  store i8 %1448, i8* %1449, align 1
  %1450 = lshr i32 %1446, 16
  %1451 = trunc i32 %1450 to i8
  %1452 = getelementptr inbounds i8, i8* %3, i64 9
  store i8 %1451, i8* %1452, align 1
  %1453 = lshr i32 %1446, 8
  %1454 = trunc i32 %1453 to i8
  %1455 = getelementptr inbounds i8, i8* %3, i64 10
  store i8 %1454, i8* %1455, align 1
  %1456 = trunc i32 %1446 to i8
  %1457 = getelementptr inbounds i8, i8* %3, i64 11
  store i8 %1456, i8* %1457, align 1
  %1458 = lshr i32 %.1, 24
  %1459 = zext i32 %1458 to i64
  %1460 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1459
  %1461 = load i32, i32* %1460, align 4
  %1462 = and i32 %1461, -16777216
  %1463 = lshr i32 %.12, 16
  %1464 = and i32 %1463, 255
  %1465 = zext i32 %1464 to i64
  %1466 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1465
  %1467 = load i32, i32* %1466, align 4
  %1468 = and i32 %1467, 16711680
  %1469 = or i32 %1468, %1462
  %1470 = lshr i32 %.14, 8
  %1471 = and i32 %1470, 255
  %1472 = zext i32 %1471 to i64
  %1473 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1472
  %1474 = load i32, i32* %1473, align 4
  %1475 = and i32 %1474, 65280
  %1476 = or i32 %1469, %1475
  %1477 = and i32 %.16, 255
  %1478 = zext i32 %1477 to i64
  %1479 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1478
  %1480 = load i32, i32* %1479, align 4
  %1481 = and i32 %1480, 255
  %1482 = or i32 %1476, %1481
  %1483 = getelementptr inbounds i32, i32* %1342, i64 3
  %1484 = load i32, i32* %1483, align 4
  %1485 = xor i32 %1482, %1484
  %1486 = lshr i32 %1485, 24
  %1487 = trunc i32 %1486 to i8
  %1488 = getelementptr inbounds i8, i8* %3, i64 12
  store i8 %1487, i8* %1488, align 1
  %1489 = lshr i32 %1485, 16
  %1490 = trunc i32 %1489 to i8
  %1491 = getelementptr inbounds i8, i8* %3, i64 13
  store i8 %1490, i8* %1491, align 1
  %1492 = lshr i32 %1485, 8
  %1493 = trunc i32 %1492 to i8
  %1494 = getelementptr inbounds i8, i8* %3, i64 14
  store i8 %1493, i8* %1494, align 1
  %1495 = trunc i32 %1485 to i8
  %1496 = getelementptr inbounds i8, i8* %3, i64 15
  store i8 %1495, i8* %1496, align 1
  ret void
}

define void @randombytes(i8* nocapture %0, i64 %N, i64 %1) local_unnamed_addr {
  %3 = icmp sgt i64 %1, -1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.randombytes, i64 0, i64 0)) #8
  unreachable

5:                                                ; preds = %2
  %6 = load i32, i32* @randombytes.fd, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %5
  %8 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %8, i32* @randombytes.fd, align 4
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %.lr.ph7, label %.loopexit

.lr.ph7:                                          ; preds = %.preheader, %91
  %10 = call i32 @sleep(i32 1)
  %11 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %11, i32* @randombytes.fd, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %67, label %.loopexit

.loopexit:                                        ; preds = %91, %87, %83, %79, %75, %71, %67, %.lr.ph7, %.preheader, %5
  %13 = icmp sgt i64 %1, 0
  br i1 %13, label %.lr.ph, label %.outer._crit_edge

.lr.ph:                                           ; preds = %.loopexit, %.outer
  %14 = phi i1 [ %24, %.outer ], [ %13, %.loopexit ]
  %.0.ph6 = phi i8* [ %22, %.outer ], [ %0, %.loopexit ]
  %.01.ph5 = phi i64 [ %23, %.outer ], [ %1, %.loopexit ]
  %15 = icmp slt i64 %.01.ph5, 1048576
  %.01. = select i1 %15, i64 %.01.ph5, i64 1048576
  br label %16

16:                                               ; preds = %65, %.lr.ph
  %17 = load i32, i32* @randombytes.fd, align 4
  %18 = call i64 @read(i32 %17, i8* %.0.ph6, i64 %.01.)
  %19 = icmp slt i64 %18, 1
  br i1 %19, label %20, label %.outer

20:                                               ; preds = %16
  %21 = call i32 @sleep(i32 1)
  br i1 %14, label %25, label %.outer._crit_edge

.outer:                                           ; preds = %61, %55, %49, %43, %37, %31, %25, %16
  %.lcssa = phi i64 [ %18, %16 ], [ %27, %25 ], [ %33, %31 ], [ %39, %37 ], [ %45, %43 ], [ %51, %49 ], [ %57, %55 ], [ %63, %61 ]
  %22 = getelementptr inbounds i8, i8* %.0.ph6, i64 %.lcssa
  %23 = sub nsw i64 %.01.ph5, %.lcssa
  %24 = icmp sgt i64 %23, 0
  br i1 %24, label %.lr.ph, label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer, %20, %29, %35, %41, %47, %53, %59, %65, %.loopexit
  ret void

25:                                               ; preds = %20
  %26 = load i32, i32* @randombytes.fd, align 4
  %27 = call i64 @read(i32 %26, i8* %.0.ph6, i64 %.01.)
  %28 = icmp slt i64 %27, 1
  br i1 %28, label %29, label %.outer

29:                                               ; preds = %25
  %30 = call i32 @sleep(i32 1)
  br i1 %14, label %31, label %.outer._crit_edge

31:                                               ; preds = %29
  %32 = load i32, i32* @randombytes.fd, align 4
  %33 = call i64 @read(i32 %32, i8* %.0.ph6, i64 %.01.)
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %35, label %.outer

35:                                               ; preds = %31
  %36 = call i32 @sleep(i32 1)
  br i1 %14, label %37, label %.outer._crit_edge

37:                                               ; preds = %35
  %38 = load i32, i32* @randombytes.fd, align 4
  %39 = call i64 @read(i32 %38, i8* %.0.ph6, i64 %.01.)
  %40 = icmp slt i64 %39, 1
  br i1 %40, label %41, label %.outer

41:                                               ; preds = %37
  %42 = call i32 @sleep(i32 1)
  br i1 %14, label %43, label %.outer._crit_edge

43:                                               ; preds = %41
  %44 = load i32, i32* @randombytes.fd, align 4
  %45 = call i64 @read(i32 %44, i8* %.0.ph6, i64 %.01.)
  %46 = icmp slt i64 %45, 1
  br i1 %46, label %47, label %.outer

47:                                               ; preds = %43
  %48 = call i32 @sleep(i32 1)
  br i1 %14, label %49, label %.outer._crit_edge

49:                                               ; preds = %47
  %50 = load i32, i32* @randombytes.fd, align 4
  %51 = call i64 @read(i32 %50, i8* %.0.ph6, i64 %.01.)
  %52 = icmp slt i64 %51, 1
  br i1 %52, label %53, label %.outer

53:                                               ; preds = %49
  %54 = call i32 @sleep(i32 1)
  br i1 %14, label %55, label %.outer._crit_edge

55:                                               ; preds = %53
  %56 = load i32, i32* @randombytes.fd, align 4
  %57 = call i64 @read(i32 %56, i8* %.0.ph6, i64 %.01.)
  %58 = icmp slt i64 %57, 1
  br i1 %58, label %59, label %.outer

59:                                               ; preds = %55
  %60 = call i32 @sleep(i32 1)
  br i1 %14, label %61, label %.outer._crit_edge

61:                                               ; preds = %59
  %62 = load i32, i32* @randombytes.fd, align 4
  %63 = call i64 @read(i32 %62, i8* %.0.ph6, i64 %.01.)
  %64 = icmp slt i64 %63, 1
  br i1 %64, label %65, label %.outer

65:                                               ; preds = %61
  %66 = call i32 @sleep(i32 1)
  br i1 %14, label %16, label %.outer._crit_edge, !llvm.loop !4

67:                                               ; preds = %.lr.ph7
  %68 = call i32 @sleep(i32 1)
  %69 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %69, i32* @randombytes.fd, align 4
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %.loopexit

71:                                               ; preds = %67
  %72 = call i32 @sleep(i32 1)
  %73 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %73, i32* @randombytes.fd, align 4
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %75, label %.loopexit

75:                                               ; preds = %71
  %76 = call i32 @sleep(i32 1)
  %77 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %77, i32* @randombytes.fd, align 4
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %79, label %.loopexit

79:                                               ; preds = %75
  %80 = call i32 @sleep(i32 1)
  %81 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %81, i32* @randombytes.fd, align 4
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %83, label %.loopexit

83:                                               ; preds = %79
  %84 = call i32 @sleep(i32 1)
  %85 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %85, i32* @randombytes.fd, align 4
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %87, label %.loopexit

87:                                               ; preds = %83
  %88 = call i32 @sleep(i32 1)
  %89 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %89, i32* @randombytes.fd, align 4
  %90 = icmp eq i32 %89, -1
  br i1 %90, label %91, label %.loopexit

91:                                               ; preds = %87
  %92 = call i32 @sleep(i32 1)
  %93 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %93, i32* @randombytes.fd, align 4
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %.lr.ph7, label %.loopexit, !llvm.loop !6
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) local_unnamed_addr #5

; Function Attrs: nofree
declare i32 @open(i8* nocapture readonly, i32, ...) local_unnamed_addr #6

declare i32 @sleep(i32) local_unnamed_addr #7

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local zeroext i8 @randombit() local_unnamed_addr #0 {
  %1 = alloca i8, align 1
  store i8 0, i8* %1, align 1
  call void @randombytes(i8* nonnull %1, i64 undef, i64 1) #3
  %2 = load i8, i8* %1, align 1
  %3 = and i8 %2, 1
  ret i8 %3
}

attributes #0 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nofree norecurse nounwind }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }

!llvm.ident = !{!0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
