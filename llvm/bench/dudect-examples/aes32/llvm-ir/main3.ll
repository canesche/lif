; ModuleID = 'dudect-examples/aes32/llvm-ir/main3.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@chunk_size = dso_local constant i64 16, align 8
@number_measurements = dso_local constant i64 1, align 8
@__const.main.input_data = private unnamed_addr constant [16 x i8] c".\B1\C9!#S\97\FA\E2\19\9Ee\99\F6d\C5", align 16
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@rk = internal global [44 x i32] zeroinitializer, align 16
@Te0 = internal global [256 x i32] [i32 -966564955, i32 -126059388, i32 -294160487, i32 -159679603, i32 -855539, i32 -697603139, i32 -563122255, i32 -1849309868, i32 1613770832, i32 33620227, i32 -832084055, i32 1445669757, i32 -402719207, i32 -1244145822, i32 1303096294, i32 -327780710, i32 -1882535355, i32 528646813, i32 -1983264448, i32 -92439161, i32 -268764651, i32 -1302767125, i32 -1907931191, i32 -68095989, i32 1101901292, i32 -1277897625, i32 1604494077, i32 1169141738, i32 597466303, i32 1403299063, i32 -462261610, i32 -1681866661, i32 1974974402, i32 -503448292, i32 1033081774, i32 1277568618, i32 1815492186, i32 2118074177, i32 -168298750, i32 -2083730353, i32 1748251740, i32 1369810420, i32 -773462732, i32 -101584632, i32 -495881837, i32 -1411852173, i32 1647391059, i32 706024767, i32 134480908, i32 -1782069422, i32 1176707941, i32 -1648114850, i32 806885416, i32 932615841, i32 168101135, i32 798661301, i32 235341577, i32 605164086, i32 461406363, i32 -538779075, i32 -840176858, i32 1311188841, i32 2142417613, i32 -361400929, i32 302582043, i32 495158174, i32 1479289972, i32 874125870, i32 907746093, i32 -596742478, i32 -1269146898, i32 1537253627, i32 -1538108682, i32 1983593293, i32 -1210657183, i32 2108928974, i32 1378429307, i32 -572267714, i32 1580150641, i32 327451799, i32 -1504488459, i32 -1177431704, i32 0, i32 -1041371860, i32 1075847264, i32 -469959649, i32 2041688520, i32 -1235526675, i32 -731223362, i32 -1916023994, i32 1740553945, i32 1916352843, i32 -1807070498, i32 -1739830060, i32 -1336387352, i32 -2049978550, i32 -1143943061, i32 -974131414, i32 1336584933, i32 -302253290, i32 -2042412091, i32 -1706209833, i32 1714631509, i32 293963156, i32 -1975171633, i32 -369493744, i32 67240454, i32 -25198719, i32 -1605349136, i32 2017213508, i32 631218106, i32 1269344483, i32 -1571728909, i32 1571005438, i32 -2143272768, i32 93294474, i32 1066570413, i32 563977660, i32 1882732616, i32 -235539196, i32 1673313503, i32 2008463041, i32 -1344611723, i32 1109467491, i32 537923632, i32 -436207846, i32 -34344178, i32 -1076702611, i32 -2117218996, i32 403442708, i32 638784309, i32 -1007883217, i32 -1101045791, i32 899127202, i32 -2008791860, i32 773265209, i32 -1815821225, i32 1437050866, i32 -58818942, i32 2050833735, i32 -932944724, i32 -1168286233, i32 840505643, i32 -428641387, i32 -1067425632, i32 427917720, i32 -1638969391, i32 -1545806721, i32 1143087718, i32 1412049534, i32 999329963, i32 193497219, i32 -1941551414, i32 -940642775, i32 1807268051, i32 672404540, i32 -1478566279, i32 -1134666014, i32 369822493, i32 -1378100362, i32 -606019525, i32 1681011286, i32 1949973070, i32 336202270, i32 -1840690725, i32 201721354, i32 1210328172, i32 -1201906460, i32 -1614626211, i32 -1110191250, i32 1135389935, i32 -1000185178, i32 965841320, i32 831886756, i32 -739974089, i32 -226920053, i32 -706222286, i32 -1949775805, i32 104281945, i32 -630362697, i32 26054028, i32 -1311386268, i32 -1672589614, i32 1235855840, i32 -663982924, i32 -1403627782, i32 -202050553, i32 -806688219, i32 -899324497, i32 -193299826, i32 1202630377, i32 268961816, i32 1874508501, i32 -260540280, i32 1243948399, i32 1546530418, i32 941366308, i32 1470539505, i32 1941222599, i32 -1748580783, i32 -873928669, i32 -1579295364, i32 -395021156, i32 1042226977, i32 -1773450275, i32 1639824860, i32 227249030, i32 260737669, i32 -529502064, i32 2084453954, i32 1907733956, i32 -865704278, i32 -1874310952, i32 100860677, i32 -134810111, i32 470683154, i32 -1033805405, i32 1781871967, i32 -1370007559, i32 1773779408, i32 394692241, i32 -1715355304, i32 974986535, i32 664706745, i32 -639508168, i32 -336005101, i32 731420851, i32 571543859, i32 -764843589, i32 -1445340816, i32 126783113, i32 865375399, i32 765172662, i32 1008606754, i32 361203602, i32 -907417312, i32 -2016489911, i32 -1437248001, i32 1344809080, i32 -1512054918, i32 59542671, i32 1503764984, i32 160008576, i32 437062935, i32 1707065306, i32 -672733647, i32 -2076032314, i32 -798463816, i32 -2109652541, i32 697932208, i32 1512910199, i32 504303377, i32 2075177163, i32 -1470868228, i32 1841019862, i32 739644986], align 16
@Te1 = internal global [256 x i32] [i32 -1513725085, i32 -2064089988, i32 -1712425097, i32 -1913226373, i32 234877682, i32 -1110021269, i32 -1310822545, i32 1418839493, i32 1348481072, i32 50462977, i32 -1446090905, i32 2102799147, i32 434634494, i32 1656084439, i32 -431117397, i32 -1695779210, i32 1167051466, i32 -1658879358, i32 1082771913, i32 -2013627011, i32 368048890, i32 -340633255, i32 -913422521, i32 201060592, i32 -331240019, i32 1739838676, i32 -44064094, i32 -364531793, i32 -1088185188, i32 -145513308, i32 -1763413390, i32 1536934080, i32 -1032472649, i32 484572669, i32 -1371696237, i32 1783375398, i32 1517041206, i32 1098792767, i32 49674231, i32 1334037708, i32 1550332980, i32 -195975771, i32 886171109, i32 150598129, i32 -1813876367, i32 1940642008, i32 1398944049, i32 1059722517, i32 201851908, i32 1385547719, i32 1699095331, i32 1587397571, i32 674240536, i32 -1590192490, i32 252314885, i32 -1255171430, i32 151914247, i32 908333586, i32 -1692696448, i32 1038082786, i32 651029483, i32 1766729511, i32 -847269198, i32 -1612024459, i32 454166793, i32 -1642232957, i32 1951935532, i32 775166490, i32 758520603, i32 -1294176658, i32 -290170278, i32 -77881184, i32 -157003182, i32 1299594043, i32 1639438038, i32 -830622797, i32 2068982057, i32 1054729187, i32 1901997871, i32 -1760328572, i32 -173649069, i32 1757008337, i32 0, i32 750906861, i32 1614815264, i32 535035132, i32 -931548751, i32 -306816165, i32 -1093375382, i32 1183697867, i32 -647512386, i32 1265776953, i32 -560706998, i32 -728216500, i32 -391096232, i32 1250283471, i32 1807470800, i32 717615087, i32 -447763798, i32 384695291, i32 -981056701, i32 -677753523, i32 1432761139, i32 -1810791035, i32 -813021883, i32 283769337, i32 100925954, i32 -2114027649, i32 -257929136, i32 1148730428, i32 -1171939425, i32 -481580888, i32 -207466159, i32 -27417693, i32 -1065336768, i32 -1979347057, i32 -1388342638, i32 -1138647651, i32 1215313976, i32 82966005, i32 -547111748, i32 -1049119050, i32 1974459098, i32 1665278241, i32 807407632, i32 451280895, i32 251524083, i32 1841287890, i32 1283575245, i32 337120268, i32 891687699, i32 801369324, i32 -507617441, i32 -1573546089, i32 -863484860, i32 959321879, i32 1469301956, i32 -229267545, i32 -2097381762, i32 1199193405, i32 -1396153244, i32 -407216803, i32 724703513, i32 -1780059277, i32 -1598005152, i32 -1743158911, i32 -778154161, i32 2141445340, i32 1715741218, i32 2119445034, i32 -1422159728, i32 -2096396152, i32 -896776634, i32 700968686, i32 -747915080, i32 1009259540, i32 2041044702, i32 -490971554, i32 487983883, i32 1991105499, i32 1004265696, i32 1449407026, i32 1316239930, i32 504629770, i32 -611169975, i32 168560134, i32 1816667172, i32 -457679780, i32 1570751170, i32 1857934291, i32 -280777556, i32 -1497079198, i32 -1472622191, i32 -1540254315, i32 936633572, i32 -1947043463, i32 852879335, i32 1133234376, i32 1500395319, i32 -1210421907, i32 -1946055283, i32 1689376213, i32 -761508274, i32 -532043351, i32 -1260884884, i32 -89369002, i32 133428468, i32 634383082, i32 -1345690267, i32 -1896580486, i32 -381178194, i32 403703816, i32 -714097990, i32 -1997506440, i32 1867130149, i32 1918643758, i32 607656988, i32 -245913946, i32 -948718412, i32 1368901318, i32 600565992, i32 2090982877, i32 -1662487436, i32 557719327, i32 -577352885, i32 -597574211, i32 -2045932661, i32 -2062579062, i32 -1864339344, i32 1115438654, i32 -999180875, i32 -1429445018, i32 -661632952, i32 84280067, i32 33027830, i32 303828494, i32 -1547542175, i32 1600795957, i32 -106014889, i32 -798377543, i32 -1860729210, i32 1486471617, i32 658119965, i32 -1188585826, i32 953803233, i32 334231800, i32 -1288988520, i32 857870609, i32 -1143838359, i32 1890179545, i32 -1995993458, i32 -1489791852, i32 -1238525029, i32 574365214, i32 -1844082809, i32 550103529, i32 1233637070, i32 -5614251, i32 2018519080, i32 2057691103, i32 -1895592820, i32 -128343647, i32 -2146858615, i32 387583245, i32 -630865985, i32 836232934, i32 -964410814, i32 -1194301336, i32 -1014873791, i32 -1339450983, i32 2002398509, i32 287182607, i32 -881086288, i32 -56077228, i32 -697451589, i32 975967766], align 16
@Te2 = internal global [256 x i32] [i32 1671808611, i32 2089089148, i32 2006576759, i32 2072901243, i32 -233963534, i32 1807603307, i32 1873927791, i32 -984313403, i32 810573872, i32 16974337, i32 1739181671, i32 729634347, i32 -31856642, i32 -681396777, i32 -1410970197, i32 1989864566, i32 -901410870, i32 -2103631998, i32 -918517303, i32 2106063485, i32 -99225606, i32 1508618841, i32 1204391495, i32 -267650064, i32 -1377025619, i32 -731401260, i32 -1560453214, i32 -1343601233, i32 -1665195108, i32 -1527295068, i32 1922491506, i32 -1067738176, i32 -1211992649, i32 -48438787, i32 -1817297517, i32 644500518, i32 911895606, i32 1061256767, i32 -150800905, i32 -867204148, i32 878471220, i32 -1510714971, i32 -449523227, i32 -251069967, i32 1905517169, i32 -663508008, i32 827548209, i32 356461077, i32 67897348, i32 -950889017, i32 593839651, i32 -1017209405, i32 405286936, i32 -1767819370, i32 84871685, i32 -1699401830, i32 118033927, i32 305538066, i32 -2137318528, i32 -499261470, i32 -349778453, i32 661212711, i32 -1295155278, i32 1973414517, i32 152769033, i32 -2086789757, i32 745822252, i32 439235610, i32 455947803, i32 1857215598, i32 1525593178, i32 -1594139744, i32 1391895634, i32 994932283, i32 -698239018, i32 -1278313037, i32 695947817, i32 -482419229, i32 795958831, i32 -2070473852, i32 1408607827, i32 -781665839, i32 0, i32 -315833875, i32 543178784, i32 -65018884, i32 -1312261711, i32 1542305371, i32 1790891114, i32 -884568629, i32 -1093048386, i32 961245753, i32 1256100938, i32 1289001036, i32 1491644504, i32 -817199665, i32 -798245936, i32 -282409489, i32 -1427812438, i32 -82383365, i32 1137018435, i32 1305975373, i32 861234739, i32 -2053893755, i32 1171229253, i32 -116332039, i32 33948674, i32 2139225727, i32 1357946960, i32 1011120188, i32 -1615190625, i32 -1461498968, i32 1374921297, i32 -1543610973, i32 1086357568, i32 -1886780017, i32 -1834139758, i32 -1648615011, i32 944271416, i32 -184225291, i32 -1126210628, i32 -1228834890, i32 -629821478, i32 560153121, i32 271589392, i32 -15014401, i32 -217121293, i32 -764559406, i32 -850624051, i32 202643468, i32 322250259, i32 -332413972, i32 1608629855, i32 -1750977129, i32 1154254916, i32 389623319, i32 -1000893500, i32 -1477290585, i32 2122513534, i32 1028094525, i32 1689045092, i32 1575467613, i32 422261273, i32 1939203699, i32 1621147744, i32 -2120738431, i32 1339137615, i32 -595614756, i32 577127458, i32 712922154, i32 -1867826288, i32 -2004677752, i32 1187679302, i32 -299251730, i32 -1194103880, i32 339486740, i32 -562452514, i32 1591917662, i32 186455563, i32 -612979237, i32 -532948000, i32 844522546, i32 978220090, i32 169743370, i32 1239126601, i32 101321734, i32 611076132, i32 1558493276, i32 -1034051646, i32 -747717165, i32 -1393605716, i32 1655096418, i32 -1851246191, i32 -1784401515, i32 -466103324, i32 2039214713, i32 -416098841, i32 -935097400, i32 928607799, i32 1840765549, i32 -1920204403, i32 -714821163, i32 1322425422, i32 -1444918871, i32 1823791212, i32 1459268694, i32 -200805388, i32 -366620694, i32 1706019429, i32 2056189050, i32 -1360443474, i32 135794696, i32 -1160417350, i32 2022240376, i32 628050469, i32 779246638, i32 472135708, i32 -1494132826, i32 -1261997132, i32 -967731258, i32 -400307224, i32 -579034659, i32 1956440180, i32 522272287, i32 1272813131, i32 -1109630531, i32 -1954148981, i32 -1970991222, i32 1888542832, i32 1044544574, i32 -1245417035, i32 1722469478, i32 1222152264, i32 50660867, i32 -167643146, i32 236067854, i32 1638122081, i32 895445557, i32 1475980887, i32 -1177523783, i32 -2037311610, i32 -1051158079, i32 489110045, i32 -1632032866, i32 -516367903, i32 -132912136, i32 -1733088360, i32 288563729, i32 1773916777, i32 -646927911, i32 -1903622258, i32 -1800981612, i32 -1682559589, i32 505560094, i32 -2020469369, i32 -383727127, i32 -834041906, i32 1442818645, i32 678973480, i32 -545610273, i32 -1936784500, i32 -1577559647, i32 -1988097655, i32 219617805, i32 -1076206145, i32 -432941082, i32 1120306242, i32 1756942440, i32 1103331905, i32 -1716508263, i32 762796589, i32 252780047, i32 -1328841808, i32 1425844308, i32 -1143575109, i32 372911126], align 16
@Te3 = internal global [256 x i32] [i32 1667474886, i32 2088535288, i32 2004326894, i32 2071694838, i32 -219017729, i32 1802223062, i32 1869591006, i32 -976923503, i32 808472672, i32 16843522, i32 1734846926, i32 724270422, i32 -16901657, i32 -673750347, i32 -1414797747, i32 1987484396, i32 -892713585, i32 -2105369313, i32 -909557623, i32 2105378810, i32 -84273681, i32 1499065266, i32 1195886990, i32 -252703749, i32 -1381110719, i32 -724277325, i32 -1566376609, i32 -1347425723, i32 -1667449053, i32 -1532692653, i32 1920112356, i32 -1061135461, i32 -1212693899, i32 -33743647, i32 -1819038147, i32 640051788, i32 909531756, i32 1061110142, i32 -134806795, i32 -859025533, i32 875846760, i32 -1515850671, i32 -437963567, i32 -235861767, i32 1903268834, i32 -656903253, i32 825316194, i32 353713962, i32 67374088, i32 -943238507, i32 589522246, i32 -1010606435, i32 404236336, i32 -1768513225, i32 84217610, i32 -1701137105, i32 117901582, i32 303183396, i32 -2139055333, i32 -488489505, i32 -336910643, i32 656894286, i32 -1296904833, i32 1970642922, i32 151591698, i32 -2088526307, i32 741110872, i32 437923380, i32 454765878, i32 1852748508, i32 1515908788, i32 -1600062629, i32 1381168804, i32 993742198, i32 -690593353, i32 -1280061827, i32 690584402, i32 -471646499, i32 791638366, i32 -2071685357, i32 1398011302, i32 -774805319, i32 0, i32 -303223615, i32 538992704, i32 -50585629, i32 -1313748871, i32 1532751286, i32 1785380564, i32 -875870579, i32 -1094788761, i32 960056178, i32 1246420628, i32 1280103576, i32 1482221744, i32 -808498555, i32 -791647301, i32 -269538619, i32 -1431640753, i32 -67430675, i32 1128514950, i32 1296947098, i32 859002214, i32 -2054843375, i32 1162203018, i32 -101117719, i32 33687044, i32 2139062782, i32 1347481760, i32 1010582648, i32 -1616922075, i32 -1465326773, i32 1364325282, i32 -1549533603, i32 1077985408, i32 -1886418427, i32 -1835881153, i32 -1650607071, i32 943212656, i32 -168491791, i32 -1128472733, i32 -1229536905, i32 -623217233, i32 555836226, i32 269496352, i32 -58651, i32 -202174723, i32 -757961281, i32 -842183551, i32 202118168, i32 320025894, i32 -320065597, i32 1600119230, i32 -1751670219, i32 1145359496, i32 387397934, i32 -993765485, i32 -1482165675, i32 2122220284, i32 1027426170, i32 1684319432, i32 1566435258, i32 421079858, i32 1936954854, i32 1616945344, i32 -2122213351, i32 1330631070, i32 -589529181, i32 572679748, i32 707427924, i32 -1869567173, i32 -2004319477, i32 1179044492, i32 -286381625, i32 -1195846805, i32 336870440, i32 -555845209, i32 1583276732, i32 185277718, i32 -606374227, i32 -522175525, i32 842159716, i32 976899700, i32 168435220, i32 1229577106, i32 101059084, i32 606366792, i32 1549591736, i32 -1027449441, i32 -741118275, i32 -1397952701, i32 1650632388, i32 -1852725191, i32 -1785355215, i32 -454805549, i32 2038008818, i32 -404278571, i32 -926399605, i32 926374254, i32 1835907034, i32 -1920103423, i32 -707435343, i32 1313788572, i32 -1448484791, i32 1819063512, i32 1448540844, i32 -185333773, i32 -353753649, i32 1701162954, i32 2054852340, i32 -1364268729, i32 134748176, i32 -1162160785, i32 2021165296, i32 623210314, i32 774795868, i32 471606328, i32 -1499008681, i32 -1263220877, i32 -960081513, i32 -387439669, i32 -572687199, i32 1953799400, i32 522133822, i32 1263263126, i32 -1111630751, i32 -1953790451, i32 -1970633457, i32 1886425312, i32 1044267644, i32 -1246378895, i32 1718004428, i32 1212733584, i32 50529542, i32 -151649801, i32 235803164, i32 1633788866, i32 892690282, i32 1465383342, i32 -1179004823, i32 -2038001385, i32 -1044293479, i32 488449850, i32 -1633765081, i32 -505333543, i32 -117959701, i32 -1734823125, i32 286339874, i32 1768537042, i32 -640061271, i32 -1903261433, i32 -1802197197, i32 -1684294099, i32 505291324, i32 -2021158379, i32 -370597687, i32 -825341561, i32 1431699370, i32 673740880, i32 -539002203, i32 -1936945405, i32 -1583220647, i32 -1987477495, i32 218961690, i32 -1077945755, i32 -421121577, i32 1111672452, i32 1751693520, i32 1094828930, i32 -1717981143, i32 757954394, i32 252645662, i32 -1330590853, i32 1414855848, i32 -1145317779, i32 370555436], align 16
@Te4 = internal global [256 x i32] [i32 1667457891, i32 2088533116, i32 2004318071, i32 2071690107, i32 -218959118, i32 1802201963, i32 1869573999, i32 -976894523, i32 808464432, i32 16843009, i32 1734829927, i32 724249387, i32 -16843010, i32 -673720361, i32 -1414812757, i32 1987475062, i32 -892679478, i32 -2105376126, i32 -909522487, i32 2105376125, i32 -84215046, i32 1499027801, i32 1195853639, i32 -252645136, i32 -1381126739, i32 -724249388, i32 -1566399838, i32 -1347440721, i32 -1667457892, i32 -1532713820, i32 1920103026, i32 -1061109568, i32 -1212696649, i32 -33686019, i32 -1819044973, i32 640034342, i32 909522486, i32 1061109567, i32 -134744073, i32 -858993460, i32 875836468, i32 -1515870811, i32 -437918235, i32 -235802127, i32 1903260017, i32 -656877352, i32 825307441, i32 353703189, i32 67372036, i32 -943208505, i32 589505315, i32 -1010580541, i32 404232216, i32 -1768515946, i32 84215045, i32 -1701143910, i32 117901063, i32 303174162, i32 -2139062144, i32 -488447262, i32 -336860181, i32 656877351, i32 -1296911694, i32 1970632053, i32 151587081, i32 -2088533117, i32 741092396, i32 437918234, i32 454761243, i32 1852730990, i32 1515870810, i32 -1600085856, i32 1381126738, i32 993737531, i32 -690563370, i32 -1280068685, i32 690563369, i32 -471604253, i32 791621423, i32 -2071690108, i32 1397969747, i32 -774778415, i32 0, i32 -303174163, i32 538976288, i32 -50529028, i32 -1313754703, i32 1532713819, i32 1785358954, i32 -875836469, i32 -1094795586, i32 960051513, i32 1246382666, i32 1280068684, i32 1482184792, i32 -808464433, i32 -791621424, i32 -269488145, i32 -1431655766, i32 -67372037, i32 1128481603, i32 1296911693, i32 858993459, i32 -2054847099, i32 1162167621, i32 -101058055, i32 33686018, i32 2139062143, i32 1347440720, i32 1010580540, i32 -1616928865, i32 -1465341784, i32 1364283729, i32 -1549556829, i32 1077952576, i32 -1886417009, i32 -1835887982, i32 -1650614883, i32 943208504, i32 -168430091, i32 -1128481604, i32 -1229539658, i32 -623191334, i32 555819297, i32 269488144, i32 -1, i32 -202116109, i32 -757935406, i32 -842150451, i32 202116108, i32 320017171, i32 -320017172, i32 1600085855, i32 -1751672937, i32 1145324612, i32 387389207, i32 -993737532, i32 -1482184793, i32 2122219134, i32 1027423549, i32 1684300900, i32 1566399837, i32 421075225, i32 1936946035, i32 1616928864, i32 -2122219135, i32 1330597711, i32 -589505316, i32 572662306, i32 707406378, i32 -1869574000, i32 -2004318072, i32 1179010630, i32 -286331154, i32 -1195853640, i32 336860180, i32 -555819298, i32 1583242846, i32 185273099, i32 -606348325, i32 -522133280, i32 842150450, i32 976894522, i32 168430090, i32 1229539657, i32 101058054, i32 606348324, i32 1549556828, i32 -1027423550, i32 -741092397, i32 -1397969748, i32 1650614882, i32 -1852730991, i32 -1785358955, i32 -454761244, i32 2038004089, i32 -404232217, i32 -926365496, i32 926365495, i32 1835887981, i32 -1920103027, i32 -707406379, i32 1313754702, i32 -1448498775, i32 1819044972, i32 1448498774, i32 -185273100, i32 -353703190, i32 1701143909, i32 2054847098, i32 -1364283730, i32 134744072, i32 -1162167622, i32 2021161080, i32 623191333, i32 774778414, i32 471604252, i32 -1499027802, i32 -1263225676, i32 -960051514, i32 -387389208, i32 -572662307, i32 1953789044, i32 522133279, i32 1263225675, i32 -1111638595, i32 -1953789045, i32 -1970632054, i32 1886417008, i32 1044266558, i32 -1246382667, i32 1717986918, i32 1212696648, i32 50529027, i32 -151587082, i32 235802126, i32 1633771873, i32 892679477, i32 1465341783, i32 -1179010631, i32 -2038004090, i32 -1044266559, i32 488447261, i32 -1633771874, i32 -505290271, i32 -117901064, i32 -1734829928, i32 286331153, i32 1768515945, i32 -640034343, i32 -1903260018, i32 -1802201964, i32 -1684300901, i32 505290270, i32 -2021161081, i32 -370546199, i32 -825307442, i32 1431655765, i32 673720360, i32 -538976289, i32 -1936946036, i32 -1583242847, i32 -1987475063, i32 218959117, i32 -1077952577, i32 -421075226, i32 1111638594, i32 1751672936, i32 1094795585, i32 -1717986919, i32 757935405, i32 252645135, i32 -1330597712, i32 1414812756, i32 -1145324613, i32 370546198], align 16
@rcon = internal constant [10 x i32] [i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 16
@Td0 = internal constant [256 x i32] [i32 1374988112, i32 2118214995, i32 437757123, i32 975658646, i32 1001089995, i32 530400753, i32 -1392879445, i32 1273168787, i32 540080725, i32 -1384747530, i32 -1999866223, i32 -184398811, i32 1340463100, i32 -987051049, i32 641025152, i32 -1251826801, i32 -558802359, i32 632953703, i32 1172967064, i32 1576976609, i32 -1020300030, i32 -2125664238, i32 -1924753501, i32 1809054150, i32 59727847, i32 361929877, i32 -1083344149, i32 -1789765158, i32 -725712083, i32 1484005843, i32 1239443753, i32 -1899378620, i32 1975683434, i32 -191989384, i32 -1722270101, i32 666464733, i32 -1092530250, i32 -259478249, i32 -920605594, i32 2110667444, i32 1675577880, i32 -451268222, i32 -1756286112, i32 1649639237, i32 -1318815776, i32 -1150570876, i32 -25059300, i32 -116905068, i32 1883793496, i32 -1891238631, i32 -1797362553, i32 1383856311, i32 -1418472669, i32 1917518562, i32 -484470953, i32 1716890410, i32 -1293211641, i32 800440835, i32 -2033878118, i32 -751368027, i32 807962610, i32 599762354, i32 33778362, i32 -317291940, i32 -1966138325, i32 -1485196142, i32 -217582864, i32 1315562145, i32 1708848333, i32 101039829, i32 -785096161, i32 -995688822, i32 875451293, i32 -1561111136, i32 92987698, i32 -1527321739, i32 193195065, i32 1080094634, i32 1584504582, i32 -1116860335, i32 1042385657, i32 -1763899843, i32 -583137874, i32 1306967366, i32 -1856729675, i32 1908694277, i32 67556463, i32 1615861247, i32 429456164, i32 -692196969, i32 -1992277044, i32 1742315127, i32 -1326955843, i32 126454664, i32 -417768648, i32 2043211483, i32 -1585706425, i32 2084704233, i32 -125559095, i32 0, i32 159417987, i32 841739592, i32 504459436, i32 1817866830, i32 -49348613, i32 260388950, i32 1034867998, i32 908933415, i32 168810852, i32 1750902305, i32 -1688513327, i32 607530554, i32 202008497, i32 -1822955761, i32 -1259432238, i32 463180190, i32 -2134850225, i32 1641816226, i32 1517767529, i32 470948374, i32 -493635062, i32 -1063245083, i32 1008918595, i32 303765277, i32 235474187, i32 -225720403, i32 766945465, i32 337553864, i32 1475418501, i32 -1351284916, i32 -291906117, i32 -1551933187, i32 -150919521, i32 1551037884, i32 1147550661, i32 1543208500, i32 -1958532746, i32 -886847780, i32 -1225917336, i32 -1192955549, i32 -684598070, i32 1113818384, i32 328671808, i32 -2067394272, i32 -2058738563, i32 -759480840, i32 -1359400431, i32 -953573011, i32 496906059, i32 -592301837, i32 226906860, i32 2009195472, i32 733156972, i32 -1452230247, i32 294930682, i32 1206477858, i32 -1459843900, i32 -1594867942, i32 1451044056, i32 573804783, i32 -2025238841, i32 -650587711, i32 -1932877058, i32 -1730933962, i32 -1493859889, i32 -1518674392, i32 -625504730, i32 1068351396, i32 742039012, i32 1350078989, i32 1784663195, i32 1417561698, i32 -158526526, i32 -1864845080, i32 775550814, i32 -2101104651, i32 -1621262146, i32 1775276924, i32 1876241833, i32 -819653965, i32 -928212677, i32 270040487, i32 -392404114, i32 -616842373, i32 -853116919, i32 1851332852, i32 -325404927, i32 -2091935064, i32 -426414491, i32 -1426069890, i32 566021896, i32 -283776794, i32 -1159226407, i32 1248802510, i32 -358676012, i32 699432150, i32 832877231, i32 708780849, i32 -962227152, i32 899835584, i32 1951317047, i32 -58537306, i32 -527380304, i32 866637845, i32 -251357110, i32 1106041591, i32 2144161806, i32 395441711, i32 1984812685, i32 1139781709, i32 -861254316, i32 -459930401, i32 -1630423581, i32 1282050075, i32 -1054072904, i32 1181045119, i32 -1654724092, i32 25965917, i32 -91786125, i32 -83148498, i32 -1285087910, i32 -1831087534, i32 -384805325, i32 1842759443, i32 -1697160820, i32 933301370, i32 1509430414, i32 -351060855, i32 -827774994, i32 -1218328267, i32 -518199827, i32 2051518780, i32 -1663901863, i32 1441952575, i32 404016761, i32 1942435775, i32 1408749034, i32 1610459739, i32 -549621996, i32 2017778566, i32 -894438527, i32 -1184316354, i32 941896748, i32 -1029488545, i32 371049330, i32 -1126030068, i32 675039627, i32 -15887039, i32 967311729, i32 135050206, i32 -659233636, i32 1683407248, i32 2076935265, i32 -718096784, i32 1215061108, i32 -793225406], align 16
@Td1 = internal constant [256 x i32] [i32 1347548327, i32 1400783205, i32 -1021700188, i32 -1774573730, i32 -885281941, i32 -249586363, i32 -1414727080, i32 -1823743229, i32 1428173050, i32 -156404115, i32 -1853305738, i32 636813900, i32 -61872681, i32 -674944309, i32 -2144979644, i32 -1883938141, i32 1239331162, i32 1730525723, i32 -1740248562, i32 -513933632, i32 46346101, i32 310463728, i32 -1551022441, i32 -966011911, i32 -419197089, i32 -1793748324, i32 -339776134, i32 -627748263, i32 768917123, i32 -749177823, i32 692707433, i32 1150208456, i32 1786102409, i32 2029293177, i32 1805211710, i32 -584599183, i32 -1229004465, i32 401639597, i32 1724457132, i32 -1266823622, i32 409198410, i32 -2098914767, i32 1620529459, i32 1164071807, i32 -525245321, i32 -2068091986, i32 486441376, i32 -1795618773, i32 1483753576, i32 428819965, i32 -2020286868, i32 -1219331080, i32 598438867, i32 -495826174, i32 1474502543, i32 711349675, i32 129166120, i32 53458370, i32 -1702443653, i32 -1512884472, i32 -231724921, i32 -1306280027, i32 -1174273174, i32 1559041666, i32 730517276, i32 -1834518092, i32 -252508174, i32 -1588696606, i32 -848962828, i32 -721025602, i32 533804130, i32 -1966823682, i32 -1657524653, i32 -1599933611, i32 839224033, i32 1973745387, i32 957055980, i32 -1438621457, i32 106852767, i32 1371368976, i32 -113368694, i32 1033297158, i32 -1361232379, i32 1179510461, i32 -1248766835, i32 91341917, i32 1862534868, i32 -10465259, i32 605657339, i32 -1747534359, i32 -863420349, i32 2003294622, i32 -1112479678, i32 -2012771957, i32 954669403, i32 -612775698, i32 1201765386, i32 -377732593, i32 -906460130, i32 0, i32 -2096529274, i32 1211247597, i32 -1407315600, i32 1315723890, i32 -67301633, i32 1443857720, i32 507358933, i32 657861945, i32 1678381017, i32 560487590, i32 -778347692, i32 975451694, i32 -1324610969, i32 261314535, i32 -759894378, i32 -1642357871, i32 1333838021, i32 -1570644960, i32 1767536459, i32 370938394, i32 182621114, i32 -440360918, i32 1128014560, i32 487725847, i32 185469197, i32 -1376613433, i32 -1188186456, i32 -938205527, i32 -2057834215, i32 1286567175, i32 -1141990947, i32 -39616672, i32 -1611202266, i32 -1134791947, i32 -985373125, i32 878443390, i32 1988838185, i32 -590666810, i32 1756818940, i32 1673061617, i32 -891866660, i32 272786309, i32 1075025698, i32 545572369, i32 2105887268, i32 -120407235, i32 296679730, i32 1841768865, i32 1260232239, i32 -203640272, i32 -334657966, i32 -797457949, i32 1814803222, i32 -1716948807, i32 -99511224, i32 575138148, i32 -995558260, i32 446754879, i32 -665420500, i32 -282971248, i32 -947435186, i32 -1042728751, i32 -24327518, i32 915985419, i32 -811141759, i32 681933534, i32 651868046, i32 -1539330625, i32 -466863459, i32 223377554, i32 -1687527476, i32 1649704518, i32 -1024029421, i32 -393160520, i32 1580087799, i32 -175979601, i32 -1096852096, i32 2087309459, i32 -1452288723, i32 -1278270190, i32 1003007129, i32 -1492117379, i32 1860738147, i32 2077965243, i32 164439672, i32 -194094824, i32 32283319, i32 -1467789414, i32 1709610350, i32 2125135846, i32 136428751, i32 -420538904, i32 -642062437, i32 -833982666, i32 -722821367, i32 -701910916, i32 -1355701070, i32 824852259, i32 818324884, i32 -1070226842, i32 930369212, i32 -1493400886, i32 -1327460144, i32 355706840, i32 1257309336, i32 -146674470, i32 243256656, i32 790073846, i32 -1921626666, i32 1296297904, i32 1422699085, i32 -538667516, i32 -476130891, i32 457992840, i32 -1195299809, i32 2135319889, i32 77422314, i32 1560382517, i32 1945798516, i32 788204353, i32 1521706781, i32 1385356242, i32 870912086, i32 325965383, i32 -1936009375, i32 2050466060, i32 -1906706412, i32 -1981082820, i32 -288446169, i32 901210569, i32 -304014107, i32 1014646705, i32 1503449823, i32 1062597235, i32 2031621326, i32 -1082931401, i32 -363595827, i32 1533017514, i32 350174575, i32 -2038938405, i32 -2117423117, i32 1052338372, i32 741876788, i32 1606591296, i32 1914052035, i32 213705253, i32 -1960297399, i32 1107234197, i32 1899603969, i32 -569897805, i32 -1663519516, i32 -1872472383, i32 1635502980, i32 1893020342, i32 1950903388, i32 1120974935], align 16
@Td2 = internal constant [256 x i32] [i32 -1487908364, i32 1699970625, i32 -1530717673, i32 1586903591, i32 1808481195, i32 1173430173, i32 1487645946, i32 59984867, i32 -95084496, i32 1844882806, i32 1989249228, i32 1277555970, i32 -671330331, i32 -875051734, i32 1149249077, i32 -1550863006, i32 1514790577, i32 459744698, i32 244860394, i32 -1058972162, i32 1963115311, i32 -267222708, i32 -1750889146, i32 -104436781, i32 1608975247, i32 -1667951214, i32 2062270317, i32 1507497298, i32 -2094148418, i32 567498868, i32 1764313568, i32 -935031095, i32 -1989511742, i32 2037970062, i32 1047239000, i32 1910319033, i32 1337376481, i32 -1390940024, i32 -1402549984, i32 984907214, i32 1243112415, i32 830661914, i32 861968209, i32 2135253587, i32 2011214180, i32 -1367032981, i32 -1608712575, i32 731183368, i32 1750626376, i32 -48656571, i32 1820824798, i32 -122203525, i32 -752637069, i32 48394827, i32 -1890065633, i32 -1423284651, i32 671593195, i32 -1039978571, i32 2073724613, i32 145085239, i32 -2014171096, i32 -1515052097, i32 1790575107, i32 -2107839210, i32 472615631, i32 -1265457287, i32 -219090169, i32 -492745111, i32 -187865638, i32 -1093335547, i32 1646252340, i32 -24460122, i32 1402811438, i32 1436590835, i32 -516815478, i32 -344611594, i32 -331805821, i32 -274055072, i32 -1626972559, i32 273792366, i32 -1963377119, i32 104699613, i32 95345982, i32 -1119466010, i32 -1917480620, i32 1560637892, i32 -730921978, i32 369057872, i32 -81520232, i32 -375925059, i32 1137477952, i32 -1636341799, i32 1119727848, i32 -1954019447, i32 1530455833, i32 -287606328, i32 172466556, i32 266959938, i32 516552836, i32 0, i32 -2038232704, i32 -314035669, i32 1890328081, i32 1917742170, i32 -262898, i32 945164165, i32 -719438418, i32 958871085, i32 -647755249, i32 -1507760036, i32 1423022939, i32 775562294, i32 1739656202, i32 -418409641, i32 -1764576018, i32 -1851909221, i32 -984645440, i32 547512796, i32 1265195639, i32 437656594, i32 -1173691757, i32 719700128, i32 -532464606, i32 387781147, i32 218828297, i32 -944901493, i32 -1464259146, i32 -1446505442, i32 428169201, i32 122466165, i32 -574886247, i32 1627235199, i32 648017665, i32 -172204942, i32 1002783846, i32 2117360635, i32 695634755, i32 -958608605, i32 -60246291, i32 -245122844, i32 -590686415, i32 -2062531997, i32 574624663, i32 287343814, i32 612205898, i32 1039717051, i32 840019705, i32 -1586641111, i32 793451934, i32 821288114, i32 1391201670, i32 -472877119, i32 376187827, i32 -1181111952, i32 1224348052, i32 1679968233, i32 -1933268740, i32 1058709744, i32 752375421, i32 -1863376333, i32 1321699145, i32 -775825096, i32 -1560376118, i32 188127444, i32 -2117097739, i32 -567761542, i32 -1910056265, i32 -1079754835, i32 -1645990854, i32 -1844621192, i32 -862229921, i32 1180849278, i32 331544205, i32 -1192718120, i32 -144822727, i32 -1342864701, i32 -2134991011, i32 -1820562992, i32 766078933, i32 313773861, i32 -1724135252, i32 2108100632, i32 1668212892, i32 -1149510853, i32 2013908262, i32 418672217, i32 -1224610662, i32 -1700232369, i32 1852171925, i32 -427906305, i32 -821550660, i32 -387518699, i32 -1680229657, i32 919489135, i32 164948639, i32 2094410160, i32 -1297141340, i32 590424639, i32 -1808742747, i32 1723872674, i32 -1137216434, i32 -895026046, i32 -793714544, i32 -669699161, i32 -1739919100, i32 -621329940, i32 1343127501, i32 -164685935, i32 -695372211, i32 -1337113617, i32 1297403050, i32 81781910, i32 -1243373871, i32 -2011476886, i32 532201772, i32 1367295589, i32 -368796322, i32 895287692, i32 1953757831, i32 1093597963, i32 492483431, i32 -766340389, i32 1446242576, i32 1192455638, i32 1636604631, i32 209336225, i32 344873464, i32 1015671571, i32 669961897, i32 -919226527, i32 -437395172, i32 -1321436601, i32 -547775278, i32 1933530610, i32 -830924780, i32 935293895, i32 -840281097, i32 -1436852227, i32 1863638845, i32 -611944380, i32 -209597777, i32 -1002522264, i32 875313188, i32 1080017571, i32 -1015933411, i32 621591778, i32 1233856572, i32 -1790836979, i32 24197544, i32 -1277294580, i32 -459482956, i32 -1047501738, i32 -2073986101, i32 -1234119374, i32 1551124588, i32 1463996600], align 16
@Td3 = internal constant [256 x i32] [i32 -190361519, i32 1097159550, i32 396673818, i32 660510266, i32 -1418998981, i32 -1656360673, i32 -94852180, i32 -486304949, i32 821712160, i32 1986918061, i32 -864644728, i32 38544885, i32 -438830001, i32 718002117, i32 893681702, i32 1654886325, i32 -1319482914, i32 -1172609243, i32 -368142267, i32 -20913827, i32 796197571, i32 1290801793, i32 1184342925, i32 -738605461, i32 -1889540349, i32 -1835231979, i32 1836772287, i32 1381620373, i32 -1098699308, i32 1948373848, i32 -529979063, i32 -909622130, i32 -1031181707, i32 -1904641804, i32 1480485785, i32 -1183720153, i32 -514869570, i32 -2001922064, i32 548169417, i32 -835013507, i32 -548792221, i32 439452389, i32 1362321559, i32 1400849762, i32 1685577905, i32 1806599355, i32 -2120213250, i32 137073913, i32 1214797936, i32 1174215055, i32 -563312748, i32 2079897426, i32 1943217067, i32 1258480242, i32 529487843, i32 1437280870, i32 -349698126, i32 -1245576401, i32 -981755258, i32 923313619, i32 679998000, i32 -1079659997, i32 57326082, i32 377642221, i32 -820237430, i32 2041877159, i32 133361907, i32 1776460110, i32 -621490843, i32 96392454, i32 878845905, i32 -1493267772, i32 777231668, i32 -212492126, i32 -1964953083, i32 -152341084, i32 -2081670901, i32 1626319424, i32 1906247262, i32 1846563261, i32 562755902, i32 -586793578, i32 1040559837, i32 -423803315, i32 1418573201, i32 -1000536719, i32 114585348, i32 1343618912, i32 -1728371687, i32 -1108764714, i32 1078185097, i32 -643926169, i32 -398279248, i32 -1987344377, i32 425408743, i32 -923870343, i32 2081048481, i32 1108339068, i32 -2078357000, i32 0, i32 -2138668279, i32 736970802, i32 292596766, i32 1517440620, i32 251657213, i32 -2059905521, i32 -1361764803, i32 758720310, i32 265905162, i32 1554391400, i32 1532285339, i32 908999204, i32 174567692, i32 1474760595, i32 -292105548, i32 -1684955621, i32 -1060810880, i32 -601841055, i32 2001430874, i32 303699484, i32 -1816524062, i32 -1607801408, i32 585122620, i32 454499602, i32 151849742, i32 -1949848078, i32 -1230456531, i32 514443284, i32 -249985705, i32 1963412655, i32 -1713521682, i32 2137062819, i32 19308535, i32 1928707164, i32 1715193156, i32 -75615141, i32 1126790795, i32 600235211, i32 -302225226, i32 -453942344, i32 836553431, i32 1669664834, i32 -1759363053, i32 -971956092, i32 1243905413, i32 -1153566510, i32 -114159186, i32 698445255, i32 -1641067747, i32 -1305414692, i32 -2041385971, i32 -1042034569, i32 -1290376149, i32 1891211689, i32 -1807156719, i32 -379313593, i32 -57883480, i32 -264299872, i32 2100090966, i32 865136418, i32 1229899655, i32 953270745, i32 -895287668, i32 -737462632, i32 -176042074, i32 2061379749, i32 -1215420710, i32 -1379949505, i32 983426092, i32 2022837584, i32 1607244650, i32 2118541908, i32 -1928084746, i32 -658970480, i32 972512814, i32 -1011878526, i32 1568718495, i32 -795640727, i32 -718427793, i32 621982671, i32 -1399243832, i32 410887952, i32 -1671205144, i32 1002142683, i32 645401037, i32 1494807662, i32 -1699282452, i32 1335535747, i32 -1787927066, i32 -1671510, i32 -1127282655, i32 367585007, i32 -409216582, i32 1865862730, i32 -1626745622, i32 -1333995991, i32 -1531793615, i32 1059270954, i32 -1517014842, i32 -1570324427, i32 1320957812, i32 -2100648196, i32 -1865371424, i32 -1479011021, i32 77089521, i32 -321194175, i32 -850391425, i32 -1846137065, i32 1305906550, i32 -273658557, i32 -1437772596, i32 -1778065436, i32 -776608866, i32 1787304780, i32 740276417, i32 1699839814, i32 1592394909, i32 -1942659839, i32 -2022411270, i32 188821243, i32 1729977011, i32 -606973294, i32 274084841, i32 -699985043, i32 -681472870, i32 -1593017801, i32 -132870567, i32 322734571, i32 -1457000754, i32 1640576439, i32 484830689, i32 1202797690, i32 -757114468, i32 -227328171, i32 349075736, i32 -952647821, i32 -137500077, i32 -39167137, i32 1030690015, i32 1155237496, i32 -1342996022, i32 1757691577, i32 607398968, i32 -1556062270, i32 499347990, i32 -500888388, i32 1011452712, i32 227885567, i32 -1476300487, i32 213114376, i32 -1260086056, i32 1455525988, i32 -880516741, i32 850817237, i32 1817998408, i32 -1202240816], align 16
@Td4 = internal constant [256 x i32] [i32 1381126738, i32 151587081, i32 1785358954, i32 -707406379, i32 808464432, i32 909522486, i32 -1515870811, i32 943208504, i32 -1077952577, i32 1077952576, i32 -1549556829, i32 -1633771874, i32 -2122219135, i32 -202116109, i32 -673720361, i32 -67372037, i32 2088533116, i32 -471604253, i32 960051513, i32 -2105376126, i32 -1684300901, i32 791621423, i32 -1, i32 -2021161081, i32 875836468, i32 -1903260018, i32 1128481603, i32 1145324612, i32 -993737532, i32 -555819298, i32 -370546199, i32 -875836469, i32 1414812756, i32 2071690107, i32 -1802201964, i32 842150450, i32 -1499027802, i32 -1027423550, i32 589505315, i32 1027423549, i32 -286331154, i32 1280068684, i32 -1785358955, i32 185273099, i32 1111638594, i32 -84215046, i32 -1010580541, i32 1313754702, i32 134744072, i32 774778414, i32 -1583242847, i32 1717986918, i32 673720360, i32 -640034343, i32 606348324, i32 -1296911694, i32 1987475062, i32 1532713819, i32 -1566399838, i32 1229539657, i32 1835887981, i32 -1953789045, i32 -774778415, i32 623191333, i32 1920103026, i32 -117901064, i32 -151587082, i32 1684300900, i32 -2038004090, i32 1751672936, i32 -1734829928, i32 370546198, i32 -724249388, i32 -1532713820, i32 1549556828, i32 -858993460, i32 1566399837, i32 1701143909, i32 -1229539658, i32 -1835887982, i32 1819044972, i32 1886417008, i32 1212696648, i32 1347440720, i32 -33686019, i32 -303174163, i32 -1179010631, i32 -623191334, i32 1583242846, i32 353703189, i32 1179010630, i32 1465341783, i32 -1482184793, i32 -1920103027, i32 -1650614883, i32 -2071690108, i32 -1869574000, i32 -656877352, i32 -1414812757, i32 0, i32 -1936946036, i32 -1128481604, i32 -741092397, i32 168430090, i32 -134744073, i32 -454761244, i32 1482184792, i32 84215045, i32 -1195853640, i32 -1280068685, i32 1162167621, i32 101058054, i32 -791621424, i32 741092396, i32 505290270, i32 -1886417009, i32 -892679478, i32 1061109567, i32 252645135, i32 33686018, i32 -1044266559, i32 -1347440721, i32 -1111638595, i32 50529027, i32 16843009, i32 320017171, i32 -1970632054, i32 1802201963, i32 976894522, i32 -1852730991, i32 286331153, i32 1094795585, i32 1330597711, i32 1734829927, i32 -589505316, i32 -353703190, i32 -1751672937, i32 -218959118, i32 -808464433, i32 -825307442, i32 -252645136, i32 -1263225676, i32 -421075226, i32 1936946035, i32 -1768515946, i32 -1397969748, i32 1953789044, i32 572662306, i32 -404232217, i32 -1381126739, i32 892679477, i32 -2054847099, i32 -488447262, i32 -101058055, i32 926365495, i32 -387389208, i32 471604252, i32 1970632053, i32 -538976289, i32 1852730990, i32 1195853639, i32 -235802127, i32 437918234, i32 1903260017, i32 488447261, i32 690563369, i32 -976894523, i32 -1987475063, i32 1869573999, i32 -1212696649, i32 1650614882, i32 235802126, i32 -1431655766, i32 404232216, i32 -1094795586, i32 454761243, i32 -50529028, i32 1448498774, i32 1044266558, i32 1263225675, i32 -960051514, i32 -757935406, i32 2038004089, i32 538976288, i32 -1701143910, i32 -606348325, i32 -1061109568, i32 -16843010, i32 2021161080, i32 -842150451, i32 1515870810, i32 -185273100, i32 522133279, i32 -572662307, i32 -1465341784, i32 858993459, i32 -2004318072, i32 117901063, i32 -943208505, i32 825307441, i32 -1313754703, i32 303174162, i32 269488144, i32 1499027801, i32 656877351, i32 -2139062144, i32 -320017172, i32 1600085855, i32 1616928864, i32 1364283729, i32 2139062143, i32 -1448498775, i32 421075225, i32 -1246382667, i32 1246382666, i32 218959117, i32 757935405, i32 -437918235, i32 2054847098, i32 -1616928865, i32 -1819044973, i32 -909522487, i32 -1667457892, i32 -269488145, i32 -1600085856, i32 -522133280, i32 993737531, i32 1296911693, i32 -1364283730, i32 707406378, i32 -168430091, i32 -1330597712, i32 -926365496, i32 -336860181, i32 -1145324613, i32 1010580540, i32 -2088533117, i32 1397969747, i32 -1717986919, i32 1633771873, i32 387389207, i32 724249387, i32 67372036, i32 2122219134, i32 -1162167622, i32 2004318071, i32 -690563370, i32 640034342, i32 -505290271, i32 1768515945, i32 336860180, i32 1667457891, i32 1431655765, i32 555819297, i32 202116108, i32 2105376125], align 16
@.str.3 = private unnamed_addr constant [10 x i8] c"xlen >= 0\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"dudect-examples/aes32/sources/random.c\00", align 1
@__PRETTY_FUNCTION__.randombytes = private unnamed_addr constant [36 x i8] c"void randombytes(uint8_t *, size_t)\00", align 1
@randombytes.fd = internal global i32 -1, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main() #0 {
  %1 = alloca [16 x i8], align 16
  call void @init_dut()
  %2 = bitcast [16 x i8]* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %2, i8* align 16 getelementptr inbounds ([16 x i8], [16 x i8]* @__const.main.input_data, i32 0, i32 0), i64 16, i1 false)
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %4 = call zeroext i8 @do_one_computation(i8* %3, i32 13)
  %5 = zext i8 %4 to i32
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %5)
  ret i32 0
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @init_dut() #0 {
  %1 = alloca [16 x i8], align 16
  %2 = bitcast [16 x i8]* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %2, i8 0, i64 16, i1 false)
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %4 = call i32 @rijndaelKeySetupEnc(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i8* %3, i32 128)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local zeroext i8 @do_one_computation(i8* %0, i32 %1) #0 {
  %3 = alloca [16 x i8], align 16
  %4 = alloca [16 x i8], align 16
  %5 = bitcast [16 x i8]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %5, i8 0, i64 16, i1 false)
  %6 = bitcast [16 x i8]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 16, i1 false)
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 1 %0, i64 16, i1 false)
  br label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %9, i8* %10)
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %11, i8* align 16 %12, i64 16, i1 false)
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %13, i8* %14)
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 %16, i64 16, i1 false)
  %17 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %18 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %17, i8* %18)
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %19, i8* align 16 %20, i64 16, i1 false)
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %21, i8* %22)
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %24 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %23, i8* align 16 %24, i64 16, i1 false)
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %25, i8* %26)
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %27, i8* align 16 %28, i64 16, i1 false)
  %29 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %29, i8* %30)
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %31, i8* align 16 %32, i64 16, i1 false)
  %33 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %33, i8* %34)
  %35 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %35, i8* align 16 %36, i64 16, i1 false)
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %38 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %37, i8* %38)
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %39, i8* align 16 %40, i64 16, i1 false)
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %41, i8* %42)
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %43, i8* align 16 %44, i64 16, i1 false)
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %45, i8* %46)
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %48 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %47, i8* align 16 %48, i64 16, i1 false)
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %49, i8* %50)
  %51 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %52 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %51, i8* align 16 %52, i64 16, i1 false)
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %54 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %53, i8* %54)
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %56 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %55, i8* align 16 %56, i64 16, i1 false)
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %58 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %57, i8* %58)
  %59 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %59, i8* align 16 %60, i64 16, i1 false)
  %61 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %62 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %61, i8* %62)
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %64 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %63, i8* align 16 %64, i64 16, i1 false)
  %65 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %66 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %65, i8* %66)
  %67 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %68 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %67, i8* align 16 %68, i64 16, i1 false)
  %69 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %70 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %69, i8* %70)
  %71 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %72 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %71, i8* align 16 %72, i64 16, i1 false)
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %73, i8* %74)
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %76 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %75, i8* align 16 %76, i64 16, i1 false)
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %78 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %77, i8* %78)
  %79 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %79, i8* align 16 %80, i64 16, i1 false)
  %81 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %82 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %81, i8* %82)
  %83 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %84 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %83, i8* align 16 %84, i64 16, i1 false)
  %85 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %86 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %85, i8* %86)
  %87 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %88 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 16 %88, i64 16, i1 false)
  %89 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %90 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %89, i8* %90)
  %91 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %92 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %91, i8* align 16 %92, i64 16, i1 false)
  %93 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %94 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %93, i8* %94)
  %95 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %96 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %95, i8* align 16 %96, i64 16, i1 false)
  %97 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %98 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %97, i8* %98)
  %99 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %100 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %99, i8* align 16 %100, i64 16, i1 false)
  %101 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %101, i8* %102)
  %103 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %104 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %103, i8* align 16 %104, i64 16, i1 false)
  %105 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %106 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %105, i8* %106)
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %108 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %107, i8* align 16 %108, i64 16, i1 false)
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %110 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %109, i8* %110)
  %111 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %112 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %111, i8* align 16 %112, i64 16, i1 false)
  %113 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %114 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %113, i8* %114)
  %115 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %116 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %115, i8* align 16 %116, i64 16, i1 false)
  %117 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %118 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %117, i8* %118)
  %119 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %120 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %119, i8* align 16 %120, i64 16, i1 false)
  %121 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %122 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %121, i8* %122)
  %123 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %124 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %123, i8* align 16 %124, i64 16, i1 false)
  %125 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %126 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i32 %1, i8* %125, i8* %126)
  %127 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %128 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %127, i8* align 16 %128, i64 16, i1 false)
  %129 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %130 = load i8, i8* %129, align 16
  %131 = zext i8 %130 to i32
  ret i8 %130
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @rijndaelEncrypt(i32* %0, i32 %1, i8* %2, i8* %3) #0 {
  %5 = getelementptr inbounds i8, i8* %2, i64 0
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl i32 %7, 24
  %9 = getelementptr inbounds i8, i8* %2, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl i32 %11, 16
  %13 = xor i32 %8, %12
  %14 = getelementptr inbounds i8, i8* %2, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl i32 %16, 8
  %18 = xor i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %2, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = xor i32 %18, %21
  %23 = getelementptr inbounds i32, i32* %0, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = xor i32 %22, %24
  %26 = getelementptr inbounds i8, i8* %2, i64 4
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds i8, i8* %2, i64 4
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl i32 %33, 16
  %35 = getelementptr inbounds i8, i8* %2, i64 4
  %36 = getelementptr inbounds i8, i8* %35, i64 2
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl i32 %38, 8
  %40 = getelementptr inbounds i8, i8* %2, i64 4
  %41 = getelementptr inbounds i8, i8* %40, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds i32, i32* %0, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds i8, i8* %2, i64 8
  %47 = getelementptr inbounds i8, i8* %46, i64 0
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds i8, i8* %2, i64 8
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl i32 %53, 16
  %55 = getelementptr inbounds i8, i8* %2, i64 8
  %56 = getelementptr inbounds i8, i8* %55, i64 2
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl i32 %58, 8
  %60 = getelementptr inbounds i8, i8* %2, i64 8
  %61 = getelementptr inbounds i8, i8* %60, i64 3
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = getelementptr inbounds i32, i32* %0, i64 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds i8, i8* %2, i64 12
  %67 = getelementptr inbounds i8, i8* %66, i64 0
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = getelementptr inbounds i8, i8* %2, i64 12
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl i32 %73, 16
  %75 = getelementptr inbounds i8, i8* %2, i64 12
  %76 = getelementptr inbounds i8, i8* %75, i64 2
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl i32 %78, 8
  %80 = getelementptr inbounds i8, i8* %2, i64 12
  %81 = getelementptr inbounds i8, i8* %80, i64 3
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = getelementptr inbounds i32, i32* %0, i64 3
  %85 = load i32, i32* %84, align 4
  br label %86

86:                                               ; preds = %4
  %87 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @Te0, i64 0, i64 0), align 4
  %88 = lshr i32 %25, 24
  %89 = zext i32 %88 to i64
  %90 = icmp eq i64 0, %89
  br i1 %90, label %.preheader12, label %91

91:                                               ; preds = %86
  %92 = zext i32 %88 to i64
  %93 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  br label %.preheader12

.preheader12:                                     ; preds = %91, %86
  %95 = phi i32 [ %94, %91 ], [ %87, %86 ]
  %96 = shl i32 %29, 24
  %97 = xor i32 %96, %34
  %98 = xor i32 %97, %39
  %99 = xor i32 %98, %43
  %100 = xor i32 %99, %45
  %101 = shl i32 %49, 24
  %102 = xor i32 %101, %54
  %103 = xor i32 %102, %59
  %104 = xor i32 %103, %63
  %105 = xor i32 %104, %65
  %106 = shl i32 %69, 24
  %107 = xor i32 %106, %74
  %108 = xor i32 %107, %79
  %109 = xor i32 %108, %83
  %110 = xor i32 %109, %85
  br label %111

111:                                              ; preds = %.preheader12
  %112 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 0
  %113 = load i32, i32* %112, align 4
  %114 = lshr i32 %100, 16
  %115 = and i32 %114, 255
  %116 = zext i32 %115 to i64
  %117 = icmp eq i64 0, %116
  br i1 %117, label %.preheader11, label %118

118:                                              ; preds = %111
  %119 = zext i32 %115 to i64
  %120 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  br label %.preheader11

.preheader11:                                     ; preds = %111, %118
  %122 = phi i32 [ %121, %118 ], [ %113, %111 ]
  %123 = xor i32 %95, %122
  br label %124

124:                                              ; preds = %.preheader11
  %125 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 0
  %126 = load i32, i32* %125, align 4
  %127 = lshr i32 %105, 8
  %128 = and i32 %127, 255
  %129 = zext i32 %128 to i64
  %130 = icmp eq i64 0, %129
  br i1 %130, label %.preheader, label %131

131:                                              ; preds = %124
  %132 = zext i32 %128 to i64
  %133 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %132
  %134 = load i32, i32* %133, align 4
  br label %.preheader

.preheader:                                       ; preds = %124, %131
  %135 = phi i32 [ %134, %131 ], [ %126, %124 ]
  %136 = xor i32 %123, %135
  br label %137

137:                                              ; preds = %.preheader
  %138 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 0
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %110, 255
  %141 = zext i32 %140 to i64
  %142 = icmp eq i64 0, %141
  br i1 %142, label %147, label %143

143:                                              ; preds = %137
  %144 = zext i32 %140 to i64
  %145 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  br label %147

147:                                              ; preds = %137, %143
  %148 = phi i32 [ %146, %143 ], [ %139, %137 ]
  %149 = xor i32 %136, %148
  %150 = getelementptr inbounds i32, i32* %0, i64 4
  %151 = load i32, i32* %150, align 4
  %152 = xor i32 %149, %151
  %153 = lshr i32 %100, 24
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = lshr i32 %105, 16
  %158 = and i32 %157, 255
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = xor i32 %156, %161
  %163 = lshr i32 %110, 8
  %164 = and i32 %163, 255
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = xor i32 %162, %167
  %169 = and i32 %25, 255
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = xor i32 %168, %172
  %174 = getelementptr inbounds i32, i32* %0, i64 5
  %175 = load i32, i32* %174, align 4
  %176 = xor i32 %173, %175
  %177 = lshr i32 %105, 24
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = lshr i32 %110, 16
  %182 = and i32 %181, 255
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = xor i32 %180, %185
  %187 = lshr i32 %25, 8
  %188 = and i32 %187, 255
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = xor i32 %186, %191
  %193 = and i32 %100, 255
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = xor i32 %192, %196
  %198 = getelementptr inbounds i32, i32* %0, i64 6
  %199 = load i32, i32* %198, align 4
  %200 = xor i32 %197, %199
  %201 = lshr i32 %110, 24
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = lshr i32 %25, 16
  %206 = and i32 %205, 255
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = xor i32 %204, %209
  %211 = lshr i32 %100, 8
  %212 = and i32 %211, 255
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = xor i32 %210, %215
  %217 = and i32 %105, 255
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %218
  %220 = load i32, i32* %219, align 4
  %221 = xor i32 %216, %220
  %222 = getelementptr inbounds i32, i32* %0, i64 7
  %223 = load i32, i32* %222, align 4
  %224 = xor i32 %221, %223
  %225 = lshr i32 %152, 24
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = lshr i32 %176, 16
  %230 = and i32 %229, 255
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = xor i32 %228, %233
  %235 = lshr i32 %200, 8
  %236 = and i32 %235, 255
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = xor i32 %234, %239
  %241 = and i32 %224, 255
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = xor i32 %240, %244
  %246 = getelementptr inbounds i32, i32* %0, i64 8
  %247 = load i32, i32* %246, align 4
  %248 = xor i32 %245, %247
  %249 = lshr i32 %176, 24
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = lshr i32 %200, 16
  %254 = and i32 %253, 255
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = xor i32 %252, %257
  %259 = lshr i32 %224, 8
  %260 = and i32 %259, 255
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = xor i32 %258, %263
  %265 = and i32 %152, 255
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %266
  %268 = load i32, i32* %267, align 4
  %269 = xor i32 %264, %268
  %270 = getelementptr inbounds i32, i32* %0, i64 9
  %271 = load i32, i32* %270, align 4
  %272 = xor i32 %269, %271
  %273 = lshr i32 %200, 24
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %274
  %276 = load i32, i32* %275, align 4
  %277 = lshr i32 %224, 16
  %278 = and i32 %277, 255
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = xor i32 %276, %281
  %283 = lshr i32 %152, 8
  %284 = and i32 %283, 255
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = xor i32 %282, %287
  %289 = and i32 %176, 255
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = xor i32 %288, %292
  %294 = getelementptr inbounds i32, i32* %0, i64 10
  %295 = load i32, i32* %294, align 4
  %296 = xor i32 %293, %295
  %297 = lshr i32 %224, 24
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = lshr i32 %152, 16
  %302 = and i32 %301, 255
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = xor i32 %300, %305
  %307 = lshr i32 %176, 8
  %308 = and i32 %307, 255
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = xor i32 %306, %311
  %313 = and i32 %200, 255
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %314
  %316 = load i32, i32* %315, align 4
  %317 = xor i32 %312, %316
  %318 = getelementptr inbounds i32, i32* %0, i64 11
  %319 = load i32, i32* %318, align 4
  %320 = xor i32 %317, %319
  %321 = lshr i32 %248, 24
  %322 = zext i32 %321 to i64
  %323 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %322
  %324 = load i32, i32* %323, align 4
  %325 = lshr i32 %272, 16
  %326 = and i32 %325, 255
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %327
  %329 = load i32, i32* %328, align 4
  %330 = xor i32 %324, %329
  %331 = lshr i32 %296, 8
  %332 = and i32 %331, 255
  %333 = zext i32 %332 to i64
  %334 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = xor i32 %330, %335
  %337 = and i32 %320, 255
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %338
  %340 = load i32, i32* %339, align 4
  %341 = xor i32 %336, %340
  %342 = getelementptr inbounds i32, i32* %0, i64 12
  %343 = load i32, i32* %342, align 4
  %344 = xor i32 %341, %343
  %345 = lshr i32 %272, 24
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = lshr i32 %296, 16
  %350 = and i32 %349, 255
  %351 = zext i32 %350 to i64
  %352 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %351
  %353 = load i32, i32* %352, align 4
  %354 = xor i32 %348, %353
  %355 = lshr i32 %320, 8
  %356 = and i32 %355, 255
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %357
  %359 = load i32, i32* %358, align 4
  %360 = xor i32 %354, %359
  %361 = and i32 %248, 255
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = xor i32 %360, %364
  %366 = getelementptr inbounds i32, i32* %0, i64 13
  %367 = load i32, i32* %366, align 4
  %368 = xor i32 %365, %367
  %369 = lshr i32 %296, 24
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %370
  %372 = load i32, i32* %371, align 4
  %373 = lshr i32 %320, 16
  %374 = and i32 %373, 255
  %375 = zext i32 %374 to i64
  %376 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = xor i32 %372, %377
  %379 = lshr i32 %248, 8
  %380 = and i32 %379, 255
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = xor i32 %378, %383
  %385 = and i32 %272, 255
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %386
  %388 = load i32, i32* %387, align 4
  %389 = xor i32 %384, %388
  %390 = getelementptr inbounds i32, i32* %0, i64 14
  %391 = load i32, i32* %390, align 4
  %392 = xor i32 %389, %391
  %393 = lshr i32 %320, 24
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %394
  %396 = load i32, i32* %395, align 4
  %397 = lshr i32 %248, 16
  %398 = and i32 %397, 255
  %399 = zext i32 %398 to i64
  %400 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %399
  %401 = load i32, i32* %400, align 4
  %402 = xor i32 %396, %401
  %403 = lshr i32 %272, 8
  %404 = and i32 %403, 255
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = xor i32 %402, %407
  %409 = and i32 %296, 255
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %410
  %412 = load i32, i32* %411, align 4
  %413 = xor i32 %408, %412
  %414 = getelementptr inbounds i32, i32* %0, i64 15
  %415 = load i32, i32* %414, align 4
  %416 = xor i32 %413, %415
  %417 = lshr i32 %344, 24
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %418
  %420 = load i32, i32* %419, align 4
  %421 = lshr i32 %368, 16
  %422 = and i32 %421, 255
  %423 = zext i32 %422 to i64
  %424 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %423
  %425 = load i32, i32* %424, align 4
  %426 = xor i32 %420, %425
  %427 = lshr i32 %392, 8
  %428 = and i32 %427, 255
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = xor i32 %426, %431
  %433 = and i32 %416, 255
  %434 = zext i32 %433 to i64
  %435 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %434
  %436 = load i32, i32* %435, align 4
  %437 = xor i32 %432, %436
  %438 = getelementptr inbounds i32, i32* %0, i64 16
  %439 = load i32, i32* %438, align 4
  %440 = xor i32 %437, %439
  %441 = lshr i32 %368, 24
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %442
  %444 = load i32, i32* %443, align 4
  %445 = lshr i32 %392, 16
  %446 = and i32 %445, 255
  %447 = zext i32 %446 to i64
  %448 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %447
  %449 = load i32, i32* %448, align 4
  %450 = xor i32 %444, %449
  %451 = lshr i32 %416, 8
  %452 = and i32 %451, 255
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = xor i32 %450, %455
  %457 = and i32 %344, 255
  %458 = zext i32 %457 to i64
  %459 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %458
  %460 = load i32, i32* %459, align 4
  %461 = xor i32 %456, %460
  %462 = getelementptr inbounds i32, i32* %0, i64 17
  %463 = load i32, i32* %462, align 4
  %464 = xor i32 %461, %463
  %465 = lshr i32 %392, 24
  %466 = zext i32 %465 to i64
  %467 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %466
  %468 = load i32, i32* %467, align 4
  %469 = lshr i32 %416, 16
  %470 = and i32 %469, 255
  %471 = zext i32 %470 to i64
  %472 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %471
  %473 = load i32, i32* %472, align 4
  %474 = xor i32 %468, %473
  %475 = lshr i32 %344, 8
  %476 = and i32 %475, 255
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %477
  %479 = load i32, i32* %478, align 4
  %480 = xor i32 %474, %479
  %481 = and i32 %368, 255
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %482
  %484 = load i32, i32* %483, align 4
  %485 = xor i32 %480, %484
  %486 = getelementptr inbounds i32, i32* %0, i64 18
  %487 = load i32, i32* %486, align 4
  %488 = xor i32 %485, %487
  %489 = lshr i32 %416, 24
  %490 = zext i32 %489 to i64
  %491 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %490
  %492 = load i32, i32* %491, align 4
  %493 = lshr i32 %344, 16
  %494 = and i32 %493, 255
  %495 = zext i32 %494 to i64
  %496 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %495
  %497 = load i32, i32* %496, align 4
  %498 = xor i32 %492, %497
  %499 = lshr i32 %368, 8
  %500 = and i32 %499, 255
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %501
  %503 = load i32, i32* %502, align 4
  %504 = xor i32 %498, %503
  %505 = and i32 %392, 255
  %506 = zext i32 %505 to i64
  %507 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %506
  %508 = load i32, i32* %507, align 4
  %509 = xor i32 %504, %508
  %510 = getelementptr inbounds i32, i32* %0, i64 19
  %511 = load i32, i32* %510, align 4
  %512 = xor i32 %509, %511
  %513 = lshr i32 %440, 24
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %514
  %516 = load i32, i32* %515, align 4
  %517 = lshr i32 %464, 16
  %518 = and i32 %517, 255
  %519 = zext i32 %518 to i64
  %520 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %519
  %521 = load i32, i32* %520, align 4
  %522 = xor i32 %516, %521
  %523 = lshr i32 %488, 8
  %524 = and i32 %523, 255
  %525 = zext i32 %524 to i64
  %526 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %525
  %527 = load i32, i32* %526, align 4
  %528 = xor i32 %522, %527
  %529 = and i32 %512, 255
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %530
  %532 = load i32, i32* %531, align 4
  %533 = xor i32 %528, %532
  %534 = getelementptr inbounds i32, i32* %0, i64 20
  %535 = load i32, i32* %534, align 4
  %536 = xor i32 %533, %535
  %537 = lshr i32 %464, 24
  %538 = zext i32 %537 to i64
  %539 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %538
  %540 = load i32, i32* %539, align 4
  %541 = lshr i32 %488, 16
  %542 = and i32 %541, 255
  %543 = zext i32 %542 to i64
  %544 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %543
  %545 = load i32, i32* %544, align 4
  %546 = xor i32 %540, %545
  %547 = lshr i32 %512, 8
  %548 = and i32 %547, 255
  %549 = zext i32 %548 to i64
  %550 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %549
  %551 = load i32, i32* %550, align 4
  %552 = xor i32 %546, %551
  %553 = and i32 %440, 255
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %554
  %556 = load i32, i32* %555, align 4
  %557 = xor i32 %552, %556
  %558 = getelementptr inbounds i32, i32* %0, i64 21
  %559 = load i32, i32* %558, align 4
  %560 = xor i32 %557, %559
  %561 = lshr i32 %488, 24
  %562 = zext i32 %561 to i64
  %563 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = lshr i32 %512, 16
  %566 = and i32 %565, 255
  %567 = zext i32 %566 to i64
  %568 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %567
  %569 = load i32, i32* %568, align 4
  %570 = xor i32 %564, %569
  %571 = lshr i32 %440, 8
  %572 = and i32 %571, 255
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %573
  %575 = load i32, i32* %574, align 4
  %576 = xor i32 %570, %575
  %577 = and i32 %464, 255
  %578 = zext i32 %577 to i64
  %579 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %578
  %580 = load i32, i32* %579, align 4
  %581 = xor i32 %576, %580
  %582 = getelementptr inbounds i32, i32* %0, i64 22
  %583 = load i32, i32* %582, align 4
  %584 = xor i32 %581, %583
  %585 = lshr i32 %512, 24
  %586 = zext i32 %585 to i64
  %587 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %586
  %588 = load i32, i32* %587, align 4
  %589 = lshr i32 %440, 16
  %590 = and i32 %589, 255
  %591 = zext i32 %590 to i64
  %592 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %591
  %593 = load i32, i32* %592, align 4
  %594 = xor i32 %588, %593
  %595 = lshr i32 %464, 8
  %596 = and i32 %595, 255
  %597 = zext i32 %596 to i64
  %598 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %597
  %599 = load i32, i32* %598, align 4
  %600 = xor i32 %594, %599
  %601 = and i32 %488, 255
  %602 = zext i32 %601 to i64
  %603 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %602
  %604 = load i32, i32* %603, align 4
  %605 = xor i32 %600, %604
  %606 = getelementptr inbounds i32, i32* %0, i64 23
  %607 = load i32, i32* %606, align 4
  %608 = xor i32 %605, %607
  %609 = lshr i32 %536, 24
  %610 = zext i32 %609 to i64
  %611 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %610
  %612 = load i32, i32* %611, align 4
  %613 = lshr i32 %560, 16
  %614 = and i32 %613, 255
  %615 = zext i32 %614 to i64
  %616 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %615
  %617 = load i32, i32* %616, align 4
  %618 = xor i32 %612, %617
  %619 = lshr i32 %584, 8
  %620 = and i32 %619, 255
  %621 = zext i32 %620 to i64
  %622 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %621
  %623 = load i32, i32* %622, align 4
  %624 = xor i32 %618, %623
  %625 = and i32 %608, 255
  %626 = zext i32 %625 to i64
  %627 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %626
  %628 = load i32, i32* %627, align 4
  %629 = xor i32 %624, %628
  %630 = getelementptr inbounds i32, i32* %0, i64 24
  %631 = load i32, i32* %630, align 4
  %632 = xor i32 %629, %631
  %633 = lshr i32 %560, 24
  %634 = zext i32 %633 to i64
  %635 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %634
  %636 = load i32, i32* %635, align 4
  %637 = lshr i32 %584, 16
  %638 = and i32 %637, 255
  %639 = zext i32 %638 to i64
  %640 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %639
  %641 = load i32, i32* %640, align 4
  %642 = xor i32 %636, %641
  %643 = lshr i32 %608, 8
  %644 = and i32 %643, 255
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %645
  %647 = load i32, i32* %646, align 4
  %648 = xor i32 %642, %647
  %649 = and i32 %536, 255
  %650 = zext i32 %649 to i64
  %651 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %650
  %652 = load i32, i32* %651, align 4
  %653 = xor i32 %648, %652
  %654 = getelementptr inbounds i32, i32* %0, i64 25
  %655 = load i32, i32* %654, align 4
  %656 = xor i32 %653, %655
  %657 = lshr i32 %584, 24
  %658 = zext i32 %657 to i64
  %659 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %658
  %660 = load i32, i32* %659, align 4
  %661 = lshr i32 %608, 16
  %662 = and i32 %661, 255
  %663 = zext i32 %662 to i64
  %664 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %663
  %665 = load i32, i32* %664, align 4
  %666 = xor i32 %660, %665
  %667 = lshr i32 %536, 8
  %668 = and i32 %667, 255
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %669
  %671 = load i32, i32* %670, align 4
  %672 = xor i32 %666, %671
  %673 = and i32 %560, 255
  %674 = zext i32 %673 to i64
  %675 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %674
  %676 = load i32, i32* %675, align 4
  %677 = xor i32 %672, %676
  %678 = getelementptr inbounds i32, i32* %0, i64 26
  %679 = load i32, i32* %678, align 4
  %680 = xor i32 %677, %679
  %681 = lshr i32 %608, 24
  %682 = zext i32 %681 to i64
  %683 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %682
  %684 = load i32, i32* %683, align 4
  %685 = lshr i32 %536, 16
  %686 = and i32 %685, 255
  %687 = zext i32 %686 to i64
  %688 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %687
  %689 = load i32, i32* %688, align 4
  %690 = xor i32 %684, %689
  %691 = lshr i32 %560, 8
  %692 = and i32 %691, 255
  %693 = zext i32 %692 to i64
  %694 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %693
  %695 = load i32, i32* %694, align 4
  %696 = xor i32 %690, %695
  %697 = and i32 %584, 255
  %698 = zext i32 %697 to i64
  %699 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %698
  %700 = load i32, i32* %699, align 4
  %701 = xor i32 %696, %700
  %702 = getelementptr inbounds i32, i32* %0, i64 27
  %703 = load i32, i32* %702, align 4
  %704 = xor i32 %701, %703
  %705 = lshr i32 %632, 24
  %706 = zext i32 %705 to i64
  %707 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %706
  %708 = load i32, i32* %707, align 4
  %709 = lshr i32 %656, 16
  %710 = and i32 %709, 255
  %711 = zext i32 %710 to i64
  %712 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %711
  %713 = load i32, i32* %712, align 4
  %714 = xor i32 %708, %713
  %715 = lshr i32 %680, 8
  %716 = and i32 %715, 255
  %717 = zext i32 %716 to i64
  %718 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %717
  %719 = load i32, i32* %718, align 4
  %720 = xor i32 %714, %719
  %721 = and i32 %704, 255
  %722 = zext i32 %721 to i64
  %723 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %722
  %724 = load i32, i32* %723, align 4
  %725 = xor i32 %720, %724
  %726 = getelementptr inbounds i32, i32* %0, i64 28
  %727 = load i32, i32* %726, align 4
  %728 = xor i32 %725, %727
  %729 = lshr i32 %656, 24
  %730 = zext i32 %729 to i64
  %731 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %730
  %732 = load i32, i32* %731, align 4
  %733 = lshr i32 %680, 16
  %734 = and i32 %733, 255
  %735 = zext i32 %734 to i64
  %736 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %735
  %737 = load i32, i32* %736, align 4
  %738 = xor i32 %732, %737
  %739 = lshr i32 %704, 8
  %740 = and i32 %739, 255
  %741 = zext i32 %740 to i64
  %742 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %741
  %743 = load i32, i32* %742, align 4
  %744 = xor i32 %738, %743
  %745 = and i32 %632, 255
  %746 = zext i32 %745 to i64
  %747 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %746
  %748 = load i32, i32* %747, align 4
  %749 = xor i32 %744, %748
  %750 = getelementptr inbounds i32, i32* %0, i64 29
  %751 = load i32, i32* %750, align 4
  %752 = xor i32 %749, %751
  %753 = lshr i32 %680, 24
  %754 = zext i32 %753 to i64
  %755 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %754
  %756 = load i32, i32* %755, align 4
  %757 = lshr i32 %704, 16
  %758 = and i32 %757, 255
  %759 = zext i32 %758 to i64
  %760 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %759
  %761 = load i32, i32* %760, align 4
  %762 = xor i32 %756, %761
  %763 = lshr i32 %632, 8
  %764 = and i32 %763, 255
  %765 = zext i32 %764 to i64
  %766 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %765
  %767 = load i32, i32* %766, align 4
  %768 = xor i32 %762, %767
  %769 = and i32 %656, 255
  %770 = zext i32 %769 to i64
  %771 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %770
  %772 = load i32, i32* %771, align 4
  %773 = xor i32 %768, %772
  %774 = getelementptr inbounds i32, i32* %0, i64 30
  %775 = load i32, i32* %774, align 4
  %776 = xor i32 %773, %775
  %777 = lshr i32 %704, 24
  %778 = zext i32 %777 to i64
  %779 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %778
  %780 = load i32, i32* %779, align 4
  %781 = lshr i32 %632, 16
  %782 = and i32 %781, 255
  %783 = zext i32 %782 to i64
  %784 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %783
  %785 = load i32, i32* %784, align 4
  %786 = xor i32 %780, %785
  %787 = lshr i32 %656, 8
  %788 = and i32 %787, 255
  %789 = zext i32 %788 to i64
  %790 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %789
  %791 = load i32, i32* %790, align 4
  %792 = xor i32 %786, %791
  %793 = and i32 %680, 255
  %794 = zext i32 %793 to i64
  %795 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %794
  %796 = load i32, i32* %795, align 4
  %797 = xor i32 %792, %796
  %798 = getelementptr inbounds i32, i32* %0, i64 31
  %799 = load i32, i32* %798, align 4
  %800 = xor i32 %797, %799
  %801 = lshr i32 %728, 24
  %802 = zext i32 %801 to i64
  %803 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %802
  %804 = load i32, i32* %803, align 4
  %805 = lshr i32 %752, 16
  %806 = and i32 %805, 255
  %807 = zext i32 %806 to i64
  %808 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %807
  %809 = load i32, i32* %808, align 4
  %810 = xor i32 %804, %809
  %811 = lshr i32 %776, 8
  %812 = and i32 %811, 255
  %813 = zext i32 %812 to i64
  %814 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %813
  %815 = load i32, i32* %814, align 4
  %816 = xor i32 %810, %815
  %817 = and i32 %800, 255
  %818 = zext i32 %817 to i64
  %819 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %818
  %820 = load i32, i32* %819, align 4
  %821 = xor i32 %816, %820
  %822 = getelementptr inbounds i32, i32* %0, i64 32
  %823 = load i32, i32* %822, align 4
  %824 = xor i32 %821, %823
  %825 = lshr i32 %752, 24
  %826 = zext i32 %825 to i64
  %827 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %826
  %828 = load i32, i32* %827, align 4
  %829 = lshr i32 %776, 16
  %830 = and i32 %829, 255
  %831 = zext i32 %830 to i64
  %832 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %831
  %833 = load i32, i32* %832, align 4
  %834 = xor i32 %828, %833
  %835 = lshr i32 %800, 8
  %836 = and i32 %835, 255
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %837
  %839 = load i32, i32* %838, align 4
  %840 = xor i32 %834, %839
  %841 = and i32 %728, 255
  %842 = zext i32 %841 to i64
  %843 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %842
  %844 = load i32, i32* %843, align 4
  %845 = xor i32 %840, %844
  %846 = getelementptr inbounds i32, i32* %0, i64 33
  %847 = load i32, i32* %846, align 4
  %848 = xor i32 %845, %847
  %849 = lshr i32 %776, 24
  %850 = zext i32 %849 to i64
  %851 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %850
  %852 = load i32, i32* %851, align 4
  %853 = lshr i32 %800, 16
  %854 = and i32 %853, 255
  %855 = zext i32 %854 to i64
  %856 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %855
  %857 = load i32, i32* %856, align 4
  %858 = xor i32 %852, %857
  %859 = lshr i32 %728, 8
  %860 = and i32 %859, 255
  %861 = zext i32 %860 to i64
  %862 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %861
  %863 = load i32, i32* %862, align 4
  %864 = xor i32 %858, %863
  %865 = and i32 %752, 255
  %866 = zext i32 %865 to i64
  %867 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %866
  %868 = load i32, i32* %867, align 4
  %869 = xor i32 %864, %868
  %870 = getelementptr inbounds i32, i32* %0, i64 34
  %871 = load i32, i32* %870, align 4
  %872 = xor i32 %869, %871
  %873 = lshr i32 %800, 24
  %874 = zext i32 %873 to i64
  %875 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %874
  %876 = load i32, i32* %875, align 4
  %877 = lshr i32 %728, 16
  %878 = and i32 %877, 255
  %879 = zext i32 %878 to i64
  %880 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %879
  %881 = load i32, i32* %880, align 4
  %882 = xor i32 %876, %881
  %883 = lshr i32 %752, 8
  %884 = and i32 %883, 255
  %885 = zext i32 %884 to i64
  %886 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %885
  %887 = load i32, i32* %886, align 4
  %888 = xor i32 %882, %887
  %889 = and i32 %776, 255
  %890 = zext i32 %889 to i64
  %891 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %890
  %892 = load i32, i32* %891, align 4
  %893 = xor i32 %888, %892
  %894 = getelementptr inbounds i32, i32* %0, i64 35
  %895 = load i32, i32* %894, align 4
  %896 = xor i32 %893, %895
  %897 = lshr i32 %824, 24
  %898 = zext i32 %897 to i64
  %899 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %898
  %900 = load i32, i32* %899, align 4
  %901 = lshr i32 %848, 16
  %902 = and i32 %901, 255
  %903 = zext i32 %902 to i64
  %904 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %903
  %905 = load i32, i32* %904, align 4
  %906 = xor i32 %900, %905
  %907 = lshr i32 %872, 8
  %908 = and i32 %907, 255
  %909 = zext i32 %908 to i64
  %910 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %909
  %911 = load i32, i32* %910, align 4
  %912 = xor i32 %906, %911
  %913 = and i32 %896, 255
  %914 = zext i32 %913 to i64
  %915 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %914
  %916 = load i32, i32* %915, align 4
  %917 = xor i32 %912, %916
  %918 = getelementptr inbounds i32, i32* %0, i64 36
  %919 = load i32, i32* %918, align 4
  %920 = xor i32 %917, %919
  %921 = lshr i32 %848, 24
  %922 = zext i32 %921 to i64
  %923 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %922
  %924 = load i32, i32* %923, align 4
  %925 = lshr i32 %872, 16
  %926 = and i32 %925, 255
  %927 = zext i32 %926 to i64
  %928 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %927
  %929 = load i32, i32* %928, align 4
  %930 = xor i32 %924, %929
  %931 = lshr i32 %896, 8
  %932 = and i32 %931, 255
  %933 = zext i32 %932 to i64
  %934 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %933
  %935 = load i32, i32* %934, align 4
  %936 = xor i32 %930, %935
  %937 = and i32 %824, 255
  %938 = zext i32 %937 to i64
  %939 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %938
  %940 = load i32, i32* %939, align 4
  %941 = xor i32 %936, %940
  %942 = getelementptr inbounds i32, i32* %0, i64 37
  %943 = load i32, i32* %942, align 4
  %944 = xor i32 %941, %943
  %945 = lshr i32 %872, 24
  %946 = zext i32 %945 to i64
  %947 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %946
  %948 = load i32, i32* %947, align 4
  %949 = lshr i32 %896, 16
  %950 = and i32 %949, 255
  %951 = zext i32 %950 to i64
  %952 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %951
  %953 = load i32, i32* %952, align 4
  %954 = xor i32 %948, %953
  %955 = lshr i32 %824, 8
  %956 = and i32 %955, 255
  %957 = zext i32 %956 to i64
  %958 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %957
  %959 = load i32, i32* %958, align 4
  %960 = xor i32 %954, %959
  %961 = and i32 %848, 255
  %962 = zext i32 %961 to i64
  %963 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %962
  %964 = load i32, i32* %963, align 4
  %965 = xor i32 %960, %964
  %966 = getelementptr inbounds i32, i32* %0, i64 38
  %967 = load i32, i32* %966, align 4
  %968 = xor i32 %965, %967
  %969 = lshr i32 %896, 24
  %970 = zext i32 %969 to i64
  %971 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %970
  %972 = load i32, i32* %971, align 4
  %973 = lshr i32 %824, 16
  %974 = and i32 %973, 255
  %975 = zext i32 %974 to i64
  %976 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %975
  %977 = load i32, i32* %976, align 4
  %978 = xor i32 %972, %977
  %979 = lshr i32 %848, 8
  %980 = and i32 %979, 255
  %981 = zext i32 %980 to i64
  %982 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %981
  %983 = load i32, i32* %982, align 4
  %984 = xor i32 %978, %983
  %985 = and i32 %872, 255
  %986 = zext i32 %985 to i64
  %987 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %986
  %988 = load i32, i32* %987, align 4
  %989 = xor i32 %984, %988
  %990 = getelementptr inbounds i32, i32* %0, i64 39
  %991 = load i32, i32* %990, align 4
  %992 = xor i32 %989, %991
  %993 = icmp sgt i32 %1, 10
  br i1 %993, label %994, label %1381

994:                                              ; preds = %147
  %995 = lshr i32 %920, 24
  %996 = zext i32 %995 to i64
  %997 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %996
  %998 = load i32, i32* %997, align 4
  %999 = lshr i32 %944, 16
  %1000 = and i32 %999, 255
  %1001 = zext i32 %1000 to i64
  %1002 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1001
  %1003 = load i32, i32* %1002, align 4
  %1004 = xor i32 %998, %1003
  %1005 = lshr i32 %968, 8
  %1006 = and i32 %1005, 255
  %1007 = zext i32 %1006 to i64
  %1008 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1007
  %1009 = load i32, i32* %1008, align 4
  %1010 = xor i32 %1004, %1009
  %1011 = and i32 %992, 255
  %1012 = zext i32 %1011 to i64
  %1013 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1012
  %1014 = load i32, i32* %1013, align 4
  %1015 = xor i32 %1010, %1014
  %1016 = getelementptr inbounds i32, i32* %0, i64 40
  %1017 = load i32, i32* %1016, align 4
  %1018 = xor i32 %1015, %1017
  %1019 = lshr i32 %944, 24
  %1020 = zext i32 %1019 to i64
  %1021 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1020
  %1022 = load i32, i32* %1021, align 4
  %1023 = lshr i32 %968, 16
  %1024 = and i32 %1023, 255
  %1025 = zext i32 %1024 to i64
  %1026 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1025
  %1027 = load i32, i32* %1026, align 4
  %1028 = xor i32 %1022, %1027
  %1029 = lshr i32 %992, 8
  %1030 = and i32 %1029, 255
  %1031 = zext i32 %1030 to i64
  %1032 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1031
  %1033 = load i32, i32* %1032, align 4
  %1034 = xor i32 %1028, %1033
  %1035 = and i32 %920, 255
  %1036 = zext i32 %1035 to i64
  %1037 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1036
  %1038 = load i32, i32* %1037, align 4
  %1039 = xor i32 %1034, %1038
  %1040 = getelementptr inbounds i32, i32* %0, i64 41
  %1041 = load i32, i32* %1040, align 4
  %1042 = xor i32 %1039, %1041
  %1043 = lshr i32 %968, 24
  %1044 = zext i32 %1043 to i64
  %1045 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1044
  %1046 = load i32, i32* %1045, align 4
  %1047 = lshr i32 %992, 16
  %1048 = and i32 %1047, 255
  %1049 = zext i32 %1048 to i64
  %1050 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1049
  %1051 = load i32, i32* %1050, align 4
  %1052 = xor i32 %1046, %1051
  %1053 = lshr i32 %920, 8
  %1054 = and i32 %1053, 255
  %1055 = zext i32 %1054 to i64
  %1056 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1055
  %1057 = load i32, i32* %1056, align 4
  %1058 = xor i32 %1052, %1057
  %1059 = and i32 %944, 255
  %1060 = zext i32 %1059 to i64
  %1061 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1060
  %1062 = load i32, i32* %1061, align 4
  %1063 = xor i32 %1058, %1062
  %1064 = getelementptr inbounds i32, i32* %0, i64 42
  %1065 = load i32, i32* %1064, align 4
  %1066 = xor i32 %1063, %1065
  %1067 = lshr i32 %992, 24
  %1068 = zext i32 %1067 to i64
  %1069 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1068
  %1070 = load i32, i32* %1069, align 4
  %1071 = lshr i32 %920, 16
  %1072 = and i32 %1071, 255
  %1073 = zext i32 %1072 to i64
  %1074 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1073
  %1075 = load i32, i32* %1074, align 4
  %1076 = xor i32 %1070, %1075
  %1077 = lshr i32 %944, 8
  %1078 = and i32 %1077, 255
  %1079 = zext i32 %1078 to i64
  %1080 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1079
  %1081 = load i32, i32* %1080, align 4
  %1082 = xor i32 %1076, %1081
  %1083 = and i32 %968, 255
  %1084 = zext i32 %1083 to i64
  %1085 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1084
  %1086 = load i32, i32* %1085, align 4
  %1087 = xor i32 %1082, %1086
  %1088 = getelementptr inbounds i32, i32* %0, i64 43
  %1089 = load i32, i32* %1088, align 4
  %1090 = xor i32 %1087, %1089
  %1091 = lshr i32 %1018, 24
  %1092 = zext i32 %1091 to i64
  %1093 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1092
  %1094 = load i32, i32* %1093, align 4
  %1095 = lshr i32 %1042, 16
  %1096 = and i32 %1095, 255
  %1097 = zext i32 %1096 to i64
  %1098 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1097
  %1099 = load i32, i32* %1098, align 4
  %1100 = xor i32 %1094, %1099
  %1101 = lshr i32 %1066, 8
  %1102 = and i32 %1101, 255
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1103
  %1105 = load i32, i32* %1104, align 4
  %1106 = xor i32 %1100, %1105
  %1107 = and i32 %1090, 255
  %1108 = zext i32 %1107 to i64
  %1109 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1108
  %1110 = load i32, i32* %1109, align 4
  %1111 = xor i32 %1106, %1110
  %1112 = getelementptr inbounds i32, i32* %0, i64 44
  %1113 = load i32, i32* %1112, align 4
  %1114 = xor i32 %1111, %1113
  %1115 = lshr i32 %1042, 24
  %1116 = zext i32 %1115 to i64
  %1117 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1116
  %1118 = load i32, i32* %1117, align 4
  %1119 = lshr i32 %1066, 16
  %1120 = and i32 %1119, 255
  %1121 = zext i32 %1120 to i64
  %1122 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1121
  %1123 = load i32, i32* %1122, align 4
  %1124 = xor i32 %1118, %1123
  %1125 = lshr i32 %1090, 8
  %1126 = and i32 %1125, 255
  %1127 = zext i32 %1126 to i64
  %1128 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1127
  %1129 = load i32, i32* %1128, align 4
  %1130 = xor i32 %1124, %1129
  %1131 = and i32 %1018, 255
  %1132 = zext i32 %1131 to i64
  %1133 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1132
  %1134 = load i32, i32* %1133, align 4
  %1135 = xor i32 %1130, %1134
  %1136 = getelementptr inbounds i32, i32* %0, i64 45
  %1137 = load i32, i32* %1136, align 4
  %1138 = xor i32 %1135, %1137
  %1139 = lshr i32 %1066, 24
  %1140 = zext i32 %1139 to i64
  %1141 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1140
  %1142 = load i32, i32* %1141, align 4
  %1143 = lshr i32 %1090, 16
  %1144 = and i32 %1143, 255
  %1145 = zext i32 %1144 to i64
  %1146 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1145
  %1147 = load i32, i32* %1146, align 4
  %1148 = xor i32 %1142, %1147
  %1149 = lshr i32 %1018, 8
  %1150 = and i32 %1149, 255
  %1151 = zext i32 %1150 to i64
  %1152 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1151
  %1153 = load i32, i32* %1152, align 4
  %1154 = xor i32 %1148, %1153
  %1155 = and i32 %1042, 255
  %1156 = zext i32 %1155 to i64
  %1157 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1156
  %1158 = load i32, i32* %1157, align 4
  %1159 = xor i32 %1154, %1158
  %1160 = getelementptr inbounds i32, i32* %0, i64 46
  %1161 = load i32, i32* %1160, align 4
  %1162 = xor i32 %1159, %1161
  %1163 = lshr i32 %1090, 24
  %1164 = zext i32 %1163 to i64
  %1165 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1164
  %1166 = load i32, i32* %1165, align 4
  %1167 = lshr i32 %1018, 16
  %1168 = and i32 %1167, 255
  %1169 = zext i32 %1168 to i64
  %1170 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1169
  %1171 = load i32, i32* %1170, align 4
  %1172 = xor i32 %1166, %1171
  %1173 = lshr i32 %1042, 8
  %1174 = and i32 %1173, 255
  %1175 = zext i32 %1174 to i64
  %1176 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1175
  %1177 = load i32, i32* %1176, align 4
  %1178 = xor i32 %1172, %1177
  %1179 = and i32 %1066, 255
  %1180 = zext i32 %1179 to i64
  %1181 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1180
  %1182 = load i32, i32* %1181, align 4
  %1183 = xor i32 %1178, %1182
  %1184 = getelementptr inbounds i32, i32* %0, i64 47
  %1185 = load i32, i32* %1184, align 4
  %1186 = xor i32 %1183, %1185
  %1187 = icmp sgt i32 %1, 12
  br i1 %1187, label %1188, label %1381

1188:                                             ; preds = %994
  %1189 = lshr i32 %1114, 24
  %1190 = zext i32 %1189 to i64
  %1191 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1190
  %1192 = load i32, i32* %1191, align 4
  %1193 = lshr i32 %1138, 16
  %1194 = and i32 %1193, 255
  %1195 = zext i32 %1194 to i64
  %1196 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1195
  %1197 = load i32, i32* %1196, align 4
  %1198 = xor i32 %1192, %1197
  %1199 = lshr i32 %1162, 8
  %1200 = and i32 %1199, 255
  %1201 = zext i32 %1200 to i64
  %1202 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1201
  %1203 = load i32, i32* %1202, align 4
  %1204 = xor i32 %1198, %1203
  %1205 = and i32 %1186, 255
  %1206 = zext i32 %1205 to i64
  %1207 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1206
  %1208 = load i32, i32* %1207, align 4
  %1209 = xor i32 %1204, %1208
  %1210 = getelementptr inbounds i32, i32* %0, i64 48
  %1211 = load i32, i32* %1210, align 4
  %1212 = xor i32 %1209, %1211
  %1213 = lshr i32 %1138, 24
  %1214 = zext i32 %1213 to i64
  %1215 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1214
  %1216 = load i32, i32* %1215, align 4
  %1217 = lshr i32 %1162, 16
  %1218 = and i32 %1217, 255
  %1219 = zext i32 %1218 to i64
  %1220 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1219
  %1221 = load i32, i32* %1220, align 4
  %1222 = xor i32 %1216, %1221
  %1223 = lshr i32 %1186, 8
  %1224 = and i32 %1223, 255
  %1225 = zext i32 %1224 to i64
  %1226 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1225
  %1227 = load i32, i32* %1226, align 4
  %1228 = xor i32 %1222, %1227
  %1229 = and i32 %1114, 255
  %1230 = zext i32 %1229 to i64
  %1231 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1230
  %1232 = load i32, i32* %1231, align 4
  %1233 = xor i32 %1228, %1232
  %1234 = getelementptr inbounds i32, i32* %0, i64 49
  %1235 = load i32, i32* %1234, align 4
  %1236 = xor i32 %1233, %1235
  %1237 = lshr i32 %1162, 24
  %1238 = zext i32 %1237 to i64
  %1239 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1238
  %1240 = load i32, i32* %1239, align 4
  %1241 = lshr i32 %1186, 16
  %1242 = and i32 %1241, 255
  %1243 = zext i32 %1242 to i64
  %1244 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1243
  %1245 = load i32, i32* %1244, align 4
  %1246 = xor i32 %1240, %1245
  %1247 = lshr i32 %1114, 8
  %1248 = and i32 %1247, 255
  %1249 = zext i32 %1248 to i64
  %1250 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1249
  %1251 = load i32, i32* %1250, align 4
  %1252 = xor i32 %1246, %1251
  %1253 = and i32 %1138, 255
  %1254 = zext i32 %1253 to i64
  %1255 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1254
  %1256 = load i32, i32* %1255, align 4
  %1257 = xor i32 %1252, %1256
  %1258 = getelementptr inbounds i32, i32* %0, i64 50
  %1259 = load i32, i32* %1258, align 4
  %1260 = xor i32 %1257, %1259
  %1261 = lshr i32 %1186, 24
  %1262 = zext i32 %1261 to i64
  %1263 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1262
  %1264 = load i32, i32* %1263, align 4
  %1265 = lshr i32 %1114, 16
  %1266 = and i32 %1265, 255
  %1267 = zext i32 %1266 to i64
  %1268 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1267
  %1269 = load i32, i32* %1268, align 4
  %1270 = xor i32 %1264, %1269
  %1271 = lshr i32 %1138, 8
  %1272 = and i32 %1271, 255
  %1273 = zext i32 %1272 to i64
  %1274 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1273
  %1275 = load i32, i32* %1274, align 4
  %1276 = xor i32 %1270, %1275
  %1277 = and i32 %1162, 255
  %1278 = zext i32 %1277 to i64
  %1279 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1278
  %1280 = load i32, i32* %1279, align 4
  %1281 = xor i32 %1276, %1280
  %1282 = getelementptr inbounds i32, i32* %0, i64 51
  %1283 = load i32, i32* %1282, align 4
  %1284 = xor i32 %1281, %1283
  %1285 = lshr i32 %1212, 24
  %1286 = zext i32 %1285 to i64
  %1287 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1286
  %1288 = load i32, i32* %1287, align 4
  %1289 = lshr i32 %1236, 16
  %1290 = and i32 %1289, 255
  %1291 = zext i32 %1290 to i64
  %1292 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1291
  %1293 = load i32, i32* %1292, align 4
  %1294 = xor i32 %1288, %1293
  %1295 = lshr i32 %1260, 8
  %1296 = and i32 %1295, 255
  %1297 = zext i32 %1296 to i64
  %1298 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1297
  %1299 = load i32, i32* %1298, align 4
  %1300 = xor i32 %1294, %1299
  %1301 = and i32 %1284, 255
  %1302 = zext i32 %1301 to i64
  %1303 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1302
  %1304 = load i32, i32* %1303, align 4
  %1305 = xor i32 %1300, %1304
  %1306 = getelementptr inbounds i32, i32* %0, i64 52
  %1307 = load i32, i32* %1306, align 4
  %1308 = xor i32 %1305, %1307
  %1309 = lshr i32 %1236, 24
  %1310 = zext i32 %1309 to i64
  %1311 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1310
  %1312 = load i32, i32* %1311, align 4
  %1313 = lshr i32 %1260, 16
  %1314 = and i32 %1313, 255
  %1315 = zext i32 %1314 to i64
  %1316 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1315
  %1317 = load i32, i32* %1316, align 4
  %1318 = xor i32 %1312, %1317
  %1319 = lshr i32 %1284, 8
  %1320 = and i32 %1319, 255
  %1321 = zext i32 %1320 to i64
  %1322 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1321
  %1323 = load i32, i32* %1322, align 4
  %1324 = xor i32 %1318, %1323
  %1325 = and i32 %1212, 255
  %1326 = zext i32 %1325 to i64
  %1327 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1326
  %1328 = load i32, i32* %1327, align 4
  %1329 = xor i32 %1324, %1328
  %1330 = getelementptr inbounds i32, i32* %0, i64 53
  %1331 = load i32, i32* %1330, align 4
  %1332 = xor i32 %1329, %1331
  %1333 = lshr i32 %1260, 24
  %1334 = zext i32 %1333 to i64
  %1335 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1334
  %1336 = load i32, i32* %1335, align 4
  %1337 = lshr i32 %1284, 16
  %1338 = and i32 %1337, 255
  %1339 = zext i32 %1338 to i64
  %1340 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1339
  %1341 = load i32, i32* %1340, align 4
  %1342 = xor i32 %1336, %1341
  %1343 = lshr i32 %1212, 8
  %1344 = and i32 %1343, 255
  %1345 = zext i32 %1344 to i64
  %1346 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1345
  %1347 = load i32, i32* %1346, align 4
  %1348 = xor i32 %1342, %1347
  %1349 = and i32 %1236, 255
  %1350 = zext i32 %1349 to i64
  %1351 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1350
  %1352 = load i32, i32* %1351, align 4
  %1353 = xor i32 %1348, %1352
  %1354 = getelementptr inbounds i32, i32* %0, i64 54
  %1355 = load i32, i32* %1354, align 4
  %1356 = xor i32 %1353, %1355
  %1357 = lshr i32 %1284, 24
  %1358 = zext i32 %1357 to i64
  %1359 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1358
  %1360 = load i32, i32* %1359, align 4
  %1361 = lshr i32 %1212, 16
  %1362 = and i32 %1361, 255
  %1363 = zext i32 %1362 to i64
  %1364 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1363
  %1365 = load i32, i32* %1364, align 4
  %1366 = xor i32 %1360, %1365
  %1367 = lshr i32 %1236, 8
  %1368 = and i32 %1367, 255
  %1369 = zext i32 %1368 to i64
  %1370 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1369
  %1371 = load i32, i32* %1370, align 4
  %1372 = xor i32 %1366, %1371
  %1373 = and i32 %1260, 255
  %1374 = zext i32 %1373 to i64
  %1375 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1374
  %1376 = load i32, i32* %1375, align 4
  %1377 = xor i32 %1372, %1376
  %1378 = getelementptr inbounds i32, i32* %0, i64 55
  %1379 = load i32, i32* %1378, align 4
  %1380 = xor i32 %1377, %1379
  br label %1381

1381:                                             ; preds = %994, %1188, %147
  %.19 = phi i32 [ %992, %147 ], [ %1380, %1188 ], [ %1186, %994 ]
  %.17 = phi i32 [ %968, %147 ], [ %1356, %1188 ], [ %1162, %994 ]
  %.15 = phi i32 [ %944, %147 ], [ %1332, %1188 ], [ %1138, %994 ]
  %.5 = phi i32 [ %920, %147 ], [ %1308, %1188 ], [ %1114, %994 ]
  %1382 = shl i32 %1, 2
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds i32, i32* %0, i64 %1383
  %1385 = lshr i32 %.5, 24
  %1386 = zext i32 %1385 to i64
  %1387 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1386
  %1388 = load i32, i32* %1387, align 4
  %1389 = and i32 %1388, -16777216
  %1390 = lshr i32 %.15, 16
  %1391 = and i32 %1390, 255
  %1392 = zext i32 %1391 to i64
  %1393 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1392
  %1394 = load i32, i32* %1393, align 4
  %1395 = and i32 %1394, 16711680
  %1396 = xor i32 %1389, %1395
  %1397 = lshr i32 %.17, 8
  %1398 = and i32 %1397, 255
  %1399 = zext i32 %1398 to i64
  %1400 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1399
  %1401 = load i32, i32* %1400, align 4
  %1402 = and i32 %1401, 65280
  %1403 = xor i32 %1396, %1402
  %1404 = and i32 %.19, 255
  %1405 = zext i32 %1404 to i64
  %1406 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1405
  %1407 = load i32, i32* %1406, align 4
  %1408 = and i32 %1407, 255
  %1409 = xor i32 %1403, %1408
  %1410 = getelementptr inbounds i32, i32* %1384, i64 0
  %1411 = load i32, i32* %1410, align 4
  %1412 = xor i32 %1409, %1411
  %1413 = lshr i32 %1412, 24
  %1414 = trunc i32 %1413 to i8
  %1415 = getelementptr inbounds i8, i8* %3, i64 0
  store i8 %1414, i8* %1415, align 1
  %1416 = lshr i32 %1412, 16
  %1417 = trunc i32 %1416 to i8
  %1418 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %1417, i8* %1418, align 1
  %1419 = lshr i32 %1412, 8
  %1420 = trunc i32 %1419 to i8
  %1421 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %1420, i8* %1421, align 1
  %1422 = trunc i32 %1412 to i8
  %1423 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %1422, i8* %1423, align 1
  %1424 = lshr i32 %.15, 24
  %1425 = zext i32 %1424 to i64
  %1426 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1425
  %1427 = load i32, i32* %1426, align 4
  %1428 = and i32 %1427, -16777216
  %1429 = lshr i32 %.17, 16
  %1430 = and i32 %1429, 255
  %1431 = zext i32 %1430 to i64
  %1432 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1431
  %1433 = load i32, i32* %1432, align 4
  %1434 = and i32 %1433, 16711680
  %1435 = xor i32 %1428, %1434
  %1436 = lshr i32 %.19, 8
  %1437 = and i32 %1436, 255
  %1438 = zext i32 %1437 to i64
  %1439 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1438
  %1440 = load i32, i32* %1439, align 4
  %1441 = and i32 %1440, 65280
  %1442 = xor i32 %1435, %1441
  %1443 = and i32 %.5, 255
  %1444 = zext i32 %1443 to i64
  %1445 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1444
  %1446 = load i32, i32* %1445, align 4
  %1447 = and i32 %1446, 255
  %1448 = xor i32 %1442, %1447
  %1449 = getelementptr inbounds i32, i32* %1384, i64 1
  %1450 = load i32, i32* %1449, align 4
  %1451 = xor i32 %1448, %1450
  %1452 = lshr i32 %1451, 24
  %1453 = trunc i32 %1452 to i8
  %1454 = getelementptr inbounds i8, i8* %3, i64 4
  %1455 = getelementptr inbounds i8, i8* %1454, i64 0
  store i8 %1453, i8* %1455, align 1
  %1456 = lshr i32 %1451, 16
  %1457 = trunc i32 %1456 to i8
  %1458 = getelementptr inbounds i8, i8* %3, i64 4
  %1459 = getelementptr inbounds i8, i8* %1458, i64 1
  store i8 %1457, i8* %1459, align 1
  %1460 = lshr i32 %1451, 8
  %1461 = trunc i32 %1460 to i8
  %1462 = getelementptr inbounds i8, i8* %3, i64 4
  %1463 = getelementptr inbounds i8, i8* %1462, i64 2
  store i8 %1461, i8* %1463, align 1
  %1464 = trunc i32 %1451 to i8
  %1465 = getelementptr inbounds i8, i8* %3, i64 4
  %1466 = getelementptr inbounds i8, i8* %1465, i64 3
  store i8 %1464, i8* %1466, align 1
  %1467 = lshr i32 %.17, 24
  %1468 = zext i32 %1467 to i64
  %1469 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1468
  %1470 = load i32, i32* %1469, align 4
  %1471 = and i32 %1470, -16777216
  %1472 = lshr i32 %.19, 16
  %1473 = and i32 %1472, 255
  %1474 = zext i32 %1473 to i64
  %1475 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1474
  %1476 = load i32, i32* %1475, align 4
  %1477 = and i32 %1476, 16711680
  %1478 = xor i32 %1471, %1477
  %1479 = lshr i32 %.5, 8
  %1480 = and i32 %1479, 255
  %1481 = zext i32 %1480 to i64
  %1482 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1481
  %1483 = load i32, i32* %1482, align 4
  %1484 = and i32 %1483, 65280
  %1485 = xor i32 %1478, %1484
  %1486 = and i32 %.15, 255
  %1487 = zext i32 %1486 to i64
  %1488 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1487
  %1489 = load i32, i32* %1488, align 4
  %1490 = and i32 %1489, 255
  %1491 = xor i32 %1485, %1490
  %1492 = getelementptr inbounds i32, i32* %1384, i64 2
  %1493 = load i32, i32* %1492, align 4
  %1494 = xor i32 %1491, %1493
  %1495 = lshr i32 %1494, 24
  %1496 = trunc i32 %1495 to i8
  %1497 = getelementptr inbounds i8, i8* %3, i64 8
  %1498 = getelementptr inbounds i8, i8* %1497, i64 0
  store i8 %1496, i8* %1498, align 1
  %1499 = lshr i32 %1494, 16
  %1500 = trunc i32 %1499 to i8
  %1501 = getelementptr inbounds i8, i8* %3, i64 8
  %1502 = getelementptr inbounds i8, i8* %1501, i64 1
  store i8 %1500, i8* %1502, align 1
  %1503 = lshr i32 %1494, 8
  %1504 = trunc i32 %1503 to i8
  %1505 = getelementptr inbounds i8, i8* %3, i64 8
  %1506 = getelementptr inbounds i8, i8* %1505, i64 2
  store i8 %1504, i8* %1506, align 1
  %1507 = trunc i32 %1494 to i8
  %1508 = getelementptr inbounds i8, i8* %3, i64 8
  %1509 = getelementptr inbounds i8, i8* %1508, i64 3
  store i8 %1507, i8* %1509, align 1
  %1510 = lshr i32 %.19, 24
  %1511 = zext i32 %1510 to i64
  %1512 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1511
  %1513 = load i32, i32* %1512, align 4
  %1514 = and i32 %1513, -16777216
  %1515 = lshr i32 %.5, 16
  %1516 = and i32 %1515, 255
  %1517 = zext i32 %1516 to i64
  %1518 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1517
  %1519 = load i32, i32* %1518, align 4
  %1520 = and i32 %1519, 16711680
  %1521 = xor i32 %1514, %1520
  %1522 = lshr i32 %.15, 8
  %1523 = and i32 %1522, 255
  %1524 = zext i32 %1523 to i64
  %1525 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1524
  %1526 = load i32, i32* %1525, align 4
  %1527 = and i32 %1526, 65280
  %1528 = xor i32 %1521, %1527
  %1529 = and i32 %.17, 255
  %1530 = zext i32 %1529 to i64
  %1531 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1530
  %1532 = load i32, i32* %1531, align 4
  %1533 = and i32 %1532, 255
  %1534 = xor i32 %1528, %1533
  %1535 = getelementptr inbounds i32, i32* %1384, i64 3
  %1536 = load i32, i32* %1535, align 4
  %1537 = xor i32 %1534, %1536
  %1538 = lshr i32 %1537, 24
  %1539 = trunc i32 %1538 to i8
  %1540 = getelementptr inbounds i8, i8* %3, i64 12
  %1541 = getelementptr inbounds i8, i8* %1540, i64 0
  store i8 %1539, i8* %1541, align 1
  %1542 = lshr i32 %1537, 16
  %1543 = trunc i32 %1542 to i8
  %1544 = getelementptr inbounds i8, i8* %3, i64 12
  %1545 = getelementptr inbounds i8, i8* %1544, i64 1
  store i8 %1543, i8* %1545, align 1
  %1546 = lshr i32 %1537, 8
  %1547 = trunc i32 %1546 to i8
  %1548 = getelementptr inbounds i8, i8* %3, i64 12
  %1549 = getelementptr inbounds i8, i8* %1548, i64 2
  store i8 %1547, i8* %1549, align 1
  %1550 = trunc i32 %1537 to i8
  %1551 = getelementptr inbounds i8, i8* %3, i64 12
  %1552 = getelementptr inbounds i8, i8* %1551, i64 3
  store i8 %1550, i8* %1552, align 1
  ret void
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @rijndaelKeySetupEnc(i32* %0, i8* %1, i32 %2) #0 {
  %4 = getelementptr inbounds i8, i8* %1, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl i32 %6, 24
  %8 = getelementptr inbounds i8, i8* %1, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl i32 %10, 16
  %12 = xor i32 %7, %11
  %13 = getelementptr inbounds i8, i8* %1, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl i32 %15, 8
  %17 = xor i32 %12, %16
  %18 = getelementptr inbounds i8, i8* %1, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = xor i32 %17, %20
  %22 = getelementptr inbounds i32, i32* %0, i64 0
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %1, i64 4
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl i32 %26, 24
  %28 = getelementptr inbounds i8, i8* %1, i64 4
  %29 = getelementptr inbounds i8, i8* %28, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl i32 %31, 16
  %33 = xor i32 %27, %32
  %34 = getelementptr inbounds i8, i8* %1, i64 4
  %35 = getelementptr inbounds i8, i8* %34, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl i32 %37, 8
  %39 = xor i32 %33, %38
  %40 = getelementptr inbounds i8, i8* %1, i64 4
  %41 = getelementptr inbounds i8, i8* %40, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = xor i32 %39, %43
  %45 = getelementptr inbounds i32, i32* %0, i64 1
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %1, i64 8
  %47 = getelementptr inbounds i8, i8* %46, i64 0
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl i32 %49, 24
  %51 = getelementptr inbounds i8, i8* %1, i64 8
  %52 = getelementptr inbounds i8, i8* %51, i64 1
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl i32 %54, 16
  %56 = xor i32 %50, %55
  %57 = getelementptr inbounds i8, i8* %1, i64 8
  %58 = getelementptr inbounds i8, i8* %57, i64 2
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl i32 %60, 8
  %62 = xor i32 %56, %61
  %63 = getelementptr inbounds i8, i8* %1, i64 8
  %64 = getelementptr inbounds i8, i8* %63, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = xor i32 %62, %66
  %68 = getelementptr inbounds i32, i32* %0, i64 2
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %1, i64 12
  %70 = getelementptr inbounds i8, i8* %69, i64 0
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl i32 %72, 24
  %74 = getelementptr inbounds i8, i8* %1, i64 12
  %75 = getelementptr inbounds i8, i8* %74, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl i32 %77, 16
  %79 = xor i32 %73, %78
  %80 = getelementptr inbounds i8, i8* %1, i64 12
  %81 = getelementptr inbounds i8, i8* %80, i64 2
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl i32 %83, 8
  %85 = xor i32 %79, %84
  %86 = getelementptr inbounds i8, i8* %1, i64 12
  %87 = getelementptr inbounds i8, i8* %86, i64 3
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = xor i32 %85, %89
  %91 = getelementptr inbounds i32, i32* %0, i64 3
  store i32 %90, i32* %91, align 4
  %92 = icmp eq i32 %2, 128
  br i1 %92, label %.preheader, label %592

.preheader:                                       ; preds = %3
  br label %.loopexit

.loopexit:                                        ; preds = %.preheader
  %93 = getelementptr inbounds i32, i32* %0, i64 3
  %94 = load i32, i32* %93, align 4
  %95 = load i32, i32* %0, align 4
  %96 = lshr i32 %94, 16
  %97 = and i32 %96, 255
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = and i32 %100, -16777216
  %102 = xor i32 %95, %101
  %103 = lshr i32 %94, 8
  %104 = and i32 %103, 255
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 16711680
  %109 = xor i32 %102, %108
  %110 = and i32 %94, 255
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 65280
  %115 = xor i32 %109, %114
  %116 = lshr i32 %94, 24
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, 255
  %121 = xor i32 %115, %120
  %122 = xor i32 %121, 16777216
  %123 = getelementptr inbounds i32, i32* %0, i64 4
  store i32 %122, i32* %123, align 4
  %124 = getelementptr inbounds i32, i32* %0, i64 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds i32, i32* %0, i64 4
  %127 = load i32, i32* %126, align 4
  %128 = xor i32 %125, %127
  %129 = getelementptr inbounds i32, i32* %0, i64 5
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds i32, i32* %0, i64 2
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds i32, i32* %0, i64 5
  %133 = load i32, i32* %132, align 4
  %134 = xor i32 %131, %133
  %135 = getelementptr inbounds i32, i32* %0, i64 6
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds i32, i32* %0, i64 3
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds i32, i32* %0, i64 6
  %139 = load i32, i32* %138, align 4
  %140 = xor i32 %137, %139
  %141 = getelementptr inbounds i32, i32* %0, i64 7
  store i32 %140, i32* %141, align 4
  %142 = getelementptr inbounds i32, i32* %0, i64 4
  %143 = getelementptr inbounds i32, i32* %142, i64 3
  %144 = load i32, i32* %143, align 4
  %145 = load i32, i32* %142, align 4
  %146 = lshr i32 %144, 16
  %147 = and i32 %146, 255
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = and i32 %150, -16777216
  %152 = xor i32 %145, %151
  %153 = lshr i32 %144, 8
  %154 = and i32 %153, 255
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = and i32 %157, 16711680
  %159 = xor i32 %152, %158
  %160 = and i32 %144, 255
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = and i32 %163, 65280
  %165 = xor i32 %159, %164
  %166 = lshr i32 %144, 24
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = and i32 %169, 255
  %171 = xor i32 %165, %170
  %172 = xor i32 %171, 33554432
  %173 = getelementptr inbounds i32, i32* %142, i64 4
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds i32, i32* %142, i64 1
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds i32, i32* %142, i64 4
  %177 = load i32, i32* %176, align 4
  %178 = xor i32 %175, %177
  %179 = getelementptr inbounds i32, i32* %142, i64 5
  store i32 %178, i32* %179, align 4
  %180 = getelementptr inbounds i32, i32* %142, i64 2
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds i32, i32* %142, i64 5
  %183 = load i32, i32* %182, align 4
  %184 = xor i32 %181, %183
  %185 = getelementptr inbounds i32, i32* %142, i64 6
  store i32 %184, i32* %185, align 4
  %186 = getelementptr inbounds i32, i32* %142, i64 3
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds i32, i32* %142, i64 6
  %189 = load i32, i32* %188, align 4
  %190 = xor i32 %187, %189
  %191 = getelementptr inbounds i32, i32* %142, i64 7
  store i32 %190, i32* %191, align 4
  %192 = getelementptr inbounds i32, i32* %142, i64 4
  %193 = getelementptr inbounds i32, i32* %192, i64 3
  %194 = load i32, i32* %193, align 4
  %195 = load i32, i32* %192, align 4
  %196 = lshr i32 %194, 16
  %197 = and i32 %196, 255
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, -16777216
  %202 = xor i32 %195, %201
  %203 = lshr i32 %194, 8
  %204 = and i32 %203, 255
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = and i32 %207, 16711680
  %209 = xor i32 %202, %208
  %210 = and i32 %194, 255
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = and i32 %213, 65280
  %215 = xor i32 %209, %214
  %216 = lshr i32 %194, 24
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = and i32 %219, 255
  %221 = xor i32 %215, %220
  %222 = xor i32 %221, 67108864
  %223 = getelementptr inbounds i32, i32* %192, i64 4
  store i32 %222, i32* %223, align 4
  %224 = getelementptr inbounds i32, i32* %192, i64 1
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds i32, i32* %192, i64 4
  %227 = load i32, i32* %226, align 4
  %228 = xor i32 %225, %227
  %229 = getelementptr inbounds i32, i32* %192, i64 5
  store i32 %228, i32* %229, align 4
  %230 = getelementptr inbounds i32, i32* %192, i64 2
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds i32, i32* %192, i64 5
  %233 = load i32, i32* %232, align 4
  %234 = xor i32 %231, %233
  %235 = getelementptr inbounds i32, i32* %192, i64 6
  store i32 %234, i32* %235, align 4
  %236 = getelementptr inbounds i32, i32* %192, i64 3
  %237 = load i32, i32* %236, align 4
  %238 = getelementptr inbounds i32, i32* %192, i64 6
  %239 = load i32, i32* %238, align 4
  %240 = xor i32 %237, %239
  %241 = getelementptr inbounds i32, i32* %192, i64 7
  store i32 %240, i32* %241, align 4
  %242 = getelementptr inbounds i32, i32* %192, i64 4
  %243 = getelementptr inbounds i32, i32* %242, i64 3
  %244 = load i32, i32* %243, align 4
  %245 = load i32, i32* %242, align 4
  %246 = lshr i32 %244, 16
  %247 = and i32 %246, 255
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = and i32 %250, -16777216
  %252 = xor i32 %245, %251
  %253 = lshr i32 %244, 8
  %254 = and i32 %253, 255
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = and i32 %257, 16711680
  %259 = xor i32 %252, %258
  %260 = and i32 %244, 255
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = and i32 %263, 65280
  %265 = xor i32 %259, %264
  %266 = lshr i32 %244, 24
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = and i32 %269, 255
  %271 = xor i32 %265, %270
  %272 = xor i32 %271, 134217728
  %273 = getelementptr inbounds i32, i32* %242, i64 4
  store i32 %272, i32* %273, align 4
  %274 = getelementptr inbounds i32, i32* %242, i64 1
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds i32, i32* %242, i64 4
  %277 = load i32, i32* %276, align 4
  %278 = xor i32 %275, %277
  %279 = getelementptr inbounds i32, i32* %242, i64 5
  store i32 %278, i32* %279, align 4
  %280 = getelementptr inbounds i32, i32* %242, i64 2
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds i32, i32* %242, i64 5
  %283 = load i32, i32* %282, align 4
  %284 = xor i32 %281, %283
  %285 = getelementptr inbounds i32, i32* %242, i64 6
  store i32 %284, i32* %285, align 4
  %286 = getelementptr inbounds i32, i32* %242, i64 3
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds i32, i32* %242, i64 6
  %289 = load i32, i32* %288, align 4
  %290 = xor i32 %287, %289
  %291 = getelementptr inbounds i32, i32* %242, i64 7
  store i32 %290, i32* %291, align 4
  %292 = getelementptr inbounds i32, i32* %242, i64 4
  %293 = getelementptr inbounds i32, i32* %292, i64 3
  %294 = load i32, i32* %293, align 4
  %295 = load i32, i32* %292, align 4
  %296 = lshr i32 %294, 16
  %297 = and i32 %296, 255
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = and i32 %300, -16777216
  %302 = xor i32 %295, %301
  %303 = lshr i32 %294, 8
  %304 = and i32 %303, 255
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = and i32 %307, 16711680
  %309 = xor i32 %302, %308
  %310 = and i32 %294, 255
  %311 = zext i32 %310 to i64
  %312 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %311
  %313 = load i32, i32* %312, align 4
  %314 = and i32 %313, 65280
  %315 = xor i32 %309, %314
  %316 = lshr i32 %294, 24
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = and i32 %319, 255
  %321 = xor i32 %315, %320
  %322 = xor i32 %321, 268435456
  %323 = getelementptr inbounds i32, i32* %292, i64 4
  store i32 %322, i32* %323, align 4
  %324 = getelementptr inbounds i32, i32* %292, i64 1
  %325 = load i32, i32* %324, align 4
  %326 = getelementptr inbounds i32, i32* %292, i64 4
  %327 = load i32, i32* %326, align 4
  %328 = xor i32 %325, %327
  %329 = getelementptr inbounds i32, i32* %292, i64 5
  store i32 %328, i32* %329, align 4
  %330 = getelementptr inbounds i32, i32* %292, i64 2
  %331 = load i32, i32* %330, align 4
  %332 = getelementptr inbounds i32, i32* %292, i64 5
  %333 = load i32, i32* %332, align 4
  %334 = xor i32 %331, %333
  %335 = getelementptr inbounds i32, i32* %292, i64 6
  store i32 %334, i32* %335, align 4
  %336 = getelementptr inbounds i32, i32* %292, i64 3
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds i32, i32* %292, i64 6
  %339 = load i32, i32* %338, align 4
  %340 = xor i32 %337, %339
  %341 = getelementptr inbounds i32, i32* %292, i64 7
  store i32 %340, i32* %341, align 4
  %342 = getelementptr inbounds i32, i32* %292, i64 4
  %343 = getelementptr inbounds i32, i32* %342, i64 3
  %344 = load i32, i32* %343, align 4
  %345 = load i32, i32* %342, align 4
  %346 = lshr i32 %344, 16
  %347 = and i32 %346, 255
  %348 = zext i32 %347 to i64
  %349 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %348
  %350 = load i32, i32* %349, align 4
  %351 = and i32 %350, -16777216
  %352 = xor i32 %345, %351
  %353 = lshr i32 %344, 8
  %354 = and i32 %353, 255
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %355
  %357 = load i32, i32* %356, align 4
  %358 = and i32 %357, 16711680
  %359 = xor i32 %352, %358
  %360 = and i32 %344, 255
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %361
  %363 = load i32, i32* %362, align 4
  %364 = and i32 %363, 65280
  %365 = xor i32 %359, %364
  %366 = lshr i32 %344, 24
  %367 = zext i32 %366 to i64
  %368 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %367
  %369 = load i32, i32* %368, align 4
  %370 = and i32 %369, 255
  %371 = xor i32 %365, %370
  %372 = xor i32 %371, 536870912
  %373 = getelementptr inbounds i32, i32* %342, i64 4
  store i32 %372, i32* %373, align 4
  %374 = getelementptr inbounds i32, i32* %342, i64 1
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds i32, i32* %342, i64 4
  %377 = load i32, i32* %376, align 4
  %378 = xor i32 %375, %377
  %379 = getelementptr inbounds i32, i32* %342, i64 5
  store i32 %378, i32* %379, align 4
  %380 = getelementptr inbounds i32, i32* %342, i64 2
  %381 = load i32, i32* %380, align 4
  %382 = getelementptr inbounds i32, i32* %342, i64 5
  %383 = load i32, i32* %382, align 4
  %384 = xor i32 %381, %383
  %385 = getelementptr inbounds i32, i32* %342, i64 6
  store i32 %384, i32* %385, align 4
  %386 = getelementptr inbounds i32, i32* %342, i64 3
  %387 = load i32, i32* %386, align 4
  %388 = getelementptr inbounds i32, i32* %342, i64 6
  %389 = load i32, i32* %388, align 4
  %390 = xor i32 %387, %389
  %391 = getelementptr inbounds i32, i32* %342, i64 7
  store i32 %390, i32* %391, align 4
  %392 = getelementptr inbounds i32, i32* %342, i64 4
  %393 = getelementptr inbounds i32, i32* %392, i64 3
  %394 = load i32, i32* %393, align 4
  %395 = load i32, i32* %392, align 4
  %396 = lshr i32 %394, 16
  %397 = and i32 %396, 255
  %398 = zext i32 %397 to i64
  %399 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %398
  %400 = load i32, i32* %399, align 4
  %401 = and i32 %400, -16777216
  %402 = xor i32 %395, %401
  %403 = lshr i32 %394, 8
  %404 = and i32 %403, 255
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = and i32 %407, 16711680
  %409 = xor i32 %402, %408
  %410 = and i32 %394, 255
  %411 = zext i32 %410 to i64
  %412 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %411
  %413 = load i32, i32* %412, align 4
  %414 = and i32 %413, 65280
  %415 = xor i32 %409, %414
  %416 = lshr i32 %394, 24
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %417
  %419 = load i32, i32* %418, align 4
  %420 = and i32 %419, 255
  %421 = xor i32 %415, %420
  %422 = xor i32 %421, 1073741824
  %423 = getelementptr inbounds i32, i32* %392, i64 4
  store i32 %422, i32* %423, align 4
  %424 = getelementptr inbounds i32, i32* %392, i64 1
  %425 = load i32, i32* %424, align 4
  %426 = getelementptr inbounds i32, i32* %392, i64 4
  %427 = load i32, i32* %426, align 4
  %428 = xor i32 %425, %427
  %429 = getelementptr inbounds i32, i32* %392, i64 5
  store i32 %428, i32* %429, align 4
  %430 = getelementptr inbounds i32, i32* %392, i64 2
  %431 = load i32, i32* %430, align 4
  %432 = getelementptr inbounds i32, i32* %392, i64 5
  %433 = load i32, i32* %432, align 4
  %434 = xor i32 %431, %433
  %435 = getelementptr inbounds i32, i32* %392, i64 6
  store i32 %434, i32* %435, align 4
  %436 = getelementptr inbounds i32, i32* %392, i64 3
  %437 = load i32, i32* %436, align 4
  %438 = getelementptr inbounds i32, i32* %392, i64 6
  %439 = load i32, i32* %438, align 4
  %440 = xor i32 %437, %439
  %441 = getelementptr inbounds i32, i32* %392, i64 7
  store i32 %440, i32* %441, align 4
  %442 = getelementptr inbounds i32, i32* %392, i64 4
  %443 = getelementptr inbounds i32, i32* %442, i64 3
  %444 = load i32, i32* %443, align 4
  %445 = load i32, i32* %442, align 4
  %446 = lshr i32 %444, 16
  %447 = and i32 %446, 255
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = and i32 %450, -16777216
  %452 = xor i32 %445, %451
  %453 = lshr i32 %444, 8
  %454 = and i32 %453, 255
  %455 = zext i32 %454 to i64
  %456 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %455
  %457 = load i32, i32* %456, align 4
  %458 = and i32 %457, 16711680
  %459 = xor i32 %452, %458
  %460 = and i32 %444, 255
  %461 = zext i32 %460 to i64
  %462 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %461
  %463 = load i32, i32* %462, align 4
  %464 = and i32 %463, 65280
  %465 = xor i32 %459, %464
  %466 = lshr i32 %444, 24
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %467
  %469 = load i32, i32* %468, align 4
  %470 = and i32 %469, 255
  %471 = xor i32 %465, %470
  %472 = xor i32 %471, -2147483648
  %473 = getelementptr inbounds i32, i32* %442, i64 4
  store i32 %472, i32* %473, align 4
  %474 = getelementptr inbounds i32, i32* %442, i64 1
  %475 = load i32, i32* %474, align 4
  %476 = getelementptr inbounds i32, i32* %442, i64 4
  %477 = load i32, i32* %476, align 4
  %478 = xor i32 %475, %477
  %479 = getelementptr inbounds i32, i32* %442, i64 5
  store i32 %478, i32* %479, align 4
  %480 = getelementptr inbounds i32, i32* %442, i64 2
  %481 = load i32, i32* %480, align 4
  %482 = getelementptr inbounds i32, i32* %442, i64 5
  %483 = load i32, i32* %482, align 4
  %484 = xor i32 %481, %483
  %485 = getelementptr inbounds i32, i32* %442, i64 6
  store i32 %484, i32* %485, align 4
  %486 = getelementptr inbounds i32, i32* %442, i64 3
  %487 = load i32, i32* %486, align 4
  %488 = getelementptr inbounds i32, i32* %442, i64 6
  %489 = load i32, i32* %488, align 4
  %490 = xor i32 %487, %489
  %491 = getelementptr inbounds i32, i32* %442, i64 7
  store i32 %490, i32* %491, align 4
  %492 = getelementptr inbounds i32, i32* %442, i64 4
  %493 = getelementptr inbounds i32, i32* %492, i64 3
  %494 = load i32, i32* %493, align 4
  %495 = load i32, i32* %492, align 4
  %496 = lshr i32 %494, 16
  %497 = and i32 %496, 255
  %498 = zext i32 %497 to i64
  %499 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %498
  %500 = load i32, i32* %499, align 4
  %501 = and i32 %500, -16777216
  %502 = xor i32 %495, %501
  %503 = lshr i32 %494, 8
  %504 = and i32 %503, 255
  %505 = zext i32 %504 to i64
  %506 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %505
  %507 = load i32, i32* %506, align 4
  %508 = and i32 %507, 16711680
  %509 = xor i32 %502, %508
  %510 = and i32 %494, 255
  %511 = zext i32 %510 to i64
  %512 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %511
  %513 = load i32, i32* %512, align 4
  %514 = and i32 %513, 65280
  %515 = xor i32 %509, %514
  %516 = lshr i32 %494, 24
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %517
  %519 = load i32, i32* %518, align 4
  %520 = and i32 %519, 255
  %521 = xor i32 %515, %520
  %522 = xor i32 %521, 452984832
  %523 = getelementptr inbounds i32, i32* %492, i64 4
  store i32 %522, i32* %523, align 4
  %524 = getelementptr inbounds i32, i32* %492, i64 1
  %525 = load i32, i32* %524, align 4
  %526 = getelementptr inbounds i32, i32* %492, i64 4
  %527 = load i32, i32* %526, align 4
  %528 = xor i32 %525, %527
  %529 = getelementptr inbounds i32, i32* %492, i64 5
  store i32 %528, i32* %529, align 4
  %530 = getelementptr inbounds i32, i32* %492, i64 2
  %531 = load i32, i32* %530, align 4
  %532 = getelementptr inbounds i32, i32* %492, i64 5
  %533 = load i32, i32* %532, align 4
  %534 = xor i32 %531, %533
  %535 = getelementptr inbounds i32, i32* %492, i64 6
  store i32 %534, i32* %535, align 4
  %536 = getelementptr inbounds i32, i32* %492, i64 3
  %537 = load i32, i32* %536, align 4
  %538 = getelementptr inbounds i32, i32* %492, i64 6
  %539 = load i32, i32* %538, align 4
  %540 = xor i32 %537, %539
  %541 = getelementptr inbounds i32, i32* %492, i64 7
  store i32 %540, i32* %541, align 4
  %542 = getelementptr inbounds i32, i32* %492, i64 4
  %543 = getelementptr inbounds i32, i32* %542, i64 3
  %544 = load i32, i32* %543, align 4
  %545 = load i32, i32* %542, align 4
  %546 = lshr i32 %544, 16
  %547 = and i32 %546, 255
  %548 = zext i32 %547 to i64
  %549 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = and i32 %550, -16777216
  %552 = xor i32 %545, %551
  %553 = lshr i32 %544, 8
  %554 = and i32 %553, 255
  %555 = zext i32 %554 to i64
  %556 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %555
  %557 = load i32, i32* %556, align 4
  %558 = and i32 %557, 16711680
  %559 = xor i32 %552, %558
  %560 = and i32 %544, 255
  %561 = zext i32 %560 to i64
  %562 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %561
  %563 = load i32, i32* %562, align 4
  %564 = and i32 %563, 65280
  %565 = xor i32 %559, %564
  %566 = lshr i32 %544, 24
  %567 = zext i32 %566 to i64
  %568 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %567
  %569 = load i32, i32* %568, align 4
  %570 = and i32 %569, 255
  %571 = xor i32 %565, %570
  %572 = xor i32 %571, 905969664
  %573 = getelementptr inbounds i32, i32* %542, i64 4
  store i32 %572, i32* %573, align 4
  %574 = getelementptr inbounds i32, i32* %542, i64 1
  %575 = load i32, i32* %574, align 4
  %576 = getelementptr inbounds i32, i32* %542, i64 4
  %577 = load i32, i32* %576, align 4
  %578 = xor i32 %575, %577
  %579 = getelementptr inbounds i32, i32* %542, i64 5
  store i32 %578, i32* %579, align 4
  %580 = getelementptr inbounds i32, i32* %542, i64 2
  %581 = load i32, i32* %580, align 4
  %582 = getelementptr inbounds i32, i32* %542, i64 5
  %583 = load i32, i32* %582, align 4
  %584 = xor i32 %581, %583
  %585 = getelementptr inbounds i32, i32* %542, i64 6
  store i32 %584, i32* %585, align 4
  %586 = getelementptr inbounds i32, i32* %542, i64 3
  %587 = load i32, i32* %586, align 4
  %588 = getelementptr inbounds i32, i32* %542, i64 6
  %589 = load i32, i32* %588, align 4
  %590 = xor i32 %587, %589
  %591 = getelementptr inbounds i32, i32* %542, i64 7
  store i32 %590, i32* %591, align 4
  br label %951

592:                                              ; preds = %3
  %593 = getelementptr inbounds i8, i8* %1, i64 16
  %594 = getelementptr inbounds i8, i8* %593, i64 0
  %595 = load i8, i8* %594, align 1
  %596 = zext i8 %595 to i32
  %597 = shl i32 %596, 24
  %598 = getelementptr inbounds i8, i8* %1, i64 16
  %599 = getelementptr inbounds i8, i8* %598, i64 1
  %600 = load i8, i8* %599, align 1
  %601 = zext i8 %600 to i32
  %602 = shl i32 %601, 16
  %603 = xor i32 %597, %602
  %604 = getelementptr inbounds i8, i8* %1, i64 16
  %605 = getelementptr inbounds i8, i8* %604, i64 2
  %606 = load i8, i8* %605, align 1
  %607 = zext i8 %606 to i32
  %608 = shl i32 %607, 8
  %609 = xor i32 %603, %608
  %610 = getelementptr inbounds i8, i8* %1, i64 16
  %611 = getelementptr inbounds i8, i8* %610, i64 3
  %612 = load i8, i8* %611, align 1
  %613 = zext i8 %612 to i32
  %614 = xor i32 %609, %613
  %615 = getelementptr inbounds i32, i32* %0, i64 4
  store i32 %614, i32* %615, align 4
  %616 = getelementptr inbounds i8, i8* %1, i64 20
  %617 = getelementptr inbounds i8, i8* %616, i64 0
  %618 = load i8, i8* %617, align 1
  %619 = zext i8 %618 to i32
  %620 = shl i32 %619, 24
  %621 = getelementptr inbounds i8, i8* %1, i64 20
  %622 = getelementptr inbounds i8, i8* %621, i64 1
  %623 = load i8, i8* %622, align 1
  %624 = zext i8 %623 to i32
  %625 = shl i32 %624, 16
  %626 = xor i32 %620, %625
  %627 = getelementptr inbounds i8, i8* %1, i64 20
  %628 = getelementptr inbounds i8, i8* %627, i64 2
  %629 = load i8, i8* %628, align 1
  %630 = zext i8 %629 to i32
  %631 = shl i32 %630, 8
  %632 = xor i32 %626, %631
  %633 = getelementptr inbounds i8, i8* %1, i64 20
  %634 = getelementptr inbounds i8, i8* %633, i64 3
  %635 = load i8, i8* %634, align 1
  %636 = zext i8 %635 to i32
  %637 = xor i32 %632, %636
  %638 = getelementptr inbounds i32, i32* %0, i64 5
  store i32 %637, i32* %638, align 4
  %639 = icmp eq i32 %2, 192
  br i1 %639, label %.preheader5, label %753

.preheader5:                                      ; preds = %592
  br label %640

640:                                              ; preds = %.preheader5
  %641 = getelementptr inbounds i32, i32* %0, i64 5
  %642 = load i32, i32* %641, align 4
  %643 = load i32, i32* %0, align 4
  %644 = lshr i32 %642, 16
  %645 = and i32 %644, 255
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %646
  %648 = load i32, i32* %647, align 4
  %649 = and i32 %648, -16777216
  %650 = xor i32 %643, %649
  %651 = lshr i32 %642, 8
  %652 = and i32 %651, 255
  %653 = zext i32 %652 to i64
  %654 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %653
  %655 = load i32, i32* %654, align 4
  %656 = and i32 %655, 16711680
  %657 = xor i32 %650, %656
  %658 = and i32 %642, 255
  %659 = zext i32 %658 to i64
  %660 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %659
  %661 = load i32, i32* %660, align 4
  %662 = and i32 %661, 65280
  %663 = xor i32 %657, %662
  %664 = lshr i32 %642, 24
  %665 = zext i32 %664 to i64
  %666 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %665
  %667 = load i32, i32* %666, align 4
  %668 = and i32 %667, 255
  %669 = xor i32 %663, %668
  %670 = xor i32 %669, 16777216
  %671 = getelementptr inbounds i32, i32* %0, i64 6
  store i32 %670, i32* %671, align 4
  %672 = getelementptr inbounds i32, i32* %0, i64 1
  %673 = load i32, i32* %672, align 4
  %674 = getelementptr inbounds i32, i32* %0, i64 6
  %675 = load i32, i32* %674, align 4
  %676 = xor i32 %673, %675
  %677 = getelementptr inbounds i32, i32* %0, i64 7
  store i32 %676, i32* %677, align 4
  %678 = getelementptr inbounds i32, i32* %0, i64 2
  %679 = load i32, i32* %678, align 4
  %680 = getelementptr inbounds i32, i32* %0, i64 7
  %681 = load i32, i32* %680, align 4
  %682 = xor i32 %679, %681
  %683 = getelementptr inbounds i32, i32* %0, i64 8
  store i32 %682, i32* %683, align 4
  %684 = getelementptr inbounds i32, i32* %0, i64 3
  %685 = load i32, i32* %684, align 4
  %686 = getelementptr inbounds i32, i32* %0, i64 8
  %687 = load i32, i32* %686, align 4
  %688 = xor i32 %685, %687
  %689 = getelementptr inbounds i32, i32* %0, i64 9
  store i32 %688, i32* %689, align 4
  br label %690

690:                                              ; preds = %640
  %691 = getelementptr inbounds i32, i32* %0, i64 4
  %692 = load i32, i32* %691, align 4
  %693 = getelementptr inbounds i32, i32* %0, i64 9
  %694 = load i32, i32* %693, align 4
  %695 = xor i32 %692, %694
  %696 = getelementptr inbounds i32, i32* %0, i64 10
  store i32 %695, i32* %696, align 4
  %697 = getelementptr inbounds i32, i32* %0, i64 5
  %698 = load i32, i32* %697, align 4
  %699 = getelementptr inbounds i32, i32* %0, i64 10
  %700 = load i32, i32* %699, align 4
  %701 = xor i32 %698, %700
  %702 = getelementptr inbounds i32, i32* %0, i64 11
  store i32 %701, i32* %702, align 4
  %703 = getelementptr inbounds i32, i32* %0, i64 6
  %704 = getelementptr inbounds i32, i32* %703, i64 5
  %705 = load i32, i32* %704, align 4
  %706 = load i32, i32* %703, align 4
  %707 = lshr i32 %705, 16
  %708 = and i32 %707, 255
  %709 = zext i32 %708 to i64
  %710 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %709
  %711 = load i32, i32* %710, align 4
  %712 = and i32 %711, -16777216
  %713 = xor i32 %706, %712
  %714 = lshr i32 %705, 8
  %715 = and i32 %714, 255
  %716 = zext i32 %715 to i64
  %717 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %716
  %718 = load i32, i32* %717, align 4
  %719 = and i32 %718, 16711680
  %720 = xor i32 %713, %719
  %721 = and i32 %705, 255
  %722 = zext i32 %721 to i64
  %723 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %722
  %724 = load i32, i32* %723, align 4
  %725 = and i32 %724, 65280
  %726 = xor i32 %720, %725
  %727 = lshr i32 %705, 24
  %728 = zext i32 %727 to i64
  %729 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %728
  %730 = load i32, i32* %729, align 4
  %731 = and i32 %730, 255
  %732 = xor i32 %726, %731
  %733 = xor i32 %732, 33554432
  %734 = getelementptr inbounds i32, i32* %703, i64 6
  store i32 %733, i32* %734, align 4
  %735 = getelementptr inbounds i32, i32* %703, i64 1
  %736 = load i32, i32* %735, align 4
  %737 = getelementptr inbounds i32, i32* %703, i64 6
  %738 = load i32, i32* %737, align 4
  %739 = xor i32 %736, %738
  %740 = getelementptr inbounds i32, i32* %703, i64 7
  store i32 %739, i32* %740, align 4
  %741 = getelementptr inbounds i32, i32* %703, i64 2
  %742 = load i32, i32* %741, align 4
  %743 = getelementptr inbounds i32, i32* %703, i64 7
  %744 = load i32, i32* %743, align 4
  %745 = xor i32 %742, %744
  %746 = getelementptr inbounds i32, i32* %703, i64 8
  store i32 %745, i32* %746, align 4
  %747 = getelementptr inbounds i32, i32* %703, i64 3
  %748 = load i32, i32* %747, align 4
  %749 = getelementptr inbounds i32, i32* %703, i64 8
  %750 = load i32, i32* %749, align 4
  %751 = xor i32 %748, %750
  %752 = getelementptr inbounds i32, i32* %703, i64 9
  store i32 %751, i32* %752, align 4
  br label %952

753:                                              ; preds = %592
  %754 = getelementptr inbounds i8, i8* %1, i64 24
  %755 = getelementptr inbounds i8, i8* %754, i64 0
  %756 = load i8, i8* %755, align 1
  %757 = zext i8 %756 to i32
  %758 = shl i32 %757, 24
  %759 = getelementptr inbounds i8, i8* %1, i64 24
  %760 = getelementptr inbounds i8, i8* %759, i64 1
  %761 = load i8, i8* %760, align 1
  %762 = zext i8 %761 to i32
  %763 = shl i32 %762, 16
  %764 = xor i32 %758, %763
  %765 = getelementptr inbounds i8, i8* %1, i64 24
  %766 = getelementptr inbounds i8, i8* %765, i64 2
  %767 = load i8, i8* %766, align 1
  %768 = zext i8 %767 to i32
  %769 = shl i32 %768, 8
  %770 = xor i32 %764, %769
  %771 = getelementptr inbounds i8, i8* %1, i64 24
  %772 = getelementptr inbounds i8, i8* %771, i64 3
  %773 = load i8, i8* %772, align 1
  %774 = zext i8 %773 to i32
  %775 = xor i32 %770, %774
  %776 = getelementptr inbounds i32, i32* %0, i64 6
  store i32 %775, i32* %776, align 4
  %777 = getelementptr inbounds i8, i8* %1, i64 28
  %778 = getelementptr inbounds i8, i8* %777, i64 0
  %779 = load i8, i8* %778, align 1
  %780 = zext i8 %779 to i32
  %781 = shl i32 %780, 24
  %782 = getelementptr inbounds i8, i8* %1, i64 28
  %783 = getelementptr inbounds i8, i8* %782, i64 1
  %784 = load i8, i8* %783, align 1
  %785 = zext i8 %784 to i32
  %786 = shl i32 %785, 16
  %787 = xor i32 %781, %786
  %788 = getelementptr inbounds i8, i8* %1, i64 28
  %789 = getelementptr inbounds i8, i8* %788, i64 2
  %790 = load i8, i8* %789, align 1
  %791 = zext i8 %790 to i32
  %792 = shl i32 %791, 8
  %793 = xor i32 %787, %792
  %794 = getelementptr inbounds i8, i8* %1, i64 28
  %795 = getelementptr inbounds i8, i8* %794, i64 3
  %796 = load i8, i8* %795, align 1
  %797 = zext i8 %796 to i32
  %798 = xor i32 %793, %797
  %799 = getelementptr inbounds i32, i32* %0, i64 7
  store i32 %798, i32* %799, align 4
  %800 = icmp eq i32 %2, 256
  br i1 %800, label %.preheader8, label %951

.preheader8:                                      ; preds = %753
  br label %801

801:                                              ; preds = %.preheader8
  %802 = getelementptr inbounds i32, i32* %0, i64 7
  %803 = load i32, i32* %802, align 4
  %804 = load i32, i32* %0, align 4
  %805 = lshr i32 %803, 16
  %806 = and i32 %805, 255
  %807 = zext i32 %806 to i64
  %808 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %807
  %809 = load i32, i32* %808, align 4
  %810 = and i32 %809, -16777216
  %811 = xor i32 %804, %810
  %812 = lshr i32 %803, 8
  %813 = and i32 %812, 255
  %814 = zext i32 %813 to i64
  %815 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %814
  %816 = load i32, i32* %815, align 4
  %817 = and i32 %816, 16711680
  %818 = xor i32 %811, %817
  %819 = and i32 %803, 255
  %820 = zext i32 %819 to i64
  %821 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %820
  %822 = load i32, i32* %821, align 4
  %823 = and i32 %822, 65280
  %824 = xor i32 %818, %823
  %825 = lshr i32 %803, 24
  %826 = zext i32 %825 to i64
  %827 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %826
  %828 = load i32, i32* %827, align 4
  %829 = and i32 %828, 255
  %830 = xor i32 %824, %829
  %831 = xor i32 %830, 16777216
  %832 = getelementptr inbounds i32, i32* %0, i64 8
  store i32 %831, i32* %832, align 4
  %833 = getelementptr inbounds i32, i32* %0, i64 1
  %834 = load i32, i32* %833, align 4
  %835 = getelementptr inbounds i32, i32* %0, i64 8
  %836 = load i32, i32* %835, align 4
  %837 = xor i32 %834, %836
  %838 = getelementptr inbounds i32, i32* %0, i64 9
  store i32 %837, i32* %838, align 4
  %839 = getelementptr inbounds i32, i32* %0, i64 2
  %840 = load i32, i32* %839, align 4
  %841 = getelementptr inbounds i32, i32* %0, i64 9
  %842 = load i32, i32* %841, align 4
  %843 = xor i32 %840, %842
  %844 = getelementptr inbounds i32, i32* %0, i64 10
  store i32 %843, i32* %844, align 4
  %845 = getelementptr inbounds i32, i32* %0, i64 3
  %846 = load i32, i32* %845, align 4
  %847 = getelementptr inbounds i32, i32* %0, i64 10
  %848 = load i32, i32* %847, align 4
  %849 = xor i32 %846, %848
  %850 = getelementptr inbounds i32, i32* %0, i64 11
  store i32 %849, i32* %850, align 4
  br label %851

851:                                              ; preds = %801
  %852 = getelementptr inbounds i32, i32* %0, i64 11
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds i32, i32* %0, i64 4
  %855 = load i32, i32* %854, align 4
  %856 = lshr i32 %853, 24
  %857 = zext i32 %856 to i64
  %858 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %857
  %859 = load i32, i32* %858, align 4
  %860 = and i32 %859, -16777216
  %861 = xor i32 %855, %860
  %862 = lshr i32 %853, 16
  %863 = and i32 %862, 255
  %864 = zext i32 %863 to i64
  %865 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %864
  %866 = load i32, i32* %865, align 4
  %867 = and i32 %866, 16711680
  %868 = xor i32 %861, %867
  %869 = lshr i32 %853, 8
  %870 = and i32 %869, 255
  %871 = zext i32 %870 to i64
  %872 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %871
  %873 = load i32, i32* %872, align 4
  %874 = and i32 %873, 65280
  %875 = xor i32 %868, %874
  %876 = and i32 %853, 255
  %877 = zext i32 %876 to i64
  %878 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %877
  %879 = load i32, i32* %878, align 4
  %880 = and i32 %879, 255
  %881 = xor i32 %875, %880
  %882 = getelementptr inbounds i32, i32* %0, i64 12
  store i32 %881, i32* %882, align 4
  %883 = getelementptr inbounds i32, i32* %0, i64 5
  %884 = load i32, i32* %883, align 4
  %885 = getelementptr inbounds i32, i32* %0, i64 12
  %886 = load i32, i32* %885, align 4
  %887 = xor i32 %884, %886
  %888 = getelementptr inbounds i32, i32* %0, i64 13
  store i32 %887, i32* %888, align 4
  %889 = getelementptr inbounds i32, i32* %0, i64 6
  %890 = load i32, i32* %889, align 4
  %891 = getelementptr inbounds i32, i32* %0, i64 13
  %892 = load i32, i32* %891, align 4
  %893 = xor i32 %890, %892
  %894 = getelementptr inbounds i32, i32* %0, i64 14
  store i32 %893, i32* %894, align 4
  %895 = getelementptr inbounds i32, i32* %0, i64 7
  %896 = load i32, i32* %895, align 4
  %897 = getelementptr inbounds i32, i32* %0, i64 14
  %898 = load i32, i32* %897, align 4
  %899 = xor i32 %896, %898
  %900 = getelementptr inbounds i32, i32* %0, i64 15
  store i32 %899, i32* %900, align 4
  %901 = getelementptr inbounds i32, i32* %0, i64 8
  %902 = getelementptr inbounds i32, i32* %901, i64 7
  %903 = load i32, i32* %902, align 4
  %904 = load i32, i32* %901, align 4
  %905 = lshr i32 %903, 16
  %906 = and i32 %905, 255
  %907 = zext i32 %906 to i64
  %908 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %907
  %909 = load i32, i32* %908, align 4
  %910 = and i32 %909, -16777216
  %911 = xor i32 %904, %910
  %912 = lshr i32 %903, 8
  %913 = and i32 %912, 255
  %914 = zext i32 %913 to i64
  %915 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %914
  %916 = load i32, i32* %915, align 4
  %917 = and i32 %916, 16711680
  %918 = xor i32 %911, %917
  %919 = and i32 %903, 255
  %920 = zext i32 %919 to i64
  %921 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %920
  %922 = load i32, i32* %921, align 4
  %923 = and i32 %922, 65280
  %924 = xor i32 %918, %923
  %925 = lshr i32 %903, 24
  %926 = zext i32 %925 to i64
  %927 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %926
  %928 = load i32, i32* %927, align 4
  %929 = and i32 %928, 255
  %930 = xor i32 %924, %929
  %931 = xor i32 %930, 33554432
  %932 = getelementptr inbounds i32, i32* %901, i64 8
  store i32 %931, i32* %932, align 4
  %933 = getelementptr inbounds i32, i32* %901, i64 1
  %934 = load i32, i32* %933, align 4
  %935 = getelementptr inbounds i32, i32* %901, i64 8
  %936 = load i32, i32* %935, align 4
  %937 = xor i32 %934, %936
  %938 = getelementptr inbounds i32, i32* %901, i64 9
  store i32 %937, i32* %938, align 4
  %939 = getelementptr inbounds i32, i32* %901, i64 2
  %940 = load i32, i32* %939, align 4
  %941 = getelementptr inbounds i32, i32* %901, i64 9
  %942 = load i32, i32* %941, align 4
  %943 = xor i32 %940, %942
  %944 = getelementptr inbounds i32, i32* %901, i64 10
  store i32 %943, i32* %944, align 4
  %945 = getelementptr inbounds i32, i32* %901, i64 3
  %946 = load i32, i32* %945, align 4
  %947 = getelementptr inbounds i32, i32* %901, i64 10
  %948 = load i32, i32* %947, align 4
  %949 = xor i32 %946, %948
  %950 = getelementptr inbounds i32, i32* %901, i64 11
  store i32 %949, i32* %950, align 4
  br label %1343

.loopexit6:                                       ; preds = %1267
  %.0.ph7 = phi i32 [ 12, %1267 ]
  br label %951

.loopexit9:                                       ; preds = %1743
  %.0.ph10 = phi i32 [ 14, %1743 ]
  br label %951

951:                                              ; preds = %.loopexit9, %.loopexit6, %.loopexit, %753
  %.0 = phi i32 [ 0, %753 ], [ 10, %.loopexit ], [ %.0.ph7, %.loopexit6 ], [ %.0.ph10, %.loopexit9 ]
  ret i32 %.0

952:                                              ; preds = %690
  %953 = getelementptr inbounds i32, i32* %703, i64 4
  %954 = load i32, i32* %953, align 4
  %955 = getelementptr inbounds i32, i32* %703, i64 9
  %956 = load i32, i32* %955, align 4
  %957 = xor i32 %954, %956
  %958 = getelementptr inbounds i32, i32* %703, i64 10
  store i32 %957, i32* %958, align 4
  %959 = getelementptr inbounds i32, i32* %703, i64 5
  %960 = load i32, i32* %959, align 4
  %961 = getelementptr inbounds i32, i32* %703, i64 10
  %962 = load i32, i32* %961, align 4
  %963 = xor i32 %960, %962
  %964 = getelementptr inbounds i32, i32* %703, i64 11
  store i32 %963, i32* %964, align 4
  %965 = getelementptr inbounds i32, i32* %703, i64 6
  %966 = getelementptr inbounds i32, i32* %965, i64 5
  %967 = load i32, i32* %966, align 4
  %968 = load i32, i32* %965, align 4
  %969 = lshr i32 %967, 16
  %970 = and i32 %969, 255
  %971 = zext i32 %970 to i64
  %972 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %971
  %973 = load i32, i32* %972, align 4
  %974 = and i32 %973, -16777216
  %975 = xor i32 %968, %974
  %976 = lshr i32 %967, 8
  %977 = and i32 %976, 255
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %978
  %980 = load i32, i32* %979, align 4
  %981 = and i32 %980, 16711680
  %982 = xor i32 %975, %981
  %983 = and i32 %967, 255
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %984
  %986 = load i32, i32* %985, align 4
  %987 = and i32 %986, 65280
  %988 = xor i32 %982, %987
  %989 = lshr i32 %967, 24
  %990 = zext i32 %989 to i64
  %991 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %990
  %992 = load i32, i32* %991, align 4
  %993 = and i32 %992, 255
  %994 = xor i32 %988, %993
  %995 = xor i32 %994, 67108864
  %996 = getelementptr inbounds i32, i32* %965, i64 6
  store i32 %995, i32* %996, align 4
  %997 = getelementptr inbounds i32, i32* %965, i64 1
  %998 = load i32, i32* %997, align 4
  %999 = getelementptr inbounds i32, i32* %965, i64 6
  %1000 = load i32, i32* %999, align 4
  %1001 = xor i32 %998, %1000
  %1002 = getelementptr inbounds i32, i32* %965, i64 7
  store i32 %1001, i32* %1002, align 4
  %1003 = getelementptr inbounds i32, i32* %965, i64 2
  %1004 = load i32, i32* %1003, align 4
  %1005 = getelementptr inbounds i32, i32* %965, i64 7
  %1006 = load i32, i32* %1005, align 4
  %1007 = xor i32 %1004, %1006
  %1008 = getelementptr inbounds i32, i32* %965, i64 8
  store i32 %1007, i32* %1008, align 4
  %1009 = getelementptr inbounds i32, i32* %965, i64 3
  %1010 = load i32, i32* %1009, align 4
  %1011 = getelementptr inbounds i32, i32* %965, i64 8
  %1012 = load i32, i32* %1011, align 4
  %1013 = xor i32 %1010, %1012
  %1014 = getelementptr inbounds i32, i32* %965, i64 9
  store i32 %1013, i32* %1014, align 4
  br label %1015

1015:                                             ; preds = %952
  %1016 = getelementptr inbounds i32, i32* %965, i64 4
  %1017 = load i32, i32* %1016, align 4
  %1018 = getelementptr inbounds i32, i32* %965, i64 9
  %1019 = load i32, i32* %1018, align 4
  %1020 = xor i32 %1017, %1019
  %1021 = getelementptr inbounds i32, i32* %965, i64 10
  store i32 %1020, i32* %1021, align 4
  %1022 = getelementptr inbounds i32, i32* %965, i64 5
  %1023 = load i32, i32* %1022, align 4
  %1024 = getelementptr inbounds i32, i32* %965, i64 10
  %1025 = load i32, i32* %1024, align 4
  %1026 = xor i32 %1023, %1025
  %1027 = getelementptr inbounds i32, i32* %965, i64 11
  store i32 %1026, i32* %1027, align 4
  %1028 = getelementptr inbounds i32, i32* %965, i64 6
  %1029 = getelementptr inbounds i32, i32* %1028, i64 5
  %1030 = load i32, i32* %1029, align 4
  %1031 = load i32, i32* %1028, align 4
  %1032 = lshr i32 %1030, 16
  %1033 = and i32 %1032, 255
  %1034 = zext i32 %1033 to i64
  %1035 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1034
  %1036 = load i32, i32* %1035, align 4
  %1037 = and i32 %1036, -16777216
  %1038 = xor i32 %1031, %1037
  %1039 = lshr i32 %1030, 8
  %1040 = and i32 %1039, 255
  %1041 = zext i32 %1040 to i64
  %1042 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1041
  %1043 = load i32, i32* %1042, align 4
  %1044 = and i32 %1043, 16711680
  %1045 = xor i32 %1038, %1044
  %1046 = and i32 %1030, 255
  %1047 = zext i32 %1046 to i64
  %1048 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1047
  %1049 = load i32, i32* %1048, align 4
  %1050 = and i32 %1049, 65280
  %1051 = xor i32 %1045, %1050
  %1052 = lshr i32 %1030, 24
  %1053 = zext i32 %1052 to i64
  %1054 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1053
  %1055 = load i32, i32* %1054, align 4
  %1056 = and i32 %1055, 255
  %1057 = xor i32 %1051, %1056
  %1058 = xor i32 %1057, 134217728
  %1059 = getelementptr inbounds i32, i32* %1028, i64 6
  store i32 %1058, i32* %1059, align 4
  %1060 = getelementptr inbounds i32, i32* %1028, i64 1
  %1061 = load i32, i32* %1060, align 4
  %1062 = getelementptr inbounds i32, i32* %1028, i64 6
  %1063 = load i32, i32* %1062, align 4
  %1064 = xor i32 %1061, %1063
  %1065 = getelementptr inbounds i32, i32* %1028, i64 7
  store i32 %1064, i32* %1065, align 4
  %1066 = getelementptr inbounds i32, i32* %1028, i64 2
  %1067 = load i32, i32* %1066, align 4
  %1068 = getelementptr inbounds i32, i32* %1028, i64 7
  %1069 = load i32, i32* %1068, align 4
  %1070 = xor i32 %1067, %1069
  %1071 = getelementptr inbounds i32, i32* %1028, i64 8
  store i32 %1070, i32* %1071, align 4
  %1072 = getelementptr inbounds i32, i32* %1028, i64 3
  %1073 = load i32, i32* %1072, align 4
  %1074 = getelementptr inbounds i32, i32* %1028, i64 8
  %1075 = load i32, i32* %1074, align 4
  %1076 = xor i32 %1073, %1075
  %1077 = getelementptr inbounds i32, i32* %1028, i64 9
  store i32 %1076, i32* %1077, align 4
  br label %1078

1078:                                             ; preds = %1015
  %1079 = getelementptr inbounds i32, i32* %1028, i64 4
  %1080 = load i32, i32* %1079, align 4
  %1081 = getelementptr inbounds i32, i32* %1028, i64 9
  %1082 = load i32, i32* %1081, align 4
  %1083 = xor i32 %1080, %1082
  %1084 = getelementptr inbounds i32, i32* %1028, i64 10
  store i32 %1083, i32* %1084, align 4
  %1085 = getelementptr inbounds i32, i32* %1028, i64 5
  %1086 = load i32, i32* %1085, align 4
  %1087 = getelementptr inbounds i32, i32* %1028, i64 10
  %1088 = load i32, i32* %1087, align 4
  %1089 = xor i32 %1086, %1088
  %1090 = getelementptr inbounds i32, i32* %1028, i64 11
  store i32 %1089, i32* %1090, align 4
  %1091 = getelementptr inbounds i32, i32* %1028, i64 6
  %1092 = getelementptr inbounds i32, i32* %1091, i64 5
  %1093 = load i32, i32* %1092, align 4
  %1094 = load i32, i32* %1091, align 4
  %1095 = lshr i32 %1093, 16
  %1096 = and i32 %1095, 255
  %1097 = zext i32 %1096 to i64
  %1098 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1097
  %1099 = load i32, i32* %1098, align 4
  %1100 = and i32 %1099, -16777216
  %1101 = xor i32 %1094, %1100
  %1102 = lshr i32 %1093, 8
  %1103 = and i32 %1102, 255
  %1104 = zext i32 %1103 to i64
  %1105 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1104
  %1106 = load i32, i32* %1105, align 4
  %1107 = and i32 %1106, 16711680
  %1108 = xor i32 %1101, %1107
  %1109 = and i32 %1093, 255
  %1110 = zext i32 %1109 to i64
  %1111 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1110
  %1112 = load i32, i32* %1111, align 4
  %1113 = and i32 %1112, 65280
  %1114 = xor i32 %1108, %1113
  %1115 = lshr i32 %1093, 24
  %1116 = zext i32 %1115 to i64
  %1117 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1116
  %1118 = load i32, i32* %1117, align 4
  %1119 = and i32 %1118, 255
  %1120 = xor i32 %1114, %1119
  %1121 = xor i32 %1120, 268435456
  %1122 = getelementptr inbounds i32, i32* %1091, i64 6
  store i32 %1121, i32* %1122, align 4
  %1123 = getelementptr inbounds i32, i32* %1091, i64 1
  %1124 = load i32, i32* %1123, align 4
  %1125 = getelementptr inbounds i32, i32* %1091, i64 6
  %1126 = load i32, i32* %1125, align 4
  %1127 = xor i32 %1124, %1126
  %1128 = getelementptr inbounds i32, i32* %1091, i64 7
  store i32 %1127, i32* %1128, align 4
  %1129 = getelementptr inbounds i32, i32* %1091, i64 2
  %1130 = load i32, i32* %1129, align 4
  %1131 = getelementptr inbounds i32, i32* %1091, i64 7
  %1132 = load i32, i32* %1131, align 4
  %1133 = xor i32 %1130, %1132
  %1134 = getelementptr inbounds i32, i32* %1091, i64 8
  store i32 %1133, i32* %1134, align 4
  %1135 = getelementptr inbounds i32, i32* %1091, i64 3
  %1136 = load i32, i32* %1135, align 4
  %1137 = getelementptr inbounds i32, i32* %1091, i64 8
  %1138 = load i32, i32* %1137, align 4
  %1139 = xor i32 %1136, %1138
  %1140 = getelementptr inbounds i32, i32* %1091, i64 9
  store i32 %1139, i32* %1140, align 4
  br label %1141

1141:                                             ; preds = %1078
  %1142 = getelementptr inbounds i32, i32* %1091, i64 4
  %1143 = load i32, i32* %1142, align 4
  %1144 = getelementptr inbounds i32, i32* %1091, i64 9
  %1145 = load i32, i32* %1144, align 4
  %1146 = xor i32 %1143, %1145
  %1147 = getelementptr inbounds i32, i32* %1091, i64 10
  store i32 %1146, i32* %1147, align 4
  %1148 = getelementptr inbounds i32, i32* %1091, i64 5
  %1149 = load i32, i32* %1148, align 4
  %1150 = getelementptr inbounds i32, i32* %1091, i64 10
  %1151 = load i32, i32* %1150, align 4
  %1152 = xor i32 %1149, %1151
  %1153 = getelementptr inbounds i32, i32* %1091, i64 11
  store i32 %1152, i32* %1153, align 4
  %1154 = getelementptr inbounds i32, i32* %1091, i64 6
  %1155 = getelementptr inbounds i32, i32* %1154, i64 5
  %1156 = load i32, i32* %1155, align 4
  %1157 = load i32, i32* %1154, align 4
  %1158 = lshr i32 %1156, 16
  %1159 = and i32 %1158, 255
  %1160 = zext i32 %1159 to i64
  %1161 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1160
  %1162 = load i32, i32* %1161, align 4
  %1163 = and i32 %1162, -16777216
  %1164 = xor i32 %1157, %1163
  %1165 = lshr i32 %1156, 8
  %1166 = and i32 %1165, 255
  %1167 = zext i32 %1166 to i64
  %1168 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1167
  %1169 = load i32, i32* %1168, align 4
  %1170 = and i32 %1169, 16711680
  %1171 = xor i32 %1164, %1170
  %1172 = and i32 %1156, 255
  %1173 = zext i32 %1172 to i64
  %1174 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1173
  %1175 = load i32, i32* %1174, align 4
  %1176 = and i32 %1175, 65280
  %1177 = xor i32 %1171, %1176
  %1178 = lshr i32 %1156, 24
  %1179 = zext i32 %1178 to i64
  %1180 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1179
  %1181 = load i32, i32* %1180, align 4
  %1182 = and i32 %1181, 255
  %1183 = xor i32 %1177, %1182
  %1184 = xor i32 %1183, 536870912
  %1185 = getelementptr inbounds i32, i32* %1154, i64 6
  store i32 %1184, i32* %1185, align 4
  %1186 = getelementptr inbounds i32, i32* %1154, i64 1
  %1187 = load i32, i32* %1186, align 4
  %1188 = getelementptr inbounds i32, i32* %1154, i64 6
  %1189 = load i32, i32* %1188, align 4
  %1190 = xor i32 %1187, %1189
  %1191 = getelementptr inbounds i32, i32* %1154, i64 7
  store i32 %1190, i32* %1191, align 4
  %1192 = getelementptr inbounds i32, i32* %1154, i64 2
  %1193 = load i32, i32* %1192, align 4
  %1194 = getelementptr inbounds i32, i32* %1154, i64 7
  %1195 = load i32, i32* %1194, align 4
  %1196 = xor i32 %1193, %1195
  %1197 = getelementptr inbounds i32, i32* %1154, i64 8
  store i32 %1196, i32* %1197, align 4
  %1198 = getelementptr inbounds i32, i32* %1154, i64 3
  %1199 = load i32, i32* %1198, align 4
  %1200 = getelementptr inbounds i32, i32* %1154, i64 8
  %1201 = load i32, i32* %1200, align 4
  %1202 = xor i32 %1199, %1201
  %1203 = getelementptr inbounds i32, i32* %1154, i64 9
  store i32 %1202, i32* %1203, align 4
  br label %1204

1204:                                             ; preds = %1141
  %1205 = getelementptr inbounds i32, i32* %1154, i64 4
  %1206 = load i32, i32* %1205, align 4
  %1207 = getelementptr inbounds i32, i32* %1154, i64 9
  %1208 = load i32, i32* %1207, align 4
  %1209 = xor i32 %1206, %1208
  %1210 = getelementptr inbounds i32, i32* %1154, i64 10
  store i32 %1209, i32* %1210, align 4
  %1211 = getelementptr inbounds i32, i32* %1154, i64 5
  %1212 = load i32, i32* %1211, align 4
  %1213 = getelementptr inbounds i32, i32* %1154, i64 10
  %1214 = load i32, i32* %1213, align 4
  %1215 = xor i32 %1212, %1214
  %1216 = getelementptr inbounds i32, i32* %1154, i64 11
  store i32 %1215, i32* %1216, align 4
  %1217 = getelementptr inbounds i32, i32* %1154, i64 6
  %1218 = getelementptr inbounds i32, i32* %1217, i64 5
  %1219 = load i32, i32* %1218, align 4
  %1220 = load i32, i32* %1217, align 4
  %1221 = lshr i32 %1219, 16
  %1222 = and i32 %1221, 255
  %1223 = zext i32 %1222 to i64
  %1224 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1223
  %1225 = load i32, i32* %1224, align 4
  %1226 = and i32 %1225, -16777216
  %1227 = xor i32 %1220, %1226
  %1228 = lshr i32 %1219, 8
  %1229 = and i32 %1228, 255
  %1230 = zext i32 %1229 to i64
  %1231 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1230
  %1232 = load i32, i32* %1231, align 4
  %1233 = and i32 %1232, 16711680
  %1234 = xor i32 %1227, %1233
  %1235 = and i32 %1219, 255
  %1236 = zext i32 %1235 to i64
  %1237 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1236
  %1238 = load i32, i32* %1237, align 4
  %1239 = and i32 %1238, 65280
  %1240 = xor i32 %1234, %1239
  %1241 = lshr i32 %1219, 24
  %1242 = zext i32 %1241 to i64
  %1243 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1242
  %1244 = load i32, i32* %1243, align 4
  %1245 = and i32 %1244, 255
  %1246 = xor i32 %1240, %1245
  %1247 = xor i32 %1246, 1073741824
  %1248 = getelementptr inbounds i32, i32* %1217, i64 6
  store i32 %1247, i32* %1248, align 4
  %1249 = getelementptr inbounds i32, i32* %1217, i64 1
  %1250 = load i32, i32* %1249, align 4
  %1251 = getelementptr inbounds i32, i32* %1217, i64 6
  %1252 = load i32, i32* %1251, align 4
  %1253 = xor i32 %1250, %1252
  %1254 = getelementptr inbounds i32, i32* %1217, i64 7
  store i32 %1253, i32* %1254, align 4
  %1255 = getelementptr inbounds i32, i32* %1217, i64 2
  %1256 = load i32, i32* %1255, align 4
  %1257 = getelementptr inbounds i32, i32* %1217, i64 7
  %1258 = load i32, i32* %1257, align 4
  %1259 = xor i32 %1256, %1258
  %1260 = getelementptr inbounds i32, i32* %1217, i64 8
  store i32 %1259, i32* %1260, align 4
  %1261 = getelementptr inbounds i32, i32* %1217, i64 3
  %1262 = load i32, i32* %1261, align 4
  %1263 = getelementptr inbounds i32, i32* %1217, i64 8
  %1264 = load i32, i32* %1263, align 4
  %1265 = xor i32 %1262, %1264
  %1266 = getelementptr inbounds i32, i32* %1217, i64 9
  store i32 %1265, i32* %1266, align 4
  br label %1267

1267:                                             ; preds = %1204
  %1268 = getelementptr inbounds i32, i32* %1217, i64 4
  %1269 = load i32, i32* %1268, align 4
  %1270 = getelementptr inbounds i32, i32* %1217, i64 9
  %1271 = load i32, i32* %1270, align 4
  %1272 = xor i32 %1269, %1271
  %1273 = getelementptr inbounds i32, i32* %1217, i64 10
  store i32 %1272, i32* %1273, align 4
  %1274 = getelementptr inbounds i32, i32* %1217, i64 5
  %1275 = load i32, i32* %1274, align 4
  %1276 = getelementptr inbounds i32, i32* %1217, i64 10
  %1277 = load i32, i32* %1276, align 4
  %1278 = xor i32 %1275, %1277
  %1279 = getelementptr inbounds i32, i32* %1217, i64 11
  store i32 %1278, i32* %1279, align 4
  %1280 = getelementptr inbounds i32, i32* %1217, i64 6
  %1281 = getelementptr inbounds i32, i32* %1280, i64 5
  %1282 = load i32, i32* %1281, align 4
  %1283 = load i32, i32* %1280, align 4
  %1284 = lshr i32 %1282, 16
  %1285 = and i32 %1284, 255
  %1286 = zext i32 %1285 to i64
  %1287 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1286
  %1288 = load i32, i32* %1287, align 4
  %1289 = and i32 %1288, -16777216
  %1290 = xor i32 %1283, %1289
  %1291 = lshr i32 %1282, 8
  %1292 = and i32 %1291, 255
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1293
  %1295 = load i32, i32* %1294, align 4
  %1296 = and i32 %1295, 16711680
  %1297 = xor i32 %1290, %1296
  %1298 = and i32 %1282, 255
  %1299 = zext i32 %1298 to i64
  %1300 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1299
  %1301 = load i32, i32* %1300, align 4
  %1302 = and i32 %1301, 65280
  %1303 = xor i32 %1297, %1302
  %1304 = lshr i32 %1282, 24
  %1305 = zext i32 %1304 to i64
  %1306 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1305
  %1307 = load i32, i32* %1306, align 4
  %1308 = and i32 %1307, 255
  %1309 = xor i32 %1303, %1308
  %1310 = xor i32 %1309, -2147483648
  %1311 = getelementptr inbounds i32, i32* %1280, i64 6
  store i32 %1310, i32* %1311, align 4
  %1312 = getelementptr inbounds i32, i32* %1280, i64 1
  %1313 = load i32, i32* %1312, align 4
  %1314 = getelementptr inbounds i32, i32* %1280, i64 6
  %1315 = load i32, i32* %1314, align 4
  %1316 = xor i32 %1313, %1315
  %1317 = getelementptr inbounds i32, i32* %1280, i64 7
  store i32 %1316, i32* %1317, align 4
  %1318 = getelementptr inbounds i32, i32* %1280, i64 2
  %1319 = load i32, i32* %1318, align 4
  %1320 = getelementptr inbounds i32, i32* %1280, i64 7
  %1321 = load i32, i32* %1320, align 4
  %1322 = xor i32 %1319, %1321
  %1323 = getelementptr inbounds i32, i32* %1280, i64 8
  store i32 %1322, i32* %1323, align 4
  %1324 = getelementptr inbounds i32, i32* %1280, i64 3
  %1325 = load i32, i32* %1324, align 4
  %1326 = getelementptr inbounds i32, i32* %1280, i64 8
  %1327 = load i32, i32* %1326, align 4
  %1328 = xor i32 %1325, %1327
  %1329 = getelementptr inbounds i32, i32* %1280, i64 9
  store i32 %1328, i32* %1329, align 4
  br i1 true, label %.loopexit6, label %1330

1330:                                             ; preds = %1267
  %1331 = getelementptr inbounds i32, i32* %1280, i64 4
  %1332 = load i32, i32* %1331, align 4
  %1333 = getelementptr inbounds i32, i32* %1280, i64 9
  %1334 = load i32, i32* %1333, align 4
  %1335 = xor i32 %1332, %1334
  %1336 = getelementptr inbounds i32, i32* %1280, i64 10
  store i32 %1335, i32* %1336, align 4
  %1337 = getelementptr inbounds i32, i32* %1280, i64 5
  %1338 = load i32, i32* %1337, align 4
  %1339 = getelementptr inbounds i32, i32* %1280, i64 10
  %1340 = load i32, i32* %1339, align 4
  %1341 = xor i32 %1338, %1340
  %1342 = getelementptr inbounds i32, i32* %1280, i64 11
  store i32 %1341, i32* %1342, align 4
  unreachable

1343:                                             ; preds = %851
  %1344 = getelementptr inbounds i32, i32* %901, i64 11
  %1345 = load i32, i32* %1344, align 4
  %1346 = getelementptr inbounds i32, i32* %901, i64 4
  %1347 = load i32, i32* %1346, align 4
  %1348 = lshr i32 %1345, 24
  %1349 = zext i32 %1348 to i64
  %1350 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1349
  %1351 = load i32, i32* %1350, align 4
  %1352 = and i32 %1351, -16777216
  %1353 = xor i32 %1347, %1352
  %1354 = lshr i32 %1345, 16
  %1355 = and i32 %1354, 255
  %1356 = zext i32 %1355 to i64
  %1357 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1356
  %1358 = load i32, i32* %1357, align 4
  %1359 = and i32 %1358, 16711680
  %1360 = xor i32 %1353, %1359
  %1361 = lshr i32 %1345, 8
  %1362 = and i32 %1361, 255
  %1363 = zext i32 %1362 to i64
  %1364 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1363
  %1365 = load i32, i32* %1364, align 4
  %1366 = and i32 %1365, 65280
  %1367 = xor i32 %1360, %1366
  %1368 = and i32 %1345, 255
  %1369 = zext i32 %1368 to i64
  %1370 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1369
  %1371 = load i32, i32* %1370, align 4
  %1372 = and i32 %1371, 255
  %1373 = xor i32 %1367, %1372
  %1374 = getelementptr inbounds i32, i32* %901, i64 12
  store i32 %1373, i32* %1374, align 4
  %1375 = getelementptr inbounds i32, i32* %901, i64 5
  %1376 = load i32, i32* %1375, align 4
  %1377 = getelementptr inbounds i32, i32* %901, i64 12
  %1378 = load i32, i32* %1377, align 4
  %1379 = xor i32 %1376, %1378
  %1380 = getelementptr inbounds i32, i32* %901, i64 13
  store i32 %1379, i32* %1380, align 4
  %1381 = getelementptr inbounds i32, i32* %901, i64 6
  %1382 = load i32, i32* %1381, align 4
  %1383 = getelementptr inbounds i32, i32* %901, i64 13
  %1384 = load i32, i32* %1383, align 4
  %1385 = xor i32 %1382, %1384
  %1386 = getelementptr inbounds i32, i32* %901, i64 14
  store i32 %1385, i32* %1386, align 4
  %1387 = getelementptr inbounds i32, i32* %901, i64 7
  %1388 = load i32, i32* %1387, align 4
  %1389 = getelementptr inbounds i32, i32* %901, i64 14
  %1390 = load i32, i32* %1389, align 4
  %1391 = xor i32 %1388, %1390
  %1392 = getelementptr inbounds i32, i32* %901, i64 15
  store i32 %1391, i32* %1392, align 4
  %1393 = getelementptr inbounds i32, i32* %901, i64 8
  %1394 = getelementptr inbounds i32, i32* %1393, i64 7
  %1395 = load i32, i32* %1394, align 4
  %1396 = load i32, i32* %1393, align 4
  %1397 = lshr i32 %1395, 16
  %1398 = and i32 %1397, 255
  %1399 = zext i32 %1398 to i64
  %1400 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1399
  %1401 = load i32, i32* %1400, align 4
  %1402 = and i32 %1401, -16777216
  %1403 = xor i32 %1396, %1402
  %1404 = lshr i32 %1395, 8
  %1405 = and i32 %1404, 255
  %1406 = zext i32 %1405 to i64
  %1407 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1406
  %1408 = load i32, i32* %1407, align 4
  %1409 = and i32 %1408, 16711680
  %1410 = xor i32 %1403, %1409
  %1411 = and i32 %1395, 255
  %1412 = zext i32 %1411 to i64
  %1413 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1412
  %1414 = load i32, i32* %1413, align 4
  %1415 = and i32 %1414, 65280
  %1416 = xor i32 %1410, %1415
  %1417 = lshr i32 %1395, 24
  %1418 = zext i32 %1417 to i64
  %1419 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1418
  %1420 = load i32, i32* %1419, align 4
  %1421 = and i32 %1420, 255
  %1422 = xor i32 %1416, %1421
  %1423 = xor i32 %1422, 67108864
  %1424 = getelementptr inbounds i32, i32* %1393, i64 8
  store i32 %1423, i32* %1424, align 4
  %1425 = getelementptr inbounds i32, i32* %1393, i64 1
  %1426 = load i32, i32* %1425, align 4
  %1427 = getelementptr inbounds i32, i32* %1393, i64 8
  %1428 = load i32, i32* %1427, align 4
  %1429 = xor i32 %1426, %1428
  %1430 = getelementptr inbounds i32, i32* %1393, i64 9
  store i32 %1429, i32* %1430, align 4
  %1431 = getelementptr inbounds i32, i32* %1393, i64 2
  %1432 = load i32, i32* %1431, align 4
  %1433 = getelementptr inbounds i32, i32* %1393, i64 9
  %1434 = load i32, i32* %1433, align 4
  %1435 = xor i32 %1432, %1434
  %1436 = getelementptr inbounds i32, i32* %1393, i64 10
  store i32 %1435, i32* %1436, align 4
  %1437 = getelementptr inbounds i32, i32* %1393, i64 3
  %1438 = load i32, i32* %1437, align 4
  %1439 = getelementptr inbounds i32, i32* %1393, i64 10
  %1440 = load i32, i32* %1439, align 4
  %1441 = xor i32 %1438, %1440
  %1442 = getelementptr inbounds i32, i32* %1393, i64 11
  store i32 %1441, i32* %1442, align 4
  br label %1443

1443:                                             ; preds = %1343
  %1444 = getelementptr inbounds i32, i32* %1393, i64 11
  %1445 = load i32, i32* %1444, align 4
  %1446 = getelementptr inbounds i32, i32* %1393, i64 4
  %1447 = load i32, i32* %1446, align 4
  %1448 = lshr i32 %1445, 24
  %1449 = zext i32 %1448 to i64
  %1450 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1449
  %1451 = load i32, i32* %1450, align 4
  %1452 = and i32 %1451, -16777216
  %1453 = xor i32 %1447, %1452
  %1454 = lshr i32 %1445, 16
  %1455 = and i32 %1454, 255
  %1456 = zext i32 %1455 to i64
  %1457 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1456
  %1458 = load i32, i32* %1457, align 4
  %1459 = and i32 %1458, 16711680
  %1460 = xor i32 %1453, %1459
  %1461 = lshr i32 %1445, 8
  %1462 = and i32 %1461, 255
  %1463 = zext i32 %1462 to i64
  %1464 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1463
  %1465 = load i32, i32* %1464, align 4
  %1466 = and i32 %1465, 65280
  %1467 = xor i32 %1460, %1466
  %1468 = and i32 %1445, 255
  %1469 = zext i32 %1468 to i64
  %1470 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1469
  %1471 = load i32, i32* %1470, align 4
  %1472 = and i32 %1471, 255
  %1473 = xor i32 %1467, %1472
  %1474 = getelementptr inbounds i32, i32* %1393, i64 12
  store i32 %1473, i32* %1474, align 4
  %1475 = getelementptr inbounds i32, i32* %1393, i64 5
  %1476 = load i32, i32* %1475, align 4
  %1477 = getelementptr inbounds i32, i32* %1393, i64 12
  %1478 = load i32, i32* %1477, align 4
  %1479 = xor i32 %1476, %1478
  %1480 = getelementptr inbounds i32, i32* %1393, i64 13
  store i32 %1479, i32* %1480, align 4
  %1481 = getelementptr inbounds i32, i32* %1393, i64 6
  %1482 = load i32, i32* %1481, align 4
  %1483 = getelementptr inbounds i32, i32* %1393, i64 13
  %1484 = load i32, i32* %1483, align 4
  %1485 = xor i32 %1482, %1484
  %1486 = getelementptr inbounds i32, i32* %1393, i64 14
  store i32 %1485, i32* %1486, align 4
  %1487 = getelementptr inbounds i32, i32* %1393, i64 7
  %1488 = load i32, i32* %1487, align 4
  %1489 = getelementptr inbounds i32, i32* %1393, i64 14
  %1490 = load i32, i32* %1489, align 4
  %1491 = xor i32 %1488, %1490
  %1492 = getelementptr inbounds i32, i32* %1393, i64 15
  store i32 %1491, i32* %1492, align 4
  %1493 = getelementptr inbounds i32, i32* %1393, i64 8
  %1494 = getelementptr inbounds i32, i32* %1493, i64 7
  %1495 = load i32, i32* %1494, align 4
  %1496 = load i32, i32* %1493, align 4
  %1497 = lshr i32 %1495, 16
  %1498 = and i32 %1497, 255
  %1499 = zext i32 %1498 to i64
  %1500 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1499
  %1501 = load i32, i32* %1500, align 4
  %1502 = and i32 %1501, -16777216
  %1503 = xor i32 %1496, %1502
  %1504 = lshr i32 %1495, 8
  %1505 = and i32 %1504, 255
  %1506 = zext i32 %1505 to i64
  %1507 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1506
  %1508 = load i32, i32* %1507, align 4
  %1509 = and i32 %1508, 16711680
  %1510 = xor i32 %1503, %1509
  %1511 = and i32 %1495, 255
  %1512 = zext i32 %1511 to i64
  %1513 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1512
  %1514 = load i32, i32* %1513, align 4
  %1515 = and i32 %1514, 65280
  %1516 = xor i32 %1510, %1515
  %1517 = lshr i32 %1495, 24
  %1518 = zext i32 %1517 to i64
  %1519 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1518
  %1520 = load i32, i32* %1519, align 4
  %1521 = and i32 %1520, 255
  %1522 = xor i32 %1516, %1521
  %1523 = xor i32 %1522, 134217728
  %1524 = getelementptr inbounds i32, i32* %1493, i64 8
  store i32 %1523, i32* %1524, align 4
  %1525 = getelementptr inbounds i32, i32* %1493, i64 1
  %1526 = load i32, i32* %1525, align 4
  %1527 = getelementptr inbounds i32, i32* %1493, i64 8
  %1528 = load i32, i32* %1527, align 4
  %1529 = xor i32 %1526, %1528
  %1530 = getelementptr inbounds i32, i32* %1493, i64 9
  store i32 %1529, i32* %1530, align 4
  %1531 = getelementptr inbounds i32, i32* %1493, i64 2
  %1532 = load i32, i32* %1531, align 4
  %1533 = getelementptr inbounds i32, i32* %1493, i64 9
  %1534 = load i32, i32* %1533, align 4
  %1535 = xor i32 %1532, %1534
  %1536 = getelementptr inbounds i32, i32* %1493, i64 10
  store i32 %1535, i32* %1536, align 4
  %1537 = getelementptr inbounds i32, i32* %1493, i64 3
  %1538 = load i32, i32* %1537, align 4
  %1539 = getelementptr inbounds i32, i32* %1493, i64 10
  %1540 = load i32, i32* %1539, align 4
  %1541 = xor i32 %1538, %1540
  %1542 = getelementptr inbounds i32, i32* %1493, i64 11
  store i32 %1541, i32* %1542, align 4
  br label %1543

1543:                                             ; preds = %1443
  %1544 = getelementptr inbounds i32, i32* %1493, i64 11
  %1545 = load i32, i32* %1544, align 4
  %1546 = getelementptr inbounds i32, i32* %1493, i64 4
  %1547 = load i32, i32* %1546, align 4
  %1548 = lshr i32 %1545, 24
  %1549 = zext i32 %1548 to i64
  %1550 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1549
  %1551 = load i32, i32* %1550, align 4
  %1552 = and i32 %1551, -16777216
  %1553 = xor i32 %1547, %1552
  %1554 = lshr i32 %1545, 16
  %1555 = and i32 %1554, 255
  %1556 = zext i32 %1555 to i64
  %1557 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1556
  %1558 = load i32, i32* %1557, align 4
  %1559 = and i32 %1558, 16711680
  %1560 = xor i32 %1553, %1559
  %1561 = lshr i32 %1545, 8
  %1562 = and i32 %1561, 255
  %1563 = zext i32 %1562 to i64
  %1564 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1563
  %1565 = load i32, i32* %1564, align 4
  %1566 = and i32 %1565, 65280
  %1567 = xor i32 %1560, %1566
  %1568 = and i32 %1545, 255
  %1569 = zext i32 %1568 to i64
  %1570 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1569
  %1571 = load i32, i32* %1570, align 4
  %1572 = and i32 %1571, 255
  %1573 = xor i32 %1567, %1572
  %1574 = getelementptr inbounds i32, i32* %1493, i64 12
  store i32 %1573, i32* %1574, align 4
  %1575 = getelementptr inbounds i32, i32* %1493, i64 5
  %1576 = load i32, i32* %1575, align 4
  %1577 = getelementptr inbounds i32, i32* %1493, i64 12
  %1578 = load i32, i32* %1577, align 4
  %1579 = xor i32 %1576, %1578
  %1580 = getelementptr inbounds i32, i32* %1493, i64 13
  store i32 %1579, i32* %1580, align 4
  %1581 = getelementptr inbounds i32, i32* %1493, i64 6
  %1582 = load i32, i32* %1581, align 4
  %1583 = getelementptr inbounds i32, i32* %1493, i64 13
  %1584 = load i32, i32* %1583, align 4
  %1585 = xor i32 %1582, %1584
  %1586 = getelementptr inbounds i32, i32* %1493, i64 14
  store i32 %1585, i32* %1586, align 4
  %1587 = getelementptr inbounds i32, i32* %1493, i64 7
  %1588 = load i32, i32* %1587, align 4
  %1589 = getelementptr inbounds i32, i32* %1493, i64 14
  %1590 = load i32, i32* %1589, align 4
  %1591 = xor i32 %1588, %1590
  %1592 = getelementptr inbounds i32, i32* %1493, i64 15
  store i32 %1591, i32* %1592, align 4
  %1593 = getelementptr inbounds i32, i32* %1493, i64 8
  %1594 = getelementptr inbounds i32, i32* %1593, i64 7
  %1595 = load i32, i32* %1594, align 4
  %1596 = load i32, i32* %1593, align 4
  %1597 = lshr i32 %1595, 16
  %1598 = and i32 %1597, 255
  %1599 = zext i32 %1598 to i64
  %1600 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1599
  %1601 = load i32, i32* %1600, align 4
  %1602 = and i32 %1601, -16777216
  %1603 = xor i32 %1596, %1602
  %1604 = lshr i32 %1595, 8
  %1605 = and i32 %1604, 255
  %1606 = zext i32 %1605 to i64
  %1607 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1606
  %1608 = load i32, i32* %1607, align 4
  %1609 = and i32 %1608, 16711680
  %1610 = xor i32 %1603, %1609
  %1611 = and i32 %1595, 255
  %1612 = zext i32 %1611 to i64
  %1613 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1612
  %1614 = load i32, i32* %1613, align 4
  %1615 = and i32 %1614, 65280
  %1616 = xor i32 %1610, %1615
  %1617 = lshr i32 %1595, 24
  %1618 = zext i32 %1617 to i64
  %1619 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1618
  %1620 = load i32, i32* %1619, align 4
  %1621 = and i32 %1620, 255
  %1622 = xor i32 %1616, %1621
  %1623 = xor i32 %1622, 268435456
  %1624 = getelementptr inbounds i32, i32* %1593, i64 8
  store i32 %1623, i32* %1624, align 4
  %1625 = getelementptr inbounds i32, i32* %1593, i64 1
  %1626 = load i32, i32* %1625, align 4
  %1627 = getelementptr inbounds i32, i32* %1593, i64 8
  %1628 = load i32, i32* %1627, align 4
  %1629 = xor i32 %1626, %1628
  %1630 = getelementptr inbounds i32, i32* %1593, i64 9
  store i32 %1629, i32* %1630, align 4
  %1631 = getelementptr inbounds i32, i32* %1593, i64 2
  %1632 = load i32, i32* %1631, align 4
  %1633 = getelementptr inbounds i32, i32* %1593, i64 9
  %1634 = load i32, i32* %1633, align 4
  %1635 = xor i32 %1632, %1634
  %1636 = getelementptr inbounds i32, i32* %1593, i64 10
  store i32 %1635, i32* %1636, align 4
  %1637 = getelementptr inbounds i32, i32* %1593, i64 3
  %1638 = load i32, i32* %1637, align 4
  %1639 = getelementptr inbounds i32, i32* %1593, i64 10
  %1640 = load i32, i32* %1639, align 4
  %1641 = xor i32 %1638, %1640
  %1642 = getelementptr inbounds i32, i32* %1593, i64 11
  store i32 %1641, i32* %1642, align 4
  br label %1643

1643:                                             ; preds = %1543
  %1644 = getelementptr inbounds i32, i32* %1593, i64 11
  %1645 = load i32, i32* %1644, align 4
  %1646 = getelementptr inbounds i32, i32* %1593, i64 4
  %1647 = load i32, i32* %1646, align 4
  %1648 = lshr i32 %1645, 24
  %1649 = zext i32 %1648 to i64
  %1650 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1649
  %1651 = load i32, i32* %1650, align 4
  %1652 = and i32 %1651, -16777216
  %1653 = xor i32 %1647, %1652
  %1654 = lshr i32 %1645, 16
  %1655 = and i32 %1654, 255
  %1656 = zext i32 %1655 to i64
  %1657 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1656
  %1658 = load i32, i32* %1657, align 4
  %1659 = and i32 %1658, 16711680
  %1660 = xor i32 %1653, %1659
  %1661 = lshr i32 %1645, 8
  %1662 = and i32 %1661, 255
  %1663 = zext i32 %1662 to i64
  %1664 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1663
  %1665 = load i32, i32* %1664, align 4
  %1666 = and i32 %1665, 65280
  %1667 = xor i32 %1660, %1666
  %1668 = and i32 %1645, 255
  %1669 = zext i32 %1668 to i64
  %1670 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1669
  %1671 = load i32, i32* %1670, align 4
  %1672 = and i32 %1671, 255
  %1673 = xor i32 %1667, %1672
  %1674 = getelementptr inbounds i32, i32* %1593, i64 12
  store i32 %1673, i32* %1674, align 4
  %1675 = getelementptr inbounds i32, i32* %1593, i64 5
  %1676 = load i32, i32* %1675, align 4
  %1677 = getelementptr inbounds i32, i32* %1593, i64 12
  %1678 = load i32, i32* %1677, align 4
  %1679 = xor i32 %1676, %1678
  %1680 = getelementptr inbounds i32, i32* %1593, i64 13
  store i32 %1679, i32* %1680, align 4
  %1681 = getelementptr inbounds i32, i32* %1593, i64 6
  %1682 = load i32, i32* %1681, align 4
  %1683 = getelementptr inbounds i32, i32* %1593, i64 13
  %1684 = load i32, i32* %1683, align 4
  %1685 = xor i32 %1682, %1684
  %1686 = getelementptr inbounds i32, i32* %1593, i64 14
  store i32 %1685, i32* %1686, align 4
  %1687 = getelementptr inbounds i32, i32* %1593, i64 7
  %1688 = load i32, i32* %1687, align 4
  %1689 = getelementptr inbounds i32, i32* %1593, i64 14
  %1690 = load i32, i32* %1689, align 4
  %1691 = xor i32 %1688, %1690
  %1692 = getelementptr inbounds i32, i32* %1593, i64 15
  store i32 %1691, i32* %1692, align 4
  %1693 = getelementptr inbounds i32, i32* %1593, i64 8
  %1694 = getelementptr inbounds i32, i32* %1693, i64 7
  %1695 = load i32, i32* %1694, align 4
  %1696 = load i32, i32* %1693, align 4
  %1697 = lshr i32 %1695, 16
  %1698 = and i32 %1697, 255
  %1699 = zext i32 %1698 to i64
  %1700 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1699
  %1701 = load i32, i32* %1700, align 4
  %1702 = and i32 %1701, -16777216
  %1703 = xor i32 %1696, %1702
  %1704 = lshr i32 %1695, 8
  %1705 = and i32 %1704, 255
  %1706 = zext i32 %1705 to i64
  %1707 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1706
  %1708 = load i32, i32* %1707, align 4
  %1709 = and i32 %1708, 16711680
  %1710 = xor i32 %1703, %1709
  %1711 = and i32 %1695, 255
  %1712 = zext i32 %1711 to i64
  %1713 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1712
  %1714 = load i32, i32* %1713, align 4
  %1715 = and i32 %1714, 65280
  %1716 = xor i32 %1710, %1715
  %1717 = lshr i32 %1695, 24
  %1718 = zext i32 %1717 to i64
  %1719 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1718
  %1720 = load i32, i32* %1719, align 4
  %1721 = and i32 %1720, 255
  %1722 = xor i32 %1716, %1721
  %1723 = xor i32 %1722, 536870912
  %1724 = getelementptr inbounds i32, i32* %1693, i64 8
  store i32 %1723, i32* %1724, align 4
  %1725 = getelementptr inbounds i32, i32* %1693, i64 1
  %1726 = load i32, i32* %1725, align 4
  %1727 = getelementptr inbounds i32, i32* %1693, i64 8
  %1728 = load i32, i32* %1727, align 4
  %1729 = xor i32 %1726, %1728
  %1730 = getelementptr inbounds i32, i32* %1693, i64 9
  store i32 %1729, i32* %1730, align 4
  %1731 = getelementptr inbounds i32, i32* %1693, i64 2
  %1732 = load i32, i32* %1731, align 4
  %1733 = getelementptr inbounds i32, i32* %1693, i64 9
  %1734 = load i32, i32* %1733, align 4
  %1735 = xor i32 %1732, %1734
  %1736 = getelementptr inbounds i32, i32* %1693, i64 10
  store i32 %1735, i32* %1736, align 4
  %1737 = getelementptr inbounds i32, i32* %1693, i64 3
  %1738 = load i32, i32* %1737, align 4
  %1739 = getelementptr inbounds i32, i32* %1693, i64 10
  %1740 = load i32, i32* %1739, align 4
  %1741 = xor i32 %1738, %1740
  %1742 = getelementptr inbounds i32, i32* %1693, i64 11
  store i32 %1741, i32* %1742, align 4
  br label %1743

1743:                                             ; preds = %1643
  %1744 = getelementptr inbounds i32, i32* %1693, i64 11
  %1745 = load i32, i32* %1744, align 4
  %1746 = getelementptr inbounds i32, i32* %1693, i64 4
  %1747 = load i32, i32* %1746, align 4
  %1748 = lshr i32 %1745, 24
  %1749 = zext i32 %1748 to i64
  %1750 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1749
  %1751 = load i32, i32* %1750, align 4
  %1752 = and i32 %1751, -16777216
  %1753 = xor i32 %1747, %1752
  %1754 = lshr i32 %1745, 16
  %1755 = and i32 %1754, 255
  %1756 = zext i32 %1755 to i64
  %1757 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1756
  %1758 = load i32, i32* %1757, align 4
  %1759 = and i32 %1758, 16711680
  %1760 = xor i32 %1753, %1759
  %1761 = lshr i32 %1745, 8
  %1762 = and i32 %1761, 255
  %1763 = zext i32 %1762 to i64
  %1764 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1763
  %1765 = load i32, i32* %1764, align 4
  %1766 = and i32 %1765, 65280
  %1767 = xor i32 %1760, %1766
  %1768 = and i32 %1745, 255
  %1769 = zext i32 %1768 to i64
  %1770 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1769
  %1771 = load i32, i32* %1770, align 4
  %1772 = and i32 %1771, 255
  %1773 = xor i32 %1767, %1772
  %1774 = getelementptr inbounds i32, i32* %1693, i64 12
  store i32 %1773, i32* %1774, align 4
  %1775 = getelementptr inbounds i32, i32* %1693, i64 5
  %1776 = load i32, i32* %1775, align 4
  %1777 = getelementptr inbounds i32, i32* %1693, i64 12
  %1778 = load i32, i32* %1777, align 4
  %1779 = xor i32 %1776, %1778
  %1780 = getelementptr inbounds i32, i32* %1693, i64 13
  store i32 %1779, i32* %1780, align 4
  %1781 = getelementptr inbounds i32, i32* %1693, i64 6
  %1782 = load i32, i32* %1781, align 4
  %1783 = getelementptr inbounds i32, i32* %1693, i64 13
  %1784 = load i32, i32* %1783, align 4
  %1785 = xor i32 %1782, %1784
  %1786 = getelementptr inbounds i32, i32* %1693, i64 14
  store i32 %1785, i32* %1786, align 4
  %1787 = getelementptr inbounds i32, i32* %1693, i64 7
  %1788 = load i32, i32* %1787, align 4
  %1789 = getelementptr inbounds i32, i32* %1693, i64 14
  %1790 = load i32, i32* %1789, align 4
  %1791 = xor i32 %1788, %1790
  %1792 = getelementptr inbounds i32, i32* %1693, i64 15
  store i32 %1791, i32* %1792, align 4
  %1793 = getelementptr inbounds i32, i32* %1693, i64 8
  %1794 = getelementptr inbounds i32, i32* %1793, i64 7
  %1795 = load i32, i32* %1794, align 4
  %1796 = load i32, i32* %1793, align 4
  %1797 = lshr i32 %1795, 16
  %1798 = and i32 %1797, 255
  %1799 = zext i32 %1798 to i64
  %1800 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1799
  %1801 = load i32, i32* %1800, align 4
  %1802 = and i32 %1801, -16777216
  %1803 = xor i32 %1796, %1802
  %1804 = lshr i32 %1795, 8
  %1805 = and i32 %1804, 255
  %1806 = zext i32 %1805 to i64
  %1807 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1806
  %1808 = load i32, i32* %1807, align 4
  %1809 = and i32 %1808, 16711680
  %1810 = xor i32 %1803, %1809
  %1811 = and i32 %1795, 255
  %1812 = zext i32 %1811 to i64
  %1813 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1812
  %1814 = load i32, i32* %1813, align 4
  %1815 = and i32 %1814, 65280
  %1816 = xor i32 %1810, %1815
  %1817 = lshr i32 %1795, 24
  %1818 = zext i32 %1817 to i64
  %1819 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1818
  %1820 = load i32, i32* %1819, align 4
  %1821 = and i32 %1820, 255
  %1822 = xor i32 %1816, %1821
  %1823 = xor i32 %1822, 1073741824
  %1824 = getelementptr inbounds i32, i32* %1793, i64 8
  store i32 %1823, i32* %1824, align 4
  %1825 = getelementptr inbounds i32, i32* %1793, i64 1
  %1826 = load i32, i32* %1825, align 4
  %1827 = getelementptr inbounds i32, i32* %1793, i64 8
  %1828 = load i32, i32* %1827, align 4
  %1829 = xor i32 %1826, %1828
  %1830 = getelementptr inbounds i32, i32* %1793, i64 9
  store i32 %1829, i32* %1830, align 4
  %1831 = getelementptr inbounds i32, i32* %1793, i64 2
  %1832 = load i32, i32* %1831, align 4
  %1833 = getelementptr inbounds i32, i32* %1793, i64 9
  %1834 = load i32, i32* %1833, align 4
  %1835 = xor i32 %1832, %1834
  %1836 = getelementptr inbounds i32, i32* %1793, i64 10
  store i32 %1835, i32* %1836, align 4
  %1837 = getelementptr inbounds i32, i32* %1793, i64 3
  %1838 = load i32, i32* %1837, align 4
  %1839 = getelementptr inbounds i32, i32* %1793, i64 10
  %1840 = load i32, i32* %1839, align 4
  %1841 = xor i32 %1838, %1840
  %1842 = getelementptr inbounds i32, i32* %1793, i64 11
  store i32 %1841, i32* %1842, align 4
  br i1 true, label %.loopexit9, label %1843

1843:                                             ; preds = %1743
  %1844 = getelementptr inbounds i32, i32* %1793, i64 11
  %1845 = load i32, i32* %1844, align 4
  %1846 = getelementptr inbounds i32, i32* %1793, i64 4
  %1847 = load i32, i32* %1846, align 4
  %1848 = lshr i32 %1845, 24
  %1849 = zext i32 %1848 to i64
  %1850 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1849
  %1851 = load i32, i32* %1850, align 4
  %1852 = and i32 %1851, -16777216
  %1853 = xor i32 %1847, %1852
  %1854 = lshr i32 %1845, 16
  %1855 = and i32 %1854, 255
  %1856 = zext i32 %1855 to i64
  %1857 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1856
  %1858 = load i32, i32* %1857, align 4
  %1859 = and i32 %1858, 16711680
  %1860 = xor i32 %1853, %1859
  %1861 = lshr i32 %1845, 8
  %1862 = and i32 %1861, 255
  %1863 = zext i32 %1862 to i64
  %1864 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1863
  %1865 = load i32, i32* %1864, align 4
  %1866 = and i32 %1865, 65280
  %1867 = xor i32 %1860, %1866
  %1868 = and i32 %1845, 255
  %1869 = zext i32 %1868 to i64
  %1870 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1869
  %1871 = load i32, i32* %1870, align 4
  %1872 = and i32 %1871, 255
  %1873 = xor i32 %1867, %1872
  %1874 = getelementptr inbounds i32, i32* %1793, i64 12
  store i32 %1873, i32* %1874, align 4
  %1875 = getelementptr inbounds i32, i32* %1793, i64 5
  %1876 = load i32, i32* %1875, align 4
  %1877 = getelementptr inbounds i32, i32* %1793, i64 12
  %1878 = load i32, i32* %1877, align 4
  %1879 = xor i32 %1876, %1878
  %1880 = getelementptr inbounds i32, i32* %1793, i64 13
  store i32 %1879, i32* %1880, align 4
  %1881 = getelementptr inbounds i32, i32* %1793, i64 6
  %1882 = load i32, i32* %1881, align 4
  %1883 = getelementptr inbounds i32, i32* %1793, i64 13
  %1884 = load i32, i32* %1883, align 4
  %1885 = xor i32 %1882, %1884
  %1886 = getelementptr inbounds i32, i32* %1793, i64 14
  store i32 %1885, i32* %1886, align 4
  %1887 = getelementptr inbounds i32, i32* %1793, i64 7
  %1888 = load i32, i32* %1887, align 4
  %1889 = getelementptr inbounds i32, i32* %1793, i64 14
  %1890 = load i32, i32* %1889, align 4
  %1891 = xor i32 %1888, %1890
  %1892 = getelementptr inbounds i32, i32* %1793, i64 15
  store i32 %1891, i32* %1892, align 4
  unreachable
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @prepare_inputs(i8* %0, i8* %1) #0 {
  call void @randombytes(i8* %0, i64 16)
  br label %3

3:                                                ; preds = %2
  %4 = call zeroext i8 @randombit()
  store i8 %4, i8* %1, align 1
  %5 = load i8, i8* %1, align 1
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 16, i1 false)
  br label %9

9:                                                ; preds = %8, %3
  ret void
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @rijndaelKeySetupDec(i32* %0, i8* %1, i32 %2) #0 {
  %4 = call i32 @rijndaelKeySetupEnc(i32* %0, i8* %1, i32 %2)
  %5 = mul nsw i32 4, %4
  %6 = icmp slt i32 0, %5
  br i1 %6, label %.lr.ph8, label %.preheader

.lr.ph8:                                          ; preds = %3
  %7 = shl i32 %4, 2
  %8 = sext i32 %7 to i64
  br label %10

..preheader_crit_edge:                            ; preds = %10
  %split = phi i32 [ 1, %10 ]
  %split9 = phi i32* [ %0, %10 ]
  br label %.preheader

.preheader:                                       ; preds = %..preheader_crit_edge, %3
  %.1.ph = phi i32 [ %split, %..preheader_crit_edge ], [ 1, %3 ]
  %.0.ph = phi i32* [ %split9, %..preheader_crit_edge ], [ %0, %3 ]
  %9 = icmp slt i32 %.1.ph, %4
  br i1 %9, label %.lr.ph, label %230

.lr.ph:                                           ; preds = %.preheader
  br label %48

10:                                               ; preds = %.lr.ph8, %10
  %indvars.iv10 = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next11, %10 ]
  %indvars.iv = phi i64 [ %8, %.lr.ph8 ], [ %indvars.iv.next, %10 ]
  %11 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  store i32 %12, i32* %16, align 4
  %17 = add nuw nsw i64 %indvars.iv10, 1
  %18 = getelementptr inbounds i32, i32* %0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i64 %indvars.iv, 1
  %21 = getelementptr inbounds i32, i32* %0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = add nuw nsw i64 %indvars.iv10, 1
  %24 = getelementptr inbounds i32, i32* %0, i64 %23
  store i32 %22, i32* %24, align 4
  %25 = add nsw i64 %indvars.iv, 1
  %26 = getelementptr inbounds i32, i32* %0, i64 %25
  store i32 %19, i32* %26, align 4
  %27 = add nuw nsw i64 %indvars.iv10, 2
  %28 = getelementptr inbounds i32, i32* %0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i64 %indvars.iv, 2
  %31 = getelementptr inbounds i32, i32* %0, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = add nuw nsw i64 %indvars.iv10, 2
  %34 = getelementptr inbounds i32, i32* %0, i64 %33
  store i32 %32, i32* %34, align 4
  %35 = add nsw i64 %indvars.iv, 2
  %36 = getelementptr inbounds i32, i32* %0, i64 %35
  store i32 %29, i32* %36, align 4
  %37 = add nuw nsw i64 %indvars.iv10, 3
  %38 = getelementptr inbounds i32, i32* %0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i64 %indvars.iv, 3
  %41 = getelementptr inbounds i32, i32* %0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = add nuw nsw i64 %indvars.iv10, 3
  %44 = getelementptr inbounds i32, i32* %0, i64 %43
  store i32 %42, i32* %44, align 4
  %45 = add nsw i64 %indvars.iv, 3
  %46 = getelementptr inbounds i32, i32* %0, i64 %45
  store i32 %39, i32* %46, align 4
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 4
  %indvars.iv.next = add nsw i64 %indvars.iv, -4
  %47 = icmp slt i64 %indvars.iv.next11, %indvars.iv.next
  br i1 %47, label %10, label %..preheader_crit_edge

48:                                               ; preds = %.lr.ph, %48
  %.04 = phi i32* [ %.0.ph, %.lr.ph ], [ %49, %48 ]
  %.13 = phi i32 [ %.1.ph, %.lr.ph ], [ %229, %48 ]
  %49 = getelementptr inbounds i32, i32* %.04, i64 4
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 24
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 255
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %49, align 4
  %60 = lshr i32 %59, 16
  %61 = and i32 %60, 255
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 255
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = xor i32 %58, %68
  %70 = load i32, i32* %49, align 4
  %71 = lshr i32 %70, 8
  %72 = and i32 %71, 255
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 255
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = xor i32 %69, %79
  %81 = load i32, i32* %49, align 4
  %82 = and i32 %81, 255
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 255
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = xor i32 %80, %89
  store i32 %90, i32* %49, align 4
  %91 = getelementptr inbounds i32, i32* %49, i64 1
  %92 = load i32, i32* %91, align 4
  %93 = lshr i32 %92, 24
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 255
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds i32, i32* %49, i64 1
  %102 = load i32, i32* %101, align 4
  %103 = lshr i32 %102, 16
  %104 = and i32 %103, 255
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 255
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = xor i32 %100, %111
  %113 = getelementptr inbounds i32, i32* %49, i64 1
  %114 = load i32, i32* %113, align 4
  %115 = lshr i32 %114, 8
  %116 = and i32 %115, 255
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, 255
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = xor i32 %112, %123
  %125 = getelementptr inbounds i32, i32* %49, i64 1
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 255
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 255
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = xor i32 %124, %134
  %136 = getelementptr inbounds i32, i32* %49, i64 1
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds i32, i32* %49, i64 2
  %138 = load i32, i32* %137, align 4
  %139 = lshr i32 %138, 24
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 255
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds i32, i32* %49, i64 2
  %148 = load i32, i32* %147, align 4
  %149 = lshr i32 %148, 16
  %150 = and i32 %149, 255
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = and i32 %153, 255
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = xor i32 %146, %157
  %159 = getelementptr inbounds i32, i32* %49, i64 2
  %160 = load i32, i32* %159, align 4
  %161 = lshr i32 %160, 8
  %162 = and i32 %161, 255
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 255
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = xor i32 %158, %169
  %171 = getelementptr inbounds i32, i32* %49, i64 2
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 255
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, 255
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = xor i32 %170, %180
  %182 = getelementptr inbounds i32, i32* %49, i64 2
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds i32, i32* %49, i64 3
  %184 = load i32, i32* %183, align 4
  %185 = lshr i32 %184, 24
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = and i32 %188, 255
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds i32, i32* %49, i64 3
  %194 = load i32, i32* %193, align 4
  %195 = lshr i32 %194, 16
  %196 = and i32 %195, 255
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = and i32 %199, 255
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = xor i32 %192, %203
  %205 = getelementptr inbounds i32, i32* %49, i64 3
  %206 = load i32, i32* %205, align 4
  %207 = lshr i32 %206, 8
  %208 = and i32 %207, 255
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %209
  %211 = load i32, i32* %210, align 4
  %212 = and i32 %211, 255
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = xor i32 %204, %215
  %217 = getelementptr inbounds i32, i32* %49, i64 3
  %218 = load i32, i32* %217, align 4
  %219 = and i32 %218, 255
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = and i32 %222, 255
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = xor i32 %216, %226
  %228 = getelementptr inbounds i32, i32* %49, i64 3
  store i32 %227, i32* %228, align 4
  %229 = add nuw nsw i32 %.13, 1
  %exitcond = icmp ne i32 %229, %4
  br i1 %exitcond, label %48, label %._crit_edge

._crit_edge:                                      ; preds = %48
  br label %230

230:                                              ; preds = %._crit_edge, %.preheader
  ret i32 %4
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @rijndaelDecrypt(i32* %0, i32 %1, i8* %2, i8* %3) #0 {
  %5 = getelementptr inbounds i8, i8* %2, i64 0
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl i32 %7, 24
  %9 = getelementptr inbounds i8, i8* %2, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl i32 %11, 16
  %13 = xor i32 %8, %12
  %14 = getelementptr inbounds i8, i8* %2, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl i32 %16, 8
  %18 = xor i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %2, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = xor i32 %18, %21
  %23 = getelementptr inbounds i32, i32* %0, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = xor i32 %22, %24
  %26 = getelementptr inbounds i8, i8* %2, i64 4
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl i32 %29, 24
  %31 = getelementptr inbounds i8, i8* %2, i64 4
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl i32 %34, 16
  %36 = xor i32 %30, %35
  %37 = getelementptr inbounds i8, i8* %2, i64 4
  %38 = getelementptr inbounds i8, i8* %37, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl i32 %40, 8
  %42 = xor i32 %36, %41
  %43 = getelementptr inbounds i8, i8* %2, i64 4
  %44 = getelementptr inbounds i8, i8* %43, i64 3
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = xor i32 %42, %46
  %48 = getelementptr inbounds i32, i32* %0, i64 1
  %49 = load i32, i32* %48, align 4
  %50 = xor i32 %47, %49
  %51 = getelementptr inbounds i8, i8* %2, i64 8
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl i32 %54, 24
  %56 = getelementptr inbounds i8, i8* %2, i64 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = shl i32 %59, 16
  %61 = xor i32 %55, %60
  %62 = getelementptr inbounds i8, i8* %2, i64 8
  %63 = getelementptr inbounds i8, i8* %62, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl i32 %65, 8
  %67 = xor i32 %61, %66
  %68 = getelementptr inbounds i8, i8* %2, i64 8
  %69 = getelementptr inbounds i8, i8* %68, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = xor i32 %67, %71
  %73 = getelementptr inbounds i32, i32* %0, i64 2
  %74 = load i32, i32* %73, align 4
  %75 = xor i32 %72, %74
  %76 = getelementptr inbounds i8, i8* %2, i64 12
  %77 = getelementptr inbounds i8, i8* %76, i64 0
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl i32 %79, 24
  %81 = getelementptr inbounds i8, i8* %2, i64 12
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl i32 %84, 16
  %86 = xor i32 %80, %85
  %87 = getelementptr inbounds i8, i8* %2, i64 12
  %88 = getelementptr inbounds i8, i8* %87, i64 2
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl i32 %90, 8
  %92 = xor i32 %86, %91
  %93 = getelementptr inbounds i8, i8* %2, i64 12
  %94 = getelementptr inbounds i8, i8* %93, i64 3
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = xor i32 %92, %96
  %98 = getelementptr inbounds i32, i32* %0, i64 3
  %99 = load i32, i32* %98, align 4
  %100 = xor i32 %97, %99
  %101 = lshr i32 %25, 24
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = lshr i32 %100, 16
  %106 = and i32 %105, 255
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = xor i32 %104, %109
  %111 = lshr i32 %75, 8
  %112 = and i32 %111, 255
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = xor i32 %110, %115
  %117 = and i32 %50, 255
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = xor i32 %116, %120
  %122 = getelementptr inbounds i32, i32* %0, i64 4
  %123 = load i32, i32* %122, align 4
  %124 = xor i32 %121, %123
  %125 = lshr i32 %50, 24
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = lshr i32 %25, 16
  %130 = and i32 %129, 255
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = xor i32 %128, %133
  %135 = lshr i32 %100, 8
  %136 = and i32 %135, 255
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = xor i32 %134, %139
  %141 = and i32 %75, 255
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = xor i32 %140, %144
  %146 = getelementptr inbounds i32, i32* %0, i64 5
  %147 = load i32, i32* %146, align 4
  %148 = xor i32 %145, %147
  %149 = lshr i32 %75, 24
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = lshr i32 %50, 16
  %154 = and i32 %153, 255
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = xor i32 %152, %157
  %159 = lshr i32 %25, 8
  %160 = and i32 %159, 255
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = xor i32 %158, %163
  %165 = and i32 %100, 255
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = xor i32 %164, %168
  %170 = getelementptr inbounds i32, i32* %0, i64 6
  %171 = load i32, i32* %170, align 4
  %172 = xor i32 %169, %171
  %173 = lshr i32 %100, 24
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = lshr i32 %75, 16
  %178 = and i32 %177, 255
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = xor i32 %176, %181
  %183 = lshr i32 %50, 8
  %184 = and i32 %183, 255
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = xor i32 %182, %187
  %189 = and i32 %25, 255
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = xor i32 %188, %192
  %194 = getelementptr inbounds i32, i32* %0, i64 7
  %195 = load i32, i32* %194, align 4
  %196 = xor i32 %193, %195
  %197 = lshr i32 %124, 24
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = lshr i32 %196, 16
  %202 = and i32 %201, 255
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = xor i32 %200, %205
  %207 = lshr i32 %172, 8
  %208 = and i32 %207, 255
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %209
  %211 = load i32, i32* %210, align 4
  %212 = xor i32 %206, %211
  %213 = and i32 %148, 255
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %214
  %216 = load i32, i32* %215, align 4
  %217 = xor i32 %212, %216
  %218 = getelementptr inbounds i32, i32* %0, i64 8
  %219 = load i32, i32* %218, align 4
  %220 = xor i32 %217, %219
  %221 = lshr i32 %148, 24
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = lshr i32 %124, 16
  %226 = and i32 %225, 255
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = xor i32 %224, %229
  %231 = lshr i32 %196, 8
  %232 = and i32 %231, 255
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = xor i32 %230, %235
  %237 = and i32 %172, 255
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = xor i32 %236, %240
  %242 = getelementptr inbounds i32, i32* %0, i64 9
  %243 = load i32, i32* %242, align 4
  %244 = xor i32 %241, %243
  %245 = lshr i32 %172, 24
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = lshr i32 %148, 16
  %250 = and i32 %249, 255
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = xor i32 %248, %253
  %255 = lshr i32 %124, 8
  %256 = and i32 %255, 255
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = xor i32 %254, %259
  %261 = and i32 %196, 255
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %262
  %264 = load i32, i32* %263, align 4
  %265 = xor i32 %260, %264
  %266 = getelementptr inbounds i32, i32* %0, i64 10
  %267 = load i32, i32* %266, align 4
  %268 = xor i32 %265, %267
  %269 = lshr i32 %196, 24
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = lshr i32 %172, 16
  %274 = and i32 %273, 255
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = xor i32 %272, %277
  %279 = lshr i32 %148, 8
  %280 = and i32 %279, 255
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %281
  %283 = load i32, i32* %282, align 4
  %284 = xor i32 %278, %283
  %285 = and i32 %124, 255
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = xor i32 %284, %288
  %290 = getelementptr inbounds i32, i32* %0, i64 11
  %291 = load i32, i32* %290, align 4
  %292 = xor i32 %289, %291
  %293 = lshr i32 %220, 24
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = lshr i32 %292, 16
  %298 = and i32 %297, 255
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = xor i32 %296, %301
  %303 = lshr i32 %268, 8
  %304 = and i32 %303, 255
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = xor i32 %302, %307
  %309 = and i32 %244, 255
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = xor i32 %308, %312
  %314 = getelementptr inbounds i32, i32* %0, i64 12
  %315 = load i32, i32* %314, align 4
  %316 = xor i32 %313, %315
  %317 = lshr i32 %244, 24
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %318
  %320 = load i32, i32* %319, align 4
  %321 = lshr i32 %220, 16
  %322 = and i32 %321, 255
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = xor i32 %320, %325
  %327 = lshr i32 %292, 8
  %328 = and i32 %327, 255
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = xor i32 %326, %331
  %333 = and i32 %268, 255
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %334
  %336 = load i32, i32* %335, align 4
  %337 = xor i32 %332, %336
  %338 = getelementptr inbounds i32, i32* %0, i64 13
  %339 = load i32, i32* %338, align 4
  %340 = xor i32 %337, %339
  %341 = lshr i32 %268, 24
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = lshr i32 %244, 16
  %346 = and i32 %345, 255
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = xor i32 %344, %349
  %351 = lshr i32 %220, 8
  %352 = and i32 %351, 255
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = xor i32 %350, %355
  %357 = and i32 %292, 255
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = xor i32 %356, %360
  %362 = getelementptr inbounds i32, i32* %0, i64 14
  %363 = load i32, i32* %362, align 4
  %364 = xor i32 %361, %363
  %365 = lshr i32 %292, 24
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %366
  %368 = load i32, i32* %367, align 4
  %369 = lshr i32 %268, 16
  %370 = and i32 %369, 255
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = xor i32 %368, %373
  %375 = lshr i32 %244, 8
  %376 = and i32 %375, 255
  %377 = zext i32 %376 to i64
  %378 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %377
  %379 = load i32, i32* %378, align 4
  %380 = xor i32 %374, %379
  %381 = and i32 %220, 255
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = xor i32 %380, %384
  %386 = getelementptr inbounds i32, i32* %0, i64 15
  %387 = load i32, i32* %386, align 4
  %388 = xor i32 %385, %387
  %389 = lshr i32 %316, 24
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %390
  %392 = load i32, i32* %391, align 4
  %393 = lshr i32 %388, 16
  %394 = and i32 %393, 255
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %395
  %397 = load i32, i32* %396, align 4
  %398 = xor i32 %392, %397
  %399 = lshr i32 %364, 8
  %400 = and i32 %399, 255
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = xor i32 %398, %403
  %405 = and i32 %340, 255
  %406 = zext i32 %405 to i64
  %407 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %406
  %408 = load i32, i32* %407, align 4
  %409 = xor i32 %404, %408
  %410 = getelementptr inbounds i32, i32* %0, i64 16
  %411 = load i32, i32* %410, align 4
  %412 = xor i32 %409, %411
  %413 = lshr i32 %340, 24
  %414 = zext i32 %413 to i64
  %415 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %414
  %416 = load i32, i32* %415, align 4
  %417 = lshr i32 %316, 16
  %418 = and i32 %417, 255
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %419
  %421 = load i32, i32* %420, align 4
  %422 = xor i32 %416, %421
  %423 = lshr i32 %388, 8
  %424 = and i32 %423, 255
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %425
  %427 = load i32, i32* %426, align 4
  %428 = xor i32 %422, %427
  %429 = and i32 %364, 255
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %430
  %432 = load i32, i32* %431, align 4
  %433 = xor i32 %428, %432
  %434 = getelementptr inbounds i32, i32* %0, i64 17
  %435 = load i32, i32* %434, align 4
  %436 = xor i32 %433, %435
  %437 = lshr i32 %364, 24
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %438
  %440 = load i32, i32* %439, align 4
  %441 = lshr i32 %340, 16
  %442 = and i32 %441, 255
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %443
  %445 = load i32, i32* %444, align 4
  %446 = xor i32 %440, %445
  %447 = lshr i32 %316, 8
  %448 = and i32 %447, 255
  %449 = zext i32 %448 to i64
  %450 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %449
  %451 = load i32, i32* %450, align 4
  %452 = xor i32 %446, %451
  %453 = and i32 %388, 255
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %454
  %456 = load i32, i32* %455, align 4
  %457 = xor i32 %452, %456
  %458 = getelementptr inbounds i32, i32* %0, i64 18
  %459 = load i32, i32* %458, align 4
  %460 = xor i32 %457, %459
  %461 = lshr i32 %388, 24
  %462 = zext i32 %461 to i64
  %463 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %462
  %464 = load i32, i32* %463, align 4
  %465 = lshr i32 %364, 16
  %466 = and i32 %465, 255
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %467
  %469 = load i32, i32* %468, align 4
  %470 = xor i32 %464, %469
  %471 = lshr i32 %340, 8
  %472 = and i32 %471, 255
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %473
  %475 = load i32, i32* %474, align 4
  %476 = xor i32 %470, %475
  %477 = and i32 %316, 255
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = xor i32 %476, %480
  %482 = getelementptr inbounds i32, i32* %0, i64 19
  %483 = load i32, i32* %482, align 4
  %484 = xor i32 %481, %483
  %485 = lshr i32 %412, 24
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = lshr i32 %484, 16
  %490 = and i32 %489, 255
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %491
  %493 = load i32, i32* %492, align 4
  %494 = xor i32 %488, %493
  %495 = lshr i32 %460, 8
  %496 = and i32 %495, 255
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %497
  %499 = load i32, i32* %498, align 4
  %500 = xor i32 %494, %499
  %501 = and i32 %436, 255
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %502
  %504 = load i32, i32* %503, align 4
  %505 = xor i32 %500, %504
  %506 = getelementptr inbounds i32, i32* %0, i64 20
  %507 = load i32, i32* %506, align 4
  %508 = xor i32 %505, %507
  %509 = lshr i32 %436, 24
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %510
  %512 = load i32, i32* %511, align 4
  %513 = lshr i32 %412, 16
  %514 = and i32 %513, 255
  %515 = zext i32 %514 to i64
  %516 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %515
  %517 = load i32, i32* %516, align 4
  %518 = xor i32 %512, %517
  %519 = lshr i32 %484, 8
  %520 = and i32 %519, 255
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %521
  %523 = load i32, i32* %522, align 4
  %524 = xor i32 %518, %523
  %525 = and i32 %460, 255
  %526 = zext i32 %525 to i64
  %527 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %526
  %528 = load i32, i32* %527, align 4
  %529 = xor i32 %524, %528
  %530 = getelementptr inbounds i32, i32* %0, i64 21
  %531 = load i32, i32* %530, align 4
  %532 = xor i32 %529, %531
  %533 = lshr i32 %460, 24
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = lshr i32 %436, 16
  %538 = and i32 %537, 255
  %539 = zext i32 %538 to i64
  %540 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = xor i32 %536, %541
  %543 = lshr i32 %412, 8
  %544 = and i32 %543, 255
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %545
  %547 = load i32, i32* %546, align 4
  %548 = xor i32 %542, %547
  %549 = and i32 %484, 255
  %550 = zext i32 %549 to i64
  %551 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = xor i32 %548, %552
  %554 = getelementptr inbounds i32, i32* %0, i64 22
  %555 = load i32, i32* %554, align 4
  %556 = xor i32 %553, %555
  %557 = lshr i32 %484, 24
  %558 = zext i32 %557 to i64
  %559 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = lshr i32 %460, 16
  %562 = and i32 %561, 255
  %563 = zext i32 %562 to i64
  %564 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %563
  %565 = load i32, i32* %564, align 4
  %566 = xor i32 %560, %565
  %567 = lshr i32 %436, 8
  %568 = and i32 %567, 255
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %569
  %571 = load i32, i32* %570, align 4
  %572 = xor i32 %566, %571
  %573 = and i32 %412, 255
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = xor i32 %572, %576
  %578 = getelementptr inbounds i32, i32* %0, i64 23
  %579 = load i32, i32* %578, align 4
  %580 = xor i32 %577, %579
  %581 = lshr i32 %508, 24
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %582
  %584 = load i32, i32* %583, align 4
  %585 = lshr i32 %580, 16
  %586 = and i32 %585, 255
  %587 = zext i32 %586 to i64
  %588 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %587
  %589 = load i32, i32* %588, align 4
  %590 = xor i32 %584, %589
  %591 = lshr i32 %556, 8
  %592 = and i32 %591, 255
  %593 = zext i32 %592 to i64
  %594 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %593
  %595 = load i32, i32* %594, align 4
  %596 = xor i32 %590, %595
  %597 = and i32 %532, 255
  %598 = zext i32 %597 to i64
  %599 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %598
  %600 = load i32, i32* %599, align 4
  %601 = xor i32 %596, %600
  %602 = getelementptr inbounds i32, i32* %0, i64 24
  %603 = load i32, i32* %602, align 4
  %604 = xor i32 %601, %603
  %605 = lshr i32 %532, 24
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %606
  %608 = load i32, i32* %607, align 4
  %609 = lshr i32 %508, 16
  %610 = and i32 %609, 255
  %611 = zext i32 %610 to i64
  %612 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %611
  %613 = load i32, i32* %612, align 4
  %614 = xor i32 %608, %613
  %615 = lshr i32 %580, 8
  %616 = and i32 %615, 255
  %617 = zext i32 %616 to i64
  %618 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %617
  %619 = load i32, i32* %618, align 4
  %620 = xor i32 %614, %619
  %621 = and i32 %556, 255
  %622 = zext i32 %621 to i64
  %623 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %622
  %624 = load i32, i32* %623, align 4
  %625 = xor i32 %620, %624
  %626 = getelementptr inbounds i32, i32* %0, i64 25
  %627 = load i32, i32* %626, align 4
  %628 = xor i32 %625, %627
  %629 = lshr i32 %556, 24
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %630
  %632 = load i32, i32* %631, align 4
  %633 = lshr i32 %532, 16
  %634 = and i32 %633, 255
  %635 = zext i32 %634 to i64
  %636 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %635
  %637 = load i32, i32* %636, align 4
  %638 = xor i32 %632, %637
  %639 = lshr i32 %508, 8
  %640 = and i32 %639, 255
  %641 = zext i32 %640 to i64
  %642 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %641
  %643 = load i32, i32* %642, align 4
  %644 = xor i32 %638, %643
  %645 = and i32 %580, 255
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %646
  %648 = load i32, i32* %647, align 4
  %649 = xor i32 %644, %648
  %650 = getelementptr inbounds i32, i32* %0, i64 26
  %651 = load i32, i32* %650, align 4
  %652 = xor i32 %649, %651
  %653 = lshr i32 %580, 24
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %654
  %656 = load i32, i32* %655, align 4
  %657 = lshr i32 %556, 16
  %658 = and i32 %657, 255
  %659 = zext i32 %658 to i64
  %660 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %659
  %661 = load i32, i32* %660, align 4
  %662 = xor i32 %656, %661
  %663 = lshr i32 %532, 8
  %664 = and i32 %663, 255
  %665 = zext i32 %664 to i64
  %666 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %665
  %667 = load i32, i32* %666, align 4
  %668 = xor i32 %662, %667
  %669 = and i32 %508, 255
  %670 = zext i32 %669 to i64
  %671 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %670
  %672 = load i32, i32* %671, align 4
  %673 = xor i32 %668, %672
  %674 = getelementptr inbounds i32, i32* %0, i64 27
  %675 = load i32, i32* %674, align 4
  %676 = xor i32 %673, %675
  %677 = lshr i32 %604, 24
  %678 = zext i32 %677 to i64
  %679 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %678
  %680 = load i32, i32* %679, align 4
  %681 = lshr i32 %676, 16
  %682 = and i32 %681, 255
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %683
  %685 = load i32, i32* %684, align 4
  %686 = xor i32 %680, %685
  %687 = lshr i32 %652, 8
  %688 = and i32 %687, 255
  %689 = zext i32 %688 to i64
  %690 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %689
  %691 = load i32, i32* %690, align 4
  %692 = xor i32 %686, %691
  %693 = and i32 %628, 255
  %694 = zext i32 %693 to i64
  %695 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %694
  %696 = load i32, i32* %695, align 4
  %697 = xor i32 %692, %696
  %698 = getelementptr inbounds i32, i32* %0, i64 28
  %699 = load i32, i32* %698, align 4
  %700 = xor i32 %697, %699
  %701 = lshr i32 %628, 24
  %702 = zext i32 %701 to i64
  %703 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %702
  %704 = load i32, i32* %703, align 4
  %705 = lshr i32 %604, 16
  %706 = and i32 %705, 255
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %707
  %709 = load i32, i32* %708, align 4
  %710 = xor i32 %704, %709
  %711 = lshr i32 %676, 8
  %712 = and i32 %711, 255
  %713 = zext i32 %712 to i64
  %714 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %713
  %715 = load i32, i32* %714, align 4
  %716 = xor i32 %710, %715
  %717 = and i32 %652, 255
  %718 = zext i32 %717 to i64
  %719 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %718
  %720 = load i32, i32* %719, align 4
  %721 = xor i32 %716, %720
  %722 = getelementptr inbounds i32, i32* %0, i64 29
  %723 = load i32, i32* %722, align 4
  %724 = xor i32 %721, %723
  %725 = lshr i32 %652, 24
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %726
  %728 = load i32, i32* %727, align 4
  %729 = lshr i32 %628, 16
  %730 = and i32 %729, 255
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %731
  %733 = load i32, i32* %732, align 4
  %734 = xor i32 %728, %733
  %735 = lshr i32 %604, 8
  %736 = and i32 %735, 255
  %737 = zext i32 %736 to i64
  %738 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %737
  %739 = load i32, i32* %738, align 4
  %740 = xor i32 %734, %739
  %741 = and i32 %676, 255
  %742 = zext i32 %741 to i64
  %743 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %742
  %744 = load i32, i32* %743, align 4
  %745 = xor i32 %740, %744
  %746 = getelementptr inbounds i32, i32* %0, i64 30
  %747 = load i32, i32* %746, align 4
  %748 = xor i32 %745, %747
  %749 = lshr i32 %676, 24
  %750 = zext i32 %749 to i64
  %751 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %750
  %752 = load i32, i32* %751, align 4
  %753 = lshr i32 %652, 16
  %754 = and i32 %753, 255
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %755
  %757 = load i32, i32* %756, align 4
  %758 = xor i32 %752, %757
  %759 = lshr i32 %628, 8
  %760 = and i32 %759, 255
  %761 = zext i32 %760 to i64
  %762 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %761
  %763 = load i32, i32* %762, align 4
  %764 = xor i32 %758, %763
  %765 = and i32 %604, 255
  %766 = zext i32 %765 to i64
  %767 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %766
  %768 = load i32, i32* %767, align 4
  %769 = xor i32 %764, %768
  %770 = getelementptr inbounds i32, i32* %0, i64 31
  %771 = load i32, i32* %770, align 4
  %772 = xor i32 %769, %771
  %773 = lshr i32 %700, 24
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %774
  %776 = load i32, i32* %775, align 4
  %777 = lshr i32 %772, 16
  %778 = and i32 %777, 255
  %779 = zext i32 %778 to i64
  %780 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %779
  %781 = load i32, i32* %780, align 4
  %782 = xor i32 %776, %781
  %783 = lshr i32 %748, 8
  %784 = and i32 %783, 255
  %785 = zext i32 %784 to i64
  %786 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %785
  %787 = load i32, i32* %786, align 4
  %788 = xor i32 %782, %787
  %789 = and i32 %724, 255
  %790 = zext i32 %789 to i64
  %791 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %790
  %792 = load i32, i32* %791, align 4
  %793 = xor i32 %788, %792
  %794 = getelementptr inbounds i32, i32* %0, i64 32
  %795 = load i32, i32* %794, align 4
  %796 = xor i32 %793, %795
  %797 = lshr i32 %724, 24
  %798 = zext i32 %797 to i64
  %799 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %798
  %800 = load i32, i32* %799, align 4
  %801 = lshr i32 %700, 16
  %802 = and i32 %801, 255
  %803 = zext i32 %802 to i64
  %804 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %803
  %805 = load i32, i32* %804, align 4
  %806 = xor i32 %800, %805
  %807 = lshr i32 %772, 8
  %808 = and i32 %807, 255
  %809 = zext i32 %808 to i64
  %810 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %809
  %811 = load i32, i32* %810, align 4
  %812 = xor i32 %806, %811
  %813 = and i32 %748, 255
  %814 = zext i32 %813 to i64
  %815 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %814
  %816 = load i32, i32* %815, align 4
  %817 = xor i32 %812, %816
  %818 = getelementptr inbounds i32, i32* %0, i64 33
  %819 = load i32, i32* %818, align 4
  %820 = xor i32 %817, %819
  %821 = lshr i32 %748, 24
  %822 = zext i32 %821 to i64
  %823 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %822
  %824 = load i32, i32* %823, align 4
  %825 = lshr i32 %724, 16
  %826 = and i32 %825, 255
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %827
  %829 = load i32, i32* %828, align 4
  %830 = xor i32 %824, %829
  %831 = lshr i32 %700, 8
  %832 = and i32 %831, 255
  %833 = zext i32 %832 to i64
  %834 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %833
  %835 = load i32, i32* %834, align 4
  %836 = xor i32 %830, %835
  %837 = and i32 %772, 255
  %838 = zext i32 %837 to i64
  %839 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %838
  %840 = load i32, i32* %839, align 4
  %841 = xor i32 %836, %840
  %842 = getelementptr inbounds i32, i32* %0, i64 34
  %843 = load i32, i32* %842, align 4
  %844 = xor i32 %841, %843
  %845 = lshr i32 %772, 24
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %846
  %848 = load i32, i32* %847, align 4
  %849 = lshr i32 %748, 16
  %850 = and i32 %849, 255
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %851
  %853 = load i32, i32* %852, align 4
  %854 = xor i32 %848, %853
  %855 = lshr i32 %724, 8
  %856 = and i32 %855, 255
  %857 = zext i32 %856 to i64
  %858 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %857
  %859 = load i32, i32* %858, align 4
  %860 = xor i32 %854, %859
  %861 = and i32 %700, 255
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %862
  %864 = load i32, i32* %863, align 4
  %865 = xor i32 %860, %864
  %866 = getelementptr inbounds i32, i32* %0, i64 35
  %867 = load i32, i32* %866, align 4
  %868 = xor i32 %865, %867
  %869 = lshr i32 %796, 24
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %870
  %872 = load i32, i32* %871, align 4
  %873 = lshr i32 %868, 16
  %874 = and i32 %873, 255
  %875 = zext i32 %874 to i64
  %876 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %875
  %877 = load i32, i32* %876, align 4
  %878 = xor i32 %872, %877
  %879 = lshr i32 %844, 8
  %880 = and i32 %879, 255
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %881
  %883 = load i32, i32* %882, align 4
  %884 = xor i32 %878, %883
  %885 = and i32 %820, 255
  %886 = zext i32 %885 to i64
  %887 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %886
  %888 = load i32, i32* %887, align 4
  %889 = xor i32 %884, %888
  %890 = getelementptr inbounds i32, i32* %0, i64 36
  %891 = load i32, i32* %890, align 4
  %892 = xor i32 %889, %891
  %893 = lshr i32 %820, 24
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %894
  %896 = load i32, i32* %895, align 4
  %897 = lshr i32 %796, 16
  %898 = and i32 %897, 255
  %899 = zext i32 %898 to i64
  %900 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %899
  %901 = load i32, i32* %900, align 4
  %902 = xor i32 %896, %901
  %903 = lshr i32 %868, 8
  %904 = and i32 %903, 255
  %905 = zext i32 %904 to i64
  %906 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %905
  %907 = load i32, i32* %906, align 4
  %908 = xor i32 %902, %907
  %909 = and i32 %844, 255
  %910 = zext i32 %909 to i64
  %911 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %910
  %912 = load i32, i32* %911, align 4
  %913 = xor i32 %908, %912
  %914 = getelementptr inbounds i32, i32* %0, i64 37
  %915 = load i32, i32* %914, align 4
  %916 = xor i32 %913, %915
  %917 = lshr i32 %844, 24
  %918 = zext i32 %917 to i64
  %919 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %918
  %920 = load i32, i32* %919, align 4
  %921 = lshr i32 %820, 16
  %922 = and i32 %921, 255
  %923 = zext i32 %922 to i64
  %924 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %923
  %925 = load i32, i32* %924, align 4
  %926 = xor i32 %920, %925
  %927 = lshr i32 %796, 8
  %928 = and i32 %927, 255
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %929
  %931 = load i32, i32* %930, align 4
  %932 = xor i32 %926, %931
  %933 = and i32 %868, 255
  %934 = zext i32 %933 to i64
  %935 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %934
  %936 = load i32, i32* %935, align 4
  %937 = xor i32 %932, %936
  %938 = getelementptr inbounds i32, i32* %0, i64 38
  %939 = load i32, i32* %938, align 4
  %940 = xor i32 %937, %939
  %941 = lshr i32 %868, 24
  %942 = zext i32 %941 to i64
  %943 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %942
  %944 = load i32, i32* %943, align 4
  %945 = lshr i32 %844, 16
  %946 = and i32 %945, 255
  %947 = zext i32 %946 to i64
  %948 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %947
  %949 = load i32, i32* %948, align 4
  %950 = xor i32 %944, %949
  %951 = lshr i32 %820, 8
  %952 = and i32 %951, 255
  %953 = zext i32 %952 to i64
  %954 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %953
  %955 = load i32, i32* %954, align 4
  %956 = xor i32 %950, %955
  %957 = and i32 %796, 255
  %958 = zext i32 %957 to i64
  %959 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %958
  %960 = load i32, i32* %959, align 4
  %961 = xor i32 %956, %960
  %962 = getelementptr inbounds i32, i32* %0, i64 39
  %963 = load i32, i32* %962, align 4
  %964 = xor i32 %961, %963
  %965 = icmp sgt i32 %1, 10
  br i1 %965, label %966, label %1353

966:                                              ; preds = %4
  %967 = lshr i32 %892, 24
  %968 = zext i32 %967 to i64
  %969 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %968
  %970 = load i32, i32* %969, align 4
  %971 = lshr i32 %964, 16
  %972 = and i32 %971, 255
  %973 = zext i32 %972 to i64
  %974 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %973
  %975 = load i32, i32* %974, align 4
  %976 = xor i32 %970, %975
  %977 = lshr i32 %940, 8
  %978 = and i32 %977, 255
  %979 = zext i32 %978 to i64
  %980 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %979
  %981 = load i32, i32* %980, align 4
  %982 = xor i32 %976, %981
  %983 = and i32 %916, 255
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %984
  %986 = load i32, i32* %985, align 4
  %987 = xor i32 %982, %986
  %988 = getelementptr inbounds i32, i32* %0, i64 40
  %989 = load i32, i32* %988, align 4
  %990 = xor i32 %987, %989
  %991 = lshr i32 %916, 24
  %992 = zext i32 %991 to i64
  %993 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %992
  %994 = load i32, i32* %993, align 4
  %995 = lshr i32 %892, 16
  %996 = and i32 %995, 255
  %997 = zext i32 %996 to i64
  %998 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %997
  %999 = load i32, i32* %998, align 4
  %1000 = xor i32 %994, %999
  %1001 = lshr i32 %964, 8
  %1002 = and i32 %1001, 255
  %1003 = zext i32 %1002 to i64
  %1004 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1003
  %1005 = load i32, i32* %1004, align 4
  %1006 = xor i32 %1000, %1005
  %1007 = and i32 %940, 255
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1008
  %1010 = load i32, i32* %1009, align 4
  %1011 = xor i32 %1006, %1010
  %1012 = getelementptr inbounds i32, i32* %0, i64 41
  %1013 = load i32, i32* %1012, align 4
  %1014 = xor i32 %1011, %1013
  %1015 = lshr i32 %940, 24
  %1016 = zext i32 %1015 to i64
  %1017 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1016
  %1018 = load i32, i32* %1017, align 4
  %1019 = lshr i32 %916, 16
  %1020 = and i32 %1019, 255
  %1021 = zext i32 %1020 to i64
  %1022 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1021
  %1023 = load i32, i32* %1022, align 4
  %1024 = xor i32 %1018, %1023
  %1025 = lshr i32 %892, 8
  %1026 = and i32 %1025, 255
  %1027 = zext i32 %1026 to i64
  %1028 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1027
  %1029 = load i32, i32* %1028, align 4
  %1030 = xor i32 %1024, %1029
  %1031 = and i32 %964, 255
  %1032 = zext i32 %1031 to i64
  %1033 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1032
  %1034 = load i32, i32* %1033, align 4
  %1035 = xor i32 %1030, %1034
  %1036 = getelementptr inbounds i32, i32* %0, i64 42
  %1037 = load i32, i32* %1036, align 4
  %1038 = xor i32 %1035, %1037
  %1039 = lshr i32 %964, 24
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1040
  %1042 = load i32, i32* %1041, align 4
  %1043 = lshr i32 %940, 16
  %1044 = and i32 %1043, 255
  %1045 = zext i32 %1044 to i64
  %1046 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1045
  %1047 = load i32, i32* %1046, align 4
  %1048 = xor i32 %1042, %1047
  %1049 = lshr i32 %916, 8
  %1050 = and i32 %1049, 255
  %1051 = zext i32 %1050 to i64
  %1052 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1051
  %1053 = load i32, i32* %1052, align 4
  %1054 = xor i32 %1048, %1053
  %1055 = and i32 %892, 255
  %1056 = zext i32 %1055 to i64
  %1057 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1056
  %1058 = load i32, i32* %1057, align 4
  %1059 = xor i32 %1054, %1058
  %1060 = getelementptr inbounds i32, i32* %0, i64 43
  %1061 = load i32, i32* %1060, align 4
  %1062 = xor i32 %1059, %1061
  %1063 = lshr i32 %990, 24
  %1064 = zext i32 %1063 to i64
  %1065 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1064
  %1066 = load i32, i32* %1065, align 4
  %1067 = lshr i32 %1062, 16
  %1068 = and i32 %1067, 255
  %1069 = zext i32 %1068 to i64
  %1070 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1069
  %1071 = load i32, i32* %1070, align 4
  %1072 = xor i32 %1066, %1071
  %1073 = lshr i32 %1038, 8
  %1074 = and i32 %1073, 255
  %1075 = zext i32 %1074 to i64
  %1076 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1075
  %1077 = load i32, i32* %1076, align 4
  %1078 = xor i32 %1072, %1077
  %1079 = and i32 %1014, 255
  %1080 = zext i32 %1079 to i64
  %1081 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1080
  %1082 = load i32, i32* %1081, align 4
  %1083 = xor i32 %1078, %1082
  %1084 = getelementptr inbounds i32, i32* %0, i64 44
  %1085 = load i32, i32* %1084, align 4
  %1086 = xor i32 %1083, %1085
  %1087 = lshr i32 %1014, 24
  %1088 = zext i32 %1087 to i64
  %1089 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1088
  %1090 = load i32, i32* %1089, align 4
  %1091 = lshr i32 %990, 16
  %1092 = and i32 %1091, 255
  %1093 = zext i32 %1092 to i64
  %1094 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1093
  %1095 = load i32, i32* %1094, align 4
  %1096 = xor i32 %1090, %1095
  %1097 = lshr i32 %1062, 8
  %1098 = and i32 %1097, 255
  %1099 = zext i32 %1098 to i64
  %1100 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1099
  %1101 = load i32, i32* %1100, align 4
  %1102 = xor i32 %1096, %1101
  %1103 = and i32 %1038, 255
  %1104 = zext i32 %1103 to i64
  %1105 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1104
  %1106 = load i32, i32* %1105, align 4
  %1107 = xor i32 %1102, %1106
  %1108 = getelementptr inbounds i32, i32* %0, i64 45
  %1109 = load i32, i32* %1108, align 4
  %1110 = xor i32 %1107, %1109
  %1111 = lshr i32 %1038, 24
  %1112 = zext i32 %1111 to i64
  %1113 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1112
  %1114 = load i32, i32* %1113, align 4
  %1115 = lshr i32 %1014, 16
  %1116 = and i32 %1115, 255
  %1117 = zext i32 %1116 to i64
  %1118 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1117
  %1119 = load i32, i32* %1118, align 4
  %1120 = xor i32 %1114, %1119
  %1121 = lshr i32 %990, 8
  %1122 = and i32 %1121, 255
  %1123 = zext i32 %1122 to i64
  %1124 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1123
  %1125 = load i32, i32* %1124, align 4
  %1126 = xor i32 %1120, %1125
  %1127 = and i32 %1062, 255
  %1128 = zext i32 %1127 to i64
  %1129 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1128
  %1130 = load i32, i32* %1129, align 4
  %1131 = xor i32 %1126, %1130
  %1132 = getelementptr inbounds i32, i32* %0, i64 46
  %1133 = load i32, i32* %1132, align 4
  %1134 = xor i32 %1131, %1133
  %1135 = lshr i32 %1062, 24
  %1136 = zext i32 %1135 to i64
  %1137 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1136
  %1138 = load i32, i32* %1137, align 4
  %1139 = lshr i32 %1038, 16
  %1140 = and i32 %1139, 255
  %1141 = zext i32 %1140 to i64
  %1142 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1141
  %1143 = load i32, i32* %1142, align 4
  %1144 = xor i32 %1138, %1143
  %1145 = lshr i32 %1014, 8
  %1146 = and i32 %1145, 255
  %1147 = zext i32 %1146 to i64
  %1148 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1147
  %1149 = load i32, i32* %1148, align 4
  %1150 = xor i32 %1144, %1149
  %1151 = and i32 %990, 255
  %1152 = zext i32 %1151 to i64
  %1153 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1152
  %1154 = load i32, i32* %1153, align 4
  %1155 = xor i32 %1150, %1154
  %1156 = getelementptr inbounds i32, i32* %0, i64 47
  %1157 = load i32, i32* %1156, align 4
  %1158 = xor i32 %1155, %1157
  %1159 = icmp sgt i32 %1, 12
  br i1 %1159, label %1160, label %1353

1160:                                             ; preds = %966
  %1161 = lshr i32 %1086, 24
  %1162 = zext i32 %1161 to i64
  %1163 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1162
  %1164 = load i32, i32* %1163, align 4
  %1165 = lshr i32 %1158, 16
  %1166 = and i32 %1165, 255
  %1167 = zext i32 %1166 to i64
  %1168 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1167
  %1169 = load i32, i32* %1168, align 4
  %1170 = xor i32 %1164, %1169
  %1171 = lshr i32 %1134, 8
  %1172 = and i32 %1171, 255
  %1173 = zext i32 %1172 to i64
  %1174 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1173
  %1175 = load i32, i32* %1174, align 4
  %1176 = xor i32 %1170, %1175
  %1177 = and i32 %1110, 255
  %1178 = zext i32 %1177 to i64
  %1179 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1178
  %1180 = load i32, i32* %1179, align 4
  %1181 = xor i32 %1176, %1180
  %1182 = getelementptr inbounds i32, i32* %0, i64 48
  %1183 = load i32, i32* %1182, align 4
  %1184 = xor i32 %1181, %1183
  %1185 = lshr i32 %1110, 24
  %1186 = zext i32 %1185 to i64
  %1187 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1186
  %1188 = load i32, i32* %1187, align 4
  %1189 = lshr i32 %1086, 16
  %1190 = and i32 %1189, 255
  %1191 = zext i32 %1190 to i64
  %1192 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1191
  %1193 = load i32, i32* %1192, align 4
  %1194 = xor i32 %1188, %1193
  %1195 = lshr i32 %1158, 8
  %1196 = and i32 %1195, 255
  %1197 = zext i32 %1196 to i64
  %1198 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1197
  %1199 = load i32, i32* %1198, align 4
  %1200 = xor i32 %1194, %1199
  %1201 = and i32 %1134, 255
  %1202 = zext i32 %1201 to i64
  %1203 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1202
  %1204 = load i32, i32* %1203, align 4
  %1205 = xor i32 %1200, %1204
  %1206 = getelementptr inbounds i32, i32* %0, i64 49
  %1207 = load i32, i32* %1206, align 4
  %1208 = xor i32 %1205, %1207
  %1209 = lshr i32 %1134, 24
  %1210 = zext i32 %1209 to i64
  %1211 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1210
  %1212 = load i32, i32* %1211, align 4
  %1213 = lshr i32 %1110, 16
  %1214 = and i32 %1213, 255
  %1215 = zext i32 %1214 to i64
  %1216 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1215
  %1217 = load i32, i32* %1216, align 4
  %1218 = xor i32 %1212, %1217
  %1219 = lshr i32 %1086, 8
  %1220 = and i32 %1219, 255
  %1221 = zext i32 %1220 to i64
  %1222 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1221
  %1223 = load i32, i32* %1222, align 4
  %1224 = xor i32 %1218, %1223
  %1225 = and i32 %1158, 255
  %1226 = zext i32 %1225 to i64
  %1227 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1226
  %1228 = load i32, i32* %1227, align 4
  %1229 = xor i32 %1224, %1228
  %1230 = getelementptr inbounds i32, i32* %0, i64 50
  %1231 = load i32, i32* %1230, align 4
  %1232 = xor i32 %1229, %1231
  %1233 = lshr i32 %1158, 24
  %1234 = zext i32 %1233 to i64
  %1235 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1234
  %1236 = load i32, i32* %1235, align 4
  %1237 = lshr i32 %1134, 16
  %1238 = and i32 %1237, 255
  %1239 = zext i32 %1238 to i64
  %1240 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1239
  %1241 = load i32, i32* %1240, align 4
  %1242 = xor i32 %1236, %1241
  %1243 = lshr i32 %1110, 8
  %1244 = and i32 %1243, 255
  %1245 = zext i32 %1244 to i64
  %1246 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1245
  %1247 = load i32, i32* %1246, align 4
  %1248 = xor i32 %1242, %1247
  %1249 = and i32 %1086, 255
  %1250 = zext i32 %1249 to i64
  %1251 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1250
  %1252 = load i32, i32* %1251, align 4
  %1253 = xor i32 %1248, %1252
  %1254 = getelementptr inbounds i32, i32* %0, i64 51
  %1255 = load i32, i32* %1254, align 4
  %1256 = xor i32 %1253, %1255
  %1257 = lshr i32 %1184, 24
  %1258 = zext i32 %1257 to i64
  %1259 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1258
  %1260 = load i32, i32* %1259, align 4
  %1261 = lshr i32 %1256, 16
  %1262 = and i32 %1261, 255
  %1263 = zext i32 %1262 to i64
  %1264 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1263
  %1265 = load i32, i32* %1264, align 4
  %1266 = xor i32 %1260, %1265
  %1267 = lshr i32 %1232, 8
  %1268 = and i32 %1267, 255
  %1269 = zext i32 %1268 to i64
  %1270 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1269
  %1271 = load i32, i32* %1270, align 4
  %1272 = xor i32 %1266, %1271
  %1273 = and i32 %1208, 255
  %1274 = zext i32 %1273 to i64
  %1275 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1274
  %1276 = load i32, i32* %1275, align 4
  %1277 = xor i32 %1272, %1276
  %1278 = getelementptr inbounds i32, i32* %0, i64 52
  %1279 = load i32, i32* %1278, align 4
  %1280 = xor i32 %1277, %1279
  %1281 = lshr i32 %1208, 24
  %1282 = zext i32 %1281 to i64
  %1283 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1282
  %1284 = load i32, i32* %1283, align 4
  %1285 = lshr i32 %1184, 16
  %1286 = and i32 %1285, 255
  %1287 = zext i32 %1286 to i64
  %1288 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1287
  %1289 = load i32, i32* %1288, align 4
  %1290 = xor i32 %1284, %1289
  %1291 = lshr i32 %1256, 8
  %1292 = and i32 %1291, 255
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1293
  %1295 = load i32, i32* %1294, align 4
  %1296 = xor i32 %1290, %1295
  %1297 = and i32 %1232, 255
  %1298 = zext i32 %1297 to i64
  %1299 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1298
  %1300 = load i32, i32* %1299, align 4
  %1301 = xor i32 %1296, %1300
  %1302 = getelementptr inbounds i32, i32* %0, i64 53
  %1303 = load i32, i32* %1302, align 4
  %1304 = xor i32 %1301, %1303
  %1305 = lshr i32 %1232, 24
  %1306 = zext i32 %1305 to i64
  %1307 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1306
  %1308 = load i32, i32* %1307, align 4
  %1309 = lshr i32 %1208, 16
  %1310 = and i32 %1309, 255
  %1311 = zext i32 %1310 to i64
  %1312 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1311
  %1313 = load i32, i32* %1312, align 4
  %1314 = xor i32 %1308, %1313
  %1315 = lshr i32 %1184, 8
  %1316 = and i32 %1315, 255
  %1317 = zext i32 %1316 to i64
  %1318 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1317
  %1319 = load i32, i32* %1318, align 4
  %1320 = xor i32 %1314, %1319
  %1321 = and i32 %1256, 255
  %1322 = zext i32 %1321 to i64
  %1323 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1322
  %1324 = load i32, i32* %1323, align 4
  %1325 = xor i32 %1320, %1324
  %1326 = getelementptr inbounds i32, i32* %0, i64 54
  %1327 = load i32, i32* %1326, align 4
  %1328 = xor i32 %1325, %1327
  %1329 = lshr i32 %1256, 24
  %1330 = zext i32 %1329 to i64
  %1331 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1330
  %1332 = load i32, i32* %1331, align 4
  %1333 = lshr i32 %1232, 16
  %1334 = and i32 %1333, 255
  %1335 = zext i32 %1334 to i64
  %1336 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1335
  %1337 = load i32, i32* %1336, align 4
  %1338 = xor i32 %1332, %1337
  %1339 = lshr i32 %1208, 8
  %1340 = and i32 %1339, 255
  %1341 = zext i32 %1340 to i64
  %1342 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1341
  %1343 = load i32, i32* %1342, align 4
  %1344 = xor i32 %1338, %1343
  %1345 = and i32 %1184, 255
  %1346 = zext i32 %1345 to i64
  %1347 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1346
  %1348 = load i32, i32* %1347, align 4
  %1349 = xor i32 %1344, %1348
  %1350 = getelementptr inbounds i32, i32* %0, i64 55
  %1351 = load i32, i32* %1350, align 4
  %1352 = xor i32 %1349, %1351
  br label %1353

1353:                                             ; preds = %966, %1160, %4
  %.16 = phi i32 [ %892, %4 ], [ %1280, %1160 ], [ %1086, %966 ]
  %.14 = phi i32 [ %916, %4 ], [ %1304, %1160 ], [ %1110, %966 ]
  %.12 = phi i32 [ %940, %4 ], [ %1328, %1160 ], [ %1134, %966 ]
  %.1 = phi i32 [ %964, %4 ], [ %1352, %1160 ], [ %1158, %966 ]
  %1354 = shl i32 %1, 2
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds i32, i32* %0, i64 %1355
  %1357 = lshr i32 %.16, 24
  %1358 = zext i32 %1357 to i64
  %1359 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1358
  %1360 = load i32, i32* %1359, align 4
  %1361 = and i32 %1360, -16777216
  %1362 = lshr i32 %.1, 16
  %1363 = and i32 %1362, 255
  %1364 = zext i32 %1363 to i64
  %1365 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1364
  %1366 = load i32, i32* %1365, align 4
  %1367 = and i32 %1366, 16711680
  %1368 = xor i32 %1361, %1367
  %1369 = lshr i32 %.12, 8
  %1370 = and i32 %1369, 255
  %1371 = zext i32 %1370 to i64
  %1372 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1371
  %1373 = load i32, i32* %1372, align 4
  %1374 = and i32 %1373, 65280
  %1375 = xor i32 %1368, %1374
  %1376 = and i32 %.14, 255
  %1377 = zext i32 %1376 to i64
  %1378 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1377
  %1379 = load i32, i32* %1378, align 4
  %1380 = and i32 %1379, 255
  %1381 = xor i32 %1375, %1380
  %1382 = getelementptr inbounds i32, i32* %1356, i64 0
  %1383 = load i32, i32* %1382, align 4
  %1384 = xor i32 %1381, %1383
  %1385 = lshr i32 %1384, 24
  %1386 = trunc i32 %1385 to i8
  %1387 = getelementptr inbounds i8, i8* %3, i64 0
  store i8 %1386, i8* %1387, align 1
  %1388 = lshr i32 %1384, 16
  %1389 = trunc i32 %1388 to i8
  %1390 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %1389, i8* %1390, align 1
  %1391 = lshr i32 %1384, 8
  %1392 = trunc i32 %1391 to i8
  %1393 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %1392, i8* %1393, align 1
  %1394 = trunc i32 %1384 to i8
  %1395 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %1394, i8* %1395, align 1
  %1396 = lshr i32 %.14, 24
  %1397 = zext i32 %1396 to i64
  %1398 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1397
  %1399 = load i32, i32* %1398, align 4
  %1400 = and i32 %1399, -16777216
  %1401 = lshr i32 %.16, 16
  %1402 = and i32 %1401, 255
  %1403 = zext i32 %1402 to i64
  %1404 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1403
  %1405 = load i32, i32* %1404, align 4
  %1406 = and i32 %1405, 16711680
  %1407 = xor i32 %1400, %1406
  %1408 = lshr i32 %.1, 8
  %1409 = and i32 %1408, 255
  %1410 = zext i32 %1409 to i64
  %1411 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1410
  %1412 = load i32, i32* %1411, align 4
  %1413 = and i32 %1412, 65280
  %1414 = xor i32 %1407, %1413
  %1415 = and i32 %.12, 255
  %1416 = zext i32 %1415 to i64
  %1417 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1416
  %1418 = load i32, i32* %1417, align 4
  %1419 = and i32 %1418, 255
  %1420 = xor i32 %1414, %1419
  %1421 = getelementptr inbounds i32, i32* %1356, i64 1
  %1422 = load i32, i32* %1421, align 4
  %1423 = xor i32 %1420, %1422
  %1424 = lshr i32 %1423, 24
  %1425 = trunc i32 %1424 to i8
  %1426 = getelementptr inbounds i8, i8* %3, i64 4
  %1427 = getelementptr inbounds i8, i8* %1426, i64 0
  store i8 %1425, i8* %1427, align 1
  %1428 = lshr i32 %1423, 16
  %1429 = trunc i32 %1428 to i8
  %1430 = getelementptr inbounds i8, i8* %3, i64 4
  %1431 = getelementptr inbounds i8, i8* %1430, i64 1
  store i8 %1429, i8* %1431, align 1
  %1432 = lshr i32 %1423, 8
  %1433 = trunc i32 %1432 to i8
  %1434 = getelementptr inbounds i8, i8* %3, i64 4
  %1435 = getelementptr inbounds i8, i8* %1434, i64 2
  store i8 %1433, i8* %1435, align 1
  %1436 = trunc i32 %1423 to i8
  %1437 = getelementptr inbounds i8, i8* %3, i64 4
  %1438 = getelementptr inbounds i8, i8* %1437, i64 3
  store i8 %1436, i8* %1438, align 1
  %1439 = lshr i32 %.12, 24
  %1440 = zext i32 %1439 to i64
  %1441 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1440
  %1442 = load i32, i32* %1441, align 4
  %1443 = and i32 %1442, -16777216
  %1444 = lshr i32 %.14, 16
  %1445 = and i32 %1444, 255
  %1446 = zext i32 %1445 to i64
  %1447 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1446
  %1448 = load i32, i32* %1447, align 4
  %1449 = and i32 %1448, 16711680
  %1450 = xor i32 %1443, %1449
  %1451 = lshr i32 %.16, 8
  %1452 = and i32 %1451, 255
  %1453 = zext i32 %1452 to i64
  %1454 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1453
  %1455 = load i32, i32* %1454, align 4
  %1456 = and i32 %1455, 65280
  %1457 = xor i32 %1450, %1456
  %1458 = and i32 %.1, 255
  %1459 = zext i32 %1458 to i64
  %1460 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1459
  %1461 = load i32, i32* %1460, align 4
  %1462 = and i32 %1461, 255
  %1463 = xor i32 %1457, %1462
  %1464 = getelementptr inbounds i32, i32* %1356, i64 2
  %1465 = load i32, i32* %1464, align 4
  %1466 = xor i32 %1463, %1465
  %1467 = lshr i32 %1466, 24
  %1468 = trunc i32 %1467 to i8
  %1469 = getelementptr inbounds i8, i8* %3, i64 8
  %1470 = getelementptr inbounds i8, i8* %1469, i64 0
  store i8 %1468, i8* %1470, align 1
  %1471 = lshr i32 %1466, 16
  %1472 = trunc i32 %1471 to i8
  %1473 = getelementptr inbounds i8, i8* %3, i64 8
  %1474 = getelementptr inbounds i8, i8* %1473, i64 1
  store i8 %1472, i8* %1474, align 1
  %1475 = lshr i32 %1466, 8
  %1476 = trunc i32 %1475 to i8
  %1477 = getelementptr inbounds i8, i8* %3, i64 8
  %1478 = getelementptr inbounds i8, i8* %1477, i64 2
  store i8 %1476, i8* %1478, align 1
  %1479 = trunc i32 %1466 to i8
  %1480 = getelementptr inbounds i8, i8* %3, i64 8
  %1481 = getelementptr inbounds i8, i8* %1480, i64 3
  store i8 %1479, i8* %1481, align 1
  %1482 = lshr i32 %.1, 24
  %1483 = zext i32 %1482 to i64
  %1484 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1483
  %1485 = load i32, i32* %1484, align 4
  %1486 = and i32 %1485, -16777216
  %1487 = lshr i32 %.12, 16
  %1488 = and i32 %1487, 255
  %1489 = zext i32 %1488 to i64
  %1490 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1489
  %1491 = load i32, i32* %1490, align 4
  %1492 = and i32 %1491, 16711680
  %1493 = xor i32 %1486, %1492
  %1494 = lshr i32 %.14, 8
  %1495 = and i32 %1494, 255
  %1496 = zext i32 %1495 to i64
  %1497 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1496
  %1498 = load i32, i32* %1497, align 4
  %1499 = and i32 %1498, 65280
  %1500 = xor i32 %1493, %1499
  %1501 = and i32 %.16, 255
  %1502 = zext i32 %1501 to i64
  %1503 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1502
  %1504 = load i32, i32* %1503, align 4
  %1505 = and i32 %1504, 255
  %1506 = xor i32 %1500, %1505
  %1507 = getelementptr inbounds i32, i32* %1356, i64 3
  %1508 = load i32, i32* %1507, align 4
  %1509 = xor i32 %1506, %1508
  %1510 = lshr i32 %1509, 24
  %1511 = trunc i32 %1510 to i8
  %1512 = getelementptr inbounds i8, i8* %3, i64 12
  %1513 = getelementptr inbounds i8, i8* %1512, i64 0
  store i8 %1511, i8* %1513, align 1
  %1514 = lshr i32 %1509, 16
  %1515 = trunc i32 %1514 to i8
  %1516 = getelementptr inbounds i8, i8* %3, i64 12
  %1517 = getelementptr inbounds i8, i8* %1516, i64 1
  store i8 %1515, i8* %1517, align 1
  %1518 = lshr i32 %1509, 8
  %1519 = trunc i32 %1518 to i8
  %1520 = getelementptr inbounds i8, i8* %3, i64 12
  %1521 = getelementptr inbounds i8, i8* %1520, i64 2
  store i8 %1519, i8* %1521, align 1
  %1522 = trunc i32 %1509 to i8
  %1523 = getelementptr inbounds i8, i8* %3, i64 12
  %1524 = getelementptr inbounds i8, i8* %1523, i64 3
  store i8 %1522, i8* %1524, align 1
  ret void
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @randombytes(i8* %0, i64 %1) #0 {
  %3 = icmp sge i64 %1, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.randombytes, i64 0, i64 0)) #4
  unreachable

5:                                                ; preds = %2
  %6 = load i32, i32* @randombytes.fd, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %.preheader, label %16

.preheader:                                       ; preds = %5
  %8 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %8, i32* @randombytes.fd, align 4
  %9 = load i32, i32* @randombytes.fd, align 4
  %10 = icmp ne i32 %9, -1
  br i1 %10, label %.loopexit, label %.lr.ph7

.lr.ph7:                                          ; preds = %.preheader
  br label %11

11:                                               ; preds = %109, %.lr.ph7
  %12 = call i32 @sleep(i32 1)
  %13 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %13, i32* @randombytes.fd, align 4
  %14 = load i32, i32* @randombytes.fd, align 4
  %15 = icmp ne i32 %14, -1
  br i1 %15, label %..loopexit_crit_edge, label %79

..loopexit_crit_edge:                             ; preds = %109, %104, %99, %94, %89, %84, %79, %11
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %.preheader
  br label %16

16:                                               ; preds = %.loopexit, %5
  %17 = icmp sgt i64 %1, 0
  br i1 %17, label %.lr.ph.lr.ph, label %.outer._crit_edge

.lr.ph.lr.ph:                                     ; preds = %16
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.outer
  %18 = phi i1 [ %17, %.lr.ph.lr.ph ], [ %28, %.outer ]
  %.0.ph6 = phi i8* [ %0, %.lr.ph.lr.ph ], [ %26, %.outer ]
  %.01.ph5 = phi i64 [ %1, %.lr.ph.lr.ph ], [ %27, %.outer ]
  br label %19

19:                                               ; preds = %77, %.lr.ph
  %20 = icmp slt i64 %.01.ph5, 1048576
  %.01. = select i1 %20, i64 %.01.ph5, i64 1048576
  %21 = load i32, i32* @randombytes.fd, align 4
  %22 = call i64 @read(i32 %21, i8* %.0.ph6, i64 %.01.)
  %23 = icmp slt i64 %22, 1
  br i1 %23, label %24, label %.outer

24:                                               ; preds = %19
  %25 = call i32 @sleep(i32 1)
  br i1 %18, label %30, label %._crit_edge

.outer:                                           ; preds = %72, %65, %58, %51, %44, %37, %30, %19
  %.lcssa = phi i64 [ %22, %19 ], [ %33, %30 ], [ %40, %37 ], [ %47, %44 ], [ %54, %51 ], [ %61, %58 ], [ %68, %65 ], [ %75, %72 ]
  %26 = getelementptr inbounds i8, i8* %.0.ph6, i64 %.lcssa
  %27 = sub nsw i64 %.01.ph5, %.lcssa
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %.lr.ph, label %.outer..outer._crit_edge_crit_edge

.outer..outer._crit_edge_crit_edge:               ; preds = %.outer
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer..outer._crit_edge_crit_edge, %16
  br label %29

._crit_edge:                                      ; preds = %77, %70, %63, %56, %49, %42, %35, %24
  br label %29

29:                                               ; preds = %._crit_edge, %.outer._crit_edge
  ret void

30:                                               ; preds = %24
  %31 = icmp slt i64 %.01.ph5, 1048576
  %.01..1 = select i1 %31, i64 %.01.ph5, i64 1048576
  %32 = load i32, i32* @randombytes.fd, align 4
  %33 = call i64 @read(i32 %32, i8* %.0.ph6, i64 %.01..1)
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %35, label %.outer

35:                                               ; preds = %30
  %36 = call i32 @sleep(i32 1)
  br i1 %18, label %37, label %._crit_edge

37:                                               ; preds = %35
  %38 = icmp slt i64 %.01.ph5, 1048576
  %.01..2 = select i1 %38, i64 %.01.ph5, i64 1048576
  %39 = load i32, i32* @randombytes.fd, align 4
  %40 = call i64 @read(i32 %39, i8* %.0.ph6, i64 %.01..2)
  %41 = icmp slt i64 %40, 1
  br i1 %41, label %42, label %.outer

42:                                               ; preds = %37
  %43 = call i32 @sleep(i32 1)
  br i1 %18, label %44, label %._crit_edge

44:                                               ; preds = %42
  %45 = icmp slt i64 %.01.ph5, 1048576
  %.01..3 = select i1 %45, i64 %.01.ph5, i64 1048576
  %46 = load i32, i32* @randombytes.fd, align 4
  %47 = call i64 @read(i32 %46, i8* %.0.ph6, i64 %.01..3)
  %48 = icmp slt i64 %47, 1
  br i1 %48, label %49, label %.outer

49:                                               ; preds = %44
  %50 = call i32 @sleep(i32 1)
  br i1 %18, label %51, label %._crit_edge

51:                                               ; preds = %49
  %52 = icmp slt i64 %.01.ph5, 1048576
  %.01..4 = select i1 %52, i64 %.01.ph5, i64 1048576
  %53 = load i32, i32* @randombytes.fd, align 4
  %54 = call i64 @read(i32 %53, i8* %.0.ph6, i64 %.01..4)
  %55 = icmp slt i64 %54, 1
  br i1 %55, label %56, label %.outer

56:                                               ; preds = %51
  %57 = call i32 @sleep(i32 1)
  br i1 %18, label %58, label %._crit_edge

58:                                               ; preds = %56
  %59 = icmp slt i64 %.01.ph5, 1048576
  %.01..5 = select i1 %59, i64 %.01.ph5, i64 1048576
  %60 = load i32, i32* @randombytes.fd, align 4
  %61 = call i64 @read(i32 %60, i8* %.0.ph6, i64 %.01..5)
  %62 = icmp slt i64 %61, 1
  br i1 %62, label %63, label %.outer

63:                                               ; preds = %58
  %64 = call i32 @sleep(i32 1)
  br i1 %18, label %65, label %._crit_edge

65:                                               ; preds = %63
  %66 = icmp slt i64 %.01.ph5, 1048576
  %.01..6 = select i1 %66, i64 %.01.ph5, i64 1048576
  %67 = load i32, i32* @randombytes.fd, align 4
  %68 = call i64 @read(i32 %67, i8* %.0.ph6, i64 %.01..6)
  %69 = icmp slt i64 %68, 1
  br i1 %69, label %70, label %.outer

70:                                               ; preds = %65
  %71 = call i32 @sleep(i32 1)
  br i1 %18, label %72, label %._crit_edge

72:                                               ; preds = %70
  %73 = icmp slt i64 %.01.ph5, 1048576
  %.01..7 = select i1 %73, i64 %.01.ph5, i64 1048576
  %74 = load i32, i32* @randombytes.fd, align 4
  %75 = call i64 @read(i32 %74, i8* %.0.ph6, i64 %.01..7)
  %76 = icmp slt i64 %75, 1
  br i1 %76, label %77, label %.outer

77:                                               ; preds = %72
  %78 = call i32 @sleep(i32 1)
  br i1 %18, label %19, label %._crit_edge, !llvm.loop !4

79:                                               ; preds = %11
  %80 = call i32 @sleep(i32 1)
  %81 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %81, i32* @randombytes.fd, align 4
  %82 = load i32, i32* @randombytes.fd, align 4
  %83 = icmp ne i32 %82, -1
  br i1 %83, label %..loopexit_crit_edge, label %84

84:                                               ; preds = %79
  %85 = call i32 @sleep(i32 1)
  %86 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %86, i32* @randombytes.fd, align 4
  %87 = load i32, i32* @randombytes.fd, align 4
  %88 = icmp ne i32 %87, -1
  br i1 %88, label %..loopexit_crit_edge, label %89

89:                                               ; preds = %84
  %90 = call i32 @sleep(i32 1)
  %91 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %91, i32* @randombytes.fd, align 4
  %92 = load i32, i32* @randombytes.fd, align 4
  %93 = icmp ne i32 %92, -1
  br i1 %93, label %..loopexit_crit_edge, label %94

94:                                               ; preds = %89
  %95 = call i32 @sleep(i32 1)
  %96 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %96, i32* @randombytes.fd, align 4
  %97 = load i32, i32* @randombytes.fd, align 4
  %98 = icmp ne i32 %97, -1
  br i1 %98, label %..loopexit_crit_edge, label %99

99:                                               ; preds = %94
  %100 = call i32 @sleep(i32 1)
  %101 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %101, i32* @randombytes.fd, align 4
  %102 = load i32, i32* @randombytes.fd, align 4
  %103 = icmp ne i32 %102, -1
  br i1 %103, label %..loopexit_crit_edge, label %104

104:                                              ; preds = %99
  %105 = call i32 @sleep(i32 1)
  %106 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %106, i32* @randombytes.fd, align 4
  %107 = load i32, i32* @randombytes.fd, align 4
  %108 = icmp ne i32 %107, -1
  br i1 %108, label %..loopexit_crit_edge, label %109

109:                                              ; preds = %104
  %110 = call i32 @sleep(i32 1)
  %111 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %111, i32* @randombytes.fd, align 4
  %112 = load i32, i32* @randombytes.fd, align 4
  %113 = icmp ne i32 %112, -1
  br i1 %113, label %..loopexit_crit_edge, label %11, !llvm.loop !6
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #3

declare i32 @open(i8*, i32, ...) #2

declare i32 @sleep(i32) #2

declare i64 @read(i32, i8*, i64) #2

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local zeroext i8 @randombit() #0 {
  %1 = alloca i8, align 1
  store i8 0, i8* %1, align 1
  call void @randombytes(i8* %1, i64 1)
  %2 = load i8, i8* %1, align 1
  %3 = zext i8 %2 to i32
  %4 = and i32 %3, 1
  %5 = trunc i32 %4 to i8
  ret i8 %5
}

attributes #0 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind }

!llvm.ident = !{!0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
