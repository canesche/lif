; ModuleID = 'dudect-examples/aes32/llvm-ir/main2.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@chunk_size = dso_local constant i64 16, align 8
@number_measurements = dso_local constant i64 1, align 8
@__const.main.input_data = private unnamed_addr constant [16 x i8] c".\B1\C9!#S\97\FA\E2\19\9Ee\99\F6d\C5", align 16
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@rk = internal global [44 x i32] zeroinitializer, align 16
@Te0 = internal global [256 x i32] [i32 -966564955, i32 -126059388, i32 -294160487, i32 -159679603, i32 -855539, i32 -697603139, i32 -563122255, i32 -1849309868, i32 1613770832, i32 33620227, i32 -832084055, i32 1445669757, i32 -402719207, i32 -1244145822, i32 1303096294, i32 -327780710, i32 -1882535355, i32 528646813, i32 -1983264448, i32 -92439161, i32 -268764651, i32 -1302767125, i32 -1907931191, i32 -68095989, i32 1101901292, i32 -1277897625, i32 1604494077, i32 1169141738, i32 597466303, i32 1403299063, i32 -462261610, i32 -1681866661, i32 1974974402, i32 -503448292, i32 1033081774, i32 1277568618, i32 1815492186, i32 2118074177, i32 -168298750, i32 -2083730353, i32 1748251740, i32 1369810420, i32 -773462732, i32 -101584632, i32 -495881837, i32 -1411852173, i32 1647391059, i32 706024767, i32 134480908, i32 -1782069422, i32 1176707941, i32 -1648114850, i32 806885416, i32 932615841, i32 168101135, i32 798661301, i32 235341577, i32 605164086, i32 461406363, i32 -538779075, i32 -840176858, i32 1311188841, i32 2142417613, i32 -361400929, i32 302582043, i32 495158174, i32 1479289972, i32 874125870, i32 907746093, i32 -596742478, i32 -1269146898, i32 1537253627, i32 -1538108682, i32 1983593293, i32 -1210657183, i32 2108928974, i32 1378429307, i32 -572267714, i32 1580150641, i32 327451799, i32 -1504488459, i32 -1177431704, i32 0, i32 -1041371860, i32 1075847264, i32 -469959649, i32 2041688520, i32 -1235526675, i32 -731223362, i32 -1916023994, i32 1740553945, i32 1916352843, i32 -1807070498, i32 -1739830060, i32 -1336387352, i32 -2049978550, i32 -1143943061, i32 -974131414, i32 1336584933, i32 -302253290, i32 -2042412091, i32 -1706209833, i32 1714631509, i32 293963156, i32 -1975171633, i32 -369493744, i32 67240454, i32 -25198719, i32 -1605349136, i32 2017213508, i32 631218106, i32 1269344483, i32 -1571728909, i32 1571005438, i32 -2143272768, i32 93294474, i32 1066570413, i32 563977660, i32 1882732616, i32 -235539196, i32 1673313503, i32 2008463041, i32 -1344611723, i32 1109467491, i32 537923632, i32 -436207846, i32 -34344178, i32 -1076702611, i32 -2117218996, i32 403442708, i32 638784309, i32 -1007883217, i32 -1101045791, i32 899127202, i32 -2008791860, i32 773265209, i32 -1815821225, i32 1437050866, i32 -58818942, i32 2050833735, i32 -932944724, i32 -1168286233, i32 840505643, i32 -428641387, i32 -1067425632, i32 427917720, i32 -1638969391, i32 -1545806721, i32 1143087718, i32 1412049534, i32 999329963, i32 193497219, i32 -1941551414, i32 -940642775, i32 1807268051, i32 672404540, i32 -1478566279, i32 -1134666014, i32 369822493, i32 -1378100362, i32 -606019525, i32 1681011286, i32 1949973070, i32 336202270, i32 -1840690725, i32 201721354, i32 1210328172, i32 -1201906460, i32 -1614626211, i32 -1110191250, i32 1135389935, i32 -1000185178, i32 965841320, i32 831886756, i32 -739974089, i32 -226920053, i32 -706222286, i32 -1949775805, i32 104281945, i32 -630362697, i32 26054028, i32 -1311386268, i32 -1672589614, i32 1235855840, i32 -663982924, i32 -1403627782, i32 -202050553, i32 -806688219, i32 -899324497, i32 -193299826, i32 1202630377, i32 268961816, i32 1874508501, i32 -260540280, i32 1243948399, i32 1546530418, i32 941366308, i32 1470539505, i32 1941222599, i32 -1748580783, i32 -873928669, i32 -1579295364, i32 -395021156, i32 1042226977, i32 -1773450275, i32 1639824860, i32 227249030, i32 260737669, i32 -529502064, i32 2084453954, i32 1907733956, i32 -865704278, i32 -1874310952, i32 100860677, i32 -134810111, i32 470683154, i32 -1033805405, i32 1781871967, i32 -1370007559, i32 1773779408, i32 394692241, i32 -1715355304, i32 974986535, i32 664706745, i32 -639508168, i32 -336005101, i32 731420851, i32 571543859, i32 -764843589, i32 -1445340816, i32 126783113, i32 865375399, i32 765172662, i32 1008606754, i32 361203602, i32 -907417312, i32 -2016489911, i32 -1437248001, i32 1344809080, i32 -1512054918, i32 59542671, i32 1503764984, i32 160008576, i32 437062935, i32 1707065306, i32 -672733647, i32 -2076032314, i32 -798463816, i32 -2109652541, i32 697932208, i32 1512910199, i32 504303377, i32 2075177163, i32 -1470868228, i32 1841019862, i32 739644986], align 16
@Te1 = internal global [256 x i32] [i32 -1513725085, i32 -2064089988, i32 -1712425097, i32 -1913226373, i32 234877682, i32 -1110021269, i32 -1310822545, i32 1418839493, i32 1348481072, i32 50462977, i32 -1446090905, i32 2102799147, i32 434634494, i32 1656084439, i32 -431117397, i32 -1695779210, i32 1167051466, i32 -1658879358, i32 1082771913, i32 -2013627011, i32 368048890, i32 -340633255, i32 -913422521, i32 201060592, i32 -331240019, i32 1739838676, i32 -44064094, i32 -364531793, i32 -1088185188, i32 -145513308, i32 -1763413390, i32 1536934080, i32 -1032472649, i32 484572669, i32 -1371696237, i32 1783375398, i32 1517041206, i32 1098792767, i32 49674231, i32 1334037708, i32 1550332980, i32 -195975771, i32 886171109, i32 150598129, i32 -1813876367, i32 1940642008, i32 1398944049, i32 1059722517, i32 201851908, i32 1385547719, i32 1699095331, i32 1587397571, i32 674240536, i32 -1590192490, i32 252314885, i32 -1255171430, i32 151914247, i32 908333586, i32 -1692696448, i32 1038082786, i32 651029483, i32 1766729511, i32 -847269198, i32 -1612024459, i32 454166793, i32 -1642232957, i32 1951935532, i32 775166490, i32 758520603, i32 -1294176658, i32 -290170278, i32 -77881184, i32 -157003182, i32 1299594043, i32 1639438038, i32 -830622797, i32 2068982057, i32 1054729187, i32 1901997871, i32 -1760328572, i32 -173649069, i32 1757008337, i32 0, i32 750906861, i32 1614815264, i32 535035132, i32 -931548751, i32 -306816165, i32 -1093375382, i32 1183697867, i32 -647512386, i32 1265776953, i32 -560706998, i32 -728216500, i32 -391096232, i32 1250283471, i32 1807470800, i32 717615087, i32 -447763798, i32 384695291, i32 -981056701, i32 -677753523, i32 1432761139, i32 -1810791035, i32 -813021883, i32 283769337, i32 100925954, i32 -2114027649, i32 -257929136, i32 1148730428, i32 -1171939425, i32 -481580888, i32 -207466159, i32 -27417693, i32 -1065336768, i32 -1979347057, i32 -1388342638, i32 -1138647651, i32 1215313976, i32 82966005, i32 -547111748, i32 -1049119050, i32 1974459098, i32 1665278241, i32 807407632, i32 451280895, i32 251524083, i32 1841287890, i32 1283575245, i32 337120268, i32 891687699, i32 801369324, i32 -507617441, i32 -1573546089, i32 -863484860, i32 959321879, i32 1469301956, i32 -229267545, i32 -2097381762, i32 1199193405, i32 -1396153244, i32 -407216803, i32 724703513, i32 -1780059277, i32 -1598005152, i32 -1743158911, i32 -778154161, i32 2141445340, i32 1715741218, i32 2119445034, i32 -1422159728, i32 -2096396152, i32 -896776634, i32 700968686, i32 -747915080, i32 1009259540, i32 2041044702, i32 -490971554, i32 487983883, i32 1991105499, i32 1004265696, i32 1449407026, i32 1316239930, i32 504629770, i32 -611169975, i32 168560134, i32 1816667172, i32 -457679780, i32 1570751170, i32 1857934291, i32 -280777556, i32 -1497079198, i32 -1472622191, i32 -1540254315, i32 936633572, i32 -1947043463, i32 852879335, i32 1133234376, i32 1500395319, i32 -1210421907, i32 -1946055283, i32 1689376213, i32 -761508274, i32 -532043351, i32 -1260884884, i32 -89369002, i32 133428468, i32 634383082, i32 -1345690267, i32 -1896580486, i32 -381178194, i32 403703816, i32 -714097990, i32 -1997506440, i32 1867130149, i32 1918643758, i32 607656988, i32 -245913946, i32 -948718412, i32 1368901318, i32 600565992, i32 2090982877, i32 -1662487436, i32 557719327, i32 -577352885, i32 -597574211, i32 -2045932661, i32 -2062579062, i32 -1864339344, i32 1115438654, i32 -999180875, i32 -1429445018, i32 -661632952, i32 84280067, i32 33027830, i32 303828494, i32 -1547542175, i32 1600795957, i32 -106014889, i32 -798377543, i32 -1860729210, i32 1486471617, i32 658119965, i32 -1188585826, i32 953803233, i32 334231800, i32 -1288988520, i32 857870609, i32 -1143838359, i32 1890179545, i32 -1995993458, i32 -1489791852, i32 -1238525029, i32 574365214, i32 -1844082809, i32 550103529, i32 1233637070, i32 -5614251, i32 2018519080, i32 2057691103, i32 -1895592820, i32 -128343647, i32 -2146858615, i32 387583245, i32 -630865985, i32 836232934, i32 -964410814, i32 -1194301336, i32 -1014873791, i32 -1339450983, i32 2002398509, i32 287182607, i32 -881086288, i32 -56077228, i32 -697451589, i32 975967766], align 16
@Te2 = internal global [256 x i32] [i32 1671808611, i32 2089089148, i32 2006576759, i32 2072901243, i32 -233963534, i32 1807603307, i32 1873927791, i32 -984313403, i32 810573872, i32 16974337, i32 1739181671, i32 729634347, i32 -31856642, i32 -681396777, i32 -1410970197, i32 1989864566, i32 -901410870, i32 -2103631998, i32 -918517303, i32 2106063485, i32 -99225606, i32 1508618841, i32 1204391495, i32 -267650064, i32 -1377025619, i32 -731401260, i32 -1560453214, i32 -1343601233, i32 -1665195108, i32 -1527295068, i32 1922491506, i32 -1067738176, i32 -1211992649, i32 -48438787, i32 -1817297517, i32 644500518, i32 911895606, i32 1061256767, i32 -150800905, i32 -867204148, i32 878471220, i32 -1510714971, i32 -449523227, i32 -251069967, i32 1905517169, i32 -663508008, i32 827548209, i32 356461077, i32 67897348, i32 -950889017, i32 593839651, i32 -1017209405, i32 405286936, i32 -1767819370, i32 84871685, i32 -1699401830, i32 118033927, i32 305538066, i32 -2137318528, i32 -499261470, i32 -349778453, i32 661212711, i32 -1295155278, i32 1973414517, i32 152769033, i32 -2086789757, i32 745822252, i32 439235610, i32 455947803, i32 1857215598, i32 1525593178, i32 -1594139744, i32 1391895634, i32 994932283, i32 -698239018, i32 -1278313037, i32 695947817, i32 -482419229, i32 795958831, i32 -2070473852, i32 1408607827, i32 -781665839, i32 0, i32 -315833875, i32 543178784, i32 -65018884, i32 -1312261711, i32 1542305371, i32 1790891114, i32 -884568629, i32 -1093048386, i32 961245753, i32 1256100938, i32 1289001036, i32 1491644504, i32 -817199665, i32 -798245936, i32 -282409489, i32 -1427812438, i32 -82383365, i32 1137018435, i32 1305975373, i32 861234739, i32 -2053893755, i32 1171229253, i32 -116332039, i32 33948674, i32 2139225727, i32 1357946960, i32 1011120188, i32 -1615190625, i32 -1461498968, i32 1374921297, i32 -1543610973, i32 1086357568, i32 -1886780017, i32 -1834139758, i32 -1648615011, i32 944271416, i32 -184225291, i32 -1126210628, i32 -1228834890, i32 -629821478, i32 560153121, i32 271589392, i32 -15014401, i32 -217121293, i32 -764559406, i32 -850624051, i32 202643468, i32 322250259, i32 -332413972, i32 1608629855, i32 -1750977129, i32 1154254916, i32 389623319, i32 -1000893500, i32 -1477290585, i32 2122513534, i32 1028094525, i32 1689045092, i32 1575467613, i32 422261273, i32 1939203699, i32 1621147744, i32 -2120738431, i32 1339137615, i32 -595614756, i32 577127458, i32 712922154, i32 -1867826288, i32 -2004677752, i32 1187679302, i32 -299251730, i32 -1194103880, i32 339486740, i32 -562452514, i32 1591917662, i32 186455563, i32 -612979237, i32 -532948000, i32 844522546, i32 978220090, i32 169743370, i32 1239126601, i32 101321734, i32 611076132, i32 1558493276, i32 -1034051646, i32 -747717165, i32 -1393605716, i32 1655096418, i32 -1851246191, i32 -1784401515, i32 -466103324, i32 2039214713, i32 -416098841, i32 -935097400, i32 928607799, i32 1840765549, i32 -1920204403, i32 -714821163, i32 1322425422, i32 -1444918871, i32 1823791212, i32 1459268694, i32 -200805388, i32 -366620694, i32 1706019429, i32 2056189050, i32 -1360443474, i32 135794696, i32 -1160417350, i32 2022240376, i32 628050469, i32 779246638, i32 472135708, i32 -1494132826, i32 -1261997132, i32 -967731258, i32 -400307224, i32 -579034659, i32 1956440180, i32 522272287, i32 1272813131, i32 -1109630531, i32 -1954148981, i32 -1970991222, i32 1888542832, i32 1044544574, i32 -1245417035, i32 1722469478, i32 1222152264, i32 50660867, i32 -167643146, i32 236067854, i32 1638122081, i32 895445557, i32 1475980887, i32 -1177523783, i32 -2037311610, i32 -1051158079, i32 489110045, i32 -1632032866, i32 -516367903, i32 -132912136, i32 -1733088360, i32 288563729, i32 1773916777, i32 -646927911, i32 -1903622258, i32 -1800981612, i32 -1682559589, i32 505560094, i32 -2020469369, i32 -383727127, i32 -834041906, i32 1442818645, i32 678973480, i32 -545610273, i32 -1936784500, i32 -1577559647, i32 -1988097655, i32 219617805, i32 -1076206145, i32 -432941082, i32 1120306242, i32 1756942440, i32 1103331905, i32 -1716508263, i32 762796589, i32 252780047, i32 -1328841808, i32 1425844308, i32 -1143575109, i32 372911126], align 16
@Te3 = internal global [256 x i32] [i32 1667474886, i32 2088535288, i32 2004326894, i32 2071694838, i32 -219017729, i32 1802223062, i32 1869591006, i32 -976923503, i32 808472672, i32 16843522, i32 1734846926, i32 724270422, i32 -16901657, i32 -673750347, i32 -1414797747, i32 1987484396, i32 -892713585, i32 -2105369313, i32 -909557623, i32 2105378810, i32 -84273681, i32 1499065266, i32 1195886990, i32 -252703749, i32 -1381110719, i32 -724277325, i32 -1566376609, i32 -1347425723, i32 -1667449053, i32 -1532692653, i32 1920112356, i32 -1061135461, i32 -1212693899, i32 -33743647, i32 -1819038147, i32 640051788, i32 909531756, i32 1061110142, i32 -134806795, i32 -859025533, i32 875846760, i32 -1515850671, i32 -437963567, i32 -235861767, i32 1903268834, i32 -656903253, i32 825316194, i32 353713962, i32 67374088, i32 -943238507, i32 589522246, i32 -1010606435, i32 404236336, i32 -1768513225, i32 84217610, i32 -1701137105, i32 117901582, i32 303183396, i32 -2139055333, i32 -488489505, i32 -336910643, i32 656894286, i32 -1296904833, i32 1970642922, i32 151591698, i32 -2088526307, i32 741110872, i32 437923380, i32 454765878, i32 1852748508, i32 1515908788, i32 -1600062629, i32 1381168804, i32 993742198, i32 -690593353, i32 -1280061827, i32 690584402, i32 -471646499, i32 791638366, i32 -2071685357, i32 1398011302, i32 -774805319, i32 0, i32 -303223615, i32 538992704, i32 -50585629, i32 -1313748871, i32 1532751286, i32 1785380564, i32 -875870579, i32 -1094788761, i32 960056178, i32 1246420628, i32 1280103576, i32 1482221744, i32 -808498555, i32 -791647301, i32 -269538619, i32 -1431640753, i32 -67430675, i32 1128514950, i32 1296947098, i32 859002214, i32 -2054843375, i32 1162203018, i32 -101117719, i32 33687044, i32 2139062782, i32 1347481760, i32 1010582648, i32 -1616922075, i32 -1465326773, i32 1364325282, i32 -1549533603, i32 1077985408, i32 -1886418427, i32 -1835881153, i32 -1650607071, i32 943212656, i32 -168491791, i32 -1128472733, i32 -1229536905, i32 -623217233, i32 555836226, i32 269496352, i32 -58651, i32 -202174723, i32 -757961281, i32 -842183551, i32 202118168, i32 320025894, i32 -320065597, i32 1600119230, i32 -1751670219, i32 1145359496, i32 387397934, i32 -993765485, i32 -1482165675, i32 2122220284, i32 1027426170, i32 1684319432, i32 1566435258, i32 421079858, i32 1936954854, i32 1616945344, i32 -2122213351, i32 1330631070, i32 -589529181, i32 572679748, i32 707427924, i32 -1869567173, i32 -2004319477, i32 1179044492, i32 -286381625, i32 -1195846805, i32 336870440, i32 -555845209, i32 1583276732, i32 185277718, i32 -606374227, i32 -522175525, i32 842159716, i32 976899700, i32 168435220, i32 1229577106, i32 101059084, i32 606366792, i32 1549591736, i32 -1027449441, i32 -741118275, i32 -1397952701, i32 1650632388, i32 -1852725191, i32 -1785355215, i32 -454805549, i32 2038008818, i32 -404278571, i32 -926399605, i32 926374254, i32 1835907034, i32 -1920103423, i32 -707435343, i32 1313788572, i32 -1448484791, i32 1819063512, i32 1448540844, i32 -185333773, i32 -353753649, i32 1701162954, i32 2054852340, i32 -1364268729, i32 134748176, i32 -1162160785, i32 2021165296, i32 623210314, i32 774795868, i32 471606328, i32 -1499008681, i32 -1263220877, i32 -960081513, i32 -387439669, i32 -572687199, i32 1953799400, i32 522133822, i32 1263263126, i32 -1111630751, i32 -1953790451, i32 -1970633457, i32 1886425312, i32 1044267644, i32 -1246378895, i32 1718004428, i32 1212733584, i32 50529542, i32 -151649801, i32 235803164, i32 1633788866, i32 892690282, i32 1465383342, i32 -1179004823, i32 -2038001385, i32 -1044293479, i32 488449850, i32 -1633765081, i32 -505333543, i32 -117959701, i32 -1734823125, i32 286339874, i32 1768537042, i32 -640061271, i32 -1903261433, i32 -1802197197, i32 -1684294099, i32 505291324, i32 -2021158379, i32 -370597687, i32 -825341561, i32 1431699370, i32 673740880, i32 -539002203, i32 -1936945405, i32 -1583220647, i32 -1987477495, i32 218961690, i32 -1077945755, i32 -421121577, i32 1111672452, i32 1751693520, i32 1094828930, i32 -1717981143, i32 757954394, i32 252645662, i32 -1330590853, i32 1414855848, i32 -1145317779, i32 370555436], align 16
@Te4 = internal global [256 x i32] [i32 1667457891, i32 2088533116, i32 2004318071, i32 2071690107, i32 -218959118, i32 1802201963, i32 1869573999, i32 -976894523, i32 808464432, i32 16843009, i32 1734829927, i32 724249387, i32 -16843010, i32 -673720361, i32 -1414812757, i32 1987475062, i32 -892679478, i32 -2105376126, i32 -909522487, i32 2105376125, i32 -84215046, i32 1499027801, i32 1195853639, i32 -252645136, i32 -1381126739, i32 -724249388, i32 -1566399838, i32 -1347440721, i32 -1667457892, i32 -1532713820, i32 1920103026, i32 -1061109568, i32 -1212696649, i32 -33686019, i32 -1819044973, i32 640034342, i32 909522486, i32 1061109567, i32 -134744073, i32 -858993460, i32 875836468, i32 -1515870811, i32 -437918235, i32 -235802127, i32 1903260017, i32 -656877352, i32 825307441, i32 353703189, i32 67372036, i32 -943208505, i32 589505315, i32 -1010580541, i32 404232216, i32 -1768515946, i32 84215045, i32 -1701143910, i32 117901063, i32 303174162, i32 -2139062144, i32 -488447262, i32 -336860181, i32 656877351, i32 -1296911694, i32 1970632053, i32 151587081, i32 -2088533117, i32 741092396, i32 437918234, i32 454761243, i32 1852730990, i32 1515870810, i32 -1600085856, i32 1381126738, i32 993737531, i32 -690563370, i32 -1280068685, i32 690563369, i32 -471604253, i32 791621423, i32 -2071690108, i32 1397969747, i32 -774778415, i32 0, i32 -303174163, i32 538976288, i32 -50529028, i32 -1313754703, i32 1532713819, i32 1785358954, i32 -875836469, i32 -1094795586, i32 960051513, i32 1246382666, i32 1280068684, i32 1482184792, i32 -808464433, i32 -791621424, i32 -269488145, i32 -1431655766, i32 -67372037, i32 1128481603, i32 1296911693, i32 858993459, i32 -2054847099, i32 1162167621, i32 -101058055, i32 33686018, i32 2139062143, i32 1347440720, i32 1010580540, i32 -1616928865, i32 -1465341784, i32 1364283729, i32 -1549556829, i32 1077952576, i32 -1886417009, i32 -1835887982, i32 -1650614883, i32 943208504, i32 -168430091, i32 -1128481604, i32 -1229539658, i32 -623191334, i32 555819297, i32 269488144, i32 -1, i32 -202116109, i32 -757935406, i32 -842150451, i32 202116108, i32 320017171, i32 -320017172, i32 1600085855, i32 -1751672937, i32 1145324612, i32 387389207, i32 -993737532, i32 -1482184793, i32 2122219134, i32 1027423549, i32 1684300900, i32 1566399837, i32 421075225, i32 1936946035, i32 1616928864, i32 -2122219135, i32 1330597711, i32 -589505316, i32 572662306, i32 707406378, i32 -1869574000, i32 -2004318072, i32 1179010630, i32 -286331154, i32 -1195853640, i32 336860180, i32 -555819298, i32 1583242846, i32 185273099, i32 -606348325, i32 -522133280, i32 842150450, i32 976894522, i32 168430090, i32 1229539657, i32 101058054, i32 606348324, i32 1549556828, i32 -1027423550, i32 -741092397, i32 -1397969748, i32 1650614882, i32 -1852730991, i32 -1785358955, i32 -454761244, i32 2038004089, i32 -404232217, i32 -926365496, i32 926365495, i32 1835887981, i32 -1920103027, i32 -707406379, i32 1313754702, i32 -1448498775, i32 1819044972, i32 1448498774, i32 -185273100, i32 -353703190, i32 1701143909, i32 2054847098, i32 -1364283730, i32 134744072, i32 -1162167622, i32 2021161080, i32 623191333, i32 774778414, i32 471604252, i32 -1499027802, i32 -1263225676, i32 -960051514, i32 -387389208, i32 -572662307, i32 1953789044, i32 522133279, i32 1263225675, i32 -1111638595, i32 -1953789045, i32 -1970632054, i32 1886417008, i32 1044266558, i32 -1246382667, i32 1717986918, i32 1212696648, i32 50529027, i32 -151587082, i32 235802126, i32 1633771873, i32 892679477, i32 1465341783, i32 -1179010631, i32 -2038004090, i32 -1044266559, i32 488447261, i32 -1633771874, i32 -505290271, i32 -117901064, i32 -1734829928, i32 286331153, i32 1768515945, i32 -640034343, i32 -1903260018, i32 -1802201964, i32 -1684300901, i32 505290270, i32 -2021161081, i32 -370546199, i32 -825307442, i32 1431655765, i32 673720360, i32 -538976289, i32 -1936946036, i32 -1583242847, i32 -1987475063, i32 218959117, i32 -1077952577, i32 -421075226, i32 1111638594, i32 1751672936, i32 1094795585, i32 -1717986919, i32 757935405, i32 252645135, i32 -1330597712, i32 1414812756, i32 -1145324613, i32 370546198], align 16
@rcon = internal constant [10 x i32] [i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 16
@Td0 = internal constant [256 x i32] [i32 1374988112, i32 2118214995, i32 437757123, i32 975658646, i32 1001089995, i32 530400753, i32 -1392879445, i32 1273168787, i32 540080725, i32 -1384747530, i32 -1999866223, i32 -184398811, i32 1340463100, i32 -987051049, i32 641025152, i32 -1251826801, i32 -558802359, i32 632953703, i32 1172967064, i32 1576976609, i32 -1020300030, i32 -2125664238, i32 -1924753501, i32 1809054150, i32 59727847, i32 361929877, i32 -1083344149, i32 -1789765158, i32 -725712083, i32 1484005843, i32 1239443753, i32 -1899378620, i32 1975683434, i32 -191989384, i32 -1722270101, i32 666464733, i32 -1092530250, i32 -259478249, i32 -920605594, i32 2110667444, i32 1675577880, i32 -451268222, i32 -1756286112, i32 1649639237, i32 -1318815776, i32 -1150570876, i32 -25059300, i32 -116905068, i32 1883793496, i32 -1891238631, i32 -1797362553, i32 1383856311, i32 -1418472669, i32 1917518562, i32 -484470953, i32 1716890410, i32 -1293211641, i32 800440835, i32 -2033878118, i32 -751368027, i32 807962610, i32 599762354, i32 33778362, i32 -317291940, i32 -1966138325, i32 -1485196142, i32 -217582864, i32 1315562145, i32 1708848333, i32 101039829, i32 -785096161, i32 -995688822, i32 875451293, i32 -1561111136, i32 92987698, i32 -1527321739, i32 193195065, i32 1080094634, i32 1584504582, i32 -1116860335, i32 1042385657, i32 -1763899843, i32 -583137874, i32 1306967366, i32 -1856729675, i32 1908694277, i32 67556463, i32 1615861247, i32 429456164, i32 -692196969, i32 -1992277044, i32 1742315127, i32 -1326955843, i32 126454664, i32 -417768648, i32 2043211483, i32 -1585706425, i32 2084704233, i32 -125559095, i32 0, i32 159417987, i32 841739592, i32 504459436, i32 1817866830, i32 -49348613, i32 260388950, i32 1034867998, i32 908933415, i32 168810852, i32 1750902305, i32 -1688513327, i32 607530554, i32 202008497, i32 -1822955761, i32 -1259432238, i32 463180190, i32 -2134850225, i32 1641816226, i32 1517767529, i32 470948374, i32 -493635062, i32 -1063245083, i32 1008918595, i32 303765277, i32 235474187, i32 -225720403, i32 766945465, i32 337553864, i32 1475418501, i32 -1351284916, i32 -291906117, i32 -1551933187, i32 -150919521, i32 1551037884, i32 1147550661, i32 1543208500, i32 -1958532746, i32 -886847780, i32 -1225917336, i32 -1192955549, i32 -684598070, i32 1113818384, i32 328671808, i32 -2067394272, i32 -2058738563, i32 -759480840, i32 -1359400431, i32 -953573011, i32 496906059, i32 -592301837, i32 226906860, i32 2009195472, i32 733156972, i32 -1452230247, i32 294930682, i32 1206477858, i32 -1459843900, i32 -1594867942, i32 1451044056, i32 573804783, i32 -2025238841, i32 -650587711, i32 -1932877058, i32 -1730933962, i32 -1493859889, i32 -1518674392, i32 -625504730, i32 1068351396, i32 742039012, i32 1350078989, i32 1784663195, i32 1417561698, i32 -158526526, i32 -1864845080, i32 775550814, i32 -2101104651, i32 -1621262146, i32 1775276924, i32 1876241833, i32 -819653965, i32 -928212677, i32 270040487, i32 -392404114, i32 -616842373, i32 -853116919, i32 1851332852, i32 -325404927, i32 -2091935064, i32 -426414491, i32 -1426069890, i32 566021896, i32 -283776794, i32 -1159226407, i32 1248802510, i32 -358676012, i32 699432150, i32 832877231, i32 708780849, i32 -962227152, i32 899835584, i32 1951317047, i32 -58537306, i32 -527380304, i32 866637845, i32 -251357110, i32 1106041591, i32 2144161806, i32 395441711, i32 1984812685, i32 1139781709, i32 -861254316, i32 -459930401, i32 -1630423581, i32 1282050075, i32 -1054072904, i32 1181045119, i32 -1654724092, i32 25965917, i32 -91786125, i32 -83148498, i32 -1285087910, i32 -1831087534, i32 -384805325, i32 1842759443, i32 -1697160820, i32 933301370, i32 1509430414, i32 -351060855, i32 -827774994, i32 -1218328267, i32 -518199827, i32 2051518780, i32 -1663901863, i32 1441952575, i32 404016761, i32 1942435775, i32 1408749034, i32 1610459739, i32 -549621996, i32 2017778566, i32 -894438527, i32 -1184316354, i32 941896748, i32 -1029488545, i32 371049330, i32 -1126030068, i32 675039627, i32 -15887039, i32 967311729, i32 135050206, i32 -659233636, i32 1683407248, i32 2076935265, i32 -718096784, i32 1215061108, i32 -793225406], align 16
@Td1 = internal constant [256 x i32] [i32 1347548327, i32 1400783205, i32 -1021700188, i32 -1774573730, i32 -885281941, i32 -249586363, i32 -1414727080, i32 -1823743229, i32 1428173050, i32 -156404115, i32 -1853305738, i32 636813900, i32 -61872681, i32 -674944309, i32 -2144979644, i32 -1883938141, i32 1239331162, i32 1730525723, i32 -1740248562, i32 -513933632, i32 46346101, i32 310463728, i32 -1551022441, i32 -966011911, i32 -419197089, i32 -1793748324, i32 -339776134, i32 -627748263, i32 768917123, i32 -749177823, i32 692707433, i32 1150208456, i32 1786102409, i32 2029293177, i32 1805211710, i32 -584599183, i32 -1229004465, i32 401639597, i32 1724457132, i32 -1266823622, i32 409198410, i32 -2098914767, i32 1620529459, i32 1164071807, i32 -525245321, i32 -2068091986, i32 486441376, i32 -1795618773, i32 1483753576, i32 428819965, i32 -2020286868, i32 -1219331080, i32 598438867, i32 -495826174, i32 1474502543, i32 711349675, i32 129166120, i32 53458370, i32 -1702443653, i32 -1512884472, i32 -231724921, i32 -1306280027, i32 -1174273174, i32 1559041666, i32 730517276, i32 -1834518092, i32 -252508174, i32 -1588696606, i32 -848962828, i32 -721025602, i32 533804130, i32 -1966823682, i32 -1657524653, i32 -1599933611, i32 839224033, i32 1973745387, i32 957055980, i32 -1438621457, i32 106852767, i32 1371368976, i32 -113368694, i32 1033297158, i32 -1361232379, i32 1179510461, i32 -1248766835, i32 91341917, i32 1862534868, i32 -10465259, i32 605657339, i32 -1747534359, i32 -863420349, i32 2003294622, i32 -1112479678, i32 -2012771957, i32 954669403, i32 -612775698, i32 1201765386, i32 -377732593, i32 -906460130, i32 0, i32 -2096529274, i32 1211247597, i32 -1407315600, i32 1315723890, i32 -67301633, i32 1443857720, i32 507358933, i32 657861945, i32 1678381017, i32 560487590, i32 -778347692, i32 975451694, i32 -1324610969, i32 261314535, i32 -759894378, i32 -1642357871, i32 1333838021, i32 -1570644960, i32 1767536459, i32 370938394, i32 182621114, i32 -440360918, i32 1128014560, i32 487725847, i32 185469197, i32 -1376613433, i32 -1188186456, i32 -938205527, i32 -2057834215, i32 1286567175, i32 -1141990947, i32 -39616672, i32 -1611202266, i32 -1134791947, i32 -985373125, i32 878443390, i32 1988838185, i32 -590666810, i32 1756818940, i32 1673061617, i32 -891866660, i32 272786309, i32 1075025698, i32 545572369, i32 2105887268, i32 -120407235, i32 296679730, i32 1841768865, i32 1260232239, i32 -203640272, i32 -334657966, i32 -797457949, i32 1814803222, i32 -1716948807, i32 -99511224, i32 575138148, i32 -995558260, i32 446754879, i32 -665420500, i32 -282971248, i32 -947435186, i32 -1042728751, i32 -24327518, i32 915985419, i32 -811141759, i32 681933534, i32 651868046, i32 -1539330625, i32 -466863459, i32 223377554, i32 -1687527476, i32 1649704518, i32 -1024029421, i32 -393160520, i32 1580087799, i32 -175979601, i32 -1096852096, i32 2087309459, i32 -1452288723, i32 -1278270190, i32 1003007129, i32 -1492117379, i32 1860738147, i32 2077965243, i32 164439672, i32 -194094824, i32 32283319, i32 -1467789414, i32 1709610350, i32 2125135846, i32 136428751, i32 -420538904, i32 -642062437, i32 -833982666, i32 -722821367, i32 -701910916, i32 -1355701070, i32 824852259, i32 818324884, i32 -1070226842, i32 930369212, i32 -1493400886, i32 -1327460144, i32 355706840, i32 1257309336, i32 -146674470, i32 243256656, i32 790073846, i32 -1921626666, i32 1296297904, i32 1422699085, i32 -538667516, i32 -476130891, i32 457992840, i32 -1195299809, i32 2135319889, i32 77422314, i32 1560382517, i32 1945798516, i32 788204353, i32 1521706781, i32 1385356242, i32 870912086, i32 325965383, i32 -1936009375, i32 2050466060, i32 -1906706412, i32 -1981082820, i32 -288446169, i32 901210569, i32 -304014107, i32 1014646705, i32 1503449823, i32 1062597235, i32 2031621326, i32 -1082931401, i32 -363595827, i32 1533017514, i32 350174575, i32 -2038938405, i32 -2117423117, i32 1052338372, i32 741876788, i32 1606591296, i32 1914052035, i32 213705253, i32 -1960297399, i32 1107234197, i32 1899603969, i32 -569897805, i32 -1663519516, i32 -1872472383, i32 1635502980, i32 1893020342, i32 1950903388, i32 1120974935], align 16
@Td2 = internal constant [256 x i32] [i32 -1487908364, i32 1699970625, i32 -1530717673, i32 1586903591, i32 1808481195, i32 1173430173, i32 1487645946, i32 59984867, i32 -95084496, i32 1844882806, i32 1989249228, i32 1277555970, i32 -671330331, i32 -875051734, i32 1149249077, i32 -1550863006, i32 1514790577, i32 459744698, i32 244860394, i32 -1058972162, i32 1963115311, i32 -267222708, i32 -1750889146, i32 -104436781, i32 1608975247, i32 -1667951214, i32 2062270317, i32 1507497298, i32 -2094148418, i32 567498868, i32 1764313568, i32 -935031095, i32 -1989511742, i32 2037970062, i32 1047239000, i32 1910319033, i32 1337376481, i32 -1390940024, i32 -1402549984, i32 984907214, i32 1243112415, i32 830661914, i32 861968209, i32 2135253587, i32 2011214180, i32 -1367032981, i32 -1608712575, i32 731183368, i32 1750626376, i32 -48656571, i32 1820824798, i32 -122203525, i32 -752637069, i32 48394827, i32 -1890065633, i32 -1423284651, i32 671593195, i32 -1039978571, i32 2073724613, i32 145085239, i32 -2014171096, i32 -1515052097, i32 1790575107, i32 -2107839210, i32 472615631, i32 -1265457287, i32 -219090169, i32 -492745111, i32 -187865638, i32 -1093335547, i32 1646252340, i32 -24460122, i32 1402811438, i32 1436590835, i32 -516815478, i32 -344611594, i32 -331805821, i32 -274055072, i32 -1626972559, i32 273792366, i32 -1963377119, i32 104699613, i32 95345982, i32 -1119466010, i32 -1917480620, i32 1560637892, i32 -730921978, i32 369057872, i32 -81520232, i32 -375925059, i32 1137477952, i32 -1636341799, i32 1119727848, i32 -1954019447, i32 1530455833, i32 -287606328, i32 172466556, i32 266959938, i32 516552836, i32 0, i32 -2038232704, i32 -314035669, i32 1890328081, i32 1917742170, i32 -262898, i32 945164165, i32 -719438418, i32 958871085, i32 -647755249, i32 -1507760036, i32 1423022939, i32 775562294, i32 1739656202, i32 -418409641, i32 -1764576018, i32 -1851909221, i32 -984645440, i32 547512796, i32 1265195639, i32 437656594, i32 -1173691757, i32 719700128, i32 -532464606, i32 387781147, i32 218828297, i32 -944901493, i32 -1464259146, i32 -1446505442, i32 428169201, i32 122466165, i32 -574886247, i32 1627235199, i32 648017665, i32 -172204942, i32 1002783846, i32 2117360635, i32 695634755, i32 -958608605, i32 -60246291, i32 -245122844, i32 -590686415, i32 -2062531997, i32 574624663, i32 287343814, i32 612205898, i32 1039717051, i32 840019705, i32 -1586641111, i32 793451934, i32 821288114, i32 1391201670, i32 -472877119, i32 376187827, i32 -1181111952, i32 1224348052, i32 1679968233, i32 -1933268740, i32 1058709744, i32 752375421, i32 -1863376333, i32 1321699145, i32 -775825096, i32 -1560376118, i32 188127444, i32 -2117097739, i32 -567761542, i32 -1910056265, i32 -1079754835, i32 -1645990854, i32 -1844621192, i32 -862229921, i32 1180849278, i32 331544205, i32 -1192718120, i32 -144822727, i32 -1342864701, i32 -2134991011, i32 -1820562992, i32 766078933, i32 313773861, i32 -1724135252, i32 2108100632, i32 1668212892, i32 -1149510853, i32 2013908262, i32 418672217, i32 -1224610662, i32 -1700232369, i32 1852171925, i32 -427906305, i32 -821550660, i32 -387518699, i32 -1680229657, i32 919489135, i32 164948639, i32 2094410160, i32 -1297141340, i32 590424639, i32 -1808742747, i32 1723872674, i32 -1137216434, i32 -895026046, i32 -793714544, i32 -669699161, i32 -1739919100, i32 -621329940, i32 1343127501, i32 -164685935, i32 -695372211, i32 -1337113617, i32 1297403050, i32 81781910, i32 -1243373871, i32 -2011476886, i32 532201772, i32 1367295589, i32 -368796322, i32 895287692, i32 1953757831, i32 1093597963, i32 492483431, i32 -766340389, i32 1446242576, i32 1192455638, i32 1636604631, i32 209336225, i32 344873464, i32 1015671571, i32 669961897, i32 -919226527, i32 -437395172, i32 -1321436601, i32 -547775278, i32 1933530610, i32 -830924780, i32 935293895, i32 -840281097, i32 -1436852227, i32 1863638845, i32 -611944380, i32 -209597777, i32 -1002522264, i32 875313188, i32 1080017571, i32 -1015933411, i32 621591778, i32 1233856572, i32 -1790836979, i32 24197544, i32 -1277294580, i32 -459482956, i32 -1047501738, i32 -2073986101, i32 -1234119374, i32 1551124588, i32 1463996600], align 16
@Td3 = internal constant [256 x i32] [i32 -190361519, i32 1097159550, i32 396673818, i32 660510266, i32 -1418998981, i32 -1656360673, i32 -94852180, i32 -486304949, i32 821712160, i32 1986918061, i32 -864644728, i32 38544885, i32 -438830001, i32 718002117, i32 893681702, i32 1654886325, i32 -1319482914, i32 -1172609243, i32 -368142267, i32 -20913827, i32 796197571, i32 1290801793, i32 1184342925, i32 -738605461, i32 -1889540349, i32 -1835231979, i32 1836772287, i32 1381620373, i32 -1098699308, i32 1948373848, i32 -529979063, i32 -909622130, i32 -1031181707, i32 -1904641804, i32 1480485785, i32 -1183720153, i32 -514869570, i32 -2001922064, i32 548169417, i32 -835013507, i32 -548792221, i32 439452389, i32 1362321559, i32 1400849762, i32 1685577905, i32 1806599355, i32 -2120213250, i32 137073913, i32 1214797936, i32 1174215055, i32 -563312748, i32 2079897426, i32 1943217067, i32 1258480242, i32 529487843, i32 1437280870, i32 -349698126, i32 -1245576401, i32 -981755258, i32 923313619, i32 679998000, i32 -1079659997, i32 57326082, i32 377642221, i32 -820237430, i32 2041877159, i32 133361907, i32 1776460110, i32 -621490843, i32 96392454, i32 878845905, i32 -1493267772, i32 777231668, i32 -212492126, i32 -1964953083, i32 -152341084, i32 -2081670901, i32 1626319424, i32 1906247262, i32 1846563261, i32 562755902, i32 -586793578, i32 1040559837, i32 -423803315, i32 1418573201, i32 -1000536719, i32 114585348, i32 1343618912, i32 -1728371687, i32 -1108764714, i32 1078185097, i32 -643926169, i32 -398279248, i32 -1987344377, i32 425408743, i32 -923870343, i32 2081048481, i32 1108339068, i32 -2078357000, i32 0, i32 -2138668279, i32 736970802, i32 292596766, i32 1517440620, i32 251657213, i32 -2059905521, i32 -1361764803, i32 758720310, i32 265905162, i32 1554391400, i32 1532285339, i32 908999204, i32 174567692, i32 1474760595, i32 -292105548, i32 -1684955621, i32 -1060810880, i32 -601841055, i32 2001430874, i32 303699484, i32 -1816524062, i32 -1607801408, i32 585122620, i32 454499602, i32 151849742, i32 -1949848078, i32 -1230456531, i32 514443284, i32 -249985705, i32 1963412655, i32 -1713521682, i32 2137062819, i32 19308535, i32 1928707164, i32 1715193156, i32 -75615141, i32 1126790795, i32 600235211, i32 -302225226, i32 -453942344, i32 836553431, i32 1669664834, i32 -1759363053, i32 -971956092, i32 1243905413, i32 -1153566510, i32 -114159186, i32 698445255, i32 -1641067747, i32 -1305414692, i32 -2041385971, i32 -1042034569, i32 -1290376149, i32 1891211689, i32 -1807156719, i32 -379313593, i32 -57883480, i32 -264299872, i32 2100090966, i32 865136418, i32 1229899655, i32 953270745, i32 -895287668, i32 -737462632, i32 -176042074, i32 2061379749, i32 -1215420710, i32 -1379949505, i32 983426092, i32 2022837584, i32 1607244650, i32 2118541908, i32 -1928084746, i32 -658970480, i32 972512814, i32 -1011878526, i32 1568718495, i32 -795640727, i32 -718427793, i32 621982671, i32 -1399243832, i32 410887952, i32 -1671205144, i32 1002142683, i32 645401037, i32 1494807662, i32 -1699282452, i32 1335535747, i32 -1787927066, i32 -1671510, i32 -1127282655, i32 367585007, i32 -409216582, i32 1865862730, i32 -1626745622, i32 -1333995991, i32 -1531793615, i32 1059270954, i32 -1517014842, i32 -1570324427, i32 1320957812, i32 -2100648196, i32 -1865371424, i32 -1479011021, i32 77089521, i32 -321194175, i32 -850391425, i32 -1846137065, i32 1305906550, i32 -273658557, i32 -1437772596, i32 -1778065436, i32 -776608866, i32 1787304780, i32 740276417, i32 1699839814, i32 1592394909, i32 -1942659839, i32 -2022411270, i32 188821243, i32 1729977011, i32 -606973294, i32 274084841, i32 -699985043, i32 -681472870, i32 -1593017801, i32 -132870567, i32 322734571, i32 -1457000754, i32 1640576439, i32 484830689, i32 1202797690, i32 -757114468, i32 -227328171, i32 349075736, i32 -952647821, i32 -137500077, i32 -39167137, i32 1030690015, i32 1155237496, i32 -1342996022, i32 1757691577, i32 607398968, i32 -1556062270, i32 499347990, i32 -500888388, i32 1011452712, i32 227885567, i32 -1476300487, i32 213114376, i32 -1260086056, i32 1455525988, i32 -880516741, i32 850817237, i32 1817998408, i32 -1202240816], align 16
@Td4 = internal constant [256 x i32] [i32 1381126738, i32 151587081, i32 1785358954, i32 -707406379, i32 808464432, i32 909522486, i32 -1515870811, i32 943208504, i32 -1077952577, i32 1077952576, i32 -1549556829, i32 -1633771874, i32 -2122219135, i32 -202116109, i32 -673720361, i32 -67372037, i32 2088533116, i32 -471604253, i32 960051513, i32 -2105376126, i32 -1684300901, i32 791621423, i32 -1, i32 -2021161081, i32 875836468, i32 -1903260018, i32 1128481603, i32 1145324612, i32 -993737532, i32 -555819298, i32 -370546199, i32 -875836469, i32 1414812756, i32 2071690107, i32 -1802201964, i32 842150450, i32 -1499027802, i32 -1027423550, i32 589505315, i32 1027423549, i32 -286331154, i32 1280068684, i32 -1785358955, i32 185273099, i32 1111638594, i32 -84215046, i32 -1010580541, i32 1313754702, i32 134744072, i32 774778414, i32 -1583242847, i32 1717986918, i32 673720360, i32 -640034343, i32 606348324, i32 -1296911694, i32 1987475062, i32 1532713819, i32 -1566399838, i32 1229539657, i32 1835887981, i32 -1953789045, i32 -774778415, i32 623191333, i32 1920103026, i32 -117901064, i32 -151587082, i32 1684300900, i32 -2038004090, i32 1751672936, i32 -1734829928, i32 370546198, i32 -724249388, i32 -1532713820, i32 1549556828, i32 -858993460, i32 1566399837, i32 1701143909, i32 -1229539658, i32 -1835887982, i32 1819044972, i32 1886417008, i32 1212696648, i32 1347440720, i32 -33686019, i32 -303174163, i32 -1179010631, i32 -623191334, i32 1583242846, i32 353703189, i32 1179010630, i32 1465341783, i32 -1482184793, i32 -1920103027, i32 -1650614883, i32 -2071690108, i32 -1869574000, i32 -656877352, i32 -1414812757, i32 0, i32 -1936946036, i32 -1128481604, i32 -741092397, i32 168430090, i32 -134744073, i32 -454761244, i32 1482184792, i32 84215045, i32 -1195853640, i32 -1280068685, i32 1162167621, i32 101058054, i32 -791621424, i32 741092396, i32 505290270, i32 -1886417009, i32 -892679478, i32 1061109567, i32 252645135, i32 33686018, i32 -1044266559, i32 -1347440721, i32 -1111638595, i32 50529027, i32 16843009, i32 320017171, i32 -1970632054, i32 1802201963, i32 976894522, i32 -1852730991, i32 286331153, i32 1094795585, i32 1330597711, i32 1734829927, i32 -589505316, i32 -353703190, i32 -1751672937, i32 -218959118, i32 -808464433, i32 -825307442, i32 -252645136, i32 -1263225676, i32 -421075226, i32 1936946035, i32 -1768515946, i32 -1397969748, i32 1953789044, i32 572662306, i32 -404232217, i32 -1381126739, i32 892679477, i32 -2054847099, i32 -488447262, i32 -101058055, i32 926365495, i32 -387389208, i32 471604252, i32 1970632053, i32 -538976289, i32 1852730990, i32 1195853639, i32 -235802127, i32 437918234, i32 1903260017, i32 488447261, i32 690563369, i32 -976894523, i32 -1987475063, i32 1869573999, i32 -1212696649, i32 1650614882, i32 235802126, i32 -1431655766, i32 404232216, i32 -1094795586, i32 454761243, i32 -50529028, i32 1448498774, i32 1044266558, i32 1263225675, i32 -960051514, i32 -757935406, i32 2038004089, i32 538976288, i32 -1701143910, i32 -606348325, i32 -1061109568, i32 -16843010, i32 2021161080, i32 -842150451, i32 1515870810, i32 -185273100, i32 522133279, i32 -572662307, i32 -1465341784, i32 858993459, i32 -2004318072, i32 117901063, i32 -943208505, i32 825307441, i32 -1313754703, i32 303174162, i32 269488144, i32 1499027801, i32 656877351, i32 -2139062144, i32 -320017172, i32 1600085855, i32 1616928864, i32 1364283729, i32 2139062143, i32 -1448498775, i32 421075225, i32 -1246382667, i32 1246382666, i32 218959117, i32 757935405, i32 -437918235, i32 2054847098, i32 -1616928865, i32 -1819044973, i32 -909522487, i32 -1667457892, i32 -269488145, i32 -1600085856, i32 -522133280, i32 993737531, i32 1296911693, i32 -1364283730, i32 707406378, i32 -168430091, i32 -1330597712, i32 -926365496, i32 -336860181, i32 -1145324613, i32 1010580540, i32 -2088533117, i32 1397969747, i32 -1717986919, i32 1633771873, i32 387389207, i32 724249387, i32 67372036, i32 2122219134, i32 -1162167622, i32 2004318071, i32 -690563370, i32 640034342, i32 -505290271, i32 1768515945, i32 336860180, i32 1667457891, i32 1431655765, i32 555819297, i32 202116108, i32 2105376125], align 16
@.str.3 = private unnamed_addr constant [10 x i8] c"xlen >= 0\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"dudect-examples/aes32/sources/random.c\00", align 1
@__PRETTY_FUNCTION__.randombytes = private unnamed_addr constant [36 x i8] c"void randombytes(uint8_t *, size_t)\00", align 1
@randombytes.fd = internal global i32 -1, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main() #0 {
  %1 = alloca [16 x i8], align 16
  call void @init_dut()
  %2 = bitcast [16 x i8]* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %2, i8* align 16 getelementptr inbounds ([16 x i8], [16 x i8]* @__const.main.input_data, i32 0, i32 0), i64 16, i1 false)
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %4 = sext i8 16 to i64
  %5 = call i8 @do_one_computation(i8* %3, i64 %4, i32 11)
  %6 = zext i8 %5 to i32
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %6)
  ret i32 0
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @init_dut() #0 {
  %1 = alloca [16 x i8], align 16
  %2 = bitcast [16 x i8]* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %2, i8 0, i64 16, i1 false)
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %4 = sext i32 44 to i64
  %5 = sext i8 16 to i64
  %6 = call i32 @rijndaelKeySetupEnc(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %4, i8* %3, i64 %5, i32 128)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

define i8 @do_one_computation(i8* %0, i64 %len., i32 %1) {
  %3 = alloca [16 x i8], align 16
  %4 = alloca [16 x i8], align 16
  %5 = bitcast [16 x i8]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %5, i8 0, i64 16, i1 false)
  %6 = bitcast [16 x i8]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 16, i1 false)
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 1 %0, i64 16, i1 false)
  br label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %11 = sext i32 44 to i64
  %12 = sext i8 16 to i64
  %13 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %11, i32 %1, i8* %9, i64 %12, i8* %10, i64 %13)
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 16 %15, i64 16, i1 false)
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %17 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %18 = sext i32 44 to i64
  %19 = sext i8 16 to i64
  %20 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %18, i32 %1, i8* %16, i64 %19, i8* %17, i64 %20)
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %21, i8* align 16 %22, i64 16, i1 false)
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %24 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %25 = sext i32 44 to i64
  %26 = sext i8 16 to i64
  %27 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %25, i32 %1, i8* %23, i64 %26, i8* %24, i64 %27)
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %28, i8* align 16 %29, i64 16, i1 false)
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %32 = sext i32 44 to i64
  %33 = sext i8 16 to i64
  %34 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %32, i32 %1, i8* %30, i64 %33, i8* %31, i64 %34)
  %35 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %35, i8* align 16 %36, i64 16, i1 false)
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %38 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %39 = sext i32 44 to i64
  %40 = sext i8 16 to i64
  %41 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %39, i32 %1, i8* %37, i64 %40, i8* %38, i64 %41)
  %42 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %42, i8* align 16 %43, i64 16, i1 false)
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %46 = sext i32 44 to i64
  %47 = sext i8 16 to i64
  %48 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %46, i32 %1, i8* %44, i64 %47, i8* %45, i64 %48)
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %49, i8* align 16 %50, i64 16, i1 false)
  %51 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %52 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %53 = sext i32 44 to i64
  %54 = sext i8 16 to i64
  %55 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %53, i32 %1, i8* %51, i64 %54, i8* %52, i64 %55)
  %56 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %56, i8* align 16 %57, i64 16, i1 false)
  %58 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %59 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %60 = sext i32 44 to i64
  %61 = sext i8 16 to i64
  %62 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %60, i32 %1, i8* %58, i64 %61, i8* %59, i64 %62)
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %64 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %63, i8* align 16 %64, i64 16, i1 false)
  %65 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %66 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %67 = sext i32 44 to i64
  %68 = sext i8 16 to i64
  %69 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %67, i32 %1, i8* %65, i64 %68, i8* %66, i64 %69)
  %70 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %71 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %70, i8* align 16 %71, i64 16, i1 false)
  %72 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %74 = sext i32 44 to i64
  %75 = sext i8 16 to i64
  %76 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %74, i32 %1, i8* %72, i64 %75, i8* %73, i64 %76)
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %78 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %77, i8* align 16 %78, i64 16, i1 false)
  %79 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %81 = sext i32 44 to i64
  %82 = sext i8 16 to i64
  %83 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %81, i32 %1, i8* %79, i64 %82, i8* %80, i64 %83)
  %84 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %85 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %84, i8* align 16 %85, i64 16, i1 false)
  %86 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %87 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %88 = sext i32 44 to i64
  %89 = sext i8 16 to i64
  %90 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %88, i32 %1, i8* %86, i64 %89, i8* %87, i64 %90)
  %91 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %92 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %91, i8* align 16 %92, i64 16, i1 false)
  %93 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %94 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %95 = sext i32 44 to i64
  %96 = sext i8 16 to i64
  %97 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %95, i32 %1, i8* %93, i64 %96, i8* %94, i64 %97)
  %98 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %99 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %98, i8* align 16 %99, i64 16, i1 false)
  %100 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %101 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %102 = sext i32 44 to i64
  %103 = sext i8 16 to i64
  %104 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %102, i32 %1, i8* %100, i64 %103, i8* %101, i64 %104)
  %105 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %106 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %105, i8* align 16 %106, i64 16, i1 false)
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %108 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %109 = sext i32 44 to i64
  %110 = sext i8 16 to i64
  %111 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %109, i32 %1, i8* %107, i64 %110, i8* %108, i64 %111)
  %112 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %113 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %112, i8* align 16 %113, i64 16, i1 false)
  %114 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %115 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %116 = sext i32 44 to i64
  %117 = sext i8 16 to i64
  %118 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %116, i32 %1, i8* %114, i64 %117, i8* %115, i64 %118)
  %119 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %120 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %119, i8* align 16 %120, i64 16, i1 false)
  %121 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %122 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %123 = sext i32 44 to i64
  %124 = sext i8 16 to i64
  %125 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %123, i32 %1, i8* %121, i64 %124, i8* %122, i64 %125)
  %126 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %127 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %126, i8* align 16 %127, i64 16, i1 false)
  %128 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %129 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %130 = sext i32 44 to i64
  %131 = sext i8 16 to i64
  %132 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %130, i32 %1, i8* %128, i64 %131, i8* %129, i64 %132)
  %133 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %133, i8* align 16 %134, i64 16, i1 false)
  %135 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %136 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %137 = sext i32 44 to i64
  %138 = sext i8 16 to i64
  %139 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %137, i32 %1, i8* %135, i64 %138, i8* %136, i64 %139)
  %140 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %141 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %140, i8* align 16 %141, i64 16, i1 false)
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %143 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %144 = sext i32 44 to i64
  %145 = sext i8 16 to i64
  %146 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %144, i32 %1, i8* %142, i64 %145, i8* %143, i64 %146)
  %147 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %148 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %147, i8* align 16 %148, i64 16, i1 false)
  %149 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %150 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %151 = sext i32 44 to i64
  %152 = sext i8 16 to i64
  %153 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %151, i32 %1, i8* %149, i64 %152, i8* %150, i64 %153)
  %154 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %155 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %154, i8* align 16 %155, i64 16, i1 false)
  %156 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %157 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %158 = sext i32 44 to i64
  %159 = sext i8 16 to i64
  %160 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %158, i32 %1, i8* %156, i64 %159, i8* %157, i64 %160)
  %161 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %162 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %161, i8* align 16 %162, i64 16, i1 false)
  %163 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %164 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %165 = sext i32 44 to i64
  %166 = sext i8 16 to i64
  %167 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %165, i32 %1, i8* %163, i64 %166, i8* %164, i64 %167)
  %168 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %168, i8* align 16 %169, i64 16, i1 false)
  %170 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %172 = sext i32 44 to i64
  %173 = sext i8 16 to i64
  %174 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %172, i32 %1, i8* %170, i64 %173, i8* %171, i64 %174)
  %175 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %176 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %175, i8* align 16 %176, i64 16, i1 false)
  %177 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %178 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %179 = sext i32 44 to i64
  %180 = sext i8 16 to i64
  %181 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %179, i32 %1, i8* %177, i64 %180, i8* %178, i64 %181)
  %182 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %183 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %182, i8* align 16 %183, i64 16, i1 false)
  %184 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %185 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %186 = sext i32 44 to i64
  %187 = sext i8 16 to i64
  %188 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %186, i32 %1, i8* %184, i64 %187, i8* %185, i64 %188)
  %189 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %190 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %189, i8* align 16 %190, i64 16, i1 false)
  %191 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %192 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %193 = sext i32 44 to i64
  %194 = sext i8 16 to i64
  %195 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %193, i32 %1, i8* %191, i64 %194, i8* %192, i64 %195)
  %196 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %197 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %196, i8* align 16 %197, i64 16, i1 false)
  %198 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %199 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %200 = sext i32 44 to i64
  %201 = sext i8 16 to i64
  %202 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %200, i32 %1, i8* %198, i64 %201, i8* %199, i64 %202)
  %203 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %203, i8* align 16 %204, i64 16, i1 false)
  %205 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %207 = sext i32 44 to i64
  %208 = sext i8 16 to i64
  %209 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %207, i32 %1, i8* %205, i64 %208, i8* %206, i64 %209)
  %210 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %211 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %210, i8* align 16 %211, i64 16, i1 false)
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %213 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %214 = sext i32 44 to i64
  %215 = sext i8 16 to i64
  %216 = sext i8 16 to i64
  call void @rijndaelEncrypt(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @rk, i64 0, i64 0), i64 %214, i32 %1, i8* %212, i64 %215, i8* %213, i64 %216)
  %217 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %218 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %217, i8* align 16 %218, i64 16, i1 false)
  %219 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %220 = load i8, i8* %219, align 16
  %221 = zext i8 %220 to i32
  ret i8 %220
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

define void @rijndaelEncrypt(i32* %0, i64 %len., i32 %1, i8* %2, i64 %len.1, i8* %3, i64 %len.2) {
.preheader12:
  %4 = getelementptr inbounds i8, i8* %2, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl i32 %6, 24
  %8 = getelementptr inbounds i8, i8* %2, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl i32 %10, 16
  %12 = xor i32 %7, %11
  %13 = getelementptr inbounds i8, i8* %2, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl i32 %15, 8
  %17 = xor i32 %12, %16
  %18 = getelementptr inbounds i8, i8* %2, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = xor i32 %17, %20
  %22 = getelementptr inbounds i32, i32* %0, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = xor i32 %21, %23
  %25 = getelementptr inbounds i8, i8* %2, i64 4
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %2, i64 4
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl i32 %32, 16
  %34 = getelementptr inbounds i8, i8* %2, i64 4
  %35 = getelementptr inbounds i8, i8* %34, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl i32 %37, 8
  %39 = getelementptr inbounds i8, i8* %2, i64 4
  %40 = getelementptr inbounds i8, i8* %39, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i32, i32* %0, i64 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds i8, i8* %2, i64 8
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds i8, i8* %2, i64 8
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl i32 %52, 16
  %54 = getelementptr inbounds i8, i8* %2, i64 8
  %55 = getelementptr inbounds i8, i8* %54, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl i32 %57, 8
  %59 = getelementptr inbounds i8, i8* %2, i64 8
  %60 = getelementptr inbounds i8, i8* %59, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = getelementptr inbounds i32, i32* %0, i64 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds i8, i8* %2, i64 12
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = getelementptr inbounds i8, i8* %2, i64 12
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl i32 %72, 16
  %74 = getelementptr inbounds i8, i8* %2, i64 12
  %75 = getelementptr inbounds i8, i8* %74, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl i32 %77, 8
  %79 = getelementptr inbounds i8, i8* %2, i64 12
  %80 = getelementptr inbounds i8, i8* %79, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = getelementptr inbounds i32, i32* %0, i64 3
  %84 = load i32, i32* %83, align 4
  %shadow = alloca i64
  %out. = alloca i1
  %out.3 = alloca i1
  %out.4 = alloca i1
  %out.5 = alloca i1
  %out.6 = alloca i1
  %out.7 = alloca i1
  %out.8 = alloca i1
  %out.9 = alloca i1
  %out.10 = alloca i1
  %out.11 = alloca i1
  %out.12 = alloca i1
  %out.13 = alloca i1
  %out.14 = alloca i1
  %out.15 = alloca i1
  %out.16 = alloca i1
  %out.17 = alloca i1
  store i1 true, i1* %out.
  %85 = load i1, i1* %out.
  %86 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @Te0, i64 0, i64 0), align 4
  %87 = lshr i32 %24, 24
  %88 = zext i32 %87 to i64
  %89 = icmp eq i64 0, %88
  store i1 %85, i1* %out.3
  %90 = load i1, i1* %out.3
  %91 = xor i1 %89, true
  %in. = and i1 %90, %91
  %92 = zext i32 %87 to i64
  %93 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %92
  %94 = sext i32 256 to i64
  %95 = icmp slt i64 %92, %94
  %96 = bitcast i64* %shadow to i32*
  %safe. = or i1 %in., %95
  %select.ptr. = select i1 %safe., i32* %93, i32* %96
  %97 = load i32, i32* %select.ptr., align 4
  store i1 %in., i1* %out.4
  %98 = load i1, i1* %out.3
  %in.18 = and i1 %98, %89
  %99 = load i1, i1* %out.4
  %select.phi. = select i1 %in.18, i32 %86, i32 %97
  %100 = shl i32 %28, 24
  %101 = xor i32 %100, %33
  %102 = xor i32 %101, %38
  %103 = xor i32 %102, %42
  %104 = xor i32 %103, %44
  %105 = shl i32 %48, 24
  %106 = xor i32 %105, %53
  %107 = xor i32 %106, %58
  %108 = xor i32 %107, %62
  %109 = xor i32 %108, %64
  %110 = shl i32 %68, 24
  %111 = xor i32 %110, %73
  %112 = xor i32 %111, %78
  %113 = xor i32 %112, %82
  %114 = xor i32 %113, %84
  %115 = or i1 %in.18, %99
  store i1 %115, i1* %out.5
  %116 = load i1, i1* %out.5
  %117 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 0
  %118 = sext i32 256 to i64
  %119 = icmp slt i64 0, %118
  %120 = bitcast i64* %shadow to i32*
  %safe.29 = or i1 %116, %119
  %select.ptr.30 = select i1 %safe.29, i32* %117, i32* %120
  %121 = load i32, i32* %select.ptr.30, align 4
  %122 = lshr i32 %104, 16
  %123 = and i32 %122, 255
  %124 = zext i32 %123 to i64
  %125 = icmp eq i64 0, %124
  store i1 %116, i1* %out.6
  %126 = load i1, i1* %out.6
  %127 = xor i1 %125, true
  %in.19 = and i1 %126, %127
  %128 = zext i32 %123 to i64
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %128
  %130 = sext i32 256 to i64
  %131 = icmp slt i64 %128, %130
  %132 = bitcast i64* %shadow to i32*
  %safe.31 = or i1 %in.19, %131
  %select.ptr.32 = select i1 %safe.31, i32* %129, i32* %132
  %133 = load i32, i32* %select.ptr.32, align 4
  store i1 %in.19, i1* %out.7
  %134 = load i1, i1* %out.6
  %in.20 = and i1 %134, %125
  %135 = load i1, i1* %out.7
  %select.phi.33 = select i1 %in.20, i32 %121, i32 %133
  %136 = xor i32 %select.phi., %select.phi.33
  %137 = or i1 %in.20, %135
  store i1 %137, i1* %out.8
  %138 = load i1, i1* %out.8
  %139 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 0
  %140 = sext i32 256 to i64
  %141 = icmp slt i64 0, %140
  %142 = bitcast i64* %shadow to i32*
  %safe.34 = or i1 %138, %141
  %select.ptr.35 = select i1 %safe.34, i32* %139, i32* %142
  %143 = load i32, i32* %select.ptr.35, align 4
  %144 = lshr i32 %109, 8
  %145 = and i32 %144, 255
  %146 = zext i32 %145 to i64
  %147 = icmp eq i64 0, %146
  store i1 %138, i1* %out.9
  %148 = load i1, i1* %out.9
  %149 = xor i1 %147, true
  %in.21 = and i1 %148, %149
  %150 = zext i32 %145 to i64
  %151 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %150
  %152 = sext i32 256 to i64
  %153 = icmp slt i64 %150, %152
  %154 = bitcast i64* %shadow to i32*
  %safe.36 = or i1 %in.21, %153
  %select.ptr.37 = select i1 %safe.36, i32* %151, i32* %154
  %155 = load i32, i32* %select.ptr.37, align 4
  store i1 %in.21, i1* %out.10
  %156 = load i1, i1* %out.9
  %in.22 = and i1 %156, %147
  %157 = load i1, i1* %out.10
  %select.phi.38 = select i1 %in.22, i32 %143, i32 %155
  %158 = xor i32 %136, %select.phi.38
  %159 = or i1 %in.22, %157
  store i1 %159, i1* %out.11
  %160 = load i1, i1* %out.11
  %161 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 0
  %162 = sext i32 256 to i64
  %163 = icmp slt i64 0, %162
  %164 = bitcast i64* %shadow to i32*
  %safe.39 = or i1 %160, %163
  %select.ptr.40 = select i1 %safe.39, i32* %161, i32* %164
  %165 = load i32, i32* %select.ptr.40, align 4
  %166 = and i32 %114, 255
  %167 = zext i32 %166 to i64
  %168 = icmp eq i64 0, %167
  store i1 %160, i1* %out.12
  %169 = load i1, i1* %out.12
  %170 = xor i1 %168, true
  %in.23 = and i1 %169, %170
  %171 = zext i32 %166 to i64
  %172 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %171
  %173 = sext i32 256 to i64
  %174 = icmp slt i64 %171, %173
  %175 = bitcast i64* %shadow to i32*
  %safe.41 = or i1 %in.23, %174
  %select.ptr.42 = select i1 %safe.41, i32* %172, i32* %175
  %176 = load i32, i32* %select.ptr.42, align 4
  store i1 %in.23, i1* %out.13
  %177 = load i1, i1* %out.12
  %in.24 = and i1 %177, %168
  %178 = load i1, i1* %out.13
  %select.phi.395 = select i1 %in.24, i32 %165, i32 %176
  %179 = or i1 %in.24, %178
  %180 = or i1 %in.24, %178
  %181 = or i1 %in.24, %178
  %182 = or i1 %in.24, %178
  %183 = or i1 %in.24, %178
  %184 = or i1 %in.24, %178
  %185 = or i1 %in.24, %178
  %186 = or i1 %in.24, %178
  %187 = or i1 %in.24, %178
  %188 = or i1 %in.24, %178
  %189 = or i1 %in.24, %178
  %190 = or i1 %in.24, %178
  %191 = or i1 %in.24, %178
  %192 = or i1 %in.24, %178
  %193 = or i1 %in.24, %178
  %194 = or i1 %in.24, %178
  %195 = or i1 %in.24, %178
  %196 = or i1 %in.24, %178
  %197 = or i1 %in.24, %178
  %198 = or i1 %in.24, %178
  %199 = or i1 %in.24, %178
  %200 = or i1 %in.24, %178
  %201 = or i1 %in.24, %178
  %202 = or i1 %in.24, %178
  %203 = or i1 %in.24, %178
  %204 = or i1 %in.24, %178
  %205 = or i1 %in.24, %178
  %206 = or i1 %in.24, %178
  %207 = or i1 %in.24, %178
  %208 = or i1 %in.24, %178
  %209 = or i1 %in.24, %178
  %210 = or i1 %in.24, %178
  %211 = or i1 %in.24, %178
  %212 = or i1 %in.24, %178
  %213 = or i1 %in.24, %178
  %214 = or i1 %in.24, %178
  %215 = or i1 %in.24, %178
  %216 = or i1 %in.24, %178
  %217 = or i1 %in.24, %178
  %218 = or i1 %in.24, %178
  %219 = or i1 %in.24, %178
  %220 = or i1 %in.24, %178
  %221 = or i1 %in.24, %178
  %222 = or i1 %in.24, %178
  %223 = or i1 %in.24, %178
  %224 = or i1 %in.24, %178
  %225 = or i1 %in.24, %178
  %226 = or i1 %in.24, %178
  %227 = or i1 %in.24, %178
  %228 = or i1 %in.24, %178
  %229 = or i1 %in.24, %178
  %230 = or i1 %in.24, %178
  %231 = or i1 %in.24, %178
  %232 = or i1 %in.24, %178
  %233 = or i1 %in.24, %178
  %234 = or i1 %in.24, %178
  %235 = or i1 %in.24, %178
  %236 = or i1 %in.24, %178
  %237 = or i1 %in.24, %178
  %238 = or i1 %in.24, %178
  %239 = or i1 %in.24, %178
  %240 = or i1 %in.24, %178
  %241 = or i1 %in.24, %178
  %242 = or i1 %in.24, %178
  %243 = or i1 %in.24, %178
  %244 = or i1 %in.24, %178
  %245 = or i1 %in.24, %178
  %246 = or i1 %in.24, %178
  %247 = or i1 %in.24, %178
  %248 = or i1 %in.24, %178
  %249 = or i1 %in.24, %178
  %250 = or i1 %in.24, %178
  %251 = or i1 %in.24, %178
  %252 = or i1 %in.24, %178
  %253 = or i1 %in.24, %178
  %254 = or i1 %in.24, %178
  %255 = or i1 %in.24, %178
  %256 = or i1 %in.24, %178
  %257 = or i1 %in.24, %178
  %258 = or i1 %in.24, %178
  %259 = or i1 %in.24, %178
  %260 = or i1 %in.24, %178
  %261 = or i1 %in.24, %178
  %262 = or i1 %in.24, %178
  %263 = or i1 %in.24, %178
  %264 = or i1 %in.24, %178
  %265 = or i1 %in.24, %178
  %266 = or i1 %in.24, %178
  %267 = or i1 %in.24, %178
  %268 = or i1 %in.24, %178
  %269 = or i1 %in.24, %178
  %270 = or i1 %in.24, %178
  %271 = or i1 %in.24, %178
  %272 = or i1 %in.24, %178
  %273 = or i1 %in.24, %178
  %274 = or i1 %in.24, %178
  %275 = or i1 %in.24, %178
  %276 = or i1 %in.24, %178
  %277 = or i1 %in.24, %178
  %278 = or i1 %in.24, %178
  %279 = or i1 %in.24, %178
  %280 = or i1 %in.24, %178
  %281 = or i1 %in.24, %178
  %282 = or i1 %in.24, %178
  %283 = or i1 %in.24, %178
  %284 = or i1 %in.24, %178
  %285 = or i1 %in.24, %178
  %286 = or i1 %in.24, %178
  %287 = or i1 %in.24, %178
  %288 = or i1 %in.24, %178
  %289 = or i1 %in.24, %178
  %290 = or i1 %in.24, %178
  %291 = or i1 %in.24, %178
  %292 = or i1 %in.24, %178
  %293 = or i1 %in.24, %178
  %294 = or i1 %in.24, %178
  %295 = or i1 %in.24, %178
  %296 = or i1 %in.24, %178
  %297 = or i1 %in.24, %178
  %298 = or i1 %in.24, %178
  %299 = or i1 %in.24, %178
  %300 = or i1 %in.24, %178
  %301 = or i1 %in.24, %178
  %302 = or i1 %in.24, %178
  %303 = or i1 %in.24, %178
  %304 = or i1 %in.24, %178
  %305 = or i1 %in.24, %178
  %306 = or i1 %in.24, %178
  %307 = or i1 %in.24, %178
  %308 = or i1 %in.24, %178
  %309 = or i1 %in.24, %178
  %310 = or i1 %in.24, %178
  %311 = or i1 %in.24, %178
  %312 = or i1 %in.24, %178
  %313 = or i1 %in.24, %178
  %314 = or i1 %in.24, %178
  %315 = or i1 %in.24, %178
  %316 = or i1 %in.24, %178
  %317 = or i1 %in.24, %178
  %318 = or i1 %in.24, %178
  %319 = or i1 %in.24, %178
  %320 = or i1 %in.24, %178
  %321 = or i1 %in.24, %178
  %322 = or i1 %in.24, %178
  %323 = or i1 %in.24, %178
  %324 = or i1 %in.24, %178
  %325 = or i1 %in.24, %178
  %326 = or i1 %in.24, %178
  %327 = or i1 %in.24, %178
  %328 = or i1 %in.24, %178
  %329 = or i1 %in.24, %178
  %330 = or i1 %in.24, %178
  %331 = or i1 %in.24, %178
  %332 = or i1 %in.24, %178
  %333 = or i1 %in.24, %178
  %334 = or i1 %in.24, %178
  %335 = or i1 %in.24, %178
  %336 = or i1 %in.24, %178
  %337 = or i1 %in.24, %178
  %338 = or i1 %in.24, %178
  %339 = or i1 %in.24, %178
  %340 = or i1 %in.24, %178
  %341 = or i1 %in.24, %178
  %342 = or i1 %in.24, %178
  %343 = or i1 %in.24, %178
  %344 = or i1 %in.24, %178
  %345 = or i1 %in.24, %178
  %346 = or i1 %in.24, %178
  %347 = or i1 %in.24, %178
  %348 = or i1 %in.24, %178
  %349 = or i1 %in.24, %178
  %350 = or i1 %in.24, %178
  %351 = or i1 %in.24, %178
  %352 = or i1 %in.24, %178
  %353 = or i1 %in.24, %178
  %354 = or i1 %in.24, %178
  %355 = xor i32 %158, %select.phi.395
  %356 = getelementptr inbounds i32, i32* %0, i64 4
  %357 = icmp slt i64 4, %len.
  %358 = bitcast i64* %shadow to i32*
  %safe.43 = or i1 %354, %357
  %select.ptr.44 = select i1 %safe.43, i32* %356, i32* %358
  %359 = load i32, i32* %select.ptr.44, align 4
  %360 = xor i32 %355, %359
  %361 = lshr i32 %104, 24
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %362
  %364 = sext i32 256 to i64
  %365 = icmp slt i64 %362, %364
  %366 = bitcast i64* %shadow to i32*
  %safe.45 = or i1 %353, %365
  %select.ptr.46 = select i1 %safe.45, i32* %363, i32* %366
  %367 = load i32, i32* %select.ptr.46, align 4
  %368 = lshr i32 %109, 16
  %369 = and i32 %368, 255
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %370
  %372 = sext i32 256 to i64
  %373 = icmp slt i64 %370, %372
  %374 = bitcast i64* %shadow to i32*
  %safe.47 = or i1 %352, %373
  %select.ptr.48 = select i1 %safe.47, i32* %371, i32* %374
  %375 = load i32, i32* %select.ptr.48, align 4
  %376 = xor i32 %367, %375
  %377 = lshr i32 %114, 8
  %378 = and i32 %377, 255
  %379 = zext i32 %378 to i64
  %380 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %379
  %381 = sext i32 256 to i64
  %382 = icmp slt i64 %379, %381
  %383 = bitcast i64* %shadow to i32*
  %safe.49 = or i1 %351, %382
  %select.ptr.50 = select i1 %safe.49, i32* %380, i32* %383
  %384 = load i32, i32* %select.ptr.50, align 4
  %385 = xor i32 %376, %384
  %386 = and i32 %24, 255
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %387
  %389 = sext i32 256 to i64
  %390 = icmp slt i64 %387, %389
  %391 = bitcast i64* %shadow to i32*
  %safe.51 = or i1 %350, %390
  %select.ptr.52 = select i1 %safe.51, i32* %388, i32* %391
  %392 = load i32, i32* %select.ptr.52, align 4
  %393 = xor i32 %385, %392
  %394 = getelementptr inbounds i32, i32* %0, i64 5
  %395 = icmp slt i64 5, %len.
  %396 = bitcast i64* %shadow to i32*
  %safe.53 = or i1 %349, %395
  %select.ptr.54 = select i1 %safe.53, i32* %394, i32* %396
  %397 = load i32, i32* %select.ptr.54, align 4
  %398 = xor i32 %393, %397
  %399 = lshr i32 %109, 24
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %400
  %402 = sext i32 256 to i64
  %403 = icmp slt i64 %400, %402
  %404 = bitcast i64* %shadow to i32*
  %safe.55 = or i1 %348, %403
  %select.ptr.56 = select i1 %safe.55, i32* %401, i32* %404
  %405 = load i32, i32* %select.ptr.56, align 4
  %406 = lshr i32 %114, 16
  %407 = and i32 %406, 255
  %408 = zext i32 %407 to i64
  %409 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %408
  %410 = sext i32 256 to i64
  %411 = icmp slt i64 %408, %410
  %412 = bitcast i64* %shadow to i32*
  %safe.57 = or i1 %347, %411
  %select.ptr.58 = select i1 %safe.57, i32* %409, i32* %412
  %413 = load i32, i32* %select.ptr.58, align 4
  %414 = xor i32 %405, %413
  %415 = lshr i32 %24, 8
  %416 = and i32 %415, 255
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %417
  %419 = sext i32 256 to i64
  %420 = icmp slt i64 %417, %419
  %421 = bitcast i64* %shadow to i32*
  %safe.59 = or i1 %346, %420
  %select.ptr.60 = select i1 %safe.59, i32* %418, i32* %421
  %422 = load i32, i32* %select.ptr.60, align 4
  %423 = xor i32 %414, %422
  %424 = and i32 %104, 255
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %425
  %427 = sext i32 256 to i64
  %428 = icmp slt i64 %425, %427
  %429 = bitcast i64* %shadow to i32*
  %safe.61 = or i1 %345, %428
  %select.ptr.62 = select i1 %safe.61, i32* %426, i32* %429
  %430 = load i32, i32* %select.ptr.62, align 4
  %431 = xor i32 %423, %430
  %432 = getelementptr inbounds i32, i32* %0, i64 6
  %433 = icmp slt i64 6, %len.
  %434 = bitcast i64* %shadow to i32*
  %safe.63 = or i1 %344, %433
  %select.ptr.64 = select i1 %safe.63, i32* %432, i32* %434
  %435 = load i32, i32* %select.ptr.64, align 4
  %436 = xor i32 %431, %435
  %437 = lshr i32 %114, 24
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %438
  %440 = sext i32 256 to i64
  %441 = icmp slt i64 %438, %440
  %442 = bitcast i64* %shadow to i32*
  %safe.65 = or i1 %343, %441
  %select.ptr.66 = select i1 %safe.65, i32* %439, i32* %442
  %443 = load i32, i32* %select.ptr.66, align 4
  %444 = lshr i32 %24, 16
  %445 = and i32 %444, 255
  %446 = zext i32 %445 to i64
  %447 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %446
  %448 = sext i32 256 to i64
  %449 = icmp slt i64 %446, %448
  %450 = bitcast i64* %shadow to i32*
  %safe.67 = or i1 %342, %449
  %select.ptr.68 = select i1 %safe.67, i32* %447, i32* %450
  %451 = load i32, i32* %select.ptr.68, align 4
  %452 = xor i32 %443, %451
  %453 = lshr i32 %104, 8
  %454 = and i32 %453, 255
  %455 = zext i32 %454 to i64
  %456 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %455
  %457 = sext i32 256 to i64
  %458 = icmp slt i64 %455, %457
  %459 = bitcast i64* %shadow to i32*
  %safe.69 = or i1 %341, %458
  %select.ptr.70 = select i1 %safe.69, i32* %456, i32* %459
  %460 = load i32, i32* %select.ptr.70, align 4
  %461 = xor i32 %452, %460
  %462 = and i32 %109, 255
  %463 = zext i32 %462 to i64
  %464 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %463
  %465 = sext i32 256 to i64
  %466 = icmp slt i64 %463, %465
  %467 = bitcast i64* %shadow to i32*
  %safe.71 = or i1 %340, %466
  %select.ptr.72 = select i1 %safe.71, i32* %464, i32* %467
  %468 = load i32, i32* %select.ptr.72, align 4
  %469 = xor i32 %461, %468
  %470 = getelementptr inbounds i32, i32* %0, i64 7
  %471 = icmp slt i64 7, %len.
  %472 = bitcast i64* %shadow to i32*
  %safe.73 = or i1 %339, %471
  %select.ptr.74 = select i1 %safe.73, i32* %470, i32* %472
  %473 = load i32, i32* %select.ptr.74, align 4
  %474 = xor i32 %469, %473
  %475 = lshr i32 %360, 24
  %476 = zext i32 %475 to i64
  %477 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %476
  %478 = sext i32 256 to i64
  %479 = icmp slt i64 %476, %478
  %480 = bitcast i64* %shadow to i32*
  %safe.75 = or i1 %338, %479
  %select.ptr.76 = select i1 %safe.75, i32* %477, i32* %480
  %481 = load i32, i32* %select.ptr.76, align 4
  %482 = lshr i32 %398, 16
  %483 = and i32 %482, 255
  %484 = zext i32 %483 to i64
  %485 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %484
  %486 = sext i32 256 to i64
  %487 = icmp slt i64 %484, %486
  %488 = bitcast i64* %shadow to i32*
  %safe.77 = or i1 %337, %487
  %select.ptr.78 = select i1 %safe.77, i32* %485, i32* %488
  %489 = load i32, i32* %select.ptr.78, align 4
  %490 = xor i32 %481, %489
  %491 = lshr i32 %436, 8
  %492 = and i32 %491, 255
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %493
  %495 = sext i32 256 to i64
  %496 = icmp slt i64 %493, %495
  %497 = bitcast i64* %shadow to i32*
  %safe.79 = or i1 %336, %496
  %select.ptr.80 = select i1 %safe.79, i32* %494, i32* %497
  %498 = load i32, i32* %select.ptr.80, align 4
  %499 = xor i32 %490, %498
  %500 = and i32 %474, 255
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %501
  %503 = sext i32 256 to i64
  %504 = icmp slt i64 %501, %503
  %505 = bitcast i64* %shadow to i32*
  %safe.81 = or i1 %335, %504
  %select.ptr.82 = select i1 %safe.81, i32* %502, i32* %505
  %506 = load i32, i32* %select.ptr.82, align 4
  %507 = xor i32 %499, %506
  %508 = getelementptr inbounds i32, i32* %0, i64 8
  %509 = icmp slt i64 8, %len.
  %510 = bitcast i64* %shadow to i32*
  %safe.83 = or i1 %334, %509
  %select.ptr.84 = select i1 %safe.83, i32* %508, i32* %510
  %511 = load i32, i32* %select.ptr.84, align 4
  %512 = xor i32 %507, %511
  %513 = lshr i32 %398, 24
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %514
  %516 = sext i32 256 to i64
  %517 = icmp slt i64 %514, %516
  %518 = bitcast i64* %shadow to i32*
  %safe.85 = or i1 %333, %517
  %select.ptr.86 = select i1 %safe.85, i32* %515, i32* %518
  %519 = load i32, i32* %select.ptr.86, align 4
  %520 = lshr i32 %436, 16
  %521 = and i32 %520, 255
  %522 = zext i32 %521 to i64
  %523 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %522
  %524 = sext i32 256 to i64
  %525 = icmp slt i64 %522, %524
  %526 = bitcast i64* %shadow to i32*
  %safe.87 = or i1 %332, %525
  %select.ptr.88 = select i1 %safe.87, i32* %523, i32* %526
  %527 = load i32, i32* %select.ptr.88, align 4
  %528 = xor i32 %519, %527
  %529 = lshr i32 %474, 8
  %530 = and i32 %529, 255
  %531 = zext i32 %530 to i64
  %532 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %531
  %533 = sext i32 256 to i64
  %534 = icmp slt i64 %531, %533
  %535 = bitcast i64* %shadow to i32*
  %safe.89 = or i1 %331, %534
  %select.ptr.90 = select i1 %safe.89, i32* %532, i32* %535
  %536 = load i32, i32* %select.ptr.90, align 4
  %537 = xor i32 %528, %536
  %538 = and i32 %360, 255
  %539 = zext i32 %538 to i64
  %540 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %539
  %541 = sext i32 256 to i64
  %542 = icmp slt i64 %539, %541
  %543 = bitcast i64* %shadow to i32*
  %safe.91 = or i1 %330, %542
  %select.ptr.92 = select i1 %safe.91, i32* %540, i32* %543
  %544 = load i32, i32* %select.ptr.92, align 4
  %545 = xor i32 %537, %544
  %546 = getelementptr inbounds i32, i32* %0, i64 9
  %547 = icmp slt i64 9, %len.
  %548 = bitcast i64* %shadow to i32*
  %safe.93 = or i1 %329, %547
  %select.ptr.94 = select i1 %safe.93, i32* %546, i32* %548
  %549 = load i32, i32* %select.ptr.94, align 4
  %550 = xor i32 %545, %549
  %551 = lshr i32 %436, 24
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %552
  %554 = sext i32 256 to i64
  %555 = icmp slt i64 %552, %554
  %556 = bitcast i64* %shadow to i32*
  %safe.95 = or i1 %328, %555
  %select.ptr.96 = select i1 %safe.95, i32* %553, i32* %556
  %557 = load i32, i32* %select.ptr.96, align 4
  %558 = lshr i32 %474, 16
  %559 = and i32 %558, 255
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %560
  %562 = sext i32 256 to i64
  %563 = icmp slt i64 %560, %562
  %564 = bitcast i64* %shadow to i32*
  %safe.97 = or i1 %327, %563
  %select.ptr.98 = select i1 %safe.97, i32* %561, i32* %564
  %565 = load i32, i32* %select.ptr.98, align 4
  %566 = xor i32 %557, %565
  %567 = lshr i32 %360, 8
  %568 = and i32 %567, 255
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %569
  %571 = sext i32 256 to i64
  %572 = icmp slt i64 %569, %571
  %573 = bitcast i64* %shadow to i32*
  %safe.99 = or i1 %326, %572
  %select.ptr.100 = select i1 %safe.99, i32* %570, i32* %573
  %574 = load i32, i32* %select.ptr.100, align 4
  %575 = xor i32 %566, %574
  %576 = and i32 %398, 255
  %577 = zext i32 %576 to i64
  %578 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %577
  %579 = sext i32 256 to i64
  %580 = icmp slt i64 %577, %579
  %581 = bitcast i64* %shadow to i32*
  %safe.101 = or i1 %325, %580
  %select.ptr.102 = select i1 %safe.101, i32* %578, i32* %581
  %582 = load i32, i32* %select.ptr.102, align 4
  %583 = xor i32 %575, %582
  %584 = getelementptr inbounds i32, i32* %0, i64 10
  %585 = icmp slt i64 10, %len.
  %586 = bitcast i64* %shadow to i32*
  %safe.103 = or i1 %324, %585
  %select.ptr.104 = select i1 %safe.103, i32* %584, i32* %586
  %587 = load i32, i32* %select.ptr.104, align 4
  %588 = xor i32 %583, %587
  %589 = lshr i32 %474, 24
  %590 = zext i32 %589 to i64
  %591 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %590
  %592 = sext i32 256 to i64
  %593 = icmp slt i64 %590, %592
  %594 = bitcast i64* %shadow to i32*
  %safe.105 = or i1 %323, %593
  %select.ptr.106 = select i1 %safe.105, i32* %591, i32* %594
  %595 = load i32, i32* %select.ptr.106, align 4
  %596 = lshr i32 %360, 16
  %597 = and i32 %596, 255
  %598 = zext i32 %597 to i64
  %599 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %598
  %600 = sext i32 256 to i64
  %601 = icmp slt i64 %598, %600
  %602 = bitcast i64* %shadow to i32*
  %safe.107 = or i1 %322, %601
  %select.ptr.108 = select i1 %safe.107, i32* %599, i32* %602
  %603 = load i32, i32* %select.ptr.108, align 4
  %604 = xor i32 %595, %603
  %605 = lshr i32 %398, 8
  %606 = and i32 %605, 255
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %607
  %609 = sext i32 256 to i64
  %610 = icmp slt i64 %607, %609
  %611 = bitcast i64* %shadow to i32*
  %safe.109 = or i1 %321, %610
  %select.ptr.110 = select i1 %safe.109, i32* %608, i32* %611
  %612 = load i32, i32* %select.ptr.110, align 4
  %613 = xor i32 %604, %612
  %614 = and i32 %436, 255
  %615 = zext i32 %614 to i64
  %616 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %615
  %617 = sext i32 256 to i64
  %618 = icmp slt i64 %615, %617
  %619 = bitcast i64* %shadow to i32*
  %safe.111 = or i1 %320, %618
  %select.ptr.112 = select i1 %safe.111, i32* %616, i32* %619
  %620 = load i32, i32* %select.ptr.112, align 4
  %621 = xor i32 %613, %620
  %622 = getelementptr inbounds i32, i32* %0, i64 11
  %623 = icmp slt i64 11, %len.
  %624 = bitcast i64* %shadow to i32*
  %safe.113 = or i1 %319, %623
  %select.ptr.114 = select i1 %safe.113, i32* %622, i32* %624
  %625 = load i32, i32* %select.ptr.114, align 4
  %626 = xor i32 %621, %625
  %627 = lshr i32 %512, 24
  %628 = zext i32 %627 to i64
  %629 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %628
  %630 = sext i32 256 to i64
  %631 = icmp slt i64 %628, %630
  %632 = bitcast i64* %shadow to i32*
  %safe.115 = or i1 %318, %631
  %select.ptr.116 = select i1 %safe.115, i32* %629, i32* %632
  %633 = load i32, i32* %select.ptr.116, align 4
  %634 = lshr i32 %550, 16
  %635 = and i32 %634, 255
  %636 = zext i32 %635 to i64
  %637 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %636
  %638 = sext i32 256 to i64
  %639 = icmp slt i64 %636, %638
  %640 = bitcast i64* %shadow to i32*
  %safe.117 = or i1 %317, %639
  %select.ptr.118 = select i1 %safe.117, i32* %637, i32* %640
  %641 = load i32, i32* %select.ptr.118, align 4
  %642 = xor i32 %633, %641
  %643 = lshr i32 %588, 8
  %644 = and i32 %643, 255
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %645
  %647 = sext i32 256 to i64
  %648 = icmp slt i64 %645, %647
  %649 = bitcast i64* %shadow to i32*
  %safe.119 = or i1 %316, %648
  %select.ptr.120 = select i1 %safe.119, i32* %646, i32* %649
  %650 = load i32, i32* %select.ptr.120, align 4
  %651 = xor i32 %642, %650
  %652 = and i32 %626, 255
  %653 = zext i32 %652 to i64
  %654 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %653
  %655 = sext i32 256 to i64
  %656 = icmp slt i64 %653, %655
  %657 = bitcast i64* %shadow to i32*
  %safe.121 = or i1 %315, %656
  %select.ptr.122 = select i1 %safe.121, i32* %654, i32* %657
  %658 = load i32, i32* %select.ptr.122, align 4
  %659 = xor i32 %651, %658
  %660 = getelementptr inbounds i32, i32* %0, i64 12
  %661 = icmp slt i64 12, %len.
  %662 = bitcast i64* %shadow to i32*
  %safe.123 = or i1 %314, %661
  %select.ptr.124 = select i1 %safe.123, i32* %660, i32* %662
  %663 = load i32, i32* %select.ptr.124, align 4
  %664 = xor i32 %659, %663
  %665 = lshr i32 %550, 24
  %666 = zext i32 %665 to i64
  %667 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %666
  %668 = sext i32 256 to i64
  %669 = icmp slt i64 %666, %668
  %670 = bitcast i64* %shadow to i32*
  %safe.125 = or i1 %313, %669
  %select.ptr.126 = select i1 %safe.125, i32* %667, i32* %670
  %671 = load i32, i32* %select.ptr.126, align 4
  %672 = lshr i32 %588, 16
  %673 = and i32 %672, 255
  %674 = zext i32 %673 to i64
  %675 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %674
  %676 = sext i32 256 to i64
  %677 = icmp slt i64 %674, %676
  %678 = bitcast i64* %shadow to i32*
  %safe.127 = or i1 %312, %677
  %select.ptr.128 = select i1 %safe.127, i32* %675, i32* %678
  %679 = load i32, i32* %select.ptr.128, align 4
  %680 = xor i32 %671, %679
  %681 = lshr i32 %626, 8
  %682 = and i32 %681, 255
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %683
  %685 = sext i32 256 to i64
  %686 = icmp slt i64 %683, %685
  %687 = bitcast i64* %shadow to i32*
  %safe.129 = or i1 %311, %686
  %select.ptr.130 = select i1 %safe.129, i32* %684, i32* %687
  %688 = load i32, i32* %select.ptr.130, align 4
  %689 = xor i32 %680, %688
  %690 = and i32 %512, 255
  %691 = zext i32 %690 to i64
  %692 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %691
  %693 = sext i32 256 to i64
  %694 = icmp slt i64 %691, %693
  %695 = bitcast i64* %shadow to i32*
  %safe.131 = or i1 %310, %694
  %select.ptr.132 = select i1 %safe.131, i32* %692, i32* %695
  %696 = load i32, i32* %select.ptr.132, align 4
  %697 = xor i32 %689, %696
  %698 = getelementptr inbounds i32, i32* %0, i64 13
  %699 = icmp slt i64 13, %len.
  %700 = bitcast i64* %shadow to i32*
  %safe.133 = or i1 %309, %699
  %select.ptr.134 = select i1 %safe.133, i32* %698, i32* %700
  %701 = load i32, i32* %select.ptr.134, align 4
  %702 = xor i32 %697, %701
  %703 = lshr i32 %588, 24
  %704 = zext i32 %703 to i64
  %705 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %704
  %706 = sext i32 256 to i64
  %707 = icmp slt i64 %704, %706
  %708 = bitcast i64* %shadow to i32*
  %safe.135 = or i1 %308, %707
  %select.ptr.136 = select i1 %safe.135, i32* %705, i32* %708
  %709 = load i32, i32* %select.ptr.136, align 4
  %710 = lshr i32 %626, 16
  %711 = and i32 %710, 255
  %712 = zext i32 %711 to i64
  %713 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %712
  %714 = sext i32 256 to i64
  %715 = icmp slt i64 %712, %714
  %716 = bitcast i64* %shadow to i32*
  %safe.137 = or i1 %307, %715
  %select.ptr.138 = select i1 %safe.137, i32* %713, i32* %716
  %717 = load i32, i32* %select.ptr.138, align 4
  %718 = xor i32 %709, %717
  %719 = lshr i32 %512, 8
  %720 = and i32 %719, 255
  %721 = zext i32 %720 to i64
  %722 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %721
  %723 = sext i32 256 to i64
  %724 = icmp slt i64 %721, %723
  %725 = bitcast i64* %shadow to i32*
  %safe.139 = or i1 %306, %724
  %select.ptr.140 = select i1 %safe.139, i32* %722, i32* %725
  %726 = load i32, i32* %select.ptr.140, align 4
  %727 = xor i32 %718, %726
  %728 = and i32 %550, 255
  %729 = zext i32 %728 to i64
  %730 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %729
  %731 = sext i32 256 to i64
  %732 = icmp slt i64 %729, %731
  %733 = bitcast i64* %shadow to i32*
  %safe.141 = or i1 %305, %732
  %select.ptr.142 = select i1 %safe.141, i32* %730, i32* %733
  %734 = load i32, i32* %select.ptr.142, align 4
  %735 = xor i32 %727, %734
  %736 = getelementptr inbounds i32, i32* %0, i64 14
  %737 = icmp slt i64 14, %len.
  %738 = bitcast i64* %shadow to i32*
  %safe.143 = or i1 %304, %737
  %select.ptr.144 = select i1 %safe.143, i32* %736, i32* %738
  %739 = load i32, i32* %select.ptr.144, align 4
  %740 = xor i32 %735, %739
  %741 = lshr i32 %626, 24
  %742 = zext i32 %741 to i64
  %743 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %742
  %744 = sext i32 256 to i64
  %745 = icmp slt i64 %742, %744
  %746 = bitcast i64* %shadow to i32*
  %safe.145 = or i1 %303, %745
  %select.ptr.146 = select i1 %safe.145, i32* %743, i32* %746
  %747 = load i32, i32* %select.ptr.146, align 4
  %748 = lshr i32 %512, 16
  %749 = and i32 %748, 255
  %750 = zext i32 %749 to i64
  %751 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %750
  %752 = sext i32 256 to i64
  %753 = icmp slt i64 %750, %752
  %754 = bitcast i64* %shadow to i32*
  %safe.147 = or i1 %302, %753
  %select.ptr.148 = select i1 %safe.147, i32* %751, i32* %754
  %755 = load i32, i32* %select.ptr.148, align 4
  %756 = xor i32 %747, %755
  %757 = lshr i32 %550, 8
  %758 = and i32 %757, 255
  %759 = zext i32 %758 to i64
  %760 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %759
  %761 = sext i32 256 to i64
  %762 = icmp slt i64 %759, %761
  %763 = bitcast i64* %shadow to i32*
  %safe.149 = or i1 %301, %762
  %select.ptr.150 = select i1 %safe.149, i32* %760, i32* %763
  %764 = load i32, i32* %select.ptr.150, align 4
  %765 = xor i32 %756, %764
  %766 = and i32 %588, 255
  %767 = zext i32 %766 to i64
  %768 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %767
  %769 = sext i32 256 to i64
  %770 = icmp slt i64 %767, %769
  %771 = bitcast i64* %shadow to i32*
  %safe.151 = or i1 %300, %770
  %select.ptr.152 = select i1 %safe.151, i32* %768, i32* %771
  %772 = load i32, i32* %select.ptr.152, align 4
  %773 = xor i32 %765, %772
  %774 = getelementptr inbounds i32, i32* %0, i64 15
  %775 = icmp slt i64 15, %len.
  %776 = bitcast i64* %shadow to i32*
  %safe.153 = or i1 %299, %775
  %select.ptr.154 = select i1 %safe.153, i32* %774, i32* %776
  %777 = load i32, i32* %select.ptr.154, align 4
  %778 = xor i32 %773, %777
  %779 = lshr i32 %664, 24
  %780 = zext i32 %779 to i64
  %781 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %780
  %782 = sext i32 256 to i64
  %783 = icmp slt i64 %780, %782
  %784 = bitcast i64* %shadow to i32*
  %safe.155 = or i1 %298, %783
  %select.ptr.156 = select i1 %safe.155, i32* %781, i32* %784
  %785 = load i32, i32* %select.ptr.156, align 4
  %786 = lshr i32 %702, 16
  %787 = and i32 %786, 255
  %788 = zext i32 %787 to i64
  %789 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %788
  %790 = sext i32 256 to i64
  %791 = icmp slt i64 %788, %790
  %792 = bitcast i64* %shadow to i32*
  %safe.157 = or i1 %297, %791
  %select.ptr.158 = select i1 %safe.157, i32* %789, i32* %792
  %793 = load i32, i32* %select.ptr.158, align 4
  %794 = xor i32 %785, %793
  %795 = lshr i32 %740, 8
  %796 = and i32 %795, 255
  %797 = zext i32 %796 to i64
  %798 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %797
  %799 = sext i32 256 to i64
  %800 = icmp slt i64 %797, %799
  %801 = bitcast i64* %shadow to i32*
  %safe.159 = or i1 %296, %800
  %select.ptr.160 = select i1 %safe.159, i32* %798, i32* %801
  %802 = load i32, i32* %select.ptr.160, align 4
  %803 = xor i32 %794, %802
  %804 = and i32 %778, 255
  %805 = zext i32 %804 to i64
  %806 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %805
  %807 = sext i32 256 to i64
  %808 = icmp slt i64 %805, %807
  %809 = bitcast i64* %shadow to i32*
  %safe.161 = or i1 %295, %808
  %select.ptr.162 = select i1 %safe.161, i32* %806, i32* %809
  %810 = load i32, i32* %select.ptr.162, align 4
  %811 = xor i32 %803, %810
  %812 = getelementptr inbounds i32, i32* %0, i64 16
  %813 = icmp slt i64 16, %len.
  %814 = bitcast i64* %shadow to i32*
  %safe.163 = or i1 %294, %813
  %select.ptr.164 = select i1 %safe.163, i32* %812, i32* %814
  %815 = load i32, i32* %select.ptr.164, align 4
  %816 = xor i32 %811, %815
  %817 = lshr i32 %702, 24
  %818 = zext i32 %817 to i64
  %819 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %818
  %820 = sext i32 256 to i64
  %821 = icmp slt i64 %818, %820
  %822 = bitcast i64* %shadow to i32*
  %safe.165 = or i1 %293, %821
  %select.ptr.166 = select i1 %safe.165, i32* %819, i32* %822
  %823 = load i32, i32* %select.ptr.166, align 4
  %824 = lshr i32 %740, 16
  %825 = and i32 %824, 255
  %826 = zext i32 %825 to i64
  %827 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %826
  %828 = sext i32 256 to i64
  %829 = icmp slt i64 %826, %828
  %830 = bitcast i64* %shadow to i32*
  %safe.167 = or i1 %292, %829
  %select.ptr.168 = select i1 %safe.167, i32* %827, i32* %830
  %831 = load i32, i32* %select.ptr.168, align 4
  %832 = xor i32 %823, %831
  %833 = lshr i32 %778, 8
  %834 = and i32 %833, 255
  %835 = zext i32 %834 to i64
  %836 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %835
  %837 = sext i32 256 to i64
  %838 = icmp slt i64 %835, %837
  %839 = bitcast i64* %shadow to i32*
  %safe.169 = or i1 %291, %838
  %select.ptr.170 = select i1 %safe.169, i32* %836, i32* %839
  %840 = load i32, i32* %select.ptr.170, align 4
  %841 = xor i32 %832, %840
  %842 = and i32 %664, 255
  %843 = zext i32 %842 to i64
  %844 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %843
  %845 = sext i32 256 to i64
  %846 = icmp slt i64 %843, %845
  %847 = bitcast i64* %shadow to i32*
  %safe.171 = or i1 %290, %846
  %select.ptr.172 = select i1 %safe.171, i32* %844, i32* %847
  %848 = load i32, i32* %select.ptr.172, align 4
  %849 = xor i32 %841, %848
  %850 = getelementptr inbounds i32, i32* %0, i64 17
  %851 = icmp slt i64 17, %len.
  %852 = bitcast i64* %shadow to i32*
  %safe.173 = or i1 %289, %851
  %select.ptr.174 = select i1 %safe.173, i32* %850, i32* %852
  %853 = load i32, i32* %select.ptr.174, align 4
  %854 = xor i32 %849, %853
  %855 = lshr i32 %740, 24
  %856 = zext i32 %855 to i64
  %857 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %856
  %858 = sext i32 256 to i64
  %859 = icmp slt i64 %856, %858
  %860 = bitcast i64* %shadow to i32*
  %safe.175 = or i1 %288, %859
  %select.ptr.176 = select i1 %safe.175, i32* %857, i32* %860
  %861 = load i32, i32* %select.ptr.176, align 4
  %862 = lshr i32 %778, 16
  %863 = and i32 %862, 255
  %864 = zext i32 %863 to i64
  %865 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %864
  %866 = sext i32 256 to i64
  %867 = icmp slt i64 %864, %866
  %868 = bitcast i64* %shadow to i32*
  %safe.177 = or i1 %287, %867
  %select.ptr.178 = select i1 %safe.177, i32* %865, i32* %868
  %869 = load i32, i32* %select.ptr.178, align 4
  %870 = xor i32 %861, %869
  %871 = lshr i32 %664, 8
  %872 = and i32 %871, 255
  %873 = zext i32 %872 to i64
  %874 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %873
  %875 = sext i32 256 to i64
  %876 = icmp slt i64 %873, %875
  %877 = bitcast i64* %shadow to i32*
  %safe.179 = or i1 %286, %876
  %select.ptr.180 = select i1 %safe.179, i32* %874, i32* %877
  %878 = load i32, i32* %select.ptr.180, align 4
  %879 = xor i32 %870, %878
  %880 = and i32 %702, 255
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %881
  %883 = sext i32 256 to i64
  %884 = icmp slt i64 %881, %883
  %885 = bitcast i64* %shadow to i32*
  %safe.181 = or i1 %285, %884
  %select.ptr.182 = select i1 %safe.181, i32* %882, i32* %885
  %886 = load i32, i32* %select.ptr.182, align 4
  %887 = xor i32 %879, %886
  %888 = getelementptr inbounds i32, i32* %0, i64 18
  %889 = icmp slt i64 18, %len.
  %890 = bitcast i64* %shadow to i32*
  %safe.183 = or i1 %284, %889
  %select.ptr.184 = select i1 %safe.183, i32* %888, i32* %890
  %891 = load i32, i32* %select.ptr.184, align 4
  %892 = xor i32 %887, %891
  %893 = lshr i32 %778, 24
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %894
  %896 = sext i32 256 to i64
  %897 = icmp slt i64 %894, %896
  %898 = bitcast i64* %shadow to i32*
  %safe.185 = or i1 %283, %897
  %select.ptr.186 = select i1 %safe.185, i32* %895, i32* %898
  %899 = load i32, i32* %select.ptr.186, align 4
  %900 = lshr i32 %664, 16
  %901 = and i32 %900, 255
  %902 = zext i32 %901 to i64
  %903 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %902
  %904 = sext i32 256 to i64
  %905 = icmp slt i64 %902, %904
  %906 = bitcast i64* %shadow to i32*
  %safe.187 = or i1 %282, %905
  %select.ptr.188 = select i1 %safe.187, i32* %903, i32* %906
  %907 = load i32, i32* %select.ptr.188, align 4
  %908 = xor i32 %899, %907
  %909 = lshr i32 %702, 8
  %910 = and i32 %909, 255
  %911 = zext i32 %910 to i64
  %912 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %911
  %913 = sext i32 256 to i64
  %914 = icmp slt i64 %911, %913
  %915 = bitcast i64* %shadow to i32*
  %safe.189 = or i1 %281, %914
  %select.ptr.190 = select i1 %safe.189, i32* %912, i32* %915
  %916 = load i32, i32* %select.ptr.190, align 4
  %917 = xor i32 %908, %916
  %918 = and i32 %740, 255
  %919 = zext i32 %918 to i64
  %920 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %919
  %921 = sext i32 256 to i64
  %922 = icmp slt i64 %919, %921
  %923 = bitcast i64* %shadow to i32*
  %safe.191 = or i1 %280, %922
  %select.ptr.192 = select i1 %safe.191, i32* %920, i32* %923
  %924 = load i32, i32* %select.ptr.192, align 4
  %925 = xor i32 %917, %924
  %926 = getelementptr inbounds i32, i32* %0, i64 19
  %927 = icmp slt i64 19, %len.
  %928 = bitcast i64* %shadow to i32*
  %safe.193 = or i1 %279, %927
  %select.ptr.194 = select i1 %safe.193, i32* %926, i32* %928
  %929 = load i32, i32* %select.ptr.194, align 4
  %930 = xor i32 %925, %929
  %931 = lshr i32 %816, 24
  %932 = zext i32 %931 to i64
  %933 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %932
  %934 = sext i32 256 to i64
  %935 = icmp slt i64 %932, %934
  %936 = bitcast i64* %shadow to i32*
  %safe.195 = or i1 %278, %935
  %select.ptr.196 = select i1 %safe.195, i32* %933, i32* %936
  %937 = load i32, i32* %select.ptr.196, align 4
  %938 = lshr i32 %854, 16
  %939 = and i32 %938, 255
  %940 = zext i32 %939 to i64
  %941 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %940
  %942 = sext i32 256 to i64
  %943 = icmp slt i64 %940, %942
  %944 = bitcast i64* %shadow to i32*
  %safe.197 = or i1 %277, %943
  %select.ptr.198 = select i1 %safe.197, i32* %941, i32* %944
  %945 = load i32, i32* %select.ptr.198, align 4
  %946 = xor i32 %937, %945
  %947 = lshr i32 %892, 8
  %948 = and i32 %947, 255
  %949 = zext i32 %948 to i64
  %950 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %949
  %951 = sext i32 256 to i64
  %952 = icmp slt i64 %949, %951
  %953 = bitcast i64* %shadow to i32*
  %safe.199 = or i1 %276, %952
  %select.ptr.200 = select i1 %safe.199, i32* %950, i32* %953
  %954 = load i32, i32* %select.ptr.200, align 4
  %955 = xor i32 %946, %954
  %956 = and i32 %930, 255
  %957 = zext i32 %956 to i64
  %958 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %957
  %959 = sext i32 256 to i64
  %960 = icmp slt i64 %957, %959
  %961 = bitcast i64* %shadow to i32*
  %safe.201 = or i1 %275, %960
  %select.ptr.202 = select i1 %safe.201, i32* %958, i32* %961
  %962 = load i32, i32* %select.ptr.202, align 4
  %963 = xor i32 %955, %962
  %964 = getelementptr inbounds i32, i32* %0, i64 20
  %965 = icmp slt i64 20, %len.
  %966 = bitcast i64* %shadow to i32*
  %safe.203 = or i1 %274, %965
  %select.ptr.204 = select i1 %safe.203, i32* %964, i32* %966
  %967 = load i32, i32* %select.ptr.204, align 4
  %968 = xor i32 %963, %967
  %969 = lshr i32 %854, 24
  %970 = zext i32 %969 to i64
  %971 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %970
  %972 = sext i32 256 to i64
  %973 = icmp slt i64 %970, %972
  %974 = bitcast i64* %shadow to i32*
  %safe.205 = or i1 %273, %973
  %select.ptr.206 = select i1 %safe.205, i32* %971, i32* %974
  %975 = load i32, i32* %select.ptr.206, align 4
  %976 = lshr i32 %892, 16
  %977 = and i32 %976, 255
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %978
  %980 = sext i32 256 to i64
  %981 = icmp slt i64 %978, %980
  %982 = bitcast i64* %shadow to i32*
  %safe.207 = or i1 %272, %981
  %select.ptr.208 = select i1 %safe.207, i32* %979, i32* %982
  %983 = load i32, i32* %select.ptr.208, align 4
  %984 = xor i32 %975, %983
  %985 = lshr i32 %930, 8
  %986 = and i32 %985, 255
  %987 = zext i32 %986 to i64
  %988 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %987
  %989 = sext i32 256 to i64
  %990 = icmp slt i64 %987, %989
  %991 = bitcast i64* %shadow to i32*
  %safe.209 = or i1 %271, %990
  %select.ptr.210 = select i1 %safe.209, i32* %988, i32* %991
  %992 = load i32, i32* %select.ptr.210, align 4
  %993 = xor i32 %984, %992
  %994 = and i32 %816, 255
  %995 = zext i32 %994 to i64
  %996 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %995
  %997 = sext i32 256 to i64
  %998 = icmp slt i64 %995, %997
  %999 = bitcast i64* %shadow to i32*
  %safe.211 = or i1 %270, %998
  %select.ptr.212 = select i1 %safe.211, i32* %996, i32* %999
  %1000 = load i32, i32* %select.ptr.212, align 4
  %1001 = xor i32 %993, %1000
  %1002 = getelementptr inbounds i32, i32* %0, i64 21
  %1003 = icmp slt i64 21, %len.
  %1004 = bitcast i64* %shadow to i32*
  %safe.213 = or i1 %269, %1003
  %select.ptr.214 = select i1 %safe.213, i32* %1002, i32* %1004
  %1005 = load i32, i32* %select.ptr.214, align 4
  %1006 = xor i32 %1001, %1005
  %1007 = lshr i32 %892, 24
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1008
  %1010 = sext i32 256 to i64
  %1011 = icmp slt i64 %1008, %1010
  %1012 = bitcast i64* %shadow to i32*
  %safe.215 = or i1 %268, %1011
  %select.ptr.216 = select i1 %safe.215, i32* %1009, i32* %1012
  %1013 = load i32, i32* %select.ptr.216, align 4
  %1014 = lshr i32 %930, 16
  %1015 = and i32 %1014, 255
  %1016 = zext i32 %1015 to i64
  %1017 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1016
  %1018 = sext i32 256 to i64
  %1019 = icmp slt i64 %1016, %1018
  %1020 = bitcast i64* %shadow to i32*
  %safe.217 = or i1 %267, %1019
  %select.ptr.218 = select i1 %safe.217, i32* %1017, i32* %1020
  %1021 = load i32, i32* %select.ptr.218, align 4
  %1022 = xor i32 %1013, %1021
  %1023 = lshr i32 %816, 8
  %1024 = and i32 %1023, 255
  %1025 = zext i32 %1024 to i64
  %1026 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1025
  %1027 = sext i32 256 to i64
  %1028 = icmp slt i64 %1025, %1027
  %1029 = bitcast i64* %shadow to i32*
  %safe.219 = or i1 %266, %1028
  %select.ptr.220 = select i1 %safe.219, i32* %1026, i32* %1029
  %1030 = load i32, i32* %select.ptr.220, align 4
  %1031 = xor i32 %1022, %1030
  %1032 = and i32 %854, 255
  %1033 = zext i32 %1032 to i64
  %1034 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1033
  %1035 = sext i32 256 to i64
  %1036 = icmp slt i64 %1033, %1035
  %1037 = bitcast i64* %shadow to i32*
  %safe.221 = or i1 %265, %1036
  %select.ptr.222 = select i1 %safe.221, i32* %1034, i32* %1037
  %1038 = load i32, i32* %select.ptr.222, align 4
  %1039 = xor i32 %1031, %1038
  %1040 = getelementptr inbounds i32, i32* %0, i64 22
  %1041 = icmp slt i64 22, %len.
  %1042 = bitcast i64* %shadow to i32*
  %safe.223 = or i1 %264, %1041
  %select.ptr.224 = select i1 %safe.223, i32* %1040, i32* %1042
  %1043 = load i32, i32* %select.ptr.224, align 4
  %1044 = xor i32 %1039, %1043
  %1045 = lshr i32 %930, 24
  %1046 = zext i32 %1045 to i64
  %1047 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1046
  %1048 = sext i32 256 to i64
  %1049 = icmp slt i64 %1046, %1048
  %1050 = bitcast i64* %shadow to i32*
  %safe.225 = or i1 %263, %1049
  %select.ptr.226 = select i1 %safe.225, i32* %1047, i32* %1050
  %1051 = load i32, i32* %select.ptr.226, align 4
  %1052 = lshr i32 %816, 16
  %1053 = and i32 %1052, 255
  %1054 = zext i32 %1053 to i64
  %1055 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1054
  %1056 = sext i32 256 to i64
  %1057 = icmp slt i64 %1054, %1056
  %1058 = bitcast i64* %shadow to i32*
  %safe.227 = or i1 %262, %1057
  %select.ptr.228 = select i1 %safe.227, i32* %1055, i32* %1058
  %1059 = load i32, i32* %select.ptr.228, align 4
  %1060 = xor i32 %1051, %1059
  %1061 = lshr i32 %854, 8
  %1062 = and i32 %1061, 255
  %1063 = zext i32 %1062 to i64
  %1064 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1063
  %1065 = sext i32 256 to i64
  %1066 = icmp slt i64 %1063, %1065
  %1067 = bitcast i64* %shadow to i32*
  %safe.229 = or i1 %261, %1066
  %select.ptr.230 = select i1 %safe.229, i32* %1064, i32* %1067
  %1068 = load i32, i32* %select.ptr.230, align 4
  %1069 = xor i32 %1060, %1068
  %1070 = and i32 %892, 255
  %1071 = zext i32 %1070 to i64
  %1072 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1071
  %1073 = sext i32 256 to i64
  %1074 = icmp slt i64 %1071, %1073
  %1075 = bitcast i64* %shadow to i32*
  %safe.231 = or i1 %260, %1074
  %select.ptr.232 = select i1 %safe.231, i32* %1072, i32* %1075
  %1076 = load i32, i32* %select.ptr.232, align 4
  %1077 = xor i32 %1069, %1076
  %1078 = getelementptr inbounds i32, i32* %0, i64 23
  %1079 = icmp slt i64 23, %len.
  %1080 = bitcast i64* %shadow to i32*
  %safe.233 = or i1 %259, %1079
  %select.ptr.234 = select i1 %safe.233, i32* %1078, i32* %1080
  %1081 = load i32, i32* %select.ptr.234, align 4
  %1082 = xor i32 %1077, %1081
  %1083 = lshr i32 %968, 24
  %1084 = zext i32 %1083 to i64
  %1085 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1084
  %1086 = sext i32 256 to i64
  %1087 = icmp slt i64 %1084, %1086
  %1088 = bitcast i64* %shadow to i32*
  %safe.235 = or i1 %258, %1087
  %select.ptr.236 = select i1 %safe.235, i32* %1085, i32* %1088
  %1089 = load i32, i32* %select.ptr.236, align 4
  %1090 = lshr i32 %1006, 16
  %1091 = and i32 %1090, 255
  %1092 = zext i32 %1091 to i64
  %1093 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1092
  %1094 = sext i32 256 to i64
  %1095 = icmp slt i64 %1092, %1094
  %1096 = bitcast i64* %shadow to i32*
  %safe.237 = or i1 %257, %1095
  %select.ptr.238 = select i1 %safe.237, i32* %1093, i32* %1096
  %1097 = load i32, i32* %select.ptr.238, align 4
  %1098 = xor i32 %1089, %1097
  %1099 = lshr i32 %1044, 8
  %1100 = and i32 %1099, 255
  %1101 = zext i32 %1100 to i64
  %1102 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1101
  %1103 = sext i32 256 to i64
  %1104 = icmp slt i64 %1101, %1103
  %1105 = bitcast i64* %shadow to i32*
  %safe.239 = or i1 %256, %1104
  %select.ptr.240 = select i1 %safe.239, i32* %1102, i32* %1105
  %1106 = load i32, i32* %select.ptr.240, align 4
  %1107 = xor i32 %1098, %1106
  %1108 = and i32 %1082, 255
  %1109 = zext i32 %1108 to i64
  %1110 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1109
  %1111 = sext i32 256 to i64
  %1112 = icmp slt i64 %1109, %1111
  %1113 = bitcast i64* %shadow to i32*
  %safe.241 = or i1 %255, %1112
  %select.ptr.242 = select i1 %safe.241, i32* %1110, i32* %1113
  %1114 = load i32, i32* %select.ptr.242, align 4
  %1115 = xor i32 %1107, %1114
  %1116 = getelementptr inbounds i32, i32* %0, i64 24
  %1117 = icmp slt i64 24, %len.
  %1118 = bitcast i64* %shadow to i32*
  %safe.243 = or i1 %254, %1117
  %select.ptr.244 = select i1 %safe.243, i32* %1116, i32* %1118
  %1119 = load i32, i32* %select.ptr.244, align 4
  %1120 = xor i32 %1115, %1119
  %1121 = lshr i32 %1006, 24
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1122
  %1124 = sext i32 256 to i64
  %1125 = icmp slt i64 %1122, %1124
  %1126 = bitcast i64* %shadow to i32*
  %safe.245 = or i1 %253, %1125
  %select.ptr.246 = select i1 %safe.245, i32* %1123, i32* %1126
  %1127 = load i32, i32* %select.ptr.246, align 4
  %1128 = lshr i32 %1044, 16
  %1129 = and i32 %1128, 255
  %1130 = zext i32 %1129 to i64
  %1131 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1130
  %1132 = sext i32 256 to i64
  %1133 = icmp slt i64 %1130, %1132
  %1134 = bitcast i64* %shadow to i32*
  %safe.247 = or i1 %252, %1133
  %select.ptr.248 = select i1 %safe.247, i32* %1131, i32* %1134
  %1135 = load i32, i32* %select.ptr.248, align 4
  %1136 = xor i32 %1127, %1135
  %1137 = lshr i32 %1082, 8
  %1138 = and i32 %1137, 255
  %1139 = zext i32 %1138 to i64
  %1140 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1139
  %1141 = sext i32 256 to i64
  %1142 = icmp slt i64 %1139, %1141
  %1143 = bitcast i64* %shadow to i32*
  %safe.249 = or i1 %251, %1142
  %select.ptr.250 = select i1 %safe.249, i32* %1140, i32* %1143
  %1144 = load i32, i32* %select.ptr.250, align 4
  %1145 = xor i32 %1136, %1144
  %1146 = and i32 %968, 255
  %1147 = zext i32 %1146 to i64
  %1148 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1147
  %1149 = sext i32 256 to i64
  %1150 = icmp slt i64 %1147, %1149
  %1151 = bitcast i64* %shadow to i32*
  %safe.251 = or i1 %250, %1150
  %select.ptr.252 = select i1 %safe.251, i32* %1148, i32* %1151
  %1152 = load i32, i32* %select.ptr.252, align 4
  %1153 = xor i32 %1145, %1152
  %1154 = getelementptr inbounds i32, i32* %0, i64 25
  %1155 = icmp slt i64 25, %len.
  %1156 = bitcast i64* %shadow to i32*
  %safe.253 = or i1 %249, %1155
  %select.ptr.254 = select i1 %safe.253, i32* %1154, i32* %1156
  %1157 = load i32, i32* %select.ptr.254, align 4
  %1158 = xor i32 %1153, %1157
  %1159 = lshr i32 %1044, 24
  %1160 = zext i32 %1159 to i64
  %1161 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1160
  %1162 = sext i32 256 to i64
  %1163 = icmp slt i64 %1160, %1162
  %1164 = bitcast i64* %shadow to i32*
  %safe.255 = or i1 %248, %1163
  %select.ptr.256 = select i1 %safe.255, i32* %1161, i32* %1164
  %1165 = load i32, i32* %select.ptr.256, align 4
  %1166 = lshr i32 %1082, 16
  %1167 = and i32 %1166, 255
  %1168 = zext i32 %1167 to i64
  %1169 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1168
  %1170 = sext i32 256 to i64
  %1171 = icmp slt i64 %1168, %1170
  %1172 = bitcast i64* %shadow to i32*
  %safe.257 = or i1 %247, %1171
  %select.ptr.258 = select i1 %safe.257, i32* %1169, i32* %1172
  %1173 = load i32, i32* %select.ptr.258, align 4
  %1174 = xor i32 %1165, %1173
  %1175 = lshr i32 %968, 8
  %1176 = and i32 %1175, 255
  %1177 = zext i32 %1176 to i64
  %1178 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1177
  %1179 = sext i32 256 to i64
  %1180 = icmp slt i64 %1177, %1179
  %1181 = bitcast i64* %shadow to i32*
  %safe.259 = or i1 %246, %1180
  %select.ptr.260 = select i1 %safe.259, i32* %1178, i32* %1181
  %1182 = load i32, i32* %select.ptr.260, align 4
  %1183 = xor i32 %1174, %1182
  %1184 = and i32 %1006, 255
  %1185 = zext i32 %1184 to i64
  %1186 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1185
  %1187 = sext i32 256 to i64
  %1188 = icmp slt i64 %1185, %1187
  %1189 = bitcast i64* %shadow to i32*
  %safe.261 = or i1 %245, %1188
  %select.ptr.262 = select i1 %safe.261, i32* %1186, i32* %1189
  %1190 = load i32, i32* %select.ptr.262, align 4
  %1191 = xor i32 %1183, %1190
  %1192 = getelementptr inbounds i32, i32* %0, i64 26
  %1193 = icmp slt i64 26, %len.
  %1194 = bitcast i64* %shadow to i32*
  %safe.263 = or i1 %244, %1193
  %select.ptr.264 = select i1 %safe.263, i32* %1192, i32* %1194
  %1195 = load i32, i32* %select.ptr.264, align 4
  %1196 = xor i32 %1191, %1195
  %1197 = lshr i32 %1082, 24
  %1198 = zext i32 %1197 to i64
  %1199 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1198
  %1200 = sext i32 256 to i64
  %1201 = icmp slt i64 %1198, %1200
  %1202 = bitcast i64* %shadow to i32*
  %safe.265 = or i1 %243, %1201
  %select.ptr.266 = select i1 %safe.265, i32* %1199, i32* %1202
  %1203 = load i32, i32* %select.ptr.266, align 4
  %1204 = lshr i32 %968, 16
  %1205 = and i32 %1204, 255
  %1206 = zext i32 %1205 to i64
  %1207 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1206
  %1208 = sext i32 256 to i64
  %1209 = icmp slt i64 %1206, %1208
  %1210 = bitcast i64* %shadow to i32*
  %safe.267 = or i1 %242, %1209
  %select.ptr.268 = select i1 %safe.267, i32* %1207, i32* %1210
  %1211 = load i32, i32* %select.ptr.268, align 4
  %1212 = xor i32 %1203, %1211
  %1213 = lshr i32 %1006, 8
  %1214 = and i32 %1213, 255
  %1215 = zext i32 %1214 to i64
  %1216 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1215
  %1217 = sext i32 256 to i64
  %1218 = icmp slt i64 %1215, %1217
  %1219 = bitcast i64* %shadow to i32*
  %safe.269 = or i1 %241, %1218
  %select.ptr.270 = select i1 %safe.269, i32* %1216, i32* %1219
  %1220 = load i32, i32* %select.ptr.270, align 4
  %1221 = xor i32 %1212, %1220
  %1222 = and i32 %1044, 255
  %1223 = zext i32 %1222 to i64
  %1224 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1223
  %1225 = sext i32 256 to i64
  %1226 = icmp slt i64 %1223, %1225
  %1227 = bitcast i64* %shadow to i32*
  %safe.271 = or i1 %240, %1226
  %select.ptr.272 = select i1 %safe.271, i32* %1224, i32* %1227
  %1228 = load i32, i32* %select.ptr.272, align 4
  %1229 = xor i32 %1221, %1228
  %1230 = getelementptr inbounds i32, i32* %0, i64 27
  %1231 = icmp slt i64 27, %len.
  %1232 = bitcast i64* %shadow to i32*
  %safe.273 = or i1 %239, %1231
  %select.ptr.274 = select i1 %safe.273, i32* %1230, i32* %1232
  %1233 = load i32, i32* %select.ptr.274, align 4
  %1234 = xor i32 %1229, %1233
  %1235 = lshr i32 %1120, 24
  %1236 = zext i32 %1235 to i64
  %1237 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1236
  %1238 = sext i32 256 to i64
  %1239 = icmp slt i64 %1236, %1238
  %1240 = bitcast i64* %shadow to i32*
  %safe.275 = or i1 %238, %1239
  %select.ptr.276 = select i1 %safe.275, i32* %1237, i32* %1240
  %1241 = load i32, i32* %select.ptr.276, align 4
  %1242 = lshr i32 %1158, 16
  %1243 = and i32 %1242, 255
  %1244 = zext i32 %1243 to i64
  %1245 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1244
  %1246 = sext i32 256 to i64
  %1247 = icmp slt i64 %1244, %1246
  %1248 = bitcast i64* %shadow to i32*
  %safe.277 = or i1 %237, %1247
  %select.ptr.278 = select i1 %safe.277, i32* %1245, i32* %1248
  %1249 = load i32, i32* %select.ptr.278, align 4
  %1250 = xor i32 %1241, %1249
  %1251 = lshr i32 %1196, 8
  %1252 = and i32 %1251, 255
  %1253 = zext i32 %1252 to i64
  %1254 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1253
  %1255 = sext i32 256 to i64
  %1256 = icmp slt i64 %1253, %1255
  %1257 = bitcast i64* %shadow to i32*
  %safe.279 = or i1 %236, %1256
  %select.ptr.280 = select i1 %safe.279, i32* %1254, i32* %1257
  %1258 = load i32, i32* %select.ptr.280, align 4
  %1259 = xor i32 %1250, %1258
  %1260 = and i32 %1234, 255
  %1261 = zext i32 %1260 to i64
  %1262 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1261
  %1263 = sext i32 256 to i64
  %1264 = icmp slt i64 %1261, %1263
  %1265 = bitcast i64* %shadow to i32*
  %safe.281 = or i1 %235, %1264
  %select.ptr.282 = select i1 %safe.281, i32* %1262, i32* %1265
  %1266 = load i32, i32* %select.ptr.282, align 4
  %1267 = xor i32 %1259, %1266
  %1268 = getelementptr inbounds i32, i32* %0, i64 28
  %1269 = icmp slt i64 28, %len.
  %1270 = bitcast i64* %shadow to i32*
  %safe.283 = or i1 %234, %1269
  %select.ptr.284 = select i1 %safe.283, i32* %1268, i32* %1270
  %1271 = load i32, i32* %select.ptr.284, align 4
  %1272 = xor i32 %1267, %1271
  %1273 = lshr i32 %1158, 24
  %1274 = zext i32 %1273 to i64
  %1275 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1274
  %1276 = sext i32 256 to i64
  %1277 = icmp slt i64 %1274, %1276
  %1278 = bitcast i64* %shadow to i32*
  %safe.285 = or i1 %233, %1277
  %select.ptr.286 = select i1 %safe.285, i32* %1275, i32* %1278
  %1279 = load i32, i32* %select.ptr.286, align 4
  %1280 = lshr i32 %1196, 16
  %1281 = and i32 %1280, 255
  %1282 = zext i32 %1281 to i64
  %1283 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1282
  %1284 = sext i32 256 to i64
  %1285 = icmp slt i64 %1282, %1284
  %1286 = bitcast i64* %shadow to i32*
  %safe.287 = or i1 %232, %1285
  %select.ptr.288 = select i1 %safe.287, i32* %1283, i32* %1286
  %1287 = load i32, i32* %select.ptr.288, align 4
  %1288 = xor i32 %1279, %1287
  %1289 = lshr i32 %1234, 8
  %1290 = and i32 %1289, 255
  %1291 = zext i32 %1290 to i64
  %1292 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1291
  %1293 = sext i32 256 to i64
  %1294 = icmp slt i64 %1291, %1293
  %1295 = bitcast i64* %shadow to i32*
  %safe.289 = or i1 %231, %1294
  %select.ptr.290 = select i1 %safe.289, i32* %1292, i32* %1295
  %1296 = load i32, i32* %select.ptr.290, align 4
  %1297 = xor i32 %1288, %1296
  %1298 = and i32 %1120, 255
  %1299 = zext i32 %1298 to i64
  %1300 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1299
  %1301 = sext i32 256 to i64
  %1302 = icmp slt i64 %1299, %1301
  %1303 = bitcast i64* %shadow to i32*
  %safe.291 = or i1 %230, %1302
  %select.ptr.292 = select i1 %safe.291, i32* %1300, i32* %1303
  %1304 = load i32, i32* %select.ptr.292, align 4
  %1305 = xor i32 %1297, %1304
  %1306 = getelementptr inbounds i32, i32* %0, i64 29
  %1307 = icmp slt i64 29, %len.
  %1308 = bitcast i64* %shadow to i32*
  %safe.293 = or i1 %229, %1307
  %select.ptr.294 = select i1 %safe.293, i32* %1306, i32* %1308
  %1309 = load i32, i32* %select.ptr.294, align 4
  %1310 = xor i32 %1305, %1309
  %1311 = lshr i32 %1196, 24
  %1312 = zext i32 %1311 to i64
  %1313 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1312
  %1314 = sext i32 256 to i64
  %1315 = icmp slt i64 %1312, %1314
  %1316 = bitcast i64* %shadow to i32*
  %safe.295 = or i1 %228, %1315
  %select.ptr.296 = select i1 %safe.295, i32* %1313, i32* %1316
  %1317 = load i32, i32* %select.ptr.296, align 4
  %1318 = lshr i32 %1234, 16
  %1319 = and i32 %1318, 255
  %1320 = zext i32 %1319 to i64
  %1321 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1320
  %1322 = sext i32 256 to i64
  %1323 = icmp slt i64 %1320, %1322
  %1324 = bitcast i64* %shadow to i32*
  %safe.297 = or i1 %227, %1323
  %select.ptr.298 = select i1 %safe.297, i32* %1321, i32* %1324
  %1325 = load i32, i32* %select.ptr.298, align 4
  %1326 = xor i32 %1317, %1325
  %1327 = lshr i32 %1120, 8
  %1328 = and i32 %1327, 255
  %1329 = zext i32 %1328 to i64
  %1330 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1329
  %1331 = sext i32 256 to i64
  %1332 = icmp slt i64 %1329, %1331
  %1333 = bitcast i64* %shadow to i32*
  %safe.299 = or i1 %226, %1332
  %select.ptr.300 = select i1 %safe.299, i32* %1330, i32* %1333
  %1334 = load i32, i32* %select.ptr.300, align 4
  %1335 = xor i32 %1326, %1334
  %1336 = and i32 %1158, 255
  %1337 = zext i32 %1336 to i64
  %1338 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1337
  %1339 = sext i32 256 to i64
  %1340 = icmp slt i64 %1337, %1339
  %1341 = bitcast i64* %shadow to i32*
  %safe.301 = or i1 %225, %1340
  %select.ptr.302 = select i1 %safe.301, i32* %1338, i32* %1341
  %1342 = load i32, i32* %select.ptr.302, align 4
  %1343 = xor i32 %1335, %1342
  %1344 = getelementptr inbounds i32, i32* %0, i64 30
  %1345 = icmp slt i64 30, %len.
  %1346 = bitcast i64* %shadow to i32*
  %safe.303 = or i1 %224, %1345
  %select.ptr.304 = select i1 %safe.303, i32* %1344, i32* %1346
  %1347 = load i32, i32* %select.ptr.304, align 4
  %1348 = xor i32 %1343, %1347
  %1349 = lshr i32 %1234, 24
  %1350 = zext i32 %1349 to i64
  %1351 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1350
  %1352 = sext i32 256 to i64
  %1353 = icmp slt i64 %1350, %1352
  %1354 = bitcast i64* %shadow to i32*
  %safe.305 = or i1 %223, %1353
  %select.ptr.306 = select i1 %safe.305, i32* %1351, i32* %1354
  %1355 = load i32, i32* %select.ptr.306, align 4
  %1356 = lshr i32 %1120, 16
  %1357 = and i32 %1356, 255
  %1358 = zext i32 %1357 to i64
  %1359 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1358
  %1360 = sext i32 256 to i64
  %1361 = icmp slt i64 %1358, %1360
  %1362 = bitcast i64* %shadow to i32*
  %safe.307 = or i1 %222, %1361
  %select.ptr.308 = select i1 %safe.307, i32* %1359, i32* %1362
  %1363 = load i32, i32* %select.ptr.308, align 4
  %1364 = xor i32 %1355, %1363
  %1365 = lshr i32 %1158, 8
  %1366 = and i32 %1365, 255
  %1367 = zext i32 %1366 to i64
  %1368 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1367
  %1369 = sext i32 256 to i64
  %1370 = icmp slt i64 %1367, %1369
  %1371 = bitcast i64* %shadow to i32*
  %safe.309 = or i1 %221, %1370
  %select.ptr.310 = select i1 %safe.309, i32* %1368, i32* %1371
  %1372 = load i32, i32* %select.ptr.310, align 4
  %1373 = xor i32 %1364, %1372
  %1374 = and i32 %1196, 255
  %1375 = zext i32 %1374 to i64
  %1376 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1375
  %1377 = sext i32 256 to i64
  %1378 = icmp slt i64 %1375, %1377
  %1379 = bitcast i64* %shadow to i32*
  %safe.311 = or i1 %220, %1378
  %select.ptr.312 = select i1 %safe.311, i32* %1376, i32* %1379
  %1380 = load i32, i32* %select.ptr.312, align 4
  %1381 = xor i32 %1373, %1380
  %1382 = getelementptr inbounds i32, i32* %0, i64 31
  %1383 = icmp slt i64 31, %len.
  %1384 = bitcast i64* %shadow to i32*
  %safe.313 = or i1 %219, %1383
  %select.ptr.314 = select i1 %safe.313, i32* %1382, i32* %1384
  %1385 = load i32, i32* %select.ptr.314, align 4
  %1386 = xor i32 %1381, %1385
  %1387 = lshr i32 %1272, 24
  %1388 = zext i32 %1387 to i64
  %1389 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1388
  %1390 = sext i32 256 to i64
  %1391 = icmp slt i64 %1388, %1390
  %1392 = bitcast i64* %shadow to i32*
  %safe.315 = or i1 %218, %1391
  %select.ptr.316 = select i1 %safe.315, i32* %1389, i32* %1392
  %1393 = load i32, i32* %select.ptr.316, align 4
  %1394 = lshr i32 %1310, 16
  %1395 = and i32 %1394, 255
  %1396 = zext i32 %1395 to i64
  %1397 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1396
  %1398 = sext i32 256 to i64
  %1399 = icmp slt i64 %1396, %1398
  %1400 = bitcast i64* %shadow to i32*
  %safe.317 = or i1 %217, %1399
  %select.ptr.318 = select i1 %safe.317, i32* %1397, i32* %1400
  %1401 = load i32, i32* %select.ptr.318, align 4
  %1402 = xor i32 %1393, %1401
  %1403 = lshr i32 %1348, 8
  %1404 = and i32 %1403, 255
  %1405 = zext i32 %1404 to i64
  %1406 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1405
  %1407 = sext i32 256 to i64
  %1408 = icmp slt i64 %1405, %1407
  %1409 = bitcast i64* %shadow to i32*
  %safe.319 = or i1 %216, %1408
  %select.ptr.320 = select i1 %safe.319, i32* %1406, i32* %1409
  %1410 = load i32, i32* %select.ptr.320, align 4
  %1411 = xor i32 %1402, %1410
  %1412 = and i32 %1386, 255
  %1413 = zext i32 %1412 to i64
  %1414 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1413
  %1415 = sext i32 256 to i64
  %1416 = icmp slt i64 %1413, %1415
  %1417 = bitcast i64* %shadow to i32*
  %safe.321 = or i1 %215, %1416
  %select.ptr.322 = select i1 %safe.321, i32* %1414, i32* %1417
  %1418 = load i32, i32* %select.ptr.322, align 4
  %1419 = xor i32 %1411, %1418
  %1420 = getelementptr inbounds i32, i32* %0, i64 32
  %1421 = icmp slt i64 32, %len.
  %1422 = bitcast i64* %shadow to i32*
  %safe.323 = or i1 %214, %1421
  %select.ptr.324 = select i1 %safe.323, i32* %1420, i32* %1422
  %1423 = load i32, i32* %select.ptr.324, align 4
  %1424 = xor i32 %1419, %1423
  %1425 = lshr i32 %1310, 24
  %1426 = zext i32 %1425 to i64
  %1427 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1426
  %1428 = sext i32 256 to i64
  %1429 = icmp slt i64 %1426, %1428
  %1430 = bitcast i64* %shadow to i32*
  %safe.325 = or i1 %213, %1429
  %select.ptr.326 = select i1 %safe.325, i32* %1427, i32* %1430
  %1431 = load i32, i32* %select.ptr.326, align 4
  %1432 = lshr i32 %1348, 16
  %1433 = and i32 %1432, 255
  %1434 = zext i32 %1433 to i64
  %1435 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1434
  %1436 = sext i32 256 to i64
  %1437 = icmp slt i64 %1434, %1436
  %1438 = bitcast i64* %shadow to i32*
  %safe.327 = or i1 %212, %1437
  %select.ptr.328 = select i1 %safe.327, i32* %1435, i32* %1438
  %1439 = load i32, i32* %select.ptr.328, align 4
  %1440 = xor i32 %1431, %1439
  %1441 = lshr i32 %1386, 8
  %1442 = and i32 %1441, 255
  %1443 = zext i32 %1442 to i64
  %1444 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1443
  %1445 = sext i32 256 to i64
  %1446 = icmp slt i64 %1443, %1445
  %1447 = bitcast i64* %shadow to i32*
  %safe.329 = or i1 %211, %1446
  %select.ptr.330 = select i1 %safe.329, i32* %1444, i32* %1447
  %1448 = load i32, i32* %select.ptr.330, align 4
  %1449 = xor i32 %1440, %1448
  %1450 = and i32 %1272, 255
  %1451 = zext i32 %1450 to i64
  %1452 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1451
  %1453 = sext i32 256 to i64
  %1454 = icmp slt i64 %1451, %1453
  %1455 = bitcast i64* %shadow to i32*
  %safe.331 = or i1 %210, %1454
  %select.ptr.332 = select i1 %safe.331, i32* %1452, i32* %1455
  %1456 = load i32, i32* %select.ptr.332, align 4
  %1457 = xor i32 %1449, %1456
  %1458 = getelementptr inbounds i32, i32* %0, i64 33
  %1459 = icmp slt i64 33, %len.
  %1460 = bitcast i64* %shadow to i32*
  %safe.333 = or i1 %209, %1459
  %select.ptr.334 = select i1 %safe.333, i32* %1458, i32* %1460
  %1461 = load i32, i32* %select.ptr.334, align 4
  %1462 = xor i32 %1457, %1461
  %1463 = lshr i32 %1348, 24
  %1464 = zext i32 %1463 to i64
  %1465 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1464
  %1466 = sext i32 256 to i64
  %1467 = icmp slt i64 %1464, %1466
  %1468 = bitcast i64* %shadow to i32*
  %safe.335 = or i1 %208, %1467
  %select.ptr.336 = select i1 %safe.335, i32* %1465, i32* %1468
  %1469 = load i32, i32* %select.ptr.336, align 4
  %1470 = lshr i32 %1386, 16
  %1471 = and i32 %1470, 255
  %1472 = zext i32 %1471 to i64
  %1473 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1472
  %1474 = sext i32 256 to i64
  %1475 = icmp slt i64 %1472, %1474
  %1476 = bitcast i64* %shadow to i32*
  %safe.337 = or i1 %207, %1475
  %select.ptr.338 = select i1 %safe.337, i32* %1473, i32* %1476
  %1477 = load i32, i32* %select.ptr.338, align 4
  %1478 = xor i32 %1469, %1477
  %1479 = lshr i32 %1272, 8
  %1480 = and i32 %1479, 255
  %1481 = zext i32 %1480 to i64
  %1482 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1481
  %1483 = sext i32 256 to i64
  %1484 = icmp slt i64 %1481, %1483
  %1485 = bitcast i64* %shadow to i32*
  %safe.339 = or i1 %206, %1484
  %select.ptr.340 = select i1 %safe.339, i32* %1482, i32* %1485
  %1486 = load i32, i32* %select.ptr.340, align 4
  %1487 = xor i32 %1478, %1486
  %1488 = and i32 %1310, 255
  %1489 = zext i32 %1488 to i64
  %1490 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1489
  %1491 = sext i32 256 to i64
  %1492 = icmp slt i64 %1489, %1491
  %1493 = bitcast i64* %shadow to i32*
  %safe.341 = or i1 %205, %1492
  %select.ptr.342 = select i1 %safe.341, i32* %1490, i32* %1493
  %1494 = load i32, i32* %select.ptr.342, align 4
  %1495 = xor i32 %1487, %1494
  %1496 = getelementptr inbounds i32, i32* %0, i64 34
  %1497 = icmp slt i64 34, %len.
  %1498 = bitcast i64* %shadow to i32*
  %safe.343 = or i1 %204, %1497
  %select.ptr.344 = select i1 %safe.343, i32* %1496, i32* %1498
  %1499 = load i32, i32* %select.ptr.344, align 4
  %1500 = xor i32 %1495, %1499
  %1501 = lshr i32 %1386, 24
  %1502 = zext i32 %1501 to i64
  %1503 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1502
  %1504 = sext i32 256 to i64
  %1505 = icmp slt i64 %1502, %1504
  %1506 = bitcast i64* %shadow to i32*
  %safe.345 = or i1 %203, %1505
  %select.ptr.346 = select i1 %safe.345, i32* %1503, i32* %1506
  %1507 = load i32, i32* %select.ptr.346, align 4
  %1508 = lshr i32 %1272, 16
  %1509 = and i32 %1508, 255
  %1510 = zext i32 %1509 to i64
  %1511 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1510
  %1512 = sext i32 256 to i64
  %1513 = icmp slt i64 %1510, %1512
  %1514 = bitcast i64* %shadow to i32*
  %safe.347 = or i1 %202, %1513
  %select.ptr.348 = select i1 %safe.347, i32* %1511, i32* %1514
  %1515 = load i32, i32* %select.ptr.348, align 4
  %1516 = xor i32 %1507, %1515
  %1517 = lshr i32 %1310, 8
  %1518 = and i32 %1517, 255
  %1519 = zext i32 %1518 to i64
  %1520 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1519
  %1521 = sext i32 256 to i64
  %1522 = icmp slt i64 %1519, %1521
  %1523 = bitcast i64* %shadow to i32*
  %safe.349 = or i1 %201, %1522
  %select.ptr.350 = select i1 %safe.349, i32* %1520, i32* %1523
  %1524 = load i32, i32* %select.ptr.350, align 4
  %1525 = xor i32 %1516, %1524
  %1526 = and i32 %1348, 255
  %1527 = zext i32 %1526 to i64
  %1528 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1527
  %1529 = sext i32 256 to i64
  %1530 = icmp slt i64 %1527, %1529
  %1531 = bitcast i64* %shadow to i32*
  %safe.351 = or i1 %200, %1530
  %select.ptr.352 = select i1 %safe.351, i32* %1528, i32* %1531
  %1532 = load i32, i32* %select.ptr.352, align 4
  %1533 = xor i32 %1525, %1532
  %1534 = getelementptr inbounds i32, i32* %0, i64 35
  %1535 = icmp slt i64 35, %len.
  %1536 = bitcast i64* %shadow to i32*
  %safe.353 = or i1 %199, %1535
  %select.ptr.354 = select i1 %safe.353, i32* %1534, i32* %1536
  %1537 = load i32, i32* %select.ptr.354, align 4
  %1538 = xor i32 %1533, %1537
  %1539 = lshr i32 %1424, 24
  %1540 = zext i32 %1539 to i64
  %1541 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1540
  %1542 = sext i32 256 to i64
  %1543 = icmp slt i64 %1540, %1542
  %1544 = bitcast i64* %shadow to i32*
  %safe.355 = or i1 %198, %1543
  %select.ptr.356 = select i1 %safe.355, i32* %1541, i32* %1544
  %1545 = load i32, i32* %select.ptr.356, align 4
  %1546 = lshr i32 %1462, 16
  %1547 = and i32 %1546, 255
  %1548 = zext i32 %1547 to i64
  %1549 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1548
  %1550 = sext i32 256 to i64
  %1551 = icmp slt i64 %1548, %1550
  %1552 = bitcast i64* %shadow to i32*
  %safe.357 = or i1 %197, %1551
  %select.ptr.358 = select i1 %safe.357, i32* %1549, i32* %1552
  %1553 = load i32, i32* %select.ptr.358, align 4
  %1554 = xor i32 %1545, %1553
  %1555 = lshr i32 %1500, 8
  %1556 = and i32 %1555, 255
  %1557 = zext i32 %1556 to i64
  %1558 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1557
  %1559 = sext i32 256 to i64
  %1560 = icmp slt i64 %1557, %1559
  %1561 = bitcast i64* %shadow to i32*
  %safe.359 = or i1 %196, %1560
  %select.ptr.360 = select i1 %safe.359, i32* %1558, i32* %1561
  %1562 = load i32, i32* %select.ptr.360, align 4
  %1563 = xor i32 %1554, %1562
  %1564 = and i32 %1538, 255
  %1565 = zext i32 %1564 to i64
  %1566 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1565
  %1567 = sext i32 256 to i64
  %1568 = icmp slt i64 %1565, %1567
  %1569 = bitcast i64* %shadow to i32*
  %safe.361 = or i1 %195, %1568
  %select.ptr.362 = select i1 %safe.361, i32* %1566, i32* %1569
  %1570 = load i32, i32* %select.ptr.362, align 4
  %1571 = xor i32 %1563, %1570
  %1572 = getelementptr inbounds i32, i32* %0, i64 36
  %1573 = icmp slt i64 36, %len.
  %1574 = bitcast i64* %shadow to i32*
  %safe.363 = or i1 %194, %1573
  %select.ptr.364 = select i1 %safe.363, i32* %1572, i32* %1574
  %1575 = load i32, i32* %select.ptr.364, align 4
  %1576 = xor i32 %1571, %1575
  %1577 = lshr i32 %1462, 24
  %1578 = zext i32 %1577 to i64
  %1579 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1578
  %1580 = sext i32 256 to i64
  %1581 = icmp slt i64 %1578, %1580
  %1582 = bitcast i64* %shadow to i32*
  %safe.365 = or i1 %193, %1581
  %select.ptr.366 = select i1 %safe.365, i32* %1579, i32* %1582
  %1583 = load i32, i32* %select.ptr.366, align 4
  %1584 = lshr i32 %1500, 16
  %1585 = and i32 %1584, 255
  %1586 = zext i32 %1585 to i64
  %1587 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1586
  %1588 = sext i32 256 to i64
  %1589 = icmp slt i64 %1586, %1588
  %1590 = bitcast i64* %shadow to i32*
  %safe.367 = or i1 %192, %1589
  %select.ptr.368 = select i1 %safe.367, i32* %1587, i32* %1590
  %1591 = load i32, i32* %select.ptr.368, align 4
  %1592 = xor i32 %1583, %1591
  %1593 = lshr i32 %1538, 8
  %1594 = and i32 %1593, 255
  %1595 = zext i32 %1594 to i64
  %1596 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1595
  %1597 = sext i32 256 to i64
  %1598 = icmp slt i64 %1595, %1597
  %1599 = bitcast i64* %shadow to i32*
  %safe.369 = or i1 %191, %1598
  %select.ptr.370 = select i1 %safe.369, i32* %1596, i32* %1599
  %1600 = load i32, i32* %select.ptr.370, align 4
  %1601 = xor i32 %1592, %1600
  %1602 = and i32 %1424, 255
  %1603 = zext i32 %1602 to i64
  %1604 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1603
  %1605 = sext i32 256 to i64
  %1606 = icmp slt i64 %1603, %1605
  %1607 = bitcast i64* %shadow to i32*
  %safe.371 = or i1 %190, %1606
  %select.ptr.372 = select i1 %safe.371, i32* %1604, i32* %1607
  %1608 = load i32, i32* %select.ptr.372, align 4
  %1609 = xor i32 %1601, %1608
  %1610 = getelementptr inbounds i32, i32* %0, i64 37
  %1611 = icmp slt i64 37, %len.
  %1612 = bitcast i64* %shadow to i32*
  %safe.373 = or i1 %189, %1611
  %select.ptr.374 = select i1 %safe.373, i32* %1610, i32* %1612
  %1613 = load i32, i32* %select.ptr.374, align 4
  %1614 = xor i32 %1609, %1613
  %1615 = lshr i32 %1500, 24
  %1616 = zext i32 %1615 to i64
  %1617 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1616
  %1618 = sext i32 256 to i64
  %1619 = icmp slt i64 %1616, %1618
  %1620 = bitcast i64* %shadow to i32*
  %safe.375 = or i1 %188, %1619
  %select.ptr.376 = select i1 %safe.375, i32* %1617, i32* %1620
  %1621 = load i32, i32* %select.ptr.376, align 4
  %1622 = lshr i32 %1538, 16
  %1623 = and i32 %1622, 255
  %1624 = zext i32 %1623 to i64
  %1625 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1624
  %1626 = sext i32 256 to i64
  %1627 = icmp slt i64 %1624, %1626
  %1628 = bitcast i64* %shadow to i32*
  %safe.377 = or i1 %187, %1627
  %select.ptr.378 = select i1 %safe.377, i32* %1625, i32* %1628
  %1629 = load i32, i32* %select.ptr.378, align 4
  %1630 = xor i32 %1621, %1629
  %1631 = lshr i32 %1424, 8
  %1632 = and i32 %1631, 255
  %1633 = zext i32 %1632 to i64
  %1634 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1633
  %1635 = sext i32 256 to i64
  %1636 = icmp slt i64 %1633, %1635
  %1637 = bitcast i64* %shadow to i32*
  %safe.379 = or i1 %186, %1636
  %select.ptr.380 = select i1 %safe.379, i32* %1634, i32* %1637
  %1638 = load i32, i32* %select.ptr.380, align 4
  %1639 = xor i32 %1630, %1638
  %1640 = and i32 %1462, 255
  %1641 = zext i32 %1640 to i64
  %1642 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1641
  %1643 = sext i32 256 to i64
  %1644 = icmp slt i64 %1641, %1643
  %1645 = bitcast i64* %shadow to i32*
  %safe.381 = or i1 %185, %1644
  %select.ptr.382 = select i1 %safe.381, i32* %1642, i32* %1645
  %1646 = load i32, i32* %select.ptr.382, align 4
  %1647 = xor i32 %1639, %1646
  %1648 = getelementptr inbounds i32, i32* %0, i64 38
  %1649 = icmp slt i64 38, %len.
  %1650 = bitcast i64* %shadow to i32*
  %safe.383 = or i1 %184, %1649
  %select.ptr.384 = select i1 %safe.383, i32* %1648, i32* %1650
  %1651 = load i32, i32* %select.ptr.384, align 4
  %1652 = xor i32 %1647, %1651
  %1653 = lshr i32 %1538, 24
  %1654 = zext i32 %1653 to i64
  %1655 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1654
  %1656 = sext i32 256 to i64
  %1657 = icmp slt i64 %1654, %1656
  %1658 = bitcast i64* %shadow to i32*
  %safe.385 = or i1 %183, %1657
  %select.ptr.386 = select i1 %safe.385, i32* %1655, i32* %1658
  %1659 = load i32, i32* %select.ptr.386, align 4
  %1660 = lshr i32 %1424, 16
  %1661 = and i32 %1660, 255
  %1662 = zext i32 %1661 to i64
  %1663 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1662
  %1664 = sext i32 256 to i64
  %1665 = icmp slt i64 %1662, %1664
  %1666 = bitcast i64* %shadow to i32*
  %safe.387 = or i1 %182, %1665
  %select.ptr.388 = select i1 %safe.387, i32* %1663, i32* %1666
  %1667 = load i32, i32* %select.ptr.388, align 4
  %1668 = xor i32 %1659, %1667
  %1669 = lshr i32 %1462, 8
  %1670 = and i32 %1669, 255
  %1671 = zext i32 %1670 to i64
  %1672 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1671
  %1673 = sext i32 256 to i64
  %1674 = icmp slt i64 %1671, %1673
  %1675 = bitcast i64* %shadow to i32*
  %safe.389 = or i1 %181, %1674
  %select.ptr.390 = select i1 %safe.389, i32* %1672, i32* %1675
  %1676 = load i32, i32* %select.ptr.390, align 4
  %1677 = xor i32 %1668, %1676
  %1678 = and i32 %1500, 255
  %1679 = zext i32 %1678 to i64
  %1680 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1679
  %1681 = sext i32 256 to i64
  %1682 = icmp slt i64 %1679, %1681
  %1683 = bitcast i64* %shadow to i32*
  %safe.391 = or i1 %180, %1682
  %select.ptr.392 = select i1 %safe.391, i32* %1680, i32* %1683
  %1684 = load i32, i32* %select.ptr.392, align 4
  %1685 = xor i32 %1677, %1684
  %1686 = getelementptr inbounds i32, i32* %0, i64 39
  %1687 = icmp slt i64 39, %len.
  %1688 = bitcast i64* %shadow to i32*
  %safe.393 = or i1 %179, %1687
  %select.ptr.394 = select i1 %safe.393, i32* %1686, i32* %1688
  %1689 = load i32, i32* %select.ptr.394, align 4
  %1690 = xor i32 %1685, %1689
  %1691 = icmp sgt i32 %1, 10
  %1692 = or i1 %in.24, %178
  store i1 %1692, i1* %out.14
  %1693 = load i1, i1* %out.14
  %in.25 = and i1 %1693, %1691
  %1694 = lshr i32 %1576, 24
  %1695 = zext i32 %1694 to i64
  %1696 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1695
  %1697 = sext i32 256 to i64
  %1698 = icmp slt i64 %1695, %1697
  %1699 = bitcast i64* %shadow to i32*
  %safe.396 = or i1 %in.25, %1698
  %select.ptr.397 = select i1 %safe.396, i32* %1696, i32* %1699
  %1700 = load i32, i32* %select.ptr.397, align 4
  %1701 = lshr i32 %1614, 16
  %1702 = and i32 %1701, 255
  %1703 = zext i32 %1702 to i64
  %1704 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1703
  %1705 = sext i32 256 to i64
  %1706 = icmp slt i64 %1703, %1705
  %1707 = bitcast i64* %shadow to i32*
  %safe.398 = or i1 %in.25, %1706
  %select.ptr.399 = select i1 %safe.398, i32* %1704, i32* %1707
  %1708 = load i32, i32* %select.ptr.399, align 4
  %1709 = xor i32 %1700, %1708
  %1710 = lshr i32 %1652, 8
  %1711 = and i32 %1710, 255
  %1712 = zext i32 %1711 to i64
  %1713 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1712
  %1714 = sext i32 256 to i64
  %1715 = icmp slt i64 %1712, %1714
  %1716 = bitcast i64* %shadow to i32*
  %safe.400 = or i1 %in.25, %1715
  %select.ptr.401 = select i1 %safe.400, i32* %1713, i32* %1716
  %1717 = load i32, i32* %select.ptr.401, align 4
  %1718 = xor i32 %1709, %1717
  %1719 = and i32 %1690, 255
  %1720 = zext i32 %1719 to i64
  %1721 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1720
  %1722 = sext i32 256 to i64
  %1723 = icmp slt i64 %1720, %1722
  %1724 = bitcast i64* %shadow to i32*
  %safe.402 = or i1 %in.25, %1723
  %select.ptr.403 = select i1 %safe.402, i32* %1721, i32* %1724
  %1725 = load i32, i32* %select.ptr.403, align 4
  %1726 = xor i32 %1718, %1725
  %1727 = getelementptr inbounds i32, i32* %0, i64 40
  %1728 = icmp slt i64 40, %len.
  %1729 = bitcast i64* %shadow to i32*
  %safe.404 = or i1 %in.25, %1728
  %select.ptr.405 = select i1 %safe.404, i32* %1727, i32* %1729
  %1730 = load i32, i32* %select.ptr.405, align 4
  %1731 = xor i32 %1726, %1730
  %1732 = lshr i32 %1614, 24
  %1733 = zext i32 %1732 to i64
  %1734 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1733
  %1735 = sext i32 256 to i64
  %1736 = icmp slt i64 %1733, %1735
  %1737 = bitcast i64* %shadow to i32*
  %safe.406 = or i1 %in.25, %1736
  %select.ptr.407 = select i1 %safe.406, i32* %1734, i32* %1737
  %1738 = load i32, i32* %select.ptr.407, align 4
  %1739 = lshr i32 %1652, 16
  %1740 = and i32 %1739, 255
  %1741 = zext i32 %1740 to i64
  %1742 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1741
  %1743 = sext i32 256 to i64
  %1744 = icmp slt i64 %1741, %1743
  %1745 = bitcast i64* %shadow to i32*
  %safe.408 = or i1 %in.25, %1744
  %select.ptr.409 = select i1 %safe.408, i32* %1742, i32* %1745
  %1746 = load i32, i32* %select.ptr.409, align 4
  %1747 = xor i32 %1738, %1746
  %1748 = lshr i32 %1690, 8
  %1749 = and i32 %1748, 255
  %1750 = zext i32 %1749 to i64
  %1751 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1750
  %1752 = sext i32 256 to i64
  %1753 = icmp slt i64 %1750, %1752
  %1754 = bitcast i64* %shadow to i32*
  %safe.410 = or i1 %in.25, %1753
  %select.ptr.411 = select i1 %safe.410, i32* %1751, i32* %1754
  %1755 = load i32, i32* %select.ptr.411, align 4
  %1756 = xor i32 %1747, %1755
  %1757 = and i32 %1576, 255
  %1758 = zext i32 %1757 to i64
  %1759 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1758
  %1760 = sext i32 256 to i64
  %1761 = icmp slt i64 %1758, %1760
  %1762 = bitcast i64* %shadow to i32*
  %safe.412 = or i1 %in.25, %1761
  %select.ptr.413 = select i1 %safe.412, i32* %1759, i32* %1762
  %1763 = load i32, i32* %select.ptr.413, align 4
  %1764 = xor i32 %1756, %1763
  %1765 = getelementptr inbounds i32, i32* %0, i64 41
  %1766 = icmp slt i64 41, %len.
  %1767 = bitcast i64* %shadow to i32*
  %safe.414 = or i1 %in.25, %1766
  %select.ptr.415 = select i1 %safe.414, i32* %1765, i32* %1767
  %1768 = load i32, i32* %select.ptr.415, align 4
  %1769 = xor i32 %1764, %1768
  %1770 = lshr i32 %1652, 24
  %1771 = zext i32 %1770 to i64
  %1772 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1771
  %1773 = sext i32 256 to i64
  %1774 = icmp slt i64 %1771, %1773
  %1775 = bitcast i64* %shadow to i32*
  %safe.416 = or i1 %in.25, %1774
  %select.ptr.417 = select i1 %safe.416, i32* %1772, i32* %1775
  %1776 = load i32, i32* %select.ptr.417, align 4
  %1777 = lshr i32 %1690, 16
  %1778 = and i32 %1777, 255
  %1779 = zext i32 %1778 to i64
  %1780 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1779
  %1781 = sext i32 256 to i64
  %1782 = icmp slt i64 %1779, %1781
  %1783 = bitcast i64* %shadow to i32*
  %safe.418 = or i1 %in.25, %1782
  %select.ptr.419 = select i1 %safe.418, i32* %1780, i32* %1783
  %1784 = load i32, i32* %select.ptr.419, align 4
  %1785 = xor i32 %1776, %1784
  %1786 = lshr i32 %1576, 8
  %1787 = and i32 %1786, 255
  %1788 = zext i32 %1787 to i64
  %1789 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1788
  %1790 = sext i32 256 to i64
  %1791 = icmp slt i64 %1788, %1790
  %1792 = bitcast i64* %shadow to i32*
  %safe.420 = or i1 %in.25, %1791
  %select.ptr.421 = select i1 %safe.420, i32* %1789, i32* %1792
  %1793 = load i32, i32* %select.ptr.421, align 4
  %1794 = xor i32 %1785, %1793
  %1795 = and i32 %1614, 255
  %1796 = zext i32 %1795 to i64
  %1797 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1796
  %1798 = sext i32 256 to i64
  %1799 = icmp slt i64 %1796, %1798
  %1800 = bitcast i64* %shadow to i32*
  %safe.422 = or i1 %in.25, %1799
  %select.ptr.423 = select i1 %safe.422, i32* %1797, i32* %1800
  %1801 = load i32, i32* %select.ptr.423, align 4
  %1802 = xor i32 %1794, %1801
  %1803 = getelementptr inbounds i32, i32* %0, i64 42
  %1804 = icmp slt i64 42, %len.
  %1805 = bitcast i64* %shadow to i32*
  %safe.424 = or i1 %in.25, %1804
  %select.ptr.425 = select i1 %safe.424, i32* %1803, i32* %1805
  %1806 = load i32, i32* %select.ptr.425, align 4
  %1807 = xor i32 %1802, %1806
  %1808 = lshr i32 %1690, 24
  %1809 = zext i32 %1808 to i64
  %1810 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1809
  %1811 = sext i32 256 to i64
  %1812 = icmp slt i64 %1809, %1811
  %1813 = bitcast i64* %shadow to i32*
  %safe.426 = or i1 %in.25, %1812
  %select.ptr.427 = select i1 %safe.426, i32* %1810, i32* %1813
  %1814 = load i32, i32* %select.ptr.427, align 4
  %1815 = lshr i32 %1576, 16
  %1816 = and i32 %1815, 255
  %1817 = zext i32 %1816 to i64
  %1818 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1817
  %1819 = sext i32 256 to i64
  %1820 = icmp slt i64 %1817, %1819
  %1821 = bitcast i64* %shadow to i32*
  %safe.428 = or i1 %in.25, %1820
  %select.ptr.429 = select i1 %safe.428, i32* %1818, i32* %1821
  %1822 = load i32, i32* %select.ptr.429, align 4
  %1823 = xor i32 %1814, %1822
  %1824 = lshr i32 %1614, 8
  %1825 = and i32 %1824, 255
  %1826 = zext i32 %1825 to i64
  %1827 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1826
  %1828 = sext i32 256 to i64
  %1829 = icmp slt i64 %1826, %1828
  %1830 = bitcast i64* %shadow to i32*
  %safe.430 = or i1 %in.25, %1829
  %select.ptr.431 = select i1 %safe.430, i32* %1827, i32* %1830
  %1831 = load i32, i32* %select.ptr.431, align 4
  %1832 = xor i32 %1823, %1831
  %1833 = and i32 %1652, 255
  %1834 = zext i32 %1833 to i64
  %1835 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1834
  %1836 = sext i32 256 to i64
  %1837 = icmp slt i64 %1834, %1836
  %1838 = bitcast i64* %shadow to i32*
  %safe.432 = or i1 %in.25, %1837
  %select.ptr.433 = select i1 %safe.432, i32* %1835, i32* %1838
  %1839 = load i32, i32* %select.ptr.433, align 4
  %1840 = xor i32 %1832, %1839
  %1841 = getelementptr inbounds i32, i32* %0, i64 43
  %1842 = icmp slt i64 43, %len.
  %1843 = bitcast i64* %shadow to i32*
  %safe.434 = or i1 %in.25, %1842
  %select.ptr.435 = select i1 %safe.434, i32* %1841, i32* %1843
  %1844 = load i32, i32* %select.ptr.435, align 4
  %1845 = xor i32 %1840, %1844
  %1846 = lshr i32 %1731, 24
  %1847 = zext i32 %1846 to i64
  %1848 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1847
  %1849 = sext i32 256 to i64
  %1850 = icmp slt i64 %1847, %1849
  %1851 = bitcast i64* %shadow to i32*
  %safe.436 = or i1 %in.25, %1850
  %select.ptr.437 = select i1 %safe.436, i32* %1848, i32* %1851
  %1852 = load i32, i32* %select.ptr.437, align 4
  %1853 = lshr i32 %1769, 16
  %1854 = and i32 %1853, 255
  %1855 = zext i32 %1854 to i64
  %1856 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1855
  %1857 = sext i32 256 to i64
  %1858 = icmp slt i64 %1855, %1857
  %1859 = bitcast i64* %shadow to i32*
  %safe.438 = or i1 %in.25, %1858
  %select.ptr.439 = select i1 %safe.438, i32* %1856, i32* %1859
  %1860 = load i32, i32* %select.ptr.439, align 4
  %1861 = xor i32 %1852, %1860
  %1862 = lshr i32 %1807, 8
  %1863 = and i32 %1862, 255
  %1864 = zext i32 %1863 to i64
  %1865 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1864
  %1866 = sext i32 256 to i64
  %1867 = icmp slt i64 %1864, %1866
  %1868 = bitcast i64* %shadow to i32*
  %safe.440 = or i1 %in.25, %1867
  %select.ptr.441 = select i1 %safe.440, i32* %1865, i32* %1868
  %1869 = load i32, i32* %select.ptr.441, align 4
  %1870 = xor i32 %1861, %1869
  %1871 = and i32 %1845, 255
  %1872 = zext i32 %1871 to i64
  %1873 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1872
  %1874 = sext i32 256 to i64
  %1875 = icmp slt i64 %1872, %1874
  %1876 = bitcast i64* %shadow to i32*
  %safe.442 = or i1 %in.25, %1875
  %select.ptr.443 = select i1 %safe.442, i32* %1873, i32* %1876
  %1877 = load i32, i32* %select.ptr.443, align 4
  %1878 = xor i32 %1870, %1877
  %1879 = getelementptr inbounds i32, i32* %0, i64 44
  %1880 = icmp slt i64 44, %len.
  %1881 = bitcast i64* %shadow to i32*
  %safe.444 = or i1 %in.25, %1880
  %select.ptr.445 = select i1 %safe.444, i32* %1879, i32* %1881
  %1882 = load i32, i32* %select.ptr.445, align 4
  %1883 = xor i32 %1878, %1882
  %1884 = lshr i32 %1769, 24
  %1885 = zext i32 %1884 to i64
  %1886 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1885
  %1887 = sext i32 256 to i64
  %1888 = icmp slt i64 %1885, %1887
  %1889 = bitcast i64* %shadow to i32*
  %safe.446 = or i1 %in.25, %1888
  %select.ptr.447 = select i1 %safe.446, i32* %1886, i32* %1889
  %1890 = load i32, i32* %select.ptr.447, align 4
  %1891 = lshr i32 %1807, 16
  %1892 = and i32 %1891, 255
  %1893 = zext i32 %1892 to i64
  %1894 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1893
  %1895 = sext i32 256 to i64
  %1896 = icmp slt i64 %1893, %1895
  %1897 = bitcast i64* %shadow to i32*
  %safe.448 = or i1 %in.25, %1896
  %select.ptr.449 = select i1 %safe.448, i32* %1894, i32* %1897
  %1898 = load i32, i32* %select.ptr.449, align 4
  %1899 = xor i32 %1890, %1898
  %1900 = lshr i32 %1845, 8
  %1901 = and i32 %1900, 255
  %1902 = zext i32 %1901 to i64
  %1903 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1902
  %1904 = sext i32 256 to i64
  %1905 = icmp slt i64 %1902, %1904
  %1906 = bitcast i64* %shadow to i32*
  %safe.450 = or i1 %in.25, %1905
  %select.ptr.451 = select i1 %safe.450, i32* %1903, i32* %1906
  %1907 = load i32, i32* %select.ptr.451, align 4
  %1908 = xor i32 %1899, %1907
  %1909 = and i32 %1731, 255
  %1910 = zext i32 %1909 to i64
  %1911 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1910
  %1912 = sext i32 256 to i64
  %1913 = icmp slt i64 %1910, %1912
  %1914 = bitcast i64* %shadow to i32*
  %safe.452 = or i1 %in.25, %1913
  %select.ptr.453 = select i1 %safe.452, i32* %1911, i32* %1914
  %1915 = load i32, i32* %select.ptr.453, align 4
  %1916 = xor i32 %1908, %1915
  %1917 = getelementptr inbounds i32, i32* %0, i64 45
  %1918 = icmp slt i64 45, %len.
  %1919 = bitcast i64* %shadow to i32*
  %safe.454 = or i1 %in.25, %1918
  %select.ptr.455 = select i1 %safe.454, i32* %1917, i32* %1919
  %1920 = load i32, i32* %select.ptr.455, align 4
  %1921 = xor i32 %1916, %1920
  %1922 = lshr i32 %1807, 24
  %1923 = zext i32 %1922 to i64
  %1924 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1923
  %1925 = sext i32 256 to i64
  %1926 = icmp slt i64 %1923, %1925
  %1927 = bitcast i64* %shadow to i32*
  %safe.456 = or i1 %in.25, %1926
  %select.ptr.457 = select i1 %safe.456, i32* %1924, i32* %1927
  %1928 = load i32, i32* %select.ptr.457, align 4
  %1929 = lshr i32 %1845, 16
  %1930 = and i32 %1929, 255
  %1931 = zext i32 %1930 to i64
  %1932 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1931
  %1933 = sext i32 256 to i64
  %1934 = icmp slt i64 %1931, %1933
  %1935 = bitcast i64* %shadow to i32*
  %safe.458 = or i1 %in.25, %1934
  %select.ptr.459 = select i1 %safe.458, i32* %1932, i32* %1935
  %1936 = load i32, i32* %select.ptr.459, align 4
  %1937 = xor i32 %1928, %1936
  %1938 = lshr i32 %1731, 8
  %1939 = and i32 %1938, 255
  %1940 = zext i32 %1939 to i64
  %1941 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1940
  %1942 = sext i32 256 to i64
  %1943 = icmp slt i64 %1940, %1942
  %1944 = bitcast i64* %shadow to i32*
  %safe.460 = or i1 %in.25, %1943
  %select.ptr.461 = select i1 %safe.460, i32* %1941, i32* %1944
  %1945 = load i32, i32* %select.ptr.461, align 4
  %1946 = xor i32 %1937, %1945
  %1947 = and i32 %1769, 255
  %1948 = zext i32 %1947 to i64
  %1949 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1948
  %1950 = sext i32 256 to i64
  %1951 = icmp slt i64 %1948, %1950
  %1952 = bitcast i64* %shadow to i32*
  %safe.462 = or i1 %in.25, %1951
  %select.ptr.463 = select i1 %safe.462, i32* %1949, i32* %1952
  %1953 = load i32, i32* %select.ptr.463, align 4
  %1954 = xor i32 %1946, %1953
  %1955 = getelementptr inbounds i32, i32* %0, i64 46
  %1956 = icmp slt i64 46, %len.
  %1957 = bitcast i64* %shadow to i32*
  %safe.464 = or i1 %in.25, %1956
  %select.ptr.465 = select i1 %safe.464, i32* %1955, i32* %1957
  %1958 = load i32, i32* %select.ptr.465, align 4
  %1959 = xor i32 %1954, %1958
  %1960 = lshr i32 %1845, 24
  %1961 = zext i32 %1960 to i64
  %1962 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %1961
  %1963 = sext i32 256 to i64
  %1964 = icmp slt i64 %1961, %1963
  %1965 = bitcast i64* %shadow to i32*
  %safe.466 = or i1 %in.25, %1964
  %select.ptr.467 = select i1 %safe.466, i32* %1962, i32* %1965
  %1966 = load i32, i32* %select.ptr.467, align 4
  %1967 = lshr i32 %1731, 16
  %1968 = and i32 %1967, 255
  %1969 = zext i32 %1968 to i64
  %1970 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %1969
  %1971 = sext i32 256 to i64
  %1972 = icmp slt i64 %1969, %1971
  %1973 = bitcast i64* %shadow to i32*
  %safe.468 = or i1 %in.25, %1972
  %select.ptr.469 = select i1 %safe.468, i32* %1970, i32* %1973
  %1974 = load i32, i32* %select.ptr.469, align 4
  %1975 = xor i32 %1966, %1974
  %1976 = lshr i32 %1769, 8
  %1977 = and i32 %1976, 255
  %1978 = zext i32 %1977 to i64
  %1979 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %1978
  %1980 = sext i32 256 to i64
  %1981 = icmp slt i64 %1978, %1980
  %1982 = bitcast i64* %shadow to i32*
  %safe.470 = or i1 %in.25, %1981
  %select.ptr.471 = select i1 %safe.470, i32* %1979, i32* %1982
  %1983 = load i32, i32* %select.ptr.471, align 4
  %1984 = xor i32 %1975, %1983
  %1985 = and i32 %1807, 255
  %1986 = zext i32 %1985 to i64
  %1987 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %1986
  %1988 = sext i32 256 to i64
  %1989 = icmp slt i64 %1986, %1988
  %1990 = bitcast i64* %shadow to i32*
  %safe.472 = or i1 %in.25, %1989
  %select.ptr.473 = select i1 %safe.472, i32* %1987, i32* %1990
  %1991 = load i32, i32* %select.ptr.473, align 4
  %1992 = xor i32 %1984, %1991
  %1993 = getelementptr inbounds i32, i32* %0, i64 47
  %1994 = icmp slt i64 47, %len.
  %1995 = bitcast i64* %shadow to i32*
  %safe.474 = or i1 %in.25, %1994
  %select.ptr.475 = select i1 %safe.474, i32* %1993, i32* %1995
  %1996 = load i32, i32* %select.ptr.475, align 4
  %1997 = xor i32 %1992, %1996
  %1998 = icmp sgt i32 %1, 12
  store i1 %in.25, i1* %out.15
  %1999 = load i1, i1* %out.15
  %in.26 = and i1 %1999, %1998
  %2000 = lshr i32 %1883, 24
  %2001 = zext i32 %2000 to i64
  %2002 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2001
  %2003 = sext i32 256 to i64
  %2004 = icmp slt i64 %2001, %2003
  %2005 = bitcast i64* %shadow to i32*
  %safe.476 = or i1 %in.26, %2004
  %select.ptr.477 = select i1 %safe.476, i32* %2002, i32* %2005
  %2006 = load i32, i32* %select.ptr.477, align 4
  %2007 = lshr i32 %1921, 16
  %2008 = and i32 %2007, 255
  %2009 = zext i32 %2008 to i64
  %2010 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2009
  %2011 = sext i32 256 to i64
  %2012 = icmp slt i64 %2009, %2011
  %2013 = bitcast i64* %shadow to i32*
  %safe.478 = or i1 %in.26, %2012
  %select.ptr.479 = select i1 %safe.478, i32* %2010, i32* %2013
  %2014 = load i32, i32* %select.ptr.479, align 4
  %2015 = xor i32 %2006, %2014
  %2016 = lshr i32 %1959, 8
  %2017 = and i32 %2016, 255
  %2018 = zext i32 %2017 to i64
  %2019 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2018
  %2020 = sext i32 256 to i64
  %2021 = icmp slt i64 %2018, %2020
  %2022 = bitcast i64* %shadow to i32*
  %safe.480 = or i1 %in.26, %2021
  %select.ptr.481 = select i1 %safe.480, i32* %2019, i32* %2022
  %2023 = load i32, i32* %select.ptr.481, align 4
  %2024 = xor i32 %2015, %2023
  %2025 = and i32 %1997, 255
  %2026 = zext i32 %2025 to i64
  %2027 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2026
  %2028 = sext i32 256 to i64
  %2029 = icmp slt i64 %2026, %2028
  %2030 = bitcast i64* %shadow to i32*
  %safe.482 = or i1 %in.26, %2029
  %select.ptr.483 = select i1 %safe.482, i32* %2027, i32* %2030
  %2031 = load i32, i32* %select.ptr.483, align 4
  %2032 = xor i32 %2024, %2031
  %2033 = getelementptr inbounds i32, i32* %0, i64 48
  %2034 = icmp slt i64 48, %len.
  %2035 = bitcast i64* %shadow to i32*
  %safe.484 = or i1 %in.26, %2034
  %select.ptr.485 = select i1 %safe.484, i32* %2033, i32* %2035
  %2036 = load i32, i32* %select.ptr.485, align 4
  %2037 = xor i32 %2032, %2036
  %2038 = lshr i32 %1921, 24
  %2039 = zext i32 %2038 to i64
  %2040 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2039
  %2041 = sext i32 256 to i64
  %2042 = icmp slt i64 %2039, %2041
  %2043 = bitcast i64* %shadow to i32*
  %safe.486 = or i1 %in.26, %2042
  %select.ptr.487 = select i1 %safe.486, i32* %2040, i32* %2043
  %2044 = load i32, i32* %select.ptr.487, align 4
  %2045 = lshr i32 %1959, 16
  %2046 = and i32 %2045, 255
  %2047 = zext i32 %2046 to i64
  %2048 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2047
  %2049 = sext i32 256 to i64
  %2050 = icmp slt i64 %2047, %2049
  %2051 = bitcast i64* %shadow to i32*
  %safe.488 = or i1 %in.26, %2050
  %select.ptr.489 = select i1 %safe.488, i32* %2048, i32* %2051
  %2052 = load i32, i32* %select.ptr.489, align 4
  %2053 = xor i32 %2044, %2052
  %2054 = lshr i32 %1997, 8
  %2055 = and i32 %2054, 255
  %2056 = zext i32 %2055 to i64
  %2057 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2056
  %2058 = sext i32 256 to i64
  %2059 = icmp slt i64 %2056, %2058
  %2060 = bitcast i64* %shadow to i32*
  %safe.490 = or i1 %in.26, %2059
  %select.ptr.491 = select i1 %safe.490, i32* %2057, i32* %2060
  %2061 = load i32, i32* %select.ptr.491, align 4
  %2062 = xor i32 %2053, %2061
  %2063 = and i32 %1883, 255
  %2064 = zext i32 %2063 to i64
  %2065 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2064
  %2066 = sext i32 256 to i64
  %2067 = icmp slt i64 %2064, %2066
  %2068 = bitcast i64* %shadow to i32*
  %safe.492 = or i1 %in.26, %2067
  %select.ptr.493 = select i1 %safe.492, i32* %2065, i32* %2068
  %2069 = load i32, i32* %select.ptr.493, align 4
  %2070 = xor i32 %2062, %2069
  %2071 = getelementptr inbounds i32, i32* %0, i64 49
  %2072 = icmp slt i64 49, %len.
  %2073 = bitcast i64* %shadow to i32*
  %safe.494 = or i1 %in.26, %2072
  %select.ptr.495 = select i1 %safe.494, i32* %2071, i32* %2073
  %2074 = load i32, i32* %select.ptr.495, align 4
  %2075 = xor i32 %2070, %2074
  %2076 = lshr i32 %1959, 24
  %2077 = zext i32 %2076 to i64
  %2078 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2077
  %2079 = sext i32 256 to i64
  %2080 = icmp slt i64 %2077, %2079
  %2081 = bitcast i64* %shadow to i32*
  %safe.496 = or i1 %in.26, %2080
  %select.ptr.497 = select i1 %safe.496, i32* %2078, i32* %2081
  %2082 = load i32, i32* %select.ptr.497, align 4
  %2083 = lshr i32 %1997, 16
  %2084 = and i32 %2083, 255
  %2085 = zext i32 %2084 to i64
  %2086 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2085
  %2087 = sext i32 256 to i64
  %2088 = icmp slt i64 %2085, %2087
  %2089 = bitcast i64* %shadow to i32*
  %safe.498 = or i1 %in.26, %2088
  %select.ptr.499 = select i1 %safe.498, i32* %2086, i32* %2089
  %2090 = load i32, i32* %select.ptr.499, align 4
  %2091 = xor i32 %2082, %2090
  %2092 = lshr i32 %1883, 8
  %2093 = and i32 %2092, 255
  %2094 = zext i32 %2093 to i64
  %2095 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2094
  %2096 = sext i32 256 to i64
  %2097 = icmp slt i64 %2094, %2096
  %2098 = bitcast i64* %shadow to i32*
  %safe.500 = or i1 %in.26, %2097
  %select.ptr.501 = select i1 %safe.500, i32* %2095, i32* %2098
  %2099 = load i32, i32* %select.ptr.501, align 4
  %2100 = xor i32 %2091, %2099
  %2101 = and i32 %1921, 255
  %2102 = zext i32 %2101 to i64
  %2103 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2102
  %2104 = sext i32 256 to i64
  %2105 = icmp slt i64 %2102, %2104
  %2106 = bitcast i64* %shadow to i32*
  %safe.502 = or i1 %in.26, %2105
  %select.ptr.503 = select i1 %safe.502, i32* %2103, i32* %2106
  %2107 = load i32, i32* %select.ptr.503, align 4
  %2108 = xor i32 %2100, %2107
  %2109 = getelementptr inbounds i32, i32* %0, i64 50
  %2110 = icmp slt i64 50, %len.
  %2111 = bitcast i64* %shadow to i32*
  %safe.504 = or i1 %in.26, %2110
  %select.ptr.505 = select i1 %safe.504, i32* %2109, i32* %2111
  %2112 = load i32, i32* %select.ptr.505, align 4
  %2113 = xor i32 %2108, %2112
  %2114 = lshr i32 %1997, 24
  %2115 = zext i32 %2114 to i64
  %2116 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2115
  %2117 = sext i32 256 to i64
  %2118 = icmp slt i64 %2115, %2117
  %2119 = bitcast i64* %shadow to i32*
  %safe.506 = or i1 %in.26, %2118
  %select.ptr.507 = select i1 %safe.506, i32* %2116, i32* %2119
  %2120 = load i32, i32* %select.ptr.507, align 4
  %2121 = lshr i32 %1883, 16
  %2122 = and i32 %2121, 255
  %2123 = zext i32 %2122 to i64
  %2124 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2123
  %2125 = sext i32 256 to i64
  %2126 = icmp slt i64 %2123, %2125
  %2127 = bitcast i64* %shadow to i32*
  %safe.508 = or i1 %in.26, %2126
  %select.ptr.509 = select i1 %safe.508, i32* %2124, i32* %2127
  %2128 = load i32, i32* %select.ptr.509, align 4
  %2129 = xor i32 %2120, %2128
  %2130 = lshr i32 %1921, 8
  %2131 = and i32 %2130, 255
  %2132 = zext i32 %2131 to i64
  %2133 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2132
  %2134 = sext i32 256 to i64
  %2135 = icmp slt i64 %2132, %2134
  %2136 = bitcast i64* %shadow to i32*
  %safe.510 = or i1 %in.26, %2135
  %select.ptr.511 = select i1 %safe.510, i32* %2133, i32* %2136
  %2137 = load i32, i32* %select.ptr.511, align 4
  %2138 = xor i32 %2129, %2137
  %2139 = and i32 %1959, 255
  %2140 = zext i32 %2139 to i64
  %2141 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2140
  %2142 = sext i32 256 to i64
  %2143 = icmp slt i64 %2140, %2142
  %2144 = bitcast i64* %shadow to i32*
  %safe.512 = or i1 %in.26, %2143
  %select.ptr.513 = select i1 %safe.512, i32* %2141, i32* %2144
  %2145 = load i32, i32* %select.ptr.513, align 4
  %2146 = xor i32 %2138, %2145
  %2147 = getelementptr inbounds i32, i32* %0, i64 51
  %2148 = icmp slt i64 51, %len.
  %2149 = bitcast i64* %shadow to i32*
  %safe.514 = or i1 %in.26, %2148
  %select.ptr.515 = select i1 %safe.514, i32* %2147, i32* %2149
  %2150 = load i32, i32* %select.ptr.515, align 4
  %2151 = xor i32 %2146, %2150
  %2152 = lshr i32 %2037, 24
  %2153 = zext i32 %2152 to i64
  %2154 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2153
  %2155 = sext i32 256 to i64
  %2156 = icmp slt i64 %2153, %2155
  %2157 = bitcast i64* %shadow to i32*
  %safe.516 = or i1 %in.26, %2156
  %select.ptr.517 = select i1 %safe.516, i32* %2154, i32* %2157
  %2158 = load i32, i32* %select.ptr.517, align 4
  %2159 = lshr i32 %2075, 16
  %2160 = and i32 %2159, 255
  %2161 = zext i32 %2160 to i64
  %2162 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2161
  %2163 = sext i32 256 to i64
  %2164 = icmp slt i64 %2161, %2163
  %2165 = bitcast i64* %shadow to i32*
  %safe.518 = or i1 %in.26, %2164
  %select.ptr.519 = select i1 %safe.518, i32* %2162, i32* %2165
  %2166 = load i32, i32* %select.ptr.519, align 4
  %2167 = xor i32 %2158, %2166
  %2168 = lshr i32 %2113, 8
  %2169 = and i32 %2168, 255
  %2170 = zext i32 %2169 to i64
  %2171 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2170
  %2172 = sext i32 256 to i64
  %2173 = icmp slt i64 %2170, %2172
  %2174 = bitcast i64* %shadow to i32*
  %safe.520 = or i1 %in.26, %2173
  %select.ptr.521 = select i1 %safe.520, i32* %2171, i32* %2174
  %2175 = load i32, i32* %select.ptr.521, align 4
  %2176 = xor i32 %2167, %2175
  %2177 = and i32 %2151, 255
  %2178 = zext i32 %2177 to i64
  %2179 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2178
  %2180 = sext i32 256 to i64
  %2181 = icmp slt i64 %2178, %2180
  %2182 = bitcast i64* %shadow to i32*
  %safe.522 = or i1 %in.26, %2181
  %select.ptr.523 = select i1 %safe.522, i32* %2179, i32* %2182
  %2183 = load i32, i32* %select.ptr.523, align 4
  %2184 = xor i32 %2176, %2183
  %2185 = getelementptr inbounds i32, i32* %0, i64 52
  %2186 = icmp slt i64 52, %len.
  %2187 = bitcast i64* %shadow to i32*
  %safe.524 = or i1 %in.26, %2186
  %select.ptr.525 = select i1 %safe.524, i32* %2185, i32* %2187
  %2188 = load i32, i32* %select.ptr.525, align 4
  %2189 = xor i32 %2184, %2188
  %2190 = lshr i32 %2075, 24
  %2191 = zext i32 %2190 to i64
  %2192 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2191
  %2193 = sext i32 256 to i64
  %2194 = icmp slt i64 %2191, %2193
  %2195 = bitcast i64* %shadow to i32*
  %safe.526 = or i1 %in.26, %2194
  %select.ptr.527 = select i1 %safe.526, i32* %2192, i32* %2195
  %2196 = load i32, i32* %select.ptr.527, align 4
  %2197 = lshr i32 %2113, 16
  %2198 = and i32 %2197, 255
  %2199 = zext i32 %2198 to i64
  %2200 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2199
  %2201 = sext i32 256 to i64
  %2202 = icmp slt i64 %2199, %2201
  %2203 = bitcast i64* %shadow to i32*
  %safe.528 = or i1 %in.26, %2202
  %select.ptr.529 = select i1 %safe.528, i32* %2200, i32* %2203
  %2204 = load i32, i32* %select.ptr.529, align 4
  %2205 = xor i32 %2196, %2204
  %2206 = lshr i32 %2151, 8
  %2207 = and i32 %2206, 255
  %2208 = zext i32 %2207 to i64
  %2209 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2208
  %2210 = sext i32 256 to i64
  %2211 = icmp slt i64 %2208, %2210
  %2212 = bitcast i64* %shadow to i32*
  %safe.530 = or i1 %in.26, %2211
  %select.ptr.531 = select i1 %safe.530, i32* %2209, i32* %2212
  %2213 = load i32, i32* %select.ptr.531, align 4
  %2214 = xor i32 %2205, %2213
  %2215 = and i32 %2037, 255
  %2216 = zext i32 %2215 to i64
  %2217 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2216
  %2218 = sext i32 256 to i64
  %2219 = icmp slt i64 %2216, %2218
  %2220 = bitcast i64* %shadow to i32*
  %safe.532 = or i1 %in.26, %2219
  %select.ptr.533 = select i1 %safe.532, i32* %2217, i32* %2220
  %2221 = load i32, i32* %select.ptr.533, align 4
  %2222 = xor i32 %2214, %2221
  %2223 = getelementptr inbounds i32, i32* %0, i64 53
  %2224 = icmp slt i64 53, %len.
  %2225 = bitcast i64* %shadow to i32*
  %safe.534 = or i1 %in.26, %2224
  %select.ptr.535 = select i1 %safe.534, i32* %2223, i32* %2225
  %2226 = load i32, i32* %select.ptr.535, align 4
  %2227 = xor i32 %2222, %2226
  %2228 = lshr i32 %2113, 24
  %2229 = zext i32 %2228 to i64
  %2230 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2229
  %2231 = sext i32 256 to i64
  %2232 = icmp slt i64 %2229, %2231
  %2233 = bitcast i64* %shadow to i32*
  %safe.536 = or i1 %in.26, %2232
  %select.ptr.537 = select i1 %safe.536, i32* %2230, i32* %2233
  %2234 = load i32, i32* %select.ptr.537, align 4
  %2235 = lshr i32 %2151, 16
  %2236 = and i32 %2235, 255
  %2237 = zext i32 %2236 to i64
  %2238 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2237
  %2239 = sext i32 256 to i64
  %2240 = icmp slt i64 %2237, %2239
  %2241 = bitcast i64* %shadow to i32*
  %safe.538 = or i1 %in.26, %2240
  %select.ptr.539 = select i1 %safe.538, i32* %2238, i32* %2241
  %2242 = load i32, i32* %select.ptr.539, align 4
  %2243 = xor i32 %2234, %2242
  %2244 = lshr i32 %2037, 8
  %2245 = and i32 %2244, 255
  %2246 = zext i32 %2245 to i64
  %2247 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2246
  %2248 = sext i32 256 to i64
  %2249 = icmp slt i64 %2246, %2248
  %2250 = bitcast i64* %shadow to i32*
  %safe.540 = or i1 %in.26, %2249
  %select.ptr.541 = select i1 %safe.540, i32* %2247, i32* %2250
  %2251 = load i32, i32* %select.ptr.541, align 4
  %2252 = xor i32 %2243, %2251
  %2253 = and i32 %2075, 255
  %2254 = zext i32 %2253 to i64
  %2255 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2254
  %2256 = sext i32 256 to i64
  %2257 = icmp slt i64 %2254, %2256
  %2258 = bitcast i64* %shadow to i32*
  %safe.542 = or i1 %in.26, %2257
  %select.ptr.543 = select i1 %safe.542, i32* %2255, i32* %2258
  %2259 = load i32, i32* %select.ptr.543, align 4
  %2260 = xor i32 %2252, %2259
  %2261 = getelementptr inbounds i32, i32* %0, i64 54
  %2262 = icmp slt i64 54, %len.
  %2263 = bitcast i64* %shadow to i32*
  %safe.544 = or i1 %in.26, %2262
  %select.ptr.545 = select i1 %safe.544, i32* %2261, i32* %2263
  %2264 = load i32, i32* %select.ptr.545, align 4
  %2265 = xor i32 %2260, %2264
  %2266 = lshr i32 %2151, 24
  %2267 = zext i32 %2266 to i64
  %2268 = getelementptr inbounds [256 x i32], [256 x i32]* @Te0, i64 0, i64 %2267
  %2269 = sext i32 256 to i64
  %2270 = icmp slt i64 %2267, %2269
  %2271 = bitcast i64* %shadow to i32*
  %safe.546 = or i1 %in.26, %2270
  %select.ptr.547 = select i1 %safe.546, i32* %2268, i32* %2271
  %2272 = load i32, i32* %select.ptr.547, align 4
  %2273 = lshr i32 %2037, 16
  %2274 = and i32 %2273, 255
  %2275 = zext i32 %2274 to i64
  %2276 = getelementptr inbounds [256 x i32], [256 x i32]* @Te1, i64 0, i64 %2275
  %2277 = sext i32 256 to i64
  %2278 = icmp slt i64 %2275, %2277
  %2279 = bitcast i64* %shadow to i32*
  %safe.548 = or i1 %in.26, %2278
  %select.ptr.549 = select i1 %safe.548, i32* %2276, i32* %2279
  %2280 = load i32, i32* %select.ptr.549, align 4
  %2281 = xor i32 %2272, %2280
  %2282 = lshr i32 %2075, 8
  %2283 = and i32 %2282, 255
  %2284 = zext i32 %2283 to i64
  %2285 = getelementptr inbounds [256 x i32], [256 x i32]* @Te2, i64 0, i64 %2284
  %2286 = sext i32 256 to i64
  %2287 = icmp slt i64 %2284, %2286
  %2288 = bitcast i64* %shadow to i32*
  %safe.550 = or i1 %in.26, %2287
  %select.ptr.551 = select i1 %safe.550, i32* %2285, i32* %2288
  %2289 = load i32, i32* %select.ptr.551, align 4
  %2290 = xor i32 %2281, %2289
  %2291 = and i32 %2113, 255
  %2292 = zext i32 %2291 to i64
  %2293 = getelementptr inbounds [256 x i32], [256 x i32]* @Te3, i64 0, i64 %2292
  %2294 = sext i32 256 to i64
  %2295 = icmp slt i64 %2292, %2294
  %2296 = bitcast i64* %shadow to i32*
  %safe.552 = or i1 %in.26, %2295
  %select.ptr.553 = select i1 %safe.552, i32* %2293, i32* %2296
  %2297 = load i32, i32* %select.ptr.553, align 4
  %2298 = xor i32 %2290, %2297
  %2299 = getelementptr inbounds i32, i32* %0, i64 55
  %2300 = icmp slt i64 55, %len.
  %2301 = bitcast i64* %shadow to i32*
  %safe.554 = or i1 %in.26, %2300
  %select.ptr.555 = select i1 %safe.554, i32* %2299, i32* %2301
  %2302 = load i32, i32* %select.ptr.555, align 4
  %2303 = xor i32 %2298, %2302
  store i1 %in.26, i1* %out.16
  %2304 = load i1, i1* %out.14
  %2305 = xor i1 %1691, true
  %in.28 = and i1 %2304, %2305
  %2306 = load i1, i1* %out.15
  %2307 = xor i1 %1998, true
  %in.27 = and i1 %2306, %2307
  %2308 = load i1, i1* %out.16
  %2309 = select i1 %in.27, i32 %1883, i32 %2189
  %select.phi.646 = select i1 %in.28, i32 %1576, i32 %2309
  %2310 = select i1 %in.27, i32 %1921, i32 %2227
  %select.phi.645 = select i1 %in.28, i32 %1614, i32 %2310
  %2311 = select i1 %in.27, i32 %1959, i32 %2265
  %select.phi.644 = select i1 %in.28, i32 %1652, i32 %2311
  %2312 = select i1 %in.27, i32 %1997, i32 %2303
  %select.phi.643 = select i1 %in.28, i32 %1690, i32 %2312
  %2313 = or i1 %in.28, %in.27
  %2314 = or i1 %2313, %2308
  %2315 = or i1 %in.28, %in.27
  %2316 = or i1 %2315, %2308
  %2317 = or i1 %in.28, %in.27
  %2318 = or i1 %2317, %2308
  %2319 = or i1 %in.28, %in.27
  %2320 = or i1 %2319, %2308
  %2321 = or i1 %in.28, %in.27
  %2322 = or i1 %2321, %2308
  %2323 = or i1 %in.28, %in.27
  %2324 = or i1 %2323, %2308
  %2325 = or i1 %in.28, %in.27
  %2326 = or i1 %2325, %2308
  %2327 = or i1 %in.28, %in.27
  %2328 = or i1 %2327, %2308
  %2329 = or i1 %in.28, %in.27
  %2330 = or i1 %2329, %2308
  %2331 = or i1 %in.28, %in.27
  %2332 = or i1 %2331, %2308
  %2333 = or i1 %in.28, %in.27
  %2334 = or i1 %2333, %2308
  %2335 = or i1 %in.28, %in.27
  %2336 = or i1 %2335, %2308
  %2337 = or i1 %in.28, %in.27
  %2338 = or i1 %2337, %2308
  %2339 = or i1 %in.28, %in.27
  %2340 = or i1 %2339, %2308
  %2341 = or i1 %in.28, %in.27
  %2342 = or i1 %2341, %2308
  %2343 = or i1 %in.28, %in.27
  %2344 = or i1 %2343, %2308
  %2345 = or i1 %in.28, %in.27
  %2346 = or i1 %2345, %2308
  %2347 = or i1 %in.28, %in.27
  %2348 = or i1 %2347, %2308
  %2349 = or i1 %in.28, %in.27
  %2350 = or i1 %2349, %2308
  %2351 = or i1 %in.28, %in.27
  %2352 = or i1 %2351, %2308
  %2353 = or i1 %in.28, %in.27
  %2354 = or i1 %2353, %2308
  %2355 = or i1 %in.28, %in.27
  %2356 = or i1 %2355, %2308
  %2357 = or i1 %in.28, %in.27
  %2358 = or i1 %2357, %2308
  %2359 = or i1 %in.28, %in.27
  %2360 = or i1 %2359, %2308
  %2361 = or i1 %in.28, %in.27
  %2362 = or i1 %2361, %2308
  %2363 = or i1 %in.28, %in.27
  %2364 = or i1 %2363, %2308
  %2365 = or i1 %in.28, %in.27
  %2366 = or i1 %2365, %2308
  %2367 = or i1 %in.28, %in.27
  %2368 = or i1 %2367, %2308
  %2369 = or i1 %in.28, %in.27
  %2370 = or i1 %2369, %2308
  %2371 = or i1 %in.28, %in.27
  %2372 = or i1 %2371, %2308
  %2373 = or i1 %in.28, %in.27
  %2374 = or i1 %2373, %2308
  %2375 = or i1 %in.28, %in.27
  %2376 = or i1 %2375, %2308
  %2377 = or i1 %in.28, %in.27
  %2378 = or i1 %2377, %2308
  %2379 = or i1 %in.28, %in.27
  %2380 = or i1 %2379, %2308
  %2381 = or i1 %in.28, %in.27
  %2382 = or i1 %2381, %2308
  %2383 = or i1 %in.28, %in.27
  %2384 = or i1 %2383, %2308
  %2385 = shl i32 %1, 2
  %2386 = sext i32 %2385 to i64
  %2387 = getelementptr inbounds i32, i32* %0, i64 %2386
  %2388 = lshr i32 %select.phi.646, 24
  %2389 = zext i32 %2388 to i64
  %2390 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2389
  %2391 = sext i32 256 to i64
  %2392 = icmp slt i64 %2389, %2391
  %2393 = bitcast i64* %shadow to i32*
  %safe.556 = or i1 %2384, %2392
  %select.ptr.557 = select i1 %safe.556, i32* %2390, i32* %2393
  %2394 = load i32, i32* %select.ptr.557, align 4
  %2395 = and i32 %2394, -16777216
  %2396 = lshr i32 %select.phi.645, 16
  %2397 = and i32 %2396, 255
  %2398 = zext i32 %2397 to i64
  %2399 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2398
  %2400 = sext i32 256 to i64
  %2401 = icmp slt i64 %2398, %2400
  %2402 = bitcast i64* %shadow to i32*
  %safe.558 = or i1 %2382, %2401
  %select.ptr.559 = select i1 %safe.558, i32* %2399, i32* %2402
  %2403 = load i32, i32* %select.ptr.559, align 4
  %2404 = and i32 %2403, 16711680
  %2405 = xor i32 %2395, %2404
  %2406 = lshr i32 %select.phi.644, 8
  %2407 = and i32 %2406, 255
  %2408 = zext i32 %2407 to i64
  %2409 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2408
  %2410 = sext i32 256 to i64
  %2411 = icmp slt i64 %2408, %2410
  %2412 = bitcast i64* %shadow to i32*
  %safe.560 = or i1 %2380, %2411
  %select.ptr.561 = select i1 %safe.560, i32* %2409, i32* %2412
  %2413 = load i32, i32* %select.ptr.561, align 4
  %2414 = and i32 %2413, 65280
  %2415 = xor i32 %2405, %2414
  %2416 = and i32 %select.phi.643, 255
  %2417 = zext i32 %2416 to i64
  %2418 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2417
  %2419 = sext i32 256 to i64
  %2420 = icmp slt i64 %2417, %2419
  %2421 = bitcast i64* %shadow to i32*
  %safe.562 = or i1 %2378, %2420
  %select.ptr.563 = select i1 %safe.562, i32* %2418, i32* %2421
  %2422 = load i32, i32* %select.ptr.563, align 4
  %2423 = and i32 %2422, 255
  %2424 = xor i32 %2415, %2423
  %2425 = getelementptr inbounds i32, i32* %2387, i64 0
  %2426 = icmp slt i64 0, %len.
  %2427 = bitcast i64* %shadow to i32*
  %safe.564 = or i1 %2376, %2426
  %select.ptr.565 = select i1 %safe.564, i32* %2425, i32* %2427
  %2428 = load i32, i32* %select.ptr.565, align 4
  %2429 = xor i32 %2424, %2428
  %2430 = lshr i32 %2429, 24
  %2431 = trunc i32 %2430 to i8
  %2432 = getelementptr inbounds i8, i8* %3, i64 0
  %2433 = icmp slt i64 0, %len.2
  %2434 = bitcast i64* %shadow to i8*
  %safe.566 = or i1 %2374, %2433
  %select.ptr.567 = select i1 %safe.566, i8* %2432, i8* %2434
  %2435 = load i8, i8* %2432
  %2436 = sub i1 %2374, true
  %2437 = xor i1 %2436, true
  %2438 = sext i1 %2436 to i8
  %2439 = and i8 %2438, %2435
  %2440 = sext i1 %2437 to i8
  %2441 = and i8 %2440, %2431
  %select.val. = or i8 %2441, %2439
  store i8 %select.val., i8* %select.ptr.567, align 1
  %2442 = lshr i32 %2429, 16
  %2443 = trunc i32 %2442 to i8
  %2444 = getelementptr inbounds i8, i8* %3, i64 1
  %2445 = icmp slt i64 1, %len.2
  %2446 = bitcast i64* %shadow to i8*
  %safe.568 = or i1 %2372, %2445
  %select.ptr.569 = select i1 %safe.568, i8* %2444, i8* %2446
  %2447 = load i8, i8* %2444
  %2448 = sub i1 %2372, true
  %2449 = xor i1 %2448, true
  %2450 = sext i1 %2448 to i8
  %2451 = and i8 %2450, %2447
  %2452 = sext i1 %2449 to i8
  %2453 = and i8 %2452, %2443
  %select.val.570 = or i8 %2453, %2451
  store i8 %select.val.570, i8* %select.ptr.569, align 1
  %2454 = lshr i32 %2429, 8
  %2455 = trunc i32 %2454 to i8
  %2456 = getelementptr inbounds i8, i8* %3, i64 2
  %2457 = icmp slt i64 2, %len.2
  %2458 = bitcast i64* %shadow to i8*
  %safe.571 = or i1 %2370, %2457
  %select.ptr.572 = select i1 %safe.571, i8* %2456, i8* %2458
  %2459 = load i8, i8* %2456
  %2460 = sub i1 %2370, true
  %2461 = xor i1 %2460, true
  %2462 = sext i1 %2460 to i8
  %2463 = and i8 %2462, %2459
  %2464 = sext i1 %2461 to i8
  %2465 = and i8 %2464, %2455
  %select.val.573 = or i8 %2465, %2463
  store i8 %select.val.573, i8* %select.ptr.572, align 1
  %2466 = trunc i32 %2429 to i8
  %2467 = getelementptr inbounds i8, i8* %3, i64 3
  %2468 = icmp slt i64 3, %len.2
  %2469 = bitcast i64* %shadow to i8*
  %safe.574 = or i1 %2368, %2468
  %select.ptr.575 = select i1 %safe.574, i8* %2467, i8* %2469
  %2470 = load i8, i8* %2467
  %2471 = sub i1 %2368, true
  %2472 = xor i1 %2471, true
  %2473 = sext i1 %2471 to i8
  %2474 = and i8 %2473, %2470
  %2475 = sext i1 %2472 to i8
  %2476 = and i8 %2475, %2466
  %select.val.576 = or i8 %2476, %2474
  store i8 %select.val.576, i8* %select.ptr.575, align 1
  %2477 = lshr i32 %select.phi.645, 24
  %2478 = zext i32 %2477 to i64
  %2479 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2478
  %2480 = sext i32 256 to i64
  %2481 = icmp slt i64 %2478, %2480
  %2482 = bitcast i64* %shadow to i32*
  %safe.577 = or i1 %2366, %2481
  %select.ptr.578 = select i1 %safe.577, i32* %2479, i32* %2482
  %2483 = load i32, i32* %select.ptr.578, align 4
  %2484 = and i32 %2483, -16777216
  %2485 = lshr i32 %select.phi.644, 16
  %2486 = and i32 %2485, 255
  %2487 = zext i32 %2486 to i64
  %2488 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2487
  %2489 = sext i32 256 to i64
  %2490 = icmp slt i64 %2487, %2489
  %2491 = bitcast i64* %shadow to i32*
  %safe.579 = or i1 %2364, %2490
  %select.ptr.580 = select i1 %safe.579, i32* %2488, i32* %2491
  %2492 = load i32, i32* %select.ptr.580, align 4
  %2493 = and i32 %2492, 16711680
  %2494 = xor i32 %2484, %2493
  %2495 = lshr i32 %select.phi.643, 8
  %2496 = and i32 %2495, 255
  %2497 = zext i32 %2496 to i64
  %2498 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2497
  %2499 = sext i32 256 to i64
  %2500 = icmp slt i64 %2497, %2499
  %2501 = bitcast i64* %shadow to i32*
  %safe.581 = or i1 %2362, %2500
  %select.ptr.582 = select i1 %safe.581, i32* %2498, i32* %2501
  %2502 = load i32, i32* %select.ptr.582, align 4
  %2503 = and i32 %2502, 65280
  %2504 = xor i32 %2494, %2503
  %2505 = and i32 %select.phi.646, 255
  %2506 = zext i32 %2505 to i64
  %2507 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2506
  %2508 = sext i32 256 to i64
  %2509 = icmp slt i64 %2506, %2508
  %2510 = bitcast i64* %shadow to i32*
  %safe.583 = or i1 %2360, %2509
  %select.ptr.584 = select i1 %safe.583, i32* %2507, i32* %2510
  %2511 = load i32, i32* %select.ptr.584, align 4
  %2512 = and i32 %2511, 255
  %2513 = xor i32 %2504, %2512
  %2514 = getelementptr inbounds i32, i32* %2387, i64 1
  %2515 = icmp slt i64 1, %len.
  %2516 = bitcast i64* %shadow to i32*
  %safe.585 = or i1 %2358, %2515
  %select.ptr.586 = select i1 %safe.585, i32* %2514, i32* %2516
  %2517 = load i32, i32* %select.ptr.586, align 4
  %2518 = xor i32 %2513, %2517
  %2519 = lshr i32 %2518, 24
  %2520 = trunc i32 %2519 to i8
  %2521 = getelementptr inbounds i8, i8* %3, i64 4
  %2522 = getelementptr inbounds i8, i8* %2521, i64 0
  %2523 = icmp slt i64 0, %len.2
  %2524 = bitcast i64* %shadow to i8*
  %safe.587 = or i1 %2356, %2523
  %select.ptr.588 = select i1 %safe.587, i8* %2522, i8* %2524
  %2525 = load i8, i8* %2522
  %2526 = sub i1 %2356, true
  %2527 = xor i1 %2526, true
  %2528 = sext i1 %2526 to i8
  %2529 = and i8 %2528, %2525
  %2530 = sext i1 %2527 to i8
  %2531 = and i8 %2530, %2520
  %select.val.589 = or i8 %2531, %2529
  store i8 %select.val.589, i8* %select.ptr.588, align 1
  %2532 = lshr i32 %2518, 16
  %2533 = trunc i32 %2532 to i8
  %2534 = getelementptr inbounds i8, i8* %3, i64 4
  %2535 = getelementptr inbounds i8, i8* %2534, i64 1
  %2536 = icmp slt i64 1, %len.2
  %2537 = bitcast i64* %shadow to i8*
  %safe.590 = or i1 %2354, %2536
  %select.ptr.591 = select i1 %safe.590, i8* %2535, i8* %2537
  %2538 = load i8, i8* %2535
  %2539 = sub i1 %2354, true
  %2540 = xor i1 %2539, true
  %2541 = sext i1 %2539 to i8
  %2542 = and i8 %2541, %2538
  %2543 = sext i1 %2540 to i8
  %2544 = and i8 %2543, %2533
  %select.val.592 = or i8 %2544, %2542
  store i8 %select.val.592, i8* %select.ptr.591, align 1
  %2545 = lshr i32 %2518, 8
  %2546 = trunc i32 %2545 to i8
  %2547 = getelementptr inbounds i8, i8* %3, i64 4
  %2548 = getelementptr inbounds i8, i8* %2547, i64 2
  %2549 = icmp slt i64 2, %len.2
  %2550 = bitcast i64* %shadow to i8*
  %safe.593 = or i1 %2352, %2549
  %select.ptr.594 = select i1 %safe.593, i8* %2548, i8* %2550
  %2551 = load i8, i8* %2548
  %2552 = sub i1 %2352, true
  %2553 = xor i1 %2552, true
  %2554 = sext i1 %2552 to i8
  %2555 = and i8 %2554, %2551
  %2556 = sext i1 %2553 to i8
  %2557 = and i8 %2556, %2546
  %select.val.595 = or i8 %2557, %2555
  store i8 %select.val.595, i8* %select.ptr.594, align 1
  %2558 = trunc i32 %2518 to i8
  %2559 = getelementptr inbounds i8, i8* %3, i64 4
  %2560 = getelementptr inbounds i8, i8* %2559, i64 3
  %2561 = icmp slt i64 3, %len.2
  %2562 = bitcast i64* %shadow to i8*
  %safe.596 = or i1 %2350, %2561
  %select.ptr.597 = select i1 %safe.596, i8* %2560, i8* %2562
  %2563 = load i8, i8* %2560
  %2564 = sub i1 %2350, true
  %2565 = xor i1 %2564, true
  %2566 = sext i1 %2564 to i8
  %2567 = and i8 %2566, %2563
  %2568 = sext i1 %2565 to i8
  %2569 = and i8 %2568, %2558
  %select.val.598 = or i8 %2569, %2567
  store i8 %select.val.598, i8* %select.ptr.597, align 1
  %2570 = lshr i32 %select.phi.644, 24
  %2571 = zext i32 %2570 to i64
  %2572 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2571
  %2573 = sext i32 256 to i64
  %2574 = icmp slt i64 %2571, %2573
  %2575 = bitcast i64* %shadow to i32*
  %safe.599 = or i1 %2348, %2574
  %select.ptr.600 = select i1 %safe.599, i32* %2572, i32* %2575
  %2576 = load i32, i32* %select.ptr.600, align 4
  %2577 = and i32 %2576, -16777216
  %2578 = lshr i32 %select.phi.643, 16
  %2579 = and i32 %2578, 255
  %2580 = zext i32 %2579 to i64
  %2581 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2580
  %2582 = sext i32 256 to i64
  %2583 = icmp slt i64 %2580, %2582
  %2584 = bitcast i64* %shadow to i32*
  %safe.601 = or i1 %2346, %2583
  %select.ptr.602 = select i1 %safe.601, i32* %2581, i32* %2584
  %2585 = load i32, i32* %select.ptr.602, align 4
  %2586 = and i32 %2585, 16711680
  %2587 = xor i32 %2577, %2586
  %2588 = lshr i32 %select.phi.646, 8
  %2589 = and i32 %2588, 255
  %2590 = zext i32 %2589 to i64
  %2591 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2590
  %2592 = sext i32 256 to i64
  %2593 = icmp slt i64 %2590, %2592
  %2594 = bitcast i64* %shadow to i32*
  %safe.603 = or i1 %2344, %2593
  %select.ptr.604 = select i1 %safe.603, i32* %2591, i32* %2594
  %2595 = load i32, i32* %select.ptr.604, align 4
  %2596 = and i32 %2595, 65280
  %2597 = xor i32 %2587, %2596
  %2598 = and i32 %select.phi.645, 255
  %2599 = zext i32 %2598 to i64
  %2600 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2599
  %2601 = sext i32 256 to i64
  %2602 = icmp slt i64 %2599, %2601
  %2603 = bitcast i64* %shadow to i32*
  %safe.605 = or i1 %2342, %2602
  %select.ptr.606 = select i1 %safe.605, i32* %2600, i32* %2603
  %2604 = load i32, i32* %select.ptr.606, align 4
  %2605 = and i32 %2604, 255
  %2606 = xor i32 %2597, %2605
  %2607 = getelementptr inbounds i32, i32* %2387, i64 2
  %2608 = icmp slt i64 2, %len.
  %2609 = bitcast i64* %shadow to i32*
  %safe.607 = or i1 %2340, %2608
  %select.ptr.608 = select i1 %safe.607, i32* %2607, i32* %2609
  %2610 = load i32, i32* %select.ptr.608, align 4
  %2611 = xor i32 %2606, %2610
  %2612 = lshr i32 %2611, 24
  %2613 = trunc i32 %2612 to i8
  %2614 = getelementptr inbounds i8, i8* %3, i64 8
  %2615 = getelementptr inbounds i8, i8* %2614, i64 0
  %2616 = icmp slt i64 0, %len.2
  %2617 = bitcast i64* %shadow to i8*
  %safe.609 = or i1 %2338, %2616
  %select.ptr.610 = select i1 %safe.609, i8* %2615, i8* %2617
  %2618 = load i8, i8* %2615
  %2619 = sub i1 %2338, true
  %2620 = xor i1 %2619, true
  %2621 = sext i1 %2619 to i8
  %2622 = and i8 %2621, %2618
  %2623 = sext i1 %2620 to i8
  %2624 = and i8 %2623, %2613
  %select.val.611 = or i8 %2624, %2622
  store i8 %select.val.611, i8* %select.ptr.610, align 1
  %2625 = lshr i32 %2611, 16
  %2626 = trunc i32 %2625 to i8
  %2627 = getelementptr inbounds i8, i8* %3, i64 8
  %2628 = getelementptr inbounds i8, i8* %2627, i64 1
  %2629 = icmp slt i64 1, %len.2
  %2630 = bitcast i64* %shadow to i8*
  %safe.612 = or i1 %2336, %2629
  %select.ptr.613 = select i1 %safe.612, i8* %2628, i8* %2630
  %2631 = load i8, i8* %2628
  %2632 = sub i1 %2336, true
  %2633 = xor i1 %2632, true
  %2634 = sext i1 %2632 to i8
  %2635 = and i8 %2634, %2631
  %2636 = sext i1 %2633 to i8
  %2637 = and i8 %2636, %2626
  %select.val.614 = or i8 %2637, %2635
  store i8 %select.val.614, i8* %select.ptr.613, align 1
  %2638 = lshr i32 %2611, 8
  %2639 = trunc i32 %2638 to i8
  %2640 = getelementptr inbounds i8, i8* %3, i64 8
  %2641 = getelementptr inbounds i8, i8* %2640, i64 2
  %2642 = icmp slt i64 2, %len.2
  %2643 = bitcast i64* %shadow to i8*
  %safe.615 = or i1 %2334, %2642
  %select.ptr.616 = select i1 %safe.615, i8* %2641, i8* %2643
  %2644 = load i8, i8* %2641
  %2645 = sub i1 %2334, true
  %2646 = xor i1 %2645, true
  %2647 = sext i1 %2645 to i8
  %2648 = and i8 %2647, %2644
  %2649 = sext i1 %2646 to i8
  %2650 = and i8 %2649, %2639
  %select.val.617 = or i8 %2650, %2648
  store i8 %select.val.617, i8* %select.ptr.616, align 1
  %2651 = trunc i32 %2611 to i8
  %2652 = getelementptr inbounds i8, i8* %3, i64 8
  %2653 = getelementptr inbounds i8, i8* %2652, i64 3
  %2654 = icmp slt i64 3, %len.2
  %2655 = bitcast i64* %shadow to i8*
  %safe.618 = or i1 %2332, %2654
  %select.ptr.619 = select i1 %safe.618, i8* %2653, i8* %2655
  %2656 = load i8, i8* %2653
  %2657 = sub i1 %2332, true
  %2658 = xor i1 %2657, true
  %2659 = sext i1 %2657 to i8
  %2660 = and i8 %2659, %2656
  %2661 = sext i1 %2658 to i8
  %2662 = and i8 %2661, %2651
  %select.val.620 = or i8 %2662, %2660
  store i8 %select.val.620, i8* %select.ptr.619, align 1
  %2663 = lshr i32 %select.phi.643, 24
  %2664 = zext i32 %2663 to i64
  %2665 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2664
  %2666 = sext i32 256 to i64
  %2667 = icmp slt i64 %2664, %2666
  %2668 = bitcast i64* %shadow to i32*
  %safe.621 = or i1 %2330, %2667
  %select.ptr.622 = select i1 %safe.621, i32* %2665, i32* %2668
  %2669 = load i32, i32* %select.ptr.622, align 4
  %2670 = and i32 %2669, -16777216
  %2671 = lshr i32 %select.phi.646, 16
  %2672 = and i32 %2671, 255
  %2673 = zext i32 %2672 to i64
  %2674 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2673
  %2675 = sext i32 256 to i64
  %2676 = icmp slt i64 %2673, %2675
  %2677 = bitcast i64* %shadow to i32*
  %safe.623 = or i1 %2328, %2676
  %select.ptr.624 = select i1 %safe.623, i32* %2674, i32* %2677
  %2678 = load i32, i32* %select.ptr.624, align 4
  %2679 = and i32 %2678, 16711680
  %2680 = xor i32 %2670, %2679
  %2681 = lshr i32 %select.phi.645, 8
  %2682 = and i32 %2681, 255
  %2683 = zext i32 %2682 to i64
  %2684 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2683
  %2685 = sext i32 256 to i64
  %2686 = icmp slt i64 %2683, %2685
  %2687 = bitcast i64* %shadow to i32*
  %safe.625 = or i1 %2326, %2686
  %select.ptr.626 = select i1 %safe.625, i32* %2684, i32* %2687
  %2688 = load i32, i32* %select.ptr.626, align 4
  %2689 = and i32 %2688, 65280
  %2690 = xor i32 %2680, %2689
  %2691 = and i32 %select.phi.644, 255
  %2692 = zext i32 %2691 to i64
  %2693 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2692
  %2694 = sext i32 256 to i64
  %2695 = icmp slt i64 %2692, %2694
  %2696 = bitcast i64* %shadow to i32*
  %safe.627 = or i1 %2324, %2695
  %select.ptr.628 = select i1 %safe.627, i32* %2693, i32* %2696
  %2697 = load i32, i32* %select.ptr.628, align 4
  %2698 = and i32 %2697, 255
  %2699 = xor i32 %2690, %2698
  %2700 = getelementptr inbounds i32, i32* %2387, i64 3
  %2701 = icmp slt i64 3, %len.
  %2702 = bitcast i64* %shadow to i32*
  %safe.629 = or i1 %2322, %2701
  %select.ptr.630 = select i1 %safe.629, i32* %2700, i32* %2702
  %2703 = load i32, i32* %select.ptr.630, align 4
  %2704 = xor i32 %2699, %2703
  %2705 = lshr i32 %2704, 24
  %2706 = trunc i32 %2705 to i8
  %2707 = getelementptr inbounds i8, i8* %3, i64 12
  %2708 = getelementptr inbounds i8, i8* %2707, i64 0
  %2709 = icmp slt i64 0, %len.2
  %2710 = bitcast i64* %shadow to i8*
  %safe.631 = or i1 %2320, %2709
  %select.ptr.632 = select i1 %safe.631, i8* %2708, i8* %2710
  %2711 = load i8, i8* %2708
  %2712 = sub i1 %2320, true
  %2713 = xor i1 %2712, true
  %2714 = sext i1 %2712 to i8
  %2715 = and i8 %2714, %2711
  %2716 = sext i1 %2713 to i8
  %2717 = and i8 %2716, %2706
  %select.val.633 = or i8 %2717, %2715
  store i8 %select.val.633, i8* %select.ptr.632, align 1
  %2718 = lshr i32 %2704, 16
  %2719 = trunc i32 %2718 to i8
  %2720 = getelementptr inbounds i8, i8* %3, i64 12
  %2721 = getelementptr inbounds i8, i8* %2720, i64 1
  %2722 = icmp slt i64 1, %len.2
  %2723 = bitcast i64* %shadow to i8*
  %safe.634 = or i1 %2318, %2722
  %select.ptr.635 = select i1 %safe.634, i8* %2721, i8* %2723
  %2724 = load i8, i8* %2721
  %2725 = sub i1 %2318, true
  %2726 = xor i1 %2725, true
  %2727 = sext i1 %2725 to i8
  %2728 = and i8 %2727, %2724
  %2729 = sext i1 %2726 to i8
  %2730 = and i8 %2729, %2719
  %select.val.636 = or i8 %2730, %2728
  store i8 %select.val.636, i8* %select.ptr.635, align 1
  %2731 = lshr i32 %2704, 8
  %2732 = trunc i32 %2731 to i8
  %2733 = getelementptr inbounds i8, i8* %3, i64 12
  %2734 = getelementptr inbounds i8, i8* %2733, i64 2
  %2735 = icmp slt i64 2, %len.2
  %2736 = bitcast i64* %shadow to i8*
  %safe.637 = or i1 %2316, %2735
  %select.ptr.638 = select i1 %safe.637, i8* %2734, i8* %2736
  %2737 = load i8, i8* %2734
  %2738 = sub i1 %2316, true
  %2739 = xor i1 %2738, true
  %2740 = sext i1 %2738 to i8
  %2741 = and i8 %2740, %2737
  %2742 = sext i1 %2739 to i8
  %2743 = and i8 %2742, %2732
  %select.val.639 = or i8 %2743, %2741
  store i8 %select.val.639, i8* %select.ptr.638, align 1
  %2744 = trunc i32 %2704 to i8
  %2745 = getelementptr inbounds i8, i8* %3, i64 12
  %2746 = getelementptr inbounds i8, i8* %2745, i64 3
  %2747 = icmp slt i64 3, %len.2
  %2748 = bitcast i64* %shadow to i8*
  %safe.640 = or i1 %2314, %2747
  %select.ptr.641 = select i1 %safe.640, i8* %2746, i8* %2748
  %2749 = load i8, i8* %2746
  %2750 = sub i1 %2314, true
  %2751 = xor i1 %2750, true
  %2752 = sext i1 %2750 to i8
  %2753 = and i8 %2752, %2749
  %2754 = sext i1 %2751 to i8
  %2755 = and i8 %2754, %2744
  %select.val.642 = or i8 %2755, %2753
  store i8 %select.val.642, i8* %select.ptr.641, align 1
  %2756 = or i1 %in.28, %in.27
  %2757 = or i1 %2756, %2308
  store i1 %2757, i1* %out.17
  ret void
}

define i32 @rijndaelKeySetupEnc(i32* %0, i64 %len., i8* %1, i64 %len.1, i32 %2) {
.preheader8:
  %3 = getelementptr inbounds i8, i8* %1, i64 0
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = shl i32 %5, 24
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl i32 %9, 16
  %11 = xor i32 %6, %10
  %12 = getelementptr inbounds i8, i8* %1, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl i32 %14, 8
  %16 = xor i32 %11, %15
  %17 = getelementptr inbounds i8, i8* %1, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = xor i32 %16, %19
  %21 = getelementptr inbounds i32, i32* %0, i64 0
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %1, i64 4
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl i32 %25, 24
  %27 = getelementptr inbounds i8, i8* %1, i64 4
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl i32 %30, 16
  %32 = xor i32 %26, %31
  %33 = getelementptr inbounds i8, i8* %1, i64 4
  %34 = getelementptr inbounds i8, i8* %33, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl i32 %36, 8
  %38 = xor i32 %32, %37
  %39 = getelementptr inbounds i8, i8* %1, i64 4
  %40 = getelementptr inbounds i8, i8* %39, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = xor i32 %38, %42
  %44 = getelementptr inbounds i32, i32* %0, i64 1
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %1, i64 8
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl i32 %48, 24
  %50 = getelementptr inbounds i8, i8* %1, i64 8
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl i32 %53, 16
  %55 = xor i32 %49, %54
  %56 = getelementptr inbounds i8, i8* %1, i64 8
  %57 = getelementptr inbounds i8, i8* %56, i64 2
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = shl i32 %59, 8
  %61 = xor i32 %55, %60
  %62 = getelementptr inbounds i8, i8* %1, i64 8
  %63 = getelementptr inbounds i8, i8* %62, i64 3
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = xor i32 %61, %65
  %67 = getelementptr inbounds i32, i32* %0, i64 2
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %1, i64 12
  %69 = getelementptr inbounds i8, i8* %68, i64 0
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl i32 %71, 24
  %73 = getelementptr inbounds i8, i8* %1, i64 12
  %74 = getelementptr inbounds i8, i8* %73, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = shl i32 %76, 16
  %78 = xor i32 %72, %77
  %79 = getelementptr inbounds i8, i8* %1, i64 12
  %80 = getelementptr inbounds i8, i8* %79, i64 2
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl i32 %82, 8
  %84 = xor i32 %78, %83
  %85 = getelementptr inbounds i8, i8* %1, i64 12
  %86 = getelementptr inbounds i8, i8* %85, i64 3
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = xor i32 %84, %88
  %90 = getelementptr inbounds i32, i32* %0, i64 3
  store i32 %89, i32* %90, align 4
  %91 = icmp eq i32 %2, 128
  %shadow = alloca i64
  %out. = alloca i1
  %out.2 = alloca i1
  %out.3 = alloca i1
  %out.4 = alloca i1
  %out.5 = alloca i1
  %out.6 = alloca i1
  %out.7 = alloca i1
  %out.8 = alloca i1
  %out.9 = alloca i1
  %out.10 = alloca i1
  %out.11 = alloca i1
  %out.12 = alloca i1
  %out.13 = alloca i1
  %out.14 = alloca i1
  %out.15 = alloca i1
  %out.16 = alloca i1
  %out.17 = alloca i1
  %out.18 = alloca i1
  %out.19 = alloca i1
  %out.20 = alloca i1
  %out.21 = alloca i1
  %out.22 = alloca i1
  %out.23 = alloca i1
  %out.24 = alloca i1
  %out.25 = alloca i1
  %out.26 = alloca i1
  %out.27 = alloca i1
  store i1 true, i1* %out.
  %92 = load i1, i1* %out.
  %93 = xor i1 %91, true
  %in.28 = and i1 %92, %93
  %94 = getelementptr inbounds i8, i8* %1, i64 16
  %95 = getelementptr inbounds i8, i8* %94, i64 0
  %96 = icmp slt i64 0, %len.1
  %97 = bitcast i64* %shadow to i8*
  %safe.392 = or i1 %in.28, %96
  %select.ptr.393 = select i1 %safe.392, i8* %95, i8* %97
  %98 = load i8, i8* %select.ptr.393, align 1
  %99 = zext i8 %98 to i32
  %100 = shl i32 %99, 24
  %101 = getelementptr inbounds i8, i8* %1, i64 16
  %102 = getelementptr inbounds i8, i8* %101, i64 1
  %103 = icmp slt i64 1, %len.1
  %104 = bitcast i64* %shadow to i8*
  %safe.394 = or i1 %in.28, %103
  %select.ptr.395 = select i1 %safe.394, i8* %102, i8* %104
  %105 = load i8, i8* %select.ptr.395, align 1
  %106 = zext i8 %105 to i32
  %107 = shl i32 %106, 16
  %108 = xor i32 %100, %107
  %109 = getelementptr inbounds i8, i8* %1, i64 16
  %110 = getelementptr inbounds i8, i8* %109, i64 2
  %111 = icmp slt i64 2, %len.1
  %112 = bitcast i64* %shadow to i8*
  %safe.396 = or i1 %in.28, %111
  %select.ptr.397 = select i1 %safe.396, i8* %110, i8* %112
  %113 = load i8, i8* %select.ptr.397, align 1
  %114 = zext i8 %113 to i32
  %115 = shl i32 %114, 8
  %116 = xor i32 %108, %115
  %117 = getelementptr inbounds i8, i8* %1, i64 16
  %118 = getelementptr inbounds i8, i8* %117, i64 3
  %119 = icmp slt i64 3, %len.1
  %120 = bitcast i64* %shadow to i8*
  %safe.398 = or i1 %in.28, %119
  %select.ptr.399 = select i1 %safe.398, i8* %118, i8* %120
  %121 = load i8, i8* %select.ptr.399, align 1
  %122 = zext i8 %121 to i32
  %123 = xor i32 %116, %122
  %124 = getelementptr inbounds i32, i32* %0, i64 4
  %125 = icmp slt i64 4, %len.
  %126 = bitcast i64* %shadow to i32*
  %safe.400 = or i1 %in.28, %125
  %select.ptr.401 = select i1 %safe.400, i32* %124, i32* %126
  %127 = load i32, i32* %124
  %128 = sub i1 %in.28, true
  %129 = xor i1 %128, true
  %130 = sext i1 %128 to i32
  %131 = and i32 %130, %127
  %132 = sext i1 %129 to i32
  %133 = and i32 %132, %123
  %select.val.402 = or i32 %133, %131
  store i32 %select.val.402, i32* %select.ptr.401, align 4
  %134 = getelementptr inbounds i8, i8* %1, i64 20
  %135 = getelementptr inbounds i8, i8* %134, i64 0
  %136 = icmp slt i64 0, %len.1
  %137 = bitcast i64* %shadow to i8*
  %safe.403 = or i1 %in.28, %136
  %select.ptr.404 = select i1 %safe.403, i8* %135, i8* %137
  %138 = load i8, i8* %select.ptr.404, align 1
  %139 = zext i8 %138 to i32
  %140 = shl i32 %139, 24
  %141 = getelementptr inbounds i8, i8* %1, i64 20
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  %143 = icmp slt i64 1, %len.1
  %144 = bitcast i64* %shadow to i8*
  %safe.405 = or i1 %in.28, %143
  %select.ptr.406 = select i1 %safe.405, i8* %142, i8* %144
  %145 = load i8, i8* %select.ptr.406, align 1
  %146 = zext i8 %145 to i32
  %147 = shl i32 %146, 16
  %148 = xor i32 %140, %147
  %149 = getelementptr inbounds i8, i8* %1, i64 20
  %150 = getelementptr inbounds i8, i8* %149, i64 2
  %151 = icmp slt i64 2, %len.1
  %152 = bitcast i64* %shadow to i8*
  %safe.407 = or i1 %in.28, %151
  %select.ptr.408 = select i1 %safe.407, i8* %150, i8* %152
  %153 = load i8, i8* %select.ptr.408, align 1
  %154 = zext i8 %153 to i32
  %155 = shl i32 %154, 8
  %156 = xor i32 %148, %155
  %157 = getelementptr inbounds i8, i8* %1, i64 20
  %158 = getelementptr inbounds i8, i8* %157, i64 3
  %159 = icmp slt i64 3, %len.1
  %160 = bitcast i64* %shadow to i8*
  %safe.409 = or i1 %in.28, %159
  %select.ptr.410 = select i1 %safe.409, i8* %158, i8* %160
  %161 = load i8, i8* %select.ptr.410, align 1
  %162 = zext i8 %161 to i32
  %163 = xor i32 %156, %162
  %164 = getelementptr inbounds i32, i32* %0, i64 5
  %165 = icmp slt i64 5, %len.
  %166 = bitcast i64* %shadow to i32*
  %safe.411 = or i1 %in.28, %165
  %select.ptr.412 = select i1 %safe.411, i32* %164, i32* %166
  %167 = load i32, i32* %164
  %168 = sub i1 %in.28, true
  %169 = xor i1 %168, true
  %170 = sext i1 %168 to i32
  %171 = and i32 %170, %167
  %172 = sext i1 %169 to i32
  %173 = and i32 %172, %163
  %select.val.413 = or i32 %173, %171
  store i32 %select.val.413, i32* %select.ptr.412, align 4
  %174 = icmp eq i32 %2, 192
  store i1 %in.28, i1* %out.4
  %175 = load i1, i1* %out.4
  %176 = xor i1 %174, true
  %in.30 = and i1 %175, %176
  %177 = getelementptr inbounds i8, i8* %1, i64 24
  %178 = getelementptr inbounds i8, i8* %177, i64 0
  %179 = icmp slt i64 0, %len.1
  %180 = bitcast i64* %shadow to i8*
  %safe.498 = or i1 %in.30, %179
  %select.ptr.499 = select i1 %safe.498, i8* %178, i8* %180
  %181 = load i8, i8* %select.ptr.499, align 1
  %182 = zext i8 %181 to i32
  %183 = shl i32 %182, 24
  %184 = getelementptr inbounds i8, i8* %1, i64 24
  %185 = getelementptr inbounds i8, i8* %184, i64 1
  %186 = icmp slt i64 1, %len.1
  %187 = bitcast i64* %shadow to i8*
  %safe.500 = or i1 %in.30, %186
  %select.ptr.501 = select i1 %safe.500, i8* %185, i8* %187
  %188 = load i8, i8* %select.ptr.501, align 1
  %189 = zext i8 %188 to i32
  %190 = shl i32 %189, 16
  %191 = xor i32 %183, %190
  %192 = getelementptr inbounds i8, i8* %1, i64 24
  %193 = getelementptr inbounds i8, i8* %192, i64 2
  %194 = icmp slt i64 2, %len.1
  %195 = bitcast i64* %shadow to i8*
  %safe.502 = or i1 %in.30, %194
  %select.ptr.503 = select i1 %safe.502, i8* %193, i8* %195
  %196 = load i8, i8* %select.ptr.503, align 1
  %197 = zext i8 %196 to i32
  %198 = shl i32 %197, 8
  %199 = xor i32 %191, %198
  %200 = getelementptr inbounds i8, i8* %1, i64 24
  %201 = getelementptr inbounds i8, i8* %200, i64 3
  %202 = icmp slt i64 3, %len.1
  %203 = bitcast i64* %shadow to i8*
  %safe.504 = or i1 %in.30, %202
  %select.ptr.505 = select i1 %safe.504, i8* %201, i8* %203
  %204 = load i8, i8* %select.ptr.505, align 1
  %205 = zext i8 %204 to i32
  %206 = xor i32 %199, %205
  %207 = getelementptr inbounds i32, i32* %0, i64 6
  %208 = icmp slt i64 6, %len.
  %209 = bitcast i64* %shadow to i32*
  %safe.506 = or i1 %in.30, %208
  %select.ptr.507 = select i1 %safe.506, i32* %207, i32* %209
  %210 = load i32, i32* %207
  %211 = sub i1 %in.30, true
  %212 = xor i1 %211, true
  %213 = sext i1 %211 to i32
  %214 = and i32 %213, %210
  %215 = sext i1 %212 to i32
  %216 = and i32 %215, %206
  %select.val.508 = or i32 %216, %214
  store i32 %select.val.508, i32* %select.ptr.507, align 4
  %217 = getelementptr inbounds i8, i8* %1, i64 28
  %218 = getelementptr inbounds i8, i8* %217, i64 0
  %219 = icmp slt i64 0, %len.1
  %220 = bitcast i64* %shadow to i8*
  %safe.509 = or i1 %in.30, %219
  %select.ptr.510 = select i1 %safe.509, i8* %218, i8* %220
  %221 = load i8, i8* %select.ptr.510, align 1
  %222 = zext i8 %221 to i32
  %223 = shl i32 %222, 24
  %224 = getelementptr inbounds i8, i8* %1, i64 28
  %225 = getelementptr inbounds i8, i8* %224, i64 1
  %226 = icmp slt i64 1, %len.1
  %227 = bitcast i64* %shadow to i8*
  %safe.511 = or i1 %in.30, %226
  %select.ptr.512 = select i1 %safe.511, i8* %225, i8* %227
  %228 = load i8, i8* %select.ptr.512, align 1
  %229 = zext i8 %228 to i32
  %230 = shl i32 %229, 16
  %231 = xor i32 %223, %230
  %232 = getelementptr inbounds i8, i8* %1, i64 28
  %233 = getelementptr inbounds i8, i8* %232, i64 2
  %234 = icmp slt i64 2, %len.1
  %235 = bitcast i64* %shadow to i8*
  %safe.513 = or i1 %in.30, %234
  %select.ptr.514 = select i1 %safe.513, i8* %233, i8* %235
  %236 = load i8, i8* %select.ptr.514, align 1
  %237 = zext i8 %236 to i32
  %238 = shl i32 %237, 8
  %239 = xor i32 %231, %238
  %240 = getelementptr inbounds i8, i8* %1, i64 28
  %241 = getelementptr inbounds i8, i8* %240, i64 3
  %242 = icmp slt i64 3, %len.1
  %243 = bitcast i64* %shadow to i8*
  %safe.515 = or i1 %in.30, %242
  %select.ptr.516 = select i1 %safe.515, i8* %241, i8* %243
  %244 = load i8, i8* %select.ptr.516, align 1
  %245 = zext i8 %244 to i32
  %246 = xor i32 %239, %245
  %247 = getelementptr inbounds i32, i32* %0, i64 7
  %248 = icmp slt i64 7, %len.
  %249 = bitcast i64* %shadow to i32*
  %safe.517 = or i1 %in.30, %248
  %select.ptr.518 = select i1 %safe.517, i32* %247, i32* %249
  %250 = load i32, i32* %247
  %251 = sub i1 %in.30, true
  %252 = xor i1 %251, true
  %253 = sext i1 %251 to i32
  %254 = and i32 %253, %250
  %255 = sext i1 %252 to i32
  %256 = and i32 %255, %246
  %select.val.519 = or i32 %256, %254
  store i32 %select.val.519, i32* %select.ptr.518, align 4
  %257 = icmp eq i32 %2, 256
  store i1 %in.30, i1* %out.8
  %258 = load i1, i1* %out.8
  %in.31 = and i1 %258, %257
  store i1 %in.31, i1* %out.9
  %259 = load i1, i1* %out.9
  %260 = getelementptr inbounds i32, i32* %0, i64 7
  %261 = icmp slt i64 7, %len.
  %262 = bitcast i64* %shadow to i32*
  %safe.520 = or i1 %259, %261
  %select.ptr.521 = select i1 %safe.520, i32* %260, i32* %262
  %263 = load i32, i32* %select.ptr.521, align 4
  %264 = load i32, i32* %0, align 4
  %265 = lshr i32 %263, 16
  %266 = and i32 %265, 255
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %267
  %269 = sext i32 256 to i64
  %270 = icmp slt i64 %267, %269
  %271 = bitcast i64* %shadow to i32*
  %safe.522 = or i1 %259, %270
  %select.ptr.523 = select i1 %safe.522, i32* %268, i32* %271
  %272 = load i32, i32* %select.ptr.523, align 4
  %273 = and i32 %272, -16777216
  %274 = xor i32 %264, %273
  %275 = lshr i32 %263, 8
  %276 = and i32 %275, 255
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %277
  %279 = sext i32 256 to i64
  %280 = icmp slt i64 %277, %279
  %281 = bitcast i64* %shadow to i32*
  %safe.524 = or i1 %259, %280
  %select.ptr.525 = select i1 %safe.524, i32* %278, i32* %281
  %282 = load i32, i32* %select.ptr.525, align 4
  %283 = and i32 %282, 16711680
  %284 = xor i32 %274, %283
  %285 = and i32 %263, 255
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %286
  %288 = sext i32 256 to i64
  %289 = icmp slt i64 %286, %288
  %290 = bitcast i64* %shadow to i32*
  %safe.526 = or i1 %259, %289
  %select.ptr.527 = select i1 %safe.526, i32* %287, i32* %290
  %291 = load i32, i32* %select.ptr.527, align 4
  %292 = and i32 %291, 65280
  %293 = xor i32 %284, %292
  %294 = lshr i32 %263, 24
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %295
  %297 = sext i32 256 to i64
  %298 = icmp slt i64 %295, %297
  %299 = bitcast i64* %shadow to i32*
  %safe.528 = or i1 %259, %298
  %select.ptr.529 = select i1 %safe.528, i32* %296, i32* %299
  %300 = load i32, i32* %select.ptr.529, align 4
  %301 = and i32 %300, 255
  %302 = xor i32 %293, %301
  %303 = xor i32 %302, 16777216
  %304 = getelementptr inbounds i32, i32* %0, i64 8
  %305 = icmp slt i64 8, %len.
  %306 = bitcast i64* %shadow to i32*
  %safe.530 = or i1 %259, %305
  %select.ptr.531 = select i1 %safe.530, i32* %304, i32* %306
  %307 = load i32, i32* %304
  %308 = sub i1 %259, true
  %309 = xor i1 %308, true
  %310 = sext i1 %308 to i32
  %311 = and i32 %310, %307
  %312 = sext i1 %309 to i32
  %313 = and i32 %312, %303
  %select.val.532 = or i32 %313, %311
  store i32 %select.val.532, i32* %select.ptr.531, align 4
  %314 = getelementptr inbounds i32, i32* %0, i64 1
  %315 = icmp slt i64 1, %len.
  %316 = bitcast i64* %shadow to i32*
  %safe.533 = or i1 %259, %315
  %select.ptr.534 = select i1 %safe.533, i32* %314, i32* %316
  %317 = load i32, i32* %select.ptr.534, align 4
  %318 = getelementptr inbounds i32, i32* %0, i64 8
  %319 = icmp slt i64 8, %len.
  %320 = bitcast i64* %shadow to i32*
  %safe.535 = or i1 %259, %319
  %select.ptr.536 = select i1 %safe.535, i32* %318, i32* %320
  %321 = load i32, i32* %select.ptr.536, align 4
  %322 = xor i32 %317, %321
  %323 = getelementptr inbounds i32, i32* %0, i64 9
  %324 = icmp slt i64 9, %len.
  %325 = bitcast i64* %shadow to i32*
  %safe.537 = or i1 %259, %324
  %select.ptr.538 = select i1 %safe.537, i32* %323, i32* %325
  %326 = load i32, i32* %323
  %327 = sub i1 %259, true
  %328 = xor i1 %327, true
  %329 = sext i1 %327 to i32
  %330 = and i32 %329, %326
  %331 = sext i1 %328 to i32
  %332 = and i32 %331, %322
  %select.val.539 = or i32 %332, %330
  store i32 %select.val.539, i32* %select.ptr.538, align 4
  %333 = getelementptr inbounds i32, i32* %0, i64 2
  %334 = icmp slt i64 2, %len.
  %335 = bitcast i64* %shadow to i32*
  %safe.540 = or i1 %259, %334
  %select.ptr.541 = select i1 %safe.540, i32* %333, i32* %335
  %336 = load i32, i32* %select.ptr.541, align 4
  %337 = getelementptr inbounds i32, i32* %0, i64 9
  %338 = icmp slt i64 9, %len.
  %339 = bitcast i64* %shadow to i32*
  %safe.542 = or i1 %259, %338
  %select.ptr.543 = select i1 %safe.542, i32* %337, i32* %339
  %340 = load i32, i32* %select.ptr.543, align 4
  %341 = xor i32 %336, %340
  %342 = getelementptr inbounds i32, i32* %0, i64 10
  %343 = icmp slt i64 10, %len.
  %344 = bitcast i64* %shadow to i32*
  %safe.544 = or i1 %259, %343
  %select.ptr.545 = select i1 %safe.544, i32* %342, i32* %344
  %345 = load i32, i32* %342
  %346 = sub i1 %259, true
  %347 = xor i1 %346, true
  %348 = sext i1 %346 to i32
  %349 = and i32 %348, %345
  %350 = sext i1 %347 to i32
  %351 = and i32 %350, %341
  %select.val.546 = or i32 %351, %349
  store i32 %select.val.546, i32* %select.ptr.545, align 4
  %352 = getelementptr inbounds i32, i32* %0, i64 3
  %353 = icmp slt i64 3, %len.
  %354 = bitcast i64* %shadow to i32*
  %safe.547 = or i1 %259, %353
  %select.ptr.548 = select i1 %safe.547, i32* %352, i32* %354
  %355 = load i32, i32* %select.ptr.548, align 4
  %356 = getelementptr inbounds i32, i32* %0, i64 10
  %357 = icmp slt i64 10, %len.
  %358 = bitcast i64* %shadow to i32*
  %safe.549 = or i1 %259, %357
  %select.ptr.550 = select i1 %safe.549, i32* %356, i32* %358
  %359 = load i32, i32* %select.ptr.550, align 4
  %360 = xor i32 %355, %359
  %361 = getelementptr inbounds i32, i32* %0, i64 11
  %362 = icmp slt i64 11, %len.
  %363 = bitcast i64* %shadow to i32*
  %safe.551 = or i1 %259, %362
  %select.ptr.552 = select i1 %safe.551, i32* %361, i32* %363
  %364 = load i32, i32* %361
  %365 = sub i1 %259, true
  %366 = xor i1 %365, true
  %367 = sext i1 %365 to i32
  %368 = and i32 %367, %364
  %369 = sext i1 %366 to i32
  %370 = and i32 %369, %360
  %select.val.553 = or i32 %370, %368
  store i32 %select.val.553, i32* %select.ptr.552, align 4
  store i1 %259, i1* %out.10
  %371 = load i1, i1* %out.10
  %372 = getelementptr inbounds i32, i32* %0, i64 11
  %373 = icmp slt i64 11, %len.
  %374 = bitcast i64* %shadow to i32*
  %safe.554 = or i1 %371, %373
  %select.ptr.555 = select i1 %safe.554, i32* %372, i32* %374
  %375 = load i32, i32* %select.ptr.555, align 4
  %376 = getelementptr inbounds i32, i32* %0, i64 4
  %377 = icmp slt i64 4, %len.
  %378 = bitcast i64* %shadow to i32*
  %safe.556 = or i1 %371, %377
  %select.ptr.557 = select i1 %safe.556, i32* %376, i32* %378
  %379 = load i32, i32* %select.ptr.557, align 4
  %380 = lshr i32 %375, 24
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %381
  %383 = sext i32 256 to i64
  %384 = icmp slt i64 %381, %383
  %385 = bitcast i64* %shadow to i32*
  %safe.558 = or i1 %371, %384
  %select.ptr.559 = select i1 %safe.558, i32* %382, i32* %385
  %386 = load i32, i32* %select.ptr.559, align 4
  %387 = and i32 %386, -16777216
  %388 = xor i32 %379, %387
  %389 = lshr i32 %375, 16
  %390 = and i32 %389, 255
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %391
  %393 = sext i32 256 to i64
  %394 = icmp slt i64 %391, %393
  %395 = bitcast i64* %shadow to i32*
  %safe.560 = or i1 %371, %394
  %select.ptr.561 = select i1 %safe.560, i32* %392, i32* %395
  %396 = load i32, i32* %select.ptr.561, align 4
  %397 = and i32 %396, 16711680
  %398 = xor i32 %388, %397
  %399 = lshr i32 %375, 8
  %400 = and i32 %399, 255
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %401
  %403 = sext i32 256 to i64
  %404 = icmp slt i64 %401, %403
  %405 = bitcast i64* %shadow to i32*
  %safe.562 = or i1 %371, %404
  %select.ptr.563 = select i1 %safe.562, i32* %402, i32* %405
  %406 = load i32, i32* %select.ptr.563, align 4
  %407 = and i32 %406, 65280
  %408 = xor i32 %398, %407
  %409 = and i32 %375, 255
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %410
  %412 = sext i32 256 to i64
  %413 = icmp slt i64 %410, %412
  %414 = bitcast i64* %shadow to i32*
  %safe.564 = or i1 %371, %413
  %select.ptr.565 = select i1 %safe.564, i32* %411, i32* %414
  %415 = load i32, i32* %select.ptr.565, align 4
  %416 = and i32 %415, 255
  %417 = xor i32 %408, %416
  %418 = getelementptr inbounds i32, i32* %0, i64 12
  %419 = icmp slt i64 12, %len.
  %420 = bitcast i64* %shadow to i32*
  %safe.566 = or i1 %371, %419
  %select.ptr.567 = select i1 %safe.566, i32* %418, i32* %420
  %421 = load i32, i32* %418
  %422 = sub i1 %371, true
  %423 = xor i1 %422, true
  %424 = sext i1 %422 to i32
  %425 = and i32 %424, %421
  %426 = sext i1 %423 to i32
  %427 = and i32 %426, %417
  %select.val.568 = or i32 %427, %425
  store i32 %select.val.568, i32* %select.ptr.567, align 4
  %428 = getelementptr inbounds i32, i32* %0, i64 5
  %429 = icmp slt i64 5, %len.
  %430 = bitcast i64* %shadow to i32*
  %safe.569 = or i1 %371, %429
  %select.ptr.570 = select i1 %safe.569, i32* %428, i32* %430
  %431 = load i32, i32* %select.ptr.570, align 4
  %432 = getelementptr inbounds i32, i32* %0, i64 12
  %433 = icmp slt i64 12, %len.
  %434 = bitcast i64* %shadow to i32*
  %safe.571 = or i1 %371, %433
  %select.ptr.572 = select i1 %safe.571, i32* %432, i32* %434
  %435 = load i32, i32* %select.ptr.572, align 4
  %436 = xor i32 %431, %435
  %437 = getelementptr inbounds i32, i32* %0, i64 13
  %438 = icmp slt i64 13, %len.
  %439 = bitcast i64* %shadow to i32*
  %safe.573 = or i1 %371, %438
  %select.ptr.574 = select i1 %safe.573, i32* %437, i32* %439
  %440 = load i32, i32* %437
  %441 = sub i1 %371, true
  %442 = xor i1 %441, true
  %443 = sext i1 %441 to i32
  %444 = and i32 %443, %440
  %445 = sext i1 %442 to i32
  %446 = and i32 %445, %436
  %select.val.575 = or i32 %446, %444
  store i32 %select.val.575, i32* %select.ptr.574, align 4
  %447 = getelementptr inbounds i32, i32* %0, i64 6
  %448 = icmp slt i64 6, %len.
  %449 = bitcast i64* %shadow to i32*
  %safe.576 = or i1 %371, %448
  %select.ptr.577 = select i1 %safe.576, i32* %447, i32* %449
  %450 = load i32, i32* %select.ptr.577, align 4
  %451 = getelementptr inbounds i32, i32* %0, i64 13
  %452 = icmp slt i64 13, %len.
  %453 = bitcast i64* %shadow to i32*
  %safe.578 = or i1 %371, %452
  %select.ptr.579 = select i1 %safe.578, i32* %451, i32* %453
  %454 = load i32, i32* %select.ptr.579, align 4
  %455 = xor i32 %450, %454
  %456 = getelementptr inbounds i32, i32* %0, i64 14
  %457 = icmp slt i64 14, %len.
  %458 = bitcast i64* %shadow to i32*
  %safe.580 = or i1 %371, %457
  %select.ptr.581 = select i1 %safe.580, i32* %456, i32* %458
  %459 = load i32, i32* %456
  %460 = sub i1 %371, true
  %461 = xor i1 %460, true
  %462 = sext i1 %460 to i32
  %463 = and i32 %462, %459
  %464 = sext i1 %461 to i32
  %465 = and i32 %464, %455
  %select.val.582 = or i32 %465, %463
  store i32 %select.val.582, i32* %select.ptr.581, align 4
  %466 = getelementptr inbounds i32, i32* %0, i64 7
  %467 = icmp slt i64 7, %len.
  %468 = bitcast i64* %shadow to i32*
  %safe.583 = or i1 %371, %467
  %select.ptr.584 = select i1 %safe.583, i32* %466, i32* %468
  %469 = load i32, i32* %select.ptr.584, align 4
  %470 = getelementptr inbounds i32, i32* %0, i64 14
  %471 = icmp slt i64 14, %len.
  %472 = bitcast i64* %shadow to i32*
  %safe.585 = or i1 %371, %471
  %select.ptr.586 = select i1 %safe.585, i32* %470, i32* %472
  %473 = load i32, i32* %select.ptr.586, align 4
  %474 = xor i32 %469, %473
  %475 = getelementptr inbounds i32, i32* %0, i64 15
  %476 = icmp slt i64 15, %len.
  %477 = bitcast i64* %shadow to i32*
  %safe.587 = or i1 %371, %476
  %select.ptr.588 = select i1 %safe.587, i32* %475, i32* %477
  %478 = load i32, i32* %475
  %479 = sub i1 %371, true
  %480 = xor i1 %479, true
  %481 = sext i1 %479 to i32
  %482 = and i32 %481, %478
  %483 = sext i1 %480 to i32
  %484 = and i32 %483, %474
  %select.val.589 = or i32 %484, %482
  store i32 %select.val.589, i32* %select.ptr.588, align 4
  %485 = getelementptr inbounds i32, i32* %0, i64 8
  %486 = getelementptr inbounds i32, i32* %485, i64 7
  %487 = icmp slt i64 7, %len.
  %488 = bitcast i64* %shadow to i32*
  %safe.590 = or i1 %371, %487
  %select.ptr.591 = select i1 %safe.590, i32* %486, i32* %488
  %489 = load i32, i32* %select.ptr.591, align 4
  %490 = icmp slt i64 8, %len.
  %491 = bitcast i64* %shadow to i32*
  %safe.592 = or i1 %371, %490
  %select.ptr.593 = select i1 %safe.592, i32* %485, i32* %491
  %492 = load i32, i32* %select.ptr.593, align 4
  %493 = lshr i32 %489, 16
  %494 = and i32 %493, 255
  %495 = zext i32 %494 to i64
  %496 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %495
  %497 = sext i32 256 to i64
  %498 = icmp slt i64 %495, %497
  %499 = bitcast i64* %shadow to i32*
  %safe.594 = or i1 %371, %498
  %select.ptr.595 = select i1 %safe.594, i32* %496, i32* %499
  %500 = load i32, i32* %select.ptr.595, align 4
  %501 = and i32 %500, -16777216
  %502 = xor i32 %492, %501
  %503 = lshr i32 %489, 8
  %504 = and i32 %503, 255
  %505 = zext i32 %504 to i64
  %506 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %505
  %507 = sext i32 256 to i64
  %508 = icmp slt i64 %505, %507
  %509 = bitcast i64* %shadow to i32*
  %safe.596 = or i1 %371, %508
  %select.ptr.597 = select i1 %safe.596, i32* %506, i32* %509
  %510 = load i32, i32* %select.ptr.597, align 4
  %511 = and i32 %510, 16711680
  %512 = xor i32 %502, %511
  %513 = and i32 %489, 255
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %514
  %516 = sext i32 256 to i64
  %517 = icmp slt i64 %514, %516
  %518 = bitcast i64* %shadow to i32*
  %safe.598 = or i1 %371, %517
  %select.ptr.599 = select i1 %safe.598, i32* %515, i32* %518
  %519 = load i32, i32* %select.ptr.599, align 4
  %520 = and i32 %519, 65280
  %521 = xor i32 %512, %520
  %522 = lshr i32 %489, 24
  %523 = zext i32 %522 to i64
  %524 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %523
  %525 = sext i32 256 to i64
  %526 = icmp slt i64 %523, %525
  %527 = bitcast i64* %shadow to i32*
  %safe.600 = or i1 %371, %526
  %select.ptr.601 = select i1 %safe.600, i32* %524, i32* %527
  %528 = load i32, i32* %select.ptr.601, align 4
  %529 = and i32 %528, 255
  %530 = xor i32 %521, %529
  %531 = xor i32 %530, 33554432
  %532 = getelementptr inbounds i32, i32* %485, i64 8
  %533 = icmp slt i64 8, %len.
  %534 = bitcast i64* %shadow to i32*
  %safe.602 = or i1 %371, %533
  %select.ptr.603 = select i1 %safe.602, i32* %532, i32* %534
  %535 = load i32, i32* %532
  %536 = sub i1 %371, true
  %537 = xor i1 %536, true
  %538 = sext i1 %536 to i32
  %539 = and i32 %538, %535
  %540 = sext i1 %537 to i32
  %541 = and i32 %540, %531
  %select.val.604 = or i32 %541, %539
  store i32 %select.val.604, i32* %select.ptr.603, align 4
  %542 = getelementptr inbounds i32, i32* %485, i64 1
  %543 = icmp slt i64 1, %len.
  %544 = bitcast i64* %shadow to i32*
  %safe.605 = or i1 %371, %543
  %select.ptr.606 = select i1 %safe.605, i32* %542, i32* %544
  %545 = load i32, i32* %select.ptr.606, align 4
  %546 = getelementptr inbounds i32, i32* %485, i64 8
  %547 = icmp slt i64 8, %len.
  %548 = bitcast i64* %shadow to i32*
  %safe.607 = or i1 %371, %547
  %select.ptr.608 = select i1 %safe.607, i32* %546, i32* %548
  %549 = load i32, i32* %select.ptr.608, align 4
  %550 = xor i32 %545, %549
  %551 = getelementptr inbounds i32, i32* %485, i64 9
  %552 = icmp slt i64 9, %len.
  %553 = bitcast i64* %shadow to i32*
  %safe.609 = or i1 %371, %552
  %select.ptr.610 = select i1 %safe.609, i32* %551, i32* %553
  %554 = load i32, i32* %551
  %555 = sub i1 %371, true
  %556 = xor i1 %555, true
  %557 = sext i1 %555 to i32
  %558 = and i32 %557, %554
  %559 = sext i1 %556 to i32
  %560 = and i32 %559, %550
  %select.val.611 = or i32 %560, %558
  store i32 %select.val.611, i32* %select.ptr.610, align 4
  %561 = getelementptr inbounds i32, i32* %485, i64 2
  %562 = icmp slt i64 2, %len.
  %563 = bitcast i64* %shadow to i32*
  %safe.612 = or i1 %371, %562
  %select.ptr.613 = select i1 %safe.612, i32* %561, i32* %563
  %564 = load i32, i32* %select.ptr.613, align 4
  %565 = getelementptr inbounds i32, i32* %485, i64 9
  %566 = icmp slt i64 9, %len.
  %567 = bitcast i64* %shadow to i32*
  %safe.614 = or i1 %371, %566
  %select.ptr.615 = select i1 %safe.614, i32* %565, i32* %567
  %568 = load i32, i32* %select.ptr.615, align 4
  %569 = xor i32 %564, %568
  %570 = getelementptr inbounds i32, i32* %485, i64 10
  %571 = icmp slt i64 10, %len.
  %572 = bitcast i64* %shadow to i32*
  %safe.616 = or i1 %371, %571
  %select.ptr.617 = select i1 %safe.616, i32* %570, i32* %572
  %573 = load i32, i32* %570
  %574 = sub i1 %371, true
  %575 = xor i1 %574, true
  %576 = sext i1 %574 to i32
  %577 = and i32 %576, %573
  %578 = sext i1 %575 to i32
  %579 = and i32 %578, %569
  %select.val.618 = or i32 %579, %577
  store i32 %select.val.618, i32* %select.ptr.617, align 4
  %580 = getelementptr inbounds i32, i32* %485, i64 3
  %581 = icmp slt i64 3, %len.
  %582 = bitcast i64* %shadow to i32*
  %safe.619 = or i1 %371, %581
  %select.ptr.620 = select i1 %safe.619, i32* %580, i32* %582
  %583 = load i32, i32* %select.ptr.620, align 4
  %584 = getelementptr inbounds i32, i32* %485, i64 10
  %585 = icmp slt i64 10, %len.
  %586 = bitcast i64* %shadow to i32*
  %safe.621 = or i1 %371, %585
  %select.ptr.622 = select i1 %safe.621, i32* %584, i32* %586
  %587 = load i32, i32* %select.ptr.622, align 4
  %588 = xor i32 %583, %587
  %589 = getelementptr inbounds i32, i32* %485, i64 11
  %590 = icmp slt i64 11, %len.
  %591 = bitcast i64* %shadow to i32*
  %safe.623 = or i1 %371, %590
  %select.ptr.624 = select i1 %safe.623, i32* %589, i32* %591
  %592 = load i32, i32* %589
  %593 = sub i1 %371, true
  %594 = xor i1 %593, true
  %595 = sext i1 %593 to i32
  %596 = and i32 %595, %592
  %597 = sext i1 %594 to i32
  %598 = and i32 %597, %588
  %select.val.625 = or i32 %598, %596
  store i32 %select.val.625, i32* %select.ptr.624, align 4
  store i1 %371, i1* %out.11
  %599 = load i1, i1* %out.11
  %600 = getelementptr inbounds i32, i32* %485, i64 11
  %601 = icmp slt i64 11, %len.
  %602 = bitcast i64* %shadow to i32*
  %safe.940 = or i1 %599, %601
  %select.ptr.941 = select i1 %safe.940, i32* %600, i32* %602
  %603 = load i32, i32* %select.ptr.941, align 4
  %604 = getelementptr inbounds i32, i32* %485, i64 4
  %605 = icmp slt i64 4, %len.
  %606 = bitcast i64* %shadow to i32*
  %safe.942 = or i1 %599, %605
  %select.ptr.943 = select i1 %safe.942, i32* %604, i32* %606
  %607 = load i32, i32* %select.ptr.943, align 4
  %608 = lshr i32 %603, 24
  %609 = zext i32 %608 to i64
  %610 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %609
  %611 = sext i32 256 to i64
  %612 = icmp slt i64 %609, %611
  %613 = bitcast i64* %shadow to i32*
  %safe.944 = or i1 %599, %612
  %select.ptr.945 = select i1 %safe.944, i32* %610, i32* %613
  %614 = load i32, i32* %select.ptr.945, align 4
  %615 = and i32 %614, -16777216
  %616 = xor i32 %607, %615
  %617 = lshr i32 %603, 16
  %618 = and i32 %617, 255
  %619 = zext i32 %618 to i64
  %620 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %619
  %621 = sext i32 256 to i64
  %622 = icmp slt i64 %619, %621
  %623 = bitcast i64* %shadow to i32*
  %safe.946 = or i1 %599, %622
  %select.ptr.947 = select i1 %safe.946, i32* %620, i32* %623
  %624 = load i32, i32* %select.ptr.947, align 4
  %625 = and i32 %624, 16711680
  %626 = xor i32 %616, %625
  %627 = lshr i32 %603, 8
  %628 = and i32 %627, 255
  %629 = zext i32 %628 to i64
  %630 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %629
  %631 = sext i32 256 to i64
  %632 = icmp slt i64 %629, %631
  %633 = bitcast i64* %shadow to i32*
  %safe.948 = or i1 %599, %632
  %select.ptr.949 = select i1 %safe.948, i32* %630, i32* %633
  %634 = load i32, i32* %select.ptr.949, align 4
  %635 = and i32 %634, 65280
  %636 = xor i32 %626, %635
  %637 = and i32 %603, 255
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %638
  %640 = sext i32 256 to i64
  %641 = icmp slt i64 %638, %640
  %642 = bitcast i64* %shadow to i32*
  %safe.950 = or i1 %599, %641
  %select.ptr.951 = select i1 %safe.950, i32* %639, i32* %642
  %643 = load i32, i32* %select.ptr.951, align 4
  %644 = and i32 %643, 255
  %645 = xor i32 %636, %644
  %646 = getelementptr inbounds i32, i32* %485, i64 12
  %647 = icmp slt i64 12, %len.
  %648 = bitcast i64* %shadow to i32*
  %safe.952 = or i1 %599, %647
  %select.ptr.953 = select i1 %safe.952, i32* %646, i32* %648
  %649 = load i32, i32* %646
  %650 = sub i1 %599, true
  %651 = xor i1 %650, true
  %652 = sext i1 %650 to i32
  %653 = and i32 %652, %649
  %654 = sext i1 %651 to i32
  %655 = and i32 %654, %645
  %select.val.954 = or i32 %655, %653
  store i32 %select.val.954, i32* %select.ptr.953, align 4
  %656 = getelementptr inbounds i32, i32* %485, i64 5
  %657 = icmp slt i64 5, %len.
  %658 = bitcast i64* %shadow to i32*
  %safe.955 = or i1 %599, %657
  %select.ptr.956 = select i1 %safe.955, i32* %656, i32* %658
  %659 = load i32, i32* %select.ptr.956, align 4
  %660 = getelementptr inbounds i32, i32* %485, i64 12
  %661 = icmp slt i64 12, %len.
  %662 = bitcast i64* %shadow to i32*
  %safe.957 = or i1 %599, %661
  %select.ptr.958 = select i1 %safe.957, i32* %660, i32* %662
  %663 = load i32, i32* %select.ptr.958, align 4
  %664 = xor i32 %659, %663
  %665 = getelementptr inbounds i32, i32* %485, i64 13
  %666 = icmp slt i64 13, %len.
  %667 = bitcast i64* %shadow to i32*
  %safe.959 = or i1 %599, %666
  %select.ptr.960 = select i1 %safe.959, i32* %665, i32* %667
  %668 = load i32, i32* %665
  %669 = sub i1 %599, true
  %670 = xor i1 %669, true
  %671 = sext i1 %669 to i32
  %672 = and i32 %671, %668
  %673 = sext i1 %670 to i32
  %674 = and i32 %673, %664
  %select.val.961 = or i32 %674, %672
  store i32 %select.val.961, i32* %select.ptr.960, align 4
  %675 = getelementptr inbounds i32, i32* %485, i64 6
  %676 = icmp slt i64 6, %len.
  %677 = bitcast i64* %shadow to i32*
  %safe.962 = or i1 %599, %676
  %select.ptr.963 = select i1 %safe.962, i32* %675, i32* %677
  %678 = load i32, i32* %select.ptr.963, align 4
  %679 = getelementptr inbounds i32, i32* %485, i64 13
  %680 = icmp slt i64 13, %len.
  %681 = bitcast i64* %shadow to i32*
  %safe.964 = or i1 %599, %680
  %select.ptr.965 = select i1 %safe.964, i32* %679, i32* %681
  %682 = load i32, i32* %select.ptr.965, align 4
  %683 = xor i32 %678, %682
  %684 = getelementptr inbounds i32, i32* %485, i64 14
  %685 = icmp slt i64 14, %len.
  %686 = bitcast i64* %shadow to i32*
  %safe.966 = or i1 %599, %685
  %select.ptr.967 = select i1 %safe.966, i32* %684, i32* %686
  %687 = load i32, i32* %684
  %688 = sub i1 %599, true
  %689 = xor i1 %688, true
  %690 = sext i1 %688 to i32
  %691 = and i32 %690, %687
  %692 = sext i1 %689 to i32
  %693 = and i32 %692, %683
  %select.val.968 = or i32 %693, %691
  store i32 %select.val.968, i32* %select.ptr.967, align 4
  %694 = getelementptr inbounds i32, i32* %485, i64 7
  %695 = icmp slt i64 7, %len.
  %696 = bitcast i64* %shadow to i32*
  %safe.969 = or i1 %599, %695
  %select.ptr.970 = select i1 %safe.969, i32* %694, i32* %696
  %697 = load i32, i32* %select.ptr.970, align 4
  %698 = getelementptr inbounds i32, i32* %485, i64 14
  %699 = icmp slt i64 14, %len.
  %700 = bitcast i64* %shadow to i32*
  %safe.971 = or i1 %599, %699
  %select.ptr.972 = select i1 %safe.971, i32* %698, i32* %700
  %701 = load i32, i32* %select.ptr.972, align 4
  %702 = xor i32 %697, %701
  %703 = getelementptr inbounds i32, i32* %485, i64 15
  %704 = icmp slt i64 15, %len.
  %705 = bitcast i64* %shadow to i32*
  %safe.973 = or i1 %599, %704
  %select.ptr.974 = select i1 %safe.973, i32* %703, i32* %705
  %706 = load i32, i32* %703
  %707 = sub i1 %599, true
  %708 = xor i1 %707, true
  %709 = sext i1 %707 to i32
  %710 = and i32 %709, %706
  %711 = sext i1 %708 to i32
  %712 = and i32 %711, %702
  %select.val.975 = or i32 %712, %710
  store i32 %select.val.975, i32* %select.ptr.974, align 4
  %713 = getelementptr inbounds i32, i32* %485, i64 8
  %714 = getelementptr inbounds i32, i32* %713, i64 7
  %715 = icmp slt i64 7, %len.
  %716 = bitcast i64* %shadow to i32*
  %safe.976 = or i1 %599, %715
  %select.ptr.977 = select i1 %safe.976, i32* %714, i32* %716
  %717 = load i32, i32* %select.ptr.977, align 4
  %718 = icmp slt i64 8, %len.
  %719 = bitcast i64* %shadow to i32*
  %safe.978 = or i1 %599, %718
  %select.ptr.979 = select i1 %safe.978, i32* %713, i32* %719
  %720 = load i32, i32* %select.ptr.979, align 4
  %721 = lshr i32 %717, 16
  %722 = and i32 %721, 255
  %723 = zext i32 %722 to i64
  %724 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %723
  %725 = sext i32 256 to i64
  %726 = icmp slt i64 %723, %725
  %727 = bitcast i64* %shadow to i32*
  %safe.980 = or i1 %599, %726
  %select.ptr.981 = select i1 %safe.980, i32* %724, i32* %727
  %728 = load i32, i32* %select.ptr.981, align 4
  %729 = and i32 %728, -16777216
  %730 = xor i32 %720, %729
  %731 = lshr i32 %717, 8
  %732 = and i32 %731, 255
  %733 = zext i32 %732 to i64
  %734 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %733
  %735 = sext i32 256 to i64
  %736 = icmp slt i64 %733, %735
  %737 = bitcast i64* %shadow to i32*
  %safe.982 = or i1 %599, %736
  %select.ptr.983 = select i1 %safe.982, i32* %734, i32* %737
  %738 = load i32, i32* %select.ptr.983, align 4
  %739 = and i32 %738, 16711680
  %740 = xor i32 %730, %739
  %741 = and i32 %717, 255
  %742 = zext i32 %741 to i64
  %743 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %742
  %744 = sext i32 256 to i64
  %745 = icmp slt i64 %742, %744
  %746 = bitcast i64* %shadow to i32*
  %safe.984 = or i1 %599, %745
  %select.ptr.985 = select i1 %safe.984, i32* %743, i32* %746
  %747 = load i32, i32* %select.ptr.985, align 4
  %748 = and i32 %747, 65280
  %749 = xor i32 %740, %748
  %750 = lshr i32 %717, 24
  %751 = zext i32 %750 to i64
  %752 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %751
  %753 = sext i32 256 to i64
  %754 = icmp slt i64 %751, %753
  %755 = bitcast i64* %shadow to i32*
  %safe.986 = or i1 %599, %754
  %select.ptr.987 = select i1 %safe.986, i32* %752, i32* %755
  %756 = load i32, i32* %select.ptr.987, align 4
  %757 = and i32 %756, 255
  %758 = xor i32 %749, %757
  %759 = xor i32 %758, 67108864
  %760 = getelementptr inbounds i32, i32* %713, i64 8
  %761 = icmp slt i64 8, %len.
  %762 = bitcast i64* %shadow to i32*
  %safe.988 = or i1 %599, %761
  %select.ptr.989 = select i1 %safe.988, i32* %760, i32* %762
  %763 = load i32, i32* %760
  %764 = sub i1 %599, true
  %765 = xor i1 %764, true
  %766 = sext i1 %764 to i32
  %767 = and i32 %766, %763
  %768 = sext i1 %765 to i32
  %769 = and i32 %768, %759
  %select.val.990 = or i32 %769, %767
  store i32 %select.val.990, i32* %select.ptr.989, align 4
  %770 = getelementptr inbounds i32, i32* %713, i64 1
  %771 = icmp slt i64 1, %len.
  %772 = bitcast i64* %shadow to i32*
  %safe.991 = or i1 %599, %771
  %select.ptr.992 = select i1 %safe.991, i32* %770, i32* %772
  %773 = load i32, i32* %select.ptr.992, align 4
  %774 = getelementptr inbounds i32, i32* %713, i64 8
  %775 = icmp slt i64 8, %len.
  %776 = bitcast i64* %shadow to i32*
  %safe.993 = or i1 %599, %775
  %select.ptr.994 = select i1 %safe.993, i32* %774, i32* %776
  %777 = load i32, i32* %select.ptr.994, align 4
  %778 = xor i32 %773, %777
  %779 = getelementptr inbounds i32, i32* %713, i64 9
  %780 = icmp slt i64 9, %len.
  %781 = bitcast i64* %shadow to i32*
  %safe.995 = or i1 %599, %780
  %select.ptr.996 = select i1 %safe.995, i32* %779, i32* %781
  %782 = load i32, i32* %779
  %783 = sub i1 %599, true
  %784 = xor i1 %783, true
  %785 = sext i1 %783 to i32
  %786 = and i32 %785, %782
  %787 = sext i1 %784 to i32
  %788 = and i32 %787, %778
  %select.val.997 = or i32 %788, %786
  store i32 %select.val.997, i32* %select.ptr.996, align 4
  %789 = getelementptr inbounds i32, i32* %713, i64 2
  %790 = icmp slt i64 2, %len.
  %791 = bitcast i64* %shadow to i32*
  %safe.998 = or i1 %599, %790
  %select.ptr.999 = select i1 %safe.998, i32* %789, i32* %791
  %792 = load i32, i32* %select.ptr.999, align 4
  %793 = getelementptr inbounds i32, i32* %713, i64 9
  %794 = icmp slt i64 9, %len.
  %795 = bitcast i64* %shadow to i32*
  %safe.1000 = or i1 %599, %794
  %select.ptr.1001 = select i1 %safe.1000, i32* %793, i32* %795
  %796 = load i32, i32* %select.ptr.1001, align 4
  %797 = xor i32 %792, %796
  %798 = getelementptr inbounds i32, i32* %713, i64 10
  %799 = icmp slt i64 10, %len.
  %800 = bitcast i64* %shadow to i32*
  %safe.1002 = or i1 %599, %799
  %select.ptr.1003 = select i1 %safe.1002, i32* %798, i32* %800
  %801 = load i32, i32* %798
  %802 = sub i1 %599, true
  %803 = xor i1 %802, true
  %804 = sext i1 %802 to i32
  %805 = and i32 %804, %801
  %806 = sext i1 %803 to i32
  %807 = and i32 %806, %797
  %select.val.1004 = or i32 %807, %805
  store i32 %select.val.1004, i32* %select.ptr.1003, align 4
  %808 = getelementptr inbounds i32, i32* %713, i64 3
  %809 = icmp slt i64 3, %len.
  %810 = bitcast i64* %shadow to i32*
  %safe.1005 = or i1 %599, %809
  %select.ptr.1006 = select i1 %safe.1005, i32* %808, i32* %810
  %811 = load i32, i32* %select.ptr.1006, align 4
  %812 = getelementptr inbounds i32, i32* %713, i64 10
  %813 = icmp slt i64 10, %len.
  %814 = bitcast i64* %shadow to i32*
  %safe.1007 = or i1 %599, %813
  %select.ptr.1008 = select i1 %safe.1007, i32* %812, i32* %814
  %815 = load i32, i32* %select.ptr.1008, align 4
  %816 = xor i32 %811, %815
  %817 = getelementptr inbounds i32, i32* %713, i64 11
  %818 = icmp slt i64 11, %len.
  %819 = bitcast i64* %shadow to i32*
  %safe.1009 = or i1 %599, %818
  %select.ptr.1010 = select i1 %safe.1009, i32* %817, i32* %819
  %820 = load i32, i32* %817
  %821 = sub i1 %599, true
  %822 = xor i1 %821, true
  %823 = sext i1 %821 to i32
  %824 = and i32 %823, %820
  %825 = sext i1 %822 to i32
  %826 = and i32 %825, %816
  %select.val.1011 = or i32 %826, %824
  store i32 %select.val.1011, i32* %select.ptr.1010, align 4
  store i1 %599, i1* %out.22
  %827 = load i1, i1* %out.22
  %828 = getelementptr inbounds i32, i32* %713, i64 11
  %829 = icmp slt i64 11, %len.
  %830 = bitcast i64* %shadow to i32*
  %safe.1012 = or i1 %827, %829
  %select.ptr.1013 = select i1 %safe.1012, i32* %828, i32* %830
  %831 = load i32, i32* %select.ptr.1013, align 4
  %832 = getelementptr inbounds i32, i32* %713, i64 4
  %833 = icmp slt i64 4, %len.
  %834 = bitcast i64* %shadow to i32*
  %safe.1014 = or i1 %827, %833
  %select.ptr.1015 = select i1 %safe.1014, i32* %832, i32* %834
  %835 = load i32, i32* %select.ptr.1015, align 4
  %836 = lshr i32 %831, 24
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %837
  %839 = sext i32 256 to i64
  %840 = icmp slt i64 %837, %839
  %841 = bitcast i64* %shadow to i32*
  %safe.1016 = or i1 %827, %840
  %select.ptr.1017 = select i1 %safe.1016, i32* %838, i32* %841
  %842 = load i32, i32* %select.ptr.1017, align 4
  %843 = and i32 %842, -16777216
  %844 = xor i32 %835, %843
  %845 = lshr i32 %831, 16
  %846 = and i32 %845, 255
  %847 = zext i32 %846 to i64
  %848 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %847
  %849 = sext i32 256 to i64
  %850 = icmp slt i64 %847, %849
  %851 = bitcast i64* %shadow to i32*
  %safe.1018 = or i1 %827, %850
  %select.ptr.1019 = select i1 %safe.1018, i32* %848, i32* %851
  %852 = load i32, i32* %select.ptr.1019, align 4
  %853 = and i32 %852, 16711680
  %854 = xor i32 %844, %853
  %855 = lshr i32 %831, 8
  %856 = and i32 %855, 255
  %857 = zext i32 %856 to i64
  %858 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %857
  %859 = sext i32 256 to i64
  %860 = icmp slt i64 %857, %859
  %861 = bitcast i64* %shadow to i32*
  %safe.1020 = or i1 %827, %860
  %select.ptr.1021 = select i1 %safe.1020, i32* %858, i32* %861
  %862 = load i32, i32* %select.ptr.1021, align 4
  %863 = and i32 %862, 65280
  %864 = xor i32 %854, %863
  %865 = and i32 %831, 255
  %866 = zext i32 %865 to i64
  %867 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %866
  %868 = sext i32 256 to i64
  %869 = icmp slt i64 %866, %868
  %870 = bitcast i64* %shadow to i32*
  %safe.1022 = or i1 %827, %869
  %select.ptr.1023 = select i1 %safe.1022, i32* %867, i32* %870
  %871 = load i32, i32* %select.ptr.1023, align 4
  %872 = and i32 %871, 255
  %873 = xor i32 %864, %872
  %874 = getelementptr inbounds i32, i32* %713, i64 12
  %875 = icmp slt i64 12, %len.
  %876 = bitcast i64* %shadow to i32*
  %safe.1024 = or i1 %827, %875
  %select.ptr.1025 = select i1 %safe.1024, i32* %874, i32* %876
  %877 = load i32, i32* %874
  %878 = sub i1 %827, true
  %879 = xor i1 %878, true
  %880 = sext i1 %878 to i32
  %881 = and i32 %880, %877
  %882 = sext i1 %879 to i32
  %883 = and i32 %882, %873
  %select.val.1026 = or i32 %883, %881
  store i32 %select.val.1026, i32* %select.ptr.1025, align 4
  %884 = getelementptr inbounds i32, i32* %713, i64 5
  %885 = icmp slt i64 5, %len.
  %886 = bitcast i64* %shadow to i32*
  %safe.1027 = or i1 %827, %885
  %select.ptr.1028 = select i1 %safe.1027, i32* %884, i32* %886
  %887 = load i32, i32* %select.ptr.1028, align 4
  %888 = getelementptr inbounds i32, i32* %713, i64 12
  %889 = icmp slt i64 12, %len.
  %890 = bitcast i64* %shadow to i32*
  %safe.1029 = or i1 %827, %889
  %select.ptr.1030 = select i1 %safe.1029, i32* %888, i32* %890
  %891 = load i32, i32* %select.ptr.1030, align 4
  %892 = xor i32 %887, %891
  %893 = getelementptr inbounds i32, i32* %713, i64 13
  %894 = icmp slt i64 13, %len.
  %895 = bitcast i64* %shadow to i32*
  %safe.1031 = or i1 %827, %894
  %select.ptr.1032 = select i1 %safe.1031, i32* %893, i32* %895
  %896 = load i32, i32* %893
  %897 = sub i1 %827, true
  %898 = xor i1 %897, true
  %899 = sext i1 %897 to i32
  %900 = and i32 %899, %896
  %901 = sext i1 %898 to i32
  %902 = and i32 %901, %892
  %select.val.1033 = or i32 %902, %900
  store i32 %select.val.1033, i32* %select.ptr.1032, align 4
  %903 = getelementptr inbounds i32, i32* %713, i64 6
  %904 = icmp slt i64 6, %len.
  %905 = bitcast i64* %shadow to i32*
  %safe.1034 = or i1 %827, %904
  %select.ptr.1035 = select i1 %safe.1034, i32* %903, i32* %905
  %906 = load i32, i32* %select.ptr.1035, align 4
  %907 = getelementptr inbounds i32, i32* %713, i64 13
  %908 = icmp slt i64 13, %len.
  %909 = bitcast i64* %shadow to i32*
  %safe.1036 = or i1 %827, %908
  %select.ptr.1037 = select i1 %safe.1036, i32* %907, i32* %909
  %910 = load i32, i32* %select.ptr.1037, align 4
  %911 = xor i32 %906, %910
  %912 = getelementptr inbounds i32, i32* %713, i64 14
  %913 = icmp slt i64 14, %len.
  %914 = bitcast i64* %shadow to i32*
  %safe.1038 = or i1 %827, %913
  %select.ptr.1039 = select i1 %safe.1038, i32* %912, i32* %914
  %915 = load i32, i32* %912
  %916 = sub i1 %827, true
  %917 = xor i1 %916, true
  %918 = sext i1 %916 to i32
  %919 = and i32 %918, %915
  %920 = sext i1 %917 to i32
  %921 = and i32 %920, %911
  %select.val.1040 = or i32 %921, %919
  store i32 %select.val.1040, i32* %select.ptr.1039, align 4
  %922 = getelementptr inbounds i32, i32* %713, i64 7
  %923 = icmp slt i64 7, %len.
  %924 = bitcast i64* %shadow to i32*
  %safe.1041 = or i1 %827, %923
  %select.ptr.1042 = select i1 %safe.1041, i32* %922, i32* %924
  %925 = load i32, i32* %select.ptr.1042, align 4
  %926 = getelementptr inbounds i32, i32* %713, i64 14
  %927 = icmp slt i64 14, %len.
  %928 = bitcast i64* %shadow to i32*
  %safe.1043 = or i1 %827, %927
  %select.ptr.1044 = select i1 %safe.1043, i32* %926, i32* %928
  %929 = load i32, i32* %select.ptr.1044, align 4
  %930 = xor i32 %925, %929
  %931 = getelementptr inbounds i32, i32* %713, i64 15
  %932 = icmp slt i64 15, %len.
  %933 = bitcast i64* %shadow to i32*
  %safe.1045 = or i1 %827, %932
  %select.ptr.1046 = select i1 %safe.1045, i32* %931, i32* %933
  %934 = load i32, i32* %931
  %935 = sub i1 %827, true
  %936 = xor i1 %935, true
  %937 = sext i1 %935 to i32
  %938 = and i32 %937, %934
  %939 = sext i1 %936 to i32
  %940 = and i32 %939, %930
  %select.val.1047 = or i32 %940, %938
  store i32 %select.val.1047, i32* %select.ptr.1046, align 4
  %941 = getelementptr inbounds i32, i32* %713, i64 8
  %942 = getelementptr inbounds i32, i32* %941, i64 7
  %943 = icmp slt i64 7, %len.
  %944 = bitcast i64* %shadow to i32*
  %safe.1048 = or i1 %827, %943
  %select.ptr.1049 = select i1 %safe.1048, i32* %942, i32* %944
  %945 = load i32, i32* %select.ptr.1049, align 4
  %946 = icmp slt i64 8, %len.
  %947 = bitcast i64* %shadow to i32*
  %safe.1050 = or i1 %827, %946
  %select.ptr.1051 = select i1 %safe.1050, i32* %941, i32* %947
  %948 = load i32, i32* %select.ptr.1051, align 4
  %949 = lshr i32 %945, 16
  %950 = and i32 %949, 255
  %951 = zext i32 %950 to i64
  %952 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %951
  %953 = sext i32 256 to i64
  %954 = icmp slt i64 %951, %953
  %955 = bitcast i64* %shadow to i32*
  %safe.1052 = or i1 %827, %954
  %select.ptr.1053 = select i1 %safe.1052, i32* %952, i32* %955
  %956 = load i32, i32* %select.ptr.1053, align 4
  %957 = and i32 %956, -16777216
  %958 = xor i32 %948, %957
  %959 = lshr i32 %945, 8
  %960 = and i32 %959, 255
  %961 = zext i32 %960 to i64
  %962 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %961
  %963 = sext i32 256 to i64
  %964 = icmp slt i64 %961, %963
  %965 = bitcast i64* %shadow to i32*
  %safe.1054 = or i1 %827, %964
  %select.ptr.1055 = select i1 %safe.1054, i32* %962, i32* %965
  %966 = load i32, i32* %select.ptr.1055, align 4
  %967 = and i32 %966, 16711680
  %968 = xor i32 %958, %967
  %969 = and i32 %945, 255
  %970 = zext i32 %969 to i64
  %971 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %970
  %972 = sext i32 256 to i64
  %973 = icmp slt i64 %970, %972
  %974 = bitcast i64* %shadow to i32*
  %safe.1056 = or i1 %827, %973
  %select.ptr.1057 = select i1 %safe.1056, i32* %971, i32* %974
  %975 = load i32, i32* %select.ptr.1057, align 4
  %976 = and i32 %975, 65280
  %977 = xor i32 %968, %976
  %978 = lshr i32 %945, 24
  %979 = zext i32 %978 to i64
  %980 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %979
  %981 = sext i32 256 to i64
  %982 = icmp slt i64 %979, %981
  %983 = bitcast i64* %shadow to i32*
  %safe.1058 = or i1 %827, %982
  %select.ptr.1059 = select i1 %safe.1058, i32* %980, i32* %983
  %984 = load i32, i32* %select.ptr.1059, align 4
  %985 = and i32 %984, 255
  %986 = xor i32 %977, %985
  %987 = xor i32 %986, 134217728
  %988 = getelementptr inbounds i32, i32* %941, i64 8
  %989 = icmp slt i64 8, %len.
  %990 = bitcast i64* %shadow to i32*
  %safe.1060 = or i1 %827, %989
  %select.ptr.1061 = select i1 %safe.1060, i32* %988, i32* %990
  %991 = load i32, i32* %988
  %992 = sub i1 %827, true
  %993 = xor i1 %992, true
  %994 = sext i1 %992 to i32
  %995 = and i32 %994, %991
  %996 = sext i1 %993 to i32
  %997 = and i32 %996, %987
  %select.val.1062 = or i32 %997, %995
  store i32 %select.val.1062, i32* %select.ptr.1061, align 4
  %998 = getelementptr inbounds i32, i32* %941, i64 1
  %999 = icmp slt i64 1, %len.
  %1000 = bitcast i64* %shadow to i32*
  %safe.1063 = or i1 %827, %999
  %select.ptr.1064 = select i1 %safe.1063, i32* %998, i32* %1000
  %1001 = load i32, i32* %select.ptr.1064, align 4
  %1002 = getelementptr inbounds i32, i32* %941, i64 8
  %1003 = icmp slt i64 8, %len.
  %1004 = bitcast i64* %shadow to i32*
  %safe.1065 = or i1 %827, %1003
  %select.ptr.1066 = select i1 %safe.1065, i32* %1002, i32* %1004
  %1005 = load i32, i32* %select.ptr.1066, align 4
  %1006 = xor i32 %1001, %1005
  %1007 = getelementptr inbounds i32, i32* %941, i64 9
  %1008 = icmp slt i64 9, %len.
  %1009 = bitcast i64* %shadow to i32*
  %safe.1067 = or i1 %827, %1008
  %select.ptr.1068 = select i1 %safe.1067, i32* %1007, i32* %1009
  %1010 = load i32, i32* %1007
  %1011 = sub i1 %827, true
  %1012 = xor i1 %1011, true
  %1013 = sext i1 %1011 to i32
  %1014 = and i32 %1013, %1010
  %1015 = sext i1 %1012 to i32
  %1016 = and i32 %1015, %1006
  %select.val.1069 = or i32 %1016, %1014
  store i32 %select.val.1069, i32* %select.ptr.1068, align 4
  %1017 = getelementptr inbounds i32, i32* %941, i64 2
  %1018 = icmp slt i64 2, %len.
  %1019 = bitcast i64* %shadow to i32*
  %safe.1070 = or i1 %827, %1018
  %select.ptr.1071 = select i1 %safe.1070, i32* %1017, i32* %1019
  %1020 = load i32, i32* %select.ptr.1071, align 4
  %1021 = getelementptr inbounds i32, i32* %941, i64 9
  %1022 = icmp slt i64 9, %len.
  %1023 = bitcast i64* %shadow to i32*
  %safe.1072 = or i1 %827, %1022
  %select.ptr.1073 = select i1 %safe.1072, i32* %1021, i32* %1023
  %1024 = load i32, i32* %select.ptr.1073, align 4
  %1025 = xor i32 %1020, %1024
  %1026 = getelementptr inbounds i32, i32* %941, i64 10
  %1027 = icmp slt i64 10, %len.
  %1028 = bitcast i64* %shadow to i32*
  %safe.1074 = or i1 %827, %1027
  %select.ptr.1075 = select i1 %safe.1074, i32* %1026, i32* %1028
  %1029 = load i32, i32* %1026
  %1030 = sub i1 %827, true
  %1031 = xor i1 %1030, true
  %1032 = sext i1 %1030 to i32
  %1033 = and i32 %1032, %1029
  %1034 = sext i1 %1031 to i32
  %1035 = and i32 %1034, %1025
  %select.val.1076 = or i32 %1035, %1033
  store i32 %select.val.1076, i32* %select.ptr.1075, align 4
  %1036 = getelementptr inbounds i32, i32* %941, i64 3
  %1037 = icmp slt i64 3, %len.
  %1038 = bitcast i64* %shadow to i32*
  %safe.1077 = or i1 %827, %1037
  %select.ptr.1078 = select i1 %safe.1077, i32* %1036, i32* %1038
  %1039 = load i32, i32* %select.ptr.1078, align 4
  %1040 = getelementptr inbounds i32, i32* %941, i64 10
  %1041 = icmp slt i64 10, %len.
  %1042 = bitcast i64* %shadow to i32*
  %safe.1079 = or i1 %827, %1041
  %select.ptr.1080 = select i1 %safe.1079, i32* %1040, i32* %1042
  %1043 = load i32, i32* %select.ptr.1080, align 4
  %1044 = xor i32 %1039, %1043
  %1045 = getelementptr inbounds i32, i32* %941, i64 11
  %1046 = icmp slt i64 11, %len.
  %1047 = bitcast i64* %shadow to i32*
  %safe.1081 = or i1 %827, %1046
  %select.ptr.1082 = select i1 %safe.1081, i32* %1045, i32* %1047
  %1048 = load i32, i32* %1045
  %1049 = sub i1 %827, true
  %1050 = xor i1 %1049, true
  %1051 = sext i1 %1049 to i32
  %1052 = and i32 %1051, %1048
  %1053 = sext i1 %1050 to i32
  %1054 = and i32 %1053, %1044
  %select.val.1083 = or i32 %1054, %1052
  store i32 %select.val.1083, i32* %select.ptr.1082, align 4
  store i1 %827, i1* %out.23
  %1055 = load i1, i1* %out.23
  %1056 = getelementptr inbounds i32, i32* %941, i64 11
  %1057 = icmp slt i64 11, %len.
  %1058 = bitcast i64* %shadow to i32*
  %safe.1084 = or i1 %1055, %1057
  %select.ptr.1085 = select i1 %safe.1084, i32* %1056, i32* %1058
  %1059 = load i32, i32* %select.ptr.1085, align 4
  %1060 = getelementptr inbounds i32, i32* %941, i64 4
  %1061 = icmp slt i64 4, %len.
  %1062 = bitcast i64* %shadow to i32*
  %safe.1086 = or i1 %1055, %1061
  %select.ptr.1087 = select i1 %safe.1086, i32* %1060, i32* %1062
  %1063 = load i32, i32* %select.ptr.1087, align 4
  %1064 = lshr i32 %1059, 24
  %1065 = zext i32 %1064 to i64
  %1066 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1065
  %1067 = sext i32 256 to i64
  %1068 = icmp slt i64 %1065, %1067
  %1069 = bitcast i64* %shadow to i32*
  %safe.1088 = or i1 %1055, %1068
  %select.ptr.1089 = select i1 %safe.1088, i32* %1066, i32* %1069
  %1070 = load i32, i32* %select.ptr.1089, align 4
  %1071 = and i32 %1070, -16777216
  %1072 = xor i32 %1063, %1071
  %1073 = lshr i32 %1059, 16
  %1074 = and i32 %1073, 255
  %1075 = zext i32 %1074 to i64
  %1076 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1075
  %1077 = sext i32 256 to i64
  %1078 = icmp slt i64 %1075, %1077
  %1079 = bitcast i64* %shadow to i32*
  %safe.1090 = or i1 %1055, %1078
  %select.ptr.1091 = select i1 %safe.1090, i32* %1076, i32* %1079
  %1080 = load i32, i32* %select.ptr.1091, align 4
  %1081 = and i32 %1080, 16711680
  %1082 = xor i32 %1072, %1081
  %1083 = lshr i32 %1059, 8
  %1084 = and i32 %1083, 255
  %1085 = zext i32 %1084 to i64
  %1086 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1085
  %1087 = sext i32 256 to i64
  %1088 = icmp slt i64 %1085, %1087
  %1089 = bitcast i64* %shadow to i32*
  %safe.1092 = or i1 %1055, %1088
  %select.ptr.1093 = select i1 %safe.1092, i32* %1086, i32* %1089
  %1090 = load i32, i32* %select.ptr.1093, align 4
  %1091 = and i32 %1090, 65280
  %1092 = xor i32 %1082, %1091
  %1093 = and i32 %1059, 255
  %1094 = zext i32 %1093 to i64
  %1095 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1094
  %1096 = sext i32 256 to i64
  %1097 = icmp slt i64 %1094, %1096
  %1098 = bitcast i64* %shadow to i32*
  %safe.1094 = or i1 %1055, %1097
  %select.ptr.1095 = select i1 %safe.1094, i32* %1095, i32* %1098
  %1099 = load i32, i32* %select.ptr.1095, align 4
  %1100 = and i32 %1099, 255
  %1101 = xor i32 %1092, %1100
  %1102 = getelementptr inbounds i32, i32* %941, i64 12
  %1103 = icmp slt i64 12, %len.
  %1104 = bitcast i64* %shadow to i32*
  %safe.1096 = or i1 %1055, %1103
  %select.ptr.1097 = select i1 %safe.1096, i32* %1102, i32* %1104
  %1105 = load i32, i32* %1102
  %1106 = sub i1 %1055, true
  %1107 = xor i1 %1106, true
  %1108 = sext i1 %1106 to i32
  %1109 = and i32 %1108, %1105
  %1110 = sext i1 %1107 to i32
  %1111 = and i32 %1110, %1101
  %select.val.1098 = or i32 %1111, %1109
  store i32 %select.val.1098, i32* %select.ptr.1097, align 4
  %1112 = getelementptr inbounds i32, i32* %941, i64 5
  %1113 = icmp slt i64 5, %len.
  %1114 = bitcast i64* %shadow to i32*
  %safe.1099 = or i1 %1055, %1113
  %select.ptr.1100 = select i1 %safe.1099, i32* %1112, i32* %1114
  %1115 = load i32, i32* %select.ptr.1100, align 4
  %1116 = getelementptr inbounds i32, i32* %941, i64 12
  %1117 = icmp slt i64 12, %len.
  %1118 = bitcast i64* %shadow to i32*
  %safe.1101 = or i1 %1055, %1117
  %select.ptr.1102 = select i1 %safe.1101, i32* %1116, i32* %1118
  %1119 = load i32, i32* %select.ptr.1102, align 4
  %1120 = xor i32 %1115, %1119
  %1121 = getelementptr inbounds i32, i32* %941, i64 13
  %1122 = icmp slt i64 13, %len.
  %1123 = bitcast i64* %shadow to i32*
  %safe.1103 = or i1 %1055, %1122
  %select.ptr.1104 = select i1 %safe.1103, i32* %1121, i32* %1123
  %1124 = load i32, i32* %1121
  %1125 = sub i1 %1055, true
  %1126 = xor i1 %1125, true
  %1127 = sext i1 %1125 to i32
  %1128 = and i32 %1127, %1124
  %1129 = sext i1 %1126 to i32
  %1130 = and i32 %1129, %1120
  %select.val.1105 = or i32 %1130, %1128
  store i32 %select.val.1105, i32* %select.ptr.1104, align 4
  %1131 = getelementptr inbounds i32, i32* %941, i64 6
  %1132 = icmp slt i64 6, %len.
  %1133 = bitcast i64* %shadow to i32*
  %safe.1106 = or i1 %1055, %1132
  %select.ptr.1107 = select i1 %safe.1106, i32* %1131, i32* %1133
  %1134 = load i32, i32* %select.ptr.1107, align 4
  %1135 = getelementptr inbounds i32, i32* %941, i64 13
  %1136 = icmp slt i64 13, %len.
  %1137 = bitcast i64* %shadow to i32*
  %safe.1108 = or i1 %1055, %1136
  %select.ptr.1109 = select i1 %safe.1108, i32* %1135, i32* %1137
  %1138 = load i32, i32* %select.ptr.1109, align 4
  %1139 = xor i32 %1134, %1138
  %1140 = getelementptr inbounds i32, i32* %941, i64 14
  %1141 = icmp slt i64 14, %len.
  %1142 = bitcast i64* %shadow to i32*
  %safe.1110 = or i1 %1055, %1141
  %select.ptr.1111 = select i1 %safe.1110, i32* %1140, i32* %1142
  %1143 = load i32, i32* %1140
  %1144 = sub i1 %1055, true
  %1145 = xor i1 %1144, true
  %1146 = sext i1 %1144 to i32
  %1147 = and i32 %1146, %1143
  %1148 = sext i1 %1145 to i32
  %1149 = and i32 %1148, %1139
  %select.val.1112 = or i32 %1149, %1147
  store i32 %select.val.1112, i32* %select.ptr.1111, align 4
  %1150 = getelementptr inbounds i32, i32* %941, i64 7
  %1151 = icmp slt i64 7, %len.
  %1152 = bitcast i64* %shadow to i32*
  %safe.1113 = or i1 %1055, %1151
  %select.ptr.1114 = select i1 %safe.1113, i32* %1150, i32* %1152
  %1153 = load i32, i32* %select.ptr.1114, align 4
  %1154 = getelementptr inbounds i32, i32* %941, i64 14
  %1155 = icmp slt i64 14, %len.
  %1156 = bitcast i64* %shadow to i32*
  %safe.1115 = or i1 %1055, %1155
  %select.ptr.1116 = select i1 %safe.1115, i32* %1154, i32* %1156
  %1157 = load i32, i32* %select.ptr.1116, align 4
  %1158 = xor i32 %1153, %1157
  %1159 = getelementptr inbounds i32, i32* %941, i64 15
  %1160 = icmp slt i64 15, %len.
  %1161 = bitcast i64* %shadow to i32*
  %safe.1117 = or i1 %1055, %1160
  %select.ptr.1118 = select i1 %safe.1117, i32* %1159, i32* %1161
  %1162 = load i32, i32* %1159
  %1163 = sub i1 %1055, true
  %1164 = xor i1 %1163, true
  %1165 = sext i1 %1163 to i32
  %1166 = and i32 %1165, %1162
  %1167 = sext i1 %1164 to i32
  %1168 = and i32 %1167, %1158
  %select.val.1119 = or i32 %1168, %1166
  store i32 %select.val.1119, i32* %select.ptr.1118, align 4
  %1169 = getelementptr inbounds i32, i32* %941, i64 8
  %1170 = getelementptr inbounds i32, i32* %1169, i64 7
  %1171 = icmp slt i64 7, %len.
  %1172 = bitcast i64* %shadow to i32*
  %safe.1120 = or i1 %1055, %1171
  %select.ptr.1121 = select i1 %safe.1120, i32* %1170, i32* %1172
  %1173 = load i32, i32* %select.ptr.1121, align 4
  %1174 = icmp slt i64 8, %len.
  %1175 = bitcast i64* %shadow to i32*
  %safe.1122 = or i1 %1055, %1174
  %select.ptr.1123 = select i1 %safe.1122, i32* %1169, i32* %1175
  %1176 = load i32, i32* %select.ptr.1123, align 4
  %1177 = lshr i32 %1173, 16
  %1178 = and i32 %1177, 255
  %1179 = zext i32 %1178 to i64
  %1180 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1179
  %1181 = sext i32 256 to i64
  %1182 = icmp slt i64 %1179, %1181
  %1183 = bitcast i64* %shadow to i32*
  %safe.1124 = or i1 %1055, %1182
  %select.ptr.1125 = select i1 %safe.1124, i32* %1180, i32* %1183
  %1184 = load i32, i32* %select.ptr.1125, align 4
  %1185 = and i32 %1184, -16777216
  %1186 = xor i32 %1176, %1185
  %1187 = lshr i32 %1173, 8
  %1188 = and i32 %1187, 255
  %1189 = zext i32 %1188 to i64
  %1190 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1189
  %1191 = sext i32 256 to i64
  %1192 = icmp slt i64 %1189, %1191
  %1193 = bitcast i64* %shadow to i32*
  %safe.1126 = or i1 %1055, %1192
  %select.ptr.1127 = select i1 %safe.1126, i32* %1190, i32* %1193
  %1194 = load i32, i32* %select.ptr.1127, align 4
  %1195 = and i32 %1194, 16711680
  %1196 = xor i32 %1186, %1195
  %1197 = and i32 %1173, 255
  %1198 = zext i32 %1197 to i64
  %1199 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1198
  %1200 = sext i32 256 to i64
  %1201 = icmp slt i64 %1198, %1200
  %1202 = bitcast i64* %shadow to i32*
  %safe.1128 = or i1 %1055, %1201
  %select.ptr.1129 = select i1 %safe.1128, i32* %1199, i32* %1202
  %1203 = load i32, i32* %select.ptr.1129, align 4
  %1204 = and i32 %1203, 65280
  %1205 = xor i32 %1196, %1204
  %1206 = lshr i32 %1173, 24
  %1207 = zext i32 %1206 to i64
  %1208 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1207
  %1209 = sext i32 256 to i64
  %1210 = icmp slt i64 %1207, %1209
  %1211 = bitcast i64* %shadow to i32*
  %safe.1130 = or i1 %1055, %1210
  %select.ptr.1131 = select i1 %safe.1130, i32* %1208, i32* %1211
  %1212 = load i32, i32* %select.ptr.1131, align 4
  %1213 = and i32 %1212, 255
  %1214 = xor i32 %1205, %1213
  %1215 = xor i32 %1214, 268435456
  %1216 = getelementptr inbounds i32, i32* %1169, i64 8
  %1217 = icmp slt i64 8, %len.
  %1218 = bitcast i64* %shadow to i32*
  %safe.1132 = or i1 %1055, %1217
  %select.ptr.1133 = select i1 %safe.1132, i32* %1216, i32* %1218
  %1219 = load i32, i32* %1216
  %1220 = sub i1 %1055, true
  %1221 = xor i1 %1220, true
  %1222 = sext i1 %1220 to i32
  %1223 = and i32 %1222, %1219
  %1224 = sext i1 %1221 to i32
  %1225 = and i32 %1224, %1215
  %select.val.1134 = or i32 %1225, %1223
  store i32 %select.val.1134, i32* %select.ptr.1133, align 4
  %1226 = getelementptr inbounds i32, i32* %1169, i64 1
  %1227 = icmp slt i64 1, %len.
  %1228 = bitcast i64* %shadow to i32*
  %safe.1135 = or i1 %1055, %1227
  %select.ptr.1136 = select i1 %safe.1135, i32* %1226, i32* %1228
  %1229 = load i32, i32* %select.ptr.1136, align 4
  %1230 = getelementptr inbounds i32, i32* %1169, i64 8
  %1231 = icmp slt i64 8, %len.
  %1232 = bitcast i64* %shadow to i32*
  %safe.1137 = or i1 %1055, %1231
  %select.ptr.1138 = select i1 %safe.1137, i32* %1230, i32* %1232
  %1233 = load i32, i32* %select.ptr.1138, align 4
  %1234 = xor i32 %1229, %1233
  %1235 = getelementptr inbounds i32, i32* %1169, i64 9
  %1236 = icmp slt i64 9, %len.
  %1237 = bitcast i64* %shadow to i32*
  %safe.1139 = or i1 %1055, %1236
  %select.ptr.1140 = select i1 %safe.1139, i32* %1235, i32* %1237
  %1238 = load i32, i32* %1235
  %1239 = sub i1 %1055, true
  %1240 = xor i1 %1239, true
  %1241 = sext i1 %1239 to i32
  %1242 = and i32 %1241, %1238
  %1243 = sext i1 %1240 to i32
  %1244 = and i32 %1243, %1234
  %select.val.1141 = or i32 %1244, %1242
  store i32 %select.val.1141, i32* %select.ptr.1140, align 4
  %1245 = getelementptr inbounds i32, i32* %1169, i64 2
  %1246 = icmp slt i64 2, %len.
  %1247 = bitcast i64* %shadow to i32*
  %safe.1142 = or i1 %1055, %1246
  %select.ptr.1143 = select i1 %safe.1142, i32* %1245, i32* %1247
  %1248 = load i32, i32* %select.ptr.1143, align 4
  %1249 = getelementptr inbounds i32, i32* %1169, i64 9
  %1250 = icmp slt i64 9, %len.
  %1251 = bitcast i64* %shadow to i32*
  %safe.1144 = or i1 %1055, %1250
  %select.ptr.1145 = select i1 %safe.1144, i32* %1249, i32* %1251
  %1252 = load i32, i32* %select.ptr.1145, align 4
  %1253 = xor i32 %1248, %1252
  %1254 = getelementptr inbounds i32, i32* %1169, i64 10
  %1255 = icmp slt i64 10, %len.
  %1256 = bitcast i64* %shadow to i32*
  %safe.1146 = or i1 %1055, %1255
  %select.ptr.1147 = select i1 %safe.1146, i32* %1254, i32* %1256
  %1257 = load i32, i32* %1254
  %1258 = sub i1 %1055, true
  %1259 = xor i1 %1258, true
  %1260 = sext i1 %1258 to i32
  %1261 = and i32 %1260, %1257
  %1262 = sext i1 %1259 to i32
  %1263 = and i32 %1262, %1253
  %select.val.1148 = or i32 %1263, %1261
  store i32 %select.val.1148, i32* %select.ptr.1147, align 4
  %1264 = getelementptr inbounds i32, i32* %1169, i64 3
  %1265 = icmp slt i64 3, %len.
  %1266 = bitcast i64* %shadow to i32*
  %safe.1149 = or i1 %1055, %1265
  %select.ptr.1150 = select i1 %safe.1149, i32* %1264, i32* %1266
  %1267 = load i32, i32* %select.ptr.1150, align 4
  %1268 = getelementptr inbounds i32, i32* %1169, i64 10
  %1269 = icmp slt i64 10, %len.
  %1270 = bitcast i64* %shadow to i32*
  %safe.1151 = or i1 %1055, %1269
  %select.ptr.1152 = select i1 %safe.1151, i32* %1268, i32* %1270
  %1271 = load i32, i32* %select.ptr.1152, align 4
  %1272 = xor i32 %1267, %1271
  %1273 = getelementptr inbounds i32, i32* %1169, i64 11
  %1274 = icmp slt i64 11, %len.
  %1275 = bitcast i64* %shadow to i32*
  %safe.1153 = or i1 %1055, %1274
  %select.ptr.1154 = select i1 %safe.1153, i32* %1273, i32* %1275
  %1276 = load i32, i32* %1273
  %1277 = sub i1 %1055, true
  %1278 = xor i1 %1277, true
  %1279 = sext i1 %1277 to i32
  %1280 = and i32 %1279, %1276
  %1281 = sext i1 %1278 to i32
  %1282 = and i32 %1281, %1272
  %select.val.1155 = or i32 %1282, %1280
  store i32 %select.val.1155, i32* %select.ptr.1154, align 4
  store i1 %1055, i1* %out.24
  %1283 = load i1, i1* %out.24
  %1284 = getelementptr inbounds i32, i32* %1169, i64 11
  %1285 = icmp slt i64 11, %len.
  %1286 = bitcast i64* %shadow to i32*
  %safe.1156 = or i1 %1283, %1285
  %select.ptr.1157 = select i1 %safe.1156, i32* %1284, i32* %1286
  %1287 = load i32, i32* %select.ptr.1157, align 4
  %1288 = getelementptr inbounds i32, i32* %1169, i64 4
  %1289 = icmp slt i64 4, %len.
  %1290 = bitcast i64* %shadow to i32*
  %safe.1158 = or i1 %1283, %1289
  %select.ptr.1159 = select i1 %safe.1158, i32* %1288, i32* %1290
  %1291 = load i32, i32* %select.ptr.1159, align 4
  %1292 = lshr i32 %1287, 24
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1293
  %1295 = sext i32 256 to i64
  %1296 = icmp slt i64 %1293, %1295
  %1297 = bitcast i64* %shadow to i32*
  %safe.1160 = or i1 %1283, %1296
  %select.ptr.1161 = select i1 %safe.1160, i32* %1294, i32* %1297
  %1298 = load i32, i32* %select.ptr.1161, align 4
  %1299 = and i32 %1298, -16777216
  %1300 = xor i32 %1291, %1299
  %1301 = lshr i32 %1287, 16
  %1302 = and i32 %1301, 255
  %1303 = zext i32 %1302 to i64
  %1304 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1303
  %1305 = sext i32 256 to i64
  %1306 = icmp slt i64 %1303, %1305
  %1307 = bitcast i64* %shadow to i32*
  %safe.1162 = or i1 %1283, %1306
  %select.ptr.1163 = select i1 %safe.1162, i32* %1304, i32* %1307
  %1308 = load i32, i32* %select.ptr.1163, align 4
  %1309 = and i32 %1308, 16711680
  %1310 = xor i32 %1300, %1309
  %1311 = lshr i32 %1287, 8
  %1312 = and i32 %1311, 255
  %1313 = zext i32 %1312 to i64
  %1314 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1313
  %1315 = sext i32 256 to i64
  %1316 = icmp slt i64 %1313, %1315
  %1317 = bitcast i64* %shadow to i32*
  %safe.1164 = or i1 %1283, %1316
  %select.ptr.1165 = select i1 %safe.1164, i32* %1314, i32* %1317
  %1318 = load i32, i32* %select.ptr.1165, align 4
  %1319 = and i32 %1318, 65280
  %1320 = xor i32 %1310, %1319
  %1321 = and i32 %1287, 255
  %1322 = zext i32 %1321 to i64
  %1323 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1322
  %1324 = sext i32 256 to i64
  %1325 = icmp slt i64 %1322, %1324
  %1326 = bitcast i64* %shadow to i32*
  %safe.1166 = or i1 %1283, %1325
  %select.ptr.1167 = select i1 %safe.1166, i32* %1323, i32* %1326
  %1327 = load i32, i32* %select.ptr.1167, align 4
  %1328 = and i32 %1327, 255
  %1329 = xor i32 %1320, %1328
  %1330 = getelementptr inbounds i32, i32* %1169, i64 12
  %1331 = icmp slt i64 12, %len.
  %1332 = bitcast i64* %shadow to i32*
  %safe.1168 = or i1 %1283, %1331
  %select.ptr.1169 = select i1 %safe.1168, i32* %1330, i32* %1332
  %1333 = load i32, i32* %1330
  %1334 = sub i1 %1283, true
  %1335 = xor i1 %1334, true
  %1336 = sext i1 %1334 to i32
  %1337 = and i32 %1336, %1333
  %1338 = sext i1 %1335 to i32
  %1339 = and i32 %1338, %1329
  %select.val.1170 = or i32 %1339, %1337
  store i32 %select.val.1170, i32* %select.ptr.1169, align 4
  %1340 = getelementptr inbounds i32, i32* %1169, i64 5
  %1341 = icmp slt i64 5, %len.
  %1342 = bitcast i64* %shadow to i32*
  %safe.1171 = or i1 %1283, %1341
  %select.ptr.1172 = select i1 %safe.1171, i32* %1340, i32* %1342
  %1343 = load i32, i32* %select.ptr.1172, align 4
  %1344 = getelementptr inbounds i32, i32* %1169, i64 12
  %1345 = icmp slt i64 12, %len.
  %1346 = bitcast i64* %shadow to i32*
  %safe.1173 = or i1 %1283, %1345
  %select.ptr.1174 = select i1 %safe.1173, i32* %1344, i32* %1346
  %1347 = load i32, i32* %select.ptr.1174, align 4
  %1348 = xor i32 %1343, %1347
  %1349 = getelementptr inbounds i32, i32* %1169, i64 13
  %1350 = icmp slt i64 13, %len.
  %1351 = bitcast i64* %shadow to i32*
  %safe.1175 = or i1 %1283, %1350
  %select.ptr.1176 = select i1 %safe.1175, i32* %1349, i32* %1351
  %1352 = load i32, i32* %1349
  %1353 = sub i1 %1283, true
  %1354 = xor i1 %1353, true
  %1355 = sext i1 %1353 to i32
  %1356 = and i32 %1355, %1352
  %1357 = sext i1 %1354 to i32
  %1358 = and i32 %1357, %1348
  %select.val.1177 = or i32 %1358, %1356
  store i32 %select.val.1177, i32* %select.ptr.1176, align 4
  %1359 = getelementptr inbounds i32, i32* %1169, i64 6
  %1360 = icmp slt i64 6, %len.
  %1361 = bitcast i64* %shadow to i32*
  %safe.1178 = or i1 %1283, %1360
  %select.ptr.1179 = select i1 %safe.1178, i32* %1359, i32* %1361
  %1362 = load i32, i32* %select.ptr.1179, align 4
  %1363 = getelementptr inbounds i32, i32* %1169, i64 13
  %1364 = icmp slt i64 13, %len.
  %1365 = bitcast i64* %shadow to i32*
  %safe.1180 = or i1 %1283, %1364
  %select.ptr.1181 = select i1 %safe.1180, i32* %1363, i32* %1365
  %1366 = load i32, i32* %select.ptr.1181, align 4
  %1367 = xor i32 %1362, %1366
  %1368 = getelementptr inbounds i32, i32* %1169, i64 14
  %1369 = icmp slt i64 14, %len.
  %1370 = bitcast i64* %shadow to i32*
  %safe.1182 = or i1 %1283, %1369
  %select.ptr.1183 = select i1 %safe.1182, i32* %1368, i32* %1370
  %1371 = load i32, i32* %1368
  %1372 = sub i1 %1283, true
  %1373 = xor i1 %1372, true
  %1374 = sext i1 %1372 to i32
  %1375 = and i32 %1374, %1371
  %1376 = sext i1 %1373 to i32
  %1377 = and i32 %1376, %1367
  %select.val.1184 = or i32 %1377, %1375
  store i32 %select.val.1184, i32* %select.ptr.1183, align 4
  %1378 = getelementptr inbounds i32, i32* %1169, i64 7
  %1379 = icmp slt i64 7, %len.
  %1380 = bitcast i64* %shadow to i32*
  %safe.1185 = or i1 %1283, %1379
  %select.ptr.1186 = select i1 %safe.1185, i32* %1378, i32* %1380
  %1381 = load i32, i32* %select.ptr.1186, align 4
  %1382 = getelementptr inbounds i32, i32* %1169, i64 14
  %1383 = icmp slt i64 14, %len.
  %1384 = bitcast i64* %shadow to i32*
  %safe.1187 = or i1 %1283, %1383
  %select.ptr.1188 = select i1 %safe.1187, i32* %1382, i32* %1384
  %1385 = load i32, i32* %select.ptr.1188, align 4
  %1386 = xor i32 %1381, %1385
  %1387 = getelementptr inbounds i32, i32* %1169, i64 15
  %1388 = icmp slt i64 15, %len.
  %1389 = bitcast i64* %shadow to i32*
  %safe.1189 = or i1 %1283, %1388
  %select.ptr.1190 = select i1 %safe.1189, i32* %1387, i32* %1389
  %1390 = load i32, i32* %1387
  %1391 = sub i1 %1283, true
  %1392 = xor i1 %1391, true
  %1393 = sext i1 %1391 to i32
  %1394 = and i32 %1393, %1390
  %1395 = sext i1 %1392 to i32
  %1396 = and i32 %1395, %1386
  %select.val.1191 = or i32 %1396, %1394
  store i32 %select.val.1191, i32* %select.ptr.1190, align 4
  %1397 = getelementptr inbounds i32, i32* %1169, i64 8
  %1398 = getelementptr inbounds i32, i32* %1397, i64 7
  %1399 = icmp slt i64 7, %len.
  %1400 = bitcast i64* %shadow to i32*
  %safe.1192 = or i1 %1283, %1399
  %select.ptr.1193 = select i1 %safe.1192, i32* %1398, i32* %1400
  %1401 = load i32, i32* %select.ptr.1193, align 4
  %1402 = icmp slt i64 8, %len.
  %1403 = bitcast i64* %shadow to i32*
  %safe.1194 = or i1 %1283, %1402
  %select.ptr.1195 = select i1 %safe.1194, i32* %1397, i32* %1403
  %1404 = load i32, i32* %select.ptr.1195, align 4
  %1405 = lshr i32 %1401, 16
  %1406 = and i32 %1405, 255
  %1407 = zext i32 %1406 to i64
  %1408 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1407
  %1409 = sext i32 256 to i64
  %1410 = icmp slt i64 %1407, %1409
  %1411 = bitcast i64* %shadow to i32*
  %safe.1196 = or i1 %1283, %1410
  %select.ptr.1197 = select i1 %safe.1196, i32* %1408, i32* %1411
  %1412 = load i32, i32* %select.ptr.1197, align 4
  %1413 = and i32 %1412, -16777216
  %1414 = xor i32 %1404, %1413
  %1415 = lshr i32 %1401, 8
  %1416 = and i32 %1415, 255
  %1417 = zext i32 %1416 to i64
  %1418 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1417
  %1419 = sext i32 256 to i64
  %1420 = icmp slt i64 %1417, %1419
  %1421 = bitcast i64* %shadow to i32*
  %safe.1198 = or i1 %1283, %1420
  %select.ptr.1199 = select i1 %safe.1198, i32* %1418, i32* %1421
  %1422 = load i32, i32* %select.ptr.1199, align 4
  %1423 = and i32 %1422, 16711680
  %1424 = xor i32 %1414, %1423
  %1425 = and i32 %1401, 255
  %1426 = zext i32 %1425 to i64
  %1427 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1426
  %1428 = sext i32 256 to i64
  %1429 = icmp slt i64 %1426, %1428
  %1430 = bitcast i64* %shadow to i32*
  %safe.1200 = or i1 %1283, %1429
  %select.ptr.1201 = select i1 %safe.1200, i32* %1427, i32* %1430
  %1431 = load i32, i32* %select.ptr.1201, align 4
  %1432 = and i32 %1431, 65280
  %1433 = xor i32 %1424, %1432
  %1434 = lshr i32 %1401, 24
  %1435 = zext i32 %1434 to i64
  %1436 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1435
  %1437 = sext i32 256 to i64
  %1438 = icmp slt i64 %1435, %1437
  %1439 = bitcast i64* %shadow to i32*
  %safe.1202 = or i1 %1283, %1438
  %select.ptr.1203 = select i1 %safe.1202, i32* %1436, i32* %1439
  %1440 = load i32, i32* %select.ptr.1203, align 4
  %1441 = and i32 %1440, 255
  %1442 = xor i32 %1433, %1441
  %1443 = xor i32 %1442, 536870912
  %1444 = getelementptr inbounds i32, i32* %1397, i64 8
  %1445 = icmp slt i64 8, %len.
  %1446 = bitcast i64* %shadow to i32*
  %safe.1204 = or i1 %1283, %1445
  %select.ptr.1205 = select i1 %safe.1204, i32* %1444, i32* %1446
  %1447 = load i32, i32* %1444
  %1448 = sub i1 %1283, true
  %1449 = xor i1 %1448, true
  %1450 = sext i1 %1448 to i32
  %1451 = and i32 %1450, %1447
  %1452 = sext i1 %1449 to i32
  %1453 = and i32 %1452, %1443
  %select.val.1206 = or i32 %1453, %1451
  store i32 %select.val.1206, i32* %select.ptr.1205, align 4
  %1454 = getelementptr inbounds i32, i32* %1397, i64 1
  %1455 = icmp slt i64 1, %len.
  %1456 = bitcast i64* %shadow to i32*
  %safe.1207 = or i1 %1283, %1455
  %select.ptr.1208 = select i1 %safe.1207, i32* %1454, i32* %1456
  %1457 = load i32, i32* %select.ptr.1208, align 4
  %1458 = getelementptr inbounds i32, i32* %1397, i64 8
  %1459 = icmp slt i64 8, %len.
  %1460 = bitcast i64* %shadow to i32*
  %safe.1209 = or i1 %1283, %1459
  %select.ptr.1210 = select i1 %safe.1209, i32* %1458, i32* %1460
  %1461 = load i32, i32* %select.ptr.1210, align 4
  %1462 = xor i32 %1457, %1461
  %1463 = getelementptr inbounds i32, i32* %1397, i64 9
  %1464 = icmp slt i64 9, %len.
  %1465 = bitcast i64* %shadow to i32*
  %safe.1211 = or i1 %1283, %1464
  %select.ptr.1212 = select i1 %safe.1211, i32* %1463, i32* %1465
  %1466 = load i32, i32* %1463
  %1467 = sub i1 %1283, true
  %1468 = xor i1 %1467, true
  %1469 = sext i1 %1467 to i32
  %1470 = and i32 %1469, %1466
  %1471 = sext i1 %1468 to i32
  %1472 = and i32 %1471, %1462
  %select.val.1213 = or i32 %1472, %1470
  store i32 %select.val.1213, i32* %select.ptr.1212, align 4
  %1473 = getelementptr inbounds i32, i32* %1397, i64 2
  %1474 = icmp slt i64 2, %len.
  %1475 = bitcast i64* %shadow to i32*
  %safe.1214 = or i1 %1283, %1474
  %select.ptr.1215 = select i1 %safe.1214, i32* %1473, i32* %1475
  %1476 = load i32, i32* %select.ptr.1215, align 4
  %1477 = getelementptr inbounds i32, i32* %1397, i64 9
  %1478 = icmp slt i64 9, %len.
  %1479 = bitcast i64* %shadow to i32*
  %safe.1216 = or i1 %1283, %1478
  %select.ptr.1217 = select i1 %safe.1216, i32* %1477, i32* %1479
  %1480 = load i32, i32* %select.ptr.1217, align 4
  %1481 = xor i32 %1476, %1480
  %1482 = getelementptr inbounds i32, i32* %1397, i64 10
  %1483 = icmp slt i64 10, %len.
  %1484 = bitcast i64* %shadow to i32*
  %safe.1218 = or i1 %1283, %1483
  %select.ptr.1219 = select i1 %safe.1218, i32* %1482, i32* %1484
  %1485 = load i32, i32* %1482
  %1486 = sub i1 %1283, true
  %1487 = xor i1 %1486, true
  %1488 = sext i1 %1486 to i32
  %1489 = and i32 %1488, %1485
  %1490 = sext i1 %1487 to i32
  %1491 = and i32 %1490, %1481
  %select.val.1220 = or i32 %1491, %1489
  store i32 %select.val.1220, i32* %select.ptr.1219, align 4
  %1492 = getelementptr inbounds i32, i32* %1397, i64 3
  %1493 = icmp slt i64 3, %len.
  %1494 = bitcast i64* %shadow to i32*
  %safe.1221 = or i1 %1283, %1493
  %select.ptr.1222 = select i1 %safe.1221, i32* %1492, i32* %1494
  %1495 = load i32, i32* %select.ptr.1222, align 4
  %1496 = getelementptr inbounds i32, i32* %1397, i64 10
  %1497 = icmp slt i64 10, %len.
  %1498 = bitcast i64* %shadow to i32*
  %safe.1223 = or i1 %1283, %1497
  %select.ptr.1224 = select i1 %safe.1223, i32* %1496, i32* %1498
  %1499 = load i32, i32* %select.ptr.1224, align 4
  %1500 = xor i32 %1495, %1499
  %1501 = getelementptr inbounds i32, i32* %1397, i64 11
  %1502 = icmp slt i64 11, %len.
  %1503 = bitcast i64* %shadow to i32*
  %safe.1225 = or i1 %1283, %1502
  %select.ptr.1226 = select i1 %safe.1225, i32* %1501, i32* %1503
  %1504 = load i32, i32* %1501
  %1505 = sub i1 %1283, true
  %1506 = xor i1 %1505, true
  %1507 = sext i1 %1505 to i32
  %1508 = and i32 %1507, %1504
  %1509 = sext i1 %1506 to i32
  %1510 = and i32 %1509, %1500
  %select.val.1227 = or i32 %1510, %1508
  store i32 %select.val.1227, i32* %select.ptr.1226, align 4
  store i1 %1283, i1* %out.25
  %1511 = load i1, i1* %out.25
  %1512 = getelementptr inbounds i32, i32* %1397, i64 11
  %1513 = icmp slt i64 11, %len.
  %1514 = bitcast i64* %shadow to i32*
  %safe.1228 = or i1 %1511, %1513
  %select.ptr.1229 = select i1 %safe.1228, i32* %1512, i32* %1514
  %1515 = load i32, i32* %select.ptr.1229, align 4
  %1516 = getelementptr inbounds i32, i32* %1397, i64 4
  %1517 = icmp slt i64 4, %len.
  %1518 = bitcast i64* %shadow to i32*
  %safe.1230 = or i1 %1511, %1517
  %select.ptr.1231 = select i1 %safe.1230, i32* %1516, i32* %1518
  %1519 = load i32, i32* %select.ptr.1231, align 4
  %1520 = lshr i32 %1515, 24
  %1521 = zext i32 %1520 to i64
  %1522 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1521
  %1523 = sext i32 256 to i64
  %1524 = icmp slt i64 %1521, %1523
  %1525 = bitcast i64* %shadow to i32*
  %safe.1232 = or i1 %1511, %1524
  %select.ptr.1233 = select i1 %safe.1232, i32* %1522, i32* %1525
  %1526 = load i32, i32* %select.ptr.1233, align 4
  %1527 = and i32 %1526, -16777216
  %1528 = xor i32 %1519, %1527
  %1529 = lshr i32 %1515, 16
  %1530 = and i32 %1529, 255
  %1531 = zext i32 %1530 to i64
  %1532 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1531
  %1533 = sext i32 256 to i64
  %1534 = icmp slt i64 %1531, %1533
  %1535 = bitcast i64* %shadow to i32*
  %safe.1234 = or i1 %1511, %1534
  %select.ptr.1235 = select i1 %safe.1234, i32* %1532, i32* %1535
  %1536 = load i32, i32* %select.ptr.1235, align 4
  %1537 = and i32 %1536, 16711680
  %1538 = xor i32 %1528, %1537
  %1539 = lshr i32 %1515, 8
  %1540 = and i32 %1539, 255
  %1541 = zext i32 %1540 to i64
  %1542 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1541
  %1543 = sext i32 256 to i64
  %1544 = icmp slt i64 %1541, %1543
  %1545 = bitcast i64* %shadow to i32*
  %safe.1236 = or i1 %1511, %1544
  %select.ptr.1237 = select i1 %safe.1236, i32* %1542, i32* %1545
  %1546 = load i32, i32* %select.ptr.1237, align 4
  %1547 = and i32 %1546, 65280
  %1548 = xor i32 %1538, %1547
  %1549 = and i32 %1515, 255
  %1550 = zext i32 %1549 to i64
  %1551 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1550
  %1552 = sext i32 256 to i64
  %1553 = icmp slt i64 %1550, %1552
  %1554 = bitcast i64* %shadow to i32*
  %safe.1238 = or i1 %1511, %1553
  %select.ptr.1239 = select i1 %safe.1238, i32* %1551, i32* %1554
  %1555 = load i32, i32* %select.ptr.1239, align 4
  %1556 = and i32 %1555, 255
  %1557 = xor i32 %1548, %1556
  %1558 = getelementptr inbounds i32, i32* %1397, i64 12
  %1559 = icmp slt i64 12, %len.
  %1560 = bitcast i64* %shadow to i32*
  %safe.1240 = or i1 %1511, %1559
  %select.ptr.1241 = select i1 %safe.1240, i32* %1558, i32* %1560
  %1561 = load i32, i32* %1558
  %1562 = sub i1 %1511, true
  %1563 = xor i1 %1562, true
  %1564 = sext i1 %1562 to i32
  %1565 = and i32 %1564, %1561
  %1566 = sext i1 %1563 to i32
  %1567 = and i32 %1566, %1557
  %select.val.1242 = or i32 %1567, %1565
  store i32 %select.val.1242, i32* %select.ptr.1241, align 4
  %1568 = getelementptr inbounds i32, i32* %1397, i64 5
  %1569 = icmp slt i64 5, %len.
  %1570 = bitcast i64* %shadow to i32*
  %safe.1243 = or i1 %1511, %1569
  %select.ptr.1244 = select i1 %safe.1243, i32* %1568, i32* %1570
  %1571 = load i32, i32* %select.ptr.1244, align 4
  %1572 = getelementptr inbounds i32, i32* %1397, i64 12
  %1573 = icmp slt i64 12, %len.
  %1574 = bitcast i64* %shadow to i32*
  %safe.1245 = or i1 %1511, %1573
  %select.ptr.1246 = select i1 %safe.1245, i32* %1572, i32* %1574
  %1575 = load i32, i32* %select.ptr.1246, align 4
  %1576 = xor i32 %1571, %1575
  %1577 = getelementptr inbounds i32, i32* %1397, i64 13
  %1578 = icmp slt i64 13, %len.
  %1579 = bitcast i64* %shadow to i32*
  %safe.1247 = or i1 %1511, %1578
  %select.ptr.1248 = select i1 %safe.1247, i32* %1577, i32* %1579
  %1580 = load i32, i32* %1577
  %1581 = sub i1 %1511, true
  %1582 = xor i1 %1581, true
  %1583 = sext i1 %1581 to i32
  %1584 = and i32 %1583, %1580
  %1585 = sext i1 %1582 to i32
  %1586 = and i32 %1585, %1576
  %select.val.1249 = or i32 %1586, %1584
  store i32 %select.val.1249, i32* %select.ptr.1248, align 4
  %1587 = getelementptr inbounds i32, i32* %1397, i64 6
  %1588 = icmp slt i64 6, %len.
  %1589 = bitcast i64* %shadow to i32*
  %safe.1250 = or i1 %1511, %1588
  %select.ptr.1251 = select i1 %safe.1250, i32* %1587, i32* %1589
  %1590 = load i32, i32* %select.ptr.1251, align 4
  %1591 = getelementptr inbounds i32, i32* %1397, i64 13
  %1592 = icmp slt i64 13, %len.
  %1593 = bitcast i64* %shadow to i32*
  %safe.1252 = or i1 %1511, %1592
  %select.ptr.1253 = select i1 %safe.1252, i32* %1591, i32* %1593
  %1594 = load i32, i32* %select.ptr.1253, align 4
  %1595 = xor i32 %1590, %1594
  %1596 = getelementptr inbounds i32, i32* %1397, i64 14
  %1597 = icmp slt i64 14, %len.
  %1598 = bitcast i64* %shadow to i32*
  %safe.1254 = or i1 %1511, %1597
  %select.ptr.1255 = select i1 %safe.1254, i32* %1596, i32* %1598
  %1599 = load i32, i32* %1596
  %1600 = sub i1 %1511, true
  %1601 = xor i1 %1600, true
  %1602 = sext i1 %1600 to i32
  %1603 = and i32 %1602, %1599
  %1604 = sext i1 %1601 to i32
  %1605 = and i32 %1604, %1595
  %select.val.1256 = or i32 %1605, %1603
  store i32 %select.val.1256, i32* %select.ptr.1255, align 4
  %1606 = getelementptr inbounds i32, i32* %1397, i64 7
  %1607 = icmp slt i64 7, %len.
  %1608 = bitcast i64* %shadow to i32*
  %safe.1257 = or i1 %1511, %1607
  %select.ptr.1258 = select i1 %safe.1257, i32* %1606, i32* %1608
  %1609 = load i32, i32* %select.ptr.1258, align 4
  %1610 = getelementptr inbounds i32, i32* %1397, i64 14
  %1611 = icmp slt i64 14, %len.
  %1612 = bitcast i64* %shadow to i32*
  %safe.1259 = or i1 %1511, %1611
  %select.ptr.1260 = select i1 %safe.1259, i32* %1610, i32* %1612
  %1613 = load i32, i32* %select.ptr.1260, align 4
  %1614 = xor i32 %1609, %1613
  %1615 = getelementptr inbounds i32, i32* %1397, i64 15
  %1616 = icmp slt i64 15, %len.
  %1617 = bitcast i64* %shadow to i32*
  %safe.1261 = or i1 %1511, %1616
  %select.ptr.1262 = select i1 %safe.1261, i32* %1615, i32* %1617
  %1618 = load i32, i32* %1615
  %1619 = sub i1 %1511, true
  %1620 = xor i1 %1619, true
  %1621 = sext i1 %1619 to i32
  %1622 = and i32 %1621, %1618
  %1623 = sext i1 %1620 to i32
  %1624 = and i32 %1623, %1614
  %select.val.1263 = or i32 %1624, %1622
  store i32 %select.val.1263, i32* %select.ptr.1262, align 4
  %1625 = getelementptr inbounds i32, i32* %1397, i64 8
  %1626 = getelementptr inbounds i32, i32* %1625, i64 7
  %1627 = icmp slt i64 7, %len.
  %1628 = bitcast i64* %shadow to i32*
  %safe.1264 = or i1 %1511, %1627
  %select.ptr.1265 = select i1 %safe.1264, i32* %1626, i32* %1628
  %1629 = load i32, i32* %select.ptr.1265, align 4
  %1630 = icmp slt i64 8, %len.
  %1631 = bitcast i64* %shadow to i32*
  %safe.1266 = or i1 %1511, %1630
  %select.ptr.1267 = select i1 %safe.1266, i32* %1625, i32* %1631
  %1632 = load i32, i32* %select.ptr.1267, align 4
  %1633 = lshr i32 %1629, 16
  %1634 = and i32 %1633, 255
  %1635 = zext i32 %1634 to i64
  %1636 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1635
  %1637 = sext i32 256 to i64
  %1638 = icmp slt i64 %1635, %1637
  %1639 = bitcast i64* %shadow to i32*
  %safe.1268 = or i1 %1511, %1638
  %select.ptr.1269 = select i1 %safe.1268, i32* %1636, i32* %1639
  %1640 = load i32, i32* %select.ptr.1269, align 4
  %1641 = and i32 %1640, -16777216
  %1642 = xor i32 %1632, %1641
  %1643 = lshr i32 %1629, 8
  %1644 = and i32 %1643, 255
  %1645 = zext i32 %1644 to i64
  %1646 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1645
  %1647 = sext i32 256 to i64
  %1648 = icmp slt i64 %1645, %1647
  %1649 = bitcast i64* %shadow to i32*
  %safe.1270 = or i1 %1511, %1648
  %select.ptr.1271 = select i1 %safe.1270, i32* %1646, i32* %1649
  %1650 = load i32, i32* %select.ptr.1271, align 4
  %1651 = and i32 %1650, 16711680
  %1652 = xor i32 %1642, %1651
  %1653 = and i32 %1629, 255
  %1654 = zext i32 %1653 to i64
  %1655 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1654
  %1656 = sext i32 256 to i64
  %1657 = icmp slt i64 %1654, %1656
  %1658 = bitcast i64* %shadow to i32*
  %safe.1272 = or i1 %1511, %1657
  %select.ptr.1273 = select i1 %safe.1272, i32* %1655, i32* %1658
  %1659 = load i32, i32* %select.ptr.1273, align 4
  %1660 = and i32 %1659, 65280
  %1661 = xor i32 %1652, %1660
  %1662 = lshr i32 %1629, 24
  %1663 = zext i32 %1662 to i64
  %1664 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1663
  %1665 = sext i32 256 to i64
  %1666 = icmp slt i64 %1663, %1665
  %1667 = bitcast i64* %shadow to i32*
  %safe.1274 = or i1 %1511, %1666
  %select.ptr.1275 = select i1 %safe.1274, i32* %1664, i32* %1667
  %1668 = load i32, i32* %select.ptr.1275, align 4
  %1669 = and i32 %1668, 255
  %1670 = xor i32 %1661, %1669
  %1671 = xor i32 %1670, 1073741824
  %1672 = getelementptr inbounds i32, i32* %1625, i64 8
  %1673 = icmp slt i64 8, %len.
  %1674 = bitcast i64* %shadow to i32*
  %safe.1276 = or i1 %1511, %1673
  %select.ptr.1277 = select i1 %safe.1276, i32* %1672, i32* %1674
  %1675 = load i32, i32* %1672
  %1676 = sub i1 %1511, true
  %1677 = xor i1 %1676, true
  %1678 = sext i1 %1676 to i32
  %1679 = and i32 %1678, %1675
  %1680 = sext i1 %1677 to i32
  %1681 = and i32 %1680, %1671
  %select.val.1278 = or i32 %1681, %1679
  store i32 %select.val.1278, i32* %select.ptr.1277, align 4
  %1682 = getelementptr inbounds i32, i32* %1625, i64 1
  %1683 = icmp slt i64 1, %len.
  %1684 = bitcast i64* %shadow to i32*
  %safe.1279 = or i1 %1511, %1683
  %select.ptr.1280 = select i1 %safe.1279, i32* %1682, i32* %1684
  %1685 = load i32, i32* %select.ptr.1280, align 4
  %1686 = getelementptr inbounds i32, i32* %1625, i64 8
  %1687 = icmp slt i64 8, %len.
  %1688 = bitcast i64* %shadow to i32*
  %safe.1281 = or i1 %1511, %1687
  %select.ptr.1282 = select i1 %safe.1281, i32* %1686, i32* %1688
  %1689 = load i32, i32* %select.ptr.1282, align 4
  %1690 = xor i32 %1685, %1689
  %1691 = getelementptr inbounds i32, i32* %1625, i64 9
  %1692 = icmp slt i64 9, %len.
  %1693 = bitcast i64* %shadow to i32*
  %safe.1283 = or i1 %1511, %1692
  %select.ptr.1284 = select i1 %safe.1283, i32* %1691, i32* %1693
  %1694 = load i32, i32* %1691
  %1695 = sub i1 %1511, true
  %1696 = xor i1 %1695, true
  %1697 = sext i1 %1695 to i32
  %1698 = and i32 %1697, %1694
  %1699 = sext i1 %1696 to i32
  %1700 = and i32 %1699, %1690
  %select.val.1285 = or i32 %1700, %1698
  store i32 %select.val.1285, i32* %select.ptr.1284, align 4
  %1701 = getelementptr inbounds i32, i32* %1625, i64 2
  %1702 = icmp slt i64 2, %len.
  %1703 = bitcast i64* %shadow to i32*
  %safe.1286 = or i1 %1511, %1702
  %select.ptr.1287 = select i1 %safe.1286, i32* %1701, i32* %1703
  %1704 = load i32, i32* %select.ptr.1287, align 4
  %1705 = getelementptr inbounds i32, i32* %1625, i64 9
  %1706 = icmp slt i64 9, %len.
  %1707 = bitcast i64* %shadow to i32*
  %safe.1288 = or i1 %1511, %1706
  %select.ptr.1289 = select i1 %safe.1288, i32* %1705, i32* %1707
  %1708 = load i32, i32* %select.ptr.1289, align 4
  %1709 = xor i32 %1704, %1708
  %1710 = getelementptr inbounds i32, i32* %1625, i64 10
  %1711 = icmp slt i64 10, %len.
  %1712 = bitcast i64* %shadow to i32*
  %safe.1290 = or i1 %1511, %1711
  %select.ptr.1291 = select i1 %safe.1290, i32* %1710, i32* %1712
  %1713 = load i32, i32* %1710
  %1714 = sub i1 %1511, true
  %1715 = xor i1 %1714, true
  %1716 = sext i1 %1714 to i32
  %1717 = and i32 %1716, %1713
  %1718 = sext i1 %1715 to i32
  %1719 = and i32 %1718, %1709
  %select.val.1292 = or i32 %1719, %1717
  store i32 %select.val.1292, i32* %select.ptr.1291, align 4
  %1720 = getelementptr inbounds i32, i32* %1625, i64 3
  %1721 = icmp slt i64 3, %len.
  %1722 = bitcast i64* %shadow to i32*
  %safe.1293 = or i1 %1511, %1721
  %select.ptr.1294 = select i1 %safe.1293, i32* %1720, i32* %1722
  %1723 = load i32, i32* %select.ptr.1294, align 4
  %1724 = getelementptr inbounds i32, i32* %1625, i64 10
  %1725 = icmp slt i64 10, %len.
  %1726 = bitcast i64* %shadow to i32*
  %safe.1295 = or i1 %1511, %1725
  %select.ptr.1296 = select i1 %safe.1295, i32* %1724, i32* %1726
  %1727 = load i32, i32* %select.ptr.1296, align 4
  %1728 = xor i32 %1723, %1727
  %1729 = getelementptr inbounds i32, i32* %1625, i64 11
  %1730 = icmp slt i64 11, %len.
  %1731 = bitcast i64* %shadow to i32*
  %safe.1297 = or i1 %1511, %1730
  %select.ptr.1298 = select i1 %safe.1297, i32* %1729, i32* %1731
  %1732 = load i32, i32* %1729
  %1733 = sub i1 %1511, true
  %1734 = xor i1 %1733, true
  %1735 = sext i1 %1733 to i32
  %1736 = and i32 %1735, %1732
  %1737 = sext i1 %1734 to i32
  %1738 = and i32 %1737, %1728
  %select.val.1299 = or i32 %1738, %1736
  store i32 %select.val.1299, i32* %select.ptr.1298, align 4
  store i1 %1511, i1* %out.26
  %1739 = load i1, i1* %out.26
  %1740 = xor i1 true, true
  %in.36 = and i1 %1739, %1740
  %1741 = getelementptr inbounds i32, i32* %1625, i64 11
  %1742 = icmp slt i64 11, %len.
  %1743 = bitcast i64* %shadow to i32*
  %safe.1300 = or i1 %in.36, %1742
  %select.ptr.1301 = select i1 %safe.1300, i32* %1741, i32* %1743
  %1744 = load i32, i32* %select.ptr.1301, align 4
  %1745 = getelementptr inbounds i32, i32* %1625, i64 4
  %1746 = icmp slt i64 4, %len.
  %1747 = bitcast i64* %shadow to i32*
  %safe.1302 = or i1 %in.36, %1746
  %select.ptr.1303 = select i1 %safe.1302, i32* %1745, i32* %1747
  %1748 = load i32, i32* %select.ptr.1303, align 4
  %1749 = lshr i32 %1744, 24
  %1750 = zext i32 %1749 to i64
  %1751 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1750
  %1752 = sext i32 256 to i64
  %1753 = icmp slt i64 %1750, %1752
  %1754 = bitcast i64* %shadow to i32*
  %safe.1304 = or i1 %in.36, %1753
  %select.ptr.1305 = select i1 %safe.1304, i32* %1751, i32* %1754
  %1755 = load i32, i32* %select.ptr.1305, align 4
  %1756 = and i32 %1755, -16777216
  %1757 = xor i32 %1748, %1756
  %1758 = lshr i32 %1744, 16
  %1759 = and i32 %1758, 255
  %1760 = zext i32 %1759 to i64
  %1761 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1760
  %1762 = sext i32 256 to i64
  %1763 = icmp slt i64 %1760, %1762
  %1764 = bitcast i64* %shadow to i32*
  %safe.1306 = or i1 %in.36, %1763
  %select.ptr.1307 = select i1 %safe.1306, i32* %1761, i32* %1764
  %1765 = load i32, i32* %select.ptr.1307, align 4
  %1766 = and i32 %1765, 16711680
  %1767 = xor i32 %1757, %1766
  %1768 = lshr i32 %1744, 8
  %1769 = and i32 %1768, 255
  %1770 = zext i32 %1769 to i64
  %1771 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1770
  %1772 = sext i32 256 to i64
  %1773 = icmp slt i64 %1770, %1772
  %1774 = bitcast i64* %shadow to i32*
  %safe.1308 = or i1 %in.36, %1773
  %select.ptr.1309 = select i1 %safe.1308, i32* %1771, i32* %1774
  %1775 = load i32, i32* %select.ptr.1309, align 4
  %1776 = and i32 %1775, 65280
  %1777 = xor i32 %1767, %1776
  %1778 = and i32 %1744, 255
  %1779 = zext i32 %1778 to i64
  %1780 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1779
  %1781 = sext i32 256 to i64
  %1782 = icmp slt i64 %1779, %1781
  %1783 = bitcast i64* %shadow to i32*
  %safe.1310 = or i1 %in.36, %1782
  %select.ptr.1311 = select i1 %safe.1310, i32* %1780, i32* %1783
  %1784 = load i32, i32* %select.ptr.1311, align 4
  %1785 = and i32 %1784, 255
  %1786 = xor i32 %1777, %1785
  %1787 = getelementptr inbounds i32, i32* %1625, i64 12
  %1788 = icmp slt i64 12, %len.
  %1789 = bitcast i64* %shadow to i32*
  %safe.1312 = or i1 %in.36, %1788
  %select.ptr.1313 = select i1 %safe.1312, i32* %1787, i32* %1789
  %1790 = load i32, i32* %1787
  %1791 = sub i1 %in.36, true
  %1792 = xor i1 %1791, true
  %1793 = sext i1 %1791 to i32
  %1794 = and i32 %1793, %1790
  %1795 = sext i1 %1792 to i32
  %1796 = and i32 %1795, %1786
  %select.val.1314 = or i32 %1796, %1794
  store i32 %select.val.1314, i32* %select.ptr.1313, align 4
  %1797 = getelementptr inbounds i32, i32* %1625, i64 5
  %1798 = icmp slt i64 5, %len.
  %1799 = bitcast i64* %shadow to i32*
  %safe.1315 = or i1 %in.36, %1798
  %select.ptr.1316 = select i1 %safe.1315, i32* %1797, i32* %1799
  %1800 = load i32, i32* %select.ptr.1316, align 4
  %1801 = getelementptr inbounds i32, i32* %1625, i64 12
  %1802 = icmp slt i64 12, %len.
  %1803 = bitcast i64* %shadow to i32*
  %safe.1317 = or i1 %in.36, %1802
  %select.ptr.1318 = select i1 %safe.1317, i32* %1801, i32* %1803
  %1804 = load i32, i32* %select.ptr.1318, align 4
  %1805 = xor i32 %1800, %1804
  %1806 = getelementptr inbounds i32, i32* %1625, i64 13
  %1807 = icmp slt i64 13, %len.
  %1808 = bitcast i64* %shadow to i32*
  %safe.1319 = or i1 %in.36, %1807
  %select.ptr.1320 = select i1 %safe.1319, i32* %1806, i32* %1808
  %1809 = load i32, i32* %1806
  %1810 = sub i1 %in.36, true
  %1811 = xor i1 %1810, true
  %1812 = sext i1 %1810 to i32
  %1813 = and i32 %1812, %1809
  %1814 = sext i1 %1811 to i32
  %1815 = and i32 %1814, %1805
  %select.val.1321 = or i32 %1815, %1813
  store i32 %select.val.1321, i32* %select.ptr.1320, align 4
  %1816 = getelementptr inbounds i32, i32* %1625, i64 6
  %1817 = icmp slt i64 6, %len.
  %1818 = bitcast i64* %shadow to i32*
  %safe.1322 = or i1 %in.36, %1817
  %select.ptr.1323 = select i1 %safe.1322, i32* %1816, i32* %1818
  %1819 = load i32, i32* %select.ptr.1323, align 4
  %1820 = getelementptr inbounds i32, i32* %1625, i64 13
  %1821 = icmp slt i64 13, %len.
  %1822 = bitcast i64* %shadow to i32*
  %safe.1324 = or i1 %in.36, %1821
  %select.ptr.1325 = select i1 %safe.1324, i32* %1820, i32* %1822
  %1823 = load i32, i32* %select.ptr.1325, align 4
  %1824 = xor i32 %1819, %1823
  %1825 = getelementptr inbounds i32, i32* %1625, i64 14
  %1826 = icmp slt i64 14, %len.
  %1827 = bitcast i64* %shadow to i32*
  %safe.1326 = or i1 %in.36, %1826
  %select.ptr.1327 = select i1 %safe.1326, i32* %1825, i32* %1827
  %1828 = load i32, i32* %1825
  %1829 = sub i1 %in.36, true
  %1830 = xor i1 %1829, true
  %1831 = sext i1 %1829 to i32
  %1832 = and i32 %1831, %1828
  %1833 = sext i1 %1830 to i32
  %1834 = and i32 %1833, %1824
  %select.val.1328 = or i32 %1834, %1832
  store i32 %select.val.1328, i32* %select.ptr.1327, align 4
  %1835 = getelementptr inbounds i32, i32* %1625, i64 7
  %1836 = icmp slt i64 7, %len.
  %1837 = bitcast i64* %shadow to i32*
  %safe.1329 = or i1 %in.36, %1836
  %select.ptr.1330 = select i1 %safe.1329, i32* %1835, i32* %1837
  %1838 = load i32, i32* %select.ptr.1330, align 4
  %1839 = getelementptr inbounds i32, i32* %1625, i64 14
  %1840 = icmp slt i64 14, %len.
  %1841 = bitcast i64* %shadow to i32*
  %safe.1331 = or i1 %in.36, %1840
  %select.ptr.1332 = select i1 %safe.1331, i32* %1839, i32* %1841
  %1842 = load i32, i32* %select.ptr.1332, align 4
  %1843 = xor i32 %1838, %1842
  %1844 = getelementptr inbounds i32, i32* %1625, i64 15
  %1845 = icmp slt i64 15, %len.
  %1846 = bitcast i64* %shadow to i32*
  %safe.1333 = or i1 %in.36, %1845
  %select.ptr.1334 = select i1 %safe.1333, i32* %1844, i32* %1846
  %1847 = load i32, i32* %1844
  %1848 = sub i1 %in.36, true
  %1849 = xor i1 %1848, true
  %1850 = sext i1 %1848 to i32
  %1851 = and i32 %1850, %1847
  %1852 = sext i1 %1849 to i32
  %1853 = and i32 %1852, %1843
  %select.val.1335 = or i32 %1853, %1851
  store i32 %select.val.1335, i32* %select.ptr.1334, align 4
  store i1 %in.36, i1* %out.27
  %1854 = load i1, i1* %out.26
  %in.33 = and i1 %1854, true
  store i1 %in.33, i1* %out.13
  %1855 = load i1, i1* %out.4
  %in.29 = and i1 %1855, %174
  store i1 %in.29, i1* %out.5
  %1856 = load i1, i1* %out.5
  %1857 = getelementptr inbounds i32, i32* %0, i64 5
  %1858 = icmp slt i64 5, %len.
  %1859 = bitcast i64* %shadow to i32*
  %safe.414 = or i1 %1856, %1858
  %select.ptr.415 = select i1 %safe.414, i32* %1857, i32* %1859
  %1860 = load i32, i32* %select.ptr.415, align 4
  %1861 = load i32, i32* %0, align 4
  %1862 = lshr i32 %1860, 16
  %1863 = and i32 %1862, 255
  %1864 = zext i32 %1863 to i64
  %1865 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1864
  %1866 = sext i32 256 to i64
  %1867 = icmp slt i64 %1864, %1866
  %1868 = bitcast i64* %shadow to i32*
  %safe.416 = or i1 %1856, %1867
  %select.ptr.417 = select i1 %safe.416, i32* %1865, i32* %1868
  %1869 = load i32, i32* %select.ptr.417, align 4
  %1870 = and i32 %1869, -16777216
  %1871 = xor i32 %1861, %1870
  %1872 = lshr i32 %1860, 8
  %1873 = and i32 %1872, 255
  %1874 = zext i32 %1873 to i64
  %1875 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1874
  %1876 = sext i32 256 to i64
  %1877 = icmp slt i64 %1874, %1876
  %1878 = bitcast i64* %shadow to i32*
  %safe.418 = or i1 %1856, %1877
  %select.ptr.419 = select i1 %safe.418, i32* %1875, i32* %1878
  %1879 = load i32, i32* %select.ptr.419, align 4
  %1880 = and i32 %1879, 16711680
  %1881 = xor i32 %1871, %1880
  %1882 = and i32 %1860, 255
  %1883 = zext i32 %1882 to i64
  %1884 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1883
  %1885 = sext i32 256 to i64
  %1886 = icmp slt i64 %1883, %1885
  %1887 = bitcast i64* %shadow to i32*
  %safe.420 = or i1 %1856, %1886
  %select.ptr.421 = select i1 %safe.420, i32* %1884, i32* %1887
  %1888 = load i32, i32* %select.ptr.421, align 4
  %1889 = and i32 %1888, 65280
  %1890 = xor i32 %1881, %1889
  %1891 = lshr i32 %1860, 24
  %1892 = zext i32 %1891 to i64
  %1893 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %1892
  %1894 = sext i32 256 to i64
  %1895 = icmp slt i64 %1892, %1894
  %1896 = bitcast i64* %shadow to i32*
  %safe.422 = or i1 %1856, %1895
  %select.ptr.423 = select i1 %safe.422, i32* %1893, i32* %1896
  %1897 = load i32, i32* %select.ptr.423, align 4
  %1898 = and i32 %1897, 255
  %1899 = xor i32 %1890, %1898
  %1900 = xor i32 %1899, 16777216
  %1901 = getelementptr inbounds i32, i32* %0, i64 6
  %1902 = icmp slt i64 6, %len.
  %1903 = bitcast i64* %shadow to i32*
  %safe.424 = or i1 %1856, %1902
  %select.ptr.425 = select i1 %safe.424, i32* %1901, i32* %1903
  %1904 = load i32, i32* %1901
  %1905 = sub i1 %1856, true
  %1906 = xor i1 %1905, true
  %1907 = sext i1 %1905 to i32
  %1908 = and i32 %1907, %1904
  %1909 = sext i1 %1906 to i32
  %1910 = and i32 %1909, %1900
  %select.val.426 = or i32 %1910, %1908
  store i32 %select.val.426, i32* %select.ptr.425, align 4
  %1911 = getelementptr inbounds i32, i32* %0, i64 1
  %1912 = icmp slt i64 1, %len.
  %1913 = bitcast i64* %shadow to i32*
  %safe.427 = or i1 %1856, %1912
  %select.ptr.428 = select i1 %safe.427, i32* %1911, i32* %1913
  %1914 = load i32, i32* %select.ptr.428, align 4
  %1915 = getelementptr inbounds i32, i32* %0, i64 6
  %1916 = icmp slt i64 6, %len.
  %1917 = bitcast i64* %shadow to i32*
  %safe.429 = or i1 %1856, %1916
  %select.ptr.430 = select i1 %safe.429, i32* %1915, i32* %1917
  %1918 = load i32, i32* %select.ptr.430, align 4
  %1919 = xor i32 %1914, %1918
  %1920 = getelementptr inbounds i32, i32* %0, i64 7
  %1921 = icmp slt i64 7, %len.
  %1922 = bitcast i64* %shadow to i32*
  %safe.431 = or i1 %1856, %1921
  %select.ptr.432 = select i1 %safe.431, i32* %1920, i32* %1922
  %1923 = load i32, i32* %1920
  %1924 = sub i1 %1856, true
  %1925 = xor i1 %1924, true
  %1926 = sext i1 %1924 to i32
  %1927 = and i32 %1926, %1923
  %1928 = sext i1 %1925 to i32
  %1929 = and i32 %1928, %1919
  %select.val.433 = or i32 %1929, %1927
  store i32 %select.val.433, i32* %select.ptr.432, align 4
  %1930 = getelementptr inbounds i32, i32* %0, i64 2
  %1931 = icmp slt i64 2, %len.
  %1932 = bitcast i64* %shadow to i32*
  %safe.434 = or i1 %1856, %1931
  %select.ptr.435 = select i1 %safe.434, i32* %1930, i32* %1932
  %1933 = load i32, i32* %select.ptr.435, align 4
  %1934 = getelementptr inbounds i32, i32* %0, i64 7
  %1935 = icmp slt i64 7, %len.
  %1936 = bitcast i64* %shadow to i32*
  %safe.436 = or i1 %1856, %1935
  %select.ptr.437 = select i1 %safe.436, i32* %1934, i32* %1936
  %1937 = load i32, i32* %select.ptr.437, align 4
  %1938 = xor i32 %1933, %1937
  %1939 = getelementptr inbounds i32, i32* %0, i64 8
  %1940 = icmp slt i64 8, %len.
  %1941 = bitcast i64* %shadow to i32*
  %safe.438 = or i1 %1856, %1940
  %select.ptr.439 = select i1 %safe.438, i32* %1939, i32* %1941
  %1942 = load i32, i32* %1939
  %1943 = sub i1 %1856, true
  %1944 = xor i1 %1943, true
  %1945 = sext i1 %1943 to i32
  %1946 = and i32 %1945, %1942
  %1947 = sext i1 %1944 to i32
  %1948 = and i32 %1947, %1938
  %select.val.440 = or i32 %1948, %1946
  store i32 %select.val.440, i32* %select.ptr.439, align 4
  %1949 = getelementptr inbounds i32, i32* %0, i64 3
  %1950 = icmp slt i64 3, %len.
  %1951 = bitcast i64* %shadow to i32*
  %safe.441 = or i1 %1856, %1950
  %select.ptr.442 = select i1 %safe.441, i32* %1949, i32* %1951
  %1952 = load i32, i32* %select.ptr.442, align 4
  %1953 = getelementptr inbounds i32, i32* %0, i64 8
  %1954 = icmp slt i64 8, %len.
  %1955 = bitcast i64* %shadow to i32*
  %safe.443 = or i1 %1856, %1954
  %select.ptr.444 = select i1 %safe.443, i32* %1953, i32* %1955
  %1956 = load i32, i32* %select.ptr.444, align 4
  %1957 = xor i32 %1952, %1956
  %1958 = getelementptr inbounds i32, i32* %0, i64 9
  %1959 = icmp slt i64 9, %len.
  %1960 = bitcast i64* %shadow to i32*
  %safe.445 = or i1 %1856, %1959
  %select.ptr.446 = select i1 %safe.445, i32* %1958, i32* %1960
  %1961 = load i32, i32* %1958
  %1962 = sub i1 %1856, true
  %1963 = xor i1 %1962, true
  %1964 = sext i1 %1962 to i32
  %1965 = and i32 %1964, %1961
  %1966 = sext i1 %1963 to i32
  %1967 = and i32 %1966, %1957
  %select.val.447 = or i32 %1967, %1965
  store i32 %select.val.447, i32* %select.ptr.446, align 4
  store i1 %1856, i1* %out.6
  %1968 = load i1, i1* %out.6
  %1969 = getelementptr inbounds i32, i32* %0, i64 4
  %1970 = icmp slt i64 4, %len.
  %1971 = bitcast i64* %shadow to i32*
  %safe.448 = or i1 %1968, %1970
  %select.ptr.449 = select i1 %safe.448, i32* %1969, i32* %1971
  %1972 = load i32, i32* %select.ptr.449, align 4
  %1973 = getelementptr inbounds i32, i32* %0, i64 9
  %1974 = icmp slt i64 9, %len.
  %1975 = bitcast i64* %shadow to i32*
  %safe.450 = or i1 %1968, %1974
  %select.ptr.451 = select i1 %safe.450, i32* %1973, i32* %1975
  %1976 = load i32, i32* %select.ptr.451, align 4
  %1977 = xor i32 %1972, %1976
  %1978 = getelementptr inbounds i32, i32* %0, i64 10
  %1979 = icmp slt i64 10, %len.
  %1980 = bitcast i64* %shadow to i32*
  %safe.452 = or i1 %1968, %1979
  %select.ptr.453 = select i1 %safe.452, i32* %1978, i32* %1980
  %1981 = load i32, i32* %1978
  %1982 = sub i1 %1968, true
  %1983 = xor i1 %1982, true
  %1984 = sext i1 %1982 to i32
  %1985 = and i32 %1984, %1981
  %1986 = sext i1 %1983 to i32
  %1987 = and i32 %1986, %1977
  %select.val.454 = or i32 %1987, %1985
  store i32 %select.val.454, i32* %select.ptr.453, align 4
  %1988 = getelementptr inbounds i32, i32* %0, i64 5
  %1989 = icmp slt i64 5, %len.
  %1990 = bitcast i64* %shadow to i32*
  %safe.455 = or i1 %1968, %1989
  %select.ptr.456 = select i1 %safe.455, i32* %1988, i32* %1990
  %1991 = load i32, i32* %select.ptr.456, align 4
  %1992 = getelementptr inbounds i32, i32* %0, i64 10
  %1993 = icmp slt i64 10, %len.
  %1994 = bitcast i64* %shadow to i32*
  %safe.457 = or i1 %1968, %1993
  %select.ptr.458 = select i1 %safe.457, i32* %1992, i32* %1994
  %1995 = load i32, i32* %select.ptr.458, align 4
  %1996 = xor i32 %1991, %1995
  %1997 = getelementptr inbounds i32, i32* %0, i64 11
  %1998 = icmp slt i64 11, %len.
  %1999 = bitcast i64* %shadow to i32*
  %safe.459 = or i1 %1968, %1998
  %select.ptr.460 = select i1 %safe.459, i32* %1997, i32* %1999
  %2000 = load i32, i32* %1997
  %2001 = sub i1 %1968, true
  %2002 = xor i1 %2001, true
  %2003 = sext i1 %2001 to i32
  %2004 = and i32 %2003, %2000
  %2005 = sext i1 %2002 to i32
  %2006 = and i32 %2005, %1996
  %select.val.461 = or i32 %2006, %2004
  store i32 %select.val.461, i32* %select.ptr.460, align 4
  %2007 = getelementptr inbounds i32, i32* %0, i64 6
  %2008 = getelementptr inbounds i32, i32* %2007, i64 5
  %2009 = icmp slt i64 5, %len.
  %2010 = bitcast i64* %shadow to i32*
  %safe.462 = or i1 %1968, %2009
  %select.ptr.463 = select i1 %safe.462, i32* %2008, i32* %2010
  %2011 = load i32, i32* %select.ptr.463, align 4
  %2012 = icmp slt i64 6, %len.
  %2013 = bitcast i64* %shadow to i32*
  %safe.464 = or i1 %1968, %2012
  %select.ptr.465 = select i1 %safe.464, i32* %2007, i32* %2013
  %2014 = load i32, i32* %select.ptr.465, align 4
  %2015 = lshr i32 %2011, 16
  %2016 = and i32 %2015, 255
  %2017 = zext i32 %2016 to i64
  %2018 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2017
  %2019 = sext i32 256 to i64
  %2020 = icmp slt i64 %2017, %2019
  %2021 = bitcast i64* %shadow to i32*
  %safe.466 = or i1 %1968, %2020
  %select.ptr.467 = select i1 %safe.466, i32* %2018, i32* %2021
  %2022 = load i32, i32* %select.ptr.467, align 4
  %2023 = and i32 %2022, -16777216
  %2024 = xor i32 %2014, %2023
  %2025 = lshr i32 %2011, 8
  %2026 = and i32 %2025, 255
  %2027 = zext i32 %2026 to i64
  %2028 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2027
  %2029 = sext i32 256 to i64
  %2030 = icmp slt i64 %2027, %2029
  %2031 = bitcast i64* %shadow to i32*
  %safe.468 = or i1 %1968, %2030
  %select.ptr.469 = select i1 %safe.468, i32* %2028, i32* %2031
  %2032 = load i32, i32* %select.ptr.469, align 4
  %2033 = and i32 %2032, 16711680
  %2034 = xor i32 %2024, %2033
  %2035 = and i32 %2011, 255
  %2036 = zext i32 %2035 to i64
  %2037 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2036
  %2038 = sext i32 256 to i64
  %2039 = icmp slt i64 %2036, %2038
  %2040 = bitcast i64* %shadow to i32*
  %safe.470 = or i1 %1968, %2039
  %select.ptr.471 = select i1 %safe.470, i32* %2037, i32* %2040
  %2041 = load i32, i32* %select.ptr.471, align 4
  %2042 = and i32 %2041, 65280
  %2043 = xor i32 %2034, %2042
  %2044 = lshr i32 %2011, 24
  %2045 = zext i32 %2044 to i64
  %2046 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2045
  %2047 = sext i32 256 to i64
  %2048 = icmp slt i64 %2045, %2047
  %2049 = bitcast i64* %shadow to i32*
  %safe.472 = or i1 %1968, %2048
  %select.ptr.473 = select i1 %safe.472, i32* %2046, i32* %2049
  %2050 = load i32, i32* %select.ptr.473, align 4
  %2051 = and i32 %2050, 255
  %2052 = xor i32 %2043, %2051
  %2053 = xor i32 %2052, 33554432
  %2054 = getelementptr inbounds i32, i32* %2007, i64 6
  %2055 = icmp slt i64 6, %len.
  %2056 = bitcast i64* %shadow to i32*
  %safe.474 = or i1 %1968, %2055
  %select.ptr.475 = select i1 %safe.474, i32* %2054, i32* %2056
  %2057 = load i32, i32* %2054
  %2058 = sub i1 %1968, true
  %2059 = xor i1 %2058, true
  %2060 = sext i1 %2058 to i32
  %2061 = and i32 %2060, %2057
  %2062 = sext i1 %2059 to i32
  %2063 = and i32 %2062, %2053
  %select.val.476 = or i32 %2063, %2061
  store i32 %select.val.476, i32* %select.ptr.475, align 4
  %2064 = getelementptr inbounds i32, i32* %2007, i64 1
  %2065 = icmp slt i64 1, %len.
  %2066 = bitcast i64* %shadow to i32*
  %safe.477 = or i1 %1968, %2065
  %select.ptr.478 = select i1 %safe.477, i32* %2064, i32* %2066
  %2067 = load i32, i32* %select.ptr.478, align 4
  %2068 = getelementptr inbounds i32, i32* %2007, i64 6
  %2069 = icmp slt i64 6, %len.
  %2070 = bitcast i64* %shadow to i32*
  %safe.479 = or i1 %1968, %2069
  %select.ptr.480 = select i1 %safe.479, i32* %2068, i32* %2070
  %2071 = load i32, i32* %select.ptr.480, align 4
  %2072 = xor i32 %2067, %2071
  %2073 = getelementptr inbounds i32, i32* %2007, i64 7
  %2074 = icmp slt i64 7, %len.
  %2075 = bitcast i64* %shadow to i32*
  %safe.481 = or i1 %1968, %2074
  %select.ptr.482 = select i1 %safe.481, i32* %2073, i32* %2075
  %2076 = load i32, i32* %2073
  %2077 = sub i1 %1968, true
  %2078 = xor i1 %2077, true
  %2079 = sext i1 %2077 to i32
  %2080 = and i32 %2079, %2076
  %2081 = sext i1 %2078 to i32
  %2082 = and i32 %2081, %2072
  %select.val.483 = or i32 %2082, %2080
  store i32 %select.val.483, i32* %select.ptr.482, align 4
  %2083 = getelementptr inbounds i32, i32* %2007, i64 2
  %2084 = icmp slt i64 2, %len.
  %2085 = bitcast i64* %shadow to i32*
  %safe.484 = or i1 %1968, %2084
  %select.ptr.485 = select i1 %safe.484, i32* %2083, i32* %2085
  %2086 = load i32, i32* %select.ptr.485, align 4
  %2087 = getelementptr inbounds i32, i32* %2007, i64 7
  %2088 = icmp slt i64 7, %len.
  %2089 = bitcast i64* %shadow to i32*
  %safe.486 = or i1 %1968, %2088
  %select.ptr.487 = select i1 %safe.486, i32* %2087, i32* %2089
  %2090 = load i32, i32* %select.ptr.487, align 4
  %2091 = xor i32 %2086, %2090
  %2092 = getelementptr inbounds i32, i32* %2007, i64 8
  %2093 = icmp slt i64 8, %len.
  %2094 = bitcast i64* %shadow to i32*
  %safe.488 = or i1 %1968, %2093
  %select.ptr.489 = select i1 %safe.488, i32* %2092, i32* %2094
  %2095 = load i32, i32* %2092
  %2096 = sub i1 %1968, true
  %2097 = xor i1 %2096, true
  %2098 = sext i1 %2096 to i32
  %2099 = and i32 %2098, %2095
  %2100 = sext i1 %2097 to i32
  %2101 = and i32 %2100, %2091
  %select.val.490 = or i32 %2101, %2099
  store i32 %select.val.490, i32* %select.ptr.489, align 4
  %2102 = getelementptr inbounds i32, i32* %2007, i64 3
  %2103 = icmp slt i64 3, %len.
  %2104 = bitcast i64* %shadow to i32*
  %safe.491 = or i1 %1968, %2103
  %select.ptr.492 = select i1 %safe.491, i32* %2102, i32* %2104
  %2105 = load i32, i32* %select.ptr.492, align 4
  %2106 = getelementptr inbounds i32, i32* %2007, i64 8
  %2107 = icmp slt i64 8, %len.
  %2108 = bitcast i64* %shadow to i32*
  %safe.493 = or i1 %1968, %2107
  %select.ptr.494 = select i1 %safe.493, i32* %2106, i32* %2108
  %2109 = load i32, i32* %select.ptr.494, align 4
  %2110 = xor i32 %2105, %2109
  %2111 = getelementptr inbounds i32, i32* %2007, i64 9
  %2112 = icmp slt i64 9, %len.
  %2113 = bitcast i64* %shadow to i32*
  %safe.495 = or i1 %1968, %2112
  %select.ptr.496 = select i1 %safe.495, i32* %2111, i32* %2113
  %2114 = load i32, i32* %2111
  %2115 = sub i1 %1968, true
  %2116 = xor i1 %2115, true
  %2117 = sext i1 %2115 to i32
  %2118 = and i32 %2117, %2114
  %2119 = sext i1 %2116 to i32
  %2120 = and i32 %2119, %2110
  %select.val.497 = or i32 %2120, %2118
  store i32 %select.val.497, i32* %select.ptr.496, align 4
  store i1 %1968, i1* %out.7
  %2121 = load i1, i1* %out.7
  %2122 = getelementptr inbounds i32, i32* %2007, i64 4
  %2123 = icmp slt i64 4, %len.
  %2124 = bitcast i64* %shadow to i32*
  %safe.626 = or i1 %2121, %2123
  %select.ptr.627 = select i1 %safe.626, i32* %2122, i32* %2124
  %2125 = load i32, i32* %select.ptr.627, align 4
  %2126 = getelementptr inbounds i32, i32* %2007, i64 9
  %2127 = icmp slt i64 9, %len.
  %2128 = bitcast i64* %shadow to i32*
  %safe.628 = or i1 %2121, %2127
  %select.ptr.629 = select i1 %safe.628, i32* %2126, i32* %2128
  %2129 = load i32, i32* %select.ptr.629, align 4
  %2130 = xor i32 %2125, %2129
  %2131 = getelementptr inbounds i32, i32* %2007, i64 10
  %2132 = icmp slt i64 10, %len.
  %2133 = bitcast i64* %shadow to i32*
  %safe.630 = or i1 %2121, %2132
  %select.ptr.631 = select i1 %safe.630, i32* %2131, i32* %2133
  %2134 = load i32, i32* %2131
  %2135 = sub i1 %2121, true
  %2136 = xor i1 %2135, true
  %2137 = sext i1 %2135 to i32
  %2138 = and i32 %2137, %2134
  %2139 = sext i1 %2136 to i32
  %2140 = and i32 %2139, %2130
  %select.val.632 = or i32 %2140, %2138
  store i32 %select.val.632, i32* %select.ptr.631, align 4
  %2141 = getelementptr inbounds i32, i32* %2007, i64 5
  %2142 = icmp slt i64 5, %len.
  %2143 = bitcast i64* %shadow to i32*
  %safe.633 = or i1 %2121, %2142
  %select.ptr.634 = select i1 %safe.633, i32* %2141, i32* %2143
  %2144 = load i32, i32* %select.ptr.634, align 4
  %2145 = getelementptr inbounds i32, i32* %2007, i64 10
  %2146 = icmp slt i64 10, %len.
  %2147 = bitcast i64* %shadow to i32*
  %safe.635 = or i1 %2121, %2146
  %select.ptr.636 = select i1 %safe.635, i32* %2145, i32* %2147
  %2148 = load i32, i32* %select.ptr.636, align 4
  %2149 = xor i32 %2144, %2148
  %2150 = getelementptr inbounds i32, i32* %2007, i64 11
  %2151 = icmp slt i64 11, %len.
  %2152 = bitcast i64* %shadow to i32*
  %safe.637 = or i1 %2121, %2151
  %select.ptr.638 = select i1 %safe.637, i32* %2150, i32* %2152
  %2153 = load i32, i32* %2150
  %2154 = sub i1 %2121, true
  %2155 = xor i1 %2154, true
  %2156 = sext i1 %2154 to i32
  %2157 = and i32 %2156, %2153
  %2158 = sext i1 %2155 to i32
  %2159 = and i32 %2158, %2149
  %select.val.639 = or i32 %2159, %2157
  store i32 %select.val.639, i32* %select.ptr.638, align 4
  %2160 = getelementptr inbounds i32, i32* %2007, i64 6
  %2161 = getelementptr inbounds i32, i32* %2160, i64 5
  %2162 = icmp slt i64 5, %len.
  %2163 = bitcast i64* %shadow to i32*
  %safe.640 = or i1 %2121, %2162
  %select.ptr.641 = select i1 %safe.640, i32* %2161, i32* %2163
  %2164 = load i32, i32* %select.ptr.641, align 4
  %2165 = icmp slt i64 6, %len.
  %2166 = bitcast i64* %shadow to i32*
  %safe.642 = or i1 %2121, %2165
  %select.ptr.643 = select i1 %safe.642, i32* %2160, i32* %2166
  %2167 = load i32, i32* %select.ptr.643, align 4
  %2168 = lshr i32 %2164, 16
  %2169 = and i32 %2168, 255
  %2170 = zext i32 %2169 to i64
  %2171 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2170
  %2172 = sext i32 256 to i64
  %2173 = icmp slt i64 %2170, %2172
  %2174 = bitcast i64* %shadow to i32*
  %safe.644 = or i1 %2121, %2173
  %select.ptr.645 = select i1 %safe.644, i32* %2171, i32* %2174
  %2175 = load i32, i32* %select.ptr.645, align 4
  %2176 = and i32 %2175, -16777216
  %2177 = xor i32 %2167, %2176
  %2178 = lshr i32 %2164, 8
  %2179 = and i32 %2178, 255
  %2180 = zext i32 %2179 to i64
  %2181 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2180
  %2182 = sext i32 256 to i64
  %2183 = icmp slt i64 %2180, %2182
  %2184 = bitcast i64* %shadow to i32*
  %safe.646 = or i1 %2121, %2183
  %select.ptr.647 = select i1 %safe.646, i32* %2181, i32* %2184
  %2185 = load i32, i32* %select.ptr.647, align 4
  %2186 = and i32 %2185, 16711680
  %2187 = xor i32 %2177, %2186
  %2188 = and i32 %2164, 255
  %2189 = zext i32 %2188 to i64
  %2190 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2189
  %2191 = sext i32 256 to i64
  %2192 = icmp slt i64 %2189, %2191
  %2193 = bitcast i64* %shadow to i32*
  %safe.648 = or i1 %2121, %2192
  %select.ptr.649 = select i1 %safe.648, i32* %2190, i32* %2193
  %2194 = load i32, i32* %select.ptr.649, align 4
  %2195 = and i32 %2194, 65280
  %2196 = xor i32 %2187, %2195
  %2197 = lshr i32 %2164, 24
  %2198 = zext i32 %2197 to i64
  %2199 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2198
  %2200 = sext i32 256 to i64
  %2201 = icmp slt i64 %2198, %2200
  %2202 = bitcast i64* %shadow to i32*
  %safe.650 = or i1 %2121, %2201
  %select.ptr.651 = select i1 %safe.650, i32* %2199, i32* %2202
  %2203 = load i32, i32* %select.ptr.651, align 4
  %2204 = and i32 %2203, 255
  %2205 = xor i32 %2196, %2204
  %2206 = xor i32 %2205, 67108864
  %2207 = getelementptr inbounds i32, i32* %2160, i64 6
  %2208 = icmp slt i64 6, %len.
  %2209 = bitcast i64* %shadow to i32*
  %safe.652 = or i1 %2121, %2208
  %select.ptr.653 = select i1 %safe.652, i32* %2207, i32* %2209
  %2210 = load i32, i32* %2207
  %2211 = sub i1 %2121, true
  %2212 = xor i1 %2211, true
  %2213 = sext i1 %2211 to i32
  %2214 = and i32 %2213, %2210
  %2215 = sext i1 %2212 to i32
  %2216 = and i32 %2215, %2206
  %select.val.654 = or i32 %2216, %2214
  store i32 %select.val.654, i32* %select.ptr.653, align 4
  %2217 = getelementptr inbounds i32, i32* %2160, i64 1
  %2218 = icmp slt i64 1, %len.
  %2219 = bitcast i64* %shadow to i32*
  %safe.655 = or i1 %2121, %2218
  %select.ptr.656 = select i1 %safe.655, i32* %2217, i32* %2219
  %2220 = load i32, i32* %select.ptr.656, align 4
  %2221 = getelementptr inbounds i32, i32* %2160, i64 6
  %2222 = icmp slt i64 6, %len.
  %2223 = bitcast i64* %shadow to i32*
  %safe.657 = or i1 %2121, %2222
  %select.ptr.658 = select i1 %safe.657, i32* %2221, i32* %2223
  %2224 = load i32, i32* %select.ptr.658, align 4
  %2225 = xor i32 %2220, %2224
  %2226 = getelementptr inbounds i32, i32* %2160, i64 7
  %2227 = icmp slt i64 7, %len.
  %2228 = bitcast i64* %shadow to i32*
  %safe.659 = or i1 %2121, %2227
  %select.ptr.660 = select i1 %safe.659, i32* %2226, i32* %2228
  %2229 = load i32, i32* %2226
  %2230 = sub i1 %2121, true
  %2231 = xor i1 %2230, true
  %2232 = sext i1 %2230 to i32
  %2233 = and i32 %2232, %2229
  %2234 = sext i1 %2231 to i32
  %2235 = and i32 %2234, %2225
  %select.val.661 = or i32 %2235, %2233
  store i32 %select.val.661, i32* %select.ptr.660, align 4
  %2236 = getelementptr inbounds i32, i32* %2160, i64 2
  %2237 = icmp slt i64 2, %len.
  %2238 = bitcast i64* %shadow to i32*
  %safe.662 = or i1 %2121, %2237
  %select.ptr.663 = select i1 %safe.662, i32* %2236, i32* %2238
  %2239 = load i32, i32* %select.ptr.663, align 4
  %2240 = getelementptr inbounds i32, i32* %2160, i64 7
  %2241 = icmp slt i64 7, %len.
  %2242 = bitcast i64* %shadow to i32*
  %safe.664 = or i1 %2121, %2241
  %select.ptr.665 = select i1 %safe.664, i32* %2240, i32* %2242
  %2243 = load i32, i32* %select.ptr.665, align 4
  %2244 = xor i32 %2239, %2243
  %2245 = getelementptr inbounds i32, i32* %2160, i64 8
  %2246 = icmp slt i64 8, %len.
  %2247 = bitcast i64* %shadow to i32*
  %safe.666 = or i1 %2121, %2246
  %select.ptr.667 = select i1 %safe.666, i32* %2245, i32* %2247
  %2248 = load i32, i32* %2245
  %2249 = sub i1 %2121, true
  %2250 = xor i1 %2249, true
  %2251 = sext i1 %2249 to i32
  %2252 = and i32 %2251, %2248
  %2253 = sext i1 %2250 to i32
  %2254 = and i32 %2253, %2244
  %select.val.668 = or i32 %2254, %2252
  store i32 %select.val.668, i32* %select.ptr.667, align 4
  %2255 = getelementptr inbounds i32, i32* %2160, i64 3
  %2256 = icmp slt i64 3, %len.
  %2257 = bitcast i64* %shadow to i32*
  %safe.669 = or i1 %2121, %2256
  %select.ptr.670 = select i1 %safe.669, i32* %2255, i32* %2257
  %2258 = load i32, i32* %select.ptr.670, align 4
  %2259 = getelementptr inbounds i32, i32* %2160, i64 8
  %2260 = icmp slt i64 8, %len.
  %2261 = bitcast i64* %shadow to i32*
  %safe.671 = or i1 %2121, %2260
  %select.ptr.672 = select i1 %safe.671, i32* %2259, i32* %2261
  %2262 = load i32, i32* %select.ptr.672, align 4
  %2263 = xor i32 %2258, %2262
  %2264 = getelementptr inbounds i32, i32* %2160, i64 9
  %2265 = icmp slt i64 9, %len.
  %2266 = bitcast i64* %shadow to i32*
  %safe.673 = or i1 %2121, %2265
  %select.ptr.674 = select i1 %safe.673, i32* %2264, i32* %2266
  %2267 = load i32, i32* %2264
  %2268 = sub i1 %2121, true
  %2269 = xor i1 %2268, true
  %2270 = sext i1 %2268 to i32
  %2271 = and i32 %2270, %2267
  %2272 = sext i1 %2269 to i32
  %2273 = and i32 %2272, %2263
  %select.val.675 = or i32 %2273, %2271
  store i32 %select.val.675, i32* %select.ptr.674, align 4
  store i1 %2121, i1* %out.15
  %2274 = load i1, i1* %out.15
  %2275 = getelementptr inbounds i32, i32* %2160, i64 4
  %2276 = icmp slt i64 4, %len.
  %2277 = bitcast i64* %shadow to i32*
  %safe.676 = or i1 %2274, %2276
  %select.ptr.677 = select i1 %safe.676, i32* %2275, i32* %2277
  %2278 = load i32, i32* %select.ptr.677, align 4
  %2279 = getelementptr inbounds i32, i32* %2160, i64 9
  %2280 = icmp slt i64 9, %len.
  %2281 = bitcast i64* %shadow to i32*
  %safe.678 = or i1 %2274, %2280
  %select.ptr.679 = select i1 %safe.678, i32* %2279, i32* %2281
  %2282 = load i32, i32* %select.ptr.679, align 4
  %2283 = xor i32 %2278, %2282
  %2284 = getelementptr inbounds i32, i32* %2160, i64 10
  %2285 = icmp slt i64 10, %len.
  %2286 = bitcast i64* %shadow to i32*
  %safe.680 = or i1 %2274, %2285
  %select.ptr.681 = select i1 %safe.680, i32* %2284, i32* %2286
  %2287 = load i32, i32* %2284
  %2288 = sub i1 %2274, true
  %2289 = xor i1 %2288, true
  %2290 = sext i1 %2288 to i32
  %2291 = and i32 %2290, %2287
  %2292 = sext i1 %2289 to i32
  %2293 = and i32 %2292, %2283
  %select.val.682 = or i32 %2293, %2291
  store i32 %select.val.682, i32* %select.ptr.681, align 4
  %2294 = getelementptr inbounds i32, i32* %2160, i64 5
  %2295 = icmp slt i64 5, %len.
  %2296 = bitcast i64* %shadow to i32*
  %safe.683 = or i1 %2274, %2295
  %select.ptr.684 = select i1 %safe.683, i32* %2294, i32* %2296
  %2297 = load i32, i32* %select.ptr.684, align 4
  %2298 = getelementptr inbounds i32, i32* %2160, i64 10
  %2299 = icmp slt i64 10, %len.
  %2300 = bitcast i64* %shadow to i32*
  %safe.685 = or i1 %2274, %2299
  %select.ptr.686 = select i1 %safe.685, i32* %2298, i32* %2300
  %2301 = load i32, i32* %select.ptr.686, align 4
  %2302 = xor i32 %2297, %2301
  %2303 = getelementptr inbounds i32, i32* %2160, i64 11
  %2304 = icmp slt i64 11, %len.
  %2305 = bitcast i64* %shadow to i32*
  %safe.687 = or i1 %2274, %2304
  %select.ptr.688 = select i1 %safe.687, i32* %2303, i32* %2305
  %2306 = load i32, i32* %2303
  %2307 = sub i1 %2274, true
  %2308 = xor i1 %2307, true
  %2309 = sext i1 %2307 to i32
  %2310 = and i32 %2309, %2306
  %2311 = sext i1 %2308 to i32
  %2312 = and i32 %2311, %2302
  %select.val.689 = or i32 %2312, %2310
  store i32 %select.val.689, i32* %select.ptr.688, align 4
  %2313 = getelementptr inbounds i32, i32* %2160, i64 6
  %2314 = getelementptr inbounds i32, i32* %2313, i64 5
  %2315 = icmp slt i64 5, %len.
  %2316 = bitcast i64* %shadow to i32*
  %safe.690 = or i1 %2274, %2315
  %select.ptr.691 = select i1 %safe.690, i32* %2314, i32* %2316
  %2317 = load i32, i32* %select.ptr.691, align 4
  %2318 = icmp slt i64 6, %len.
  %2319 = bitcast i64* %shadow to i32*
  %safe.692 = or i1 %2274, %2318
  %select.ptr.693 = select i1 %safe.692, i32* %2313, i32* %2319
  %2320 = load i32, i32* %select.ptr.693, align 4
  %2321 = lshr i32 %2317, 16
  %2322 = and i32 %2321, 255
  %2323 = zext i32 %2322 to i64
  %2324 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2323
  %2325 = sext i32 256 to i64
  %2326 = icmp slt i64 %2323, %2325
  %2327 = bitcast i64* %shadow to i32*
  %safe.694 = or i1 %2274, %2326
  %select.ptr.695 = select i1 %safe.694, i32* %2324, i32* %2327
  %2328 = load i32, i32* %select.ptr.695, align 4
  %2329 = and i32 %2328, -16777216
  %2330 = xor i32 %2320, %2329
  %2331 = lshr i32 %2317, 8
  %2332 = and i32 %2331, 255
  %2333 = zext i32 %2332 to i64
  %2334 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2333
  %2335 = sext i32 256 to i64
  %2336 = icmp slt i64 %2333, %2335
  %2337 = bitcast i64* %shadow to i32*
  %safe.696 = or i1 %2274, %2336
  %select.ptr.697 = select i1 %safe.696, i32* %2334, i32* %2337
  %2338 = load i32, i32* %select.ptr.697, align 4
  %2339 = and i32 %2338, 16711680
  %2340 = xor i32 %2330, %2339
  %2341 = and i32 %2317, 255
  %2342 = zext i32 %2341 to i64
  %2343 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2342
  %2344 = sext i32 256 to i64
  %2345 = icmp slt i64 %2342, %2344
  %2346 = bitcast i64* %shadow to i32*
  %safe.698 = or i1 %2274, %2345
  %select.ptr.699 = select i1 %safe.698, i32* %2343, i32* %2346
  %2347 = load i32, i32* %select.ptr.699, align 4
  %2348 = and i32 %2347, 65280
  %2349 = xor i32 %2340, %2348
  %2350 = lshr i32 %2317, 24
  %2351 = zext i32 %2350 to i64
  %2352 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2351
  %2353 = sext i32 256 to i64
  %2354 = icmp slt i64 %2351, %2353
  %2355 = bitcast i64* %shadow to i32*
  %safe.700 = or i1 %2274, %2354
  %select.ptr.701 = select i1 %safe.700, i32* %2352, i32* %2355
  %2356 = load i32, i32* %select.ptr.701, align 4
  %2357 = and i32 %2356, 255
  %2358 = xor i32 %2349, %2357
  %2359 = xor i32 %2358, 134217728
  %2360 = getelementptr inbounds i32, i32* %2313, i64 6
  %2361 = icmp slt i64 6, %len.
  %2362 = bitcast i64* %shadow to i32*
  %safe.702 = or i1 %2274, %2361
  %select.ptr.703 = select i1 %safe.702, i32* %2360, i32* %2362
  %2363 = load i32, i32* %2360
  %2364 = sub i1 %2274, true
  %2365 = xor i1 %2364, true
  %2366 = sext i1 %2364 to i32
  %2367 = and i32 %2366, %2363
  %2368 = sext i1 %2365 to i32
  %2369 = and i32 %2368, %2359
  %select.val.704 = or i32 %2369, %2367
  store i32 %select.val.704, i32* %select.ptr.703, align 4
  %2370 = getelementptr inbounds i32, i32* %2313, i64 1
  %2371 = icmp slt i64 1, %len.
  %2372 = bitcast i64* %shadow to i32*
  %safe.705 = or i1 %2274, %2371
  %select.ptr.706 = select i1 %safe.705, i32* %2370, i32* %2372
  %2373 = load i32, i32* %select.ptr.706, align 4
  %2374 = getelementptr inbounds i32, i32* %2313, i64 6
  %2375 = icmp slt i64 6, %len.
  %2376 = bitcast i64* %shadow to i32*
  %safe.707 = or i1 %2274, %2375
  %select.ptr.708 = select i1 %safe.707, i32* %2374, i32* %2376
  %2377 = load i32, i32* %select.ptr.708, align 4
  %2378 = xor i32 %2373, %2377
  %2379 = getelementptr inbounds i32, i32* %2313, i64 7
  %2380 = icmp slt i64 7, %len.
  %2381 = bitcast i64* %shadow to i32*
  %safe.709 = or i1 %2274, %2380
  %select.ptr.710 = select i1 %safe.709, i32* %2379, i32* %2381
  %2382 = load i32, i32* %2379
  %2383 = sub i1 %2274, true
  %2384 = xor i1 %2383, true
  %2385 = sext i1 %2383 to i32
  %2386 = and i32 %2385, %2382
  %2387 = sext i1 %2384 to i32
  %2388 = and i32 %2387, %2378
  %select.val.711 = or i32 %2388, %2386
  store i32 %select.val.711, i32* %select.ptr.710, align 4
  %2389 = getelementptr inbounds i32, i32* %2313, i64 2
  %2390 = icmp slt i64 2, %len.
  %2391 = bitcast i64* %shadow to i32*
  %safe.712 = or i1 %2274, %2390
  %select.ptr.713 = select i1 %safe.712, i32* %2389, i32* %2391
  %2392 = load i32, i32* %select.ptr.713, align 4
  %2393 = getelementptr inbounds i32, i32* %2313, i64 7
  %2394 = icmp slt i64 7, %len.
  %2395 = bitcast i64* %shadow to i32*
  %safe.714 = or i1 %2274, %2394
  %select.ptr.715 = select i1 %safe.714, i32* %2393, i32* %2395
  %2396 = load i32, i32* %select.ptr.715, align 4
  %2397 = xor i32 %2392, %2396
  %2398 = getelementptr inbounds i32, i32* %2313, i64 8
  %2399 = icmp slt i64 8, %len.
  %2400 = bitcast i64* %shadow to i32*
  %safe.716 = or i1 %2274, %2399
  %select.ptr.717 = select i1 %safe.716, i32* %2398, i32* %2400
  %2401 = load i32, i32* %2398
  %2402 = sub i1 %2274, true
  %2403 = xor i1 %2402, true
  %2404 = sext i1 %2402 to i32
  %2405 = and i32 %2404, %2401
  %2406 = sext i1 %2403 to i32
  %2407 = and i32 %2406, %2397
  %select.val.718 = or i32 %2407, %2405
  store i32 %select.val.718, i32* %select.ptr.717, align 4
  %2408 = getelementptr inbounds i32, i32* %2313, i64 3
  %2409 = icmp slt i64 3, %len.
  %2410 = bitcast i64* %shadow to i32*
  %safe.719 = or i1 %2274, %2409
  %select.ptr.720 = select i1 %safe.719, i32* %2408, i32* %2410
  %2411 = load i32, i32* %select.ptr.720, align 4
  %2412 = getelementptr inbounds i32, i32* %2313, i64 8
  %2413 = icmp slt i64 8, %len.
  %2414 = bitcast i64* %shadow to i32*
  %safe.721 = or i1 %2274, %2413
  %select.ptr.722 = select i1 %safe.721, i32* %2412, i32* %2414
  %2415 = load i32, i32* %select.ptr.722, align 4
  %2416 = xor i32 %2411, %2415
  %2417 = getelementptr inbounds i32, i32* %2313, i64 9
  %2418 = icmp slt i64 9, %len.
  %2419 = bitcast i64* %shadow to i32*
  %safe.723 = or i1 %2274, %2418
  %select.ptr.724 = select i1 %safe.723, i32* %2417, i32* %2419
  %2420 = load i32, i32* %2417
  %2421 = sub i1 %2274, true
  %2422 = xor i1 %2421, true
  %2423 = sext i1 %2421 to i32
  %2424 = and i32 %2423, %2420
  %2425 = sext i1 %2422 to i32
  %2426 = and i32 %2425, %2416
  %select.val.725 = or i32 %2426, %2424
  store i32 %select.val.725, i32* %select.ptr.724, align 4
  store i1 %2274, i1* %out.16
  %2427 = load i1, i1* %out.16
  %2428 = getelementptr inbounds i32, i32* %2313, i64 4
  %2429 = icmp slt i64 4, %len.
  %2430 = bitcast i64* %shadow to i32*
  %safe.726 = or i1 %2427, %2429
  %select.ptr.727 = select i1 %safe.726, i32* %2428, i32* %2430
  %2431 = load i32, i32* %select.ptr.727, align 4
  %2432 = getelementptr inbounds i32, i32* %2313, i64 9
  %2433 = icmp slt i64 9, %len.
  %2434 = bitcast i64* %shadow to i32*
  %safe.728 = or i1 %2427, %2433
  %select.ptr.729 = select i1 %safe.728, i32* %2432, i32* %2434
  %2435 = load i32, i32* %select.ptr.729, align 4
  %2436 = xor i32 %2431, %2435
  %2437 = getelementptr inbounds i32, i32* %2313, i64 10
  %2438 = icmp slt i64 10, %len.
  %2439 = bitcast i64* %shadow to i32*
  %safe.730 = or i1 %2427, %2438
  %select.ptr.731 = select i1 %safe.730, i32* %2437, i32* %2439
  %2440 = load i32, i32* %2437
  %2441 = sub i1 %2427, true
  %2442 = xor i1 %2441, true
  %2443 = sext i1 %2441 to i32
  %2444 = and i32 %2443, %2440
  %2445 = sext i1 %2442 to i32
  %2446 = and i32 %2445, %2436
  %select.val.732 = or i32 %2446, %2444
  store i32 %select.val.732, i32* %select.ptr.731, align 4
  %2447 = getelementptr inbounds i32, i32* %2313, i64 5
  %2448 = icmp slt i64 5, %len.
  %2449 = bitcast i64* %shadow to i32*
  %safe.733 = or i1 %2427, %2448
  %select.ptr.734 = select i1 %safe.733, i32* %2447, i32* %2449
  %2450 = load i32, i32* %select.ptr.734, align 4
  %2451 = getelementptr inbounds i32, i32* %2313, i64 10
  %2452 = icmp slt i64 10, %len.
  %2453 = bitcast i64* %shadow to i32*
  %safe.735 = or i1 %2427, %2452
  %select.ptr.736 = select i1 %safe.735, i32* %2451, i32* %2453
  %2454 = load i32, i32* %select.ptr.736, align 4
  %2455 = xor i32 %2450, %2454
  %2456 = getelementptr inbounds i32, i32* %2313, i64 11
  %2457 = icmp slt i64 11, %len.
  %2458 = bitcast i64* %shadow to i32*
  %safe.737 = or i1 %2427, %2457
  %select.ptr.738 = select i1 %safe.737, i32* %2456, i32* %2458
  %2459 = load i32, i32* %2456
  %2460 = sub i1 %2427, true
  %2461 = xor i1 %2460, true
  %2462 = sext i1 %2460 to i32
  %2463 = and i32 %2462, %2459
  %2464 = sext i1 %2461 to i32
  %2465 = and i32 %2464, %2455
  %select.val.739 = or i32 %2465, %2463
  store i32 %select.val.739, i32* %select.ptr.738, align 4
  %2466 = getelementptr inbounds i32, i32* %2313, i64 6
  %2467 = getelementptr inbounds i32, i32* %2466, i64 5
  %2468 = icmp slt i64 5, %len.
  %2469 = bitcast i64* %shadow to i32*
  %safe.740 = or i1 %2427, %2468
  %select.ptr.741 = select i1 %safe.740, i32* %2467, i32* %2469
  %2470 = load i32, i32* %select.ptr.741, align 4
  %2471 = icmp slt i64 6, %len.
  %2472 = bitcast i64* %shadow to i32*
  %safe.742 = or i1 %2427, %2471
  %select.ptr.743 = select i1 %safe.742, i32* %2466, i32* %2472
  %2473 = load i32, i32* %select.ptr.743, align 4
  %2474 = lshr i32 %2470, 16
  %2475 = and i32 %2474, 255
  %2476 = zext i32 %2475 to i64
  %2477 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2476
  %2478 = sext i32 256 to i64
  %2479 = icmp slt i64 %2476, %2478
  %2480 = bitcast i64* %shadow to i32*
  %safe.744 = or i1 %2427, %2479
  %select.ptr.745 = select i1 %safe.744, i32* %2477, i32* %2480
  %2481 = load i32, i32* %select.ptr.745, align 4
  %2482 = and i32 %2481, -16777216
  %2483 = xor i32 %2473, %2482
  %2484 = lshr i32 %2470, 8
  %2485 = and i32 %2484, 255
  %2486 = zext i32 %2485 to i64
  %2487 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2486
  %2488 = sext i32 256 to i64
  %2489 = icmp slt i64 %2486, %2488
  %2490 = bitcast i64* %shadow to i32*
  %safe.746 = or i1 %2427, %2489
  %select.ptr.747 = select i1 %safe.746, i32* %2487, i32* %2490
  %2491 = load i32, i32* %select.ptr.747, align 4
  %2492 = and i32 %2491, 16711680
  %2493 = xor i32 %2483, %2492
  %2494 = and i32 %2470, 255
  %2495 = zext i32 %2494 to i64
  %2496 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2495
  %2497 = sext i32 256 to i64
  %2498 = icmp slt i64 %2495, %2497
  %2499 = bitcast i64* %shadow to i32*
  %safe.748 = or i1 %2427, %2498
  %select.ptr.749 = select i1 %safe.748, i32* %2496, i32* %2499
  %2500 = load i32, i32* %select.ptr.749, align 4
  %2501 = and i32 %2500, 65280
  %2502 = xor i32 %2493, %2501
  %2503 = lshr i32 %2470, 24
  %2504 = zext i32 %2503 to i64
  %2505 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2504
  %2506 = sext i32 256 to i64
  %2507 = icmp slt i64 %2504, %2506
  %2508 = bitcast i64* %shadow to i32*
  %safe.750 = or i1 %2427, %2507
  %select.ptr.751 = select i1 %safe.750, i32* %2505, i32* %2508
  %2509 = load i32, i32* %select.ptr.751, align 4
  %2510 = and i32 %2509, 255
  %2511 = xor i32 %2502, %2510
  %2512 = xor i32 %2511, 268435456
  %2513 = getelementptr inbounds i32, i32* %2466, i64 6
  %2514 = icmp slt i64 6, %len.
  %2515 = bitcast i64* %shadow to i32*
  %safe.752 = or i1 %2427, %2514
  %select.ptr.753 = select i1 %safe.752, i32* %2513, i32* %2515
  %2516 = load i32, i32* %2513
  %2517 = sub i1 %2427, true
  %2518 = xor i1 %2517, true
  %2519 = sext i1 %2517 to i32
  %2520 = and i32 %2519, %2516
  %2521 = sext i1 %2518 to i32
  %2522 = and i32 %2521, %2512
  %select.val.754 = or i32 %2522, %2520
  store i32 %select.val.754, i32* %select.ptr.753, align 4
  %2523 = getelementptr inbounds i32, i32* %2466, i64 1
  %2524 = icmp slt i64 1, %len.
  %2525 = bitcast i64* %shadow to i32*
  %safe.755 = or i1 %2427, %2524
  %select.ptr.756 = select i1 %safe.755, i32* %2523, i32* %2525
  %2526 = load i32, i32* %select.ptr.756, align 4
  %2527 = getelementptr inbounds i32, i32* %2466, i64 6
  %2528 = icmp slt i64 6, %len.
  %2529 = bitcast i64* %shadow to i32*
  %safe.757 = or i1 %2427, %2528
  %select.ptr.758 = select i1 %safe.757, i32* %2527, i32* %2529
  %2530 = load i32, i32* %select.ptr.758, align 4
  %2531 = xor i32 %2526, %2530
  %2532 = getelementptr inbounds i32, i32* %2466, i64 7
  %2533 = icmp slt i64 7, %len.
  %2534 = bitcast i64* %shadow to i32*
  %safe.759 = or i1 %2427, %2533
  %select.ptr.760 = select i1 %safe.759, i32* %2532, i32* %2534
  %2535 = load i32, i32* %2532
  %2536 = sub i1 %2427, true
  %2537 = xor i1 %2536, true
  %2538 = sext i1 %2536 to i32
  %2539 = and i32 %2538, %2535
  %2540 = sext i1 %2537 to i32
  %2541 = and i32 %2540, %2531
  %select.val.761 = or i32 %2541, %2539
  store i32 %select.val.761, i32* %select.ptr.760, align 4
  %2542 = getelementptr inbounds i32, i32* %2466, i64 2
  %2543 = icmp slt i64 2, %len.
  %2544 = bitcast i64* %shadow to i32*
  %safe.762 = or i1 %2427, %2543
  %select.ptr.763 = select i1 %safe.762, i32* %2542, i32* %2544
  %2545 = load i32, i32* %select.ptr.763, align 4
  %2546 = getelementptr inbounds i32, i32* %2466, i64 7
  %2547 = icmp slt i64 7, %len.
  %2548 = bitcast i64* %shadow to i32*
  %safe.764 = or i1 %2427, %2547
  %select.ptr.765 = select i1 %safe.764, i32* %2546, i32* %2548
  %2549 = load i32, i32* %select.ptr.765, align 4
  %2550 = xor i32 %2545, %2549
  %2551 = getelementptr inbounds i32, i32* %2466, i64 8
  %2552 = icmp slt i64 8, %len.
  %2553 = bitcast i64* %shadow to i32*
  %safe.766 = or i1 %2427, %2552
  %select.ptr.767 = select i1 %safe.766, i32* %2551, i32* %2553
  %2554 = load i32, i32* %2551
  %2555 = sub i1 %2427, true
  %2556 = xor i1 %2555, true
  %2557 = sext i1 %2555 to i32
  %2558 = and i32 %2557, %2554
  %2559 = sext i1 %2556 to i32
  %2560 = and i32 %2559, %2550
  %select.val.768 = or i32 %2560, %2558
  store i32 %select.val.768, i32* %select.ptr.767, align 4
  %2561 = getelementptr inbounds i32, i32* %2466, i64 3
  %2562 = icmp slt i64 3, %len.
  %2563 = bitcast i64* %shadow to i32*
  %safe.769 = or i1 %2427, %2562
  %select.ptr.770 = select i1 %safe.769, i32* %2561, i32* %2563
  %2564 = load i32, i32* %select.ptr.770, align 4
  %2565 = getelementptr inbounds i32, i32* %2466, i64 8
  %2566 = icmp slt i64 8, %len.
  %2567 = bitcast i64* %shadow to i32*
  %safe.771 = or i1 %2427, %2566
  %select.ptr.772 = select i1 %safe.771, i32* %2565, i32* %2567
  %2568 = load i32, i32* %select.ptr.772, align 4
  %2569 = xor i32 %2564, %2568
  %2570 = getelementptr inbounds i32, i32* %2466, i64 9
  %2571 = icmp slt i64 9, %len.
  %2572 = bitcast i64* %shadow to i32*
  %safe.773 = or i1 %2427, %2571
  %select.ptr.774 = select i1 %safe.773, i32* %2570, i32* %2572
  %2573 = load i32, i32* %2570
  %2574 = sub i1 %2427, true
  %2575 = xor i1 %2574, true
  %2576 = sext i1 %2574 to i32
  %2577 = and i32 %2576, %2573
  %2578 = sext i1 %2575 to i32
  %2579 = and i32 %2578, %2569
  %select.val.775 = or i32 %2579, %2577
  store i32 %select.val.775, i32* %select.ptr.774, align 4
  store i1 %2427, i1* %out.17
  %2580 = load i1, i1* %out.17
  %2581 = getelementptr inbounds i32, i32* %2466, i64 4
  %2582 = icmp slt i64 4, %len.
  %2583 = bitcast i64* %shadow to i32*
  %safe.776 = or i1 %2580, %2582
  %select.ptr.777 = select i1 %safe.776, i32* %2581, i32* %2583
  %2584 = load i32, i32* %select.ptr.777, align 4
  %2585 = getelementptr inbounds i32, i32* %2466, i64 9
  %2586 = icmp slt i64 9, %len.
  %2587 = bitcast i64* %shadow to i32*
  %safe.778 = or i1 %2580, %2586
  %select.ptr.779 = select i1 %safe.778, i32* %2585, i32* %2587
  %2588 = load i32, i32* %select.ptr.779, align 4
  %2589 = xor i32 %2584, %2588
  %2590 = getelementptr inbounds i32, i32* %2466, i64 10
  %2591 = icmp slt i64 10, %len.
  %2592 = bitcast i64* %shadow to i32*
  %safe.780 = or i1 %2580, %2591
  %select.ptr.781 = select i1 %safe.780, i32* %2590, i32* %2592
  %2593 = load i32, i32* %2590
  %2594 = sub i1 %2580, true
  %2595 = xor i1 %2594, true
  %2596 = sext i1 %2594 to i32
  %2597 = and i32 %2596, %2593
  %2598 = sext i1 %2595 to i32
  %2599 = and i32 %2598, %2589
  %select.val.782 = or i32 %2599, %2597
  store i32 %select.val.782, i32* %select.ptr.781, align 4
  %2600 = getelementptr inbounds i32, i32* %2466, i64 5
  %2601 = icmp slt i64 5, %len.
  %2602 = bitcast i64* %shadow to i32*
  %safe.783 = or i1 %2580, %2601
  %select.ptr.784 = select i1 %safe.783, i32* %2600, i32* %2602
  %2603 = load i32, i32* %select.ptr.784, align 4
  %2604 = getelementptr inbounds i32, i32* %2466, i64 10
  %2605 = icmp slt i64 10, %len.
  %2606 = bitcast i64* %shadow to i32*
  %safe.785 = or i1 %2580, %2605
  %select.ptr.786 = select i1 %safe.785, i32* %2604, i32* %2606
  %2607 = load i32, i32* %select.ptr.786, align 4
  %2608 = xor i32 %2603, %2607
  %2609 = getelementptr inbounds i32, i32* %2466, i64 11
  %2610 = icmp slt i64 11, %len.
  %2611 = bitcast i64* %shadow to i32*
  %safe.787 = or i1 %2580, %2610
  %select.ptr.788 = select i1 %safe.787, i32* %2609, i32* %2611
  %2612 = load i32, i32* %2609
  %2613 = sub i1 %2580, true
  %2614 = xor i1 %2613, true
  %2615 = sext i1 %2613 to i32
  %2616 = and i32 %2615, %2612
  %2617 = sext i1 %2614 to i32
  %2618 = and i32 %2617, %2608
  %select.val.789 = or i32 %2618, %2616
  store i32 %select.val.789, i32* %select.ptr.788, align 4
  %2619 = getelementptr inbounds i32, i32* %2466, i64 6
  %2620 = getelementptr inbounds i32, i32* %2619, i64 5
  %2621 = icmp slt i64 5, %len.
  %2622 = bitcast i64* %shadow to i32*
  %safe.790 = or i1 %2580, %2621
  %select.ptr.791 = select i1 %safe.790, i32* %2620, i32* %2622
  %2623 = load i32, i32* %select.ptr.791, align 4
  %2624 = icmp slt i64 6, %len.
  %2625 = bitcast i64* %shadow to i32*
  %safe.792 = or i1 %2580, %2624
  %select.ptr.793 = select i1 %safe.792, i32* %2619, i32* %2625
  %2626 = load i32, i32* %select.ptr.793, align 4
  %2627 = lshr i32 %2623, 16
  %2628 = and i32 %2627, 255
  %2629 = zext i32 %2628 to i64
  %2630 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2629
  %2631 = sext i32 256 to i64
  %2632 = icmp slt i64 %2629, %2631
  %2633 = bitcast i64* %shadow to i32*
  %safe.794 = or i1 %2580, %2632
  %select.ptr.795 = select i1 %safe.794, i32* %2630, i32* %2633
  %2634 = load i32, i32* %select.ptr.795, align 4
  %2635 = and i32 %2634, -16777216
  %2636 = xor i32 %2626, %2635
  %2637 = lshr i32 %2623, 8
  %2638 = and i32 %2637, 255
  %2639 = zext i32 %2638 to i64
  %2640 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2639
  %2641 = sext i32 256 to i64
  %2642 = icmp slt i64 %2639, %2641
  %2643 = bitcast i64* %shadow to i32*
  %safe.796 = or i1 %2580, %2642
  %select.ptr.797 = select i1 %safe.796, i32* %2640, i32* %2643
  %2644 = load i32, i32* %select.ptr.797, align 4
  %2645 = and i32 %2644, 16711680
  %2646 = xor i32 %2636, %2645
  %2647 = and i32 %2623, 255
  %2648 = zext i32 %2647 to i64
  %2649 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2648
  %2650 = sext i32 256 to i64
  %2651 = icmp slt i64 %2648, %2650
  %2652 = bitcast i64* %shadow to i32*
  %safe.798 = or i1 %2580, %2651
  %select.ptr.799 = select i1 %safe.798, i32* %2649, i32* %2652
  %2653 = load i32, i32* %select.ptr.799, align 4
  %2654 = and i32 %2653, 65280
  %2655 = xor i32 %2646, %2654
  %2656 = lshr i32 %2623, 24
  %2657 = zext i32 %2656 to i64
  %2658 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2657
  %2659 = sext i32 256 to i64
  %2660 = icmp slt i64 %2657, %2659
  %2661 = bitcast i64* %shadow to i32*
  %safe.800 = or i1 %2580, %2660
  %select.ptr.801 = select i1 %safe.800, i32* %2658, i32* %2661
  %2662 = load i32, i32* %select.ptr.801, align 4
  %2663 = and i32 %2662, 255
  %2664 = xor i32 %2655, %2663
  %2665 = xor i32 %2664, 536870912
  %2666 = getelementptr inbounds i32, i32* %2619, i64 6
  %2667 = icmp slt i64 6, %len.
  %2668 = bitcast i64* %shadow to i32*
  %safe.802 = or i1 %2580, %2667
  %select.ptr.803 = select i1 %safe.802, i32* %2666, i32* %2668
  %2669 = load i32, i32* %2666
  %2670 = sub i1 %2580, true
  %2671 = xor i1 %2670, true
  %2672 = sext i1 %2670 to i32
  %2673 = and i32 %2672, %2669
  %2674 = sext i1 %2671 to i32
  %2675 = and i32 %2674, %2665
  %select.val.804 = or i32 %2675, %2673
  store i32 %select.val.804, i32* %select.ptr.803, align 4
  %2676 = getelementptr inbounds i32, i32* %2619, i64 1
  %2677 = icmp slt i64 1, %len.
  %2678 = bitcast i64* %shadow to i32*
  %safe.805 = or i1 %2580, %2677
  %select.ptr.806 = select i1 %safe.805, i32* %2676, i32* %2678
  %2679 = load i32, i32* %select.ptr.806, align 4
  %2680 = getelementptr inbounds i32, i32* %2619, i64 6
  %2681 = icmp slt i64 6, %len.
  %2682 = bitcast i64* %shadow to i32*
  %safe.807 = or i1 %2580, %2681
  %select.ptr.808 = select i1 %safe.807, i32* %2680, i32* %2682
  %2683 = load i32, i32* %select.ptr.808, align 4
  %2684 = xor i32 %2679, %2683
  %2685 = getelementptr inbounds i32, i32* %2619, i64 7
  %2686 = icmp slt i64 7, %len.
  %2687 = bitcast i64* %shadow to i32*
  %safe.809 = or i1 %2580, %2686
  %select.ptr.810 = select i1 %safe.809, i32* %2685, i32* %2687
  %2688 = load i32, i32* %2685
  %2689 = sub i1 %2580, true
  %2690 = xor i1 %2689, true
  %2691 = sext i1 %2689 to i32
  %2692 = and i32 %2691, %2688
  %2693 = sext i1 %2690 to i32
  %2694 = and i32 %2693, %2684
  %select.val.811 = or i32 %2694, %2692
  store i32 %select.val.811, i32* %select.ptr.810, align 4
  %2695 = getelementptr inbounds i32, i32* %2619, i64 2
  %2696 = icmp slt i64 2, %len.
  %2697 = bitcast i64* %shadow to i32*
  %safe.812 = or i1 %2580, %2696
  %select.ptr.813 = select i1 %safe.812, i32* %2695, i32* %2697
  %2698 = load i32, i32* %select.ptr.813, align 4
  %2699 = getelementptr inbounds i32, i32* %2619, i64 7
  %2700 = icmp slt i64 7, %len.
  %2701 = bitcast i64* %shadow to i32*
  %safe.814 = or i1 %2580, %2700
  %select.ptr.815 = select i1 %safe.814, i32* %2699, i32* %2701
  %2702 = load i32, i32* %select.ptr.815, align 4
  %2703 = xor i32 %2698, %2702
  %2704 = getelementptr inbounds i32, i32* %2619, i64 8
  %2705 = icmp slt i64 8, %len.
  %2706 = bitcast i64* %shadow to i32*
  %safe.816 = or i1 %2580, %2705
  %select.ptr.817 = select i1 %safe.816, i32* %2704, i32* %2706
  %2707 = load i32, i32* %2704
  %2708 = sub i1 %2580, true
  %2709 = xor i1 %2708, true
  %2710 = sext i1 %2708 to i32
  %2711 = and i32 %2710, %2707
  %2712 = sext i1 %2709 to i32
  %2713 = and i32 %2712, %2703
  %select.val.818 = or i32 %2713, %2711
  store i32 %select.val.818, i32* %select.ptr.817, align 4
  %2714 = getelementptr inbounds i32, i32* %2619, i64 3
  %2715 = icmp slt i64 3, %len.
  %2716 = bitcast i64* %shadow to i32*
  %safe.819 = or i1 %2580, %2715
  %select.ptr.820 = select i1 %safe.819, i32* %2714, i32* %2716
  %2717 = load i32, i32* %select.ptr.820, align 4
  %2718 = getelementptr inbounds i32, i32* %2619, i64 8
  %2719 = icmp slt i64 8, %len.
  %2720 = bitcast i64* %shadow to i32*
  %safe.821 = or i1 %2580, %2719
  %select.ptr.822 = select i1 %safe.821, i32* %2718, i32* %2720
  %2721 = load i32, i32* %select.ptr.822, align 4
  %2722 = xor i32 %2717, %2721
  %2723 = getelementptr inbounds i32, i32* %2619, i64 9
  %2724 = icmp slt i64 9, %len.
  %2725 = bitcast i64* %shadow to i32*
  %safe.823 = or i1 %2580, %2724
  %select.ptr.824 = select i1 %safe.823, i32* %2723, i32* %2725
  %2726 = load i32, i32* %2723
  %2727 = sub i1 %2580, true
  %2728 = xor i1 %2727, true
  %2729 = sext i1 %2727 to i32
  %2730 = and i32 %2729, %2726
  %2731 = sext i1 %2728 to i32
  %2732 = and i32 %2731, %2722
  %select.val.825 = or i32 %2732, %2730
  store i32 %select.val.825, i32* %select.ptr.824, align 4
  store i1 %2580, i1* %out.18
  %2733 = load i1, i1* %out.18
  %2734 = getelementptr inbounds i32, i32* %2619, i64 4
  %2735 = icmp slt i64 4, %len.
  %2736 = bitcast i64* %shadow to i32*
  %safe.826 = or i1 %2733, %2735
  %select.ptr.827 = select i1 %safe.826, i32* %2734, i32* %2736
  %2737 = load i32, i32* %select.ptr.827, align 4
  %2738 = getelementptr inbounds i32, i32* %2619, i64 9
  %2739 = icmp slt i64 9, %len.
  %2740 = bitcast i64* %shadow to i32*
  %safe.828 = or i1 %2733, %2739
  %select.ptr.829 = select i1 %safe.828, i32* %2738, i32* %2740
  %2741 = load i32, i32* %select.ptr.829, align 4
  %2742 = xor i32 %2737, %2741
  %2743 = getelementptr inbounds i32, i32* %2619, i64 10
  %2744 = icmp slt i64 10, %len.
  %2745 = bitcast i64* %shadow to i32*
  %safe.830 = or i1 %2733, %2744
  %select.ptr.831 = select i1 %safe.830, i32* %2743, i32* %2745
  %2746 = load i32, i32* %2743
  %2747 = sub i1 %2733, true
  %2748 = xor i1 %2747, true
  %2749 = sext i1 %2747 to i32
  %2750 = and i32 %2749, %2746
  %2751 = sext i1 %2748 to i32
  %2752 = and i32 %2751, %2742
  %select.val.832 = or i32 %2752, %2750
  store i32 %select.val.832, i32* %select.ptr.831, align 4
  %2753 = getelementptr inbounds i32, i32* %2619, i64 5
  %2754 = icmp slt i64 5, %len.
  %2755 = bitcast i64* %shadow to i32*
  %safe.833 = or i1 %2733, %2754
  %select.ptr.834 = select i1 %safe.833, i32* %2753, i32* %2755
  %2756 = load i32, i32* %select.ptr.834, align 4
  %2757 = getelementptr inbounds i32, i32* %2619, i64 10
  %2758 = icmp slt i64 10, %len.
  %2759 = bitcast i64* %shadow to i32*
  %safe.835 = or i1 %2733, %2758
  %select.ptr.836 = select i1 %safe.835, i32* %2757, i32* %2759
  %2760 = load i32, i32* %select.ptr.836, align 4
  %2761 = xor i32 %2756, %2760
  %2762 = getelementptr inbounds i32, i32* %2619, i64 11
  %2763 = icmp slt i64 11, %len.
  %2764 = bitcast i64* %shadow to i32*
  %safe.837 = or i1 %2733, %2763
  %select.ptr.838 = select i1 %safe.837, i32* %2762, i32* %2764
  %2765 = load i32, i32* %2762
  %2766 = sub i1 %2733, true
  %2767 = xor i1 %2766, true
  %2768 = sext i1 %2766 to i32
  %2769 = and i32 %2768, %2765
  %2770 = sext i1 %2767 to i32
  %2771 = and i32 %2770, %2761
  %select.val.839 = or i32 %2771, %2769
  store i32 %select.val.839, i32* %select.ptr.838, align 4
  %2772 = getelementptr inbounds i32, i32* %2619, i64 6
  %2773 = getelementptr inbounds i32, i32* %2772, i64 5
  %2774 = icmp slt i64 5, %len.
  %2775 = bitcast i64* %shadow to i32*
  %safe.840 = or i1 %2733, %2774
  %select.ptr.841 = select i1 %safe.840, i32* %2773, i32* %2775
  %2776 = load i32, i32* %select.ptr.841, align 4
  %2777 = icmp slt i64 6, %len.
  %2778 = bitcast i64* %shadow to i32*
  %safe.842 = or i1 %2733, %2777
  %select.ptr.843 = select i1 %safe.842, i32* %2772, i32* %2778
  %2779 = load i32, i32* %select.ptr.843, align 4
  %2780 = lshr i32 %2776, 16
  %2781 = and i32 %2780, 255
  %2782 = zext i32 %2781 to i64
  %2783 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2782
  %2784 = sext i32 256 to i64
  %2785 = icmp slt i64 %2782, %2784
  %2786 = bitcast i64* %shadow to i32*
  %safe.844 = or i1 %2733, %2785
  %select.ptr.845 = select i1 %safe.844, i32* %2783, i32* %2786
  %2787 = load i32, i32* %select.ptr.845, align 4
  %2788 = and i32 %2787, -16777216
  %2789 = xor i32 %2779, %2788
  %2790 = lshr i32 %2776, 8
  %2791 = and i32 %2790, 255
  %2792 = zext i32 %2791 to i64
  %2793 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2792
  %2794 = sext i32 256 to i64
  %2795 = icmp slt i64 %2792, %2794
  %2796 = bitcast i64* %shadow to i32*
  %safe.846 = or i1 %2733, %2795
  %select.ptr.847 = select i1 %safe.846, i32* %2793, i32* %2796
  %2797 = load i32, i32* %select.ptr.847, align 4
  %2798 = and i32 %2797, 16711680
  %2799 = xor i32 %2789, %2798
  %2800 = and i32 %2776, 255
  %2801 = zext i32 %2800 to i64
  %2802 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2801
  %2803 = sext i32 256 to i64
  %2804 = icmp slt i64 %2801, %2803
  %2805 = bitcast i64* %shadow to i32*
  %safe.848 = or i1 %2733, %2804
  %select.ptr.849 = select i1 %safe.848, i32* %2802, i32* %2805
  %2806 = load i32, i32* %select.ptr.849, align 4
  %2807 = and i32 %2806, 65280
  %2808 = xor i32 %2799, %2807
  %2809 = lshr i32 %2776, 24
  %2810 = zext i32 %2809 to i64
  %2811 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2810
  %2812 = sext i32 256 to i64
  %2813 = icmp slt i64 %2810, %2812
  %2814 = bitcast i64* %shadow to i32*
  %safe.850 = or i1 %2733, %2813
  %select.ptr.851 = select i1 %safe.850, i32* %2811, i32* %2814
  %2815 = load i32, i32* %select.ptr.851, align 4
  %2816 = and i32 %2815, 255
  %2817 = xor i32 %2808, %2816
  %2818 = xor i32 %2817, 1073741824
  %2819 = getelementptr inbounds i32, i32* %2772, i64 6
  %2820 = icmp slt i64 6, %len.
  %2821 = bitcast i64* %shadow to i32*
  %safe.852 = or i1 %2733, %2820
  %select.ptr.853 = select i1 %safe.852, i32* %2819, i32* %2821
  %2822 = load i32, i32* %2819
  %2823 = sub i1 %2733, true
  %2824 = xor i1 %2823, true
  %2825 = sext i1 %2823 to i32
  %2826 = and i32 %2825, %2822
  %2827 = sext i1 %2824 to i32
  %2828 = and i32 %2827, %2818
  %select.val.854 = or i32 %2828, %2826
  store i32 %select.val.854, i32* %select.ptr.853, align 4
  %2829 = getelementptr inbounds i32, i32* %2772, i64 1
  %2830 = icmp slt i64 1, %len.
  %2831 = bitcast i64* %shadow to i32*
  %safe.855 = or i1 %2733, %2830
  %select.ptr.856 = select i1 %safe.855, i32* %2829, i32* %2831
  %2832 = load i32, i32* %select.ptr.856, align 4
  %2833 = getelementptr inbounds i32, i32* %2772, i64 6
  %2834 = icmp slt i64 6, %len.
  %2835 = bitcast i64* %shadow to i32*
  %safe.857 = or i1 %2733, %2834
  %select.ptr.858 = select i1 %safe.857, i32* %2833, i32* %2835
  %2836 = load i32, i32* %select.ptr.858, align 4
  %2837 = xor i32 %2832, %2836
  %2838 = getelementptr inbounds i32, i32* %2772, i64 7
  %2839 = icmp slt i64 7, %len.
  %2840 = bitcast i64* %shadow to i32*
  %safe.859 = or i1 %2733, %2839
  %select.ptr.860 = select i1 %safe.859, i32* %2838, i32* %2840
  %2841 = load i32, i32* %2838
  %2842 = sub i1 %2733, true
  %2843 = xor i1 %2842, true
  %2844 = sext i1 %2842 to i32
  %2845 = and i32 %2844, %2841
  %2846 = sext i1 %2843 to i32
  %2847 = and i32 %2846, %2837
  %select.val.861 = or i32 %2847, %2845
  store i32 %select.val.861, i32* %select.ptr.860, align 4
  %2848 = getelementptr inbounds i32, i32* %2772, i64 2
  %2849 = icmp slt i64 2, %len.
  %2850 = bitcast i64* %shadow to i32*
  %safe.862 = or i1 %2733, %2849
  %select.ptr.863 = select i1 %safe.862, i32* %2848, i32* %2850
  %2851 = load i32, i32* %select.ptr.863, align 4
  %2852 = getelementptr inbounds i32, i32* %2772, i64 7
  %2853 = icmp slt i64 7, %len.
  %2854 = bitcast i64* %shadow to i32*
  %safe.864 = or i1 %2733, %2853
  %select.ptr.865 = select i1 %safe.864, i32* %2852, i32* %2854
  %2855 = load i32, i32* %select.ptr.865, align 4
  %2856 = xor i32 %2851, %2855
  %2857 = getelementptr inbounds i32, i32* %2772, i64 8
  %2858 = icmp slt i64 8, %len.
  %2859 = bitcast i64* %shadow to i32*
  %safe.866 = or i1 %2733, %2858
  %select.ptr.867 = select i1 %safe.866, i32* %2857, i32* %2859
  %2860 = load i32, i32* %2857
  %2861 = sub i1 %2733, true
  %2862 = xor i1 %2861, true
  %2863 = sext i1 %2861 to i32
  %2864 = and i32 %2863, %2860
  %2865 = sext i1 %2862 to i32
  %2866 = and i32 %2865, %2856
  %select.val.868 = or i32 %2866, %2864
  store i32 %select.val.868, i32* %select.ptr.867, align 4
  %2867 = getelementptr inbounds i32, i32* %2772, i64 3
  %2868 = icmp slt i64 3, %len.
  %2869 = bitcast i64* %shadow to i32*
  %safe.869 = or i1 %2733, %2868
  %select.ptr.870 = select i1 %safe.869, i32* %2867, i32* %2869
  %2870 = load i32, i32* %select.ptr.870, align 4
  %2871 = getelementptr inbounds i32, i32* %2772, i64 8
  %2872 = icmp slt i64 8, %len.
  %2873 = bitcast i64* %shadow to i32*
  %safe.871 = or i1 %2733, %2872
  %select.ptr.872 = select i1 %safe.871, i32* %2871, i32* %2873
  %2874 = load i32, i32* %select.ptr.872, align 4
  %2875 = xor i32 %2870, %2874
  %2876 = getelementptr inbounds i32, i32* %2772, i64 9
  %2877 = icmp slt i64 9, %len.
  %2878 = bitcast i64* %shadow to i32*
  %safe.873 = or i1 %2733, %2877
  %select.ptr.874 = select i1 %safe.873, i32* %2876, i32* %2878
  %2879 = load i32, i32* %2876
  %2880 = sub i1 %2733, true
  %2881 = xor i1 %2880, true
  %2882 = sext i1 %2880 to i32
  %2883 = and i32 %2882, %2879
  %2884 = sext i1 %2881 to i32
  %2885 = and i32 %2884, %2875
  %select.val.875 = or i32 %2885, %2883
  store i32 %select.val.875, i32* %select.ptr.874, align 4
  store i1 %2733, i1* %out.19
  %2886 = load i1, i1* %out.19
  %2887 = getelementptr inbounds i32, i32* %2772, i64 4
  %2888 = icmp slt i64 4, %len.
  %2889 = bitcast i64* %shadow to i32*
  %safe.876 = or i1 %2886, %2888
  %select.ptr.877 = select i1 %safe.876, i32* %2887, i32* %2889
  %2890 = load i32, i32* %select.ptr.877, align 4
  %2891 = getelementptr inbounds i32, i32* %2772, i64 9
  %2892 = icmp slt i64 9, %len.
  %2893 = bitcast i64* %shadow to i32*
  %safe.878 = or i1 %2886, %2892
  %select.ptr.879 = select i1 %safe.878, i32* %2891, i32* %2893
  %2894 = load i32, i32* %select.ptr.879, align 4
  %2895 = xor i32 %2890, %2894
  %2896 = getelementptr inbounds i32, i32* %2772, i64 10
  %2897 = icmp slt i64 10, %len.
  %2898 = bitcast i64* %shadow to i32*
  %safe.880 = or i1 %2886, %2897
  %select.ptr.881 = select i1 %safe.880, i32* %2896, i32* %2898
  %2899 = load i32, i32* %2896
  %2900 = sub i1 %2886, true
  %2901 = xor i1 %2900, true
  %2902 = sext i1 %2900 to i32
  %2903 = and i32 %2902, %2899
  %2904 = sext i1 %2901 to i32
  %2905 = and i32 %2904, %2895
  %select.val.882 = or i32 %2905, %2903
  store i32 %select.val.882, i32* %select.ptr.881, align 4
  %2906 = getelementptr inbounds i32, i32* %2772, i64 5
  %2907 = icmp slt i64 5, %len.
  %2908 = bitcast i64* %shadow to i32*
  %safe.883 = or i1 %2886, %2907
  %select.ptr.884 = select i1 %safe.883, i32* %2906, i32* %2908
  %2909 = load i32, i32* %select.ptr.884, align 4
  %2910 = getelementptr inbounds i32, i32* %2772, i64 10
  %2911 = icmp slt i64 10, %len.
  %2912 = bitcast i64* %shadow to i32*
  %safe.885 = or i1 %2886, %2911
  %select.ptr.886 = select i1 %safe.885, i32* %2910, i32* %2912
  %2913 = load i32, i32* %select.ptr.886, align 4
  %2914 = xor i32 %2909, %2913
  %2915 = getelementptr inbounds i32, i32* %2772, i64 11
  %2916 = icmp slt i64 11, %len.
  %2917 = bitcast i64* %shadow to i32*
  %safe.887 = or i1 %2886, %2916
  %select.ptr.888 = select i1 %safe.887, i32* %2915, i32* %2917
  %2918 = load i32, i32* %2915
  %2919 = sub i1 %2886, true
  %2920 = xor i1 %2919, true
  %2921 = sext i1 %2919 to i32
  %2922 = and i32 %2921, %2918
  %2923 = sext i1 %2920 to i32
  %2924 = and i32 %2923, %2914
  %select.val.889 = or i32 %2924, %2922
  store i32 %select.val.889, i32* %select.ptr.888, align 4
  %2925 = getelementptr inbounds i32, i32* %2772, i64 6
  %2926 = getelementptr inbounds i32, i32* %2925, i64 5
  %2927 = icmp slt i64 5, %len.
  %2928 = bitcast i64* %shadow to i32*
  %safe.890 = or i1 %2886, %2927
  %select.ptr.891 = select i1 %safe.890, i32* %2926, i32* %2928
  %2929 = load i32, i32* %select.ptr.891, align 4
  %2930 = icmp slt i64 6, %len.
  %2931 = bitcast i64* %shadow to i32*
  %safe.892 = or i1 %2886, %2930
  %select.ptr.893 = select i1 %safe.892, i32* %2925, i32* %2931
  %2932 = load i32, i32* %select.ptr.893, align 4
  %2933 = lshr i32 %2929, 16
  %2934 = and i32 %2933, 255
  %2935 = zext i32 %2934 to i64
  %2936 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2935
  %2937 = sext i32 256 to i64
  %2938 = icmp slt i64 %2935, %2937
  %2939 = bitcast i64* %shadow to i32*
  %safe.894 = or i1 %2886, %2938
  %select.ptr.895 = select i1 %safe.894, i32* %2936, i32* %2939
  %2940 = load i32, i32* %select.ptr.895, align 4
  %2941 = and i32 %2940, -16777216
  %2942 = xor i32 %2932, %2941
  %2943 = lshr i32 %2929, 8
  %2944 = and i32 %2943, 255
  %2945 = zext i32 %2944 to i64
  %2946 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2945
  %2947 = sext i32 256 to i64
  %2948 = icmp slt i64 %2945, %2947
  %2949 = bitcast i64* %shadow to i32*
  %safe.896 = or i1 %2886, %2948
  %select.ptr.897 = select i1 %safe.896, i32* %2946, i32* %2949
  %2950 = load i32, i32* %select.ptr.897, align 4
  %2951 = and i32 %2950, 16711680
  %2952 = xor i32 %2942, %2951
  %2953 = and i32 %2929, 255
  %2954 = zext i32 %2953 to i64
  %2955 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2954
  %2956 = sext i32 256 to i64
  %2957 = icmp slt i64 %2954, %2956
  %2958 = bitcast i64* %shadow to i32*
  %safe.898 = or i1 %2886, %2957
  %select.ptr.899 = select i1 %safe.898, i32* %2955, i32* %2958
  %2959 = load i32, i32* %select.ptr.899, align 4
  %2960 = and i32 %2959, 65280
  %2961 = xor i32 %2952, %2960
  %2962 = lshr i32 %2929, 24
  %2963 = zext i32 %2962 to i64
  %2964 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %2963
  %2965 = sext i32 256 to i64
  %2966 = icmp slt i64 %2963, %2965
  %2967 = bitcast i64* %shadow to i32*
  %safe.900 = or i1 %2886, %2966
  %select.ptr.901 = select i1 %safe.900, i32* %2964, i32* %2967
  %2968 = load i32, i32* %select.ptr.901, align 4
  %2969 = and i32 %2968, 255
  %2970 = xor i32 %2961, %2969
  %2971 = xor i32 %2970, -2147483648
  %2972 = getelementptr inbounds i32, i32* %2925, i64 6
  %2973 = icmp slt i64 6, %len.
  %2974 = bitcast i64* %shadow to i32*
  %safe.902 = or i1 %2886, %2973
  %select.ptr.903 = select i1 %safe.902, i32* %2972, i32* %2974
  %2975 = load i32, i32* %2972
  %2976 = sub i1 %2886, true
  %2977 = xor i1 %2976, true
  %2978 = sext i1 %2976 to i32
  %2979 = and i32 %2978, %2975
  %2980 = sext i1 %2977 to i32
  %2981 = and i32 %2980, %2971
  %select.val.904 = or i32 %2981, %2979
  store i32 %select.val.904, i32* %select.ptr.903, align 4
  %2982 = getelementptr inbounds i32, i32* %2925, i64 1
  %2983 = icmp slt i64 1, %len.
  %2984 = bitcast i64* %shadow to i32*
  %safe.905 = or i1 %2886, %2983
  %select.ptr.906 = select i1 %safe.905, i32* %2982, i32* %2984
  %2985 = load i32, i32* %select.ptr.906, align 4
  %2986 = getelementptr inbounds i32, i32* %2925, i64 6
  %2987 = icmp slt i64 6, %len.
  %2988 = bitcast i64* %shadow to i32*
  %safe.907 = or i1 %2886, %2987
  %select.ptr.908 = select i1 %safe.907, i32* %2986, i32* %2988
  %2989 = load i32, i32* %select.ptr.908, align 4
  %2990 = xor i32 %2985, %2989
  %2991 = getelementptr inbounds i32, i32* %2925, i64 7
  %2992 = icmp slt i64 7, %len.
  %2993 = bitcast i64* %shadow to i32*
  %safe.909 = or i1 %2886, %2992
  %select.ptr.910 = select i1 %safe.909, i32* %2991, i32* %2993
  %2994 = load i32, i32* %2991
  %2995 = sub i1 %2886, true
  %2996 = xor i1 %2995, true
  %2997 = sext i1 %2995 to i32
  %2998 = and i32 %2997, %2994
  %2999 = sext i1 %2996 to i32
  %3000 = and i32 %2999, %2990
  %select.val.911 = or i32 %3000, %2998
  store i32 %select.val.911, i32* %select.ptr.910, align 4
  %3001 = getelementptr inbounds i32, i32* %2925, i64 2
  %3002 = icmp slt i64 2, %len.
  %3003 = bitcast i64* %shadow to i32*
  %safe.912 = or i1 %2886, %3002
  %select.ptr.913 = select i1 %safe.912, i32* %3001, i32* %3003
  %3004 = load i32, i32* %select.ptr.913, align 4
  %3005 = getelementptr inbounds i32, i32* %2925, i64 7
  %3006 = icmp slt i64 7, %len.
  %3007 = bitcast i64* %shadow to i32*
  %safe.914 = or i1 %2886, %3006
  %select.ptr.915 = select i1 %safe.914, i32* %3005, i32* %3007
  %3008 = load i32, i32* %select.ptr.915, align 4
  %3009 = xor i32 %3004, %3008
  %3010 = getelementptr inbounds i32, i32* %2925, i64 8
  %3011 = icmp slt i64 8, %len.
  %3012 = bitcast i64* %shadow to i32*
  %safe.916 = or i1 %2886, %3011
  %select.ptr.917 = select i1 %safe.916, i32* %3010, i32* %3012
  %3013 = load i32, i32* %3010
  %3014 = sub i1 %2886, true
  %3015 = xor i1 %3014, true
  %3016 = sext i1 %3014 to i32
  %3017 = and i32 %3016, %3013
  %3018 = sext i1 %3015 to i32
  %3019 = and i32 %3018, %3009
  %select.val.918 = or i32 %3019, %3017
  store i32 %select.val.918, i32* %select.ptr.917, align 4
  %3020 = getelementptr inbounds i32, i32* %2925, i64 3
  %3021 = icmp slt i64 3, %len.
  %3022 = bitcast i64* %shadow to i32*
  %safe.919 = or i1 %2886, %3021
  %select.ptr.920 = select i1 %safe.919, i32* %3020, i32* %3022
  %3023 = load i32, i32* %select.ptr.920, align 4
  %3024 = getelementptr inbounds i32, i32* %2925, i64 8
  %3025 = icmp slt i64 8, %len.
  %3026 = bitcast i64* %shadow to i32*
  %safe.921 = or i1 %2886, %3025
  %select.ptr.922 = select i1 %safe.921, i32* %3024, i32* %3026
  %3027 = load i32, i32* %select.ptr.922, align 4
  %3028 = xor i32 %3023, %3027
  %3029 = getelementptr inbounds i32, i32* %2925, i64 9
  %3030 = icmp slt i64 9, %len.
  %3031 = bitcast i64* %shadow to i32*
  %safe.923 = or i1 %2886, %3030
  %select.ptr.924 = select i1 %safe.923, i32* %3029, i32* %3031
  %3032 = load i32, i32* %3029
  %3033 = sub i1 %2886, true
  %3034 = xor i1 %3033, true
  %3035 = sext i1 %3033 to i32
  %3036 = and i32 %3035, %3032
  %3037 = sext i1 %3034 to i32
  %3038 = and i32 %3037, %3028
  %select.val.925 = or i32 %3038, %3036
  store i32 %select.val.925, i32* %select.ptr.924, align 4
  store i1 %2886, i1* %out.20
  %3039 = load i1, i1* %out.20
  %3040 = xor i1 true, true
  %in.35 = and i1 %3039, %3040
  %3041 = getelementptr inbounds i32, i32* %2925, i64 4
  %3042 = icmp slt i64 4, %len.
  %3043 = bitcast i64* %shadow to i32*
  %safe.926 = or i1 %in.35, %3042
  %select.ptr.927 = select i1 %safe.926, i32* %3041, i32* %3043
  %3044 = load i32, i32* %select.ptr.927, align 4
  %3045 = getelementptr inbounds i32, i32* %2925, i64 9
  %3046 = icmp slt i64 9, %len.
  %3047 = bitcast i64* %shadow to i32*
  %safe.928 = or i1 %in.35, %3046
  %select.ptr.929 = select i1 %safe.928, i32* %3045, i32* %3047
  %3048 = load i32, i32* %select.ptr.929, align 4
  %3049 = xor i32 %3044, %3048
  %3050 = getelementptr inbounds i32, i32* %2925, i64 10
  %3051 = icmp slt i64 10, %len.
  %3052 = bitcast i64* %shadow to i32*
  %safe.930 = or i1 %in.35, %3051
  %select.ptr.931 = select i1 %safe.930, i32* %3050, i32* %3052
  %3053 = load i32, i32* %3050
  %3054 = sub i1 %in.35, true
  %3055 = xor i1 %3054, true
  %3056 = sext i1 %3054 to i32
  %3057 = and i32 %3056, %3053
  %3058 = sext i1 %3055 to i32
  %3059 = and i32 %3058, %3049
  %select.val.932 = or i32 %3059, %3057
  store i32 %select.val.932, i32* %select.ptr.931, align 4
  %3060 = getelementptr inbounds i32, i32* %2925, i64 5
  %3061 = icmp slt i64 5, %len.
  %3062 = bitcast i64* %shadow to i32*
  %safe.933 = or i1 %in.35, %3061
  %select.ptr.934 = select i1 %safe.933, i32* %3060, i32* %3062
  %3063 = load i32, i32* %select.ptr.934, align 4
  %3064 = getelementptr inbounds i32, i32* %2925, i64 10
  %3065 = icmp slt i64 10, %len.
  %3066 = bitcast i64* %shadow to i32*
  %safe.935 = or i1 %in.35, %3065
  %select.ptr.936 = select i1 %safe.935, i32* %3064, i32* %3066
  %3067 = load i32, i32* %select.ptr.936, align 4
  %3068 = xor i32 %3063, %3067
  %3069 = getelementptr inbounds i32, i32* %2925, i64 11
  %3070 = icmp slt i64 11, %len.
  %3071 = bitcast i64* %shadow to i32*
  %safe.937 = or i1 %in.35, %3070
  %select.ptr.938 = select i1 %safe.937, i32* %3069, i32* %3071
  %3072 = load i32, i32* %3069
  %3073 = sub i1 %in.35, true
  %3074 = xor i1 %3073, true
  %3075 = sext i1 %3073 to i32
  %3076 = and i32 %3075, %3072
  %3077 = sext i1 %3074 to i32
  %3078 = and i32 %3077, %3068
  %select.val.939 = or i32 %3078, %3076
  store i32 %select.val.939, i32* %select.ptr.938, align 4
  store i1 %in.35, i1* %out.21
  %3079 = load i1, i1* %out.20
  %in.32 = and i1 %3079, true
  store i1 %in.32, i1* %out.12
  %3080 = load i1, i1* %out.
  %in. = and i1 %3080, %91
  store i1 %in., i1* %out.2
  %3081 = load i1, i1* %out.2
  %3082 = getelementptr inbounds i32, i32* %0, i64 3
  %3083 = icmp slt i64 3, %len.
  %3084 = bitcast i64* %shadow to i32*
  %safe. = or i1 %3081, %3083
  %select.ptr. = select i1 %safe., i32* %3082, i32* %3084
  %3085 = load i32, i32* %select.ptr., align 4
  %3086 = load i32, i32* %0, align 4
  %3087 = lshr i32 %3085, 16
  %3088 = and i32 %3087, 255
  %3089 = zext i32 %3088 to i64
  %3090 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3089
  %3091 = sext i32 256 to i64
  %3092 = icmp slt i64 %3089, %3091
  %3093 = bitcast i64* %shadow to i32*
  %safe.37 = or i1 %3081, %3092
  %select.ptr.38 = select i1 %safe.37, i32* %3090, i32* %3093
  %3094 = load i32, i32* %select.ptr.38, align 4
  %3095 = and i32 %3094, -16777216
  %3096 = xor i32 %3086, %3095
  %3097 = lshr i32 %3085, 8
  %3098 = and i32 %3097, 255
  %3099 = zext i32 %3098 to i64
  %3100 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3099
  %3101 = sext i32 256 to i64
  %3102 = icmp slt i64 %3099, %3101
  %3103 = bitcast i64* %shadow to i32*
  %safe.39 = or i1 %3081, %3102
  %select.ptr.40 = select i1 %safe.39, i32* %3100, i32* %3103
  %3104 = load i32, i32* %select.ptr.40, align 4
  %3105 = and i32 %3104, 16711680
  %3106 = xor i32 %3096, %3105
  %3107 = and i32 %3085, 255
  %3108 = zext i32 %3107 to i64
  %3109 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3108
  %3110 = sext i32 256 to i64
  %3111 = icmp slt i64 %3108, %3110
  %3112 = bitcast i64* %shadow to i32*
  %safe.41 = or i1 %3081, %3111
  %select.ptr.42 = select i1 %safe.41, i32* %3109, i32* %3112
  %3113 = load i32, i32* %select.ptr.42, align 4
  %3114 = and i32 %3113, 65280
  %3115 = xor i32 %3106, %3114
  %3116 = lshr i32 %3085, 24
  %3117 = zext i32 %3116 to i64
  %3118 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3117
  %3119 = sext i32 256 to i64
  %3120 = icmp slt i64 %3117, %3119
  %3121 = bitcast i64* %shadow to i32*
  %safe.43 = or i1 %3081, %3120
  %select.ptr.44 = select i1 %safe.43, i32* %3118, i32* %3121
  %3122 = load i32, i32* %select.ptr.44, align 4
  %3123 = and i32 %3122, 255
  %3124 = xor i32 %3115, %3123
  %3125 = xor i32 %3124, 16777216
  %3126 = getelementptr inbounds i32, i32* %0, i64 4
  %3127 = icmp slt i64 4, %len.
  %3128 = bitcast i64* %shadow to i32*
  %safe.45 = or i1 %3081, %3127
  %select.ptr.46 = select i1 %safe.45, i32* %3126, i32* %3128
  %3129 = load i32, i32* %3126
  %3130 = sub i1 %3081, true
  %3131 = xor i1 %3130, true
  %3132 = sext i1 %3130 to i32
  %3133 = and i32 %3132, %3129
  %3134 = sext i1 %3131 to i32
  %3135 = and i32 %3134, %3125
  %select.val. = or i32 %3135, %3133
  store i32 %select.val., i32* %select.ptr.46, align 4
  %3136 = getelementptr inbounds i32, i32* %0, i64 1
  %3137 = icmp slt i64 1, %len.
  %3138 = bitcast i64* %shadow to i32*
  %safe.47 = or i1 %3081, %3137
  %select.ptr.48 = select i1 %safe.47, i32* %3136, i32* %3138
  %3139 = load i32, i32* %select.ptr.48, align 4
  %3140 = getelementptr inbounds i32, i32* %0, i64 4
  %3141 = icmp slt i64 4, %len.
  %3142 = bitcast i64* %shadow to i32*
  %safe.49 = or i1 %3081, %3141
  %select.ptr.50 = select i1 %safe.49, i32* %3140, i32* %3142
  %3143 = load i32, i32* %select.ptr.50, align 4
  %3144 = xor i32 %3139, %3143
  %3145 = getelementptr inbounds i32, i32* %0, i64 5
  %3146 = icmp slt i64 5, %len.
  %3147 = bitcast i64* %shadow to i32*
  %safe.51 = or i1 %3081, %3146
  %select.ptr.52 = select i1 %safe.51, i32* %3145, i32* %3147
  %3148 = load i32, i32* %3145
  %3149 = sub i1 %3081, true
  %3150 = xor i1 %3149, true
  %3151 = sext i1 %3149 to i32
  %3152 = and i32 %3151, %3148
  %3153 = sext i1 %3150 to i32
  %3154 = and i32 %3153, %3144
  %select.val.53 = or i32 %3154, %3152
  store i32 %select.val.53, i32* %select.ptr.52, align 4
  %3155 = getelementptr inbounds i32, i32* %0, i64 2
  %3156 = icmp slt i64 2, %len.
  %3157 = bitcast i64* %shadow to i32*
  %safe.54 = or i1 %3081, %3156
  %select.ptr.55 = select i1 %safe.54, i32* %3155, i32* %3157
  %3158 = load i32, i32* %select.ptr.55, align 4
  %3159 = getelementptr inbounds i32, i32* %0, i64 5
  %3160 = icmp slt i64 5, %len.
  %3161 = bitcast i64* %shadow to i32*
  %safe.56 = or i1 %3081, %3160
  %select.ptr.57 = select i1 %safe.56, i32* %3159, i32* %3161
  %3162 = load i32, i32* %select.ptr.57, align 4
  %3163 = xor i32 %3158, %3162
  %3164 = getelementptr inbounds i32, i32* %0, i64 6
  %3165 = icmp slt i64 6, %len.
  %3166 = bitcast i64* %shadow to i32*
  %safe.58 = or i1 %3081, %3165
  %select.ptr.59 = select i1 %safe.58, i32* %3164, i32* %3166
  %3167 = load i32, i32* %3164
  %3168 = sub i1 %3081, true
  %3169 = xor i1 %3168, true
  %3170 = sext i1 %3168 to i32
  %3171 = and i32 %3170, %3167
  %3172 = sext i1 %3169 to i32
  %3173 = and i32 %3172, %3163
  %select.val.60 = or i32 %3173, %3171
  store i32 %select.val.60, i32* %select.ptr.59, align 4
  %3174 = getelementptr inbounds i32, i32* %0, i64 3
  %3175 = icmp slt i64 3, %len.
  %3176 = bitcast i64* %shadow to i32*
  %safe.61 = or i1 %3081, %3175
  %select.ptr.62 = select i1 %safe.61, i32* %3174, i32* %3176
  %3177 = load i32, i32* %select.ptr.62, align 4
  %3178 = getelementptr inbounds i32, i32* %0, i64 6
  %3179 = icmp slt i64 6, %len.
  %3180 = bitcast i64* %shadow to i32*
  %safe.63 = or i1 %3081, %3179
  %select.ptr.64 = select i1 %safe.63, i32* %3178, i32* %3180
  %3181 = load i32, i32* %select.ptr.64, align 4
  %3182 = xor i32 %3177, %3181
  %3183 = getelementptr inbounds i32, i32* %0, i64 7
  %3184 = icmp slt i64 7, %len.
  %3185 = bitcast i64* %shadow to i32*
  %safe.65 = or i1 %3081, %3184
  %select.ptr.66 = select i1 %safe.65, i32* %3183, i32* %3185
  %3186 = load i32, i32* %3183
  %3187 = sub i1 %3081, true
  %3188 = xor i1 %3187, true
  %3189 = sext i1 %3187 to i32
  %3190 = and i32 %3189, %3186
  %3191 = sext i1 %3188 to i32
  %3192 = and i32 %3191, %3182
  %select.val.67 = or i32 %3192, %3190
  store i32 %select.val.67, i32* %select.ptr.66, align 4
  %3193 = getelementptr inbounds i32, i32* %0, i64 4
  %3194 = getelementptr inbounds i32, i32* %3193, i64 3
  %3195 = icmp slt i64 3, %len.
  %3196 = bitcast i64* %shadow to i32*
  %safe.68 = or i1 %3081, %3195
  %select.ptr.69 = select i1 %safe.68, i32* %3194, i32* %3196
  %3197 = load i32, i32* %select.ptr.69, align 4
  %3198 = icmp slt i64 4, %len.
  %3199 = bitcast i64* %shadow to i32*
  %safe.70 = or i1 %3081, %3198
  %select.ptr.71 = select i1 %safe.70, i32* %3193, i32* %3199
  %3200 = load i32, i32* %select.ptr.71, align 4
  %3201 = lshr i32 %3197, 16
  %3202 = and i32 %3201, 255
  %3203 = zext i32 %3202 to i64
  %3204 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3203
  %3205 = sext i32 256 to i64
  %3206 = icmp slt i64 %3203, %3205
  %3207 = bitcast i64* %shadow to i32*
  %safe.72 = or i1 %3081, %3206
  %select.ptr.73 = select i1 %safe.72, i32* %3204, i32* %3207
  %3208 = load i32, i32* %select.ptr.73, align 4
  %3209 = and i32 %3208, -16777216
  %3210 = xor i32 %3200, %3209
  %3211 = lshr i32 %3197, 8
  %3212 = and i32 %3211, 255
  %3213 = zext i32 %3212 to i64
  %3214 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3213
  %3215 = sext i32 256 to i64
  %3216 = icmp slt i64 %3213, %3215
  %3217 = bitcast i64* %shadow to i32*
  %safe.74 = or i1 %3081, %3216
  %select.ptr.75 = select i1 %safe.74, i32* %3214, i32* %3217
  %3218 = load i32, i32* %select.ptr.75, align 4
  %3219 = and i32 %3218, 16711680
  %3220 = xor i32 %3210, %3219
  %3221 = and i32 %3197, 255
  %3222 = zext i32 %3221 to i64
  %3223 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3222
  %3224 = sext i32 256 to i64
  %3225 = icmp slt i64 %3222, %3224
  %3226 = bitcast i64* %shadow to i32*
  %safe.76 = or i1 %3081, %3225
  %select.ptr.77 = select i1 %safe.76, i32* %3223, i32* %3226
  %3227 = load i32, i32* %select.ptr.77, align 4
  %3228 = and i32 %3227, 65280
  %3229 = xor i32 %3220, %3228
  %3230 = lshr i32 %3197, 24
  %3231 = zext i32 %3230 to i64
  %3232 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3231
  %3233 = sext i32 256 to i64
  %3234 = icmp slt i64 %3231, %3233
  %3235 = bitcast i64* %shadow to i32*
  %safe.78 = or i1 %3081, %3234
  %select.ptr.79 = select i1 %safe.78, i32* %3232, i32* %3235
  %3236 = load i32, i32* %select.ptr.79, align 4
  %3237 = and i32 %3236, 255
  %3238 = xor i32 %3229, %3237
  %3239 = xor i32 %3238, 33554432
  %3240 = getelementptr inbounds i32, i32* %3193, i64 4
  %3241 = icmp slt i64 4, %len.
  %3242 = bitcast i64* %shadow to i32*
  %safe.80 = or i1 %3081, %3241
  %select.ptr.81 = select i1 %safe.80, i32* %3240, i32* %3242
  %3243 = load i32, i32* %3240
  %3244 = sub i1 %3081, true
  %3245 = xor i1 %3244, true
  %3246 = sext i1 %3244 to i32
  %3247 = and i32 %3246, %3243
  %3248 = sext i1 %3245 to i32
  %3249 = and i32 %3248, %3239
  %select.val.82 = or i32 %3249, %3247
  store i32 %select.val.82, i32* %select.ptr.81, align 4
  %3250 = getelementptr inbounds i32, i32* %3193, i64 1
  %3251 = icmp slt i64 1, %len.
  %3252 = bitcast i64* %shadow to i32*
  %safe.83 = or i1 %3081, %3251
  %select.ptr.84 = select i1 %safe.83, i32* %3250, i32* %3252
  %3253 = load i32, i32* %select.ptr.84, align 4
  %3254 = getelementptr inbounds i32, i32* %3193, i64 4
  %3255 = icmp slt i64 4, %len.
  %3256 = bitcast i64* %shadow to i32*
  %safe.85 = or i1 %3081, %3255
  %select.ptr.86 = select i1 %safe.85, i32* %3254, i32* %3256
  %3257 = load i32, i32* %select.ptr.86, align 4
  %3258 = xor i32 %3253, %3257
  %3259 = getelementptr inbounds i32, i32* %3193, i64 5
  %3260 = icmp slt i64 5, %len.
  %3261 = bitcast i64* %shadow to i32*
  %safe.87 = or i1 %3081, %3260
  %select.ptr.88 = select i1 %safe.87, i32* %3259, i32* %3261
  %3262 = load i32, i32* %3259
  %3263 = sub i1 %3081, true
  %3264 = xor i1 %3263, true
  %3265 = sext i1 %3263 to i32
  %3266 = and i32 %3265, %3262
  %3267 = sext i1 %3264 to i32
  %3268 = and i32 %3267, %3258
  %select.val.89 = or i32 %3268, %3266
  store i32 %select.val.89, i32* %select.ptr.88, align 4
  %3269 = getelementptr inbounds i32, i32* %3193, i64 2
  %3270 = icmp slt i64 2, %len.
  %3271 = bitcast i64* %shadow to i32*
  %safe.90 = or i1 %3081, %3270
  %select.ptr.91 = select i1 %safe.90, i32* %3269, i32* %3271
  %3272 = load i32, i32* %select.ptr.91, align 4
  %3273 = getelementptr inbounds i32, i32* %3193, i64 5
  %3274 = icmp slt i64 5, %len.
  %3275 = bitcast i64* %shadow to i32*
  %safe.92 = or i1 %3081, %3274
  %select.ptr.93 = select i1 %safe.92, i32* %3273, i32* %3275
  %3276 = load i32, i32* %select.ptr.93, align 4
  %3277 = xor i32 %3272, %3276
  %3278 = getelementptr inbounds i32, i32* %3193, i64 6
  %3279 = icmp slt i64 6, %len.
  %3280 = bitcast i64* %shadow to i32*
  %safe.94 = or i1 %3081, %3279
  %select.ptr.95 = select i1 %safe.94, i32* %3278, i32* %3280
  %3281 = load i32, i32* %3278
  %3282 = sub i1 %3081, true
  %3283 = xor i1 %3282, true
  %3284 = sext i1 %3282 to i32
  %3285 = and i32 %3284, %3281
  %3286 = sext i1 %3283 to i32
  %3287 = and i32 %3286, %3277
  %select.val.96 = or i32 %3287, %3285
  store i32 %select.val.96, i32* %select.ptr.95, align 4
  %3288 = getelementptr inbounds i32, i32* %3193, i64 3
  %3289 = icmp slt i64 3, %len.
  %3290 = bitcast i64* %shadow to i32*
  %safe.97 = or i1 %3081, %3289
  %select.ptr.98 = select i1 %safe.97, i32* %3288, i32* %3290
  %3291 = load i32, i32* %select.ptr.98, align 4
  %3292 = getelementptr inbounds i32, i32* %3193, i64 6
  %3293 = icmp slt i64 6, %len.
  %3294 = bitcast i64* %shadow to i32*
  %safe.99 = or i1 %3081, %3293
  %select.ptr.100 = select i1 %safe.99, i32* %3292, i32* %3294
  %3295 = load i32, i32* %select.ptr.100, align 4
  %3296 = xor i32 %3291, %3295
  %3297 = getelementptr inbounds i32, i32* %3193, i64 7
  %3298 = icmp slt i64 7, %len.
  %3299 = bitcast i64* %shadow to i32*
  %safe.101 = or i1 %3081, %3298
  %select.ptr.102 = select i1 %safe.101, i32* %3297, i32* %3299
  %3300 = load i32, i32* %3297
  %3301 = sub i1 %3081, true
  %3302 = xor i1 %3301, true
  %3303 = sext i1 %3301 to i32
  %3304 = and i32 %3303, %3300
  %3305 = sext i1 %3302 to i32
  %3306 = and i32 %3305, %3296
  %select.val.103 = or i32 %3306, %3304
  store i32 %select.val.103, i32* %select.ptr.102, align 4
  %3307 = getelementptr inbounds i32, i32* %3193, i64 4
  %3308 = getelementptr inbounds i32, i32* %3307, i64 3
  %3309 = icmp slt i64 3, %len.
  %3310 = bitcast i64* %shadow to i32*
  %safe.104 = or i1 %3081, %3309
  %select.ptr.105 = select i1 %safe.104, i32* %3308, i32* %3310
  %3311 = load i32, i32* %select.ptr.105, align 4
  %3312 = icmp slt i64 4, %len.
  %3313 = bitcast i64* %shadow to i32*
  %safe.106 = or i1 %3081, %3312
  %select.ptr.107 = select i1 %safe.106, i32* %3307, i32* %3313
  %3314 = load i32, i32* %select.ptr.107, align 4
  %3315 = lshr i32 %3311, 16
  %3316 = and i32 %3315, 255
  %3317 = zext i32 %3316 to i64
  %3318 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3317
  %3319 = sext i32 256 to i64
  %3320 = icmp slt i64 %3317, %3319
  %3321 = bitcast i64* %shadow to i32*
  %safe.108 = or i1 %3081, %3320
  %select.ptr.109 = select i1 %safe.108, i32* %3318, i32* %3321
  %3322 = load i32, i32* %select.ptr.109, align 4
  %3323 = and i32 %3322, -16777216
  %3324 = xor i32 %3314, %3323
  %3325 = lshr i32 %3311, 8
  %3326 = and i32 %3325, 255
  %3327 = zext i32 %3326 to i64
  %3328 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3327
  %3329 = sext i32 256 to i64
  %3330 = icmp slt i64 %3327, %3329
  %3331 = bitcast i64* %shadow to i32*
  %safe.110 = or i1 %3081, %3330
  %select.ptr.111 = select i1 %safe.110, i32* %3328, i32* %3331
  %3332 = load i32, i32* %select.ptr.111, align 4
  %3333 = and i32 %3332, 16711680
  %3334 = xor i32 %3324, %3333
  %3335 = and i32 %3311, 255
  %3336 = zext i32 %3335 to i64
  %3337 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3336
  %3338 = sext i32 256 to i64
  %3339 = icmp slt i64 %3336, %3338
  %3340 = bitcast i64* %shadow to i32*
  %safe.112 = or i1 %3081, %3339
  %select.ptr.113 = select i1 %safe.112, i32* %3337, i32* %3340
  %3341 = load i32, i32* %select.ptr.113, align 4
  %3342 = and i32 %3341, 65280
  %3343 = xor i32 %3334, %3342
  %3344 = lshr i32 %3311, 24
  %3345 = zext i32 %3344 to i64
  %3346 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3345
  %3347 = sext i32 256 to i64
  %3348 = icmp slt i64 %3345, %3347
  %3349 = bitcast i64* %shadow to i32*
  %safe.114 = or i1 %3081, %3348
  %select.ptr.115 = select i1 %safe.114, i32* %3346, i32* %3349
  %3350 = load i32, i32* %select.ptr.115, align 4
  %3351 = and i32 %3350, 255
  %3352 = xor i32 %3343, %3351
  %3353 = xor i32 %3352, 67108864
  %3354 = getelementptr inbounds i32, i32* %3307, i64 4
  %3355 = icmp slt i64 4, %len.
  %3356 = bitcast i64* %shadow to i32*
  %safe.116 = or i1 %3081, %3355
  %select.ptr.117 = select i1 %safe.116, i32* %3354, i32* %3356
  %3357 = load i32, i32* %3354
  %3358 = sub i1 %3081, true
  %3359 = xor i1 %3358, true
  %3360 = sext i1 %3358 to i32
  %3361 = and i32 %3360, %3357
  %3362 = sext i1 %3359 to i32
  %3363 = and i32 %3362, %3353
  %select.val.118 = or i32 %3363, %3361
  store i32 %select.val.118, i32* %select.ptr.117, align 4
  %3364 = getelementptr inbounds i32, i32* %3307, i64 1
  %3365 = icmp slt i64 1, %len.
  %3366 = bitcast i64* %shadow to i32*
  %safe.119 = or i1 %3081, %3365
  %select.ptr.120 = select i1 %safe.119, i32* %3364, i32* %3366
  %3367 = load i32, i32* %select.ptr.120, align 4
  %3368 = getelementptr inbounds i32, i32* %3307, i64 4
  %3369 = icmp slt i64 4, %len.
  %3370 = bitcast i64* %shadow to i32*
  %safe.121 = or i1 %3081, %3369
  %select.ptr.122 = select i1 %safe.121, i32* %3368, i32* %3370
  %3371 = load i32, i32* %select.ptr.122, align 4
  %3372 = xor i32 %3367, %3371
  %3373 = getelementptr inbounds i32, i32* %3307, i64 5
  %3374 = icmp slt i64 5, %len.
  %3375 = bitcast i64* %shadow to i32*
  %safe.123 = or i1 %3081, %3374
  %select.ptr.124 = select i1 %safe.123, i32* %3373, i32* %3375
  %3376 = load i32, i32* %3373
  %3377 = sub i1 %3081, true
  %3378 = xor i1 %3377, true
  %3379 = sext i1 %3377 to i32
  %3380 = and i32 %3379, %3376
  %3381 = sext i1 %3378 to i32
  %3382 = and i32 %3381, %3372
  %select.val.125 = or i32 %3382, %3380
  store i32 %select.val.125, i32* %select.ptr.124, align 4
  %3383 = getelementptr inbounds i32, i32* %3307, i64 2
  %3384 = icmp slt i64 2, %len.
  %3385 = bitcast i64* %shadow to i32*
  %safe.126 = or i1 %3081, %3384
  %select.ptr.127 = select i1 %safe.126, i32* %3383, i32* %3385
  %3386 = load i32, i32* %select.ptr.127, align 4
  %3387 = getelementptr inbounds i32, i32* %3307, i64 5
  %3388 = icmp slt i64 5, %len.
  %3389 = bitcast i64* %shadow to i32*
  %safe.128 = or i1 %3081, %3388
  %select.ptr.129 = select i1 %safe.128, i32* %3387, i32* %3389
  %3390 = load i32, i32* %select.ptr.129, align 4
  %3391 = xor i32 %3386, %3390
  %3392 = getelementptr inbounds i32, i32* %3307, i64 6
  %3393 = icmp slt i64 6, %len.
  %3394 = bitcast i64* %shadow to i32*
  %safe.130 = or i1 %3081, %3393
  %select.ptr.131 = select i1 %safe.130, i32* %3392, i32* %3394
  %3395 = load i32, i32* %3392
  %3396 = sub i1 %3081, true
  %3397 = xor i1 %3396, true
  %3398 = sext i1 %3396 to i32
  %3399 = and i32 %3398, %3395
  %3400 = sext i1 %3397 to i32
  %3401 = and i32 %3400, %3391
  %select.val.132 = or i32 %3401, %3399
  store i32 %select.val.132, i32* %select.ptr.131, align 4
  %3402 = getelementptr inbounds i32, i32* %3307, i64 3
  %3403 = icmp slt i64 3, %len.
  %3404 = bitcast i64* %shadow to i32*
  %safe.133 = or i1 %3081, %3403
  %select.ptr.134 = select i1 %safe.133, i32* %3402, i32* %3404
  %3405 = load i32, i32* %select.ptr.134, align 4
  %3406 = getelementptr inbounds i32, i32* %3307, i64 6
  %3407 = icmp slt i64 6, %len.
  %3408 = bitcast i64* %shadow to i32*
  %safe.135 = or i1 %3081, %3407
  %select.ptr.136 = select i1 %safe.135, i32* %3406, i32* %3408
  %3409 = load i32, i32* %select.ptr.136, align 4
  %3410 = xor i32 %3405, %3409
  %3411 = getelementptr inbounds i32, i32* %3307, i64 7
  %3412 = icmp slt i64 7, %len.
  %3413 = bitcast i64* %shadow to i32*
  %safe.137 = or i1 %3081, %3412
  %select.ptr.138 = select i1 %safe.137, i32* %3411, i32* %3413
  %3414 = load i32, i32* %3411
  %3415 = sub i1 %3081, true
  %3416 = xor i1 %3415, true
  %3417 = sext i1 %3415 to i32
  %3418 = and i32 %3417, %3414
  %3419 = sext i1 %3416 to i32
  %3420 = and i32 %3419, %3410
  %select.val.139 = or i32 %3420, %3418
  store i32 %select.val.139, i32* %select.ptr.138, align 4
  %3421 = getelementptr inbounds i32, i32* %3307, i64 4
  %3422 = getelementptr inbounds i32, i32* %3421, i64 3
  %3423 = icmp slt i64 3, %len.
  %3424 = bitcast i64* %shadow to i32*
  %safe.140 = or i1 %3081, %3423
  %select.ptr.141 = select i1 %safe.140, i32* %3422, i32* %3424
  %3425 = load i32, i32* %select.ptr.141, align 4
  %3426 = icmp slt i64 4, %len.
  %3427 = bitcast i64* %shadow to i32*
  %safe.142 = or i1 %3081, %3426
  %select.ptr.143 = select i1 %safe.142, i32* %3421, i32* %3427
  %3428 = load i32, i32* %select.ptr.143, align 4
  %3429 = lshr i32 %3425, 16
  %3430 = and i32 %3429, 255
  %3431 = zext i32 %3430 to i64
  %3432 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3431
  %3433 = sext i32 256 to i64
  %3434 = icmp slt i64 %3431, %3433
  %3435 = bitcast i64* %shadow to i32*
  %safe.144 = or i1 %3081, %3434
  %select.ptr.145 = select i1 %safe.144, i32* %3432, i32* %3435
  %3436 = load i32, i32* %select.ptr.145, align 4
  %3437 = and i32 %3436, -16777216
  %3438 = xor i32 %3428, %3437
  %3439 = lshr i32 %3425, 8
  %3440 = and i32 %3439, 255
  %3441 = zext i32 %3440 to i64
  %3442 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3441
  %3443 = sext i32 256 to i64
  %3444 = icmp slt i64 %3441, %3443
  %3445 = bitcast i64* %shadow to i32*
  %safe.146 = or i1 %3081, %3444
  %select.ptr.147 = select i1 %safe.146, i32* %3442, i32* %3445
  %3446 = load i32, i32* %select.ptr.147, align 4
  %3447 = and i32 %3446, 16711680
  %3448 = xor i32 %3438, %3447
  %3449 = and i32 %3425, 255
  %3450 = zext i32 %3449 to i64
  %3451 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3450
  %3452 = sext i32 256 to i64
  %3453 = icmp slt i64 %3450, %3452
  %3454 = bitcast i64* %shadow to i32*
  %safe.148 = or i1 %3081, %3453
  %select.ptr.149 = select i1 %safe.148, i32* %3451, i32* %3454
  %3455 = load i32, i32* %select.ptr.149, align 4
  %3456 = and i32 %3455, 65280
  %3457 = xor i32 %3448, %3456
  %3458 = lshr i32 %3425, 24
  %3459 = zext i32 %3458 to i64
  %3460 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3459
  %3461 = sext i32 256 to i64
  %3462 = icmp slt i64 %3459, %3461
  %3463 = bitcast i64* %shadow to i32*
  %safe.150 = or i1 %3081, %3462
  %select.ptr.151 = select i1 %safe.150, i32* %3460, i32* %3463
  %3464 = load i32, i32* %select.ptr.151, align 4
  %3465 = and i32 %3464, 255
  %3466 = xor i32 %3457, %3465
  %3467 = xor i32 %3466, 134217728
  %3468 = getelementptr inbounds i32, i32* %3421, i64 4
  %3469 = icmp slt i64 4, %len.
  %3470 = bitcast i64* %shadow to i32*
  %safe.152 = or i1 %3081, %3469
  %select.ptr.153 = select i1 %safe.152, i32* %3468, i32* %3470
  %3471 = load i32, i32* %3468
  %3472 = sub i1 %3081, true
  %3473 = xor i1 %3472, true
  %3474 = sext i1 %3472 to i32
  %3475 = and i32 %3474, %3471
  %3476 = sext i1 %3473 to i32
  %3477 = and i32 %3476, %3467
  %select.val.154 = or i32 %3477, %3475
  store i32 %select.val.154, i32* %select.ptr.153, align 4
  %3478 = getelementptr inbounds i32, i32* %3421, i64 1
  %3479 = icmp slt i64 1, %len.
  %3480 = bitcast i64* %shadow to i32*
  %safe.155 = or i1 %3081, %3479
  %select.ptr.156 = select i1 %safe.155, i32* %3478, i32* %3480
  %3481 = load i32, i32* %select.ptr.156, align 4
  %3482 = getelementptr inbounds i32, i32* %3421, i64 4
  %3483 = icmp slt i64 4, %len.
  %3484 = bitcast i64* %shadow to i32*
  %safe.157 = or i1 %3081, %3483
  %select.ptr.158 = select i1 %safe.157, i32* %3482, i32* %3484
  %3485 = load i32, i32* %select.ptr.158, align 4
  %3486 = xor i32 %3481, %3485
  %3487 = getelementptr inbounds i32, i32* %3421, i64 5
  %3488 = icmp slt i64 5, %len.
  %3489 = bitcast i64* %shadow to i32*
  %safe.159 = or i1 %3081, %3488
  %select.ptr.160 = select i1 %safe.159, i32* %3487, i32* %3489
  %3490 = load i32, i32* %3487
  %3491 = sub i1 %3081, true
  %3492 = xor i1 %3491, true
  %3493 = sext i1 %3491 to i32
  %3494 = and i32 %3493, %3490
  %3495 = sext i1 %3492 to i32
  %3496 = and i32 %3495, %3486
  %select.val.161 = or i32 %3496, %3494
  store i32 %select.val.161, i32* %select.ptr.160, align 4
  %3497 = getelementptr inbounds i32, i32* %3421, i64 2
  %3498 = icmp slt i64 2, %len.
  %3499 = bitcast i64* %shadow to i32*
  %safe.162 = or i1 %3081, %3498
  %select.ptr.163 = select i1 %safe.162, i32* %3497, i32* %3499
  %3500 = load i32, i32* %select.ptr.163, align 4
  %3501 = getelementptr inbounds i32, i32* %3421, i64 5
  %3502 = icmp slt i64 5, %len.
  %3503 = bitcast i64* %shadow to i32*
  %safe.164 = or i1 %3081, %3502
  %select.ptr.165 = select i1 %safe.164, i32* %3501, i32* %3503
  %3504 = load i32, i32* %select.ptr.165, align 4
  %3505 = xor i32 %3500, %3504
  %3506 = getelementptr inbounds i32, i32* %3421, i64 6
  %3507 = icmp slt i64 6, %len.
  %3508 = bitcast i64* %shadow to i32*
  %safe.166 = or i1 %3081, %3507
  %select.ptr.167 = select i1 %safe.166, i32* %3506, i32* %3508
  %3509 = load i32, i32* %3506
  %3510 = sub i1 %3081, true
  %3511 = xor i1 %3510, true
  %3512 = sext i1 %3510 to i32
  %3513 = and i32 %3512, %3509
  %3514 = sext i1 %3511 to i32
  %3515 = and i32 %3514, %3505
  %select.val.168 = or i32 %3515, %3513
  store i32 %select.val.168, i32* %select.ptr.167, align 4
  %3516 = getelementptr inbounds i32, i32* %3421, i64 3
  %3517 = icmp slt i64 3, %len.
  %3518 = bitcast i64* %shadow to i32*
  %safe.169 = or i1 %3081, %3517
  %select.ptr.170 = select i1 %safe.169, i32* %3516, i32* %3518
  %3519 = load i32, i32* %select.ptr.170, align 4
  %3520 = getelementptr inbounds i32, i32* %3421, i64 6
  %3521 = icmp slt i64 6, %len.
  %3522 = bitcast i64* %shadow to i32*
  %safe.171 = or i1 %3081, %3521
  %select.ptr.172 = select i1 %safe.171, i32* %3520, i32* %3522
  %3523 = load i32, i32* %select.ptr.172, align 4
  %3524 = xor i32 %3519, %3523
  %3525 = getelementptr inbounds i32, i32* %3421, i64 7
  %3526 = icmp slt i64 7, %len.
  %3527 = bitcast i64* %shadow to i32*
  %safe.173 = or i1 %3081, %3526
  %select.ptr.174 = select i1 %safe.173, i32* %3525, i32* %3527
  %3528 = load i32, i32* %3525
  %3529 = sub i1 %3081, true
  %3530 = xor i1 %3529, true
  %3531 = sext i1 %3529 to i32
  %3532 = and i32 %3531, %3528
  %3533 = sext i1 %3530 to i32
  %3534 = and i32 %3533, %3524
  %select.val.175 = or i32 %3534, %3532
  store i32 %select.val.175, i32* %select.ptr.174, align 4
  %3535 = getelementptr inbounds i32, i32* %3421, i64 4
  %3536 = getelementptr inbounds i32, i32* %3535, i64 3
  %3537 = icmp slt i64 3, %len.
  %3538 = bitcast i64* %shadow to i32*
  %safe.176 = or i1 %3081, %3537
  %select.ptr.177 = select i1 %safe.176, i32* %3536, i32* %3538
  %3539 = load i32, i32* %select.ptr.177, align 4
  %3540 = icmp slt i64 4, %len.
  %3541 = bitcast i64* %shadow to i32*
  %safe.178 = or i1 %3081, %3540
  %select.ptr.179 = select i1 %safe.178, i32* %3535, i32* %3541
  %3542 = load i32, i32* %select.ptr.179, align 4
  %3543 = lshr i32 %3539, 16
  %3544 = and i32 %3543, 255
  %3545 = zext i32 %3544 to i64
  %3546 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3545
  %3547 = sext i32 256 to i64
  %3548 = icmp slt i64 %3545, %3547
  %3549 = bitcast i64* %shadow to i32*
  %safe.180 = or i1 %3081, %3548
  %select.ptr.181 = select i1 %safe.180, i32* %3546, i32* %3549
  %3550 = load i32, i32* %select.ptr.181, align 4
  %3551 = and i32 %3550, -16777216
  %3552 = xor i32 %3542, %3551
  %3553 = lshr i32 %3539, 8
  %3554 = and i32 %3553, 255
  %3555 = zext i32 %3554 to i64
  %3556 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3555
  %3557 = sext i32 256 to i64
  %3558 = icmp slt i64 %3555, %3557
  %3559 = bitcast i64* %shadow to i32*
  %safe.182 = or i1 %3081, %3558
  %select.ptr.183 = select i1 %safe.182, i32* %3556, i32* %3559
  %3560 = load i32, i32* %select.ptr.183, align 4
  %3561 = and i32 %3560, 16711680
  %3562 = xor i32 %3552, %3561
  %3563 = and i32 %3539, 255
  %3564 = zext i32 %3563 to i64
  %3565 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3564
  %3566 = sext i32 256 to i64
  %3567 = icmp slt i64 %3564, %3566
  %3568 = bitcast i64* %shadow to i32*
  %safe.184 = or i1 %3081, %3567
  %select.ptr.185 = select i1 %safe.184, i32* %3565, i32* %3568
  %3569 = load i32, i32* %select.ptr.185, align 4
  %3570 = and i32 %3569, 65280
  %3571 = xor i32 %3562, %3570
  %3572 = lshr i32 %3539, 24
  %3573 = zext i32 %3572 to i64
  %3574 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3573
  %3575 = sext i32 256 to i64
  %3576 = icmp slt i64 %3573, %3575
  %3577 = bitcast i64* %shadow to i32*
  %safe.186 = or i1 %3081, %3576
  %select.ptr.187 = select i1 %safe.186, i32* %3574, i32* %3577
  %3578 = load i32, i32* %select.ptr.187, align 4
  %3579 = and i32 %3578, 255
  %3580 = xor i32 %3571, %3579
  %3581 = xor i32 %3580, 268435456
  %3582 = getelementptr inbounds i32, i32* %3535, i64 4
  %3583 = icmp slt i64 4, %len.
  %3584 = bitcast i64* %shadow to i32*
  %safe.188 = or i1 %3081, %3583
  %select.ptr.189 = select i1 %safe.188, i32* %3582, i32* %3584
  %3585 = load i32, i32* %3582
  %3586 = sub i1 %3081, true
  %3587 = xor i1 %3586, true
  %3588 = sext i1 %3586 to i32
  %3589 = and i32 %3588, %3585
  %3590 = sext i1 %3587 to i32
  %3591 = and i32 %3590, %3581
  %select.val.190 = or i32 %3591, %3589
  store i32 %select.val.190, i32* %select.ptr.189, align 4
  %3592 = getelementptr inbounds i32, i32* %3535, i64 1
  %3593 = icmp slt i64 1, %len.
  %3594 = bitcast i64* %shadow to i32*
  %safe.191 = or i1 %3081, %3593
  %select.ptr.192 = select i1 %safe.191, i32* %3592, i32* %3594
  %3595 = load i32, i32* %select.ptr.192, align 4
  %3596 = getelementptr inbounds i32, i32* %3535, i64 4
  %3597 = icmp slt i64 4, %len.
  %3598 = bitcast i64* %shadow to i32*
  %safe.193 = or i1 %3081, %3597
  %select.ptr.194 = select i1 %safe.193, i32* %3596, i32* %3598
  %3599 = load i32, i32* %select.ptr.194, align 4
  %3600 = xor i32 %3595, %3599
  %3601 = getelementptr inbounds i32, i32* %3535, i64 5
  %3602 = icmp slt i64 5, %len.
  %3603 = bitcast i64* %shadow to i32*
  %safe.195 = or i1 %3081, %3602
  %select.ptr.196 = select i1 %safe.195, i32* %3601, i32* %3603
  %3604 = load i32, i32* %3601
  %3605 = sub i1 %3081, true
  %3606 = xor i1 %3605, true
  %3607 = sext i1 %3605 to i32
  %3608 = and i32 %3607, %3604
  %3609 = sext i1 %3606 to i32
  %3610 = and i32 %3609, %3600
  %select.val.197 = or i32 %3610, %3608
  store i32 %select.val.197, i32* %select.ptr.196, align 4
  %3611 = getelementptr inbounds i32, i32* %3535, i64 2
  %3612 = icmp slt i64 2, %len.
  %3613 = bitcast i64* %shadow to i32*
  %safe.198 = or i1 %3081, %3612
  %select.ptr.199 = select i1 %safe.198, i32* %3611, i32* %3613
  %3614 = load i32, i32* %select.ptr.199, align 4
  %3615 = getelementptr inbounds i32, i32* %3535, i64 5
  %3616 = icmp slt i64 5, %len.
  %3617 = bitcast i64* %shadow to i32*
  %safe.200 = or i1 %3081, %3616
  %select.ptr.201 = select i1 %safe.200, i32* %3615, i32* %3617
  %3618 = load i32, i32* %select.ptr.201, align 4
  %3619 = xor i32 %3614, %3618
  %3620 = getelementptr inbounds i32, i32* %3535, i64 6
  %3621 = icmp slt i64 6, %len.
  %3622 = bitcast i64* %shadow to i32*
  %safe.202 = or i1 %3081, %3621
  %select.ptr.203 = select i1 %safe.202, i32* %3620, i32* %3622
  %3623 = load i32, i32* %3620
  %3624 = sub i1 %3081, true
  %3625 = xor i1 %3624, true
  %3626 = sext i1 %3624 to i32
  %3627 = and i32 %3626, %3623
  %3628 = sext i1 %3625 to i32
  %3629 = and i32 %3628, %3619
  %select.val.204 = or i32 %3629, %3627
  store i32 %select.val.204, i32* %select.ptr.203, align 4
  %3630 = getelementptr inbounds i32, i32* %3535, i64 3
  %3631 = icmp slt i64 3, %len.
  %3632 = bitcast i64* %shadow to i32*
  %safe.205 = or i1 %3081, %3631
  %select.ptr.206 = select i1 %safe.205, i32* %3630, i32* %3632
  %3633 = load i32, i32* %select.ptr.206, align 4
  %3634 = getelementptr inbounds i32, i32* %3535, i64 6
  %3635 = icmp slt i64 6, %len.
  %3636 = bitcast i64* %shadow to i32*
  %safe.207 = or i1 %3081, %3635
  %select.ptr.208 = select i1 %safe.207, i32* %3634, i32* %3636
  %3637 = load i32, i32* %select.ptr.208, align 4
  %3638 = xor i32 %3633, %3637
  %3639 = getelementptr inbounds i32, i32* %3535, i64 7
  %3640 = icmp slt i64 7, %len.
  %3641 = bitcast i64* %shadow to i32*
  %safe.209 = or i1 %3081, %3640
  %select.ptr.210 = select i1 %safe.209, i32* %3639, i32* %3641
  %3642 = load i32, i32* %3639
  %3643 = sub i1 %3081, true
  %3644 = xor i1 %3643, true
  %3645 = sext i1 %3643 to i32
  %3646 = and i32 %3645, %3642
  %3647 = sext i1 %3644 to i32
  %3648 = and i32 %3647, %3638
  %select.val.211 = or i32 %3648, %3646
  store i32 %select.val.211, i32* %select.ptr.210, align 4
  %3649 = getelementptr inbounds i32, i32* %3535, i64 4
  %3650 = getelementptr inbounds i32, i32* %3649, i64 3
  %3651 = icmp slt i64 3, %len.
  %3652 = bitcast i64* %shadow to i32*
  %safe.212 = or i1 %3081, %3651
  %select.ptr.213 = select i1 %safe.212, i32* %3650, i32* %3652
  %3653 = load i32, i32* %select.ptr.213, align 4
  %3654 = icmp slt i64 4, %len.
  %3655 = bitcast i64* %shadow to i32*
  %safe.214 = or i1 %3081, %3654
  %select.ptr.215 = select i1 %safe.214, i32* %3649, i32* %3655
  %3656 = load i32, i32* %select.ptr.215, align 4
  %3657 = lshr i32 %3653, 16
  %3658 = and i32 %3657, 255
  %3659 = zext i32 %3658 to i64
  %3660 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3659
  %3661 = sext i32 256 to i64
  %3662 = icmp slt i64 %3659, %3661
  %3663 = bitcast i64* %shadow to i32*
  %safe.216 = or i1 %3081, %3662
  %select.ptr.217 = select i1 %safe.216, i32* %3660, i32* %3663
  %3664 = load i32, i32* %select.ptr.217, align 4
  %3665 = and i32 %3664, -16777216
  %3666 = xor i32 %3656, %3665
  %3667 = lshr i32 %3653, 8
  %3668 = and i32 %3667, 255
  %3669 = zext i32 %3668 to i64
  %3670 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3669
  %3671 = sext i32 256 to i64
  %3672 = icmp slt i64 %3669, %3671
  %3673 = bitcast i64* %shadow to i32*
  %safe.218 = or i1 %3081, %3672
  %select.ptr.219 = select i1 %safe.218, i32* %3670, i32* %3673
  %3674 = load i32, i32* %select.ptr.219, align 4
  %3675 = and i32 %3674, 16711680
  %3676 = xor i32 %3666, %3675
  %3677 = and i32 %3653, 255
  %3678 = zext i32 %3677 to i64
  %3679 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3678
  %3680 = sext i32 256 to i64
  %3681 = icmp slt i64 %3678, %3680
  %3682 = bitcast i64* %shadow to i32*
  %safe.220 = or i1 %3081, %3681
  %select.ptr.221 = select i1 %safe.220, i32* %3679, i32* %3682
  %3683 = load i32, i32* %select.ptr.221, align 4
  %3684 = and i32 %3683, 65280
  %3685 = xor i32 %3676, %3684
  %3686 = lshr i32 %3653, 24
  %3687 = zext i32 %3686 to i64
  %3688 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3687
  %3689 = sext i32 256 to i64
  %3690 = icmp slt i64 %3687, %3689
  %3691 = bitcast i64* %shadow to i32*
  %safe.222 = or i1 %3081, %3690
  %select.ptr.223 = select i1 %safe.222, i32* %3688, i32* %3691
  %3692 = load i32, i32* %select.ptr.223, align 4
  %3693 = and i32 %3692, 255
  %3694 = xor i32 %3685, %3693
  %3695 = xor i32 %3694, 536870912
  %3696 = getelementptr inbounds i32, i32* %3649, i64 4
  %3697 = icmp slt i64 4, %len.
  %3698 = bitcast i64* %shadow to i32*
  %safe.224 = or i1 %3081, %3697
  %select.ptr.225 = select i1 %safe.224, i32* %3696, i32* %3698
  %3699 = load i32, i32* %3696
  %3700 = sub i1 %3081, true
  %3701 = xor i1 %3700, true
  %3702 = sext i1 %3700 to i32
  %3703 = and i32 %3702, %3699
  %3704 = sext i1 %3701 to i32
  %3705 = and i32 %3704, %3695
  %select.val.226 = or i32 %3705, %3703
  store i32 %select.val.226, i32* %select.ptr.225, align 4
  %3706 = getelementptr inbounds i32, i32* %3649, i64 1
  %3707 = icmp slt i64 1, %len.
  %3708 = bitcast i64* %shadow to i32*
  %safe.227 = or i1 %3081, %3707
  %select.ptr.228 = select i1 %safe.227, i32* %3706, i32* %3708
  %3709 = load i32, i32* %select.ptr.228, align 4
  %3710 = getelementptr inbounds i32, i32* %3649, i64 4
  %3711 = icmp slt i64 4, %len.
  %3712 = bitcast i64* %shadow to i32*
  %safe.229 = or i1 %3081, %3711
  %select.ptr.230 = select i1 %safe.229, i32* %3710, i32* %3712
  %3713 = load i32, i32* %select.ptr.230, align 4
  %3714 = xor i32 %3709, %3713
  %3715 = getelementptr inbounds i32, i32* %3649, i64 5
  %3716 = icmp slt i64 5, %len.
  %3717 = bitcast i64* %shadow to i32*
  %safe.231 = or i1 %3081, %3716
  %select.ptr.232 = select i1 %safe.231, i32* %3715, i32* %3717
  %3718 = load i32, i32* %3715
  %3719 = sub i1 %3081, true
  %3720 = xor i1 %3719, true
  %3721 = sext i1 %3719 to i32
  %3722 = and i32 %3721, %3718
  %3723 = sext i1 %3720 to i32
  %3724 = and i32 %3723, %3714
  %select.val.233 = or i32 %3724, %3722
  store i32 %select.val.233, i32* %select.ptr.232, align 4
  %3725 = getelementptr inbounds i32, i32* %3649, i64 2
  %3726 = icmp slt i64 2, %len.
  %3727 = bitcast i64* %shadow to i32*
  %safe.234 = or i1 %3081, %3726
  %select.ptr.235 = select i1 %safe.234, i32* %3725, i32* %3727
  %3728 = load i32, i32* %select.ptr.235, align 4
  %3729 = getelementptr inbounds i32, i32* %3649, i64 5
  %3730 = icmp slt i64 5, %len.
  %3731 = bitcast i64* %shadow to i32*
  %safe.236 = or i1 %3081, %3730
  %select.ptr.237 = select i1 %safe.236, i32* %3729, i32* %3731
  %3732 = load i32, i32* %select.ptr.237, align 4
  %3733 = xor i32 %3728, %3732
  %3734 = getelementptr inbounds i32, i32* %3649, i64 6
  %3735 = icmp slt i64 6, %len.
  %3736 = bitcast i64* %shadow to i32*
  %safe.238 = or i1 %3081, %3735
  %select.ptr.239 = select i1 %safe.238, i32* %3734, i32* %3736
  %3737 = load i32, i32* %3734
  %3738 = sub i1 %3081, true
  %3739 = xor i1 %3738, true
  %3740 = sext i1 %3738 to i32
  %3741 = and i32 %3740, %3737
  %3742 = sext i1 %3739 to i32
  %3743 = and i32 %3742, %3733
  %select.val.240 = or i32 %3743, %3741
  store i32 %select.val.240, i32* %select.ptr.239, align 4
  %3744 = getelementptr inbounds i32, i32* %3649, i64 3
  %3745 = icmp slt i64 3, %len.
  %3746 = bitcast i64* %shadow to i32*
  %safe.241 = or i1 %3081, %3745
  %select.ptr.242 = select i1 %safe.241, i32* %3744, i32* %3746
  %3747 = load i32, i32* %select.ptr.242, align 4
  %3748 = getelementptr inbounds i32, i32* %3649, i64 6
  %3749 = icmp slt i64 6, %len.
  %3750 = bitcast i64* %shadow to i32*
  %safe.243 = or i1 %3081, %3749
  %select.ptr.244 = select i1 %safe.243, i32* %3748, i32* %3750
  %3751 = load i32, i32* %select.ptr.244, align 4
  %3752 = xor i32 %3747, %3751
  %3753 = getelementptr inbounds i32, i32* %3649, i64 7
  %3754 = icmp slt i64 7, %len.
  %3755 = bitcast i64* %shadow to i32*
  %safe.245 = or i1 %3081, %3754
  %select.ptr.246 = select i1 %safe.245, i32* %3753, i32* %3755
  %3756 = load i32, i32* %3753
  %3757 = sub i1 %3081, true
  %3758 = xor i1 %3757, true
  %3759 = sext i1 %3757 to i32
  %3760 = and i32 %3759, %3756
  %3761 = sext i1 %3758 to i32
  %3762 = and i32 %3761, %3752
  %select.val.247 = or i32 %3762, %3760
  store i32 %select.val.247, i32* %select.ptr.246, align 4
  %3763 = getelementptr inbounds i32, i32* %3649, i64 4
  %3764 = getelementptr inbounds i32, i32* %3763, i64 3
  %3765 = icmp slt i64 3, %len.
  %3766 = bitcast i64* %shadow to i32*
  %safe.248 = or i1 %3081, %3765
  %select.ptr.249 = select i1 %safe.248, i32* %3764, i32* %3766
  %3767 = load i32, i32* %select.ptr.249, align 4
  %3768 = icmp slt i64 4, %len.
  %3769 = bitcast i64* %shadow to i32*
  %safe.250 = or i1 %3081, %3768
  %select.ptr.251 = select i1 %safe.250, i32* %3763, i32* %3769
  %3770 = load i32, i32* %select.ptr.251, align 4
  %3771 = lshr i32 %3767, 16
  %3772 = and i32 %3771, 255
  %3773 = zext i32 %3772 to i64
  %3774 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3773
  %3775 = sext i32 256 to i64
  %3776 = icmp slt i64 %3773, %3775
  %3777 = bitcast i64* %shadow to i32*
  %safe.252 = or i1 %3081, %3776
  %select.ptr.253 = select i1 %safe.252, i32* %3774, i32* %3777
  %3778 = load i32, i32* %select.ptr.253, align 4
  %3779 = and i32 %3778, -16777216
  %3780 = xor i32 %3770, %3779
  %3781 = lshr i32 %3767, 8
  %3782 = and i32 %3781, 255
  %3783 = zext i32 %3782 to i64
  %3784 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3783
  %3785 = sext i32 256 to i64
  %3786 = icmp slt i64 %3783, %3785
  %3787 = bitcast i64* %shadow to i32*
  %safe.254 = or i1 %3081, %3786
  %select.ptr.255 = select i1 %safe.254, i32* %3784, i32* %3787
  %3788 = load i32, i32* %select.ptr.255, align 4
  %3789 = and i32 %3788, 16711680
  %3790 = xor i32 %3780, %3789
  %3791 = and i32 %3767, 255
  %3792 = zext i32 %3791 to i64
  %3793 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3792
  %3794 = sext i32 256 to i64
  %3795 = icmp slt i64 %3792, %3794
  %3796 = bitcast i64* %shadow to i32*
  %safe.256 = or i1 %3081, %3795
  %select.ptr.257 = select i1 %safe.256, i32* %3793, i32* %3796
  %3797 = load i32, i32* %select.ptr.257, align 4
  %3798 = and i32 %3797, 65280
  %3799 = xor i32 %3790, %3798
  %3800 = lshr i32 %3767, 24
  %3801 = zext i32 %3800 to i64
  %3802 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3801
  %3803 = sext i32 256 to i64
  %3804 = icmp slt i64 %3801, %3803
  %3805 = bitcast i64* %shadow to i32*
  %safe.258 = or i1 %3081, %3804
  %select.ptr.259 = select i1 %safe.258, i32* %3802, i32* %3805
  %3806 = load i32, i32* %select.ptr.259, align 4
  %3807 = and i32 %3806, 255
  %3808 = xor i32 %3799, %3807
  %3809 = xor i32 %3808, 1073741824
  %3810 = getelementptr inbounds i32, i32* %3763, i64 4
  %3811 = icmp slt i64 4, %len.
  %3812 = bitcast i64* %shadow to i32*
  %safe.260 = or i1 %3081, %3811
  %select.ptr.261 = select i1 %safe.260, i32* %3810, i32* %3812
  %3813 = load i32, i32* %3810
  %3814 = sub i1 %3081, true
  %3815 = xor i1 %3814, true
  %3816 = sext i1 %3814 to i32
  %3817 = and i32 %3816, %3813
  %3818 = sext i1 %3815 to i32
  %3819 = and i32 %3818, %3809
  %select.val.262 = or i32 %3819, %3817
  store i32 %select.val.262, i32* %select.ptr.261, align 4
  %3820 = getelementptr inbounds i32, i32* %3763, i64 1
  %3821 = icmp slt i64 1, %len.
  %3822 = bitcast i64* %shadow to i32*
  %safe.263 = or i1 %3081, %3821
  %select.ptr.264 = select i1 %safe.263, i32* %3820, i32* %3822
  %3823 = load i32, i32* %select.ptr.264, align 4
  %3824 = getelementptr inbounds i32, i32* %3763, i64 4
  %3825 = icmp slt i64 4, %len.
  %3826 = bitcast i64* %shadow to i32*
  %safe.265 = or i1 %3081, %3825
  %select.ptr.266 = select i1 %safe.265, i32* %3824, i32* %3826
  %3827 = load i32, i32* %select.ptr.266, align 4
  %3828 = xor i32 %3823, %3827
  %3829 = getelementptr inbounds i32, i32* %3763, i64 5
  %3830 = icmp slt i64 5, %len.
  %3831 = bitcast i64* %shadow to i32*
  %safe.267 = or i1 %3081, %3830
  %select.ptr.268 = select i1 %safe.267, i32* %3829, i32* %3831
  %3832 = load i32, i32* %3829
  %3833 = sub i1 %3081, true
  %3834 = xor i1 %3833, true
  %3835 = sext i1 %3833 to i32
  %3836 = and i32 %3835, %3832
  %3837 = sext i1 %3834 to i32
  %3838 = and i32 %3837, %3828
  %select.val.269 = or i32 %3838, %3836
  store i32 %select.val.269, i32* %select.ptr.268, align 4
  %3839 = getelementptr inbounds i32, i32* %3763, i64 2
  %3840 = icmp slt i64 2, %len.
  %3841 = bitcast i64* %shadow to i32*
  %safe.270 = or i1 %3081, %3840
  %select.ptr.271 = select i1 %safe.270, i32* %3839, i32* %3841
  %3842 = load i32, i32* %select.ptr.271, align 4
  %3843 = getelementptr inbounds i32, i32* %3763, i64 5
  %3844 = icmp slt i64 5, %len.
  %3845 = bitcast i64* %shadow to i32*
  %safe.272 = or i1 %3081, %3844
  %select.ptr.273 = select i1 %safe.272, i32* %3843, i32* %3845
  %3846 = load i32, i32* %select.ptr.273, align 4
  %3847 = xor i32 %3842, %3846
  %3848 = getelementptr inbounds i32, i32* %3763, i64 6
  %3849 = icmp slt i64 6, %len.
  %3850 = bitcast i64* %shadow to i32*
  %safe.274 = or i1 %3081, %3849
  %select.ptr.275 = select i1 %safe.274, i32* %3848, i32* %3850
  %3851 = load i32, i32* %3848
  %3852 = sub i1 %3081, true
  %3853 = xor i1 %3852, true
  %3854 = sext i1 %3852 to i32
  %3855 = and i32 %3854, %3851
  %3856 = sext i1 %3853 to i32
  %3857 = and i32 %3856, %3847
  %select.val.276 = or i32 %3857, %3855
  store i32 %select.val.276, i32* %select.ptr.275, align 4
  %3858 = getelementptr inbounds i32, i32* %3763, i64 3
  %3859 = icmp slt i64 3, %len.
  %3860 = bitcast i64* %shadow to i32*
  %safe.277 = or i1 %3081, %3859
  %select.ptr.278 = select i1 %safe.277, i32* %3858, i32* %3860
  %3861 = load i32, i32* %select.ptr.278, align 4
  %3862 = getelementptr inbounds i32, i32* %3763, i64 6
  %3863 = icmp slt i64 6, %len.
  %3864 = bitcast i64* %shadow to i32*
  %safe.279 = or i1 %3081, %3863
  %select.ptr.280 = select i1 %safe.279, i32* %3862, i32* %3864
  %3865 = load i32, i32* %select.ptr.280, align 4
  %3866 = xor i32 %3861, %3865
  %3867 = getelementptr inbounds i32, i32* %3763, i64 7
  %3868 = icmp slt i64 7, %len.
  %3869 = bitcast i64* %shadow to i32*
  %safe.281 = or i1 %3081, %3868
  %select.ptr.282 = select i1 %safe.281, i32* %3867, i32* %3869
  %3870 = load i32, i32* %3867
  %3871 = sub i1 %3081, true
  %3872 = xor i1 %3871, true
  %3873 = sext i1 %3871 to i32
  %3874 = and i32 %3873, %3870
  %3875 = sext i1 %3872 to i32
  %3876 = and i32 %3875, %3866
  %select.val.283 = or i32 %3876, %3874
  store i32 %select.val.283, i32* %select.ptr.282, align 4
  %3877 = getelementptr inbounds i32, i32* %3763, i64 4
  %3878 = getelementptr inbounds i32, i32* %3877, i64 3
  %3879 = icmp slt i64 3, %len.
  %3880 = bitcast i64* %shadow to i32*
  %safe.284 = or i1 %3081, %3879
  %select.ptr.285 = select i1 %safe.284, i32* %3878, i32* %3880
  %3881 = load i32, i32* %select.ptr.285, align 4
  %3882 = icmp slt i64 4, %len.
  %3883 = bitcast i64* %shadow to i32*
  %safe.286 = or i1 %3081, %3882
  %select.ptr.287 = select i1 %safe.286, i32* %3877, i32* %3883
  %3884 = load i32, i32* %select.ptr.287, align 4
  %3885 = lshr i32 %3881, 16
  %3886 = and i32 %3885, 255
  %3887 = zext i32 %3886 to i64
  %3888 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3887
  %3889 = sext i32 256 to i64
  %3890 = icmp slt i64 %3887, %3889
  %3891 = bitcast i64* %shadow to i32*
  %safe.288 = or i1 %3081, %3890
  %select.ptr.289 = select i1 %safe.288, i32* %3888, i32* %3891
  %3892 = load i32, i32* %select.ptr.289, align 4
  %3893 = and i32 %3892, -16777216
  %3894 = xor i32 %3884, %3893
  %3895 = lshr i32 %3881, 8
  %3896 = and i32 %3895, 255
  %3897 = zext i32 %3896 to i64
  %3898 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3897
  %3899 = sext i32 256 to i64
  %3900 = icmp slt i64 %3897, %3899
  %3901 = bitcast i64* %shadow to i32*
  %safe.290 = or i1 %3081, %3900
  %select.ptr.291 = select i1 %safe.290, i32* %3898, i32* %3901
  %3902 = load i32, i32* %select.ptr.291, align 4
  %3903 = and i32 %3902, 16711680
  %3904 = xor i32 %3894, %3903
  %3905 = and i32 %3881, 255
  %3906 = zext i32 %3905 to i64
  %3907 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3906
  %3908 = sext i32 256 to i64
  %3909 = icmp slt i64 %3906, %3908
  %3910 = bitcast i64* %shadow to i32*
  %safe.292 = or i1 %3081, %3909
  %select.ptr.293 = select i1 %safe.292, i32* %3907, i32* %3910
  %3911 = load i32, i32* %select.ptr.293, align 4
  %3912 = and i32 %3911, 65280
  %3913 = xor i32 %3904, %3912
  %3914 = lshr i32 %3881, 24
  %3915 = zext i32 %3914 to i64
  %3916 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %3915
  %3917 = sext i32 256 to i64
  %3918 = icmp slt i64 %3915, %3917
  %3919 = bitcast i64* %shadow to i32*
  %safe.294 = or i1 %3081, %3918
  %select.ptr.295 = select i1 %safe.294, i32* %3916, i32* %3919
  %3920 = load i32, i32* %select.ptr.295, align 4
  %3921 = and i32 %3920, 255
  %3922 = xor i32 %3913, %3921
  %3923 = xor i32 %3922, -2147483648
  %3924 = getelementptr inbounds i32, i32* %3877, i64 4
  %3925 = icmp slt i64 4, %len.
  %3926 = bitcast i64* %shadow to i32*
  %safe.296 = or i1 %3081, %3925
  %select.ptr.297 = select i1 %safe.296, i32* %3924, i32* %3926
  %3927 = load i32, i32* %3924
  %3928 = sub i1 %3081, true
  %3929 = xor i1 %3928, true
  %3930 = sext i1 %3928 to i32
  %3931 = and i32 %3930, %3927
  %3932 = sext i1 %3929 to i32
  %3933 = and i32 %3932, %3923
  %select.val.298 = or i32 %3933, %3931
  store i32 %select.val.298, i32* %select.ptr.297, align 4
  %3934 = getelementptr inbounds i32, i32* %3877, i64 1
  %3935 = icmp slt i64 1, %len.
  %3936 = bitcast i64* %shadow to i32*
  %safe.299 = or i1 %3081, %3935
  %select.ptr.300 = select i1 %safe.299, i32* %3934, i32* %3936
  %3937 = load i32, i32* %select.ptr.300, align 4
  %3938 = getelementptr inbounds i32, i32* %3877, i64 4
  %3939 = icmp slt i64 4, %len.
  %3940 = bitcast i64* %shadow to i32*
  %safe.301 = or i1 %3081, %3939
  %select.ptr.302 = select i1 %safe.301, i32* %3938, i32* %3940
  %3941 = load i32, i32* %select.ptr.302, align 4
  %3942 = xor i32 %3937, %3941
  %3943 = getelementptr inbounds i32, i32* %3877, i64 5
  %3944 = icmp slt i64 5, %len.
  %3945 = bitcast i64* %shadow to i32*
  %safe.303 = or i1 %3081, %3944
  %select.ptr.304 = select i1 %safe.303, i32* %3943, i32* %3945
  %3946 = load i32, i32* %3943
  %3947 = sub i1 %3081, true
  %3948 = xor i1 %3947, true
  %3949 = sext i1 %3947 to i32
  %3950 = and i32 %3949, %3946
  %3951 = sext i1 %3948 to i32
  %3952 = and i32 %3951, %3942
  %select.val.305 = or i32 %3952, %3950
  store i32 %select.val.305, i32* %select.ptr.304, align 4
  %3953 = getelementptr inbounds i32, i32* %3877, i64 2
  %3954 = icmp slt i64 2, %len.
  %3955 = bitcast i64* %shadow to i32*
  %safe.306 = or i1 %3081, %3954
  %select.ptr.307 = select i1 %safe.306, i32* %3953, i32* %3955
  %3956 = load i32, i32* %select.ptr.307, align 4
  %3957 = getelementptr inbounds i32, i32* %3877, i64 5
  %3958 = icmp slt i64 5, %len.
  %3959 = bitcast i64* %shadow to i32*
  %safe.308 = or i1 %3081, %3958
  %select.ptr.309 = select i1 %safe.308, i32* %3957, i32* %3959
  %3960 = load i32, i32* %select.ptr.309, align 4
  %3961 = xor i32 %3956, %3960
  %3962 = getelementptr inbounds i32, i32* %3877, i64 6
  %3963 = icmp slt i64 6, %len.
  %3964 = bitcast i64* %shadow to i32*
  %safe.310 = or i1 %3081, %3963
  %select.ptr.311 = select i1 %safe.310, i32* %3962, i32* %3964
  %3965 = load i32, i32* %3962
  %3966 = sub i1 %3081, true
  %3967 = xor i1 %3966, true
  %3968 = sext i1 %3966 to i32
  %3969 = and i32 %3968, %3965
  %3970 = sext i1 %3967 to i32
  %3971 = and i32 %3970, %3961
  %select.val.312 = or i32 %3971, %3969
  store i32 %select.val.312, i32* %select.ptr.311, align 4
  %3972 = getelementptr inbounds i32, i32* %3877, i64 3
  %3973 = icmp slt i64 3, %len.
  %3974 = bitcast i64* %shadow to i32*
  %safe.313 = or i1 %3081, %3973
  %select.ptr.314 = select i1 %safe.313, i32* %3972, i32* %3974
  %3975 = load i32, i32* %select.ptr.314, align 4
  %3976 = getelementptr inbounds i32, i32* %3877, i64 6
  %3977 = icmp slt i64 6, %len.
  %3978 = bitcast i64* %shadow to i32*
  %safe.315 = or i1 %3081, %3977
  %select.ptr.316 = select i1 %safe.315, i32* %3976, i32* %3978
  %3979 = load i32, i32* %select.ptr.316, align 4
  %3980 = xor i32 %3975, %3979
  %3981 = getelementptr inbounds i32, i32* %3877, i64 7
  %3982 = icmp slt i64 7, %len.
  %3983 = bitcast i64* %shadow to i32*
  %safe.317 = or i1 %3081, %3982
  %select.ptr.318 = select i1 %safe.317, i32* %3981, i32* %3983
  %3984 = load i32, i32* %3981
  %3985 = sub i1 %3081, true
  %3986 = xor i1 %3985, true
  %3987 = sext i1 %3985 to i32
  %3988 = and i32 %3987, %3984
  %3989 = sext i1 %3986 to i32
  %3990 = and i32 %3989, %3980
  %select.val.319 = or i32 %3990, %3988
  store i32 %select.val.319, i32* %select.ptr.318, align 4
  %3991 = getelementptr inbounds i32, i32* %3877, i64 4
  %3992 = getelementptr inbounds i32, i32* %3991, i64 3
  %3993 = icmp slt i64 3, %len.
  %3994 = bitcast i64* %shadow to i32*
  %safe.320 = or i1 %3081, %3993
  %select.ptr.321 = select i1 %safe.320, i32* %3992, i32* %3994
  %3995 = load i32, i32* %select.ptr.321, align 4
  %3996 = icmp slt i64 4, %len.
  %3997 = bitcast i64* %shadow to i32*
  %safe.322 = or i1 %3081, %3996
  %select.ptr.323 = select i1 %safe.322, i32* %3991, i32* %3997
  %3998 = load i32, i32* %select.ptr.323, align 4
  %3999 = lshr i32 %3995, 16
  %4000 = and i32 %3999, 255
  %4001 = zext i32 %4000 to i64
  %4002 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %4001
  %4003 = sext i32 256 to i64
  %4004 = icmp slt i64 %4001, %4003
  %4005 = bitcast i64* %shadow to i32*
  %safe.324 = or i1 %3081, %4004
  %select.ptr.325 = select i1 %safe.324, i32* %4002, i32* %4005
  %4006 = load i32, i32* %select.ptr.325, align 4
  %4007 = and i32 %4006, -16777216
  %4008 = xor i32 %3998, %4007
  %4009 = lshr i32 %3995, 8
  %4010 = and i32 %4009, 255
  %4011 = zext i32 %4010 to i64
  %4012 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %4011
  %4013 = sext i32 256 to i64
  %4014 = icmp slt i64 %4011, %4013
  %4015 = bitcast i64* %shadow to i32*
  %safe.326 = or i1 %3081, %4014
  %select.ptr.327 = select i1 %safe.326, i32* %4012, i32* %4015
  %4016 = load i32, i32* %select.ptr.327, align 4
  %4017 = and i32 %4016, 16711680
  %4018 = xor i32 %4008, %4017
  %4019 = and i32 %3995, 255
  %4020 = zext i32 %4019 to i64
  %4021 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %4020
  %4022 = sext i32 256 to i64
  %4023 = icmp slt i64 %4020, %4022
  %4024 = bitcast i64* %shadow to i32*
  %safe.328 = or i1 %3081, %4023
  %select.ptr.329 = select i1 %safe.328, i32* %4021, i32* %4024
  %4025 = load i32, i32* %select.ptr.329, align 4
  %4026 = and i32 %4025, 65280
  %4027 = xor i32 %4018, %4026
  %4028 = lshr i32 %3995, 24
  %4029 = zext i32 %4028 to i64
  %4030 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %4029
  %4031 = sext i32 256 to i64
  %4032 = icmp slt i64 %4029, %4031
  %4033 = bitcast i64* %shadow to i32*
  %safe.330 = or i1 %3081, %4032
  %select.ptr.331 = select i1 %safe.330, i32* %4030, i32* %4033
  %4034 = load i32, i32* %select.ptr.331, align 4
  %4035 = and i32 %4034, 255
  %4036 = xor i32 %4027, %4035
  %4037 = xor i32 %4036, 452984832
  %4038 = getelementptr inbounds i32, i32* %3991, i64 4
  %4039 = icmp slt i64 4, %len.
  %4040 = bitcast i64* %shadow to i32*
  %safe.332 = or i1 %3081, %4039
  %select.ptr.333 = select i1 %safe.332, i32* %4038, i32* %4040
  %4041 = load i32, i32* %4038
  %4042 = sub i1 %3081, true
  %4043 = xor i1 %4042, true
  %4044 = sext i1 %4042 to i32
  %4045 = and i32 %4044, %4041
  %4046 = sext i1 %4043 to i32
  %4047 = and i32 %4046, %4037
  %select.val.334 = or i32 %4047, %4045
  store i32 %select.val.334, i32* %select.ptr.333, align 4
  %4048 = getelementptr inbounds i32, i32* %3991, i64 1
  %4049 = icmp slt i64 1, %len.
  %4050 = bitcast i64* %shadow to i32*
  %safe.335 = or i1 %3081, %4049
  %select.ptr.336 = select i1 %safe.335, i32* %4048, i32* %4050
  %4051 = load i32, i32* %select.ptr.336, align 4
  %4052 = getelementptr inbounds i32, i32* %3991, i64 4
  %4053 = icmp slt i64 4, %len.
  %4054 = bitcast i64* %shadow to i32*
  %safe.337 = or i1 %3081, %4053
  %select.ptr.338 = select i1 %safe.337, i32* %4052, i32* %4054
  %4055 = load i32, i32* %select.ptr.338, align 4
  %4056 = xor i32 %4051, %4055
  %4057 = getelementptr inbounds i32, i32* %3991, i64 5
  %4058 = icmp slt i64 5, %len.
  %4059 = bitcast i64* %shadow to i32*
  %safe.339 = or i1 %3081, %4058
  %select.ptr.340 = select i1 %safe.339, i32* %4057, i32* %4059
  %4060 = load i32, i32* %4057
  %4061 = sub i1 %3081, true
  %4062 = xor i1 %4061, true
  %4063 = sext i1 %4061 to i32
  %4064 = and i32 %4063, %4060
  %4065 = sext i1 %4062 to i32
  %4066 = and i32 %4065, %4056
  %select.val.341 = or i32 %4066, %4064
  store i32 %select.val.341, i32* %select.ptr.340, align 4
  %4067 = getelementptr inbounds i32, i32* %3991, i64 2
  %4068 = icmp slt i64 2, %len.
  %4069 = bitcast i64* %shadow to i32*
  %safe.342 = or i1 %3081, %4068
  %select.ptr.343 = select i1 %safe.342, i32* %4067, i32* %4069
  %4070 = load i32, i32* %select.ptr.343, align 4
  %4071 = getelementptr inbounds i32, i32* %3991, i64 5
  %4072 = icmp slt i64 5, %len.
  %4073 = bitcast i64* %shadow to i32*
  %safe.344 = or i1 %3081, %4072
  %select.ptr.345 = select i1 %safe.344, i32* %4071, i32* %4073
  %4074 = load i32, i32* %select.ptr.345, align 4
  %4075 = xor i32 %4070, %4074
  %4076 = getelementptr inbounds i32, i32* %3991, i64 6
  %4077 = icmp slt i64 6, %len.
  %4078 = bitcast i64* %shadow to i32*
  %safe.346 = or i1 %3081, %4077
  %select.ptr.347 = select i1 %safe.346, i32* %4076, i32* %4078
  %4079 = load i32, i32* %4076
  %4080 = sub i1 %3081, true
  %4081 = xor i1 %4080, true
  %4082 = sext i1 %4080 to i32
  %4083 = and i32 %4082, %4079
  %4084 = sext i1 %4081 to i32
  %4085 = and i32 %4084, %4075
  %select.val.348 = or i32 %4085, %4083
  store i32 %select.val.348, i32* %select.ptr.347, align 4
  %4086 = getelementptr inbounds i32, i32* %3991, i64 3
  %4087 = icmp slt i64 3, %len.
  %4088 = bitcast i64* %shadow to i32*
  %safe.349 = or i1 %3081, %4087
  %select.ptr.350 = select i1 %safe.349, i32* %4086, i32* %4088
  %4089 = load i32, i32* %select.ptr.350, align 4
  %4090 = getelementptr inbounds i32, i32* %3991, i64 6
  %4091 = icmp slt i64 6, %len.
  %4092 = bitcast i64* %shadow to i32*
  %safe.351 = or i1 %3081, %4091
  %select.ptr.352 = select i1 %safe.351, i32* %4090, i32* %4092
  %4093 = load i32, i32* %select.ptr.352, align 4
  %4094 = xor i32 %4089, %4093
  %4095 = getelementptr inbounds i32, i32* %3991, i64 7
  %4096 = icmp slt i64 7, %len.
  %4097 = bitcast i64* %shadow to i32*
  %safe.353 = or i1 %3081, %4096
  %select.ptr.354 = select i1 %safe.353, i32* %4095, i32* %4097
  %4098 = load i32, i32* %4095
  %4099 = sub i1 %3081, true
  %4100 = xor i1 %4099, true
  %4101 = sext i1 %4099 to i32
  %4102 = and i32 %4101, %4098
  %4103 = sext i1 %4100 to i32
  %4104 = and i32 %4103, %4094
  %select.val.355 = or i32 %4104, %4102
  store i32 %select.val.355, i32* %select.ptr.354, align 4
  %4105 = getelementptr inbounds i32, i32* %3991, i64 4
  %4106 = getelementptr inbounds i32, i32* %4105, i64 3
  %4107 = icmp slt i64 3, %len.
  %4108 = bitcast i64* %shadow to i32*
  %safe.356 = or i1 %3081, %4107
  %select.ptr.357 = select i1 %safe.356, i32* %4106, i32* %4108
  %4109 = load i32, i32* %select.ptr.357, align 4
  %4110 = icmp slt i64 4, %len.
  %4111 = bitcast i64* %shadow to i32*
  %safe.358 = or i1 %3081, %4110
  %select.ptr.359 = select i1 %safe.358, i32* %4105, i32* %4111
  %4112 = load i32, i32* %select.ptr.359, align 4
  %4113 = lshr i32 %4109, 16
  %4114 = and i32 %4113, 255
  %4115 = zext i32 %4114 to i64
  %4116 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %4115
  %4117 = sext i32 256 to i64
  %4118 = icmp slt i64 %4115, %4117
  %4119 = bitcast i64* %shadow to i32*
  %safe.360 = or i1 %3081, %4118
  %select.ptr.361 = select i1 %safe.360, i32* %4116, i32* %4119
  %4120 = load i32, i32* %select.ptr.361, align 4
  %4121 = and i32 %4120, -16777216
  %4122 = xor i32 %4112, %4121
  %4123 = lshr i32 %4109, 8
  %4124 = and i32 %4123, 255
  %4125 = zext i32 %4124 to i64
  %4126 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %4125
  %4127 = sext i32 256 to i64
  %4128 = icmp slt i64 %4125, %4127
  %4129 = bitcast i64* %shadow to i32*
  %safe.362 = or i1 %3081, %4128
  %select.ptr.363 = select i1 %safe.362, i32* %4126, i32* %4129
  %4130 = load i32, i32* %select.ptr.363, align 4
  %4131 = and i32 %4130, 16711680
  %4132 = xor i32 %4122, %4131
  %4133 = and i32 %4109, 255
  %4134 = zext i32 %4133 to i64
  %4135 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %4134
  %4136 = sext i32 256 to i64
  %4137 = icmp slt i64 %4134, %4136
  %4138 = bitcast i64* %shadow to i32*
  %safe.364 = or i1 %3081, %4137
  %select.ptr.365 = select i1 %safe.364, i32* %4135, i32* %4138
  %4139 = load i32, i32* %select.ptr.365, align 4
  %4140 = and i32 %4139, 65280
  %4141 = xor i32 %4132, %4140
  %4142 = lshr i32 %4109, 24
  %4143 = zext i32 %4142 to i64
  %4144 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %4143
  %4145 = sext i32 256 to i64
  %4146 = icmp slt i64 %4143, %4145
  %4147 = bitcast i64* %shadow to i32*
  %safe.366 = or i1 %3081, %4146
  %select.ptr.367 = select i1 %safe.366, i32* %4144, i32* %4147
  %4148 = load i32, i32* %select.ptr.367, align 4
  %4149 = and i32 %4148, 255
  %4150 = xor i32 %4141, %4149
  %4151 = xor i32 %4150, 905969664
  %4152 = getelementptr inbounds i32, i32* %4105, i64 4
  %4153 = icmp slt i64 4, %len.
  %4154 = bitcast i64* %shadow to i32*
  %safe.368 = or i1 %3081, %4153
  %select.ptr.369 = select i1 %safe.368, i32* %4152, i32* %4154
  %4155 = load i32, i32* %4152
  %4156 = sub i1 %3081, true
  %4157 = xor i1 %4156, true
  %4158 = sext i1 %4156 to i32
  %4159 = and i32 %4158, %4155
  %4160 = sext i1 %4157 to i32
  %4161 = and i32 %4160, %4151
  %select.val.370 = or i32 %4161, %4159
  store i32 %select.val.370, i32* %select.ptr.369, align 4
  %4162 = getelementptr inbounds i32, i32* %4105, i64 1
  %4163 = icmp slt i64 1, %len.
  %4164 = bitcast i64* %shadow to i32*
  %safe.371 = or i1 %3081, %4163
  %select.ptr.372 = select i1 %safe.371, i32* %4162, i32* %4164
  %4165 = load i32, i32* %select.ptr.372, align 4
  %4166 = getelementptr inbounds i32, i32* %4105, i64 4
  %4167 = icmp slt i64 4, %len.
  %4168 = bitcast i64* %shadow to i32*
  %safe.373 = or i1 %3081, %4167
  %select.ptr.374 = select i1 %safe.373, i32* %4166, i32* %4168
  %4169 = load i32, i32* %select.ptr.374, align 4
  %4170 = xor i32 %4165, %4169
  %4171 = getelementptr inbounds i32, i32* %4105, i64 5
  %4172 = icmp slt i64 5, %len.
  %4173 = bitcast i64* %shadow to i32*
  %safe.375 = or i1 %3081, %4172
  %select.ptr.376 = select i1 %safe.375, i32* %4171, i32* %4173
  %4174 = load i32, i32* %4171
  %4175 = sub i1 %3081, true
  %4176 = xor i1 %4175, true
  %4177 = sext i1 %4175 to i32
  %4178 = and i32 %4177, %4174
  %4179 = sext i1 %4176 to i32
  %4180 = and i32 %4179, %4170
  %select.val.377 = or i32 %4180, %4178
  store i32 %select.val.377, i32* %select.ptr.376, align 4
  %4181 = getelementptr inbounds i32, i32* %4105, i64 2
  %4182 = icmp slt i64 2, %len.
  %4183 = bitcast i64* %shadow to i32*
  %safe.378 = or i1 %3081, %4182
  %select.ptr.379 = select i1 %safe.378, i32* %4181, i32* %4183
  %4184 = load i32, i32* %select.ptr.379, align 4
  %4185 = getelementptr inbounds i32, i32* %4105, i64 5
  %4186 = icmp slt i64 5, %len.
  %4187 = bitcast i64* %shadow to i32*
  %safe.380 = or i1 %3081, %4186
  %select.ptr.381 = select i1 %safe.380, i32* %4185, i32* %4187
  %4188 = load i32, i32* %select.ptr.381, align 4
  %4189 = xor i32 %4184, %4188
  %4190 = getelementptr inbounds i32, i32* %4105, i64 6
  %4191 = icmp slt i64 6, %len.
  %4192 = bitcast i64* %shadow to i32*
  %safe.382 = or i1 %3081, %4191
  %select.ptr.383 = select i1 %safe.382, i32* %4190, i32* %4192
  %4193 = load i32, i32* %4190
  %4194 = sub i1 %3081, true
  %4195 = xor i1 %4194, true
  %4196 = sext i1 %4194 to i32
  %4197 = and i32 %4196, %4193
  %4198 = sext i1 %4195 to i32
  %4199 = and i32 %4198, %4189
  %select.val.384 = or i32 %4199, %4197
  store i32 %select.val.384, i32* %select.ptr.383, align 4
  %4200 = getelementptr inbounds i32, i32* %4105, i64 3
  %4201 = icmp slt i64 3, %len.
  %4202 = bitcast i64* %shadow to i32*
  %safe.385 = or i1 %3081, %4201
  %select.ptr.386 = select i1 %safe.385, i32* %4200, i32* %4202
  %4203 = load i32, i32* %select.ptr.386, align 4
  %4204 = getelementptr inbounds i32, i32* %4105, i64 6
  %4205 = icmp slt i64 6, %len.
  %4206 = bitcast i64* %shadow to i32*
  %safe.387 = or i1 %3081, %4205
  %select.ptr.388 = select i1 %safe.387, i32* %4204, i32* %4206
  %4207 = load i32, i32* %select.ptr.388, align 4
  %4208 = xor i32 %4203, %4207
  %4209 = getelementptr inbounds i32, i32* %4105, i64 7
  %4210 = icmp slt i64 7, %len.
  %4211 = bitcast i64* %shadow to i32*
  %safe.389 = or i1 %3081, %4210
  %select.ptr.390 = select i1 %safe.389, i32* %4209, i32* %4211
  %4212 = load i32, i32* %4209
  %4213 = sub i1 %3081, true
  %4214 = xor i1 %4213, true
  %4215 = sext i1 %4213 to i32
  %4216 = and i32 %4215, %4212
  %4217 = sext i1 %4214 to i32
  %4218 = and i32 %4217, %4208
  %select.val.391 = or i32 %4218, %4216
  store i32 %select.val.391, i32* %select.ptr.390, align 4
  store i1 %3081, i1* %out.3
  %4219 = load i1, i1* %out.3
  %4220 = load i1, i1* %out.8
  %4221 = xor i1 %257, true
  %in.34 = and i1 %4220, %4221
  %4222 = load i1, i1* %out.12
  %4223 = load i1, i1* %out.13
  %4224 = select i1 %4222, i32 12, i32 14
  %4225 = select i1 %in.34, i32 0, i32 %4224
  %select.phi. = select i1 %4219, i32 10, i32 %4225
  %4226 = or i1 %4219, %in.34
  %4227 = or i1 %4226, %4222
  %4228 = or i1 %4227, %4223
  store i1 %4228, i1* %out.14
  ret i32 %select.phi.
}

define void @prepare_inputs(i8* %0, i64 %len., i8* %1, i64 %len.1) {
  call void @randombytes(i8* %0, i64 %len., i64 16)
  br label %3

3:                                                ; preds = %2
  %4 = call zeroext i8 @randombit()
  store i8 %4, i8* %1, align 1
  %5 = load i8, i8* %1, align 1
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 16, i1 false)
  br label %9

9:                                                ; preds = %8, %3
  ret void
}

define i32 @rijndaelKeySetupDec(i32* %0, i64 %len., i8* %1, i64 %len.1, i32 %2) {
  %4 = call i32 @rijndaelKeySetupEnc(i32* %0, i64 %len., i8* %1, i64 %len.1, i32 %2)
  %5 = mul nsw i32 4, %4
  %6 = icmp slt i32 0, %5
  br i1 %6, label %.lr.ph8, label %.preheader

.lr.ph8:                                          ; preds = %3
  %7 = shl i32 %4, 2
  %8 = sext i32 %7 to i64
  br label %10

..preheader_crit_edge:                            ; preds = %10
  %split = phi i32 [ 1, %10 ]
  %split9 = phi i32* [ %0, %10 ]
  br label %.preheader

.preheader:                                       ; preds = %..preheader_crit_edge, %3
  %.1.ph = phi i32 [ %split, %..preheader_crit_edge ], [ 1, %3 ]
  %.0.ph = phi i32* [ %split9, %..preheader_crit_edge ], [ %0, %3 ]
  %9 = icmp slt i32 %.1.ph, %4
  br i1 %9, label %.lr.ph, label %230

.lr.ph:                                           ; preds = %.preheader
  br label %48

10:                                               ; preds = %10, %.lr.ph8
  %indvars.iv10 = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next11, %10 ]
  %indvars.iv = phi i64 [ %8, %.lr.ph8 ], [ %indvars.iv.next, %10 ]
  %11 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  store i32 %12, i32* %16, align 4
  %17 = add nuw nsw i64 %indvars.iv10, 1
  %18 = getelementptr inbounds i32, i32* %0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i64 %indvars.iv, 1
  %21 = getelementptr inbounds i32, i32* %0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = add nuw nsw i64 %indvars.iv10, 1
  %24 = getelementptr inbounds i32, i32* %0, i64 %23
  store i32 %22, i32* %24, align 4
  %25 = add nsw i64 %indvars.iv, 1
  %26 = getelementptr inbounds i32, i32* %0, i64 %25
  store i32 %19, i32* %26, align 4
  %27 = add nuw nsw i64 %indvars.iv10, 2
  %28 = getelementptr inbounds i32, i32* %0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i64 %indvars.iv, 2
  %31 = getelementptr inbounds i32, i32* %0, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = add nuw nsw i64 %indvars.iv10, 2
  %34 = getelementptr inbounds i32, i32* %0, i64 %33
  store i32 %32, i32* %34, align 4
  %35 = add nsw i64 %indvars.iv, 2
  %36 = getelementptr inbounds i32, i32* %0, i64 %35
  store i32 %29, i32* %36, align 4
  %37 = add nuw nsw i64 %indvars.iv10, 3
  %38 = getelementptr inbounds i32, i32* %0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i64 %indvars.iv, 3
  %41 = getelementptr inbounds i32, i32* %0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = add nuw nsw i64 %indvars.iv10, 3
  %44 = getelementptr inbounds i32, i32* %0, i64 %43
  store i32 %42, i32* %44, align 4
  %45 = add nsw i64 %indvars.iv, 3
  %46 = getelementptr inbounds i32, i32* %0, i64 %45
  store i32 %39, i32* %46, align 4
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 4
  %indvars.iv.next = add nsw i64 %indvars.iv, -4
  %47 = icmp slt i64 %indvars.iv.next11, %indvars.iv.next
  br i1 %47, label %10, label %..preheader_crit_edge

48:                                               ; preds = %48, %.lr.ph
  %.04 = phi i32* [ %.0.ph, %.lr.ph ], [ %49, %48 ]
  %.13 = phi i32 [ %.1.ph, %.lr.ph ], [ %229, %48 ]
  %49 = getelementptr inbounds i32, i32* %.04, i64 4
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 24
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 255
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %49, align 4
  %60 = lshr i32 %59, 16
  %61 = and i32 %60, 255
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 255
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = xor i32 %58, %68
  %70 = load i32, i32* %49, align 4
  %71 = lshr i32 %70, 8
  %72 = and i32 %71, 255
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 255
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = xor i32 %69, %79
  %81 = load i32, i32* %49, align 4
  %82 = and i32 %81, 255
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 255
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = xor i32 %80, %89
  store i32 %90, i32* %49, align 4
  %91 = getelementptr inbounds i32, i32* %49, i64 1
  %92 = load i32, i32* %91, align 4
  %93 = lshr i32 %92, 24
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 255
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds i32, i32* %49, i64 1
  %102 = load i32, i32* %101, align 4
  %103 = lshr i32 %102, 16
  %104 = and i32 %103, 255
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 255
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = xor i32 %100, %111
  %113 = getelementptr inbounds i32, i32* %49, i64 1
  %114 = load i32, i32* %113, align 4
  %115 = lshr i32 %114, 8
  %116 = and i32 %115, 255
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, 255
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = xor i32 %112, %123
  %125 = getelementptr inbounds i32, i32* %49, i64 1
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 255
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 255
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = xor i32 %124, %134
  %136 = getelementptr inbounds i32, i32* %49, i64 1
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds i32, i32* %49, i64 2
  %138 = load i32, i32* %137, align 4
  %139 = lshr i32 %138, 24
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 255
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds i32, i32* %49, i64 2
  %148 = load i32, i32* %147, align 4
  %149 = lshr i32 %148, 16
  %150 = and i32 %149, 255
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = and i32 %153, 255
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = xor i32 %146, %157
  %159 = getelementptr inbounds i32, i32* %49, i64 2
  %160 = load i32, i32* %159, align 4
  %161 = lshr i32 %160, 8
  %162 = and i32 %161, 255
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 255
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = xor i32 %158, %169
  %171 = getelementptr inbounds i32, i32* %49, i64 2
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 255
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, 255
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = xor i32 %170, %180
  %182 = getelementptr inbounds i32, i32* %49, i64 2
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds i32, i32* %49, i64 3
  %184 = load i32, i32* %183, align 4
  %185 = lshr i32 %184, 24
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = and i32 %188, 255
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds i32, i32* %49, i64 3
  %194 = load i32, i32* %193, align 4
  %195 = lshr i32 %194, 16
  %196 = and i32 %195, 255
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = and i32 %199, 255
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = xor i32 %192, %203
  %205 = getelementptr inbounds i32, i32* %49, i64 3
  %206 = load i32, i32* %205, align 4
  %207 = lshr i32 %206, 8
  %208 = and i32 %207, 255
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %209
  %211 = load i32, i32* %210, align 4
  %212 = and i32 %211, 255
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = xor i32 %204, %215
  %217 = getelementptr inbounds i32, i32* %49, i64 3
  %218 = load i32, i32* %217, align 4
  %219 = and i32 %218, 255
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds [256 x i32], [256 x i32]* @Te4, i64 0, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = and i32 %222, 255
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = xor i32 %216, %226
  %228 = getelementptr inbounds i32, i32* %49, i64 3
  store i32 %227, i32* %228, align 4
  %229 = add nuw nsw i32 %.13, 1
  %exitcond = icmp ne i32 %229, %4
  br i1 %exitcond, label %48, label %._crit_edge

._crit_edge:                                      ; preds = %48
  br label %230

230:                                              ; preds = %._crit_edge, %.preheader
  ret i32 %4
}

define void @rijndaelDecrypt(i32* %0, i64 %len., i32 %1, i8* %2, i64 %len.1, i8* %3, i64 %len.2) {
  %5 = getelementptr inbounds i8, i8* %2, i64 0
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl i32 %7, 24
  %9 = getelementptr inbounds i8, i8* %2, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl i32 %11, 16
  %13 = xor i32 %8, %12
  %14 = getelementptr inbounds i8, i8* %2, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl i32 %16, 8
  %18 = xor i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %2, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = xor i32 %18, %21
  %23 = getelementptr inbounds i32, i32* %0, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = xor i32 %22, %24
  %26 = getelementptr inbounds i8, i8* %2, i64 4
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl i32 %29, 24
  %31 = getelementptr inbounds i8, i8* %2, i64 4
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl i32 %34, 16
  %36 = xor i32 %30, %35
  %37 = getelementptr inbounds i8, i8* %2, i64 4
  %38 = getelementptr inbounds i8, i8* %37, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl i32 %40, 8
  %42 = xor i32 %36, %41
  %43 = getelementptr inbounds i8, i8* %2, i64 4
  %44 = getelementptr inbounds i8, i8* %43, i64 3
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = xor i32 %42, %46
  %48 = getelementptr inbounds i32, i32* %0, i64 1
  %49 = load i32, i32* %48, align 4
  %50 = xor i32 %47, %49
  %51 = getelementptr inbounds i8, i8* %2, i64 8
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl i32 %54, 24
  %56 = getelementptr inbounds i8, i8* %2, i64 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = shl i32 %59, 16
  %61 = xor i32 %55, %60
  %62 = getelementptr inbounds i8, i8* %2, i64 8
  %63 = getelementptr inbounds i8, i8* %62, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl i32 %65, 8
  %67 = xor i32 %61, %66
  %68 = getelementptr inbounds i8, i8* %2, i64 8
  %69 = getelementptr inbounds i8, i8* %68, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = xor i32 %67, %71
  %73 = getelementptr inbounds i32, i32* %0, i64 2
  %74 = load i32, i32* %73, align 4
  %75 = xor i32 %72, %74
  %76 = getelementptr inbounds i8, i8* %2, i64 12
  %77 = getelementptr inbounds i8, i8* %76, i64 0
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl i32 %79, 24
  %81 = getelementptr inbounds i8, i8* %2, i64 12
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl i32 %84, 16
  %86 = xor i32 %80, %85
  %87 = getelementptr inbounds i8, i8* %2, i64 12
  %88 = getelementptr inbounds i8, i8* %87, i64 2
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl i32 %90, 8
  %92 = xor i32 %86, %91
  %93 = getelementptr inbounds i8, i8* %2, i64 12
  %94 = getelementptr inbounds i8, i8* %93, i64 3
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = xor i32 %92, %96
  %98 = getelementptr inbounds i32, i32* %0, i64 3
  %99 = load i32, i32* %98, align 4
  %100 = xor i32 %97, %99
  %101 = lshr i32 %25, 24
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = lshr i32 %100, 16
  %106 = and i32 %105, 255
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = xor i32 %104, %109
  %111 = lshr i32 %75, 8
  %112 = and i32 %111, 255
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = xor i32 %110, %115
  %117 = and i32 %50, 255
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = xor i32 %116, %120
  %122 = getelementptr inbounds i32, i32* %0, i64 4
  %123 = load i32, i32* %122, align 4
  %124 = xor i32 %121, %123
  %125 = lshr i32 %50, 24
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = lshr i32 %25, 16
  %130 = and i32 %129, 255
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = xor i32 %128, %133
  %135 = lshr i32 %100, 8
  %136 = and i32 %135, 255
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = xor i32 %134, %139
  %141 = and i32 %75, 255
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = xor i32 %140, %144
  %146 = getelementptr inbounds i32, i32* %0, i64 5
  %147 = load i32, i32* %146, align 4
  %148 = xor i32 %145, %147
  %149 = lshr i32 %75, 24
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = lshr i32 %50, 16
  %154 = and i32 %153, 255
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = xor i32 %152, %157
  %159 = lshr i32 %25, 8
  %160 = and i32 %159, 255
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = xor i32 %158, %163
  %165 = and i32 %100, 255
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = xor i32 %164, %168
  %170 = getelementptr inbounds i32, i32* %0, i64 6
  %171 = load i32, i32* %170, align 4
  %172 = xor i32 %169, %171
  %173 = lshr i32 %100, 24
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = lshr i32 %75, 16
  %178 = and i32 %177, 255
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = xor i32 %176, %181
  %183 = lshr i32 %50, 8
  %184 = and i32 %183, 255
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = xor i32 %182, %187
  %189 = and i32 %25, 255
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = xor i32 %188, %192
  %194 = getelementptr inbounds i32, i32* %0, i64 7
  %195 = load i32, i32* %194, align 4
  %196 = xor i32 %193, %195
  %197 = lshr i32 %124, 24
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = lshr i32 %196, 16
  %202 = and i32 %201, 255
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = xor i32 %200, %205
  %207 = lshr i32 %172, 8
  %208 = and i32 %207, 255
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %209
  %211 = load i32, i32* %210, align 4
  %212 = xor i32 %206, %211
  %213 = and i32 %148, 255
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %214
  %216 = load i32, i32* %215, align 4
  %217 = xor i32 %212, %216
  %218 = getelementptr inbounds i32, i32* %0, i64 8
  %219 = load i32, i32* %218, align 4
  %220 = xor i32 %217, %219
  %221 = lshr i32 %148, 24
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = lshr i32 %124, 16
  %226 = and i32 %225, 255
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = xor i32 %224, %229
  %231 = lshr i32 %196, 8
  %232 = and i32 %231, 255
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = xor i32 %230, %235
  %237 = and i32 %172, 255
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = xor i32 %236, %240
  %242 = getelementptr inbounds i32, i32* %0, i64 9
  %243 = load i32, i32* %242, align 4
  %244 = xor i32 %241, %243
  %245 = lshr i32 %172, 24
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = lshr i32 %148, 16
  %250 = and i32 %249, 255
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = xor i32 %248, %253
  %255 = lshr i32 %124, 8
  %256 = and i32 %255, 255
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = xor i32 %254, %259
  %261 = and i32 %196, 255
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %262
  %264 = load i32, i32* %263, align 4
  %265 = xor i32 %260, %264
  %266 = getelementptr inbounds i32, i32* %0, i64 10
  %267 = load i32, i32* %266, align 4
  %268 = xor i32 %265, %267
  %269 = lshr i32 %196, 24
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = lshr i32 %172, 16
  %274 = and i32 %273, 255
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = xor i32 %272, %277
  %279 = lshr i32 %148, 8
  %280 = and i32 %279, 255
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %281
  %283 = load i32, i32* %282, align 4
  %284 = xor i32 %278, %283
  %285 = and i32 %124, 255
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = xor i32 %284, %288
  %290 = getelementptr inbounds i32, i32* %0, i64 11
  %291 = load i32, i32* %290, align 4
  %292 = xor i32 %289, %291
  %293 = lshr i32 %220, 24
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = lshr i32 %292, 16
  %298 = and i32 %297, 255
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = xor i32 %296, %301
  %303 = lshr i32 %268, 8
  %304 = and i32 %303, 255
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = xor i32 %302, %307
  %309 = and i32 %244, 255
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = xor i32 %308, %312
  %314 = getelementptr inbounds i32, i32* %0, i64 12
  %315 = load i32, i32* %314, align 4
  %316 = xor i32 %313, %315
  %317 = lshr i32 %244, 24
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %318
  %320 = load i32, i32* %319, align 4
  %321 = lshr i32 %220, 16
  %322 = and i32 %321, 255
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = xor i32 %320, %325
  %327 = lshr i32 %292, 8
  %328 = and i32 %327, 255
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = xor i32 %326, %331
  %333 = and i32 %268, 255
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %334
  %336 = load i32, i32* %335, align 4
  %337 = xor i32 %332, %336
  %338 = getelementptr inbounds i32, i32* %0, i64 13
  %339 = load i32, i32* %338, align 4
  %340 = xor i32 %337, %339
  %341 = lshr i32 %268, 24
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = lshr i32 %244, 16
  %346 = and i32 %345, 255
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = xor i32 %344, %349
  %351 = lshr i32 %220, 8
  %352 = and i32 %351, 255
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = xor i32 %350, %355
  %357 = and i32 %292, 255
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = xor i32 %356, %360
  %362 = getelementptr inbounds i32, i32* %0, i64 14
  %363 = load i32, i32* %362, align 4
  %364 = xor i32 %361, %363
  %365 = lshr i32 %292, 24
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %366
  %368 = load i32, i32* %367, align 4
  %369 = lshr i32 %268, 16
  %370 = and i32 %369, 255
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = xor i32 %368, %373
  %375 = lshr i32 %244, 8
  %376 = and i32 %375, 255
  %377 = zext i32 %376 to i64
  %378 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %377
  %379 = load i32, i32* %378, align 4
  %380 = xor i32 %374, %379
  %381 = and i32 %220, 255
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = xor i32 %380, %384
  %386 = getelementptr inbounds i32, i32* %0, i64 15
  %387 = load i32, i32* %386, align 4
  %388 = xor i32 %385, %387
  %389 = lshr i32 %316, 24
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %390
  %392 = load i32, i32* %391, align 4
  %393 = lshr i32 %388, 16
  %394 = and i32 %393, 255
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %395
  %397 = load i32, i32* %396, align 4
  %398 = xor i32 %392, %397
  %399 = lshr i32 %364, 8
  %400 = and i32 %399, 255
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = xor i32 %398, %403
  %405 = and i32 %340, 255
  %406 = zext i32 %405 to i64
  %407 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %406
  %408 = load i32, i32* %407, align 4
  %409 = xor i32 %404, %408
  %410 = getelementptr inbounds i32, i32* %0, i64 16
  %411 = load i32, i32* %410, align 4
  %412 = xor i32 %409, %411
  %413 = lshr i32 %340, 24
  %414 = zext i32 %413 to i64
  %415 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %414
  %416 = load i32, i32* %415, align 4
  %417 = lshr i32 %316, 16
  %418 = and i32 %417, 255
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %419
  %421 = load i32, i32* %420, align 4
  %422 = xor i32 %416, %421
  %423 = lshr i32 %388, 8
  %424 = and i32 %423, 255
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %425
  %427 = load i32, i32* %426, align 4
  %428 = xor i32 %422, %427
  %429 = and i32 %364, 255
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %430
  %432 = load i32, i32* %431, align 4
  %433 = xor i32 %428, %432
  %434 = getelementptr inbounds i32, i32* %0, i64 17
  %435 = load i32, i32* %434, align 4
  %436 = xor i32 %433, %435
  %437 = lshr i32 %364, 24
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %438
  %440 = load i32, i32* %439, align 4
  %441 = lshr i32 %340, 16
  %442 = and i32 %441, 255
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %443
  %445 = load i32, i32* %444, align 4
  %446 = xor i32 %440, %445
  %447 = lshr i32 %316, 8
  %448 = and i32 %447, 255
  %449 = zext i32 %448 to i64
  %450 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %449
  %451 = load i32, i32* %450, align 4
  %452 = xor i32 %446, %451
  %453 = and i32 %388, 255
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %454
  %456 = load i32, i32* %455, align 4
  %457 = xor i32 %452, %456
  %458 = getelementptr inbounds i32, i32* %0, i64 18
  %459 = load i32, i32* %458, align 4
  %460 = xor i32 %457, %459
  %461 = lshr i32 %388, 24
  %462 = zext i32 %461 to i64
  %463 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %462
  %464 = load i32, i32* %463, align 4
  %465 = lshr i32 %364, 16
  %466 = and i32 %465, 255
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %467
  %469 = load i32, i32* %468, align 4
  %470 = xor i32 %464, %469
  %471 = lshr i32 %340, 8
  %472 = and i32 %471, 255
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %473
  %475 = load i32, i32* %474, align 4
  %476 = xor i32 %470, %475
  %477 = and i32 %316, 255
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = xor i32 %476, %480
  %482 = getelementptr inbounds i32, i32* %0, i64 19
  %483 = load i32, i32* %482, align 4
  %484 = xor i32 %481, %483
  %485 = lshr i32 %412, 24
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = lshr i32 %484, 16
  %490 = and i32 %489, 255
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %491
  %493 = load i32, i32* %492, align 4
  %494 = xor i32 %488, %493
  %495 = lshr i32 %460, 8
  %496 = and i32 %495, 255
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %497
  %499 = load i32, i32* %498, align 4
  %500 = xor i32 %494, %499
  %501 = and i32 %436, 255
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %502
  %504 = load i32, i32* %503, align 4
  %505 = xor i32 %500, %504
  %506 = getelementptr inbounds i32, i32* %0, i64 20
  %507 = load i32, i32* %506, align 4
  %508 = xor i32 %505, %507
  %509 = lshr i32 %436, 24
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %510
  %512 = load i32, i32* %511, align 4
  %513 = lshr i32 %412, 16
  %514 = and i32 %513, 255
  %515 = zext i32 %514 to i64
  %516 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %515
  %517 = load i32, i32* %516, align 4
  %518 = xor i32 %512, %517
  %519 = lshr i32 %484, 8
  %520 = and i32 %519, 255
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %521
  %523 = load i32, i32* %522, align 4
  %524 = xor i32 %518, %523
  %525 = and i32 %460, 255
  %526 = zext i32 %525 to i64
  %527 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %526
  %528 = load i32, i32* %527, align 4
  %529 = xor i32 %524, %528
  %530 = getelementptr inbounds i32, i32* %0, i64 21
  %531 = load i32, i32* %530, align 4
  %532 = xor i32 %529, %531
  %533 = lshr i32 %460, 24
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = lshr i32 %436, 16
  %538 = and i32 %537, 255
  %539 = zext i32 %538 to i64
  %540 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = xor i32 %536, %541
  %543 = lshr i32 %412, 8
  %544 = and i32 %543, 255
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %545
  %547 = load i32, i32* %546, align 4
  %548 = xor i32 %542, %547
  %549 = and i32 %484, 255
  %550 = zext i32 %549 to i64
  %551 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = xor i32 %548, %552
  %554 = getelementptr inbounds i32, i32* %0, i64 22
  %555 = load i32, i32* %554, align 4
  %556 = xor i32 %553, %555
  %557 = lshr i32 %484, 24
  %558 = zext i32 %557 to i64
  %559 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = lshr i32 %460, 16
  %562 = and i32 %561, 255
  %563 = zext i32 %562 to i64
  %564 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %563
  %565 = load i32, i32* %564, align 4
  %566 = xor i32 %560, %565
  %567 = lshr i32 %436, 8
  %568 = and i32 %567, 255
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %569
  %571 = load i32, i32* %570, align 4
  %572 = xor i32 %566, %571
  %573 = and i32 %412, 255
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = xor i32 %572, %576
  %578 = getelementptr inbounds i32, i32* %0, i64 23
  %579 = load i32, i32* %578, align 4
  %580 = xor i32 %577, %579
  %581 = lshr i32 %508, 24
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %582
  %584 = load i32, i32* %583, align 4
  %585 = lshr i32 %580, 16
  %586 = and i32 %585, 255
  %587 = zext i32 %586 to i64
  %588 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %587
  %589 = load i32, i32* %588, align 4
  %590 = xor i32 %584, %589
  %591 = lshr i32 %556, 8
  %592 = and i32 %591, 255
  %593 = zext i32 %592 to i64
  %594 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %593
  %595 = load i32, i32* %594, align 4
  %596 = xor i32 %590, %595
  %597 = and i32 %532, 255
  %598 = zext i32 %597 to i64
  %599 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %598
  %600 = load i32, i32* %599, align 4
  %601 = xor i32 %596, %600
  %602 = getelementptr inbounds i32, i32* %0, i64 24
  %603 = load i32, i32* %602, align 4
  %604 = xor i32 %601, %603
  %605 = lshr i32 %532, 24
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %606
  %608 = load i32, i32* %607, align 4
  %609 = lshr i32 %508, 16
  %610 = and i32 %609, 255
  %611 = zext i32 %610 to i64
  %612 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %611
  %613 = load i32, i32* %612, align 4
  %614 = xor i32 %608, %613
  %615 = lshr i32 %580, 8
  %616 = and i32 %615, 255
  %617 = zext i32 %616 to i64
  %618 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %617
  %619 = load i32, i32* %618, align 4
  %620 = xor i32 %614, %619
  %621 = and i32 %556, 255
  %622 = zext i32 %621 to i64
  %623 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %622
  %624 = load i32, i32* %623, align 4
  %625 = xor i32 %620, %624
  %626 = getelementptr inbounds i32, i32* %0, i64 25
  %627 = load i32, i32* %626, align 4
  %628 = xor i32 %625, %627
  %629 = lshr i32 %556, 24
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %630
  %632 = load i32, i32* %631, align 4
  %633 = lshr i32 %532, 16
  %634 = and i32 %633, 255
  %635 = zext i32 %634 to i64
  %636 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %635
  %637 = load i32, i32* %636, align 4
  %638 = xor i32 %632, %637
  %639 = lshr i32 %508, 8
  %640 = and i32 %639, 255
  %641 = zext i32 %640 to i64
  %642 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %641
  %643 = load i32, i32* %642, align 4
  %644 = xor i32 %638, %643
  %645 = and i32 %580, 255
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %646
  %648 = load i32, i32* %647, align 4
  %649 = xor i32 %644, %648
  %650 = getelementptr inbounds i32, i32* %0, i64 26
  %651 = load i32, i32* %650, align 4
  %652 = xor i32 %649, %651
  %653 = lshr i32 %580, 24
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %654
  %656 = load i32, i32* %655, align 4
  %657 = lshr i32 %556, 16
  %658 = and i32 %657, 255
  %659 = zext i32 %658 to i64
  %660 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %659
  %661 = load i32, i32* %660, align 4
  %662 = xor i32 %656, %661
  %663 = lshr i32 %532, 8
  %664 = and i32 %663, 255
  %665 = zext i32 %664 to i64
  %666 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %665
  %667 = load i32, i32* %666, align 4
  %668 = xor i32 %662, %667
  %669 = and i32 %508, 255
  %670 = zext i32 %669 to i64
  %671 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %670
  %672 = load i32, i32* %671, align 4
  %673 = xor i32 %668, %672
  %674 = getelementptr inbounds i32, i32* %0, i64 27
  %675 = load i32, i32* %674, align 4
  %676 = xor i32 %673, %675
  %677 = lshr i32 %604, 24
  %678 = zext i32 %677 to i64
  %679 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %678
  %680 = load i32, i32* %679, align 4
  %681 = lshr i32 %676, 16
  %682 = and i32 %681, 255
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %683
  %685 = load i32, i32* %684, align 4
  %686 = xor i32 %680, %685
  %687 = lshr i32 %652, 8
  %688 = and i32 %687, 255
  %689 = zext i32 %688 to i64
  %690 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %689
  %691 = load i32, i32* %690, align 4
  %692 = xor i32 %686, %691
  %693 = and i32 %628, 255
  %694 = zext i32 %693 to i64
  %695 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %694
  %696 = load i32, i32* %695, align 4
  %697 = xor i32 %692, %696
  %698 = getelementptr inbounds i32, i32* %0, i64 28
  %699 = load i32, i32* %698, align 4
  %700 = xor i32 %697, %699
  %701 = lshr i32 %628, 24
  %702 = zext i32 %701 to i64
  %703 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %702
  %704 = load i32, i32* %703, align 4
  %705 = lshr i32 %604, 16
  %706 = and i32 %705, 255
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %707
  %709 = load i32, i32* %708, align 4
  %710 = xor i32 %704, %709
  %711 = lshr i32 %676, 8
  %712 = and i32 %711, 255
  %713 = zext i32 %712 to i64
  %714 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %713
  %715 = load i32, i32* %714, align 4
  %716 = xor i32 %710, %715
  %717 = and i32 %652, 255
  %718 = zext i32 %717 to i64
  %719 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %718
  %720 = load i32, i32* %719, align 4
  %721 = xor i32 %716, %720
  %722 = getelementptr inbounds i32, i32* %0, i64 29
  %723 = load i32, i32* %722, align 4
  %724 = xor i32 %721, %723
  %725 = lshr i32 %652, 24
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %726
  %728 = load i32, i32* %727, align 4
  %729 = lshr i32 %628, 16
  %730 = and i32 %729, 255
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %731
  %733 = load i32, i32* %732, align 4
  %734 = xor i32 %728, %733
  %735 = lshr i32 %604, 8
  %736 = and i32 %735, 255
  %737 = zext i32 %736 to i64
  %738 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %737
  %739 = load i32, i32* %738, align 4
  %740 = xor i32 %734, %739
  %741 = and i32 %676, 255
  %742 = zext i32 %741 to i64
  %743 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %742
  %744 = load i32, i32* %743, align 4
  %745 = xor i32 %740, %744
  %746 = getelementptr inbounds i32, i32* %0, i64 30
  %747 = load i32, i32* %746, align 4
  %748 = xor i32 %745, %747
  %749 = lshr i32 %676, 24
  %750 = zext i32 %749 to i64
  %751 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %750
  %752 = load i32, i32* %751, align 4
  %753 = lshr i32 %652, 16
  %754 = and i32 %753, 255
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %755
  %757 = load i32, i32* %756, align 4
  %758 = xor i32 %752, %757
  %759 = lshr i32 %628, 8
  %760 = and i32 %759, 255
  %761 = zext i32 %760 to i64
  %762 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %761
  %763 = load i32, i32* %762, align 4
  %764 = xor i32 %758, %763
  %765 = and i32 %604, 255
  %766 = zext i32 %765 to i64
  %767 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %766
  %768 = load i32, i32* %767, align 4
  %769 = xor i32 %764, %768
  %770 = getelementptr inbounds i32, i32* %0, i64 31
  %771 = load i32, i32* %770, align 4
  %772 = xor i32 %769, %771
  %773 = lshr i32 %700, 24
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %774
  %776 = load i32, i32* %775, align 4
  %777 = lshr i32 %772, 16
  %778 = and i32 %777, 255
  %779 = zext i32 %778 to i64
  %780 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %779
  %781 = load i32, i32* %780, align 4
  %782 = xor i32 %776, %781
  %783 = lshr i32 %748, 8
  %784 = and i32 %783, 255
  %785 = zext i32 %784 to i64
  %786 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %785
  %787 = load i32, i32* %786, align 4
  %788 = xor i32 %782, %787
  %789 = and i32 %724, 255
  %790 = zext i32 %789 to i64
  %791 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %790
  %792 = load i32, i32* %791, align 4
  %793 = xor i32 %788, %792
  %794 = getelementptr inbounds i32, i32* %0, i64 32
  %795 = load i32, i32* %794, align 4
  %796 = xor i32 %793, %795
  %797 = lshr i32 %724, 24
  %798 = zext i32 %797 to i64
  %799 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %798
  %800 = load i32, i32* %799, align 4
  %801 = lshr i32 %700, 16
  %802 = and i32 %801, 255
  %803 = zext i32 %802 to i64
  %804 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %803
  %805 = load i32, i32* %804, align 4
  %806 = xor i32 %800, %805
  %807 = lshr i32 %772, 8
  %808 = and i32 %807, 255
  %809 = zext i32 %808 to i64
  %810 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %809
  %811 = load i32, i32* %810, align 4
  %812 = xor i32 %806, %811
  %813 = and i32 %748, 255
  %814 = zext i32 %813 to i64
  %815 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %814
  %816 = load i32, i32* %815, align 4
  %817 = xor i32 %812, %816
  %818 = getelementptr inbounds i32, i32* %0, i64 33
  %819 = load i32, i32* %818, align 4
  %820 = xor i32 %817, %819
  %821 = lshr i32 %748, 24
  %822 = zext i32 %821 to i64
  %823 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %822
  %824 = load i32, i32* %823, align 4
  %825 = lshr i32 %724, 16
  %826 = and i32 %825, 255
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %827
  %829 = load i32, i32* %828, align 4
  %830 = xor i32 %824, %829
  %831 = lshr i32 %700, 8
  %832 = and i32 %831, 255
  %833 = zext i32 %832 to i64
  %834 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %833
  %835 = load i32, i32* %834, align 4
  %836 = xor i32 %830, %835
  %837 = and i32 %772, 255
  %838 = zext i32 %837 to i64
  %839 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %838
  %840 = load i32, i32* %839, align 4
  %841 = xor i32 %836, %840
  %842 = getelementptr inbounds i32, i32* %0, i64 34
  %843 = load i32, i32* %842, align 4
  %844 = xor i32 %841, %843
  %845 = lshr i32 %772, 24
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %846
  %848 = load i32, i32* %847, align 4
  %849 = lshr i32 %748, 16
  %850 = and i32 %849, 255
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %851
  %853 = load i32, i32* %852, align 4
  %854 = xor i32 %848, %853
  %855 = lshr i32 %724, 8
  %856 = and i32 %855, 255
  %857 = zext i32 %856 to i64
  %858 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %857
  %859 = load i32, i32* %858, align 4
  %860 = xor i32 %854, %859
  %861 = and i32 %700, 255
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %862
  %864 = load i32, i32* %863, align 4
  %865 = xor i32 %860, %864
  %866 = getelementptr inbounds i32, i32* %0, i64 35
  %867 = load i32, i32* %866, align 4
  %868 = xor i32 %865, %867
  %869 = lshr i32 %796, 24
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %870
  %872 = load i32, i32* %871, align 4
  %873 = lshr i32 %868, 16
  %874 = and i32 %873, 255
  %875 = zext i32 %874 to i64
  %876 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %875
  %877 = load i32, i32* %876, align 4
  %878 = xor i32 %872, %877
  %879 = lshr i32 %844, 8
  %880 = and i32 %879, 255
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %881
  %883 = load i32, i32* %882, align 4
  %884 = xor i32 %878, %883
  %885 = and i32 %820, 255
  %886 = zext i32 %885 to i64
  %887 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %886
  %888 = load i32, i32* %887, align 4
  %889 = xor i32 %884, %888
  %890 = getelementptr inbounds i32, i32* %0, i64 36
  %891 = load i32, i32* %890, align 4
  %892 = xor i32 %889, %891
  %893 = lshr i32 %820, 24
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %894
  %896 = load i32, i32* %895, align 4
  %897 = lshr i32 %796, 16
  %898 = and i32 %897, 255
  %899 = zext i32 %898 to i64
  %900 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %899
  %901 = load i32, i32* %900, align 4
  %902 = xor i32 %896, %901
  %903 = lshr i32 %868, 8
  %904 = and i32 %903, 255
  %905 = zext i32 %904 to i64
  %906 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %905
  %907 = load i32, i32* %906, align 4
  %908 = xor i32 %902, %907
  %909 = and i32 %844, 255
  %910 = zext i32 %909 to i64
  %911 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %910
  %912 = load i32, i32* %911, align 4
  %913 = xor i32 %908, %912
  %914 = getelementptr inbounds i32, i32* %0, i64 37
  %915 = load i32, i32* %914, align 4
  %916 = xor i32 %913, %915
  %917 = lshr i32 %844, 24
  %918 = zext i32 %917 to i64
  %919 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %918
  %920 = load i32, i32* %919, align 4
  %921 = lshr i32 %820, 16
  %922 = and i32 %921, 255
  %923 = zext i32 %922 to i64
  %924 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %923
  %925 = load i32, i32* %924, align 4
  %926 = xor i32 %920, %925
  %927 = lshr i32 %796, 8
  %928 = and i32 %927, 255
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %929
  %931 = load i32, i32* %930, align 4
  %932 = xor i32 %926, %931
  %933 = and i32 %868, 255
  %934 = zext i32 %933 to i64
  %935 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %934
  %936 = load i32, i32* %935, align 4
  %937 = xor i32 %932, %936
  %938 = getelementptr inbounds i32, i32* %0, i64 38
  %939 = load i32, i32* %938, align 4
  %940 = xor i32 %937, %939
  %941 = lshr i32 %868, 24
  %942 = zext i32 %941 to i64
  %943 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %942
  %944 = load i32, i32* %943, align 4
  %945 = lshr i32 %844, 16
  %946 = and i32 %945, 255
  %947 = zext i32 %946 to i64
  %948 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %947
  %949 = load i32, i32* %948, align 4
  %950 = xor i32 %944, %949
  %951 = lshr i32 %820, 8
  %952 = and i32 %951, 255
  %953 = zext i32 %952 to i64
  %954 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %953
  %955 = load i32, i32* %954, align 4
  %956 = xor i32 %950, %955
  %957 = and i32 %796, 255
  %958 = zext i32 %957 to i64
  %959 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %958
  %960 = load i32, i32* %959, align 4
  %961 = xor i32 %956, %960
  %962 = getelementptr inbounds i32, i32* %0, i64 39
  %963 = load i32, i32* %962, align 4
  %964 = xor i32 %961, %963
  %965 = icmp sgt i32 %1, 10
  br i1 %965, label %966, label %1353

966:                                              ; preds = %4
  %967 = lshr i32 %892, 24
  %968 = zext i32 %967 to i64
  %969 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %968
  %970 = load i32, i32* %969, align 4
  %971 = lshr i32 %964, 16
  %972 = and i32 %971, 255
  %973 = zext i32 %972 to i64
  %974 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %973
  %975 = load i32, i32* %974, align 4
  %976 = xor i32 %970, %975
  %977 = lshr i32 %940, 8
  %978 = and i32 %977, 255
  %979 = zext i32 %978 to i64
  %980 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %979
  %981 = load i32, i32* %980, align 4
  %982 = xor i32 %976, %981
  %983 = and i32 %916, 255
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %984
  %986 = load i32, i32* %985, align 4
  %987 = xor i32 %982, %986
  %988 = getelementptr inbounds i32, i32* %0, i64 40
  %989 = load i32, i32* %988, align 4
  %990 = xor i32 %987, %989
  %991 = lshr i32 %916, 24
  %992 = zext i32 %991 to i64
  %993 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %992
  %994 = load i32, i32* %993, align 4
  %995 = lshr i32 %892, 16
  %996 = and i32 %995, 255
  %997 = zext i32 %996 to i64
  %998 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %997
  %999 = load i32, i32* %998, align 4
  %1000 = xor i32 %994, %999
  %1001 = lshr i32 %964, 8
  %1002 = and i32 %1001, 255
  %1003 = zext i32 %1002 to i64
  %1004 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1003
  %1005 = load i32, i32* %1004, align 4
  %1006 = xor i32 %1000, %1005
  %1007 = and i32 %940, 255
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1008
  %1010 = load i32, i32* %1009, align 4
  %1011 = xor i32 %1006, %1010
  %1012 = getelementptr inbounds i32, i32* %0, i64 41
  %1013 = load i32, i32* %1012, align 4
  %1014 = xor i32 %1011, %1013
  %1015 = lshr i32 %940, 24
  %1016 = zext i32 %1015 to i64
  %1017 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1016
  %1018 = load i32, i32* %1017, align 4
  %1019 = lshr i32 %916, 16
  %1020 = and i32 %1019, 255
  %1021 = zext i32 %1020 to i64
  %1022 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1021
  %1023 = load i32, i32* %1022, align 4
  %1024 = xor i32 %1018, %1023
  %1025 = lshr i32 %892, 8
  %1026 = and i32 %1025, 255
  %1027 = zext i32 %1026 to i64
  %1028 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1027
  %1029 = load i32, i32* %1028, align 4
  %1030 = xor i32 %1024, %1029
  %1031 = and i32 %964, 255
  %1032 = zext i32 %1031 to i64
  %1033 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1032
  %1034 = load i32, i32* %1033, align 4
  %1035 = xor i32 %1030, %1034
  %1036 = getelementptr inbounds i32, i32* %0, i64 42
  %1037 = load i32, i32* %1036, align 4
  %1038 = xor i32 %1035, %1037
  %1039 = lshr i32 %964, 24
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1040
  %1042 = load i32, i32* %1041, align 4
  %1043 = lshr i32 %940, 16
  %1044 = and i32 %1043, 255
  %1045 = zext i32 %1044 to i64
  %1046 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1045
  %1047 = load i32, i32* %1046, align 4
  %1048 = xor i32 %1042, %1047
  %1049 = lshr i32 %916, 8
  %1050 = and i32 %1049, 255
  %1051 = zext i32 %1050 to i64
  %1052 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1051
  %1053 = load i32, i32* %1052, align 4
  %1054 = xor i32 %1048, %1053
  %1055 = and i32 %892, 255
  %1056 = zext i32 %1055 to i64
  %1057 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1056
  %1058 = load i32, i32* %1057, align 4
  %1059 = xor i32 %1054, %1058
  %1060 = getelementptr inbounds i32, i32* %0, i64 43
  %1061 = load i32, i32* %1060, align 4
  %1062 = xor i32 %1059, %1061
  %1063 = lshr i32 %990, 24
  %1064 = zext i32 %1063 to i64
  %1065 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1064
  %1066 = load i32, i32* %1065, align 4
  %1067 = lshr i32 %1062, 16
  %1068 = and i32 %1067, 255
  %1069 = zext i32 %1068 to i64
  %1070 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1069
  %1071 = load i32, i32* %1070, align 4
  %1072 = xor i32 %1066, %1071
  %1073 = lshr i32 %1038, 8
  %1074 = and i32 %1073, 255
  %1075 = zext i32 %1074 to i64
  %1076 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1075
  %1077 = load i32, i32* %1076, align 4
  %1078 = xor i32 %1072, %1077
  %1079 = and i32 %1014, 255
  %1080 = zext i32 %1079 to i64
  %1081 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1080
  %1082 = load i32, i32* %1081, align 4
  %1083 = xor i32 %1078, %1082
  %1084 = getelementptr inbounds i32, i32* %0, i64 44
  %1085 = load i32, i32* %1084, align 4
  %1086 = xor i32 %1083, %1085
  %1087 = lshr i32 %1014, 24
  %1088 = zext i32 %1087 to i64
  %1089 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1088
  %1090 = load i32, i32* %1089, align 4
  %1091 = lshr i32 %990, 16
  %1092 = and i32 %1091, 255
  %1093 = zext i32 %1092 to i64
  %1094 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1093
  %1095 = load i32, i32* %1094, align 4
  %1096 = xor i32 %1090, %1095
  %1097 = lshr i32 %1062, 8
  %1098 = and i32 %1097, 255
  %1099 = zext i32 %1098 to i64
  %1100 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1099
  %1101 = load i32, i32* %1100, align 4
  %1102 = xor i32 %1096, %1101
  %1103 = and i32 %1038, 255
  %1104 = zext i32 %1103 to i64
  %1105 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1104
  %1106 = load i32, i32* %1105, align 4
  %1107 = xor i32 %1102, %1106
  %1108 = getelementptr inbounds i32, i32* %0, i64 45
  %1109 = load i32, i32* %1108, align 4
  %1110 = xor i32 %1107, %1109
  %1111 = lshr i32 %1038, 24
  %1112 = zext i32 %1111 to i64
  %1113 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1112
  %1114 = load i32, i32* %1113, align 4
  %1115 = lshr i32 %1014, 16
  %1116 = and i32 %1115, 255
  %1117 = zext i32 %1116 to i64
  %1118 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1117
  %1119 = load i32, i32* %1118, align 4
  %1120 = xor i32 %1114, %1119
  %1121 = lshr i32 %990, 8
  %1122 = and i32 %1121, 255
  %1123 = zext i32 %1122 to i64
  %1124 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1123
  %1125 = load i32, i32* %1124, align 4
  %1126 = xor i32 %1120, %1125
  %1127 = and i32 %1062, 255
  %1128 = zext i32 %1127 to i64
  %1129 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1128
  %1130 = load i32, i32* %1129, align 4
  %1131 = xor i32 %1126, %1130
  %1132 = getelementptr inbounds i32, i32* %0, i64 46
  %1133 = load i32, i32* %1132, align 4
  %1134 = xor i32 %1131, %1133
  %1135 = lshr i32 %1062, 24
  %1136 = zext i32 %1135 to i64
  %1137 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1136
  %1138 = load i32, i32* %1137, align 4
  %1139 = lshr i32 %1038, 16
  %1140 = and i32 %1139, 255
  %1141 = zext i32 %1140 to i64
  %1142 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1141
  %1143 = load i32, i32* %1142, align 4
  %1144 = xor i32 %1138, %1143
  %1145 = lshr i32 %1014, 8
  %1146 = and i32 %1145, 255
  %1147 = zext i32 %1146 to i64
  %1148 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1147
  %1149 = load i32, i32* %1148, align 4
  %1150 = xor i32 %1144, %1149
  %1151 = and i32 %990, 255
  %1152 = zext i32 %1151 to i64
  %1153 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1152
  %1154 = load i32, i32* %1153, align 4
  %1155 = xor i32 %1150, %1154
  %1156 = getelementptr inbounds i32, i32* %0, i64 47
  %1157 = load i32, i32* %1156, align 4
  %1158 = xor i32 %1155, %1157
  %1159 = icmp sgt i32 %1, 12
  br i1 %1159, label %1160, label %1353

1160:                                             ; preds = %966
  %1161 = lshr i32 %1086, 24
  %1162 = zext i32 %1161 to i64
  %1163 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1162
  %1164 = load i32, i32* %1163, align 4
  %1165 = lshr i32 %1158, 16
  %1166 = and i32 %1165, 255
  %1167 = zext i32 %1166 to i64
  %1168 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1167
  %1169 = load i32, i32* %1168, align 4
  %1170 = xor i32 %1164, %1169
  %1171 = lshr i32 %1134, 8
  %1172 = and i32 %1171, 255
  %1173 = zext i32 %1172 to i64
  %1174 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1173
  %1175 = load i32, i32* %1174, align 4
  %1176 = xor i32 %1170, %1175
  %1177 = and i32 %1110, 255
  %1178 = zext i32 %1177 to i64
  %1179 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1178
  %1180 = load i32, i32* %1179, align 4
  %1181 = xor i32 %1176, %1180
  %1182 = getelementptr inbounds i32, i32* %0, i64 48
  %1183 = load i32, i32* %1182, align 4
  %1184 = xor i32 %1181, %1183
  %1185 = lshr i32 %1110, 24
  %1186 = zext i32 %1185 to i64
  %1187 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1186
  %1188 = load i32, i32* %1187, align 4
  %1189 = lshr i32 %1086, 16
  %1190 = and i32 %1189, 255
  %1191 = zext i32 %1190 to i64
  %1192 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1191
  %1193 = load i32, i32* %1192, align 4
  %1194 = xor i32 %1188, %1193
  %1195 = lshr i32 %1158, 8
  %1196 = and i32 %1195, 255
  %1197 = zext i32 %1196 to i64
  %1198 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1197
  %1199 = load i32, i32* %1198, align 4
  %1200 = xor i32 %1194, %1199
  %1201 = and i32 %1134, 255
  %1202 = zext i32 %1201 to i64
  %1203 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1202
  %1204 = load i32, i32* %1203, align 4
  %1205 = xor i32 %1200, %1204
  %1206 = getelementptr inbounds i32, i32* %0, i64 49
  %1207 = load i32, i32* %1206, align 4
  %1208 = xor i32 %1205, %1207
  %1209 = lshr i32 %1134, 24
  %1210 = zext i32 %1209 to i64
  %1211 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1210
  %1212 = load i32, i32* %1211, align 4
  %1213 = lshr i32 %1110, 16
  %1214 = and i32 %1213, 255
  %1215 = zext i32 %1214 to i64
  %1216 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1215
  %1217 = load i32, i32* %1216, align 4
  %1218 = xor i32 %1212, %1217
  %1219 = lshr i32 %1086, 8
  %1220 = and i32 %1219, 255
  %1221 = zext i32 %1220 to i64
  %1222 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1221
  %1223 = load i32, i32* %1222, align 4
  %1224 = xor i32 %1218, %1223
  %1225 = and i32 %1158, 255
  %1226 = zext i32 %1225 to i64
  %1227 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1226
  %1228 = load i32, i32* %1227, align 4
  %1229 = xor i32 %1224, %1228
  %1230 = getelementptr inbounds i32, i32* %0, i64 50
  %1231 = load i32, i32* %1230, align 4
  %1232 = xor i32 %1229, %1231
  %1233 = lshr i32 %1158, 24
  %1234 = zext i32 %1233 to i64
  %1235 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1234
  %1236 = load i32, i32* %1235, align 4
  %1237 = lshr i32 %1134, 16
  %1238 = and i32 %1237, 255
  %1239 = zext i32 %1238 to i64
  %1240 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1239
  %1241 = load i32, i32* %1240, align 4
  %1242 = xor i32 %1236, %1241
  %1243 = lshr i32 %1110, 8
  %1244 = and i32 %1243, 255
  %1245 = zext i32 %1244 to i64
  %1246 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1245
  %1247 = load i32, i32* %1246, align 4
  %1248 = xor i32 %1242, %1247
  %1249 = and i32 %1086, 255
  %1250 = zext i32 %1249 to i64
  %1251 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1250
  %1252 = load i32, i32* %1251, align 4
  %1253 = xor i32 %1248, %1252
  %1254 = getelementptr inbounds i32, i32* %0, i64 51
  %1255 = load i32, i32* %1254, align 4
  %1256 = xor i32 %1253, %1255
  %1257 = lshr i32 %1184, 24
  %1258 = zext i32 %1257 to i64
  %1259 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1258
  %1260 = load i32, i32* %1259, align 4
  %1261 = lshr i32 %1256, 16
  %1262 = and i32 %1261, 255
  %1263 = zext i32 %1262 to i64
  %1264 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1263
  %1265 = load i32, i32* %1264, align 4
  %1266 = xor i32 %1260, %1265
  %1267 = lshr i32 %1232, 8
  %1268 = and i32 %1267, 255
  %1269 = zext i32 %1268 to i64
  %1270 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1269
  %1271 = load i32, i32* %1270, align 4
  %1272 = xor i32 %1266, %1271
  %1273 = and i32 %1208, 255
  %1274 = zext i32 %1273 to i64
  %1275 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1274
  %1276 = load i32, i32* %1275, align 4
  %1277 = xor i32 %1272, %1276
  %1278 = getelementptr inbounds i32, i32* %0, i64 52
  %1279 = load i32, i32* %1278, align 4
  %1280 = xor i32 %1277, %1279
  %1281 = lshr i32 %1208, 24
  %1282 = zext i32 %1281 to i64
  %1283 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1282
  %1284 = load i32, i32* %1283, align 4
  %1285 = lshr i32 %1184, 16
  %1286 = and i32 %1285, 255
  %1287 = zext i32 %1286 to i64
  %1288 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1287
  %1289 = load i32, i32* %1288, align 4
  %1290 = xor i32 %1284, %1289
  %1291 = lshr i32 %1256, 8
  %1292 = and i32 %1291, 255
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1293
  %1295 = load i32, i32* %1294, align 4
  %1296 = xor i32 %1290, %1295
  %1297 = and i32 %1232, 255
  %1298 = zext i32 %1297 to i64
  %1299 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1298
  %1300 = load i32, i32* %1299, align 4
  %1301 = xor i32 %1296, %1300
  %1302 = getelementptr inbounds i32, i32* %0, i64 53
  %1303 = load i32, i32* %1302, align 4
  %1304 = xor i32 %1301, %1303
  %1305 = lshr i32 %1232, 24
  %1306 = zext i32 %1305 to i64
  %1307 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1306
  %1308 = load i32, i32* %1307, align 4
  %1309 = lshr i32 %1208, 16
  %1310 = and i32 %1309, 255
  %1311 = zext i32 %1310 to i64
  %1312 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1311
  %1313 = load i32, i32* %1312, align 4
  %1314 = xor i32 %1308, %1313
  %1315 = lshr i32 %1184, 8
  %1316 = and i32 %1315, 255
  %1317 = zext i32 %1316 to i64
  %1318 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1317
  %1319 = load i32, i32* %1318, align 4
  %1320 = xor i32 %1314, %1319
  %1321 = and i32 %1256, 255
  %1322 = zext i32 %1321 to i64
  %1323 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1322
  %1324 = load i32, i32* %1323, align 4
  %1325 = xor i32 %1320, %1324
  %1326 = getelementptr inbounds i32, i32* %0, i64 54
  %1327 = load i32, i32* %1326, align 4
  %1328 = xor i32 %1325, %1327
  %1329 = lshr i32 %1256, 24
  %1330 = zext i32 %1329 to i64
  %1331 = getelementptr inbounds [256 x i32], [256 x i32]* @Td0, i64 0, i64 %1330
  %1332 = load i32, i32* %1331, align 4
  %1333 = lshr i32 %1232, 16
  %1334 = and i32 %1333, 255
  %1335 = zext i32 %1334 to i64
  %1336 = getelementptr inbounds [256 x i32], [256 x i32]* @Td1, i64 0, i64 %1335
  %1337 = load i32, i32* %1336, align 4
  %1338 = xor i32 %1332, %1337
  %1339 = lshr i32 %1208, 8
  %1340 = and i32 %1339, 255
  %1341 = zext i32 %1340 to i64
  %1342 = getelementptr inbounds [256 x i32], [256 x i32]* @Td2, i64 0, i64 %1341
  %1343 = load i32, i32* %1342, align 4
  %1344 = xor i32 %1338, %1343
  %1345 = and i32 %1184, 255
  %1346 = zext i32 %1345 to i64
  %1347 = getelementptr inbounds [256 x i32], [256 x i32]* @Td3, i64 0, i64 %1346
  %1348 = load i32, i32* %1347, align 4
  %1349 = xor i32 %1344, %1348
  %1350 = getelementptr inbounds i32, i32* %0, i64 55
  %1351 = load i32, i32* %1350, align 4
  %1352 = xor i32 %1349, %1351
  br label %1353

1353:                                             ; preds = %1160, %966, %4
  %.16 = phi i32 [ %892, %4 ], [ %1280, %1160 ], [ %1086, %966 ]
  %.14 = phi i32 [ %916, %4 ], [ %1304, %1160 ], [ %1110, %966 ]
  %.12 = phi i32 [ %940, %4 ], [ %1328, %1160 ], [ %1134, %966 ]
  %.1 = phi i32 [ %964, %4 ], [ %1352, %1160 ], [ %1158, %966 ]
  %1354 = shl i32 %1, 2
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds i32, i32* %0, i64 %1355
  %1357 = lshr i32 %.16, 24
  %1358 = zext i32 %1357 to i64
  %1359 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1358
  %1360 = load i32, i32* %1359, align 4
  %1361 = and i32 %1360, -16777216
  %1362 = lshr i32 %.1, 16
  %1363 = and i32 %1362, 255
  %1364 = zext i32 %1363 to i64
  %1365 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1364
  %1366 = load i32, i32* %1365, align 4
  %1367 = and i32 %1366, 16711680
  %1368 = xor i32 %1361, %1367
  %1369 = lshr i32 %.12, 8
  %1370 = and i32 %1369, 255
  %1371 = zext i32 %1370 to i64
  %1372 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1371
  %1373 = load i32, i32* %1372, align 4
  %1374 = and i32 %1373, 65280
  %1375 = xor i32 %1368, %1374
  %1376 = and i32 %.14, 255
  %1377 = zext i32 %1376 to i64
  %1378 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1377
  %1379 = load i32, i32* %1378, align 4
  %1380 = and i32 %1379, 255
  %1381 = xor i32 %1375, %1380
  %1382 = getelementptr inbounds i32, i32* %1356, i64 0
  %1383 = load i32, i32* %1382, align 4
  %1384 = xor i32 %1381, %1383
  %1385 = lshr i32 %1384, 24
  %1386 = trunc i32 %1385 to i8
  %1387 = getelementptr inbounds i8, i8* %3, i64 0
  store i8 %1386, i8* %1387, align 1
  %1388 = lshr i32 %1384, 16
  %1389 = trunc i32 %1388 to i8
  %1390 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %1389, i8* %1390, align 1
  %1391 = lshr i32 %1384, 8
  %1392 = trunc i32 %1391 to i8
  %1393 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %1392, i8* %1393, align 1
  %1394 = trunc i32 %1384 to i8
  %1395 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %1394, i8* %1395, align 1
  %1396 = lshr i32 %.14, 24
  %1397 = zext i32 %1396 to i64
  %1398 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1397
  %1399 = load i32, i32* %1398, align 4
  %1400 = and i32 %1399, -16777216
  %1401 = lshr i32 %.16, 16
  %1402 = and i32 %1401, 255
  %1403 = zext i32 %1402 to i64
  %1404 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1403
  %1405 = load i32, i32* %1404, align 4
  %1406 = and i32 %1405, 16711680
  %1407 = xor i32 %1400, %1406
  %1408 = lshr i32 %.1, 8
  %1409 = and i32 %1408, 255
  %1410 = zext i32 %1409 to i64
  %1411 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1410
  %1412 = load i32, i32* %1411, align 4
  %1413 = and i32 %1412, 65280
  %1414 = xor i32 %1407, %1413
  %1415 = and i32 %.12, 255
  %1416 = zext i32 %1415 to i64
  %1417 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1416
  %1418 = load i32, i32* %1417, align 4
  %1419 = and i32 %1418, 255
  %1420 = xor i32 %1414, %1419
  %1421 = getelementptr inbounds i32, i32* %1356, i64 1
  %1422 = load i32, i32* %1421, align 4
  %1423 = xor i32 %1420, %1422
  %1424 = lshr i32 %1423, 24
  %1425 = trunc i32 %1424 to i8
  %1426 = getelementptr inbounds i8, i8* %3, i64 4
  %1427 = getelementptr inbounds i8, i8* %1426, i64 0
  store i8 %1425, i8* %1427, align 1
  %1428 = lshr i32 %1423, 16
  %1429 = trunc i32 %1428 to i8
  %1430 = getelementptr inbounds i8, i8* %3, i64 4
  %1431 = getelementptr inbounds i8, i8* %1430, i64 1
  store i8 %1429, i8* %1431, align 1
  %1432 = lshr i32 %1423, 8
  %1433 = trunc i32 %1432 to i8
  %1434 = getelementptr inbounds i8, i8* %3, i64 4
  %1435 = getelementptr inbounds i8, i8* %1434, i64 2
  store i8 %1433, i8* %1435, align 1
  %1436 = trunc i32 %1423 to i8
  %1437 = getelementptr inbounds i8, i8* %3, i64 4
  %1438 = getelementptr inbounds i8, i8* %1437, i64 3
  store i8 %1436, i8* %1438, align 1
  %1439 = lshr i32 %.12, 24
  %1440 = zext i32 %1439 to i64
  %1441 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1440
  %1442 = load i32, i32* %1441, align 4
  %1443 = and i32 %1442, -16777216
  %1444 = lshr i32 %.14, 16
  %1445 = and i32 %1444, 255
  %1446 = zext i32 %1445 to i64
  %1447 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1446
  %1448 = load i32, i32* %1447, align 4
  %1449 = and i32 %1448, 16711680
  %1450 = xor i32 %1443, %1449
  %1451 = lshr i32 %.16, 8
  %1452 = and i32 %1451, 255
  %1453 = zext i32 %1452 to i64
  %1454 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1453
  %1455 = load i32, i32* %1454, align 4
  %1456 = and i32 %1455, 65280
  %1457 = xor i32 %1450, %1456
  %1458 = and i32 %.1, 255
  %1459 = zext i32 %1458 to i64
  %1460 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1459
  %1461 = load i32, i32* %1460, align 4
  %1462 = and i32 %1461, 255
  %1463 = xor i32 %1457, %1462
  %1464 = getelementptr inbounds i32, i32* %1356, i64 2
  %1465 = load i32, i32* %1464, align 4
  %1466 = xor i32 %1463, %1465
  %1467 = lshr i32 %1466, 24
  %1468 = trunc i32 %1467 to i8
  %1469 = getelementptr inbounds i8, i8* %3, i64 8
  %1470 = getelementptr inbounds i8, i8* %1469, i64 0
  store i8 %1468, i8* %1470, align 1
  %1471 = lshr i32 %1466, 16
  %1472 = trunc i32 %1471 to i8
  %1473 = getelementptr inbounds i8, i8* %3, i64 8
  %1474 = getelementptr inbounds i8, i8* %1473, i64 1
  store i8 %1472, i8* %1474, align 1
  %1475 = lshr i32 %1466, 8
  %1476 = trunc i32 %1475 to i8
  %1477 = getelementptr inbounds i8, i8* %3, i64 8
  %1478 = getelementptr inbounds i8, i8* %1477, i64 2
  store i8 %1476, i8* %1478, align 1
  %1479 = trunc i32 %1466 to i8
  %1480 = getelementptr inbounds i8, i8* %3, i64 8
  %1481 = getelementptr inbounds i8, i8* %1480, i64 3
  store i8 %1479, i8* %1481, align 1
  %1482 = lshr i32 %.1, 24
  %1483 = zext i32 %1482 to i64
  %1484 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1483
  %1485 = load i32, i32* %1484, align 4
  %1486 = and i32 %1485, -16777216
  %1487 = lshr i32 %.12, 16
  %1488 = and i32 %1487, 255
  %1489 = zext i32 %1488 to i64
  %1490 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1489
  %1491 = load i32, i32* %1490, align 4
  %1492 = and i32 %1491, 16711680
  %1493 = xor i32 %1486, %1492
  %1494 = lshr i32 %.14, 8
  %1495 = and i32 %1494, 255
  %1496 = zext i32 %1495 to i64
  %1497 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1496
  %1498 = load i32, i32* %1497, align 4
  %1499 = and i32 %1498, 65280
  %1500 = xor i32 %1493, %1499
  %1501 = and i32 %.16, 255
  %1502 = zext i32 %1501 to i64
  %1503 = getelementptr inbounds [256 x i32], [256 x i32]* @Td4, i64 0, i64 %1502
  %1504 = load i32, i32* %1503, align 4
  %1505 = and i32 %1504, 255
  %1506 = xor i32 %1500, %1505
  %1507 = getelementptr inbounds i32, i32* %1356, i64 3
  %1508 = load i32, i32* %1507, align 4
  %1509 = xor i32 %1506, %1508
  %1510 = lshr i32 %1509, 24
  %1511 = trunc i32 %1510 to i8
  %1512 = getelementptr inbounds i8, i8* %3, i64 12
  %1513 = getelementptr inbounds i8, i8* %1512, i64 0
  store i8 %1511, i8* %1513, align 1
  %1514 = lshr i32 %1509, 16
  %1515 = trunc i32 %1514 to i8
  %1516 = getelementptr inbounds i8, i8* %3, i64 12
  %1517 = getelementptr inbounds i8, i8* %1516, i64 1
  store i8 %1515, i8* %1517, align 1
  %1518 = lshr i32 %1509, 8
  %1519 = trunc i32 %1518 to i8
  %1520 = getelementptr inbounds i8, i8* %3, i64 12
  %1521 = getelementptr inbounds i8, i8* %1520, i64 2
  store i8 %1519, i8* %1521, align 1
  %1522 = trunc i32 %1509 to i8
  %1523 = getelementptr inbounds i8, i8* %3, i64 12
  %1524 = getelementptr inbounds i8, i8* %1523, i64 3
  store i8 %1522, i8* %1524, align 1
  ret void
}

define void @randombytes(i8* %0, i64 %len., i64 %1) {
  %3 = icmp sge i64 %1, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.randombytes, i64 0, i64 0)) #4
  unreachable

5:                                                ; preds = %2
  %6 = load i32, i32* @randombytes.fd, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %.preheader, label %16

.preheader:                                       ; preds = %5
  %8 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %8, i32* @randombytes.fd, align 4
  %9 = load i32, i32* @randombytes.fd, align 4
  %10 = icmp ne i32 %9, -1
  br i1 %10, label %.loopexit, label %.lr.ph7

.lr.ph7:                                          ; preds = %.preheader
  br label %11

11:                                               ; preds = %109, %.lr.ph7
  %12 = call i32 @sleep(i32 1)
  %13 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %13, i32* @randombytes.fd, align 4
  %14 = load i32, i32* @randombytes.fd, align 4
  %15 = icmp ne i32 %14, -1
  br i1 %15, label %..loopexit_crit_edge, label %79

..loopexit_crit_edge:                             ; preds = %109, %104, %99, %94, %89, %84, %79, %11
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %.preheader
  br label %16

16:                                               ; preds = %.loopexit, %5
  %17 = icmp sgt i64 %1, 0
  br i1 %17, label %.lr.ph.lr.ph, label %.outer._crit_edge

.lr.ph.lr.ph:                                     ; preds = %16
  br label %.lr.ph

.lr.ph:                                           ; preds = %.outer, %.lr.ph.lr.ph
  %18 = phi i1 [ %17, %.lr.ph.lr.ph ], [ %28, %.outer ]
  %.0.ph6 = phi i8* [ %0, %.lr.ph.lr.ph ], [ %26, %.outer ]
  %.01.ph5 = phi i64 [ %1, %.lr.ph.lr.ph ], [ %27, %.outer ]
  br label %19

19:                                               ; preds = %77, %.lr.ph
  %20 = icmp slt i64 %.01.ph5, 1048576
  %.01. = select i1 %20, i64 %.01.ph5, i64 1048576
  %21 = load i32, i32* @randombytes.fd, align 4
  %22 = call i64 @read(i32 %21, i8* %.0.ph6, i64 %.01.)
  %23 = icmp slt i64 %22, 1
  br i1 %23, label %24, label %.outer

24:                                               ; preds = %19
  %25 = call i32 @sleep(i32 1)
  br i1 %18, label %30, label %._crit_edge

.outer:                                           ; preds = %72, %65, %58, %51, %44, %37, %30, %19
  %.lcssa = phi i64 [ %22, %19 ], [ %33, %30 ], [ %40, %37 ], [ %47, %44 ], [ %54, %51 ], [ %61, %58 ], [ %68, %65 ], [ %75, %72 ]
  %26 = getelementptr inbounds i8, i8* %.0.ph6, i64 %.lcssa
  %27 = sub nsw i64 %.01.ph5, %.lcssa
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %.lr.ph, label %.outer..outer._crit_edge_crit_edge

.outer..outer._crit_edge_crit_edge:               ; preds = %.outer
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer..outer._crit_edge_crit_edge, %16
  br label %29

._crit_edge:                                      ; preds = %77, %70, %63, %56, %49, %42, %35, %24
  br label %29

29:                                               ; preds = %._crit_edge, %.outer._crit_edge
  ret void

30:                                               ; preds = %24
  %31 = icmp slt i64 %.01.ph5, 1048576
  %.01..1 = select i1 %31, i64 %.01.ph5, i64 1048576
  %32 = load i32, i32* @randombytes.fd, align 4
  %33 = call i64 @read(i32 %32, i8* %.0.ph6, i64 %.01..1)
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %35, label %.outer

35:                                               ; preds = %30
  %36 = call i32 @sleep(i32 1)
  br i1 %18, label %37, label %._crit_edge

37:                                               ; preds = %35
  %38 = icmp slt i64 %.01.ph5, 1048576
  %.01..2 = select i1 %38, i64 %.01.ph5, i64 1048576
  %39 = load i32, i32* @randombytes.fd, align 4
  %40 = call i64 @read(i32 %39, i8* %.0.ph6, i64 %.01..2)
  %41 = icmp slt i64 %40, 1
  br i1 %41, label %42, label %.outer

42:                                               ; preds = %37
  %43 = call i32 @sleep(i32 1)
  br i1 %18, label %44, label %._crit_edge

44:                                               ; preds = %42
  %45 = icmp slt i64 %.01.ph5, 1048576
  %.01..3 = select i1 %45, i64 %.01.ph5, i64 1048576
  %46 = load i32, i32* @randombytes.fd, align 4
  %47 = call i64 @read(i32 %46, i8* %.0.ph6, i64 %.01..3)
  %48 = icmp slt i64 %47, 1
  br i1 %48, label %49, label %.outer

49:                                               ; preds = %44
  %50 = call i32 @sleep(i32 1)
  br i1 %18, label %51, label %._crit_edge

51:                                               ; preds = %49
  %52 = icmp slt i64 %.01.ph5, 1048576
  %.01..4 = select i1 %52, i64 %.01.ph5, i64 1048576
  %53 = load i32, i32* @randombytes.fd, align 4
  %54 = call i64 @read(i32 %53, i8* %.0.ph6, i64 %.01..4)
  %55 = icmp slt i64 %54, 1
  br i1 %55, label %56, label %.outer

56:                                               ; preds = %51
  %57 = call i32 @sleep(i32 1)
  br i1 %18, label %58, label %._crit_edge

58:                                               ; preds = %56
  %59 = icmp slt i64 %.01.ph5, 1048576
  %.01..5 = select i1 %59, i64 %.01.ph5, i64 1048576
  %60 = load i32, i32* @randombytes.fd, align 4
  %61 = call i64 @read(i32 %60, i8* %.0.ph6, i64 %.01..5)
  %62 = icmp slt i64 %61, 1
  br i1 %62, label %63, label %.outer

63:                                               ; preds = %58
  %64 = call i32 @sleep(i32 1)
  br i1 %18, label %65, label %._crit_edge

65:                                               ; preds = %63
  %66 = icmp slt i64 %.01.ph5, 1048576
  %.01..6 = select i1 %66, i64 %.01.ph5, i64 1048576
  %67 = load i32, i32* @randombytes.fd, align 4
  %68 = call i64 @read(i32 %67, i8* %.0.ph6, i64 %.01..6)
  %69 = icmp slt i64 %68, 1
  br i1 %69, label %70, label %.outer

70:                                               ; preds = %65
  %71 = call i32 @sleep(i32 1)
  br i1 %18, label %72, label %._crit_edge

72:                                               ; preds = %70
  %73 = icmp slt i64 %.01.ph5, 1048576
  %.01..7 = select i1 %73, i64 %.01.ph5, i64 1048576
  %74 = load i32, i32* @randombytes.fd, align 4
  %75 = call i64 @read(i32 %74, i8* %.0.ph6, i64 %.01..7)
  %76 = icmp slt i64 %75, 1
  br i1 %76, label %77, label %.outer

77:                                               ; preds = %72
  %78 = call i32 @sleep(i32 1)
  br i1 %18, label %19, label %._crit_edge, !llvm.loop !4

79:                                               ; preds = %11
  %80 = call i32 @sleep(i32 1)
  %81 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %81, i32* @randombytes.fd, align 4
  %82 = load i32, i32* @randombytes.fd, align 4
  %83 = icmp ne i32 %82, -1
  br i1 %83, label %..loopexit_crit_edge, label %84

84:                                               ; preds = %79
  %85 = call i32 @sleep(i32 1)
  %86 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %86, i32* @randombytes.fd, align 4
  %87 = load i32, i32* @randombytes.fd, align 4
  %88 = icmp ne i32 %87, -1
  br i1 %88, label %..loopexit_crit_edge, label %89

89:                                               ; preds = %84
  %90 = call i32 @sleep(i32 1)
  %91 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %91, i32* @randombytes.fd, align 4
  %92 = load i32, i32* @randombytes.fd, align 4
  %93 = icmp ne i32 %92, -1
  br i1 %93, label %..loopexit_crit_edge, label %94

94:                                               ; preds = %89
  %95 = call i32 @sleep(i32 1)
  %96 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %96, i32* @randombytes.fd, align 4
  %97 = load i32, i32* @randombytes.fd, align 4
  %98 = icmp ne i32 %97, -1
  br i1 %98, label %..loopexit_crit_edge, label %99

99:                                               ; preds = %94
  %100 = call i32 @sleep(i32 1)
  %101 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %101, i32* @randombytes.fd, align 4
  %102 = load i32, i32* @randombytes.fd, align 4
  %103 = icmp ne i32 %102, -1
  br i1 %103, label %..loopexit_crit_edge, label %104

104:                                              ; preds = %99
  %105 = call i32 @sleep(i32 1)
  %106 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %106, i32* @randombytes.fd, align 4
  %107 = load i32, i32* @randombytes.fd, align 4
  %108 = icmp ne i32 %107, -1
  br i1 %108, label %..loopexit_crit_edge, label %109

109:                                              ; preds = %104
  %110 = call i32 @sleep(i32 1)
  %111 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 0)
  store i32 %111, i32* @randombytes.fd, align 4
  %112 = load i32, i32* @randombytes.fd, align 4
  %113 = icmp ne i32 %112, -1
  br i1 %113, label %..loopexit_crit_edge, label %11, !llvm.loop !6
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #3

declare i32 @open(i8*, i32, ...) #2

declare i32 @sleep(i32) #2

declare i64 @read(i32, i8*, i64) #2

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local zeroext i8 @randombit() #0 {
  %1 = alloca i8, align 1
  store i8 0, i8* %1, align 1
  %2 = sext i32 1 to i64
  call void @randombytes(i8* %1, i64 %2, i64 1)
  %3 = load i8, i8* %1, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 1
  %6 = trunc i32 %5 to i8
  ret i8 %6
}

attributes #0 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind }

!llvm.ident = !{!0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
